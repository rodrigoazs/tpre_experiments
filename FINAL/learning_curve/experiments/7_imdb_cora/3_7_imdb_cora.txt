Starting experiment #3 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.14185106490048932;  // std dev = 0,000, 751,000 (wgt'ed) examples reached here.  /* #neg=751 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839235;  // std dev = 0,000, 718,000 (wgt'ed) examples reached here.  /* #neg=718 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360671;  // std dev = 0,000, 725,000 (wgt'ed) examples reached here.  /* #neg=725 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1015963294878362;  // std dev = 4,34e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783519;  // std dev = 4,23e-07, 665,000 (wgt'ed) examples reached here.  /* #neg=665 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926198;  // std dev = 0,000, 684,000 (wgt'ed) examples reached here.  /* #neg=684 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.08518475138839675;  // std dev = 1,33e-07, 724,000 (wgt'ed) examples reached here.  /* #neg=724 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109273;  // std dev = 0,000, 683,000 (wgt'ed) examples reached here.  /* #neg=683 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333645;  // std dev = 2,60e-07, 732,000 (wgt'ed) examples reached here.  /* #neg=732 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2,24e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420256;  // std dev = 1,83e-07, 706,000 (wgt'ed) examples reached here.  /* #neg=706 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202532;  // std dev = 2,22e-07, 683,000 (wgt'ed) examples reached here.  /* #neg=683 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 218007

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 31946

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.15603532875868834;  // std dev = 17,795, 1.514,000 (wgt'ed) examples reached here.  /* #neg=1.063 #pos=451 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,23e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.13093083207900036;  // std dev = 17,858, 1.540,000 (wgt'ed) examples reached here.  /* #neg=1.089 #pos=451 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,32e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.11351299406906283;  // std dev = 17,844, 1.534,000 (wgt'ed) examples reached here.  /* #neg=1.083 #pos=451 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.08882112961517884;  // std dev = 17,936, 1.573,000 (wgt'ed) examples reached here.  /* #neg=1.122 #pos=451 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.0861080492930028;  // std dev = 17,787, 1.511,000 (wgt'ed) examples reached here.  /* #neg=1.060 #pos=451 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.06215859292656095;  // std dev = 17,903, 1.559,000 (wgt'ed) examples reached here.  /* #neg=1.108 #pos=451 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.06983464507903128;  // std dev = 17,665, 1.464,000 (wgt'ed) examples reached here.  /* #neg=1.013 #pos=451 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3,65e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.040969152304703736;  // std dev = 17,868, 1.544,000 (wgt'ed) examples reached here.  /* #neg=1.093 #pos=451 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8,16e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.03643800229901;  // std dev = 17,827, 1.527,000 (wgt'ed) examples reached here.  /* #neg=1.076 #pos=451 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,37e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.03490210492027547;  // std dev = 17,757, 1.499,000 (wgt'ed) examples reached here.  /* #neg=1.048 #pos=451 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.326283
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.315 seconds
Total inference time: 3.806 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.573724
   AUC PR    = 0.165821
   CLL	      = -0.328281
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147448
   F1        = 0.257002


Total scoring time: 5.14 seconds
Parameter learned model CLL: -0.328281


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.795, 1063, 451], 'true': [0.0, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.858, 1089, 451], 'true': [2.23e-07, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.844, 1083, 451], 'true': [3.32e-07, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.936, 1122, 451], 'true': [0.0, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.787, 1060, 451], 'true': [0.0, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.903, 1108, 451], 'true': [0.0, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.665, 1013, 451], 'true': [0.0, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.868, 1093, 451], 'true': [3.65e-08, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.827, 1076, 451], 'true': [8.16e-08, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.757, 1048, 451], 'true': [5.37e-08, 0, 78]}]]
[{'': [-1.002047447866808e-15, 0.20915009013189134]}, {'': [6.376665577334232e-16, 0.2070918367346954]}, {'': [1.4119759492668657e-15, 0.20756507430869686]}, {'': [-2.2773805633336544e-17, 0.204508777935351]}, {'': [-3.8715469576672126e-16, 0.20938881469708584]}, {'': [-1.1386902816668272e-17, 0.20560045521853215]}, {'': [-9.678867394168032e-17, 0.2131590783540729]}, {'': [1.708035422500241e-17, 0.2067769436763447]}, {'': [8.540177112501205e-17, 0.2081185249229047]}, {'': [3.700743415417188e-17, 0.21034614581835462]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17317563227723434;  // std dev = 0,465, 1.311,000 (wgt'ed) examples reached here.  /* #neg=898 #pos=413 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.2867203636709409;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.04442344490343392;  // std dev = 3,932, 102,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.014775441123608749;  // std dev = 3,311, 83,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,23e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15004160259023333;  // std dev = 0,464, 1.314,000 (wgt'ed) examples reached here.  /* #neg=901 #pos=413 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6342643621506922;  // std dev = 0,912, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14082352961415123;  // std dev = 1,632, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0190009700156456;  // std dev = 4,087, 122,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=20 */
%   | | | else return 0.08555581275962093;  // std dev = 2,769, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,32e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12414620456942067;  // std dev = 0,463, 1.332,000 (wgt'ed) examples reached here.  /* #neg=919 #pos=413 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7331521886279346;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1311100180676452;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 4.18281913852175E-4;  // std dev = 4,128, 135,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=20 */
%   | | | else return 0.13649619950643122;  // std dev = 2,654, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09868405066268375;  // std dev = 0,460, 1.358,000 (wgt'ed) examples reached here.  /* #neg=945 #pos=413 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.08060083812096001;  // std dev = 3,565, 70,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | | else return -0.036078618018013965;  // std dev = 2,392, 56,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0021386522632142507;  // std dev = 3,229, 85,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=13 */
%   | | | else return -0.17319187847258397;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09062524751487892;  // std dev = 0,464, 1.321,000 (wgt'ed) examples reached here.  /* #neg=908 #pos=413 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20814589813781784;  // std dev = 1,411, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.18955201279185563;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.01755695772821943;  // std dev = 4,034, 108,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
%   | | | else return 0.0028518681433010056;  // std dev = 3,204, 84,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7262705959668974;  // std dev = 3,910, 416,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=400 */
%   | | | else return -0.21653992024232424;  // std dev = 3,757, 936,000 (wgt'ed) examples reached here.  /* #neg=922 #pos=14 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.16690370268383498;  // std dev = 1,929, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | | | else return 0.13751742649124343;  // std dev = 3,005, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.6369367699637638;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.08183004200492322;  // std dev = 2,751, 39,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.15013883643160775;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5634392745848853;  // std dev = 0,289, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.201030331649552;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.046709036822425026;  // std dev = 2,152, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.18089838634596517;  // std dev = 0,078, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.04987964025455029;  // std dev = 0,383, 1.277,000 (wgt'ed) examples reached here.  /* #neg=881 #pos=396 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.0016398325722202034;  // std dev = 3,701, 134,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=20 */
%   | | | else return 0.0360596212359337;  // std dev = 2,750, 42,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3,65e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5461286049774481;  // std dev = 4,510, 421,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=400 */
%   | | | else return -0.1876132728305238;  // std dev = 3,753, 942,000 (wgt'ed) examples reached here.  /* #neg=928 #pos=14 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12821291421162173;  // std dev = 1,909, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | | else return 0.06436920258984884;  // std dev = 3,124, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return 0.08543040438727105;  // std dev = 0,440, 54,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8,16e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4268275486728308;  // std dev = 3,836, 416,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=401 */
%   | | | else return -0.16263476681712954;  // std dev = 3,333, 990,000 (wgt'ed) examples reached here.  /* #neg=979 #pos=11 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.01600614596155668;  // std dev = 2,184, 33,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.13182477077597707;  // std dev = 2,928, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.47163812615881306;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.19167613506978756;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.02893740858578054;  // std dev = 2,756, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,37e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.31929084859995666;  // std dev = 4,135, 418,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=401 */
%   | | | else return -0.14026716009174106;  // std dev = 3,324, 994,000 (wgt'ed) examples reached here.  /* #neg=983 #pos=11 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.01642783916123134;  // std dev = 2,227, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | | else return 0.10038130227675901;  // std dev = 2,963, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.35497039165210353;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.008517073210549102;  // std dev = 2,783, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return -0.1501756644084145;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.950552
   AUC PR    = 0.61238
   CLL	      = -0.168598
   Precision = 0.375887 at threshold = 0.5
   Recall    = 0.86413
   F1        = 0.523888


Total learning time: 921.211 seconds
Total inference time: 44.731 seconds
AUC ROC: 0.950552


Results scoring model
   AUC ROC   = 0.982847
   AUC PR    = 0.56501
   CLL	      = -0.174559
   Precision = 0.396903 at threshold = 0.5
   Recall    = 0.920605
   F1        = 0.55467


Total scoring time: 425.41 seconds
Refined model CLL: -0.174559


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.950552
   AUC PR    = 0.61238
   CLL	      = -0.168598
   Precision = 0.375887 at threshold = 0.5
   Recall    = 0.86413
   F1        = 0.523888


Total learning time: 1356.076 seconds
Total inference time: 44.731 seconds
AUC ROC: 0.950552
Total revision time: 1356.076
Best scored revision CLL: -0.174559


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 16:16:17
{'AUC PR': 0.61238, 'AUC ROC': 0.950552, 'Precision': [0.375887, 0.5], 'Inference time': 44.731, 'CLL': -0.168598, 'Recall': 0.86413, 'F1': 0.523888, 'Learning time': 1356.076, 'parameter_0.2': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.806, 'CLL': -0.326283, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 4.315}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.26991364098186527;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else return 0.2105228223398635;  // std dev = 0,478, 1.348,000 (wgt'ed) examples reached here.  /* #neg=873 #pos=475 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(L, I) )
%   | | | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.05169732219628568;  // std dev = 0,395, 155,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=30 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17937733952364673;  // std dev = 0,476, 1.406,000 (wgt'ed) examples reached here.  /* #neg=915 #pos=491 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.2580193346218546;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.6289515275190196;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2871533413342931;  // std dev = 0,945, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.02673859212212708;  // std dev = 3,399, 80,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=14 */
%   | | | else return -0.014928074544539344;  // std dev = 2,280, 45,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | else return 0.0790113193948546;  // std dev = 0,419, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.14925164124603463;  // std dev = 0,474, 1.420,000 (wgt'ed) examples reached here.  /* #neg=929 #pos=491 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.5051900391162074;  // std dev = 0,892, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.14506719771597704;  // std dev = 0,472, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.07034750197137206;  // std dev = 3,524, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return -0.05740609550727518;  // std dev = 1,648, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.001548271616695068;  // std dev = 3,053, 72,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return -0.1585186820352575;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.759095680456893;  // std dev = 0,170, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.2208279144061404;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.19858448389830327;  // std dev = 2,149, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.2218667288133262;  // std dev = 0,010, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.13111207899204494;  // std dev = 0,477, 1.334,000 (wgt'ed) examples reached here.  /* #neg=864 #pos=470 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return 0.5900218211106081;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.05776040816540798;  // std dev = 0,450, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return 0.003825785400037136;  // std dev = 0,360, 130,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=20 */
%   | | else return 0.08991860650621787;  // std dev = 0,436, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5983672507374217;  // std dev = 0,207, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.18517438605819136;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.16296502637279175;  // std dev = 2,146, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.18106898514976644;  // std dev = 0,045, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.09794440067986343;  // std dev = 0,473, 1.372,000 (wgt'ed) examples reached here.  /* #neg=902 #pos=470 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then if ( haswordauthor(L, I) )
%   | | | then return 0.18785537276109437;  // std dev = 1,371, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.022386420231434136;  // std dev = 3,841, 104,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=20 */
%   | | else return -0.005899832867483401;  // std dev = 0,357, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else return 0.058120184971141756;  // std dev = 0,417, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08862719746763269;  // std dev = 0,473, 1.389,000 (wgt'ed) examples reached here.  /* #neg=898 #pos=491 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.27819245004510024;  // std dev = 0,440, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return -0.046102615515375533;  // std dev = 0,893, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.03435829213977405;  // std dev = 3,542, 75,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return -0.06522928564694493;  // std dev = 1,660, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | else return 0.06448548037732932;  // std dev = 0,415, 50,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.17060020651793498;  // std dev = 0,373, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return -0.020453259791481958;  // std dev = 2,231, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return -0.24074336424401754;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.2563644300620346;  // std dev = 1,328, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return -0.07348213228563213;  // std dev = 2,021, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else return 0.06487784444325147;  // std dev = 0,475, 1.327,000 (wgt'ed) examples reached here.  /* #neg=869 #pos=458 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( haswordtitle(M, K) )
%   | | then return 0.2851415923414957;  // std dev = 0,414, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.09702418885531443;  // std dev = 1,009, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.009560128245054136;  // std dev = 0,379, 170,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=30 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6713170319301109;  // std dev = 0,168, 480,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=468 */
%   | | else return -0.26525999247149035;  // std dev = 0,128, 940,000 (wgt'ed) examples reached here.  /* #neg=926 #pos=14 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.18733925774368979;  // std dev = 0,255, 56,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=4 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2055265859341712;  // std dev = 2,445, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.07736566745743632;  // std dev = 2,432, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( title(K, I), venue(K, B) )
%   | | | then return 0.6411226888178574;  // std dev = 1,344, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return -0.19595131468981714;  // std dev = 0,019, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.054491786731919754;  // std dev = 0,754, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.5317370622401578;  // std dev = 0,781, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0329707430046617;  // std dev = 0,382, 1.411,000 (wgt'ed) examples reached here.  /* #neg=920 #pos=491 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6132922499451023;  // std dev = 1,195, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.16501659513214315;  // std dev = 1,008, 56,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return -0.02237247582823016;  // std dev = 1,758, 41,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | | else return -0.2227464049455191;  // std dev = 0,284, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.004033044949509652;  // std dev = 2,528, 69,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | | | else return -0.06614096994940617;  // std dev = 0,938, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return -0.2546453071934095;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.5089970634993415;  // std dev = 0,170, 481,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=468 */
%   | | else return -0.21843127712793245;  // std dev = 0,125, 943,000 (wgt'ed) examples reached here.  /* #neg=929 #pos=14 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.15716510847203705;  // std dev = 0,280, 46,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=4 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3591488899511519;  // std dev = 1,875, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.009083304286560128;  // std dev = 2,257, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5037187550324446;  // std dev = 0,234, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.06932611547229207;  // std dev = 1,793, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return -0.19952394235345108;  // std dev = 0,255, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.2122917969363658;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.95757
   AUC PR    = 0.395918
   CLL	      = -0.224819
   Precision = 0.425685 at threshold = 0.5
   Recall    = 0.80163
   F1        = 0.556079


Total learning time: 681.148 seconds
Total inference time: 36.273 seconds
AUC ROC: 0.95757


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 16:28:15
{'AUC PR': 0.395918, 'AUC ROC': 0.95757, 'Precision': [0.425685, 0.5], 'Inference time': 36.273, 'CLL': -0.224819, 'Recall': 0.80163, 'Learning time': 681.148, 'F1': 0.556079}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.02481560176617897;  // std dev = 2,041, 30,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else return 0.1933641785716316;  // std dev = 0,472, 1.417,000 (wgt'ed) examples reached here.  /* #neg=942 #pos=475 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then if ( author(K, J), title(K, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( title(L, I), venue(L, B) )
%   | | | then return 0.05202648611992051;  // std dev = 3,914, 98,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=19 */
%   | | | else return 0.0010060779566551223;  // std dev = 1,852, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then if ( title(P, N), venue(P, A) )
%   | | | then return 0.17243464938522662;  // std dev = 2,746, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.599912
   AUC PR    = 0.020268
   CLL	      = -0.196261
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 19.43 seconds
Total inference time: 4.89 seconds
AUC ROC: 0.599912


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 16:28:40
{'AUC PR': 0.020268, 'AUC ROC': 0.599912, 'Precision': [nan, 0.5], 'Inference time': 4.89, 'CLL': -0.196261, 'Recall': 0.0, 'Learning time': 19.43, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 8,92e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.15661248527930455;  // std dev = 25,308, 3.059,000 (wgt'ed) examples reached here.  /* #neg=2.146 #pos=913 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.1403132310260802;  // std dev = 25,239, 3.020,000 (wgt'ed) examples reached here.  /* #neg=2.107 #pos=913 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,20e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.11895542121109902;  // std dev = 25,264, 3.034,000 (wgt'ed) examples reached here.  /* #neg=2.121 #pos=913 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,42e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.11083097047010235;  // std dev = 25,078, 2.934,000 (wgt'ed) examples reached here.  /* #neg=2.021 #pos=913 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,60e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.0826251932680991;  // std dev = 25,257, 3.030,000 (wgt'ed) examples reached here.  /* #neg=2.117 #pos=913 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949034;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.06718851378863405;  // std dev = 25,274, 3.040,000 (wgt'ed) examples reached here.  /* #neg=2.127 #pos=913 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,40e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.043648084533608064;  // std dev = 25,478, 3.159,000 (wgt'ed) examples reached here.  /* #neg=2.246 #pos=913 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.05283691197273094;  // std dev = 25,165, 2.980,000 (wgt'ed) examples reached here.  /* #neg=2.067 #pos=913 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.03646326343298621;  // std dev = 25,278, 3.042,000 (wgt'ed) examples reached here.  /* #neg=2.129 #pos=913 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 6,32e-08, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else return 0.03670273631750597;  // std dev = 25,144, 2.969,000 (wgt'ed) examples reached here.  /* #neg=2.056 #pos=913 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.333329
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 7.369 seconds
Total inference time: 3.658 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.568933
   AUC PR    = 0.155902
   CLL	      = -0.335429
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.137866
   F1        = 0.242324


Total scoring time: 7.09 seconds
Parameter learned model CLL: -0.335429


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.308, 2146, 913], 'true': [8.92e-07, 0, 146]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.239, 2107, 913], 'true': [0.0, 0, 146]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.264, 2121, 913], 'true': [5.2e-07, 0, 146]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.078, 2021, 913], 'true': [4.42e-07, 0, 146]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.257, 2117, 913], 'true': [2.6e-07, 0, 146]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.274, 2127, 913], 'true': [0.0, 0, 146]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.478, 2246, 913], 'true': [2.4e-07, 0, 146]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.165, 2067, 913], 'true': [0.0, 0, 146]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.278, 2129, 913], 'true': [0.0, 0, 146]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.144, 2056, 913], 'true': [6.32e-08, 0, 146]}]]
[{'': [5.450738794872001e-15, 0.2093830593938944]}, {'': [-2.2386962907510005e-15, 0.2109217797464657]}, {'': [1.8493578054030004e-15, 0.2103682979408377]}, {'': [1.3383510433837504e-15, 0.21434673473078222]}, {'': [4.623394513507501e-16, 0.21052631005670908]}, {'': [-1.5816875967262503e-16, 0.21013147074100366]}, {'': [3.954218991815626e-16, 0.20548554550172035]}, {'': [-2.980872778445626e-16, 0.21250968424847919]}, {'': [-3.650048300137501e-17, 0.21005257968541882]}, {'': [2.7375362251031256e-17, 0.21294796426210533]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 8,92e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.405767982718559;  // std dev = 3,226, 42,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | | | else return 0.0664822684328457;  // std dev = 2,814, 48,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | else return 0.17971911749443192;  // std dev = 0,467, 2.522,000 (wgt'ed) examples reached here.  /* #neg=1.711 #pos=811 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.17633075328133055;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.017985000673282018;  // std dev = 5,724, 244,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=39 */
%   | | | else return 0.11148226843284566;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4408944693575121;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | | else return 0.012495604595907466;  // std dev = 3,012, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | else return 0.15125600609945541;  // std dev = 0,465, 2.568,000 (wgt'ed) examples reached here.  /* #neg=1.755 #pos=813 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.13310693086818437;  // std dev = 5,208, 133,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=38 */
%   | | | else return 0.015982336570234085;  // std dev = 3,271, 79,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.018554001198806857;  // std dev = 3,942, 142,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | | else return -0.15597087231789;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,20e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3370572169958236;  // std dev = 3,178, 41,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.01961786676712713;  // std dev = 2,850, 53,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | | else return 0.12908820886009809;  // std dev = 0,464, 2.565,000 (wgt'ed) examples reached here.  /* #neg=1.754 #pos=811 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.22585239668679782;  // std dev = 2,322, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.010532609052260262;  // std dev = 1,235, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02824596576988848;  // std dev = 5,809, 222,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=42 */
%   | | | else return -0.022300314697471464;  // std dev = 3,753, 134,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,42e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.33378591797359697;  // std dev = 2,950, 37,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return 0.060173595152165665;  // std dev = 2,774, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else return 0.10138148591661335;  // std dev = 0,461, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.814 #pos=811 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.43640231127745926;  // std dev = 1,144, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.11162436290106979;  // std dev = 2,183, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.00475262598300679;  // std dev = 5,756, 272,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=39 */
%   | | | else return 0.031125253169305627;  // std dev = 3,869, 92,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=19 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,60e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08722832964613185;  // std dev = 0,463, 2.692,000 (wgt'ed) examples reached here.  /* #neg=1.848 #pos=844 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.17469148968451217;  // std dev = 2,356, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.17411792165766055;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.009057917181618838;  // std dev = 5,776, 279,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=40 */
%   | | | else return 0.0016678449906572443;  // std dev = 4,033, 104,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949034;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07575145878966509;  // std dev = 0,464, 2.657,000 (wgt'ed) examples reached here.  /* #neg=1.813 #pos=844 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return -0.011416317408331744;  // std dev = 0,835, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.17181313828982614;  // std dev = 2,179, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08596791573413672;  // std dev = 2,440, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.002060446073343546;  // std dev = 6,535, 334,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,40e-07, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0602745465704147;  // std dev = 0,464, 2.668,000 (wgt'ed) examples reached here.  /* #neg=1.824 #pos=844 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06415764896626189;  // std dev = 5,293, 150,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=38 */
%   | | | else return -0.030391638010360454;  // std dev = 3,267, 94,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.009161218908123452;  // std dev = 3,915, 132,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=18 */
%   | | | else return -0.137518378948801;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.689952511033078;  // std dev = 5,931, 835,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=799 */
%   | | | else return -0.2408805542635195;  // std dev = 5,283, 1.890,000 (wgt'ed) examples reached here.  /* #neg=1.864 #pos=26 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13699560699493818;  // std dev = 3,232, 111,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=12 */
%   | | | else return 0.194521496494861;  // std dev = 4,762, 99,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5249086558268534;  // std dev = 0,408, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.16036966441785502;  // std dev = 0,050, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07677131486407979;  // std dev = 3,780, 74,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5470625472481453;  // std dev = 5,261, 827,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=799 */
%   | | | else return -0.19881154458733555;  // std dev = 5,231, 1.876,000 (wgt'ed) examples reached here.  /* #neg=1.850 #pos=26 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13937206842518496;  // std dev = 3,294, 142,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=12 */
%   | | | else return 0.12865362154646706;  // std dev = 4,883, 107,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.4113618955997365;  // std dev = 0,409, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.04503277902559336;  // std dev = 3,836, 79,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | | else return -0.13047070223401583;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 6,32e-08, 146,000 (wgt'ed) examples reached here.  /* #pos=146 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.41516558264455666;  // std dev = 5,169, 827,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=801 */
%   | | | else return -0.167309663411097;  // std dev = 5,239, 1.884,000 (wgt'ed) examples reached here.  /* #neg=1.857 #pos=27 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.03760117983232365;  // std dev = 2,757, 62,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | | | else return 0.16504076980969082;  // std dev = 4,614, 92,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.45940268276945245;  // std dev = 0,243, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.011880906776093117;  // std dev = 3,958, 99,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=20 */
%   | | | else return -0.11636893265445765;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.950388
   AUC PR    = 0.611841
   CLL	      = -0.186954
   Precision = 0.405797 at threshold = 0.5
   Recall    = 0.836957
   F1        = 0.546584


Total learning time: 1351.223 seconds
Total inference time: 37.025 seconds
AUC ROC: 0.950388


Results scoring model
   AUC ROC   = 0.981567
   AUC PR    = 0.563188
   CLL	      = -0.198546
   Precision = 0.407986 at threshold = 0.5
   Recall    = 0.88763
   F1        = 0.559025


Total scoring time: 603.028 seconds
Refined model CLL: -0.198546


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.950388
   AUC PR    = 0.611841
   CLL	      = -0.186954
   Precision = 0.405797 at threshold = 0.5
   Recall    = 0.836957
   F1        = 0.546584


Total learning time: 1968.71 seconds
Total inference time: 37.025 seconds
AUC ROC: 0.950388
Total revision time: 1968.71
Best scored revision CLL: -0.198546


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 17:02:11
{'AUC PR': 0.611841, 'AUC ROC': 0.950388, 'Precision': [0.405797, 0.5], 'parameter_0.4': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.658, 'CLL': -0.333329, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 7.369}, 'Inference time': 37.025, 'CLL': -0.186954, 'Recall': 0.836957, 'F1': 0.546584, 'Learning time': 1968.71}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06269438964496693;  // std dev = 2,676, 44,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | else return 0.2074136409818602;  // std dev = 0,477, 2.720,000 (wgt'ed) examples reached here.  /* #neg=1.770 #pos=950 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.8068668838174602;  // std dev = 1,377, 39,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.1325052705079643;  // std dev = 0,995, 107,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=1 */
%   | | else return 0.004216350829849429;  // std dev = 0,353, 89,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
%   | else return -0.019402085308650917;  // std dev = 0,328, 147,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.09702391661026187;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.2821122131806592;  // std dev = 2,641, 30,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.45597967456591976;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | | | else return 0.019658919848938552;  // std dev = 2,848, 53,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | | else return 0.18591794617086224;  // std dev = 0,478, 2.592,000 (wgt'ed) examples reached here.  /* #neg=1.672 #pos=920 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.16777932485252076;  // std dev = 0,453, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | else return 0.009695008020416906;  // std dev = 0,337, 364,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=58 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6332429011914025;  // std dev = 0,127, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.14581211014861264;  // std dev = 3,252, 75,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.8107964163509633;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15432953053855256;  // std dev = 0,477, 2.706,000 (wgt'ed) examples reached here.  /* #neg=1.756 #pos=950 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6748453530113158;  // std dev = 1,376, 39,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.11917722485717518;  // std dev = 0,996, 115,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=1 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.24766077365518036;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.0676035702050472;  // std dev = 2,355, 79,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=6 */
%   | else return -0.029751255568016208;  // std dev = 0,315, 161,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12921072635131295;  // std dev = 0,474, 2.799,000 (wgt'ed) examples reached here.  /* #neg=1.809 #pos=990 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.15897338750563286;  // std dev = 0,354, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return -0.12913994900427353;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.008179414380743736;  // std dev = 3,981, 183,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=34 */
%   | | | else return 0.10620243981555677;  // std dev = 2,383, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0032656111762230746;  // std dev = 3,942, 133,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=18 */
%   | | | else return -0.1371153671882653;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11060728741777119;  // std dev = 0,475, 2.762,000 (wgt'ed) examples reached here.  /* #neg=1.772 #pos=990 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.3975484454745148;  // std dev = 1,033, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.20799869529675774;  // std dev = 2,022, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.16402415070417856;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.050837644645322186;  // std dev = 3,708, 141,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=36 */
%   | | | else return -0.059118365866857925;  // std dev = 2,331, 72,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0018713674455892921;  // std dev = 3,714, 115,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   | | | else return -0.12185555105262443;  // std dev = 0,000765, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.42086200129461226;  // std dev = 0,127, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.20595800569031644;  // std dev = 1,969, 38,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return -0.02355904118453709;  // std dev = 2,478, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | else return 0.08562941676940516;  // std dev = 0,477, 2.697,000 (wgt'ed) examples reached here.  /* #neg=1.747 #pos=950 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.1282192785782882;  // std dev = 0,454, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0.009925168604501045;  // std dev = 0,294, 221,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=42 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.01892997940722978;  // std dev = 3,751, 108,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   | | | else return -0.0992708237475677;  // std dev = 0,982, 26,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else return -0.10940529200993243;  // std dev = 0,000696, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06630339135353494;  // std dev = 0,473, 2.811,000 (wgt'ed) examples reached here.  /* #neg=1.821 #pos=990 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return -0.0032352986713687546;  // std dev = 0,678, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.37735261626405436;  // std dev = 1,565, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return 0.1716564249039113;  // std dev = 1,055, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.021889409486180674;  // std dev = 4,444, 195,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=23 */
%   | | | else return 0.037888763436959176;  // std dev = 2,430, 67,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | | else return 0.009603453516967902;  // std dev = 0,283, 93,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6496817054873315;  // std dev = 0,217, 971,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=927 */
%   | | else return -0.2683556999959968;  // std dev = 0,125, 1.889,000 (wgt'ed) examples reached here.  /* #neg=1.863 #pos=26 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.1776512802337501;  // std dev = 3,112, 92,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return -0.0714516983695143;  // std dev = 0,802, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.42986036182423615;  // std dev = 2,703, 38,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=28 */
%   | | | else return 0.05232110470876592;  // std dev = 2,981, 83,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6241243295361271;  // std dev = 0,272, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.20627644995680597;  // std dev = 0,249, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.027418349309785896;  // std dev = 0,288, 87,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.514222247907563;  // std dev = 0,187, 961,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=929 */
%   | | else return -0.21693252541109662;  // std dev = 0,123, 1.920,000 (wgt'ed) examples reached here.  /* #neg=1.893 #pos=27 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.07127915577282122;  // std dev = 2,728, 52,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | | | else return -0.15510275528614367;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.24879275984302446;  // std dev = 3,105, 43,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=28 */
%   | | | else return 0.09530240637851908;  // std dev = 2,809, 66,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.3504472527858552;  // std dev = 0,409, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else return 0.4477308970709523;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.018415097875703796;  // std dev = 0,285, 89,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.3911393657936553;  // std dev = 0,178, 959,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=929 */
%   | | else return -0.18208325429755903;  // std dev = 0,122, 1.889,000 (wgt'ed) examples reached here.  /* #neg=1.862 #pos=27 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.08143556332459316;  // std dev = 2,766, 60,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | else return -0.12370106898857881;  // std dev = 0,142, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3135750317846445;  // std dev = 2,487, 36,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | | | else return 0.0779849739470693;  // std dev = 2,727, 69,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.35633087097282085;  // std dev = 0,323, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.44737878680211635;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.008324539118465478;  // std dev = 0,285, 98,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=20 */


Results
   AUC ROC   = 0.956356
   AUC PR    = 0.381489
   CLL	      = -0.192163
   Precision = 0.413474 at threshold = 0.5
   Recall    = 0.850543
   F1        = 0.556444


Total learning time: 1580.751 seconds
Total inference time: 36.112 seconds
AUC ROC: 0.956356


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 17:29:09
{'AUC PR': 0.381489, 'AUC ROC': 0.956356, 'Precision': [0.413474, 0.5], 'Inference time': 36.112, 'CLL': -0.192163, 'Recall': 0.850543, 'Learning time': 1580.751, 'F1': 0.556444}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.09837280403092258;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return 0.37666745361803083;  // std dev = 2,596, 27,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.572434649385226;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return 0.03672036367094094;  // std dev = 2,866, 56,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | else return 0.20822503860026828;  // std dev = 0,477, 2.628,000 (wgt'ed) examples reached here.  /* #neg=1.708 #pos=920 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then if ( author(N, M), venue(N, A) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(P, L) )
%   | | | then return 0.2265699877310913;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, Q), haswordtitle(R, Q) )
%   | | then if ( title(S, R), venue(S, A) )
%   | | | then return 0.12680565151742132;  // std dev = 5,131, 134,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=36 */
%   | | | else return -0.05965928407856989;  // std dev = 2,347, 73,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=6 */
%   | | else if ( haswordvenue(A, T), haswordtitle(U, T) )
%   | | | then return -0.0039200304177290255;  // std dev = 3,714, 116,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=16 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.603644
   AUC PR    = 0.014769
   CLL	      = -0.195958
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 37.142 seconds
Total inference time: 4.194 seconds
AUC ROC: 0.603644


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 17:29:51
{'AUC PR': 0.014769, 'AUC ROC': 0.603644, 'Precision': [nan, 0.5], 'Inference time': 4.194, 'CLL': -0.195958, 'Recall': 0.0, 'Learning time': 37.142, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,07e-06, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.1581711919434867;  // std dev = 30,718, 4.493,000 (wgt'ed) examples reached here.  /* #neg=3.145 #pos=1.348 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.14442603223506006;  // std dev = 30,572, 4.396,000 (wgt'ed) examples reached here.  /* #neg=3.048 #pos=1.348 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.11508734235790548;  // std dev = 30,764, 4.525,000 (wgt'ed) examples reached here.  /* #neg=3.177 #pos=1.348 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.10282951837795477;  // std dev = 30,642, 4.442,000 (wgt'ed) examples reached here.  /* #neg=3.094 #pos=1.348 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.08092260946499902;  // std dev = 30,750, 4.515,000 (wgt'ed) examples reached here.  /* #neg=3.167 #pos=1.348 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,01e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.06362405675896264;  // std dev = 30,820, 4.564,000 (wgt'ed) examples reached here.  /* #neg=3.216 #pos=1.348 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.05327368480599009;  // std dev = 30,794, 4.546,000 (wgt'ed) examples reached here.  /* #neg=3.198 #pos=1.348 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,19e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.047031763599145855;  // std dev = 30,713, 4.490,000 (wgt'ed) examples reached here.  /* #neg=3.142 #pos=1.348 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.038571857860707076;  // std dev = 30,701, 4.482,000 (wgt'ed) examples reached here.  /* #neg=3.134 #pos=1.348 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 9,42e-08, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.03171473239946211;  // std dev = 30,687, 4.472,000 (wgt'ed) examples reached here.  /* #neg=3.124 #pos=1.348 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.330511
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 13.011 seconds
Total inference time: 3.901 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575834
   AUC PR    = 0.170002
   CLL	      = -0.332438
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.151668
   F1        = 0.263388


Total scoring time: 9.521 seconds
Parameter learned model CLL: -0.332438


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.718, 3145, 1348], 'true': [1.07e-06, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.572, 3048, 1348], 'true': [0.0, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.764, 3177, 1348], 'true': [4.92e-07, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.642, 3094, 1348], 'true': [0.0, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.75, 3167, 1348], 'true': [2.67e-07, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.82, 3216, 1348], 'true': [3.01e-07, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.794, 3198, 1348], 'true': [2.92e-07, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.713, 3142, 1348], 'true': [1.19e-07, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.701, 3134, 1348], 'true': [0.0, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.687, 3124, 1348], 'true': [9.42e-08, 0, 241]}]]
[{'': [4.717296171021412e-15, 0.21000890224221083]}, {'': [-4.186600351781503e-15, 0.21261283936673475]}, {'': [1.00242543634205e-15, 0.20915581331458]}, {'': [-2.0638170748218678e-16, 0.21137474327677733]}, {'': [2.9483101068883824e-16, 0.20942206917017506]}, {'': [3.7590953862826877e-16, 0.20812040424585837]}, {'': [3.537972128266059e-16, 0.20859768715128804]}, {'': [5.896620213776765e-17, 0.2100890372567884]}, {'': [-1.7321321877969247e-16, 0.21030286050745686]}, {'': [3.685387633610478e-17, 0.2105704026804531]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,07e-06, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.37600607795665403;  // std dev = 3,739, 56,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=29 */
%   | | | else return 0.07689893509951237;  // std dev = 3,307, 64,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else return 0.17554252416939684;  // std dev = 0,465, 3.806,000 (wgt'ed) examples reached here.  /* #neg=2.598 #pos=1.208 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.10278412823256008;  // std dev = 6,562, 233,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=57 */
%   | | | else return -0.02022944327886603;  // std dev = 3,976, 148,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=18 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.039967116917694;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.04332889741280299;  // std dev = 4,246, 203,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4363985565377074;  // std dev = 3,274, 46,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | | | else return 0.07433429361905279;  // std dev = 3,292, 62,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | else return 0.14893088411415925;  // std dev = 0,464, 3.853,000 (wgt'ed) examples reached here.  /* #neg=2.645 #pos=1.208 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.6514725473795963;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.17713591930141792;  // std dev = 2,489, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05256125729357061;  // std dev = 7,118, 317,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=64 */
%   | | | else return -0.040964285314951804;  // std dev = 4,253, 209,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1305570516379428;  // std dev = 0,465, 3.943,000 (wgt'ed) examples reached here.  /* #neg=2.692 #pos=1.251 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1491139384931885;  // std dev = 2,837, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return -0.16183270305505848;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.2012350729501467;  // std dev = 2,581, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return -0.0024580825957837213;  // std dev = 7,921, 509,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=74 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1081740717271445;  // std dev = 0,464, 3.967,000 (wgt'ed) examples reached here.  /* #neg=2.716 #pos=1.251 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.09174679777100932;  // std dev = 6,491, 219,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=57 */
%   | | | else return -0.019787767882678317;  // std dev = 3,900, 131,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.026394909007821196;  // std dev = 4,386, 201,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=22 */
%   | | | else return -0.12970745344743345;  // std dev = 0,016, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08624127375906024;  // std dev = 0,463, 4.008,000 (wgt'ed) examples reached here.  /* #neg=2.757 #pos=1.251 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5070026153309275;  // std dev = 0,871, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0678601793955643;  // std dev = 2,607, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.021425069925485332;  // std dev = 7,148, 343,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=64 */
%   | | | else return -0.022725898484818336;  // std dev = 4,229, 189,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,01e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3200337371969652;  // std dev = 3,426, 48,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=27 */
%   | | | else return -0.050512874504786295;  // std dev = 3,384, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else return 0.0753728816526759;  // std dev = 0,464, 3.823,000 (wgt'ed) examples reached here.  /* #neg=2.613 #pos=1.210 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.07663432085633491;  // std dev = 6,445, 219,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=57 */
%   | | | else return -0.027656962256745438;  // std dev = 3,892, 142,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01624857246194546;  // std dev = 4,345, 187,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=22 */
%   | | | else return -0.11514978558131377;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06241834194325175;  // std dev = 0,464, 3.938,000 (wgt'ed) examples reached here.  /* #neg=2.687 #pos=1.251 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.059241430571812574;  // std dev = 6,510, 220,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=57 */
%   | | | else return -0.024127756155840317;  // std dev = 3,893, 142,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.1361510040515316;  // std dev = 0,031, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0037462756811018428;  // std dev = 4,321, 173,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,19e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04988754254163011;  // std dev = 0,465, 3.936,000 (wgt'ed) examples reached here.  /* #neg=2.685 #pos=1.251 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05365817373109129;  // std dev = 6,471, 219,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=57 */
%   | | | else return -0.006125132753110573;  // std dev = 3,855, 128,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01941920273958025;  // std dev = 4,350, 201,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=22 */
%   | | | else return -0.10357852494121923;  // std dev = 6,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.07046658541649828;  // std dev = 4,693, 103,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=39 */
%   | | | else return 0.7070537501075015;  // std dev = 0,173, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04241595260521184;  // std dev = 0,466, 3.787,000 (wgt'ed) examples reached here.  /* #neg=2.579 #pos=1.208 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.043039759979466574;  // std dev = 6,481, 220,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=57 */
%   | | | else return -0.032372707714193226;  // std dev = 3,932, 155,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=18 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.018634231290552673;  // std dev = 4,367, 200,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=22 */
%   | | | else return -0.0906563864283962;  // std dev = 0,020, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 9,42e-08, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.10066960119837193;  // std dev = 4,574, 90,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=36 */
%   | | | else return -0.190447445736417;  // std dev = 1,981, 53,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
%   | | else return 0.02953027281981317;  // std dev = 0,464, 3.833,000 (wgt'ed) examples reached here.  /* #neg=2.623 #pos=1.210 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -2.1587009409282766E-4;  // std dev = 6,549, 363,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=53 */
%   | | | else return 0.06153264205595529;  // std dev = 3,187, 51,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.02009768819503871;  // std dev = 4,887, 157,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=30 */
%   | | | else return -0.08431589367397063;  // std dev = 0,019, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.699309
   AUC PR    = 0.286097
   CLL	      = -0.304839
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 236.994 seconds
Total inference time: 8.81 seconds
AUC ROC: 0.699309


Results scoring model
   AUC ROC   = 0.625969
   AUC PR    = 0.179677
   CLL	      = -0.329018
   Precision = 0.945313 at threshold = 0.5
   Recall    = 0.152297
   F1        = 0.262331


Total scoring time: 53.887 seconds
Refined model CLL: -0.329018


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.699309
   AUC PR    = 0.286097
   CLL	      = -0.304839
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 313.413 seconds
Total inference time: 8.81 seconds
AUC ROC: 0.699309
Total revision time: 313.413
Best scored revision CLL: -0.329018


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 17:35:18
{'AUC PR': 0.286097, 'AUC ROC': 0.699309, 'Precision': [1.0, 0.5], 'Inference time': 8.81, 'parameter_0.6': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.901, 'CLL': -0.330511, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 13.011}, 'CLL': -0.304839, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 313.413}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21620029099103585;  // std dev = 0,479, 4.167,000 (wgt'ed) examples reached here.  /* #neg=2.675 #pos=1.492 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8406050754503896;  // std dev = 0,991, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | | else return -0.13518439823382133;  // std dev = 0,997, 150,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.33183314562582816;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.06927041973919733;  // std dev = 2,889, 124,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=9 */
%   | else return -0.029606166941304177;  // std dev = 0,316, 196,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17007044364030882;  // std dev = 0,474, 4.384,000 (wgt'ed) examples reached here.  /* #neg=2.892 #pos=1.492 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6885178839640115;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return -0.12022547426997326;  // std dev = 0,997, 168,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return -0.008498600334046381;  // std dev = 3,865, 137,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=18 */
%   | | | else return -0.13362616361991472;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.1382851965802641;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.034019793736662224;  // std dev = 0,306, 211,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15368618939248418;  // std dev = 0,477, 4.271,000 (wgt'ed) examples reached here.  /* #neg=2.779 #pos=1.492 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7165136141117221;  // std dev = 0,298, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11350688405497117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.19662048668818388;  // std dev = 2,345, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.1250480463824469;  // std dev = 0,031, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07494816648959345;  // std dev = 4,386, 197,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=55 */
%   | | | else return -0.04724849721819565;  // std dev = 2,867, 107,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.02152820925455122;  // std dev = 4,212, 178,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=20 */
%   | | | else return -0.13233673946114954;  // std dev = 0,011, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13520444682826152;  // std dev = 0,479, 4.189,000 (wgt'ed) examples reached here.  /* #neg=2.697 #pos=1.492 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5088803502036938;  // std dev = 1,399, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return -0.114170569024065;  // std dev = 0,997, 147,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.2561416414040794;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.058554988131544514;  // std dev = 2,893, 134,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.011874565025936614;  // std dev = 4,147, 166,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=20 */
%   | | | else return -0.08633311422480515;  // std dev = 1,381, 45,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=2 */
%   | | else return -0.11971299272399356;  // std dev = 0,000726, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10718737228210523;  // std dev = 0,478, 4.235,000 (wgt'ed) examples reached here.  /* #neg=2.743 #pos=1.492 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.037948147782991694;  // std dev = 0,438, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19105316250111057;  // std dev = 2,171, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.47658792807321637;  // std dev = 0,697, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11491288622421442;  // std dev = 0,027, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04043563108857647;  // std dev = 3,480, 195,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=55 */
%   | | | else return -0.040767217038682954;  // std dev = 2,876, 114,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.11484980870419917;  // std dev = 0,011, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.013985452261665615;  // std dev = 4,204, 174,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09043087088858287;  // std dev = 0,479, 4.192,000 (wgt'ed) examples reached here.  /* #neg=2.700 #pos=1.492 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.044622974828893526;  // std dev = 0,413, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.19695724454900165;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.07824365381095082;  // std dev = 0,960, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.02778577405278397;  // std dev = 3,434, 208,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=55 */
%   | | | else return -0.04677846171258658;  // std dev = 2,892, 130,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02054548774691513;  // std dev = 4,223, 188,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=20 */
%   | | | else return -0.10445067704537829;  // std dev = 0,017, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07439060939450795;  // std dev = 0,479, 4.169,000 (wgt'ed) examples reached here.  /* #neg=2.677 #pos=1.492 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.03268545720670525;  // std dev = 3,530, 177,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=50 */
%   | | | else return -0.06635509838110794;  // std dev = 2,120, 110,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=14 */
%   | | else if ( haswordtitle(E, I), haswordvenue(A, I) )
%   | | | then return 0.07250728687749253;  // std dev = 2,884, 57,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | | else return -0.10008812918720493;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.10353328452300484;  // std dev = 0,010, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.02370427458835699;  // std dev = 0,298, 214,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05139515736147933;  // std dev = 0,477, 4.260,000 (wgt'ed) examples reached here.  /* #neg=2.768 #pos=1.492 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.010183178901318965;  // std dev = 3,528, 206,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=50 */
%   | | | else return -0.05603486903888723;  // std dev = 2,051, 125,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=14 */
%   | | else if ( haswordtitle(E, I), haswordvenue(A, I) )
%   | | | then return 0.04223662296517461;  // std dev = 2,924, 65,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return -0.09142704324020369;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.004040302023946496;  // std dev = 4,103, 165,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=20 */
%   | | | else return -0.054717307456677425;  // std dev = 1,370, 33,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | | else return -0.09467739349981207;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04738994085563243;  // std dev = 0,479, 4.178,000 (wgt'ed) examples reached here.  /* #neg=2.686 #pos=1.492 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.05785718265821861;  // std dev = 0,247, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else return -0.108127514329209;  // std dev = 0,048, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.017711579589463334;  // std dev = 3,285, 171,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=46 */
%   | | | else return -0.031517661547185626;  // std dev = 3,638, 145,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=17 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.011456761782202453;  // std dev = 4,338, 195,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=22 */
%   | | | else return -0.08686778052438211;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.022112190045505832;  // std dev = 0,474, 4.014,000 (wgt'ed) examples reached here.  /* #neg=2.641 #pos=1.373 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7020438020184325;  // std dev = 1,936, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | | else return -0.12323257727587676;  // std dev = 1,245, 262,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=2 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.17755758058819793;  // std dev = 0,299, 158,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=16 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3206843748985298;  // std dev = 3,839, 64,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   | | | else return 0.07620203509450227;  // std dev = 2,983, 96,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.4300593748985296;  // std dev = 0,433, 28,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else return 0.5133927082318624;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return -0.003727308824860371;  // std dev = 0,244, 123,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=30 */


Results
   AUC ROC   = 0.673195
   AUC PR    = 0.039541
   CLL	      = -0.330965
   Precision = 0.115789 at threshold = 0.5
   Recall    = 0.029891
   F1        = 0.047516


Total learning time: 1843.956 seconds
Total inference time: 15.885 seconds
AUC ROC: 0.673195


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 18:06:19
{'AUC PR': 0.039541, 'AUC ROC': 0.673195, 'Precision': [0.115789, 0.5], 'Inference time': 15.885, 'CLL': -0.330965, 'Recall': 0.029891, 'Learning time': 1843.956, 'F1': 0.047516}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2149160321822427;  // std dev = 0,479, 4.182,000 (wgt'ed) examples reached here.  /* #neg=2.690 #pos=1.492 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8236661764788228;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return -0.13539945199726225;  // std dev = 0,997, 155,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.006909265678024765;  // std dev = 3,914, 121,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.0803711573217344;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return -0.04084096389038672;  // std dev = 0,301, 198,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=20 */


Results
   AUC ROC   = 0.620687
   AUC PR    = 0.019372
   CLL	      = -0.194476
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 57.973 seconds
Total inference time: 3.53 seconds
AUC ROC: 0.620687


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 18:07:21
{'AUC PR': 0.019372, 'AUC ROC': 0.620687, 'Precision': [nan, 0.5], 'Inference time': 3.53, 'CLL': -0.194476, 'Recall': 0.0, 'Learning time': 57.973, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.15155821093351854;  // std dev = 35,693, 6.145,000 (wgt'ed) examples reached here.  /* #neg=4.342 #pos=1.803 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.13503142735363519;  // std dev = 35,619, 6.084,000 (wgt'ed) examples reached here.  /* #neg=4.281 #pos=1.803 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.11931669587118084;  // std dev = 35,532, 6.015,000 (wgt'ed) examples reached here.  /* #neg=4.212 #pos=1.803 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.1045760596506718;  // std dev = 35,441, 5.944,000 (wgt'ed) examples reached here.  /* #neg=4.141 #pos=1.803 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.07771373629777156;  // std dev = 35,687, 6.140,000 (wgt'ed) examples reached here.  /* #neg=4.337 #pos=1.803 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,77e-07, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.07096779249293356;  // std dev = 35,517, 6.003,000 (wgt'ed) examples reached here.  /* #neg=4.200 #pos=1.803 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,49e-07, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.051577001265930456;  // std dev = 35,684, 6.138,000 (wgt'ed) examples reached here.  /* #neg=4.335 #pos=1.803 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2,63e-07, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.04285001827467662;  // std dev = 35,663, 6.120,000 (wgt'ed) examples reached here.  /* #neg=4.317 #pos=1.803 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.03805202189038148;  // std dev = 35,578, 6.051,000 (wgt'ed) examples reached here.  /* #neg=4.248 #pos=1.803 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.029293330138798795;  // std dev = 35,612, 6.079,000 (wgt'ed) examples reached here.  /* #neg=4.276 #pos=1.803 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.326606
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 19.077 seconds
Total inference time: 3.404 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.574563
   AUC PR    = 0.167398
   CLL	      = -0.328592
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149127
   F1        = 0.259548


Total scoring time: 11.706 seconds
Parameter learned model CLL: -0.328592


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.693, 4342, 1803], 'true': [1.05e-06, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.619, 4281, 1803], 'true': [0.0, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.532, 4212, 1803], 'true': [0.0, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.441, 4141, 1803], 'true': [0.0, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.687, 4337, 1803], 'true': [0.0, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.517, 4200, 1803], 'true': [3.77e-07, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.684, 4335, 1803], 'true': [2.49e-07, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.663, 4317, 1803], 'true': [2.63e-07, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.578, 4248, 1803], 'true': [0.0, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.612, 4276, 1803], 'true': [0.0, 0, 316]}]]
[{'': [3.5077426195751783e-15, 0.20732027268851125]}, {'': [-5.036758633236153e-15, 0.2085271193429349]}, {'': [-3.147974145772596e-16, 0.2099001871879364]}, {'': [-8.769356548937946e-16, 0.21132133990819593]}, {'': [-4.272250626405666e-16, 0.20741893813190754]}, {'': [4.49710592253228e-16, 0.21013980765745582]}, {'': [1.9674838411078722e-16, 0.20745841730133147]}, {'': [2.1923391372344864e-16, 0.20781406189925303]}, {'': [-2.1923391372344864e-16, 0.20918277929619253]}, {'': [-1.8550561930445654e-16, 0.20862633871976596]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17579156360637968;  // std dev = 0,466, 5.311,000 (wgt'ed) examples reached here.  /* #neg=3.624 #pos=1.687 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.30642479716847787;  // std dev = 2,678, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.039967116917694;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.024047552611033595;  // std dev = 7,750, 434,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=72 */
%   | | | else return -0.02201635415668651;  // std dev = 5,052, 242,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=29 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15307715537147798;  // std dev = 0,466, 5.310,000 (wgt'ed) examples reached here.  /* #neg=3.623 #pos=1.687 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.15805321011178228;  // std dev = 2,877, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return -0.15252005885545017;  // std dev = 0,035, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014499198406822813;  // std dev = 7,720, 530,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=69 */
%   | | | else return 0.050135981089342;  // std dev = 5,303, 179,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=35 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12260026272671448;  // std dev = 0,462, 5.453,000 (wgt'ed) examples reached here.  /* #neg=3.766 #pos=1.687 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.3151909606395216;  // std dev = 2,543, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.014878075024460714;  // std dev = 7,745, 443,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=72 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.00400221225894804;  // std dev = 5,183, 231,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=31 */
%   | | | else return -0.14401383118207936;  // std dev = 0,024, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1851937117260702;  // std dev = 5,234, 115,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=45 */
%   | | | else return -0.1314837704283743;  // std dev = 2,151, 67,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=5 */
%   | | else return 0.11311713301076978;  // std dev = 0,466, 5.128,000 (wgt'ed) examples reached here.  /* #neg=3.491 #pos=1.637 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.07999013907852077;  // std dev = 6,816, 261,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=61 */
%   | | | else return -0.03359329702103038;  // std dev = 4,449, 193,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1558187036942798;  // std dev = 0,037, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.02535769043896912;  // std dev = 5,245, 278,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=31 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25475937629030393;  // std dev = 4,210, 71,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=34 */
%   | | | else return -0.007286907468786571;  // std dev = 4,048, 96,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=21 */
%   | | else return 0.09055133048668042;  // std dev = 0,465, 5.169,000 (wgt'ed) examples reached here.  /* #neg=3.537 #pos=1.632 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.041075693807900104;  // std dev = 6,947, 296,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=61 */
%   | | | else return -0.006873604960139554;  // std dev = 4,386, 164,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.13473232340594962;  // std dev = 0,055, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.004283679268266613;  // std dev = 5,191, 239,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=31 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,77e-07, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07374676763563016;  // std dev = 0,464, 5.353,000 (wgt'ed) examples reached here.  /* #neg=3.666 #pos=1.687 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3447663678721516;  // std dev = 1,369, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.045718565528733185;  // std dev = 2,812, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.013572025088034751;  // std dev = 7,671, 419,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=72 */
%   | | | else return -0.011581063446074374;  // std dev = 5,045, 239,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=29 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,49e-07, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.33588479655858217;  // std dev = 3,513, 52,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return -0.08305904473748182;  // std dev = 3,924, 115,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=19 */
%   | | else return 0.05777286508322724;  // std dev = 0,464, 5.227,000 (wgt'ed) examples reached here.  /* #neg=3.590 #pos=1.637 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.11729729893767171;  // std dev = 2,866, 35,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return -0.04757723613648118;  // std dev = 1,291, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.025311447306917836;  // std dev = 2,771, 53,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | | | else return -0.006338058289497856;  // std dev = 8,800, 638,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=91 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2,63e-07, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.049566811339896585;  // std dev = 0,464, 5.342,000 (wgt'ed) examples reached here.  /* #neg=3.655 #pos=1.687 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.040110390384044486;  // std dev = 6,895, 286,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=61 */
%   | | | else return -0.03804558402879377;  // std dev = 4,455, 192,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=24 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.03564134423680143;  // std dev = 1,283, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return -0.012872783280764343;  // std dev = 5,055, 245,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=29 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03957373079597546;  // std dev = 0,464, 5.341,000 (wgt'ed) examples reached here.  /* #neg=3.654 #pos=1.687 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.034890088260175964;  // std dev = 6,895, 285,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=61 */
%   | | | else return -0.015473044734744786;  // std dev = 4,382, 175,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=24 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.10508004255347925;  // std dev = 1,175, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.02174846046053468;  // std dev = 5,083, 270,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=29 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6568343467853262;  // std dev = 0,993, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return -0.29240299194001707;  // std dev = 0,332, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.21577074262443624;  // std dev = 0,997, 33,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
%   | | | else return 0.094520546516716;  // std dev = 4,472, 96,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -4.487767518028337E-4;  // std dev = 5,469, 172,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=47 */
%   | | | else return 0.03232802045991906;  // std dev = 32,916, 5.009,000 (wgt'ed) examples reached here.  /* #neg=3.424 #pos=1.585 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05384097619499526;  // std dev = 3,004, 46,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return -0.004543045920428493;  // std dev = 8,761, 639,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=91 */


Results
   AUC ROC   = 0.697274
   AUC PR    = 0.28326
   CLL	      = -0.302881
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 262.95799999999997 seconds
Total inference time: 7.91 seconds
AUC ROC: 0.697274


Results scoring model
   AUC ROC   = 0.630683
   AUC PR    = 0.190885
   CLL	      = -0.325055
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149127
   F1        = 0.259548


Total scoring time: 61.191 seconds
Refined model CLL: -0.325055


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.697274
   AUC PR    = 0.28326
   CLL	      = -0.302881
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 354.932 seconds
Total inference time: 7.91 seconds
AUC ROC: 0.697274
Total revision time: 354.932
Best scored revision CLL: -0.325055


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 18:13:29
{'AUC PR': 0.28326, 'AUC ROC': 0.697274, 'Precision': [1.0, 0.5], 'Inference time': 7.91, 'parameter_0.8': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.404, 'CLL': -0.326606, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 19.077}, 'CLL': -0.302881, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 354.932}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2085688091372958;  // std dev = 0,477, 5.716,000 (wgt'ed) examples reached here.  /* #neg=3.713 #pos=2.003 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7956489350995126;  // std dev = 1,936, 64,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=60 */
%   | | | else return -0.13664273156715498;  // std dev = 0,997, 192,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.224815601766179;  // std dev = 2,639, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return -0.06670655622996742;  // std dev = 3,467, 173,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.016851064900488183;  // std dev = 5,037, 232,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=29 */
%   | | | else return -0.09837280403092252;  // std dev = 1,383, 46,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18715965417318306;  // std dev = 0,479, 5.621,000 (wgt'ed) examples reached here.  /* #neg=3.618 #pos=2.003 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.29158266427743257;  // std dev = 0,881, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1659876193387751;  // std dev = 2,692, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.19582035028529887;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1377596478285329;  // std dev = 0,013, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05209534493496756;  // std dev = 5,906, 281,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=59 */
%   | | | else return -0.05416866032596676;  // std dev = 3,459, 163,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.02585937921349433;  // std dev = 5,069, 258,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=29 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16111517941425646;  // std dev = 0,479, 5.591,000 (wgt'ed) examples reached here.  /* #neg=3.588 #pos=2.003 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7035175785008302;  // std dev = 0,993, 61,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=60 */
%   | | | else return -0.1266649401759196;  // std dev = 1,000, 174,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.21028452084712798;  // std dev = 2,557, 27,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return -0.05513830176707076;  // std dev = 3,472, 179,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 3.183861659237877E-4;  // std dev = 4,991, 212,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=29 */
%   | | | else return -0.06072369908522335;  // std dev = 1,366, 30,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7172894166215417;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2838052537256152;  // std dev = 4,031, 65,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=33 */
%   | | | else return 0.013612946033306308;  // std dev = 3,806, 80,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   | else return 0.12457323776746244;  // std dev = 0,476, 5.553,000 (wgt'ed) examples reached here.  /* #neg=3.618 #pos=1.935 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), title(K, J) )
%   | | | then return 0.291404428585668;  // std dev = 0,517, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13760298061027507;  // std dev = 2,631, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else return -0.021482498302065833;  // std dev = 0,286, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 7.203216979112969E-4;  // std dev = 0,288, 426,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=72 */
%   | | else return -0.018022000956163717;  // std dev = 0,319, 251,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=29 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11402785194143561;  // std dev = 0,480, 5.551,000 (wgt'ed) examples reached here.  /* #neg=3.548 #pos=2.003 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5098865686755975;  // std dev = 1,693, 63,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=60 */
%   | | | else return -0.11362201955646112;  // std dev = 1,001, 199,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1494329840981792;  // std dev = 2,557, 27,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return -0.048787772955966674;  // std dev = 3,471, 178,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=13 */
%   | else return -0.007336039555198977;  // std dev = 0,329, 249,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=31 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08612664312770209;  // std dev = 0,478, 5.647,000 (wgt'ed) examples reached here.  /* #neg=3.644 #pos=2.003 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return -0.11389131974055607;  // std dev = 0,724, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.15338395690831022;  // std dev = 2,482, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.349387960691544;  // std dev = 0,979, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11058568538969057;  // std dev = 0,055, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.004535066576083034;  // std dev = 3,864, 283,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=59 */
%   | | | else return -0.03977459190520212;  // std dev = 3,464, 169,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.019714509336660208;  // std dev = 5,070, 259,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=29 */
%   | | | else return -0.09930505752577015;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6720544817852141;  // std dev = 1,003, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return -0.2852781810635791;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.5037927076524784;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.13553915687292095;  // std dev = 3,688, 107,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=16 */
%   | else return 0.07295260780143623;  // std dev = 0,479, 5.415,000 (wgt'ed) examples reached here.  /* #neg=3.475 #pos=1.940 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return -6.571207233020907E-4;  // std dev = 0,275, 457,000 (wgt'ed) examples reached here.  /* #neg=372 #pos=85 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.1222651322082345;  // std dev = 0,017, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.008437938430623194;  // std dev = 5,184, 257,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=31 */
%   | | | else return -0.09076951086390019;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05386790434953514;  // std dev = 0,476, 5.647,000 (wgt'ed) examples reached here.  /* #neg=3.644 #pos=2.003 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5620484669920286;  // std dev = 0,450, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14862866995954607;  // std dev = 0,016, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.030139000711025446;  // std dev = 2,670, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.08741200408399227;  // std dev = 0,035, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.022118087323651225;  // std dev = 5,931, 395,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=40 */
%   | | | else return 0.005769471926969264;  // std dev = 2,796, 132,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=27 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02524720479839447;  // std dev = 3,101, 135,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=34 */
%   | | | else return -0.08331332298211509;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03311538501507846;  // std dev = 0,473, 5.326,000 (wgt'ed) examples reached here.  /* #neg=3.487 #pos=1.839 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7008424582469827;  // std dev = 2,470, 93,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=86 */
%   | | | else return -0.12932189712321934;  // std dev = 1,354, 339,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=2 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.19925378120378243;  // std dev = 4,315, 188,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=21 */
%   | | | else return -0.07335849079278488;  // std dev = 1,146, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3452484964175108;  // std dev = 4,360, 86,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=57 */
%   | | | else return 0.05969572041140235;  // std dev = 3,497, 136,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=37 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5926537172984646;  // std dev = 0,288, 44,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | else return -0.0073971177486373526;  // std dev = 0,244, 174,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=35 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5230285921260907;  // std dev = 0,276, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.24661954330780042;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.12177337257771487;  // std dev = 3,835, 122,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=23 */
%   | | | else return 0.5256091939420844;  // std dev = 0,248, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.033776458034753355;  // std dev = 0,475, 5.479,000 (wgt'ed) examples reached here.  /* #neg=3.539 #pos=1.940 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.015266903094257501;  // std dev = 0,377, 32,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else return -0.009588169431785058;  // std dev = 0,224, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return -0.011623506343092605;  // std dev = 0,236, 443,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=72 */
%   | | else return -0.016355175792919265;  // std dev = 0,279, 265,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=29 */


Results
   AUC ROC   = 0.679415
   AUC PR    = 0.0424
   CLL	      = -0.331449
   Precision = 0.14 at threshold = 0.5
   Recall    = 0.038043
   F1        = 0.059829


Total learning time: 2248.392 seconds
Total inference time: 17.539 seconds
AUC ROC: 0.679415


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 18:51:16
{'AUC PR': 0.0424, 'AUC ROC': 0.679415, 'Precision': [0.14, 0.5], 'Inference time': 17.539, 'CLL': -0.331449, 'Recall': 0.038043, 'Learning time': 2248.392, 'F1': 0.059829}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.310203729620059;  // std dev = 4,252, 73,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=33 */
%   | | | else return 0.08985625217268306;  // std dev = 3,821, 82,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | else return 0.21371674105320065;  // std dev = 0,479, 5.442,000 (wgt'ed) examples reached here.  /* #neg=3.507 #pos=1.935 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then if ( author(K, J), title(K, I) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2510060779566552;  // std dev = 2,584, 28,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( title(L, I), venue(L, A) )
%   | | | then return 0.09320869605568821;  // std dev = 6,718, 251,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=59 */
%   | | | else return -0.05575834966869958;  // std dev = 3,447, 151,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=13 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then if ( title(P, N), venue(P, B) )
%   | | | then return -0.005058612070299553;  // std dev = 5,003, 212,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=29 */
%   | | | else return -0.09185106490048775;  // std dev = 1,378, 40,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.600312
   AUC PR    = 0.020273
   CLL	      = -0.196418
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 59.375 seconds
Total inference time: 4.641 seconds
AUC ROC: 0.600312


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 18:52:20
{'AUC PR': 0.020273, 'AUC ROC': 0.600312, 'Precision': [nan, 0.5], 'Inference time': 4.641, 'CLL': -0.196418, 'Recall': 0.0, 'Learning time': 59.375, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,58e-06, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.15568926834468036;  // std dev = 39,756, 7.562,000 (wgt'ed) examples reached here.  /* #neg=5.312 #pos=2.250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1352680313677799;  // std dev = 39,767, 7.572,000 (wgt'ed) examples reached here.  /* #neg=5.322 #pos=2.250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.11796235394757686;  // std dev = 39,713, 7.524,000 (wgt'ed) examples reached here.  /* #neg=5.274 #pos=2.250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.09901492339394613;  // std dev = 39,736, 7.544,000 (wgt'ed) examples reached here.  /* #neg=5.294 #pos=2.250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08282593387304892;  // std dev = 39,734, 7.542,000 (wgt'ed) examples reached here.  /* #neg=5.292 #pos=2.250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,58e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06805923394788789;  // std dev = 39,746, 7.553,000 (wgt'ed) examples reached here.  /* #neg=5.303 #pos=2.250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.054299905241476175;  // std dev = 39,788, 7.591,000 (wgt'ed) examples reached here.  /* #neg=5.341 #pos=2.250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1,93e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05094660508450955;  // std dev = 39,597, 7.422,000 (wgt'ed) examples reached here.  /* #neg=5.172 #pos=2.250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.033417768785071245;  // std dev = 39,818, 7.618,000 (wgt'ed) examples reached here.  /* #neg=5.368 #pos=2.250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.0321943301258767;  // std dev = 39,668, 7.484,000 (wgt'ed) examples reached here.  /* #neg=5.234 #pos=2.250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.32892
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 28.413 seconds
Total inference time: 3.708 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.330873
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 13.834 seconds
Parameter learned model CLL: -0.330873


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.756, 5312, 2250], 'true': [1.58e-06, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.767, 5322, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.713, 5274, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.736, 5294, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.734, 5292, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.746, 5303, 2250], 'true': [4.58e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.788, 5341, 2250], 'true': [2.46e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.597, 5172, 2250], 'true': [1.93e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.818, 5368, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.668, 5234, 2250], 'true': [0.0, 0, 399]}]]
[{'': [6.268447192670558e-15, 0.20901008333745874]}, {'': [-5.342426584662407e-15, 0.2088508166294704]}, {'': [-1.2109500258568123e-15, 0.209616309150492]}, {'': [-1.887657393247384e-15, 0.20929704447234934]}, {'': [-1.6383441526298048e-15, 0.2093289511907464]}, {'': [5.2533861415847e-16, 0.20915351893701403]}, {'': [1.5136875323210153e-16, 0.20854852051897685]}, {'': [9.349246523159212e-17, 0.21125117552380976]}, {'': [-2.62669307079235e-16, 0.20811965084425862]}, {'': [-3.227716061566871e-16, 0.21025613594772233]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,58e-06, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17495375800832402;  // std dev = 0,465, 6.635,000 (wgt'ed) examples reached here.  /* #neg=4.533 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.2391013160518933;  // std dev = 3,147, 42,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.026709541160117867;  // std dev = 8,602, 528,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=89 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020724304337107795;  // std dev = 6,147, 355,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15215153807717707;  // std dev = 0,465, 6.638,000 (wgt'ed) examples reached here.  /* #neg=4.536 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2836251276003805;  // std dev = 2,947, 35,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return -0.038824743315489005;  // std dev = 1,341, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0034572876054413306;  // std dev = 8,704, 634,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=88 */
%   | | | else return 0.05260411203308688;  // std dev = 5,803, 213,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=42 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2812389035888349;  // std dev = 5,556, 124,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=58 */
%   | | | else return -0.08356185542444781;  // std dev = 2,506, 68,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1877300969393198;  // std dev = 6,178, 163,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=61 */
%   | | | else return 0.1310797389182335;  // std dev = 36,721, 6.222,000 (wgt'ed) examples reached here.  /* #neg=4.246 #pos=1.976 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.056847621224545786;  // std dev = 7,661, 357,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=74 */
%   | | | else return -0.019710534249426113;  // std dev = 5,050, 229,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=31 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.006458088962545188;  // std dev = 6,108, 325,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=43 */
%   | | | else return -0.13026892992418168;  // std dev = 0,013, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10816039241522934;  // std dev = 0,465, 6.657,000 (wgt'ed) examples reached here.  /* #neg=4.555 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3837642312878954;  // std dev = 1,335, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04040133209333695;  // std dev = 3,182, 62,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1060501162890266;  // std dev = 3,437, 63,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return 0.0017746421423281177;  // std dev = 9,835, 771,000 (wgt'ed) examples reached here.  /* #neg=657 #pos=114 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08924515514059721;  // std dev = 0,464, 6.666,000 (wgt'ed) examples reached here.  /* #neg=4.564 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.07054552737725428;  // std dev = 7,521, 321,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=74 */
%   | | | else return -0.03670896862216254;  // std dev = 5,103, 264,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=31 */
%   | | else return -0.007384112051809099;  // std dev = 0,337, 327,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=43 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,58e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07788913492555165;  // std dev = 0,466, 6.570,000 (wgt'ed) examples reached here.  /* #neg=4.468 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.16705009023146575;  // std dev = 3,131, 40,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.005515175409785817;  // std dev = 8,577, 548,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=89 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0020878425836093817;  // std dev = 6,069, 306,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=43 */
%   | | | else return -0.11659005761151195;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05958694451013953;  // std dev = 0,465, 6.648,000 (wgt'ed) examples reached here.  /* #neg=4.546 #pos=2.102 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.004251524631739736;  // std dev = 1,242, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.17208451395641045;  // std dev = 3,173, 46,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -3.28936655411297E-5;  // std dev = 8,605, 603,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=89 */
%   | | | else return 0.020538174548712745;  // std dev = 5,741, 218,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1,93e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2493904483509482;  // std dev = 4,262, 75,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=40 */
%   | | | else return -0.06944919385991555;  // std dev = 4,371, 126,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=25 */
%   | | else return 0.04579559061528908;  // std dev = 0,464, 6.493,000 (wgt'ed) examples reached here.  /* #neg=4.456 #pos=2.037 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.05045050789755398;  // std dev = 3,395, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | | else return -0.01254655804300785;  // std dev = 8,672, 658,000 (wgt'ed) examples reached here.  /* #neg=569 #pos=89 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.038047962117602224;  // std dev = 5,800, 203,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=43 */
%   | | | else return -0.10705548102910986;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.029624798347406008;  // std dev = 36,569, 6.305,000 (wgt'ed) examples reached here.  /* #neg=4.370 #pos=1.935 */
%   | | | else return 0.06658674993094993;  // std dev = 9,136, 528,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=120 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.1561871057173252;  // std dev = 4,974, 275,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=28 */
%   | | | else return 0.1348755970750115;  // std dev = 7,316, 258,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=90 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.4973024945651051;  // std dev = 0,420, 44,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=34 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.024883893496076035;  // std dev = 5,831, 210,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=43 */
%   | | | else return -0.09724367569232888;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.25043508446502666;  // std dev = 3,970, 67,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | | else return -0.08663642018716945;  // std dev = 4,408, 141,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=25 */
%   | | else return 0.036587719532248764;  // std dev = 0,465, 6.379,000 (wgt'ed) examples reached here.  /* #neg=4.342 #pos=2.037 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.01623531214947555;  // std dev = 8,513, 618,000 (wgt'ed) examples reached here.  /* #neg=530 #pos=88 */
%   | | | else return 0.024736676889858145;  // std dev = 3,680, 84,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | | else return 0.008654441465039882;  // std dev = 0,388, 228,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=43 */


Results
   AUC ROC   = 0.723407
   AUC PR    = 0.303438
   CLL	      = -0.303044
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 1339.294 seconds
Total inference time: 12.821 seconds
AUC ROC: 0.723407


Results scoring model
   AUC ROC   = 0.645478
   AUC PR    = 0.184973
   CLL	      = -0.32639
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 205.853 seconds
Refined model CLL: -0.32639


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.723407
   AUC PR    = 0.303438
   CLL	      = -0.303044
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 1587.3940000000002 seconds
Total inference time: 12.821 seconds
AUC ROC: 0.723407
Total revision time: 1587.3940000000002
Best scored revision CLL: -0.32639


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 19:19:07
{'AUC PR': 0.303438, 'AUC ROC': 0.723407, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.708, 'CLL': -0.32892, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 28.413}, 'Inference time': 12.821, 'CLL': -0.303044, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 1587.3940000000002}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2497573267079051;  // std dev = 5,837, 143,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=56 */
%   | | else return -0.014191490432402564;  // std dev = 0,334, 94,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=12 */
%   | else return 0.21023499411971355;  // std dev = 0,478, 6.879,000 (wgt'ed) examples reached here.  /* #neg=4.457 #pos=2.422 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then if ( author(K, J), title(K, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2823913593419366;  // std dev = 2,839, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( title(L, I), venue(L, A) )
%   | | | then return 0.07243464938522759;  // std dev = 7,521, 336,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=72 */
%   | | | else return -0.05727395047262695;  // std dev = 3,945, 201,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=17 */
%   | else return -0.018993922043345227;  // std dev = 0,328, 350,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8217253346198002;  // std dev = 0,198, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.16457554760865128;  // std dev = 0,072, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return 0.015181295534914744;  // std dev = 4,706, 157,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=29 */
%   | | | else return 0.8365884161420655;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18971708354843858;  // std dev = 0,480, 6.744,000 (wgt'ed) examples reached here.  /* #neg=4.322 #pos=2.422 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return 0.04148857947138084;  // std dev = 0,377, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordtitle(L, I) )
%   | | | then return 0.1171870647639246;  // std dev = 3,184, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.1005188150369522;  // std dev = 1,222, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.002953752947955388;  // std dev = 0,353, 881,000 (wgt'ed) examples reached here.  /* #neg=751 #pos=130 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1574197054099218;  // std dev = 0,477, 7.036,000 (wgt'ed) examples reached here.  /* #neg=4.535 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8155683969752272;  // std dev = 0,090, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1556789727941688;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11548376371953656;  // std dev = 3,143, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return -0.142751803490403;  // std dev = 0,017, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.016743504667759607;  // std dev = 7,008, 460,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=56 */
%   | | | else return 0.05875500240986631;  // std dev = 5,004, 150,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=32 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.05498858037917526;  // std dev = 5,774, 204,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=42 */
%   | | | else return -0.143962361273247;  // std dev = 0,014, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6797526666051986;  // std dev = 0,101, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2817470535170708;  // std dev = 3,577, 74,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=41 */
%   | | | else return -0.04510650941006045;  // std dev = 3,929, 142,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=20 */
%   | else return 0.12703565487004517;  // std dev = 0,477, 6.900,000 (wgt'ed) examples reached here.  /* #neg=4.478 #pos=2.422 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.8182137972888353;  // std dev = 1,040, 74,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=73 */
%   | | | else return -0.15746649117833666;  // std dev = 1,028, 266,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=1 */
%   | | else if ( title(L, I), venue(L, B) )
%   | | | then return -0.142003111184925;  // std dev = 0,000598, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.010843090415382796;  // std dev = 5,078, 233,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=31 */
%   | else return 0.004690220937524769;  // std dev = 0,349, 299,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=43 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11093348575039236;  // std dev = 0,477, 6.986,000 (wgt'ed) examples reached here.  /* #neg=4.485 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.15876773329629837;  // std dev = 0,464, 43,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.4483871423169261;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12337277080298235;  // std dev = 0,022, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.04452318391659848;  // std dev = 2,758, 60,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return -0.01578430020556897;  // std dev = 7,750, 586,000 (wgt'ed) examples reached here.  /* #neg=512 #pos=74 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.022631950143463756;  // std dev = 4,963, 216,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=42 */
%   | | | else return -0.12489114142063461;  // std dev = 0,011, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0757934735064203;  // std dev = 0,472, 7.273,000 (wgt'ed) examples reached here.  /* #neg=4.772 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6193470520280258;  // std dev = 2,197, 78,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=73 */
%   | | | else return -0.13943851727948411;  // std dev = 1,027, 261,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1674222321243769;  // std dev = 2,918, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return -0.050397837986188986;  // std dev = 3,955, 206,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -5.630721265931107E-4;  // std dev = 5,886, 299,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=41 */
%   | | | else return -0.09192089419133252;  // std dev = 1,372, 42,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=2 */
%   | | else return -0.11103588311607183;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then if ( author(F, D), title(F, E) )
%   | | | then return 0.28827563894873276;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14237840744170313;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return 0.5735738606626314;  // std dev = 0,096, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.24701792661601654;  // std dev = 2,867, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | | | else return -0.07736912132483063;  // std dev = 4,194, 144,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=22 */
%   | | else return 0.06694626954468408;  // std dev = 0,477, 6.918,000 (wgt'ed) examples reached here.  /* #neg=4.496 #pos=2.422 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then if ( haswordtitle(L, J) )
%   | | then return 0.04187230734788874;  // std dev = 0,311, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | else return -0.019132350567488507;  // std dev = 0,277, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return -0.010039092775312619;  // std dev = 0,306, 887,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=130 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05659571811383124;  // std dev = 0,475, 7.072,000 (wgt'ed) examples reached here.  /* #neg=4.571 #pos=2.501 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.660788978669496;  // std dev = 0,269, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13697172059958185;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03743291734970402;  // std dev = 2,015, 48,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return -0.13492289628727408;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.01602309129345541;  // std dev = 7,553, 456,000 (wgt'ed) examples reached here.  /* #neg=384 #pos=72 */
%   | | | else return -0.04045390593200866;  // std dev = 2,832, 148,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=17 */
%   | | else return -0.011932298069849948;  // std dev = 0,268, 237,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.0340231861249924;  // std dev = 0,472, 6.651,000 (wgt'ed) examples reached here.  /* #neg=4.370 #pos=2.281 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7254178908995833;  // std dev = 2,418, 126,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=120 */
%   | | | else return -0.14292233857941788;  // std dev = 1,281, 463,000 (wgt'ed) examples reached here.  /* #neg=462 #pos=1 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then return -0.14658081601543224;  // std dev = 0,350, 181,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=27 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4918340127198578;  // std dev = 3,905, 98,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=79 */
%   | | | else return 0.05763595642562114;  // std dev = 4,174, 160,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=43 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return 0.12026857682016523;  // std dev = 0,355, 212,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=73 */
%   | | else return 0.048269980941559626;  // std dev = 0,372, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else return 0.3464005223406301;  // std dev = 0,394, 36,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03886316329258872;  // std dev = 0,473, 6.994,000 (wgt'ed) examples reached here.  /* #neg=4.493 #pos=2.501 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return 0.0038323515085806;  // std dev = 0,301, 483,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=74 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.10723602469775308;  // std dev = 0,040, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.009037522686637517;  // std dev = 3,424, 166,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=31 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.011269526497678319;  // std dev = 3,808, 204,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=41 */
%   | | | else return -0.035161527153720465;  // std dev = 1,351, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return -0.13358181462617813;  // std dev = 0,004, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.671207
   AUC PR    = 0.046567
   CLL	      = -0.334107
   Precision = 0.090909 at threshold = 0.5
   Recall    = 0.002717
   F1        = 0.005277


Total learning time: 2879.729 seconds
Total inference time: 16.284 seconds
AUC ROC: 0.671207


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 20:07:24
{'AUC PR': 0.046567, 'AUC ROC': 0.671207, 'Precision': [0.090909, 0.5], 'Inference time': 16.284, 'CLL': -0.334107, 'Recall': 0.002717, 'Learning time': 2879.729, 'F1': 0.005277}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.7748156017661789;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.18610592434682546;  // std dev = 6,403, 186,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=61 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.21733624045320726;  // std dev = 0,480, 6.743,000 (wgt'ed) examples reached here.  /* #neg=4.321 #pos=2.422 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), title(K, J) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.34090755578916754;  // std dev = 2,691, 29,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( author(L, I), venue(L, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then if ( title(P, N), venue(P, A) )
%   | | | then return 0.06445266002787996;  // std dev = 7,560, 349,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=72 */
%   | | | else return -0.06203885832771769;  // std dev = 3,955, 213,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=17 */
%   | | else if ( haswordvenue(A, Q), haswordauthor(R, Q) )
%   | | | then return -0.05851773156715445;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.016064901378475674;  // std dev = 5,913, 318,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=40 */


Results
   AUC ROC   = 0.600102
   AUC PR    = 0.017063
   CLL	      = -0.196424
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 102.311 seconds
Total inference time: 4.677 seconds
AUC ROC: 0.600102


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 20:09:11
{'AUC PR': 0.017063, 'AUC ROC': 0.600102, 'Precision': [nan, 0.5], 'Inference time': 4.677, 'CLL': -0.196424, 'Recall': 0.0, 'Learning time': 102.311, 'F1': nan}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 185871

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 64082

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.14994704235502793;  // std dev = 16,187, 1.268,000 (wgt'ed) examples reached here.  /* #neg=898 #pos=370 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,23e-07, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.12483329267965541;  // std dev = 16,254, 1.294,000 (wgt'ed) examples reached here.  /* #neg=924 #pos=370 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,37e-07, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.12114374265751955;  // std dev = 16,095, 1.234,000 (wgt'ed) examples reached here.  /* #neg=864 #pos=370 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.09859326861379161;  // std dev = 16,142, 1.251,000 (wgt'ed) examples reached here.  /* #neg=881 #pos=370 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.08110788947815833;  // std dev = 16,158, 1.257,000 (wgt'ed) examples reached here.  /* #neg=887 #pos=370 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.06280116225126038;  // std dev = 16,208, 1.276,000 (wgt'ed) examples reached here.  /* #neg=906 #pos=370 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.05136011075878713;  // std dev = 16,211, 1.277,000 (wgt'ed) examples reached here.  /* #neg=907 #pos=370 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 2,98e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.04959656339027714;  // std dev = 16,123, 1.244,000 (wgt'ed) examples reached here.  /* #neg=874 #pos=370 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8,30e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.033688926501672864;  // std dev = 16,198, 1.272,000 (wgt'ed) examples reached here.  /* #neg=902 #pos=370 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,37e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.04059620729450014;  // std dev = 16,044, 1.216,000 (wgt'ed) examples reached here.  /* #neg=846 #pos=370 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.326814
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 4.222 seconds
Total inference time: 5.817 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587973
   AUC PR    = 0.194865
   CLL	      = -0.326257
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.175947
   F1        = 0.299242


Total scoring time: 5.46 seconds
Parameter learned model CLL: -0.326257


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.187, 898, 370], 'true': [0.0, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.254, 924, 370], 'true': [2.23e-07, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.095, 864, 370], 'true': [3.37e-07, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.142, 881, 370], 'true': [0.0, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.158, 887, 370], 'true': [0.0, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.208, 906, 370], 'true': [0.0, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.211, 907, 370], 'true': [0.0, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.123, 874, 370], 'true': [2.98e-08, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.198, 902, 370], 'true': [8.3e-08, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.044, 846, 370], 'true': [5.37e-08, 0, 79]}]]
[{'': [-8.99421184506456e-16, 0.2066519718575978]}, {'': [6.295948291545192e-16, 0.20417621216937246]}, {'': [1.4390738952103295e-15, 0.20993514391011214]}, {'': [0.0, 0.20828740684511035]}, {'': [-3.822540034152438e-16, 0.2077087482730003]}, {'': [-2.2485529612661398e-17, 0.20588683287309845]}, {'': [-8.994211845064559e-17, 0.20579139758967158]}, {'': [1.1242764806330699e-17, 0.208964444122782]}, {'': [8.713142724906291e-17, 0.20626903603496852]}, {'': [3.653898562057477e-17, 0.21169223943905874]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15877899810580812;  // std dev = 0,459, 1.111,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=334 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.09219148829100131;  // std dev = 4,105, 94,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02022944327886606;  // std dev = 2,812, 74,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,23e-07, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14023724276919064;  // std dev = 0,459, 1.104,000 (wgt'ed) examples reached here.  /* #neg=770 #pos=334 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.28756534347634816;  // std dev = 1,479, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.1892463781022042;  // std dev = 0,805, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01288607236367026;  // std dev = 3,816, 125,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=17 */
%   | | | else return 0.10684824942446396;  // std dev = 3,216, 54,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,37e-07, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12555525592269928;  // std dev = 0,462, 1.085,000 (wgt'ed) examples reached here.  /* #neg=751 #pos=334 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.2375975879125893;  // std dev = 0,482, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.015032870262835861;  // std dev = 3,710, 121,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=16 */
%   | | | else return 0.12190179105876373;  // std dev = 3,258, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10467781255515911;  // std dev = 0,461, 1.090,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=334 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.10505856791889909;  // std dev = 1,642, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.016795694233874794;  // std dev = 3,807, 128,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=17 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07067160408216312;  // std dev = 3,343, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return -0.1579561482788367;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.14632674996247913;  // std dev = 1,591, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.2509428444030103;  // std dev = 2,038, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.07451204401199793;  // std dev = 15,108, 1.125,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=323 */
%   | | | else return 0.020478384087182104;  // std dev = 3,424, 66,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | else return 0.15896011324807252;  // std dev = 0,476, 56,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.004808389673467748;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.045159769736856904;  // std dev = 1,658, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.07204998053469201;  // std dev = 0,460, 1.073,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=326 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.07527728883031638;  // std dev = 3,723, 68,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return -0.04069214103160846;  // std dev = 2,400, 47,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.17685508794290836;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.013584988953229241;  // std dev = 2,809, 68,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1843573079754983;  // std dev = 1,305, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.04981460232862889;  // std dev = 1,840, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.05069161909379303;  // std dev = 0,456, 1.103,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=326 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.2185673871634083;  // std dev = 1,606, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.01347666033979733;  // std dev = 4,062, 100,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=22 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.040060707120262266;  // std dev = 2,849, 88,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=9 */
%   | | | else return -0.15114072678143756;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 2,98e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04840506948534292;  // std dev = 14,717, 1.024,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=311 */
%   | | | else return -0.041568263900289795;  // std dev = 2,825, 49,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.001815456361974602;  // std dev = 3,862, 114,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | | | else return 0.07833612347080547;  // std dev = 2,539, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.1578817268061964;  // std dev = 3,262, 45,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return -0.0017865128843466693;  // std dev = 1,215, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return -0.17886948280010806;  // std dev = 0,113, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8,30e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.23596326750991162;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.0717610134307123;  // std dev = 2,187, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else return 0.04839042419154324;  // std dev = 0,462, 1.037,000 (wgt'ed) examples reached here.  /* #neg=714 #pos=323 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.005326681533510267;  // std dev = 4,255, 106,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=25 */
%   | | | else return 0.17931305636337472;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1476815552340542;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.03979264072840312;  // std dev = 2,853, 92,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,37e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7050355516892066;  // std dev = 0,024, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2806025017068434;  // std dev = 0,080, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.04944621287195143;  // std dev = 0,885, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.02818362959184188;  // std dev = 2,373, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.039054541210427965;  // std dev = 0,462, 1.047,000 (wgt'ed) examples reached here.  /* #neg=721 #pos=326 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.010521920211163481;  // std dev = 4,016, 92,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | | | else return -0.008978924584758144;  // std dev = 2,808, 73,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=9 */


Results
   AUC ROC   = 0.631783
   AUC PR    = 0.190297
   CLL	      = -0.322197
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 119.13300000000001 seconds
Total inference time: 33.767 seconds
AUC ROC: 0.631783


Results scoring model
   AUC ROC   = 0.636877
   AUC PR    = 0.211695
   CLL	      = -0.31627
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.175947
   F1        = 0.299242


Total scoring time: 57.75 seconds
Refined model CLL: -0.31627


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.631783
   AUC PR    = 0.190297
   CLL	      = -0.322197
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 186.565 seconds
Total inference time: 33.767 seconds
AUC ROC: 0.631783
Total revision time: 186.565
Best scored revision CLL: -0.31627


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 20:13:00
{'AUC PR': 0.190297, 'AUC ROC': 0.631783, 'Precision': [1.0, 0.5], 'Inference time': 33.767, 'CLL': -0.322197, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 186.565, 'parameter_0.2': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 5.817, 'CLL': -0.326814, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 4.222}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.274815601766179;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.15814893509951236;  // std dev = 2,049, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else return -0.016851064900487787;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.21021214844454697;  // std dev = 0,478, 1.139,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=401 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.274815601766179;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( title(K, I), venue(K, A) )
%   | | | then return 0.13756069980539468;  // std dev = 3,700, 68,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return -0.04810106490048779;  // std dev = 1,649, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.02792701426757629;  // std dev = 0,318, 79,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.16633484858352712;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.27251113047385134;  // std dev = 2,472, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else return -0.04890305846946565;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return 0.18326875097417145;  // std dev = 0,478, 1.137,000 (wgt'ed) examples reached here.  /* #neg=736 #pos=401 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return -0.016646518526268538;  // std dev = 0,330, 111,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=14 */
%   | | else return 0.08364596627805015;  // std dev = 0,427, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.19904557486937968;  // std dev = 2,998, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return -0.05986323306540183;  // std dev = 0,966, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return -0.13848541000194933;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.30321633382635016;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return -0.05392652331650697;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1922014915780057;  // std dev = 1,775, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0.16940637957955684;  // std dev = 0,481, 1.104,000 (wgt'ed) examples reached here.  /* #neg=700 #pos=404 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then return 0.2440464831114725;  // std dev = 0,488, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.22002387938551654;  // std dev = 1,335, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.021214908444034345;  // std dev = 3,381, 108,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=13 */
%   | | else return 0.10962407499888877;  // std dev = 0,456, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12069174712183728;  // std dev = 0,475, 1.196,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=413 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.021363466190102386;  // std dev = 0,410, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return 3.442651977254748E-4;  // std dev = 3,411, 99,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=14 */
%   | | | else return -0.025310507990873966;  // std dev = 1,608, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else return 0.10544341856285833;  // std dev = 0,455, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10043885029623788;  // std dev = 0,475, 1.191,000 (wgt'ed) examples reached here.  /* #neg=778 #pos=413 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7780998594302566;  // std dev = 0,954, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.13842217571032223;  // std dev = 0,198, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.23341724986674223;  // std dev = 1,481, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.02149835356939491;  // std dev = 1,613, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.10259138475730846;  // std dev = 3,073, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.011271404741765642;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.14787764324826377;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10011292906419977;  // std dev = 0,481, 1.129,000 (wgt'ed) examples reached here.  /* #neg=716 #pos=413 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5931324633357563;  // std dev = 1,294, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.12842641424591625;  // std dev = 0,241, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.11163644716204368;  // std dev = 1,584, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -4.651044834421458E-4;  // std dev = 1,597, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | else return 0.024709149123761754;  // std dev = 0,438, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.5151261995594382;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.08400942946804422;  // std dev = 1,927, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.2017964349739373;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.05946738965361994;  // std dev = 0,922, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0.06942613861636318;  // std dev = 0,478, 1.129,000 (wgt'ed) examples reached here.  /* #neg=728 #pos=401 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordauthor(K, I) )
%   | | then return 0.30717454098353697;  // std dev = 0,353, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( title(L, J), venue(L, B) )
%   | | | then return 0.03431265361702138;  // std dev = 3,697, 72,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return -0.06591717027916703;  // std dev = 1,443, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | else return -0.03013241587353259;  // std dev = 0,256, 75,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.656751211875871;  // std dev = 0,190, 387,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=373 */
%   | | else return -0.2561349076663432;  // std dev = 0,167, 825,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=22 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.16205511648339196;  // std dev = 0,312, 81,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=9 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2880557544926597;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.08750068291525064;  // std dev = 2,523, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6079127331864428;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.1042491149517889;  // std dev = 3,010, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return -0.08754694233830501;  // std dev = 0,986, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return -0.12958355989456155;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.5044096508328797;  // std dev = 0,191, 388,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=374 */
%   | | else return -0.20480780119391567;  // std dev = 0,174, 910,000 (wgt'ed) examples reached here.  /* #neg=883 #pos=27 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then return -0.145478624873897;  // std dev = 0,286, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4053100801261556;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.07163932375516972;  // std dev = 2,526, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6395451766459286;  // std dev = 0,983, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.27341948191777077;  // std dev = 0,027, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0.19683761295298235;  // std dev = 0,950, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.3664922739759992;  // std dev = 0,305, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.40286338695737134;  // std dev = 0,120, 379,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=374 */
%   | | else return -0.16177441935298892;  // std dev = 0,182, 810,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=27 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then return -0.12475132194826305;  // std dev = 0,271, 37,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.014385226983484186;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.09947868573888459;  // std dev = 2,417, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.3697532390072383;  // std dev = 0,238, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.061040857392076917;  // std dev = 2,431, 40,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.03359004177092557;  // std dev = 0,958, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.15872611185461957;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.988839
   AUC PR    = 0.37714
   CLL	      = -0.218138
   Precision = 0.358202 at threshold = 0.5
   Recall    = 0.971466
   F1        = 0.52341


Total learning time: 654.317 seconds
Total inference time: 119.636 seconds
AUC ROC: 0.988839


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 20:25:54
{'AUC PR': 0.37714, 'AUC ROC': 0.988839, 'Precision': [0.358202, 0.5], 'Inference time': 119.636, 'CLL': -0.218138, 'Recall': 0.971466, 'Learning time': 654.317, 'F1': 0.52341}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.21529179224236947;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.08037115732173453;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else return 0.21471002107235815;  // std dev = 0,479, 1.105,000 (wgt'ed) examples reached here.  /* #neg=711 #pos=394 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then if ( haswordauthor(N, L) )
%   | | then return 0.14386322081379804;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( title(P, M), venue(P, B) )
%   | | | then return 0.005517356152143935;  // std dev = 3,455, 95,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=14 */
%   | | | else return -0.04810106490048779;  // std dev = 1,649, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | else if ( haswordvenue(A, Q), haswordauthor(R, Q) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.13814893509951237;  // std dev = 0,449, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */


Results
   AUC ROC   = 0.573768
   AUC PR    = 0.028226
   CLL	      = -0.20038
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 22.138 seconds
Total inference time: 8.238 seconds
AUC ROC: 0.573768


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 20:26:25
{'AUC PR': 0.028226, 'AUC ROC': 0.573768, 'Precision': [nan, 0.5], 'Inference time': 8.238, 'CLL': -0.20038, 'Recall': 0.0, 'Learning time': 22.138, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 9,23e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.15603822223610622;  // std dev = 22,917, 2.511,000 (wgt'ed) examples reached here.  /* #neg=1.763 #pos=748 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.12799577717887084;  // std dev = 23,046, 2.580,000 (wgt'ed) examples reached here.  /* #neg=1.832 #pos=748 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,26e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.12241032509046323;  // std dev = 22,842, 2.473,000 (wgt'ed) examples reached here.  /* #neg=1.725 #pos=748 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,54e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.09255000831441448;  // std dev = 23,023, 2.567,000 (wgt'ed) examples reached here.  /* #neg=1.819 #pos=748 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,80e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.08377488716650365;  // std dev = 22,919, 2.512,000 (wgt'ed) examples reached here.  /* #neg=1.764 #pos=748 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694904;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.06793084310115273;  // std dev = 22,942, 2.524,000 (wgt'ed) examples reached here.  /* #neg=1.776 #pos=748 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,46e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.05145643316225915;  // std dev = 23,011, 2.561,000 (wgt'ed) examples reached here.  /* #neg=1.813 #pos=748 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.04668122195051642;  // std dev = 22,934, 2.520,000 (wgt'ed) examples reached here.  /* #neg=1.772 #pos=748 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.03410147499880299;  // std dev = 22,995, 2.552,000 (wgt'ed) examples reached here.  /* #neg=1.804 #pos=748 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.018918513454190933;  // std dev = 23,134, 2.629,000 (wgt'ed) examples reached here.  /* #neg=1.881 #pos=748 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.323746
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 7.365 seconds
Total inference time: 6.044 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.583519
   AUC PR    = 0.185636
   CLL	      = -0.323311
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167038
   F1        = 0.28626


Total scoring time: 7.481 seconds
Parameter learned model CLL: -0.323311


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.917, 1763, 748], 'true': [9.23e-07, 0, 150]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.046, 1832, 748], 'true': [0.0, 0, 150]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.842, 1725, 748], 'true': [5.26e-07, 0, 150]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.023, 1819, 748], 'true': [4.54e-07, 0, 150]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.919, 1764, 748], 'true': [2.8e-07, 0, 150]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.942, 1776, 748], 'true': [0.0, 0, 150]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.011, 1813, 748], 'true': [2.46e-07, 0, 150]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.934, 1772, 748], 'true': [0.0, 0, 150]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.995, 1804, 748], 'true': [0.0, 0, 150]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.134, 1881, 748], 'true': [6.66e-08, 0, 150]}]]
[{'': [5.684341886080802e-15, 0.20915125974587273]}, {'': [-2.4632148173016807e-15, 0.20586743585121256]}, {'': [1.8474111129762605e-15, 0.2109805715721057]}, {'': [1.3737159558028603e-15, 0.20648217183454876]}, {'': [5.210646728907401e-16, 0.20910331047912217]}, {'': [-1.6579330501069005e-16, 0.208528710747679]}, {'': [4.026408835973901e-16, 0.20676653268221057]}, {'': [-3.019806626980426e-16, 0.20872008062484051]}, {'': [-3.552713678800501e-17, 0.20719381688465932]}, {'': [2.960594732333751e-17, 0.20356786470826446]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 9,23e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3105298874804647;  // std dev = 3,226, 42,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | | else return -0.07518439823382113;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else return 0.176809222180847;  // std dev = 0,466, 2.090,000 (wgt'ed) examples reached here.  /* #neg=1.424 #pos=666 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.17814893509951235;  // std dev = 2,332, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.006715929765353128;  // std dev = 5,094, 222,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=30 */
%   | | | else return 0.0599033210644242;  // std dev = 4,285, 114,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=23 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10025858270272855;  // std dev = 3,525, 64,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.8458421436299018;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15127034627378455;  // std dev = 0,465, 2.105,000 (wgt'ed) examples reached here.  /* #neg=1.439 #pos=666 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13134655239579698;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.004671867573808485;  // std dev = 5,090, 220,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=30 */
%   | | else return 0.11761056021033602;  // std dev = 0,442, 90,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,26e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12063284118395289;  // std dev = 0,461, 2.231,000 (wgt'ed) examples reached here.  /* #neg=1.545 #pos=686 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.017487158337111012;  // std dev = 4,778, 210,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=26 */
%   | | | else return 0.03918504632487351;  // std dev = 3,063, 61,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.08797031443921327;  // std dev = 4,235, 95,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return -0.16486228935574296;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,54e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11431952894766682;  // std dev = 0,466, 2.142,000 (wgt'ed) examples reached here.  /* #neg=1.456 #pos=686 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.06992308846337006;  // std dev = 2,431, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.014853650405661846;  // std dev = 5,127, 240,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=30 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07029745165478347;  // std dev = 4,250, 97,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | | | else return -0.14339812416692707;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,80e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09326982194477307;  // std dev = 0,465, 2.154,000 (wgt'ed) examples reached here.  /* #neg=1.468 #pos=686 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.05901005057960298;  // std dev = 2,431, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.15080428980838398;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05969003692400932;  // std dev = 2,213, 29,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return -0.01912959004016779;  // std dev = 6,327, 351,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=47 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694904;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.296728594093787;  // std dev = 2,071, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.0526745825876177;  // std dev = 2,581, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else return 0.08222880694119976;  // std dev = 0,468, 2.057,000 (wgt'ed) examples reached here.  /* #neg=1.391 #pos=666 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.3509279764966972;  // std dev = 1,856, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.15455094690543306;  // std dev = 0,051, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.12555891319324608;  // std dev = 2,302, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.0028334608351539468;  // std dev = 6,254, 306,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=47 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,46e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.7073468329749127;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.047490557865375815;  // std dev = 3,400, 56,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | else return 0.0530796069258824;  // std dev = 0,463, 2.142,000 (wgt'ed) examples reached here.  /* #neg=1.476 #pos=666 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.02172698355705866;  // std dev = 4,758, 217,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=26 */
%   | | | else return 0.0074291414046783;  // std dev = 3,052, 63,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.2302824931256886;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.025822357776010392;  // std dev = 4,342, 114,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6988782234509522;  // std dev = 4,830, 645,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=621 */
%   | | | else return -0.2292795196967162;  // std dev = 6,293, 1.585,000 (wgt'ed) examples reached here.  /* #neg=1.546 #pos=39 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.11151640940012254;  // std dev = 3,780, 127,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=17 */
%   | | | else return 0.14080504503709532;  // std dev = 4,604, 97,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.13150867065906624;  // std dev = 4,726, 106,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return -0.24129021970284895;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12772554839762126;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5476358856994848;  // std dev = 4,680, 643,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=621 */
%   | | | else return -0.18811569996185393;  // std dev = 6,244, 1.555,000 (wgt'ed) examples reached here.  /* #neg=1.516 #pos=39 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.09202942078546485;  // std dev = 3,779, 132,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=17 */
%   | | | else return 0.13652693108636557;  // std dev = 4,472, 94,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5560986810101204;  // std dev = 0,348, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.06353949478683632;  // std dev = 4,171, 87,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | | | else return -0.11415894040523654;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.002080205700798343;  // std dev = 14,244, 2.079,000 (wgt'ed) examples reached here.  /* #neg=1.448 #pos=631 */
%   | | | else return 0.01634662939358419;  // std dev = 5,649, 234,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=55 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.01543085184569549;  // std dev = 3,050, 134,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=23 */
%   | | | else return 0.12593278758079157;  // std dev = 1,455, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.49405062756986445;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.06387470398308497;  // std dev = 4,136, 84,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | | else return -0.10311296411027117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.980498
   AUC PR    = 0.52386
   CLL	      = -0.22412
   Precision = 0.350382 at threshold = 0.5
   Recall    = 0.950713
   F1        = 0.51205


Total learning time: 780.505 seconds
Total inference time: 102.393 seconds
AUC ROC: 0.980498


Results scoring model
   AUC ROC   = 0.970275
   AUC PR    = 0.600599
   CLL	      = -0.223478
   Precision = 0.469894 at threshold = 0.5
   Recall    = 0.842984
   F1        = 0.603428


Total scoring time: 422.896 seconds
Refined model CLL: -0.223478


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980498
   AUC PR    = 0.52386
   CLL	      = -0.22412
   Precision = 0.350382 at threshold = 0.5
   Recall    = 0.950713
   F1        = 0.51205


Total learning time: 1218.247 seconds
Total inference time: 102.393 seconds
AUC ROC: 0.980498
Total revision time: 1218.247
Best scored revision CLL: -0.223478


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 20:48:33
{'AUC PR': 0.52386, 'AUC ROC': 0.980498, 'Precision': [0.350382, 0.5], 'parameter_0.4': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 6.044, 'CLL': -0.323746, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 7.365}, 'Inference time': 102.393, 'CLL': -0.22412, 'Recall': 0.950713, 'F1': 0.51205, 'Learning time': 1218.247}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21434833859332916;  // std dev = 0,479, 2.347,000 (wgt'ed) examples reached here.  /* #neg=1.511 #pos=836 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.14386322081379807;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.005725410450226327;  // std dev = 4,739, 191,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=26 */
%   | | | else return -0.06021841183926325;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.12975387337111682;  // std dev = 4,003, 81,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | | else return 0.0803711573217344;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.21461882709838195;  // std dev = 3,508, 52,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.1633367758163303;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.580003442482997;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.41823873660064437;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.048753442482997136;  // std dev = 2,339, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else return 0.19074855833941698;  // std dev = 0,480, 2.201,000 (wgt'ed) examples reached here.  /* #neg=1.407 #pos=794 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then return 0.04650998602074434;  // std dev = 0,395, 204,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=40 */
%   | | else return 0.25776811396607;  // std dev = 0,491, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return -0.02676694302433073;  // std dev = 0,316, 160,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.7914130773267777;  // std dev = 0,064, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.27035667347532577;  // std dev = 2,940, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return -0.20112115240929426;  // std dev = 0,093, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.15277886154706044;  // std dev = 0,477, 2.307,000 (wgt'ed) examples reached here.  /* #neg=1.496 #pos=811 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then return 0.2620129234574724;  // std dev = 0,492, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( title(J, H), venue(J, A) )
%   | | | then return 0.07535901666870194;  // std dev = 4,846, 132,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=31 */
%   | | | else return -0.07310373489215881;  // std dev = 2,312, 73,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=6 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.014495300418644115;  // std dev = 0,328, 147,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=18 */
%   | | else return -0.12253740386148838;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1381019202652098;  // std dev = 0,480, 2.303,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=836 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return 0.015525381578739367;  // std dev = 4,857, 180,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=29 */
%   | | | else return -0.03431153496404046;  // std dev = 2,493, 64,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   | | else if ( haswordtitle(E, I), haswordvenue(B, I) )
%   | | | then return -0.03981820096562171;  // std dev = 1,336, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return -0.13049678088432556;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.09294942085542258;  // std dev = 4,012, 82,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | | else return -0.004984470311211114;  // std dev = 1,317, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return -0.10995944512948592;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6004573635557301;  // std dev = 0,088, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10532693108096863;  // std dev = 0,478, 2.337,000 (wgt'ed) examples reached here.  /* #neg=1.509 #pos=828 */
%   else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | then if ( haswordtitle(G, E) )
%   | | then if ( author(H, F), title(H, G) )
%   | | | then return -0.1372834544757893;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.19002766358902362;  // std dev = 2,224, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else return -0.04250645137782511;  // std dev = 0,349, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.011271222090823742;  // std dev = 4,707, 197,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=26 */
%   | | | else return -0.0799819718675693;  // std dev = 1,944, 71,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.041783081125913876;  // std dev = 4,212, 102,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=23 */
%   | | | else return -0.09965041926544306;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09109631304614797;  // std dev = 0,479, 2.313,000 (wgt'ed) examples reached here.  /* #neg=1.477 #pos=836 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.11690684709477027;  // std dev = 0,460, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.012326502599913065;  // std dev = 4,717, 199,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=26 */
%   | | | else return -0.05972270386748961;  // std dev = 1,930, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06705966727884684;  // std dev = 4,029, 84,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | | | else return 0.0035706781539294095;  // std dev = 1,306, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return -0.09105960100158272;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0684564551863902;  // std dev = 0,478, 2.339,000 (wgt'ed) examples reached here.  /* #neg=1.503 #pos=836 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.16752320725238115;  // std dev = 0,490, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return -0.15899634310326902;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.026617073073204402;  // std dev = 4,208, 182,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=20 */
%   | | | else return 0.017064384095097498;  // std dev = 2,920, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.041110064462337934;  // std dev = 4,265, 99,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
%   | | | else return -0.08469680338052901;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6696759708226617;  // std dev = 0,173, 773,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=749 */
%   | | else return -0.26063263675215004;  // std dev = 0,163, 1.517,000 (wgt'ed) examples reached here.  /* #neg=1.478 #pos=39 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1383757669264904;  // std dev = 0,327, 134,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=17 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.35835029296810006;  // std dev = 3,037, 42,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | | | else return 0.11496123211284683;  // std dev = 3,136, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.7636228534308738;  // std dev = 0,216, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.17842534237245283;  // std dev = 1,271, 54,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=2 */
%   | | else return -0.02315922182445061;  // std dev = 0,367, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else return 0.5258834588812471;  // std dev = 0,323, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.5168974486803466;  // std dev = 0,173, 774,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=751 */
%   | | else return -0.20554392750540038;  // std dev = 0,170, 1.634,000 (wgt'ed) examples reached here.  /* #neg=1.587 #pos=47 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then return -0.12986349925439497;  // std dev = 0,303, 67,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=7 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.29400889117948165;  // std dev = 2,963, 41,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=28 */
%   | | | else return 0.0993855064413256;  // std dev = 3,100, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.37971755819600084;  // std dev = 0,386, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return 0.5110139192007074;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return -0.010430273704113042;  // std dev = 0,778, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.03642131999427412;  // std dev = 0,367, 88,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordtitle(D, E), haswordvenue(B, E) )
%   | then if ( title(F, D), venue(F, A) )
%   | | then return 0.00417921373341717;  // std dev = 0,317, 2.216,000 (wgt'ed) examples reached here.  /* #neg=1.457 #pos=759 */
%   | | else if ( title(G, D), venue(G, B) )
%   | | | then return -0.1162652118735508;  // std dev = 2,495, 64,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   | | | else return 0.06352939077734675;  // std dev = 4,851, 176,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   | else if ( title(H, D), venue(H, A) )
%   | | then return 0.029580292743841365;  // std dev = 0,259, 133,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=23 */
%   | | else return 0.12034628778707683;  // std dev = 0,395, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then return 0.053351545364448374;  // std dev = 0,367, 99,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | | else if ( title(L, J), venue(L, A) )
%   | | | then return -0.19938434074170014;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.23257830706431631;  // std dev = 1,238, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.2769529060107426;  // std dev = 0,265, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */


Results
   AUC ROC   = 0.978243
   AUC PR    = 0.406478
   CLL	      = -0.244673
   Precision = 0.355027 at threshold = 0.5
   Recall    = 0.948119
   F1        = 0.516608


Total learning time: 2242.602 seconds
Total inference time: 121.949 seconds
AUC ROC: 0.978243


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 21:27:58
{'AUC PR': 0.406478, 'AUC ROC': 0.978243, 'Precision': [0.355027, 0.5], 'Inference time': 121.949, 'CLL': -0.244673, 'Recall': 0.948119, 'Learning time': 2242.602, 'F1': 0.516608}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21756424034456315;  // std dev = 0,480, 2.326,000 (wgt'ed) examples reached here.  /* #neg=1.490 #pos=836 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8278459047964812;  // std dev = 0,985, 33,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.23314893509951234;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.04185106490048771;  // std dev = 2,324, 60,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.014191490432402547;  // std dev = 3,963, 141,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=18 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.561705
   AUC PR    = 0.022031
   CLL	      = -0.200408
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 39.401 seconds
Total inference time: 5.948 seconds
AUC ROC: 0.561705


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 21:28:44
{'AUC PR': 0.022031, 'AUC ROC': 0.561705, 'Precision': [nan, 0.5], 'Inference time': 5.948, 'CLL': -0.200408, 'Recall': 0.0, 'Learning time': 39.401, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,07e-06, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.1532396501475328;  // std dev = 27,922, 3.748,000 (wgt'ed) examples reached here.  /* #neg=2.642 #pos=1.106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.126173845430256;  // std dev = 28,067, 3.844,000 (wgt'ed) examples reached here.  /* #neg=2.738 #pos=1.106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.11252242842464572;  // std dev = 27,985, 3.789,000 (wgt'ed) examples reached here.  /* #neg=2.683 #pos=1.106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.09374913193460016;  // std dev = 28,017, 3.810,000 (wgt'ed) examples reached here.  /* #neg=2.704 #pos=1.106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.08051760447303595;  // std dev = 27,977, 3.784,000 (wgt'ed) examples reached here.  /* #neg=2.678 #pos=1.106 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,01e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.0688663232439686;  // std dev = 27,936, 3.757,000 (wgt'ed) examples reached here.  /* #neg=2.651 #pos=1.106 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.05676816379929746;  // std dev = 27,933, 3.755,000 (wgt'ed) examples reached here.  /* #neg=2.649 #pos=1.106 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,19e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.04238025100719274;  // std dev = 28,011, 3.806,000 (wgt'ed) examples reached here.  /* #neg=2.700 #pos=1.106 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.035383826876682734;  // std dev = 27,991, 3.793,000 (wgt'ed) examples reached here.  /* #neg=2.687 #pos=1.106 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 9,42e-08, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else return 0.030439736858321;  // std dev = 27,954, 3.769,000 (wgt'ed) examples reached here.  /* #neg=2.663 #pos=1.106 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.323277
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 12.659 seconds
Total inference time: 6.382 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.589458
   AUC PR    = 0.197702
   CLL	      = -0.322673
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.178916
   F1        = 0.303526


Total scoring time: 11.161 seconds
Parameter learned model CLL: -0.322673


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.922, 2642, 1106], 'true': [1.07e-06, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.067, 2738, 1106], 'true': [0.0, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.985, 2683, 1106], 'true': [4.92e-07, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.017, 2704, 1106], 'true': [0.0, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.977, 2678, 1106], 'true': [2.67e-07, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.936, 2651, 1106], 'true': [3.01e-07, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.933, 2649, 1106], 'true': [2.92e-07, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.011, 2700, 1106], 'true': [1.19e-07, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.991, 2687, 1106], 'true': [0.0, 0, 241]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.954, 2663, 1106], 'true': [9.42e-08, 0, 241]}]]
[{'': [4.717296171021412e-15, 0.20801218494049653]}, {'': [-4.186600351781503e-15, 0.2049376787317117]}, {'': [1.00242543634205e-15, 0.2066933904112071]}, {'': [-2.0638170748218678e-16, 0.20602117648683382]}, {'': [2.9483101068883824e-16, 0.20685377175065092]}, {'': [3.7590953862826877e-16, 0.20772198523715518]}, {'': [3.537972128266059e-16, 0.20778644009495717]}, {'': [5.896620213776765e-17, 0.20614904309346746]}, {'': [-1.7321321877969247e-16, 0.20656517629401214]}, {'': [3.685387633610478e-17, 0.20733566714708984]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,07e-06, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17408556138096107;  // std dev = 0,465, 3.219,000 (wgt'ed) examples reached here.  /* #neg=2.202 #pos=1.017 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.12841920536978263;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.005947677237876822;  // std dev = 6,329, 318,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=47 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.1572143556602586;  // std dev = 4,736, 107,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.09116474441928707;  // std dev = 4,138, 90,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
%   | | | else return 0.8356091888637309;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14258593304976241;  // std dev = 0,461, 3.225,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=990 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.08078567709363534;  // std dev = 5,711, 180,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=43 */
%   | | | else return -0.013514102064664581;  // std dev = 3,847, 128,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.14257661512194456;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.009279040672389736;  // std dev = 5,010, 218,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=29 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13003679615979297;  // std dev = 0,464, 3.229,000 (wgt'ed) examples reached here.  /* #neg=2.212 #pos=1.017 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.12090254941829098;  // std dev = 2,427, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return -0.13548690688192566;  // std dev = 0,042, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.017993337779839046;  // std dev = 6,526, 386,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=49 */
%   | | | else return 0.03978180615069999;  // std dev = 5,013, 153,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=32 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.07109922193624514;  // std dev = 4,170, 87,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | | | else return 0.760830618602442;  // std dev = 0,117, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.11318130359280762;  // std dev = 0,466, 3.106,000 (wgt'ed) examples reached here.  /* #neg=2.117 #pos=989 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.020017682073365396;  // std dev = 6,458, 283,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=52 */
%   | | | else return 0.14639997975646854;  // std dev = 2,392, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01071645371454355;  // std dev = 5,026, 225,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=29 */
%   | | | else return -0.12574414339782564;  // std dev = 0,029, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,67e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07781906235308785;  // std dev = 0,459, 3.365,000 (wgt'ed) examples reached here.  /* #neg=2.348 #pos=1.017 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16983945922039892;  // std dev = 2,313, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.13749107378312533;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.01539352850116515;  // std dev = 6,474, 285,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=52 */
%   | | | else return -0.010313156662236023;  // std dev = 5,026, 228,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=29 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,01e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16925148446459748;  // std dev = 3,873, 64,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | | | else return -0.1495448087251124;  // std dev = 1,154, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return 0.0725494685078234;  // std dev = 0,463, 3.183,000 (wgt'ed) examples reached here.  /* #neg=2.194 #pos=989 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12442228930261798;  // std dev = 2,641, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.057250508539672146;  // std dev = 0,929, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.015728215584439827;  // std dev = 6,370, 366,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=47 */
%   | | | else return 0.030914705176771935;  // std dev = 4,928, 147,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=31 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.061479100798850425;  // std dev = 0,463, 3.246,000 (wgt'ed) examples reached here.  /* #neg=2.229 #pos=1.017 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07731069828531627;  // std dev = 2,690, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.04237098888247902;  // std dev = 0,875, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.011501071728194088;  // std dev = 6,360, 361,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=47 */
%   | | | else return 0.03562681935503075;  // std dev = 4,898, 141,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=31 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,19e-07, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04404317866200962;  // std dev = 0,461, 3.308,000 (wgt'ed) examples reached here.  /* #neg=2.291 #pos=1.017 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1162091071208719;  // std dev = 2,368, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.09987377345453018;  // std dev = 0,064, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01845479667266907;  // std dev = 6,517, 383,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=49 */
%   | | | else return 0.009533351310680012;  // std dev = 5,039, 162,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=32 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6966761778705535;  // std dev = 5,839, 957,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=922 */
%   | | | else return -0.22987816480341805;  // std dev = 8,205, 2.403,000 (wgt'ed) examples reached here.  /* #neg=2.336 #pos=67 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13524458772868794;  // std dev = 4,358, 196,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=22 */
%   | | | else return 0.1614081718838284;  // std dev = 5,120, 125,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5195314990664411;  // std dev = 0,397, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.06776966007285141;  // std dev = 4,858, 122,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=32 */
%   | | | else return -0.1163041193357681;  // std dev = 0,044, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 9,42e-08, 241,000 (wgt'ed) examples reached here.  /* #pos=241 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5498435145126617;  // std dev = 5,229, 950,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=922 */
%   | | | else return -0.1882075306963441;  // std dev = 8,148, 2.336,000 (wgt'ed) examples reached here.  /* #neg=2.269 #pos=67 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1042273058092257;  // std dev = 4,339, 180,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=22 */
%   | | | else return 0.12320434209296603;  // std dev = 5,153, 128,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.49281521021464975;  // std dev = 0,313, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.03826440080152032;  // std dev = 4,922, 131,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=32 */
%   | | | else return -0.10944440757845574;  // std dev = 0,007, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.980414
   AUC PR    = 0.513093
   CLL	      = -0.226959
   Precision = 0.350382 at threshold = 0.5
   Recall    = 0.950713
   F1        = 0.51205


Total learning time: 1044.914 seconds
Total inference time: 71.243 seconds
AUC ROC: 0.980414


Results scoring model
   AUC ROC   = 0.963634
   AUC PR    = 0.602659
   CLL	      = -0.224021
   Precision = 0.460852 at threshold = 0.5
   Recall    = 0.843356
   F1        = 0.596013


Total scoring time: 449.647 seconds
Refined model CLL: -0.224021


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980414
   AUC PR    = 0.513093
   CLL	      = -0.226959
   Precision = 0.350382 at threshold = 0.5
   Recall    = 0.950713
   F1        = 0.51205


Total learning time: 1518.3809999999999 seconds
Total inference time: 71.243 seconds
AUC ROC: 0.980414
Total revision time: 1518.3809999999999
Best scored revision CLL: -0.224021


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 21:55:22
{'AUC PR': 0.513093, 'AUC ROC': 0.980414, 'Precision': [0.350382, 0.5], 'Inference time': 71.243, 'parameter_0.6': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 6.382, 'CLL': -0.323277, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 12.659}, 'CLL': -0.226959, 'Recall': 0.950713, 'F1': 0.51205, 'Learning time': 1518.3809999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22289233898469132;  // std dev = 0,481, 3.449,000 (wgt'ed) examples reached here.  /* #neg=2.191 #pos=1.258 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.041822404487267484;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.004727319081090253;  // std dev = 5,948, 299,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=41 */
%   | | | else return -0.06076998381940661;  // std dev = 2,348, 74,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.10608281939703189;  // std dev = 4,750, 121,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=30 */
%   | | | else return -0.0168510649004878;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1926938368106169;  // std dev = 0,481, 3.457,000 (wgt'ed) examples reached here.  /* #neg=2.199 #pos=1.258 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.13530542217852398;  // std dev = 0,453, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -3.8311438948552325E-4;  // std dev = 5,935, 291,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=41 */
%   | | | else return -0.06643151112955042;  // std dev = 2,365, 88,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.14753676824391637;  // std dev = 0,019, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.09828853486315905;  // std dev = 4,889, 127,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=32 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7996989443384042;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.09547359222572815;  // std dev = 3,846, 71,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | else return 0.7996989443384042;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, C) )
%   | | | then return 0.07469894433840427;  // std dev = 3,994, 80,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
%   | | | else return 0.7996989443384042;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1628122090264581;  // std dev = 0,481, 3.302,000 (wgt'ed) examples reached here.  /* #neg=2.103 #pos=1.199 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then return -9.522347834469002E-4;  // std dev = 0,346, 406,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=57 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.08471304460906512;  // std dev = 0,432, 128,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=32 */
%   | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.551242486113484;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.01195523696919247;  // std dev = 4,131, 98,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=22 */
%   | | | else return 0.6421515770225751;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1395434652916262;  // std dev = 0,482, 3.332,000 (wgt'ed) examples reached here.  /* #neg=2.109 #pos=1.223 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.17826581079697465;  // std dev = 0,465, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( title(K, I), venue(K, A) )
%   | | | then return 0.05353617517642524;  // std dev = 5,690, 190,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=42 */
%   | | | else return -0.04701265028563169;  // std dev = 3,003, 102,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=10 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return -0.1298237095178809;  // std dev = 0,047, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.008691918399445253;  // std dev = 0,335, 223,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=29 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11033761067071156;  // std dev = 0,480, 3.464,000 (wgt'ed) examples reached here.  /* #neg=2.206 #pos=1.258 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.15805666962620538;  // std dev = 0,798, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20285786027143685;  // std dev = 2,108, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.03698223785810015;  // std dev = 5,729, 196,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=42 */
%   | | | else return -0.05624309715606017;  // std dev = 3,038, 115,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.014588928979724696;  // std dev = 4,770, 174,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=27 */
%   | | | else return -0.07974391817895463;  // std dev = 1,386, 40,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | | else return -0.10080572161602529;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08448212819717792;  // std dev = 0,478, 3.508,000 (wgt'ed) examples reached here.  /* #neg=2.250 #pos=1.258 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7446775846962286;  // std dev = 2,115, 47,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   | | | else return -0.13818744692129198;  // std dev = 0,285, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.16427450184129638;  // std dev = 0,085, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.057077817309922216;  // std dev = 3,415, 71,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06438852288840123;  // std dev = 4,714, 116,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=30 */
%   | | | else return -0.0049701086350275375;  // std dev = 1,315, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return -0.09202891421413661;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06322431920588342;  // std dev = 0,477, 3.548,000 (wgt'ed) examples reached here.  /* #neg=2.290 #pos=1.258 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return -0.031029187789534;  // std dev = 0,762, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.07075034312336138;  // std dev = 2,573, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.009562690617787608;  // std dev = 5,133, 298,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=41 */
%   | | | else return -0.0631401106662682;  // std dev = 2,353, 92,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.20472623297666281;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.03839376378909495;  // std dev = 4,927, 135,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=32 */
%   | | else return -0.08462232369368784;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6729201159935925;  // std dev = 0,150, 1.152,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1.126 */
%   | | else return -0.25727006475973446;  // std dev = 0,173, 2.307,000 (wgt'ed) examples reached here.  /* #neg=2.240 #pos=67 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1544794642290811;  // std dev = 0,317, 189,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=22 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3373801261251816;  // std dev = 3,840, 65,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return 0.06762089332461312;  // std dev = 3,819, 88,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6538902920759893;  // std dev = 0,170, 37,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05562095317905418;  // std dev = 4,680, 114,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=30 */
%   | | | else return -0.03519448219176613;  // std dev = 1,348, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return -0.07829359367657884;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.037374039162068565;  // std dev = 0,393, 3.460,000 (wgt'ed) examples reached here.  /* #neg=2.202 #pos=1.258 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.0671173505198792;  // std dev = 0,315, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return -0.13357062791279292;  // std dev = 0,058, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return -0.03261459159891456;  // std dev = 5,983, 308,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=44 */
%   | | | else return 0.10018224101099361;  // std dev = 1,726, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.007752692439312307;  // std dev = 3,639, 220,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=29 */
%   | | | else return -0.07282692254301915;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then return 0.020929741364692403;  // std dev = 0,375, 3.542,000 (wgt'ed) examples reached here.  /* #neg=2.349 #pos=1.193 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.13570791335061294;  // std dev = 0,311, 198,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=22 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2154492704202234;  // std dev = 4,037, 69,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=42 */
%   | | | else return 0.08602462369141456;  // std dev = 3,749, 79,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.6677431777949979;  // std dev = 1,485, 45,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | | else return -0.1999077807326887;  // std dev = 1,083, 102,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=2 */
%   | | else if ( title(K, H), venue(K, A) )
%   | | | then return -0.18563151969230116;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.153424409319087;  // std dev = 1,284, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.36850717524958015;  // std dev = 0,262, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */


Results
   AUC ROC   = 0.977158
   AUC PR    = 0.341957
   CLL	      = -0.29744
   Precision = 0.30303 at threshold = 0.5
   Recall    = 0.02594
   F1        = 0.04779


Total learning time: 867.333 seconds
Total inference time: 59.623 seconds
AUC ROC: 0.977158


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 22:10:50
{'AUC PR': 0.341957, 'AUC ROC': 0.977158, 'Precision': [0.30303, 0.5], 'Inference time': 59.623, 'CLL': -0.29744, 'Recall': 0.02594, 'Learning time': 867.333, 'F1': 0.04779}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.089727882467933;  // std dev = 4,112, 95,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=22 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21212867460746668;  // std dev = 0,478, 3.455,000 (wgt'ed) examples reached here.  /* #neg=2.232 #pos=1.223 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then return 0.06223056775257359;  // std dev = 0,403, 49,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | else if ( title(J, H), venue(J, B) )
%   | | | then return 0.0040564084091202655;  // std dev = 5,918, 281,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=41 */
%   | | | else return -0.07208362304002257;  // std dev = 2,362, 86,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=6 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.10405057444377352;  // std dev = 4,756, 122,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=30 */
%   | | | else return 0.024815601766178853;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.546158
   AUC PR    = 0.015262
   CLL	      = -0.200559
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 74.606 seconds
Total inference time: 6.266 seconds
AUC ROC: 0.546158


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 22:12:11
{'AUC PR': 0.015262, 'AUC ROC': 0.546158, 'Precision': [nan, 0.5], 'Inference time': 6.266, 'CLL': -0.200559, 'Recall': 0.0, 'Learning time': 74.606, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.15087045408684893;  // std dev = 32,354, 5.056,000 (wgt'ed) examples reached here.  /* #neg=3.576 #pos=1.480 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.129482465841419;  // std dev = 32,400, 5.091,000 (wgt'ed) examples reached here.  /* #neg=3.611 #pos=1.480 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.11297662403747101;  // std dev = 32,359, 5.060,000 (wgt'ed) examples reached here.  /* #neg=3.580 #pos=1.480 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.0953263029199595;  // std dev = 32,368, 5.067,000 (wgt'ed) examples reached here.  /* #neg=3.587 #pos=1.480 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.07770664644421538;  // std dev = 32,417, 5.104,000 (wgt'ed) examples reached here.  /* #neg=3.624 #pos=1.480 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,77e-07, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.06585053291306418;  // std dev = 32,384, 5.079,000 (wgt'ed) examples reached here.  /* #neg=3.599 #pos=1.480 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,49e-07, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.05892247453493608;  // std dev = 32,275, 4.997,000 (wgt'ed) examples reached here.  /* #neg=3.517 #pos=1.480 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2,63e-07, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.04036015706901554;  // std dev = 32,452, 5.131,000 (wgt'ed) examples reached here.  /* #neg=3.651 #pos=1.480 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.03790492018421111;  // std dev = 32,334, 5.041,000 (wgt'ed) examples reached here.  /* #neg=3.561 #pos=1.480 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else return 0.024243422984495996;  // std dev = 32,480, 5.153,000 (wgt'ed) examples reached here.  /* #neg=3.673 #pos=1.480 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.321629
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 18.744 seconds
Total inference time: 6.005 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587973
   AUC PR    = 0.194668
   CLL	      = -0.321066
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.175947
   F1        = 0.299242


Total scoring time: 11.564 seconds
Parameter learned model CLL: -0.321066


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.354, 3576, 1480], 'true': [1.05e-06, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.4, 3611, 1480], 'true': [0.0, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.359, 3580, 1480], 'true': [0.0, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.368, 3587, 1480], 'true': [0.0, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.417, 3624, 1480], 'true': [0.0, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.384, 3599, 1480], 'true': [3.77e-07, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.275, 3517, 1480], 'true': [2.49e-07, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.452, 3651, 1480], 'true': [2.63e-07, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.334, 3561, 1480], 'true': [0.0, 0, 316]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.48, 3673, 1480], 'true': [0.0, 0, 316]}]]
[{'': [3.5077426195751783e-15, 0.2070356313090292]}, {'': [-5.036758633236153e-15, 0.20619731686676496]}, {'': [-3.147974145772596e-16, 0.20693964911182722]}, {'': [-8.769356548937946e-16, 0.20677178813571417]}, {'': [-4.272250626405666e-16, 0.20588683287309575]}, {'': [4.49710592253228e-16, 0.206484347855171]}, {'': [1.9674838411078722e-16, 0.20845647272297665]}, {'': [2.1923391372344864e-16, 0.2052435505674362]}, {'': [-2.1923391372344864e-16, 0.20739596093625026]}, {'': [-1.8550561930445654e-16, 0.20472098328319535]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.1506017652881902;  // std dev = 4,683, 106,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.16603638897404593;  // std dev = 0,462, 4.336,000 (wgt'ed) examples reached here.  /* #neg=3.001 #pos=1.335 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13314893509951237;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.015782688832111466;  // std dev = 7,181, 468,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=59 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.09168186923124765;  // std dev = 5,467, 167,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=39 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.11559541782497319;  // std dev = 4,735, 112,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   | | | else return 0.5528067455442879;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.15381402828419705;  // std dev = 0,465, 4.210,000 (wgt'ed) examples reached here.  /* #neg=2.875 #pos=1.335 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.004558158389885642;  // std dev = 6,732, 366,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=53 */
%   | | | else return -0.042409664780584985;  // std dev = 3,882, 165,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06571913439338138;  // std dev = 5,519, 178,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=39 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.128312004047645;  // std dev = 0,464, 4.369,000 (wgt'ed) examples reached here.  /* #neg=2.998 #pos=1.371 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.09008351698296259;  // std dev = 2,885, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return -0.020059096467107428;  // std dev = 7,204, 495,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=59 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04756569247905365;  // std dev = 5,552, 186,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=39 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11048517206007966;  // std dev = 0,465, 4.336,000 (wgt'ed) examples reached here.  /* #neg=2.965 #pos=1.371 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.35510633576983797;  // std dev = 0,987, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07166494015495449;  // std dev = 2,526, 37,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.023756394538100738;  // std dev = 7,266, 518,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=60 */
%   | | | else return 0.03797000848763426;  // std dev = 5,557, 191,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=39 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08660153252514982;  // std dev = 0,462, 4.411,000 (wgt'ed) examples reached here.  /* #neg=3.040 #pos=1.371 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.06425025610694174;  // std dev = 2,901, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return -0.012223745616894759;  // std dev = 7,183, 477,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=59 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.040001986327996446;  // std dev = 5,537, 182,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=39 */
%   | | | else return -0.10511482657536857;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,77e-07, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16682842247562557;  // std dev = 4,814, 96,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=39 */
%   | | | else return -0.1769249430893018;  // std dev = 1,209, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04834494299136098;  // std dev = 4,739, 114,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | | else return 0.08422280683239171;  // std dev = 29,614, 4.005,000 (wgt'ed) examples reached here.  /* #neg=2.708 #pos=1.297 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.09399969312087175;  // std dev = 2,827, 41,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return -0.035985383572225894;  // std dev = 0,913, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.007126911176775679;  // std dev = 7,164, 466,000 (wgt'ed) examples reached here.  /* #neg=407 #pos=59 */
%   | | | else return 0.03618753533580158;  // std dev = 5,451, 179,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=38 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,49e-07, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.055524915597216506;  // std dev = 4,672, 105,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | | else return 0.5150309235452752;  // std dev = 0,050, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.07844237075647931;  // std dev = 4,929, 114,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=38 */
%   | | | else return 0.06589593982483702;  // std dev = 29,672, 4.038,000 (wgt'ed) examples reached here.  /* #neg=2.741 #pos=1.297 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.0649939816258669;  // std dev = 6,247, 217,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=52 */
%   | | | else return -0.029357772980795255;  // std dev = 4,000, 157,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 9.079726508811456E-4;  // std dev = 5,803, 288,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=39 */
%   | | | else return -0.09855906460308189;  // std dev = 0,007, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2,63e-07, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.005381893167628011;  // std dev = 4,836, 127,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=31 */
%   | | | else return 0.3884457314570747;  // std dev = 0,048, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0438312755524695;  // std dev = 0,463, 4.279,000 (wgt'ed) examples reached here.  /* #neg=2.944 #pos=1.335 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.005554602686108186;  // std dev = 6,744, 378,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=53 */
%   | | | else return -0.039485643173728456;  // std dev = 3,805, 153,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021720665624335066;  // std dev = 5,528, 181,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=39 */
%   | | | else return -0.09130587258254874;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.029029230766203496;  // std dev = 5,051, 138,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=35 */
%   | | | else return 0.6432140989497532;  // std dev = 0,332, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03202339599308628;  // std dev = 0,462, 4.311,000 (wgt'ed) examples reached here.  /* #neg=2.981 #pos=1.330 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.05910992935442709;  // std dev = 2,858, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return -0.061093121237425656;  // std dev = 0,926, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0026826796570503554;  // std dev = 7,151, 453,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=59 */
%   | | | else return 0.005601590418304623;  // std dev = 5,490, 193,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=38 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #pos=316 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07702414147893939;  // std dev = 4,527, 97,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | | else return -0.1410556325401757;  // std dev = 1,026, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return 0.03581996104337174;  // std dev = 0,466, 4.187,000 (wgt'ed) examples reached here.  /* #neg=2.852 #pos=1.335 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.007729806784336094;  // std dev = 6,799, 414,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=53 */
%   | | | else return -0.02567917501685935;  // std dev = 3,764, 142,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03712219782913082;  // std dev = 5,459, 166,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=39 */
%   | | | else return -0.08356757774399569;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.613297
   AUC PR    = 0.159146
   CLL	      = -0.327367
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 300.25 seconds
Total inference time: 15.945 seconds
AUC ROC: 0.613297


Results scoring model
   AUC ROC   = 0.63651
   AUC PR    = 0.202757
   CLL	      = -0.320621
   Precision = 0.944118 at threshold = 0.5
   Recall    = 0.178731
   F1        = 0.300562


Total scoring time: 71.58 seconds
Refined model CLL: -0.320621


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.613297
   AUC PR    = 0.159146
   CLL	      = -0.327367
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 402.138 seconds
Total inference time: 15.945 seconds
AUC ROC: 0.613297
Total revision time: 402.138
Best scored revision CLL: -0.320621


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 22:19:17
{'AUC PR': 0.159146, 'AUC ROC': 0.613297, 'Precision': [1.0, 0.5], 'Inference time': 15.945, 'parameter_0.8': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 6.005, 'CLL': -0.321629, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 18.744}, 'CLL': -0.327367, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 402.138}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21861902056959265;  // std dev = 0,480, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.993 #pos=1.687 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8045775065280838;  // std dev = 1,685, 56,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=53 */
%   | | | else return -0.14185106490048754;  // std dev = 2,33e-07, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0.008591412975618563;  // std dev = 3,800, 113,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06718848312210997;  // std dev = 5,410, 177,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=37 */
%   | | | else return -0.07935106490048778;  // std dev = 1,369, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.8294000094343214;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.1921451074735357;  // std dev = 4,856, 102,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
%   | | | else return -0.13611723194498893;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | else return 0.1857017974848628;  // std dev = 0,479, 4.586,000 (wgt'ed) examples reached here.  /* #neg=2.952 #pos=1.634 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then return 0.09178407855298787;  // std dev = 0,417, 47,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else return -0.020929317712683818;  // std dev = 0,291, 470,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=59 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.11984468360283236;  // std dev = 5,197, 137,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=37 */
%   | | | else return -0.027200271452573532;  // std dev = 1,338, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1617252390181856;  // std dev = 0,479, 4.682,000 (wgt'ed) examples reached here.  /* #neg=2.995 #pos=1.687 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return -0.0511088666375827;  // std dev = 0,804, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.03851065953105094;  // std dev = 2,840, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.003418543955506876;  // std dev = 5,758, 364,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=52 */
%   | | | else return -0.0682196036889444;  // std dev = 2,540, 108,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.15566045011149923;  // std dev = 0,044, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.053156355711121366;  // std dev = 5,520, 181,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=39 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.14662828469326447;  // std dev = 4,957, 108,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=42 */
%   | | | else return -0.08571471276971865;  // std dev = 1,643, 39,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else return 0.7362515056351515;  // std dev = 0,059, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.13851074849781056;  // std dev = 0,481, 4.489,000 (wgt'ed) examples reached here.  /* #neg=2.855 #pos=1.634 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return 0.011065924297645517;  // std dev = 0,317, 331,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=53 */
%   | | else return -0.020056289420442058;  // std dev = 0,314, 148,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=17 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return -0.1458902454254191;  // std dev = 0,085, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06301652082530833;  // std dev = 5,456, 168,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=39 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordtitle(G, C) )
%   | | | then return 0.4424563716697158;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.5831295493762682;  // std dev = 0,218, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return 0.06736009189457723;  // std dev = 4,699, 110,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | | | else return 0.6204030056689358;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10508664764743915;  // std dev = 0,479, 4.594,000 (wgt'ed) examples reached here.  /* #neg=2.960 #pos=1.634 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.009801253719919184;  // std dev = 0,305, 523,000 (wgt'ed) examples reached here.  /* #neg=453 #pos=70 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.07126609324121976;  // std dev = 5,251, 146,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=37 */
%   | | | else return -0.006759592817434459;  // std dev = 1,313, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09075190453572178;  // std dev = 0,479, 4.661,000 (wgt'ed) examples reached here.  /* #neg=2.974 #pos=1.687 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.021231150800280773;  // std dev = 0,374, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | | else if ( haswordtitle(E, G), haswordvenue(B, G) )
%   | | | then return -0.03603188526409601;  // std dev = 3,892, 210,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=21 */
%   | | | else return -0.0024526886819051887;  // std dev = 4,965, 269,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=38 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.031600495629121254;  // std dev = 5,343, 167,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=37 */
%   | | | else return -0.05158853796617299;  // std dev = 1,369, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07797836296885184;  // std dev = 0,481, 4.591,000 (wgt'ed) examples reached here.  /* #neg=2.904 #pos=1.687 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return -0.0012758106799379092;  // std dev = 0,788, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.08728525509338782;  // std dev = 2,743, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.13455181828589488;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.16762317951882277;  // std dev = 0,121, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06560890753768424;  // std dev = 2,161, 37,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return -0.04708572192366781;  // std dev = 0,821, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.018673547318960117;  // std dev = 6,384, 346,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=51 */
%   | | | else return -0.0010903405567578416;  // std dev = 4,891, 265,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=37 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.055905362885512636;  // std dev = 0,479, 4.665,000 (wgt'ed) examples reached here.  /* #neg=2.978 #pos=1.687 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6968193194106113;  // std dev = 2,493, 59,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=52 */
%   | | | else return -0.17163234163975194;  // std dev = 0,427, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06795827563408725;  // std dev = 2,722, 147,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=10 */
%   | | | else return 0.11958628749148315;  // std dev = 2,080, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.03764291226991827;  // std dev = 0,760, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1630902994214322;  // std dev = 0,036, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.014939425209473276;  // std dev = 5,023, 297,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=38 */
%   | | | else return -0.07869766398330183;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.035397309384553016;  // std dev = 0,477, 4.318,000 (wgt'ed) examples reached here.  /* #neg=2.796 #pos=1.522 */
%   | | else return 0.01984117668116423;  // std dev = 0,327, 428,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=78 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.16940523270500846;  // std dev = 0,311, 226,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=25 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3747287175665465;  // std dev = 4,238, 86,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=60 */
%   | | | else return 0.10380253742374723;  // std dev = 3,750, 94,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.5490421687828411;  // std dev = 0,322, 52,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=46 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.013469502476454927;  // std dev = 4,537, 168,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=37 */
%   | | | else return 0.03165955339544501;  // std dev = 1,296, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return -0.07244103904909015;  // std dev = 0,006, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.029037574500789375;  // std dev = 0,477, 4.302,000 (wgt'ed) examples reached here.  /* #neg=2.780 #pos=1.522 */
%   | | else return 0.029853785055725158;  // std dev = 0,332, 403,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=78 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.1566561436755229;  // std dev = 0,295, 256,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=25 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.257815653127699;  // std dev = 4,449, 90,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=60 */
%   | | | else return 0.04649905340286522;  // std dev = 3,850, 115,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=26 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.3266860125102396;  // std dev = 1,966, 22,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return 0.17121486344193407;  // std dev = 0,745, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.4692462069349667;  // std dev = 0,263, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | else return 0.01276370306420889;  // std dev = 0,337, 192,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=39 */


Results
   AUC ROC   = 0.56192
   AUC PR    = 0.032576
   CLL	      = -0.376816
   Precision = 0.206186 at threshold = 0.5
   Recall    = 0.02594
   F1        = 0.046083


Total learning time: 2907.472 seconds
Total inference time: 36.81 seconds
AUC ROC: 0.56192


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 23:08:22
{'AUC PR': 0.032576, 'AUC ROC': 0.56192, 'Precision': [0.206186, 0.5], 'Inference time': 36.81, 'CLL': -0.376816, 'Recall': 0.02594, 'Learning time': 2907.472, 'F1': 0.046083}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordtitle(G, C) )
%   | | | then return 0.6914822684328455;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return 0.15107822802880402;  // std dev = 4,528, 99,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22497973187658865;  // std dev = 0,482, 4.468,000 (wgt'ed) examples reached here.  /* #neg=2.829 #pos=1.639 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordauthor(K, I) )
%   | | then return 0.06569610491083312;  // std dev = 0,406, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else if ( title(L, J), venue(L, B) )
%   | | | then return -0.0053681252679418185;  // std dev = 6,701, 381,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=52 */
%   | | | else return -0.07935106490048767;  // std dev = 2,562, 112,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=7 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then if ( title(P, N), venue(P, A) )
%   | | | then return 0.09685861251886575;  // std dev = 5,307, 155,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=37 */
%   | | | else return -0.04661296966239256;  // std dev = 1,345, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.544094
   AUC PR    = 0.014883
   CLL	      = -0.202459
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 54.572 seconds
Total inference time: 6.781 seconds
AUC ROC: 0.544094


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 23:09:24
{'AUC PR': 0.014883, 'AUC ROC': 0.544094, 'Precision': [nan, 0.5], 'Inference time': 6.781, 'CLL': -0.202459, 'Recall': 0.0, 'Learning time': 54.572, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,53e-06, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.14970421108629753;  // std dev = 36,242, 6.359,000 (wgt'ed) examples reached here.  /* #neg=4.505 #pos=1.854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.12993714462072578;  // std dev = 36,256, 6.371,000 (wgt'ed) examples reached here.  /* #neg=4.517 #pos=1.854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11214656270332034;  // std dev = 36,242, 6.359,000 (wgt'ed) examples reached here.  /* #neg=4.505 #pos=1.854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09217889935729306;  // std dev = 36,315, 6.422,000 (wgt'ed) examples reached here.  /* #neg=4.568 #pos=1.854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08616104497589;  // std dev = 36,086, 6.229,000 (wgt'ed) examples reached here.  /* #neg=4.375 #pos=1.854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06348369451533524;  // std dev = 36,289, 6.400,000 (wgt'ed) examples reached here.  /* #neg=4.546 #pos=1.854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.05295062129665592;  // std dev = 36,270, 6.383,000 (wgt'ed) examples reached here.  /* #neg=4.529 #pos=1.854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2,19e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.04437060437636291;  // std dev = 36,240, 6.358,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=1.854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03383565817605583;  // std dev = 36,296, 6.406,000 (wgt'ed) examples reached here.  /* #neg=4.552 #pos=1.854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.031981224210335446;  // std dev = 36,178, 6.305,000 (wgt'ed) examples reached here.  /* #neg=4.451 #pos=1.854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.322428
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 23.232 seconds
Total inference time: 5.286 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.32189
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 12.097 seconds
Parameter learned model CLL: -0.32189


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.242, 4505, 1854], 'true': [1.53e-06, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.256, 4517, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.242, 4505, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.315, 4568, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.086, 4375, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.289, 4546, 1854], 'true': [4.46e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.27, 4529, 1854], 'true': [2.46e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.24, 4504, 1854], 'true': [2.19e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.296, 4552, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.178, 4451, 1854], 'true': [0.0, 0, 392]}]]
[{'': [5.945357584931451e-15, 0.20655079703099488]}, {'': [-5.3653226985966745e-15, 0.20632155874450167]}, {'': [-1.1600697726695512e-15, 0.20655079703109244]}, {'': [-1.740104659004327e-15, 0.20535024369768223]}, {'': [-1.5407176668267478e-15, 0.2090504589883491]}, {'': [5.075305255429287e-16, 0.20576865234378391]}, {'': [1.5407176668267478e-16, 0.2060925826472137]}, {'': [1.2235110883624173e-16, 0.20656991199622654]}, {'': [-2.628283078704452e-16, 0.20565445152742923]}, {'': [-3.149408171895852e-16, 0.20758556109883106]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,53e-06, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.2043027812533585;  // std dev = 5,424, 130,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.16550024651435755;  // std dev = 0,461, 5.414,000 (wgt'ed) examples reached here.  /* #neg=3.750 #pos=1.664 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.07152473127785704;  // std dev = 7,260, 314,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=67 */
%   | | | else return -0.02312960371327344;  // std dev = 4,787, 219,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=26 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.027055146533141033;  // std dev = 6,311, 392,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15458726943167392;  // std dev = 0,466, 5.394,000 (wgt'ed) examples reached here.  /* #neg=3.678 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16854000176468667;  // std dev = 3,428, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return -0.03589330512680504;  // std dev = 1,342, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.019819356289947535;  // std dev = 8,105, 621,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=75 */
%   | | | else return 0.06335394984251345;  // std dev = 5,875, 208,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=44 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13094170324175666;  // std dev = 0,465, 5.418,000 (wgt'ed) examples reached here.  /* #neg=3.702 #pos=1.716 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.011476859753627802;  // std dev = 7,621, 528,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=67 */
%   | | | else return 0.029445935031680283;  // std dev = 4,619, 148,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=26 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07017750281476703;  // std dev = 5,888, 197,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=45 */
%   | | | else return -0.13056121183231092;  // std dev = 0,014, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3655731225613075;  // std dev = 3,111, 40,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
%   | | | else return 0.04240555709901939;  // std dev = 4,643, 116,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=29 */
%   | | else return 0.10505918330077237;  // std dev = 0,463, 5.344,000 (wgt'ed) examples reached here.  /* #neg=3.680 #pos=1.664 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.19892814256774646;  // std dev = 3,301, 47,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return -0.02503339326904067;  // std dev = 1,338, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.09314004029991028;  // std dev = 3,573, 70,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | | else return -0.0072379621912090275;  // std dev = 9,323, 747,000 (wgt'ed) examples reached here.  /* #neg=645 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09925568914417747;  // std dev = 0,467, 5.303,000 (wgt'ed) examples reached here.  /* #neg=3.587 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3266486894392386;  // std dev = 1,424, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0763072512060541;  // std dev = 3,308, 59,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07778447602623066;  // std dev = 3,579, 71,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | | else return -0.009445339319172998;  // std dev = 9,351, 753,000 (wgt'ed) examples reached here.  /* #neg=651 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0638273886388806;  // std dev = 0,461, 5.608,000 (wgt'ed) examples reached here.  /* #neg=3.892 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2055349594148309;  // std dev = 3,164, 41,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return -0.05658885123309358;  // std dev = 1,310, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.016166593307517484;  // std dev = 8,077, 610,000 (wgt'ed) examples reached here.  /* #neg=535 #pos=75 */
%   | | | else return 0.04688860379450098;  // std dev = 5,868, 210,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.08279982359757979;  // std dev = 5,440, 131,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   | | | else return 0.5888475488262072;  // std dev = 0,063, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.05586784775253428;  // std dev = 0,462, 5.377,000 (wgt'ed) examples reached here.  /* #neg=3.713 #pos=1.664 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.0793029315193617;  // std dev = 3,513, 68,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return 0.026026859214492923;  // std dev = 1,240, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.014732099339352598;  // std dev = 8,069, 599,000 (wgt'ed) examples reached here.  /* #neg=523 #pos=76 */
%   | | | else return 0.010646834815507298;  // std dev = 5,906, 237,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=43 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2,19e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04863696597457411;  // std dev = 0,463, 5.470,000 (wgt'ed) examples reached here.  /* #neg=3.754 #pos=1.716 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.020475295094858587;  // std dev = 3,626, 84,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | | | else return -0.012241822009095236;  // std dev = 8,061, 598,000 (wgt'ed) examples reached here.  /* #neg=522 #pos=76 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03381416732663445;  // std dev = 5,951, 214,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=45 */
%   | | | else return -0.12319311070010672;  // std dev = 0,027, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03654176357884489;  // std dev = 0,462, 5.515,000 (wgt'ed) examples reached here.  /* #neg=3.799 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.0988444134035469;  // std dev = 3,367, 49,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return -0.006546941972061459;  // std dev = 7,933, 495,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=76 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.012996915090806882;  // std dev = 6,301, 385,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=45 */
%   | | | else return -0.10904197877568221;  // std dev = 0,012, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033704781654366696;  // std dev = 0,464, 5.437,000 (wgt'ed) examples reached here.  /* #neg=3.721 #pos=1.716 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07558484761510265;  // std dev = 3,495, 64,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.07575092602761987;  // std dev = 1,202, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01581697335172133;  // std dev = 8,087, 616,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=76 */
%   | | | else return 0.01566108244129234;  // std dev = 5,863, 225,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=43 */


Results
   AUC ROC   = 0.618527
   AUC PR    = 0.164802
   CLL	      = -0.326082
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 249.957 seconds
Total inference time: 10.878 seconds
AUC ROC: 0.618527


Results scoring model
   AUC ROC   = 0.633202
   AUC PR    = 0.2008
   CLL	      = -0.319091
   Precision = 0.941038 at threshold = 0.5
   Recall    = 0.177649
   F1        = 0.298876


Total scoring time: 48.305 seconds
Refined model CLL: -0.319091


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.618527
   AUC PR    = 0.164802
   CLL	      = -0.326082
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 333.591 seconds
Total inference time: 10.878 seconds
AUC ROC: 0.618527
Total revision time: 333.591
Best scored revision CLL: -0.319091


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 23:15:16
{'AUC PR': 0.164802, 'AUC ROC': 0.618527, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 5.286, 'CLL': -0.322428, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 23.232}, 'Inference time': 10.878, 'CLL': -0.326082, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 333.591}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.09703782398840048;  // std dev = 5,721, 180,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=43 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.22436127369348133;  // std dev = 0,482, 5.576,000 (wgt'ed) examples reached here.  /* #neg=3.534 #pos=2.042 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.7887044906550683;  // std dev = 2,157, 72,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=67 */
%   | | | else return -0.14185106490048827;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
%   | | else return -0.02929695234637547;  // std dev = 0,316, 231,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=26 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.01291123682025879;  // std dev = 0,335, 349,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.17286333213798613;  // std dev = 5,309, 125,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=43 */
%   | | | else return 0.8285859681684011;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.188162644759452;  // std dev = 0,480, 5.685,000 (wgt'ed) examples reached here.  /* #neg=3.643 #pos=2.042 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.23517969368821293;  // std dev = 0,477, 45,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else if ( title(K, I), venue(K, A) )
%   | | | then return 0.0649645248088868;  // std dev = 6,137, 287,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=65 */
%   | | | else return -0.07232842420957848;  // std dev = 3,204, 170,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=11 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.023403527517657542;  // std dev = 0,321, 385,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15732038925651892;  // std dev = 0,478, 5.894,000 (wgt'ed) examples reached here.  /* #neg=3.786 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.18148128908422315;  // std dev = 0,469, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else return -0.029652172282730708;  // std dev = 0,306, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.14791975872426844;  // std dev = 2,771, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.21258864822301785;  // std dev = 0,927, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.025314588515950167;  // std dev = 7,149, 533,000 (wgt'ed) examples reached here.  /* #neg=473 #pos=60 */
%   | | | else return 0.03308519902386434;  // std dev = 5,030, 216,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=42 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13725430292895155;  // std dev = 0,480, 5.793,000 (wgt'ed) examples reached here.  /* #neg=3.685 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6252097312672313;  // std dev = 2,340, 73,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=67 */
%   | | | else return -0.13776233777834493;  // std dev = 0,162, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.12333030852265986;  // std dev = 3,196, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.06051567359040886;  // std dev = 3,206, 159,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=11 */
%   | else return -0.017829863398422335;  // std dev = 0,322, 384,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=45 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10861374304305682;  // std dev = 0,479, 5.854,000 (wgt'ed) examples reached here.  /* #neg=3.746 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.15295761975147223;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.25528540689547535;  // std dev = 1,263, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08574947750055528;  // std dev = 3,203, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.02579464379431904;  // std dev = 2,404, 63,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return -0.030191367598334254;  // std dev = 7,053, 589,000 (wgt'ed) examples reached here.  /* #neg=529 #pos=60 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01878636287578253;  // std dev = 4,240, 216,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=44 */
%   | | | else return -0.11708005525509106;  // std dev = 0,025, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08630647909043042;  // std dev = 0,478, 5.876,000 (wgt'ed) examples reached here.  /* #neg=3.768 #pos=2.108 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.664240330683876;  // std dev = 0,288, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14499121172171148;  // std dev = 0,021, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.041092284720309714;  // std dev = 2,222, 55,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return -0.14284446101036738;  // std dev = 0,027, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0261227175020233;  // std dev = 3,259, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return -0.02992562777570635;  // std dev = 1,299, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.022364649735831167;  // std dev = 5,532, 447,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=60 */
%   | | | else return -0.0074940098439795;  // std dev = 6,072, 348,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07668025505986009;  // std dev = 0,481, 5.750,000 (wgt'ed) examples reached here.  /* #neg=3.642 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.13073623567148332;  // std dev = 3,098, 45,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return -0.02126904140254411;  // std dev = 5,325, 450,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=67 */
%   | | else return 0.18306426458034267;  // std dev = 0,460, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.012948259936777099;  // std dev = 0,791, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.14524815393559998;  // std dev = 0,084, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.00879246535148977;  // std dev = 6,218, 366,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=44 */
%   | | | else return -0.1027379959087201;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.4148873107967679;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( haswordtitle(F, C) )
%   | | | then return 0.039226145729567646;  // std dev = 5,321, 126,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=43 */
%   | | | else return 0.5450965134137205;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.10457335472361273;  // std dev = 5,146, 115,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=45 */
%   | | | else return -0.204161558049288;  // std dev = 1,666, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | else return 0.05732173372005408;  // std dev = 0,481, 5.496,000 (wgt'ed) examples reached here.  /* #neg=3.502 #pos=1.994 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( haswordtitle(L, J) )
%   | | then return 0.08466045025699843;  // std dev = 0,455, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else return 0.01244785553637598;  // std dev = 0,339, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else return -0.002971107340894241;  // std dev = 0,298, 815,000 (wgt'ed) examples reached here.  /* #neg=696 #pos=119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.040957236714698565;  // std dev = 0,478, 5.299,000 (wgt'ed) examples reached here.  /* #neg=3.400 #pos=1.899 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6649173122369215;  // std dev = 3,430, 111,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=98 */
%   | | | else return -0.13528992610946253;  // std dev = 1,573, 430,000 (wgt'ed) examples reached here.  /* #neg=428 #pos=2 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.18719059956433987;  // std dev = 0,295, 306,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3478683828809662;  // std dev = 5,105, 118,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=80 */
%   | | | else return 0.04019457019302407;  // std dev = 3,889, 158,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=38 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.09176386903596515;  // std dev = 0,335, 213,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=64 */
%   | | else return 0.02760519646207138;  // std dev = 0,327, 32,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | else return 0.32003166237603825;  // std dev = 0,389, 53,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04018201350606235;  // std dev = 0,477, 5.732,000 (wgt'ed) examples reached here.  /* #neg=3.624 #pos=2.108 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5695343771502774;  // std dev = 3,256, 80,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=67 */
%   | | | else return -0.11885615098367762;  // std dev = 0,673, 393,000 (wgt'ed) examples reached here.  /* #neg=393 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.023933979547513945;  // std dev = 2,899, 108,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=24 */
%   | | | else return -0.09405648388756739;  // std dev = 1,394, 84,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.018472625697709983;  // std dev = 3,908, 193,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=43 */
%   | | | else return -0.06005349543658424;  // std dev = 1,389, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else return -0.12321922822499289;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.600112
   AUC PR    = 0.050924
   CLL	      = -0.378679
   Precision = 0.4 at threshold = 0.5
   Recall    = 0.005188
   F1        = 0.010243


Total learning time: 2140.51 seconds
Total inference time: 30.202 seconds
AUC ROC: 0.600112


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 23:51:27
{'AUC PR': 0.050924, 'AUC ROC': 0.600112, 'Precision': [0.4, 0.5], 'Inference time': 30.202, 'CLL': -0.378679, 'Recall': 0.005188, 'Learning time': 2140.51, 'F1': 0.010243}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22501284042495093;  // std dev = 0,482, 5.746,000 (wgt'ed) examples reached here.  /* #neg=3.638 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.15125238337537444;  // std dev = 0,455, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | else return 0.039967116917694;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.03409244421083261;  // std dev = 6,679, 464,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=50 */
%   | | | else return 0.025934169998840722;  // std dev = 4,561, 149,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=25 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.04380294353833033;  // std dev = 5,986, 237,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=44 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.541483
   AUC PR    = 0.012973
   CLL	      = -0.202543
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 32.162 seconds
Total inference time: 4.872 seconds
AUC ROC: 0.541483


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 23:52:05
{'AUC PR': 0.012973, 'AUC ROC': 0.541483, 'Precision': [nan, 0.5], 'Inference time': 4.872, 'CLL': -0.202543, 'Recall': 0.0, 'Learning time': 32.162, 'F1': nan}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 199372

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 50581

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.14497064052586398;  // std dev = 17,037, 1.419,000 (wgt'ed) examples reached here.  /* #neg=1.012 #pos=407 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,38e-07, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.12659360215718268;  // std dev = 17,035, 1.418,000 (wgt'ed) examples reached here.  /* #neg=1.011 #pos=407 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,37e-07, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.11994582971969035;  // std dev = 16,901, 1.365,000 (wgt'ed) examples reached here.  /* #neg=958 #pos=407 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 4,21e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.09259015631550933;  // std dev = 17,010, 1.408,000 (wgt'ed) examples reached here.  /* #neg=1.001 #pos=407 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.09800442987481128;  // std dev = 16,764, 1.315,000 (wgt'ed) examples reached here.  /* #neg=908 #pos=407 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.06034543881277278;  // std dev = 17,015, 1.410,000 (wgt'ed) examples reached here.  /* #neg=1.003 #pos=407 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.0513940152306771;  // std dev = 16,993, 1.401,000 (wgt'ed) examples reached here.  /* #neg=994 #pos=407 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3,65e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.03682550037167619;  // std dev = 17,054, 1.426,000 (wgt'ed) examples reached here.  /* #neg=1.019 #pos=407 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8,56e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.03580813577072199;  // std dev = 16,983, 1.397,000 (wgt'ed) examples reached here.  /* #neg=990 #pos=407 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,58e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.029145465575354905;  // std dev = 16,981, 1.396,000 (wgt'ed) examples reached here.  /* #neg=989 #pos=407 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.32119
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 4.507 seconds
Total inference time: 5.723 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.582136
   AUC PR    = 0.183129
   CLL	      = -0.321848
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164271
   F1        = 0.282187


Total scoring time: 5.4 seconds
Parameter learned model CLL: -0.321848


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.037, 1012, 407], 'true': [0.0, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.035, 1011, 407], 'true': [2.38e-07, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.901, 958, 407], 'true': [3.37e-07, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.01, 1001, 407], 'true': [4.21e-08, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.764, 908, 407], 'true': [0.0, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.015, 1003, 407], 'true': [0.0, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.993, 994, 407], 'true': [0.0, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.054, 1019, 407], 'true': [3.65e-08, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.983, 990, 407], 'true': [8.56e-08, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.981, 989, 407], 'true': [5.58e-08, 0, 80]}]]
[{'': [-7.993605777301127e-16, 0.20455501472265486]}, {'': [7.105427357601002e-16, 0.20464121381154113]}, {'': [1.4210854715202005e-15, 0.209264044868426]}, {'': [2.2204460492503132e-17, 0.20550537109376962]}, {'': [-3.9968028886505636e-16, 0.21371192297127686]}, {'': [-4.4408920985006264e-17, 0.20533222674917306]}, {'': [-8.326672684688674e-17, 0.2061125911388988]}, {'': [1.6653345369377347e-17, 0.20395273905372013]}, {'': [9.159339953157541e-17, 0.20646041292083717]}, {'': [3.8857805861880476e-17, 0.20654746266450963]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.030739953789376686;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return 0.18007875966091097;  // std dev = 0,467, 1.140,000 (wgt'ed) examples reached here.  /* #neg=773 #pos=367 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03887182666577744;  // std dev = 3,506, 83,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=15 */
%   | | | else return 0.0223280395771243;  // std dev = 3,032, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,38e-07, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15902987539809918;  // std dev = 0,468, 1.156,000 (wgt'ed) examples reached here.  /* #neg=781 #pos=375 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordvenue(B, G) )
%   | | | then return -0.19470976645284255;  // std dev = 0,047, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1543977628617322;  // std dev = 1,978, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.008943611701032632;  // std dev = 4,008, 123,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=19 */
%   | | | else return -0.009273124135401574;  // std dev = 2,457, 51,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,37e-07, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2878594450637486;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.09309293588863207;  // std dev = 1,345, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return 0.12796682544187402;  // std dev = 0,465, 1.148,000 (wgt'ed) examples reached here.  /* #neg=785 #pos=363 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.004113348251130885;  // std dev = 3,256, 81,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=13 */
%   | | | else return 0.028543141664778976;  // std dev = 3,022, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.011528680346930109;  // std dev = 2,565, 50,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
%   | | | else return -0.14344767357885735;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 4,21e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10573616988499984;  // std dev = 0,463, 1.194,000 (wgt'ed) examples reached here.  /* #neg=819 #pos=375 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.10371395975142184;  // std dev = 3,396, 62,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return -0.017031088372184942;  // std dev = 2,044, 37,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | else return 0.01449125358610999;  // std dev = 0,371, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08529941307641432;  // std dev = 0,463, 1.202,000 (wgt'ed) examples reached here.  /* #neg=827 #pos=375 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.3268995838131426;  // std dev = 0,490, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.016472907618641067;  // std dev = 4,052, 140,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=19 */
%   | | | else return 0.041866770909187626;  // std dev = 2,360, 35,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.32388573688264716;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.0645228956387189;  // std dev = 1,313, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -9.45784540802383E-4;  // std dev = 2,958, 49,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return 0.07698405665417922;  // std dev = 15,549, 1.113,000 (wgt'ed) examples reached here.  /* #neg=758 #pos=355 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.20839064979513724;  // std dev = 1,305, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.15758499596054004;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.07472390891535405;  // std dev = 1,791, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.003877084813185458;  // std dev = 4,507, 161,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2793450259981844;  // std dev = 1,895, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.06852564483276588;  // std dev = 1,797, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else return 0.05444933362862432;  // std dev = 0,462, 1.167,000 (wgt'ed) examples reached here.  /* #neg=804 #pos=363 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.0073791404117408525;  // std dev = 3,133, 72,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=13 */
%   | | | else return 0.03533855761850281;  // std dev = 3,006, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.0257224217793428;  // std dev = 2,562, 56,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
%   | | | else return -0.16851231305593006;  // std dev = 0,088, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3,65e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.034265012472633916;  // std dev = 0,458, 1.191,000 (wgt'ed) examples reached here.  /* #neg=832 #pos=359 */
%   | | else if ( title(F, E), venue(F, B) )
%   | | | then return 0.03011479265929916;  // std dev = 4,263, 121,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=24 */
%   | | | else return -0.0010477136502591987;  // std dev = 2,596, 46,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | else return 0.12823020727899218;  // std dev = 0,439, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8,56e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4175266525692779;  // std dev = 1,376, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.009528751245338992;  // std dev = 1,732, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.029262434234714307;  // std dev = 2,201, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.045774212540980325;  // std dev = 15,537, 1.111,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=355 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.11207843377447224;  // std dev = 1,717, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.010913554159507255;  // std dev = 3,964, 114,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -9.622496114907123E-4;  // std dev = 2,506, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | | else return -0.12806310262106124;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,58e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19821195760724342;  // std dev = 2,009, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.12718660984988275;  // std dev = 1,294, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return 0.029591259934838014;  // std dev = 0,463, 1.160,000 (wgt'ed) examples reached here.  /* #neg=797 #pos=363 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13114340398582952;  // std dev = 1,326, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.022589009099019255;  // std dev = 3,787, 112,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.021992870542167146;  // std dev = 3,094, 79,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | | | else return -0.11076176037866381;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.618807
   AUC PR    = 0.192534
   CLL	      = -0.319328
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 109.973 seconds
Total inference time: 12.701 seconds
AUC ROC: 0.618807


Results scoring model
   AUC ROC   = 0.635524
   AUC PR    = 0.19577
   CLL	      = -0.324918
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164271
   F1        = 0.282187


Total scoring time: 26.517 seconds
Refined model CLL: -0.324918


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.32119
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 146.397 seconds
Total inference time: 5.723 seconds
AUC ROC: 0.585198
Total revision time: 146.397
Best scored revision CLL: -0.321848


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 23:54:52
{'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 5.723, 'CLL': -0.32119, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 146.397, 'parameter_0.2': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 5.723, 'CLL': -0.32119, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 4.507}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21613477302240278;  // std dev = 0,479, 1.271,000 (wgt'ed) examples reached here.  /* #neg=816 #pos=455 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.01501168019755159;  // std dev = 3,673, 102,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=16 */
%   | | | else return -0.05851773156715445;  // std dev = 1,658, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | else return 0.03763611458669184;  // std dev = 0,384, 39,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8297512320254906;  // std dev = 2,98e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3752057774800359;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.05260170915097989;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return 0.1896860854456949;  // std dev = 0,480, 1.228,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=442 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then if ( author(K, J), title(K, I) )
%   | | | then return 0.1842553658468876;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.25318558023007953;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.008234803606399133;  // std dev = 0,356, 127,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=19 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.029929918680586552;  // std dev = 0,382, 45,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | else return -0.14649452697781534;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8012585812544073;  // std dev = 4,21e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.19874141874559262;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.6800744565176273;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.07752929753347139;  // std dev = 1,875, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | else return 0.15624656950374238;  // std dev = 0,478, 1.234,000 (wgt'ed) examples reached here.  /* #neg=796 #pos=438 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.8306784077146951;  // std dev = 0,152, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1557144870060917;  // std dev = 0,208, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.04172838161035506;  // std dev = 0,304, 48,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | else return 0.0013049063144632152;  // std dev = 0,354, 75,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12448449092114501;  // std dev = 0,474, 1.301,000 (wgt'ed) examples reached here.  /* #neg=846 #pos=455 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.3570006062493188;  // std dev = 1,210, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.14486604889667523;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.021399620828368753;  // std dev = 1,343, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.12613091078862584;  // std dev = 0,677, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.02211381265942461;  // std dev = 2,956, 101,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=13 */
%   | | | else return 0.011223003920928796;  // std dev = 3,045, 71,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10236988665575131;  // std dev = 0,474, 1.300,000 (wgt'ed) examples reached here.  /* #neg=845 #pos=455 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.1669711509267658;  // std dev = 1,002, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.11312056169747856;  // std dev = 0,384, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return 0.3211119689835223;  // std dev = 0,981, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.021729981253649097;  // std dev = 2,960, 104,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=13 */
%   | | else return 0.02690507555495736;  // std dev = 0,377, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.46187046262232745;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.048356156791825346;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.06536671335834707;  // std dev = 1,297, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else return 0.08769900939804913;  // std dev = 0,477, 1.247,000 (wgt'ed) examples reached here.  /* #neg=805 #pos=442 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then return 0.37266728973726776;  // std dev = 0,756, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.04829328957463588;  // std dev = 0,359, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return -0.011324620732323865;  // std dev = 0,306, 109,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.12727964581570048;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.013183834074682056;  // std dev = 3,033, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return 0.673450357585555;  // std dev = 4,015, 436,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=420 */
%   | | | else return 0.7865269684756656;  // std dev = 0,339, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.2640384920061447;  // std dev = 0,083, 921,000 (wgt'ed) examples reached here.  /* #neg=916 #pos=5 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( title(G, D), venue(G, B) )
%   | | | then return -0.28426986267708865;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.6752035842323197;  // std dev = 0,344, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.1367032423095767;  // std dev = 1,398, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.05663029236255286;  // std dev = 1,537, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.579256239541379;  // std dev = 0,308, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.03599258635076338;  // std dev = 0,338, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.056066297325447254;  // std dev = 0,384, 1.240,000 (wgt'ed) examples reached here.  /* #neg=785 #pos=455 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.2655982300271775;  // std dev = 0,563, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.13225896666765172;  // std dev = 0,379, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.011382379654565816;  // std dev = 2,553, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | | | else return -0.05554073090534486;  // std dev = 1,559, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | else return 3.065293907647532E-4;  // std dev = 0,298, 75,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04039270519274573;  // std dev = 0,381, 1.261,000 (wgt'ed) examples reached here.  /* #neg=806 #pos=455 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.14718064738253192;  // std dev = 0,986, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.04007890476505288;  // std dev = 2,947, 106,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=15 */
%   | | else return -0.004660650943396937;  // std dev = 0,265, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.040001516973208716;  // std dev = 2,512, 57,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | | else return -0.139288805320883;  // std dev = 0,197, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.15445597952810178;  // std dev = 0,067, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.4910559629887428;  // std dev = 0,216, 469,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=447 */
%   | | else return -0.23266636135929727;  // std dev = 0,084, 854,000 (wgt'ed) examples reached here.  /* #neg=849 #pos=5 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( title(G, D), venue(G, A) )
%   | | | then return -0.25143779671554034;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5003159928210965;  // std dev = 0,319, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( haswordtitle(D, H), haswordauthor(I, H) )
%   | | | then return -0.009091610416552471;  // std dev = 1,499, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.07038051797911894;  // std dev = 1,488, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then return 0.16047478586760502;  // std dev = 0,461, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | then return 0.4504903232605488;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.005360058604088365;  // std dev = 0,312, 44,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */


Results
   AUC ROC   = 0.933189
   AUC PR    = 0.087753
   CLL	      = -0.265668
   Precision = 0.124939 at threshold = 0.5
   Recall    = 0.881239
   F1        = 0.21885


Total learning time: 664.445 seconds
Total inference time: 47.31 seconds
AUC ROC: 0.933189


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:06:44
{'AUC PR': 0.087753, 'AUC ROC': 0.933189, 'Precision': [0.124939, 0.5], 'Inference time': 47.31, 'CLL': -0.265668, 'Recall': 0.881239, 'Learning time': 664.445, 'F1': 0.21885}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.42957750652808374;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.006297083247660414;  // std dev = 1,846, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else return 0.21953507371336883;  // std dev = 0,480, 1.212,000 (wgt'ed) examples reached here.  /* #neg=774 #pos=438 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.08124500429442717;  // std dev = 1,371, 33,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then if ( title(P, N), venue(P, B) )
%   | | | then return 0.013078512564301082;  // std dev = 3,049, 71,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.574152
   AUC PR    = 0.021622
   CLL	      = -0.198124
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 34.736 seconds
Total inference time: 5.312 seconds
AUC ROC: 0.574152


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 00:07:24
{'AUC PR': 0.021622, 'AUC ROC': 0.574152, 'Precision': [nan, 0.5], 'Inference time': 5.312, 'CLL': -0.198124, 'Recall': 0.0, 'Learning time': 34.736, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.15370287095956556;  // std dev = 23,902, 2.744,000 (wgt'ed) examples reached here.  /* #neg=1.933 #pos=811 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.13212412291004288;  // std dev = 23,933, 2.761,000 (wgt'ed) examples reached here.  /* #neg=1.950 #pos=811 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.11523275877457224;  // std dev = 23,902, 2.744,000 (wgt'ed) examples reached here.  /* #neg=1.933 #pos=811 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.09660339044818547;  // std dev = 23,918, 2.753,000 (wgt'ed) examples reached here.  /* #neg=1.942 #pos=811 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.08286297661161368;  // std dev = 23,884, 2.734,000 (wgt'ed) examples reached here.  /* #neg=1.923 #pos=811 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.06655867136357212;  // std dev = 23,918, 2.753,000 (wgt'ed) examples reached here.  /* #neg=1.942 #pos=811 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.052506025284523465;  // std dev = 23,954, 2.773,000 (wgt'ed) examples reached here.  /* #neg=1.962 #pos=811 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.03792541891688926;  // std dev = 24,037, 2.820,000 (wgt'ed) examples reached here.  /* #neg=2.009 #pos=811 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.03510155485389445;  // std dev = 23,963, 2.778,000 (wgt'ed) examples reached here.  /* #neg=1.967 #pos=811 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.034022746851667486;  // std dev = 23,867, 2.725,000 (wgt'ed) examples reached here.  /* #neg=1.914 #pos=811 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.324046
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 6.661 seconds
Total inference time: 4.645 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.583676
   AUC PR    = 0.186132
   CLL	      = -0.324652
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167351
   F1        = 0.286719


Total scoring time: 6.767 seconds
Parameter learned model CLL: -0.324652


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.902, 1933, 811], 'true': [1.02e-06, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.933, 1950, 811], 'true': [0.0, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.902, 1933, 811], 'true': [5.53e-07, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.918, 1942, 811], 'true': [4.38e-07, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.884, 1923, 811], 'true': [3.63e-07, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.918, 1942, 811], 'true': [0.0, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.954, 1962, 811], 'true': [2.65e-07, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.037, 2009, 811], 'true': [0.0, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.963, 1967, 811], 'true': [0.0, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.867, 1914, 811], 'true': [9.42e-08, 0, 163]}]]
[{'': [6.3643705166242106e-15, 0.208201806857712]}, {'': [-2.7898610483832155e-15, 0.20745440089431944]}, {'': [1.8744378918824727e-15, 0.20820180685765602]}, {'': [1.176972629786669e-15, 0.20780579624590495]}, {'': [8.064442092982732e-16, 0.20864266338596282]}, {'': [-2.3975368384543257e-16, 0.20780579624588957]}, {'': [4.3046684144975393e-16, 0.20692840874908647]}, {'': [-3.1603894688716113e-16, 0.20488141944568874]}, {'': [-2.424781575254943e-16, 0.2067096403345843]}, {'': [5.4489473601234677e-17, 0.20904018180286404]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1653384775831674;  // std dev = 0,461, 2.448,000 (wgt'ed) examples reached here.  /* #neg=1.696 #pos=752 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10814893509951236;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010163822102134401;  // std dev = 5,271, 243,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=32 */
%   | | | else return 0.06867525088898589;  // std dev = 3,974, 95,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1584496497534525;  // std dev = 0,467, 2.338,000 (wgt'ed) examples reached here.  /* #neg=1.586 #pos=752 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.07234967250222678;  // std dev = 0,910, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.17430974348795228;  // std dev = 1,980, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02633261323147407;  // std dev = 5,324, 280,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=32 */
%   | | | else return 0.025020388252594825;  // std dev = 4,061, 114,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12169203219348342;  // std dev = 0,462, 2.444,000 (wgt'ed) examples reached here.  /* #neg=1.692 #pos=752 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.2316064765224497;  // std dev = 1,727, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.030424919500104928;  // std dev = 5,489, 205,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=37 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.1874556938600415;  // std dev = 0,054, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.020336369737591172;  // std dev = 3,874, 145,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1124351520594042;  // std dev = 0,466, 2.368,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=752 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06065600230805915;  // std dev = 4,965, 147,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=32 */
%   | | | else return -0.031043720395026175;  // std dev = 2,941, 87,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.023283439771303444;  // std dev = 3,886, 152,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=17 */
%   | | | else return -0.151017771664143;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10319940326566225;  // std dev = 3,480, 55,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.7759266759929353;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1041640860648851;  // std dev = 0,470, 2.224,000 (wgt'ed) examples reached here.  /* #neg=1.494 #pos=730 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.006488040577526261;  // std dev = 4,919, 214,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=28 */
%   | | | else return -0.04634188538081413;  // std dev = 2,933, 91,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.07058047855700277;  // std dev = 3,979, 88,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   | | | else return -0.1326580543725317;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06589690051329879;  // std dev = 0,462, 2.435,000 (wgt'ed) examples reached here.  /* #neg=1.683 #pos=752 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.11888249705996043;  // std dev = 2,018, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.05917637926283652;  // std dev = 0,852, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.008325447212768488;  // std dev = 5,280, 250,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=32 */
%   | | | else return 0.02659206935902917;  // std dev = 3,978, 101,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7128158676434462;  // std dev = 5,232, 766,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=738 */
%   | | | else return -0.23220438386763223;  // std dev = 4,460, 1.801,000 (wgt'ed) examples reached here.  /* #neg=1.783 #pos=18 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.2268372617055646;  // std dev = 1,995, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.04014987739223051;  // std dev = 2,943, 58,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.50968745977568;  // std dev = 0,424, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.10308547712203835;  // std dev = 3,853, 74,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | | else return -0.1209223650385265;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.36598672715293;  // std dev = 1,525, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return -0.10111930336288948;  // std dev = 1,969, 50,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
%   | | else return 0.03952779659167177;  // std dev = 0,379, 2.316,000 (wgt'ed) examples reached here.  /* #neg=1.584 #pos=732 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.07159793267891472;  // std dev = 1,933, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.02479039164286632;  // std dev = 0,829, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01518626652650324;  // std dev = 4,658, 217,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=32 */
%   | | | else return -0.00422564431980428;  // std dev = 4,008, 107,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.02439378048861053;  // std dev = 0,374, 2.334,000 (wgt'ed) examples reached here.  /* #neg=1.617 #pos=717 */
%   | | else if ( title(F, E), venue(F, B) )
%   | | | then return 0.05901365726912966;  // std dev = 4,800, 203,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=44 */
%   | | | else return 0.007481251123491473;  // std dev = 3,264, 80,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.14431433769611643;  // std dev = 4,343, 93,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | | | else return -0.18080681696875495;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10823744769624492;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5260518144554832;  // std dev = 6,261, 779,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=738 */
%   | | | else return -0.20240806478786133;  // std dev = 4,410, 1.759,000 (wgt'ed) examples reached here.  /* #neg=1.741 #pos=18 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.2590571100865726;  // std dev = 0,105, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.13858432056249056;  // std dev = 3,352, 60,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.3157320709790644;  // std dev = 0,448, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | else return 0.06405941989131744;  // std dev = 0,444, 75,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */


Results
   AUC ROC   = 0.963073
   AUC PR    = 0.471672
   CLL	      = -0.231676
   Precision = 0.377698 at threshold = 0.5
   Recall    = 0.722892
   F1        = 0.496161


Total learning time: 927.29 seconds
Total inference time: 39.151 seconds
AUC ROC: 0.963073


Results scoring model
   AUC ROC   = 0.980731
   AUC PR    = 0.598233
   CLL	      = -0.216954
   Precision = 0.451879 at threshold = 0.5
   Recall    = 0.901437
   F1        = 0.601988


Total scoring time: 368.337 seconds
Refined model CLL: -0.216954


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.963073
   AUC PR    = 0.471672
   CLL	      = -0.231676
   Precision = 0.377698 at threshold = 0.5
   Recall    = 0.722892
   F1        = 0.496161


Total learning time: 1309.0549999999998 seconds
Total inference time: 39.151 seconds
AUC ROC: 0.963073
Total revision time: 1309.0549999999998
Best scored revision CLL: -0.216954


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 00:29:59
{'AUC PR': 0.471672, 'AUC ROC': 0.963073, 'Precision': [0.377698, 0.5], 'parameter_0.4': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 4.645, 'CLL': -0.324046, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 6.661}, 'Inference time': 39.151, 'CLL': -0.231676, 'Recall': 0.722892, 'F1': 0.496161, 'Learning time': 1309.0549999999998}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.05413176665487368;  // std dev = 2,136, 57,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
%   | else return 0.2085628097546117;  // std dev = 0,477, 2.537,000 (wgt'ed) examples reached here.  /* #neg=1.648 #pos=889 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.8278459047964812;  // std dev = 0,985, 33,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return -0.14185106490048774;  // std dev = 4,71e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else return -0.021369137189644314;  // std dev = 0,326, 83,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=10 */
%   | else return -0.02775710516894403;  // std dev = 0,318, 149,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17939275375990832;  // std dev = 0,475, 2.624,000 (wgt'ed) examples reached here.  /* #neg=1.709 #pos=915 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.4418842180795162;  // std dev = 0,695, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23745846029332146;  // std dev = 1,366, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.13850568262615814;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.052296785978536854;  // std dev = 1,516, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -0.0019867980326404885;  // std dev = 4,944, 216,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06712640521528528;  // std dev = 3,380, 85,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | | else return -0.13850568262615814;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.6818872216342361;  // std dev = 4,21e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.2159062161455195;  // std dev = 2,675, 38,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return -0.08798139821020234;  // std dev = 1,255, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | else return 0.17266200236967721;  // std dev = 0,482, 2.412,000 (wgt'ed) examples reached here.  /* #neg=1.523 #pos=889 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then return 0.023198280550034214;  // std dev = 0,334, 183,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=34 */
%   | | else return 0.10621874404810876;  // std dev = 0,427, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return -0.14486459835497326;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.015581572224601731;  // std dev = 3,791, 111,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=17 */
%   | | | else return -0.12279086702672068;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13837739641598612;  // std dev = 0,479, 2.519,000 (wgt'ed) examples reached here.  /* #neg=1.604 #pos=915 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.11074488473265018;  // std dev = 0,826, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.12029872453024927;  // std dev = 1,547, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.022840765016264773;  // std dev = 0,766, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.006669595681937478;  // std dev = 4,750, 179,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=27 */
%   | | | else return -0.05421449058881083;  // std dev = 1,819, 55,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0387284520876923;  // std dev = 3,349, 95,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | | else return -0.11016530933400696;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1166278855695704;  // std dev = 0,479, 2.498,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=915 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7507535301533491;  // std dev = 1,633, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | | else return -0.14350602823872666;  // std dev = 0,117, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.05455081215561479;  // std dev = 1,583, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.02302990606468144;  // std dev = 1,808, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02855028372111424;  // std dev = 3,430, 103,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=21 */
%   | | | else return -0.163370857390893;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10190462331944997;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08542092879440719;  // std dev = 0,477, 2.557,000 (wgt'ed) examples reached here.  /* #neg=1.642 #pos=915 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6562099785377744;  // std dev = 1,394, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return -0.12658257613356275;  // std dev = 0,102, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.05021597584733975;  // std dev = 2,315, 46,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return -0.13634454911024474;  // std dev = 0,025, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.062115026063504206;  // std dev = 3,324, 84,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=21 */
%   | | | else return -0.14235202628333732;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0922305530361753;  // std dev = 0,009, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07000757261684885;  // std dev = 0,477, 2.545,000 (wgt'ed) examples reached here.  /* #neg=1.630 #pos=915 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.6195270943080543;  // std dev = 1,352, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | | else return -0.14291113417387782;  // std dev = 0,548, 116,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.07205190084149206;  // std dev = 1,083, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | | else return 0.052624392105990035;  // std dev = 1,597, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.016202149650442074;  // std dev = 2,744, 125,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=17 */
%   | | | else return -0.10749132046776384;  // std dev = 0,020, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.08479443225920104;  // std dev = 0,008, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05827210355359649;  // std dev = 0,478, 2.527,000 (wgt'ed) examples reached here.  /* #neg=1.612 #pos=915 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.004070826332255783;  // std dev = 0,588, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11053818448561735;  // std dev = 1,097, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.010514829517982527;  // std dev = 0,591, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.013113723084355782;  // std dev = 3,403, 179,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=27 */
%   | | | else return -0.03668723582190491;  // std dev = 1,475, 50,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | else return 0.008286080036125106;  // std dev = 0,277, 92,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.14422959618408673;  // std dev = 2,361, 36,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | | else return -0.09035955574675684;  // std dev = 1,426, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else return 0.620797456043649;  // std dev = 0,265, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.03658505083356593;  // std dev = 0,478, 2.519,000 (wgt'ed) examples reached here.  /* #neg=1.630 #pos=889 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.5245701249092791;  // std dev = 0,272, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.12992660651282065;  // std dev = 0,201, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( haswordtitle(H, K), haswordvenue(A, K) )
%   | | | then return -0.026703242562454356;  // std dev = 1,996, 75,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=10 */
%   | | | else return -0.14299271926055798;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.026015122971085682;  // std dev = 0,224, 153,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=17 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.038241527523698804;  // std dev = 0,478, 2.522,000 (wgt'ed) examples reached here.  /* #neg=1.607 #pos=915 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5194340314070488;  // std dev = 1,368, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return -0.10857675824915532;  // std dev = 0,112, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return -0.019746272443415563;  // std dev = 1,598, 54,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | | else return -0.09453616760996421;  // std dev = 0,032, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.016818326399264817;  // std dev = 2,038, 79,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | | | else return -0.11181019679028628;  // std dev = 0,027, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07781817989118725;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.598331
   AUC PR    = 0.025952
   CLL	      = -0.363852
   Precision = 0.175532 at threshold = 0.5
   Recall    = 0.056799
   F1        = 0.085826


Total learning time: 441.437 seconds
Total inference time: 16.36 seconds
AUC ROC: 0.598331


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:37:37
{'AUC PR': 0.025952, 'AUC ROC': 0.598331, 'Precision': [0.175532, 0.5], 'Inference time': 16.36, 'CLL': -0.363852, 'Recall': 0.056799, 'Learning time': 441.437, 'F1': 0.085826}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.399815601766179;  // std dev = 2,441, 24,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return -0.033155412726574685;  // std dev = 2,111, 46,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | else return 0.2271817287898352;  // std dev = 0,483, 2.409,000 (wgt'ed) examples reached here.  /* #neg=1.520 #pos=889 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | then if ( haswordauthor(K, H) )
%   | | | then return 0.21109011157010057;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.02185106490048766;  // std dev = 3,633, 125,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=15 */
%   | | else if ( title(L, I), venue(L, B) )
%   | | | then return -0.016851064900487656;  // std dev = 3,857, 136,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=17 */
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then if ( title(P, N), venue(P, A) )
%   | | | then return 0.10233498161113995;  // std dev = 3,984, 86,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.549756
   AUC PR    = 0.013242
   CLL	      = -0.200016
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 42.93 seconds
Total inference time: 6.392 seconds
AUC ROC: 0.549756


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 00:38:27
{'AUC PR': 0.013242, 'AUC ROC': 0.549756, 'Precision': [nan, 0.5], 'Inference time': 6.392, 'CLL': -0.200016, 'Recall': 0.0, 'Learning time': 42.93, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.15181496197090832;  // std dev = 29,403, 4.168,000 (wgt'ed) examples reached here.  /* #neg=2.944 #pos=1.224 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.1339411390194131;  // std dev = 29,369, 4.145,000 (wgt'ed) examples reached here.  /* #neg=2.921 #pos=1.224 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.11384935870941439;  // std dev = 29,393, 4.161,000 (wgt'ed) examples reached here.  /* #neg=2.937 #pos=1.224 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.10041944848658987;  // std dev = 29,309, 4.105,000 (wgt'ed) examples reached here.  /* #neg=2.881 #pos=1.224 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,86e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.08291816964653927;  // std dev = 29,332, 4.120,000 (wgt'ed) examples reached here.  /* #neg=2.896 #pos=1.224 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2,95e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.07206079820525281;  // std dev = 29,260, 4.073,000 (wgt'ed) examples reached here.  /* #neg=2.849 #pos=1.224 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.05633352876430561;  // std dev = 29,318, 4.111,000 (wgt'ed) examples reached here.  /* #neg=2.887 #pos=1.224 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527747;  // std dev = 1,07e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.04666638127939186;  // std dev = 29,302, 4.100,000 (wgt'ed) examples reached here.  /* #neg=2.876 #pos=1.224 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.038794464583994805;  // std dev = 29,280, 4.086,000 (wgt'ed) examples reached here.  /* #neg=2.862 #pos=1.224 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 1,03e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.03036989890425603;  // std dev = 29,299, 4.098,000 (wgt'ed) examples reached here.  /* #neg=2.874 #pos=1.224 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.329431
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 10.381 seconds
Total inference time: 4.709 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581109
   AUC PR    = 0.180869
   CLL	      = -0.330096
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162218
   F1        = 0.279152


Total scoring time: 8.492 seconds
Parameter learned model CLL: -0.330096


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.403, 2944, 1224], 'true': [1.08e-06, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.369, 2921, 1224], 'true': [0.0, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.393, 2937, 1224], 'true': [5.33e-07, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.309, 2881, 1224], 'true': [0.0, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.332, 2896, 1224], 'true': [2.86e-07, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.26, 2849, 1224], 'true': [2.95e-07, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.318, 2887, 1224], 'true': [2.92e-07, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.302, 2876, 1224], 'true': [1.07e-07, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.28, 2862, 1224], 'true': [0.0, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.299, 2874, 1224], 'true': [1.03e-07, 0, 237]}]]
[{'': [4.916835808635292e-15, 0.20742629153299283]}, {'': [-4.137337448729697e-15, 0.20809608274245783]}, {'': [1.1992282460086079e-15, 0.20762991814504866]}, {'': [-1.4990353075107598e-16, 0.20926584584616695]}, {'': [3.4477812072747475e-16, 0.20882646809313113]}, {'': [3.6726365034013617e-16, 0.21020597035601613]}, {'': [3.5976847380258237e-16, 0.20908999302441067]}, {'': [4.87186474940997e-17, 0.20941249256398653]}, {'': [-1.686414720949605e-16, 0.20982359448074345]}, {'': [4.4971059225322796e-17, 0.2094711772410445]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4527435296941061;  // std dev = 2,986, 37,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.02764046052324117;  // std dev = 2,882, 59,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | else return 0.1665238657706109;  // std dev = 0,462, 3.606,000 (wgt'ed) examples reached here.  /* #neg=2.494 #pos=1.112 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.11529179224236952;  // std dev = 2,586, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017617373637718044;  // std dev = 6,352, 301,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=48 */
%   | | | else return -0.041851064900487726;  // std dev = 4,243, 200,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14556088301869927;  // std dev = 0,462, 3.702,000 (wgt'ed) examples reached here.  /* #neg=2.558 #pos=1.144 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.4231541412770075;  // std dev = 1,838, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.027268579850648424;  // std dev = 6,486, 295,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=51 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.032224072985366385;  // std dev = 4,327, 199,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=21 */
%   | | | else return -0.136832517440075;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13243315960397958;  // std dev = 0,465, 3.610,000 (wgt'ed) examples reached here.  /* #neg=2.466 #pos=1.144 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2375057532499629;  // std dev = 2,523, 27,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return -0.0689227467285404;  // std dev = 0,923, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01815734641769393;  // std dev = 6,177, 355,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=44 */
%   | | | else return 0.04100466415289365;  // std dev = 4,404, 127,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11161075720400307;  // std dev = 0,465, 3.611,000 (wgt'ed) examples reached here.  /* #neg=2.467 #pos=1.144 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.0236566826894014;  // std dev = 5,657, 315,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=37 */
%   | | | else return 0.021088680624694538;  // std dev = 3,791, 98,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.012279039154086091;  // std dev = 0,870, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.04756679041029734;  // std dev = 4,374, 120,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,86e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09715601492796917;  // std dev = 0,466, 3.563,000 (wgt'ed) examples reached here.  /* #neg=2.419 #pos=1.144 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.253974929338725;  // std dev = 2,040, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.05184876284296456;  // std dev = 0,973, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.016960192709841476;  // std dev = 6,374, 377,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=47 */
%   | | | else return 0.013287437123277172;  // std dev = 4,449, 140,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2,95e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.32048339290692474;  // std dev = 3,173, 41,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return -0.0326182018141403;  // std dev = 2,966, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else return 0.06832946521259935;  // std dev = 0,462, 3.587,000 (wgt'ed) examples reached here.  /* #neg=2.477 #pos=1.110 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.25656125995839174;  // std dev = 1,193, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09077585537403988;  // std dev = 2,498, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.021064231956414204;  // std dev = 6,188, 377,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=44 */
%   | | | else return 0.02492645383452445;  // std dev = 4,404, 129,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06269347815482713;  // std dev = 0,465, 3.608,000 (wgt'ed) examples reached here.  /* #neg=2.464 #pos=1.144 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20879001134179245;  // std dev = 2,007, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.048308431932414415;  // std dev = 0,972, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020257531779309144;  // std dev = 6,394, 393,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=47 */
%   | | | else return 0.03729236856959172;  // std dev = 4,363, 119,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527747;  // std dev = 1,07e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05614333851686993;  // std dev = 0,467, 3.547,000 (wgt'ed) examples reached here.  /* #neg=2.403 #pos=1.144 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.18169795340199318;  // std dev = 0,910, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.010943755622569086;  // std dev = 2,750, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.011373482600893341;  // std dev = 6,156, 356,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=44 */
%   | | | else return 0.0018353235443026718;  // std dev = 4,435, 140,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.029804235414253616;  // std dev = 27,259, 3.504,000 (wgt'ed) examples reached here.  /* #neg=2.427 #pos=1.077 */
%   | | | else return 0.03874716048431596;  // std dev = 6,849, 345,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=66 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.2601453367532276;  // std dev = 0,143, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.13001721966773844;  // std dev = 4,522, 104,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.6097187959709014;  // std dev = 0,320, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.014193591863984532;  // std dev = 4,491, 133,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=25 */
%   | | | else return -0.1361087841332977;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 1,03e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.023975294730152613;  // std dev = 27,256, 3.501,000 (wgt'ed) examples reached here.  /* #neg=2.424 #pos=1.077 */
%   | | | else return 0.04074425126346352;  // std dev = 6,798, 335,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=66 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.18707224722376198;  // std dev = 0,199, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.14539510540960052;  // std dev = 4,371, 94,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.509234567650035;  // std dev = 0,272, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.022810092308575152;  // std dev = 4,452, 127,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=25 */
%   | | | else return -0.12467560739197349;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.717912
   AUC PR    = 0.213841
   CLL	      = -0.30259
   Precision = 0.697987 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.284932


Total learning time: 1220.26 seconds
Total inference time: 19.853 seconds
AUC ROC: 0.717912


Results scoring model
   AUC ROC   = 0.655403
   AUC PR    = 0.203747
   CLL	      = -0.322866
   Precision = 0.612676 at threshold = 0.5
   Recall    = 0.178645
   F1        = 0.27663


Total scoring time: 157.14600000000002 seconds
Refined model CLL: -0.322866


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.717912
   AUC PR    = 0.213841
   CLL	      = -0.30259
   Precision = 0.697987 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.284932


Total learning time: 1396.279 seconds
Total inference time: 19.853 seconds
AUC ROC: 0.717912
Total revision time: 1396.279
Best scored revision CLL: -0.322866


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 01:02:09
{'AUC PR': 0.213841, 'AUC ROC': 0.717912, 'Precision': [0.697987, 0.5], 'Inference time': 19.853, 'parameter_0.6': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 4.709, 'CLL': -0.329431, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 10.381}, 'CLL': -0.30259, 'Recall': 0.179002, 'F1': 0.284932, 'Learning time': 1396.279}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3181489350995113;  // std dev = 3,524, 50,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=23 */
%   | | | else return 0.09499104036267027;  // std dev = 2,621, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.5248156017661783;  // std dev = 2,708, 33,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | | | else return -0.025909035914980446;  // std dev = 2,659, 69,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=8 */
%   | | else return 0.21929842390857046;  // std dev = 0,480, 3.619,000 (wgt'ed) examples reached here.  /* #neg=2.312 #pos=1.307 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then if ( haswordtitle(M, K) )
%   | | then return 0.2812258581764354;  // std dev = 0,494, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return -0.01057693362635605;  // std dev = 0,338, 518,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=68 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2018703605918553;  // std dev = 0,483, 3.703,000 (wgt'ed) examples reached here.  /* #neg=2.322 #pos=1.381 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7151964189321426;  // std dev = 2,440, 51,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=44 */
%   | | | else return -0.14490941688682668;  // std dev = 0,147, 151,000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.21007431147739505;  // std dev = 1,958, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.044441181745425655;  // std dev = 2,856, 92,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.022586610706912397;  // std dev = 4,297, 177,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=21 */
%   | | | else return -0.1452572555409593;  // std dev = 0,063, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.14056841254341776;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.14853830888866948;  // std dev = 0,476, 3.945,000 (wgt'ed) examples reached here.  /* #neg=2.564 #pos=1.381 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6537008834968163;  // std dev = 1,927, 48,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=44 */
%   | | | else return -0.1272965745484844;  // std dev = 0,126, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.044903057766068274;  // std dev = 2,248, 60,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=6 */
%   | | | else return 0.04118579959821096;  // std dev = 2,722, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.018081167353991272;  // std dev = 4,293, 174,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=21 */
%   | | | else return -0.12619620310153293;  // std dev = 0,048, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.12481926439993984;  // std dev = 0,004, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1411342094082174;  // std dev = 0,481, 3.758,000 (wgt'ed) examples reached here.  /* #neg=2.377 #pos=1.381 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5719969249469953;  // std dev = 0,993, 45,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | | else return -0.11452892032332884;  // std dev = 0,132, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.2637297823493548;  // std dev = 1,839, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.04845030530061161;  // std dev = 2,855, 102,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.011179199858822276;  // std dev = 4,280, 168,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=21 */
%   | | | else return -0.1125498448266631;  // std dev = 0,031, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.11172832372249947;  // std dev = 0,003, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11397596865681645;  // std dev = 0,481, 3.772,000 (wgt'ed) examples reached here.  /* #neg=2.391 #pos=1.381 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.4519449414735921;  // std dev = 0,190, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.0989066456311902;  // std dev = 0,920, 155,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=2 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.12976545543158846;  // std dev = 1,984, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.05229803498699423;  // std dev = 2,871, 114,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.013687372326514713;  // std dev = 4,290, 173,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=21 */
%   | | | else return -0.10614948302550725;  // std dev = 0,065, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.10086112452702413;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0888906665326883;  // std dev = 0,480, 3.804,000 (wgt'ed) examples reached here.  /* #neg=2.423 #pos=1.381 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6344240744306454;  // std dev = 0,356, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.143122111630463;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.02471161271686764;  // std dev = 0,234, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.134612568011132;  // std dev = 1,821, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.046408492032895994;  // std dev = 0,953, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.020726970078894045;  // std dev = 3,822, 279,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=42 */
%   | | | else return -0.024905692083784594;  // std dev = 4,107, 188,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07190508668607276;  // std dev = 0,480, 3.794,000 (wgt'ed) examples reached here.  /* #neg=2.413 #pos=1.381 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return 0.00964823328732192;  // std dev = 3,133, 213,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=48 */
%   | | | else return -0.10664738614668329;  // std dev = 0,898, 54,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=1 */
%   | | else return 0.0695134676554851;  // std dev = 0,392, 49,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | else return -0.023246677646821444;  // std dev = 0,301, 204,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=21 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05066245071028672;  // std dev = 0,478, 3.861,000 (wgt'ed) examples reached here.  /* #neg=2.480 #pos=1.381 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return -0.006581773356026061;  // std dev = 0,325, 288,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=37 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.032899965270405056;  // std dev = 0,993, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.05238378495623879;  // std dev = 1,460, 98,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=9 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.010450398847819382;  // std dev = 2,182, 125,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=25 */
%   | | | else return -0.12166174312788061;  // std dev = 0,036, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08784277194550737;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.6526663678394814;  // std dev = 5,853, 1.291,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1.256 */
%   | | | else return -0.3042720584052168;  // std dev = 5,463, 2.390,000 (wgt'ed) examples reached here.  /* #neg=2.360 #pos=30 */
%   | | else if ( samebib(E, G), venue(G, B) )
%   | | | then return 0.6477530723417907;  // std dev = 2,817, 75,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=65 */
%   | | | else return -0.1289852405461066;  // std dev = 1,065, 282,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=1 */
%   | else if ( title(H, D), venue(H, B) )
%   | | then return -0.2710801235573753;  // std dev = 0,082, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.6201633623647063;  // std dev = 0,982, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.04272343360047624;  // std dev = 2,455, 97,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.5673962467268426;  // std dev = 0,318, 44,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=39 */
%   | else return -0.008168786617953257;  // std dev = 0,211, 115,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=25 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.013894536208533806;  // std dev = 0,376, 3.724,000 (wgt'ed) examples reached here.  /* #neg=2.438 #pos=1.286 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.5745390303562997;  // std dev = 2,395, 70,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=65 */
%   | | | else return -0.11164400802245085;  // std dev = 0,979, 283,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=1 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( title(G, D), venue(G, B) )
%   | | | then return -0.2621536837862966;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.391726128503653;  // std dev = 1,604, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return 0.03829025090304922;  // std dev = 0,250, 95,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return 0.0475021457731948;  // std dev = 0,254, 170,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=46 */
%   | | else return 0.13748599165797684;  // std dev = 0,816, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.3738616273435091;  // std dev = 0,306, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */


Results
   AUC ROC   = 0.930252
   AUC PR    = 0.098628
   CLL	      = -0.297765
   Precision = 0.053251 at threshold = 0.5
   Recall    = 0.280551
   F1        = 0.089511


Total learning time: 3188.333 seconds
Total inference time: 41.797 seconds
AUC ROC: 0.930252


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 01:56:00
{'AUC PR': 0.098628, 'AUC ROC': 0.930252, 'Precision': [0.053251, 0.5], 'Inference time': 41.797, 'CLL': -0.297765, 'Recall': 0.280551, 'Learning time': 3188.333, 'F1': 0.089511}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.40814893509951145;  // std dev = 3,146, 40,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return -0.01281880683597155;  // std dev = 2,640, 62,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=8 */
%   | else return 0.2162660787207963;  // std dev = 0,479, 3.739,000 (wgt'ed) examples reached here.  /* #neg=2.400 #pos=1.339 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return 0.13939893509951237;  // std dev = 2,543, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( haswordauthor(N, L) )
%   | | | then return 0.21109011157010057;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.0013828374757390365;  // std dev = 6,008, 299,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=42 */
%   | | else if ( haswordvenue(A, P), haswordtitle(Q, P) )
%   | | | then return -0.036030959080381904;  // std dev = 4,229, 189,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=20 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.550413
   AUC PR    = 0.013217
   CLL	      = -0.198172
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 32.88 seconds
Total inference time: 4.89 seconds
AUC ROC: 0.550413


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 01:56:39
{'AUC PR': 0.013217, 'AUC ROC': 0.550413, 'Precision': [nan, 0.5], 'Inference time': 4.89, 'CLL': -0.198172, 'Recall': 0.0, 'Learning time': 32.88, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.14949730958875923;  // std dev = 34,091, 5.629,000 (wgt'ed) examples reached here.  /* #neg=3.989 #pos=1.640 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.13708659205588983;  // std dev = 33,927, 5.501,000 (wgt'ed) examples reached here.  /* #neg=3.861 #pos=1.640 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.1184552021411303;  // std dev = 33,909, 5.487,000 (wgt'ed) examples reached here.  /* #neg=3.847 #pos=1.640 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.09123811357003177;  // std dev = 34,127, 5.658,000 (wgt'ed) examples reached here.  /* #neg=4.018 #pos=1.640 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.08094819518737584;  // std dev = 34,015, 5.569,000 (wgt'ed) examples reached here.  /* #neg=3.929 #pos=1.640 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.06767472461507476;  // std dev = 34,000, 5.557,000 (wgt'ed) examples reached here.  /* #neg=3.917 #pos=1.640 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,49e-07, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.05949298153090385;  // std dev = 33,905, 5.484,000 (wgt'ed) examples reached here.  /* #neg=3.844 #pos=1.640 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2,49e-07, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.04930806868093334;  // std dev = 33,885, 5.469,000 (wgt'ed) examples reached here.  /* #neg=3.829 #pos=1.640 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.03614586182572764;  // std dev = 33,977, 5.539,000 (wgt'ed) examples reached here.  /* #neg=3.899 #pos=1.640 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.029346377186952887;  // std dev = 33,972, 5.535,000 (wgt'ed) examples reached here.  /* #neg=3.895 #pos=1.640 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.32733
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 19.359 seconds
Total inference time: 5.569 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.579055
   AUC PR    = 0.176667
   CLL	      = -0.328058
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158111
   F1        = 0.27305


Total scoring time: 12.069 seconds
Parameter learned model CLL: -0.328058


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.091, 3989, 1640], 'true': [1.04e-06, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.927, 3861, 1640], 'true': [0.0, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.909, 3847, 1640], 'true': [0.0, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.127, 4018, 1640], 'true': [0.0, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.015, 3929, 1640], 'true': [0.0, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.0, 3917, 1640], 'true': [3.67e-07, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.905, 3844, 1640], 'true': [2.49e-07, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.885, 3829, 1640], 'true': [2.49e-07, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.977, 3899, 1640], 'true': [0.0, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.972, 3895, 1640], 'true': [0.0, 0, 308]}]]
[{'': [3.50657454011478e-15, 0.20646449917166368]}, {'': [-4.9830269780578455e-15, 0.20924753943202345]}, {'': [-1.8455655474288318e-16, 0.20955407663863324]}, {'': [-8.305044963429742e-16, 0.2058391094308577]}, {'': [-3.4604354014290595e-16, 0.20776454684106682]}, {'': [4.383218175143475e-16, 0.20802552466461516]}, {'': [2.0185873175002846e-16, 0.20961981569886562]}, {'': [2.0185873175002846e-16, 0.20994878595793262]}, {'': [-2.105098202536011e-16, 0.20841758195698265]}, {'': [-1.6725437773573787e-16, 0.20850480109740738]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17927864221247788;  // std dev = 0,467, 4.780,000 (wgt'ed) examples reached here.  /* #neg=3.245 #pos=1.535 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2867203636709409;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.011995088945666036;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.013241527692105308;  // std dev = 7,524, 432,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=67 */
%   | | | else return -0.04846585089270579;  // std dev = 4,665, 257,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1614208608456175;  // std dev = 0,469, 4.701,000 (wgt'ed) examples reached here.  /* #neg=3.166 #pos=1.535 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.19454674027598468;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.03192366909417198;  // std dev = 7,433, 382,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=67 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.03677956203945816;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.04707874049055814;  // std dev = 4,770, 280,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=25 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1300887326019994;  // std dev = 0,466, 4.817,000 (wgt'ed) examples reached here.  /* #neg=3.282 #pos=1.535 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.26897081619852836;  // std dev = 2,498, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.043307308855332786;  // std dev = 1,281, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1153787349929782;  // std dev = 3,095, 50,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return -0.014793484112444407;  // std dev = 8,242, 620,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=78 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10448781755118533;  // std dev = 0,464, 4.892,000 (wgt'ed) examples reached here.  /* #neg=3.357 #pos=1.535 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.18517365381112294;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.017751723380736134;  // std dev = 7,470, 405,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=67 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02853189447014152;  // std dev = 4,829, 257,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=26 */
%   | | | else return -0.12894287588883308;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09544056123095508;  // std dev = 0,467, 4.759,000 (wgt'ed) examples reached here.  /* #neg=3.224 #pos=1.535 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03576953089330976;  // std dev = 6,775, 303,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=57 */
%   | | | else return -0.04787506709286798;  // std dev = 4,227, 178,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0306139634723432;  // std dev = 4,845, 270,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=26 */
%   | | | else return -0.11665030025848373;  // std dev = 0,014, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2311164622585442;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | | else return -0.11929337380703033;  // std dev = 3,240, 96,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1430940135803582;  // std dev = 5,132, 111,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=43 */
%   | | | else return 0.0786534323358362;  // std dev = 31,343, 4.493,000 (wgt'ed) examples reached here.  /* #neg=3.042 #pos=1.451 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.07416767139891785;  // std dev = 6,580, 248,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=57 */
%   | | | else return -0.04520457968504022;  // std dev = 4,247, 182,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=22 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.025980558174680656;  // std dev = 4,843, 265,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=26 */
%   | | | else return -0.1037782693780452;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,49e-07, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.15017484507985263;  // std dev = 4,495, 89,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=36 */
%   | | | else return -0.16229828801777418;  // std dev = 2,135, 66,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=5 */
%   | | else return 0.05561357860655119;  // std dev = 0,464, 4.743,000 (wgt'ed) examples reached here.  /* #neg=3.249 #pos=1.494 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.434167900127099;  // std dev = 1,196, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.06884844990207607;  // std dev = 2,499, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.020307248544594297;  // std dev = 7,390, 380,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=67 */
%   | | | else return -0.024350748637463112;  // std dev = 4,657, 252,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2,49e-07, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04264563501431125;  // std dev = 0,462, 4.918,000 (wgt'ed) examples reached here.  /* #neg=3.383 #pos=1.535 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25764200161991346;  // std dev = 1,466, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.026370535801061096;  // std dev = 2,880, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013521119444104876;  // std dev = 7,329, 429,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=65 */
%   | | | else return -0.03356931888485421;  // std dev = 4,761, 296,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=25 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1967094479451729;  // std dev = 4,184, 70,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=34 */
%   | | | else return -0.1135923362624337;  // std dev = 3,160, 68,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=12 */
%   | | else return 0.03742238332320656;  // std dev = 0,464, 4.721,000 (wgt'ed) examples reached here.  /* #neg=3.232 #pos=1.489 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordvenue(A, J) )
%   | | | then return -0.19585612213538836;  // std dev = 0,124, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10398058074803442;  // std dev = 2,878, 37,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.003699849964761445;  // std dev = 7,442, 418,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=67 */
%   | | | else return -0.027139654865238477;  // std dev = 4,675, 275,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.021997023474069767;  // std dev = 31,571, 4.698,000 (wgt'ed) examples reached here.  /* #neg=3.251 #pos=1.447 */
%   | | | else return 0.041597036748474106;  // std dev = 7,742, 448,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=86 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.15139852949026042;  // std dev = 1,492, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.1219382794514144;  // std dev = 5,317, 147,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=46 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.7442385058928206;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5018904691762128;  // std dev = 2,348, 33,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.007467793784737287;  // std dev = 4,932, 172,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=30 */
%   | | | else return -0.09034811155850277;  // std dev = 0,030, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.714725
   AUC PR    = 0.214049
   CLL	      = -0.311715
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 943.602 seconds
Total inference time: 16.384 seconds
AUC ROC: 0.714725


Results scoring model
   AUC ROC   = 0.657364
   AUC PR    = 0.199043
   CLL	      = -0.322946
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158111
   F1        = 0.27305


Total scoring time: 137.042 seconds
Refined model CLL: -0.322946


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.714725
   AUC PR    = 0.214049
   CLL	      = -0.311715
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 1112.072 seconds
Total inference time: 16.384 seconds
AUC ROC: 0.714725
Total revision time: 1112.072
Best scored revision CLL: -0.322946


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:15:35
{'AUC PR': 0.214049, 'AUC ROC': 0.714725, 'Precision': [1.0, 0.5], 'Inference time': 16.384, 'parameter_0.8': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 5.569, 'CLL': -0.32733, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 19.359}, 'CLL': -0.311715, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 1112.072}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.3737739350995111;  // std dev = 3,998, 64,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=33 */
%   | | | else return 0.03672036367094094;  // std dev = 2,866, 56,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.43814893509951125;  // std dev = 3,490, 50,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | | | else return -0.03840278903841871;  // std dev = 2,841, 87,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=9 */
%   | | else return 0.22101200563892626;  // std dev = 0,481, 4.820,000 (wgt'ed) examples reached here.  /* #neg=3.071 #pos=1.749 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( haswordtitle(L, J) )
%   | | then return 0.2867203636709409;  // std dev = 0,495, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else return -0.00851773156715447;  // std dev = 0,340, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return 0.0016820581279029538;  // std dev = 0,351, 634,000 (wgt'ed) examples reached here.  /* #neg=543 #pos=91 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.17553879344717027;  // std dev = 5,014, 117,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   | | else return 0.8152923576678065;  // std dev = 0,061, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19029536281624168;  // std dev = 0,480, 4.949,000 (wgt'ed) examples reached here.  /* #neg=3.162 #pos=1.787 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.8066641453760603;  // std dev = 1,687, 60,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=57 */
%   | | | else return -0.1429955894270063;  // std dev = 0,085, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.04443804705914417;  // std dev = 2,895, 93,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
%   | | | else return 0.03185709937501411;  // std dev = 3,148, 69,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | else return -0.040806699685064826;  // std dev = 0,302, 257,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=26 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.163743093078607;  // std dev = 0,480, 5.067,000 (wgt'ed) examples reached here.  /* #neg=3.224 #pos=1.843 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6934903330437426;  // std dev = 1,390, 59,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   | | | else return -0.12597587651206726;  // std dev = 0,060, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1708531976409692;  // std dev = 2,560, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.05704287661194412;  // std dev = 3,299, 142,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.026480732076986317;  // std dev = 4,809, 235,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=26 */
%   | | | else return -0.13715485256962356;  // std dev = 2,11e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.1370212285097877;  // std dev = 0,001, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7185313768735453;  // std dev = 0,298, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.26740814483390796;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.07381945898271809;  // std dev = 2,811, 93,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
%   | | | else return 0.7225091945863328;  // std dev = 0,388, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.24034316726134963;  // std dev = 4,092, 67,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
%   | | | else return -0.07025191501696501;  // std dev = 2,783, 75,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=10 */
%   | | else return 0.1328840102690789;  // std dev = 0,480, 4.859,000 (wgt'ed) examples reached here.  /* #neg=3.110 #pos=1.749 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.09690066738377774;  // std dev = 0,417, 51,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | else return -0.022602714271301488;  // std dev = 0,279, 710,000 (wgt'ed) examples reached here.  /* #neg=619 #pos=91 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.19167859649897412;  // std dev = 4,389, 90,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=43 */
%   | | | else return 0.018276977784198286;  // std dev = 2,005, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else return 0.4808102873648072;  // std dev = 0,336, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.10471954819413486;  // std dev = 0,477, 5.024,000 (wgt'ed) examples reached here.  /* #neg=3.237 #pos=1.787 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then if ( author(J, H), venue(J, A) )
%   | | | then return 0.1613400405162168;  // std dev = 0,635, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.24949936549365462;  // std dev = 2,291, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else return -0.01364287307853906;  // std dev = 0,329, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return 0.06457476086630716;  // std dev = 0,313, 52,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else return -0.018505514173327423;  // std dev = 0,286, 605,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=78 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09018697658255664;  // std dev = 0,478, 5.081,000 (wgt'ed) examples reached here.  /* #neg=3.238 #pos=1.843 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.2373975274721932;  // std dev = 1,031, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.07481270629990798;  // std dev = 1,895, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else return 0.14635174243734342;  // std dev = 0,762, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.27932522207022015;  // std dev = 1,128, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.019858373510570966;  // std dev = 2,482, 39,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.014932042461791828;  // std dev = 5,430, 384,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=55 */
%   | | | else return -0.04814364764761891;  // std dev = 4,593, 290,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=23 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06818339618065634;  // std dev = 0,476, 5.145,000 (wgt'ed) examples reached here.  /* #neg=3.302 #pos=1.843 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.34257236138491787;  // std dev = 1,014, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.11700577272321129;  // std dev = 2,451, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.14022770676178897;  // std dev = 0,031, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.08114160792868291;  // std dev = 1,970, 36,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.008639020679712964;  // std dev = 0,848, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.024354654171703856;  // std dev = 6,201, 468,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=51 */
%   | | | else return -3.608102342871814E-4;  // std dev = 3,363, 168,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=27 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05030999503199654;  // std dev = 0,475, 5.200,000 (wgt'ed) examples reached here.  /* #neg=3.357 #pos=1.843 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5178955698289536;  // std dev = 1,703, 60,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=57 */
%   | | | else return -0.11407317000735885;  // std dev = 0,395, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06962489392135583;  // std dev = 2,682, 96,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | | else return 0.024143268112457542;  // std dev = 3,187, 78,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=12 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.017084892315206605;  // std dev = 4,778, 242,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=26 */
%   | | | else return -0.11607991866556251;  // std dev = 0,082, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.11282741334034267;  // std dev = 0,004, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04701732944897231;  // std dev = 0,477, 5.093,000 (wgt'ed) examples reached here.  /* #neg=3.250 #pos=1.843 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.036666525582979434;  // std dev = 2,633, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.023585090304993776;  // std dev = 3,841, 357,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=54 */
%   | | else return 0.023393311138881736;  // std dev = 0,361, 80,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.006819261653139748;  // std dev = 4,760, 223,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=26 */
%   | | | else return -0.10141535943853493;  // std dev = 0,053, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.10169002564854132;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.021835097673811373;  // std dev = 0,473, 4.970,000 (wgt'ed) examples reached here.  /* #neg=3.247 #pos=1.723 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.6871967410902746;  // std dev = 2,657, 91,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=84 */
%   | | | else return -0.12505123207596935;  // std dev = 1,417, 388,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=2 */
%   | else if ( haswordtitle(D, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return 0.40933855084828047;  // std dev = 2,422, 32,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | | | else return 0.058758137898348786;  // std dev = 3,044, 126,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=35 */
%   | | else return -0.026453728315606044;  // std dev = 0,244, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.08305408625977441;  // std dev = 0,318, 191,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=57 */
%   | | else return -0.025384504739000356;  // std dev = 0,245, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return 0.39338962827201773;  // std dev = 0,364, 29,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */


Results
   AUC ROC   = 0.586194
   AUC PR    = 0.022074
   CLL	      = -0.387491
   Precision = 0.182796 at threshold = 0.5
   Recall    = 0.02926
   F1        = 0.050445


Total learning time: 2279.969 seconds
Total inference time: 24.45 seconds
AUC ROC: 0.586194


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 02:54:00
{'AUC PR': 0.022074, 'AUC ROC': 0.586194, 'Precision': [0.182796, 0.5], 'Inference time': 24.45, 'CLL': -0.387491, 'Recall': 0.02926, 'Learning time': 2279.969, 'F1': 0.050445}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21775869119706814;  // std dev = 0,480, 5.125,000 (wgt'ed) examples reached here.  /* #neg=3.282 #pos=1.843 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3343394112899885;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.047804107513305466;  // std dev = 6,676, 290,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=55 */
%   | | | else return -0.06492798797741073;  // std dev = 3,328, 156,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.03260736742149642;  // std dev = 4,812, 238,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=26 */
%   | | | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.550377
   AUC PR    = 0.012643
   CLL	      = -0.198965
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 40.544 seconds
Total inference time: 4.676 seconds
AUC ROC: 0.550377


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 02:54:46
{'AUC PR': 0.012643, 'AUC ROC': 0.550377, 'Precision': [nan, 0.5], 'Inference time': 4.676, 'CLL': -0.198965, 'Recall': 0.0, 'Learning time': 40.544, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,56e-06, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.15209706190065989;  // std dev = 37,952, 6.940,000 (wgt'ed) examples reached here.  /* #neg=4.900 #pos=2.040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.1340027334842606;  // std dev = 37,913, 6.906,000 (wgt'ed) examples reached here.  /* #neg=4.866 #pos=2.040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.11106706927590342;  // std dev = 38,020, 7.000,000 (wgt'ed) examples reached here.  /* #neg=4.960 #pos=2.040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.10179717979212893;  // std dev = 37,811, 6.819,000 (wgt'ed) examples reached here.  /* #neg=4.779 #pos=2.040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.07902852838008685;  // std dev = 37,977, 6.962,000 (wgt'ed) examples reached here.  /* #neg=4.922 #pos=2.040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,50e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06815452141168457;  // std dev = 37,904, 6.898,000 (wgt'ed) examples reached here.  /* #neg=4.858 #pos=2.040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.05130985250721817;  // std dev = 38,028, 7.008,000 (wgt'ed) examples reached here.  /* #neg=4.968 #pos=2.040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2,06e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.044134826868603885;  // std dev = 37,967, 6.953,000 (wgt'ed) examples reached here.  /* #neg=4.913 #pos=2.040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.03624967773428607;  // std dev = 37,954, 6.942,000 (wgt'ed) examples reached here.  /* #neg=4.902 #pos=2.040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.035834671478826685;  // std dev = 37,777, 6.790,000 (wgt'ed) examples reached here.  /* #neg=4.750 #pos=2.040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.325883
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 24.311 seconds
Total inference time: 5.444 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.326556
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 14.155 seconds
Parameter learned model CLL: -0.326556


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.952, 4900, 2040], 'true': [1.56e-06, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.913, 4866, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.02, 4960, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.811, 4779, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.977, 4922, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.904, 4858, 2040], 'true': [4.5e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.028, 4968, 2040], 'true': [2.46e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.967, 4913, 2040], 'true': [2.06e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.954, 4902, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.777, 4750, 2040], 'true': [0.0, 0, 396]}]]
[{'': [6.172391441956426e-15, 0.2075426255511822]}, {'': [-5.311127519822971e-15, 0.2081369201864358]}, {'': [-1.2201238896890609e-15, 0.20649795918373012]}, {'': [-1.8301858345335913e-15, 0.2096649413948463]}, {'': [-1.5969268556224474e-15, 0.2071589680294812]}, {'': [5.113754537667388e-16, 0.20827699247808806]}, {'': [1.525154862111326e-16, 0.20635907299686557]}, {'': [1.0765799026668185e-16, 0.20731583383644206]}, {'': [-2.6017347647781446e-16, 0.20750771860285544]}, {'': [-3.1848822120560044e-16, 0.21017653527559071]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,56e-06, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4642095411601182;  // std dev = 3,970, 66,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | | | else return -0.031681573375063936;  // std dev = 3,401, 118,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=13 */
%   | | else return 0.18063414220009888;  // std dev = 0,467, 5.746,000 (wgt'ed) examples reached here.  /* #neg=3.893 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.2528857772047755;  // std dev = 3,013, 38,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.0248156017661789;  // std dev = 8,317, 498,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03627921739315688;  // std dev = 5,674, 341,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14984510593308428;  // std dev = 0,464, 6.048,000 (wgt'ed) examples reached here.  /* #neg=4.142 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06684390049594796;  // std dev = 7,370, 325,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=69 */
%   | | | else return -4.624397850951652E-4;  // std dev = 4,918, 194,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=29 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.034340075067946764;  // std dev = 5,682, 349,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.480300823951515;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | | else return -0.022831824879233017;  // std dev = 3,355, 97,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
%   | | else return 0.13065982747900504;  // std dev = 0,466, 5.833,000 (wgt'ed) examples reached here.  /* #neg=3.980 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.047133881579983626;  // std dev = 7,422, 343,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=69 */
%   | | | else return -0.02418594303577847;  // std dev = 4,984, 233,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.017714454487421993;  // std dev = 5,642, 311,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=36 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27047794473160014;  // std dev = 4,355, 88,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=46 */
%   | | | else return -0.09508061209885403;  // std dev = 2,408, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | | else return 0.10819072757296663;  // std dev = 0,465, 5.866,000 (wgt'ed) examples reached here.  /* #neg=4.013 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.38053174428853825;  // std dev = 2,584, 27,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return -0.005612042842440088;  // std dev = 1,329, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.06601951343536755;  // std dev = 3,406, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return -0.005991720157083659;  // std dev = 9,344, 739,000 (wgt'ed) examples reached here.  /* #neg=637 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2642515368249348;  // std dev = 3,754, 72,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=42 */
%   | | | else return -0.06248204118301577;  // std dev = 3,080, 93,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=11 */
%   | | else return 0.09095894952421991;  // std dev = 0,465, 5.845,000 (wgt'ed) examples reached here.  /* #neg=3.992 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1668127257838152;  // std dev = 2,998, 37,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.01741733740737243;  // std dev = 8,262, 486,000 (wgt'ed) examples reached here.  /* #neg=403 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.022044875459701546;  // std dev = 5,664, 330,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=36 */
%   | | | else return -0.10105304181224972;  // std dev = 3,33e-05, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,50e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.005999277970966716;  // std dev = 4,950, 168,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=46 */
%   | | | else return 0.8016468233240842;  // std dev = 0,106, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.07551991187402834;  // std dev = 0,466, 5.829,000 (wgt'ed) examples reached here.  /* #neg=3.976 #pos=1.853 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.0026304540480906256;  // std dev = 1,229, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.07832027046131976;  // std dev = 3,328, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0036219876800107826;  // std dev = 8,174, 496,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=82 */
%   | | | else return -0.020897747056345232;  // std dev = 5,587, 330,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=35 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06250958460347333;  // std dev = 0,464, 5.971,000 (wgt'ed) examples reached here.  /* #neg=4.065 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.041528296891925706;  // std dev = 7,361, 333,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=69 */
%   | | | else return -0.02721541564667846;  // std dev = 4,820, 221,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=29 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05455984339288832;  // std dev = 1,281, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.022164470222902747;  // std dev = 5,517, 330,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2,06e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25846632649533724;  // std dev = 4,332, 76,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=40 */
%   | | | else return -0.08660308231683439;  // std dev = 3,249, 71,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
%   | | else return 0.051444484683314355;  // std dev = 0,465, 5.783,000 (wgt'ed) examples reached here.  /* #neg=3.930 #pos=1.853 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.27472304778775997;  // std dev = 1,432, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.11620083087722098;  // std dev = 2,949, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.02745077442420762;  // std dev = 3,286, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return -0.01160823319680333;  // std dev = 9,369, 772,000 (wgt'ed) examples reached here.  /* #neg=670 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.02382198750967218;  // std dev = 4,870, 175,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=46 */
%   | | | else return 0.6185352778148803;  // std dev = 0,111, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.03599470180628739;  // std dev = 0,464, 5.880,000 (wgt'ed) examples reached here.  /* #neg=4.027 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.11975229952782765;  // std dev = 3,009, 38,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return -0.029543016799002914;  // std dev = 1,343, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.004113672281282134;  // std dev = 8,305, 529,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=83 */
%   | | | else return -0.021534979605982052;  // std dev = 5,521, 341,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.020361492884428557;  // std dev = 0,459, 5.931,000 (wgt'ed) examples reached here.  /* #neg=4.113 #pos=1.818 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.08852411353414308;  // std dev = 3,631, 68,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0.03973286464704162;  // std dev = 9,673, 674,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=132 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.42213206912377044;  // std dev = 0,442, 47,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=34 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.006743583736732172;  // std dev = 5,472, 197,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=36 */
%   | | | else return -0.08999432855917876;  // std dev = 0,036, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.622612
   AUC PR    = 0.196411
   CLL	      = -0.316672
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 540.009 seconds
Total inference time: 12.433 seconds
AUC ROC: 0.622612


Results scoring model
   AUC ROC   = 0.65325
   AUC PR    = 0.201687
   CLL	      = -0.32251
   Precision = 0.96875 at threshold = 0.5
   Recall    = 0.165435
   F1        = 0.282609


Total scoring time: 85.348 seconds
Refined model CLL: -0.32251


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622612
   AUC PR    = 0.196411
   CLL	      = -0.316672
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 663.823 seconds
Total inference time: 12.433 seconds
AUC ROC: 0.622612
Total revision time: 663.823
Best scored revision CLL: -0.32251


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 03:06:10
{'AUC PR': 0.196411, 'AUC ROC': 0.622612, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 5.444, 'CLL': -0.325883, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 24.311}, 'Inference time': 12.433, 'CLL': -0.316672, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 663.823}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22227421191064287;  // std dev = 0,481, 6.322,000 (wgt'ed) examples reached here.  /* #neg=4.020 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3396304165809938;  // std dev = 2,596, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.04185106490048778;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.16249676118646889;  // std dev = 3,121, 46,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012166792242369903;  // std dev = 7,640, 448,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=69 */
%   | | | else return -0.037750118528248444;  // std dev = 5,437, 317,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=33 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18611372614325353;  // std dev = 0,479, 6.444,000 (wgt'ed) examples reached here.  /* #neg=4.142 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.3332054912315484;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2758749093839182;  // std dev = 2,639, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.054337057792759894;  // std dev = 7,306, 335,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=67 */
%   | | | else return -0.061771528087676546;  // std dev = 3,834, 196,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.024981579984724524;  // std dev = 5,495, 302,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=34 */
%   | | | else return -0.13731759943943958;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16149493946938331;  // std dev = 0,480, 6.383,000 (wgt'ed) examples reached here.  /* #neg=4.081 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7884797759888486;  // std dev = 1,935, 72,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=68 */
%   | | | else return -0.15138265976430573;  // std dev = 1,037, 289,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1481079366868889;  // std dev = 2,834, 34,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.04350544062823687;  // std dev = 3,811, 173,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.01665245956133304;  // std dev = 5,601, 305,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=36 */
%   | | | else return -0.1367179344436595;  // std dev = 0,041, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.12184560481208305;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13162583063369487;  // std dev = 0,479, 6.434,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.21287288951394978;  // std dev = 0,813, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.18642808524017745;  // std dev = 2,678, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.012545298247838206;  // std dev = 6,337, 451,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=65 */
%   | | | else return 0.06967224829518175;  // std dev = 3,761, 89,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.006013578076133966;  // std dev = 0,296, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0784490609477711;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return -0.03271619833313312;  // std dev = 5,446, 337,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=33 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7499773124090432;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.2500226875909571;  // std dev = 5,16e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.1337436178235155;  // std dev = 3,641, 129,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=15 */
%   | | | else return 0.7499773124090429;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.10044753184479181;  // std dev = 0,477, 6.380,000 (wgt'ed) examples reached here.  /* #neg=4.144 #pos=2.236 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then if ( author(L, J), title(L, K) )
%   | | | then return 0.3023679805985109;  // std dev = 0,651, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2073490652958158;  // std dev = 2,516, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return -0.011700335921939023;  // std dev = 0,272, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else return -0.004735106502283047;  // std dev = 0,319, 837,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=117 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.69681736463257;  // std dev = 0,093, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2449773560540075;  // std dev = 4,348, 76,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return -0.12584713371015385;  // std dev = 2,926, 70,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=10 */
%   | else return 0.08651380449816717;  // std dev = 0,477, 6.283,000 (wgt'ed) examples reached here.  /* #neg=4.047 #pos=2.236 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.5220362832251793;  // std dev = 0,943, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1373570454544089;  // std dev = 0,039, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(L, H) )
%   | | | then return 0.04719948567500441;  // std dev = 2,600, 56,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return -0.1478166252185956;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.004375163171094786;  // std dev = 0,325, 810,000 (wgt'ed) examples reached here.  /* #neg=693 #pos=117 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5479308688761141;  // std dev = 0,319, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.22062976541585902;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.10604002299948923;  // std dev = 3,277, 102,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=15 */
%   | | | else return 0.521889627023166;  // std dev = 0,181, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.07302374154122399;  // std dev = 0,480, 6.217,000 (wgt'ed) examples reached here.  /* #neg=3.981 #pos=2.236 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then return 0.013276694292667904;  // std dev = 0,325, 439,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=80 */
%   | | else if ( title(M, J), venue(M, A) )
%   | | | then return 0.476637014531539;  // std dev = 0,762, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.050303718921827334;  // std dev = 3,604, 85,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | else return -0.027087135098577894;  // std dev = 0,296, 364,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06303809136304586;  // std dev = 0,477, 6.304,000 (wgt'ed) examples reached here.  /* #neg=4.002 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6868694578078562;  // std dev = 1,054, 69,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=68 */
%   | | | else return -0.1308659839268206;  // std dev = 0,955, 268,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.26635209411502964;  // std dev = 2,207, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return -0.04743924764606925;  // std dev = 3,788, 179,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.003149573830264384;  // std dev = 5,580, 294,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=36 */
%   | | | else return -0.11437858916899765;  // std dev = 0,042, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.10294701528137679;  // std dev = 0,000983, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.44429994215505886;  // std dev = 0,261, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.17599263252479;  // std dev = 2,374, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | | | else return -0.15324477673480005;  // std dev = 2,544, 104,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.10302535093990896;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | | else return -0.139762144617521;  // std dev = 2,947, 76,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=10 */
%   | | else return 0.04381587018123525;  // std dev = 0,480, 6.090,000 (wgt'ed) examples reached here.  /* #neg=3.903 #pos=2.187 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, A) )
%   | | then return 0.07576358932829083;  // std dev = 0,408, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return -0.062101525869639386;  // std dev = 0,404, 49,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | else return -0.013482093257519633;  // std dev = 0,288, 851,000 (wgt'ed) examples reached here.  /* #neg=734 #pos=117 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.015203114228409217;  // std dev = 0,469, 6.339,000 (wgt'ed) examples reached here.  /* #neg=4.187 #pos=2.152 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.6491793221228733;  // std dev = 3,431, 126,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=113 */
%   | | | else return -0.13420712720106104;  // std dev = 1,718, 478,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=2 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( title(G, D), venue(G, B) )
%   | | | then return -0.319230084476428;  // std dev = 0,115, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.5756714989393767;  // std dev = 1,647, 33,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.14751831016046607;  // std dev = 2,430, 44,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.03871888049990854;  // std dev = 3,184, 115,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=25 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.5500558366398073;  // std dev = 0,311, 67,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=60 */
%   | else return -0.009999087797951448;  // std dev = 0,261, 212,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=36 */


Results
   AUC ROC   = 0.701057
   AUC PR    = 0.030103
   CLL	      = -0.353791
   Precision = 0.045455 at threshold = 0.5
   Recall    = 0.001721
   F1        = 0.003317


Total learning time: 2470.307 seconds
Total inference time: 21.672 seconds
AUC ROC: 0.701057


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 03:47:42
{'AUC PR': 0.030103, 'AUC ROC': 0.701057, 'Precision': [0.045455, 0.5], 'Inference time': 21.672, 'CLL': -0.353791, 'Recall': 0.001721, 'Learning time': 2470.307, 'F1': 0.003317}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22026943218932937;  // std dev = 0,481, 6.357,000 (wgt'ed) examples reached here.  /* #neg=4.055 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30642479716847787;  // std dev = 2,678, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1289822684328457;  // std dev = 3,079, 48,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.039967116917694;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00301806691255972;  // std dev = 7,708, 497,000 (wgt'ed) examples reached here.  /* #neg=428 #pos=69 */
%   | | | else return -0.04093363370782762;  // std dev = 5,447, 327,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=33 */


Results
   AUC ROC   = 0.549999
   AUC PR    = 0.012638
   CLL	      = -0.199242
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 21.284 seconds
Total inference time: 3.292 seconds
AUC ROC: 0.549999


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 03:48:08
{'AUC PR': 0.012638, 'AUC ROC': 0.549999, 'Precision': [nan, 0.5], 'Inference time': 3.292, 'CLL': -0.199242, 'Recall': 0.0, 'Learning time': 21.284, 'F1': nan}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 182149

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 67804

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.150755938990558;  // std dev = 16,309, 1.285,000 (wgt'ed) examples reached here.  /* #neg=909 #pos=376 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,23e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.1350851532310555;  // std dev = 16,266, 1.269,000 (wgt'ed) examples reached here.  /* #neg=893 #pos=376 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,32e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.10648070552970108;  // std dev = 16,376, 1.311,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=376 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.1041994768800294;  // std dev = 16,214, 1.250,000 (wgt'ed) examples reached here.  /* #neg=874 #pos=376 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.09285833247140274;  // std dev = 16,149, 1.227,000 (wgt'ed) examples reached here.  /* #neg=851 #pos=376 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.06811258166514939;  // std dev = 16,250, 1.263,000 (wgt'ed) examples reached here.  /* #neg=887 #pos=376 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.046483336857816006;  // std dev = 16,358, 1.304,000 (wgt'ed) examples reached here.  /* #neg=928 #pos=376 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3,65e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.03719618482463221;  // std dev = 16,366, 1.307,000 (wgt'ed) examples reached here.  /* #neg=931 #pos=376 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8,16e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.04915498386584264;  // std dev = 16,146, 1.226,000 (wgt'ed) examples reached here.  /* #neg=850 #pos=376 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,37e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.02579110073400968;  // std dev = 16,306, 1.284,000 (wgt'ed) examples reached here.  /* #neg=908 #pos=376 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.326373
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 3.858 seconds
Total inference time: 5.7 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.585903
   AUC PR    = 0.191171
   CLL	      = -0.327249
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.171806
   F1        = 0.293233


Total scoring time: 4.711 seconds
Parameter learned model CLL: -0.327249


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.309, 909, 376], 'true': [0.0, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.266, 893, 376], 'true': [2.23e-07, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.376, 935, 376], 'true': [3.32e-07, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.214, 874, 376], 'true': [0.0, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.149, 851, 376], 'true': [0.0, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.25, 887, 376], 'true': [0.0, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.358, 928, 376], 'true': [0.0, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.366, 931, 376], 'true': [3.65e-08, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.146, 850, 376], 'true': [8.16e-08, 0, 78]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.306, 908, 376], 'true': [5.37e-08, 0, 78]}]]
[{'': [-1.002047447866808e-15, 0.20698814516493494]}, {'': [6.376665577334232e-16, 0.20850480109739347]}, {'': [1.4119759492668657e-15, 0.20454745127336954]}, {'': [-2.2773805633336544e-17, 0.21031935999999096]}, {'': [-3.8715469576672126e-16, 0.21253393325534858]}, {'': [-1.1386902816668272e-17, 0.20907627969198908]}, {'': [-9.678867394168032e-17, 0.20520155067936613]}, {'': [1.708035422500241e-17, 0.20492094536569572]}, {'': [8.540177112501205e-17, 0.21263063211706507]}, {'': [3.700743415417188e-17, 0.2070826175988251]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.04185106490048778;  // std dev = 1,643, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else return 0.17984704830705467;  // std dev = 0,467, 1.060,000 (wgt'ed) examples reached here.  /* #neg=719 #pos=341 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06867525088898598;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -1.8439823382097412E-4;  // std dev = 3,820, 120,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=17 */
%   | | | else return -0.08087545514439012;  // std dev = 2,167, 82,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,23e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5848162226369221;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.19595027303384233;  // std dev = 2,408, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else return 0.15163027295582604;  // std dev = 0,464, 1.046,000 (wgt'ed) examples reached here.  /* #neg=715 #pos=331 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.18725362675942872;  // std dev = 0,811, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.037930088896957904;  // std dev = 3,665, 149,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.056905241309409764;  // std dev = 0,956, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.10798040762563714;  // std dev = 2,736, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,32e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1446436712990964;  // std dev = 0,470, 1.050,000 (wgt'ed) examples reached here.  /* #neg=701 #pos=349 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.11016864177527562;  // std dev = 3,214, 54,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return -0.04878692108223109;  // std dev = 1,913, 44,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.2116976545272786;  // std dev = 1,589, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.054106175034320525;  // std dev = 2,153, 67,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10290170998477106;  // std dev = 0,463, 1.112,000 (wgt'ed) examples reached here.  /* #neg=763 #pos=349 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0952929168751174;  // std dev = 3,215, 54,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return -0.04693586075065591;  // std dev = 1,916, 46,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0025316501528129557;  // std dev = 1,799, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return -0.05448163053211139;  // std dev = 2,159, 74,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09490605914941799;  // std dev = 0,466, 1.079,000 (wgt'ed) examples reached here.  /* #neg=730 #pos=349 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.2178915812793631;  // std dev = 1,534, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.15321586693100248;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.030449383535691134;  // std dev = 3,278, 126,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=12 */
%   | | | else return 0.048354613843736044;  // std dev = 2,762, 45,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07494804695384819;  // std dev = 0,465, 1.088,000 (wgt'ed) examples reached here.  /* #neg=739 #pos=349 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09304602865840962;  // std dev = 1,643, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.043454799668714884;  // std dev = 0,920, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.009166425346318284;  // std dev = 3,767, 115,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=17 */
%   | | | else return -0.04885015090059676;  // std dev = 2,165, 76,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05759829374996368;  // std dev = 0,464, 1.098,000 (wgt'ed) examples reached here.  /* #neg=749 #pos=349 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return -0.011830365218706358;  // std dev = 1,227, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.153691506632919;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.008546587360253011;  // std dev = 3,711, 103,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=17 */
%   | | | else return -0.009585043329940368;  // std dev = 2,602, 71,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3,65e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.052412424042708954;  // std dev = 0,466, 1.079,000 (wgt'ed) examples reached here.  /* #neg=730 #pos=349 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.42846386756154636;  // std dev = 1,152, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.005251498865888793;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.01958741353884535;  // std dev = 3,703, 96,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=17 */
%   | | | else return -0.0294569014035114;  // std dev = 2,149, 63,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8,16e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5611900301515907;  // std dev = 0,685, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.3756797223834752;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.15253276450753248;  // std dev = 0,938, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.22341833125053334;  // std dev = 2,057, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.030433579818386482;  // std dev = 2,127, 30,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.03666026226047553;  // std dev = 14,872, 1.021,000 (wgt'ed) examples reached here.  /* #neg=697 #pos=324 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.021610816742342057;  // std dev = 3,611, 133,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=15 */
%   | | | else return 0.054737554829784436;  // std dev = 2,684, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,37e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6753404992987834;  // std dev = 3,448, 337,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=326 */
%   | | | else return -0.24489554393793406;  // std dev = 4,291, 776,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=17 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.21012170863578386;  // std dev = 1,701, 56,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=3 */
%   | | | else return 0.1963817404414597;  // std dev = 2,796, 35,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.699462248535738;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.0999249597367684;  // std dev = 0,964, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.10594914730568146;  // std dev = 2,567, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */


Results
   AUC ROC   = 0.94799
   AUC PR    = 0.507937
   CLL	      = -0.274009
   Precision = 0.984848 at threshold = 0.5
   Recall    = 0.174029
   F1        = 0.295791


Total learning time: 219.238 seconds
Total inference time: 36.278 seconds
AUC ROC: 0.94799


Results scoring model
   AUC ROC   = 0.936703
   AUC PR    = 0.562811
   CLL	      = -0.264021
   Precision = 0.961538 at threshold = 0.5
   Recall    = 0.220264
   F1        = 0.358423


Total scoring time: 81.537 seconds
Refined model CLL: -0.264021


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.94799
   AUC PR    = 0.507937
   CLL	      = -0.274009
   Precision = 0.984848 at threshold = 0.5
   Recall    = 0.174029
   F1        = 0.295791


Total learning time: 309.344 seconds
Total inference time: 36.278 seconds
AUC ROC: 0.94799
Total revision time: 309.344
Best scored revision CLL: -0.264021


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 03:54:01
{'AUC PR': 0.507937, 'AUC ROC': 0.94799, 'Precision': [0.984848, 0.5], 'Inference time': 36.278, 'CLL': -0.274009, 'Recall': 0.174029, 'F1': 0.295791, 'Learning time': 309.344, 'parameter_0.2': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.7, 'CLL': -0.326373, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 3.858}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.08302753548872309;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0.22075763075168137;  // std dev = 0,481, 1.150,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=417 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, B) )
%   | | | then return -0.09773341784166417;  // std dev = 1,693, 68,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=3 */
%   | | | else return 0.03056272820296064;  // std dev = 2,877, 58,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else return 0.15814893509951225;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return 0.1637044906550679;  // std dev = 0,461, 36,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8197277714698122;  // std dev = 0,079, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3021272782166614;  // std dev = 1,473, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.06008860089368568;  // std dev = 1,327, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.28855665168399175;  // std dev = 3,031, 37,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.20119021548035113;  // std dev = 15,848, 1.075,000 (wgt'ed) examples reached here.  /* #neg=675 #pos=400 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.034746811242876194;  // std dev = 0,306, 151,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=16 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return 0.06619690292887508;  // std dev = 2,912, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return -0.1629697637377916;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1629697637377916;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16701877738467252;  // std dev = 0,481, 1.159,000 (wgt'ed) examples reached here.  /* #neg=732 #pos=427 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return -0.07562885270406862;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | | | else return 0.0627391305847376;  // std dev = 2,821, 49,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | else return 0.0732227388794423;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.06692809971859211;  // std dev = 2,893, 46,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return -0.14194052626040563;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1419405262604056;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7330712940620099;  // std dev = 0,205, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.24533173746464476;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10863371843052781;  // std dev = 1,777, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.2986630410508259;  // std dev = 1,463, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.14536464828958964;  // std dev = 0,483, 1.087,000 (wgt'ed) examples reached here.  /* #neg=680 #pos=407 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | then return 0.1889916837943109;  // std dev = 0,463, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.18420384162737533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.0015822653401682178;  // std dev = 0,364, 106,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=17 */
%   | | else return -0.048714860862297545;  // std dev = 0,273, 60,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10672126650562569;  // std dev = 0,478, 1.172,000 (wgt'ed) examples reached here.  /* #neg=745 #pos=427 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.13329000222552023;  // std dev = 0,455, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.07595711383632642;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.07213335502390682;  // std dev = 3,119, 52,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return -0.05844075339446615;  // std dev = 1,922, 56,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1267111175357503;  // std dev = 0,029, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.05976634874125164;  // std dev = 2,143, 72,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09538563087618299;  // std dev = 0,481, 1.142,000 (wgt'ed) examples reached here.  /* #neg=715 #pos=427 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8515503238624729;  // std dev = 0,113, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.13118561365909004;  // std dev = 0,230, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.15333273933607333;  // std dev = 0,054, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.029093896664370344;  // std dev = 1,599, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else return 0.040504158591281654;  // std dev = 0,416, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07328496308617904;  // std dev = 0,480, 1.150,000 (wgt'ed) examples reached here.  /* #neg=723 #pos=427 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.20441552157259826;  // std dev = 0,417, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.0017401005160313176;  // std dev = 0,731, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.023310964225393718;  // std dev = 3,186, 61,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return -0.04601737751827361;  // std dev = 1,654, 51,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.04347542602889056;  // std dev = 1,825, 68,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=5 */
%   | | | else return -0.11688148525280036;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.3913779552931778;  // std dev = 0,352, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.2163962201789387;  // std dev = 0,867, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1747383379376201;  // std dev = 1,358, 30,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | else return 0.0575602350242647;  // std dev = 0,482, 1.123,000 (wgt'ed) examples reached here.  /* #neg=706 #pos=417 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return -0.0052137626431952066;  // std dev = 0,276, 101,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=13 */
%   | | else if ( haswordtitle(H, J), haswordvenue(B, J) )
%   | | | then return -0.007843626442056939;  // std dev = 1,572, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.12108431484800186;  // std dev = 0,077, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return -0.0845809624919093;  // std dev = 0,296, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return 0.04871365618537142;  // std dev = 0,428, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03497674808922024;  // std dev = 0,476, 1.185,000 (wgt'ed) examples reached here.  /* #neg=758 #pos=427 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.04165680967627979;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.03265827519648192;  // std dev = 1,161, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.024562584113842413;  // std dev = 0,730, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.040784476277547464;  // std dev = 2,494, 116,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=9 */
%   | | | else return 0.07782291302107357;  // std dev = 1,493, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.061255817541896136;  // std dev = 0,923, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.04641425074716216;  // std dev = 2,567, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.47685971453077336;  // std dev = 0,273, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.2687311312292445;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.14364235543179404;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12019644386601709;  // std dev = 2,060, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0.027309757369726965;  // std dev = 0,477, 1.137,000 (wgt'ed) examples reached here.  /* #neg=730 #pos=407 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then return -0.020483722296627753;  // std dev = 0,248, 128,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=13 */
%   | | else return -0.06085138281500082;  // std dev = 0,289, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return -0.08463491594571537;  // std dev = 0,304, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return 0.006800577954623423;  // std dev = 0,416, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */


Results
   AUC ROC   = 0.545084
   AUC PR    = 0.025333
   CLL	      = -0.395445
   Precision = 0.035714 at threshold = 0.5
   Recall    = 0.021419
   F1        = 0.026778


Total learning time: 453.858 seconds
Total inference time: 19.067 seconds
AUC ROC: 0.545084


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 04:01:54
{'AUC PR': 0.025333, 'AUC ROC': 0.545084, 'Precision': [0.035714, 0.5], 'Inference time': 19.067, 'CLL': -0.395445, 'Recall': 0.021419, 'Learning time': 453.858, 'F1': 0.026778}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.3844647245731965;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.1914822684328457;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else return 0.22186654010397575;  // std dev = 0,481, 1.119,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=407 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.09959754377372713;  // std dev = 1,695, 71,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=3 */
%   | | | else return 0.03672036367094094;  // std dev = 2,866, 56,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | else return 0.00814893509951222;  // std dev = 0,357, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then if ( haswordauthor(M, N), haswordtitle(P, N) )
%   | | | then return -0.04185106490048778;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, Q), haswordtitle(R, Q) )
%   | | | then return 0.07554023944733845;  // std dev = 2,798, 46,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.533852
   AUC PR    = 0.015105
   CLL	      = -0.201371
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 152.338 seconds
Total inference time: 5.785 seconds
AUC ROC: 0.533852


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 04:04:33
{'AUC PR': 0.015105, 'AUC ROC': 0.533852, 'Precision': [nan, 0.5], 'Inference time': 5.785, 'CLL': -0.201371, 'Recall': 0.0, 'Learning time': 152.338, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 8,92e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.1579524714452833;  // std dev = 23,114, 2.545,000 (wgt'ed) examples reached here.  /* #neg=1.782 #pos=763 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.144362167241373;  // std dev = 23,002, 2.489,000 (wgt'ed) examples reached here.  /* #neg=1.726 #pos=763 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,13e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.11273636088907672;  // std dev = 23,185, 2.582,000 (wgt'ed) examples reached here.  /* #neg=1.819 #pos=763 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,38e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.0930206277353082;  // std dev = 23,222, 2.602,000 (wgt'ed) examples reached here.  /* #neg=1.839 #pos=763 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,56e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.08439479105986468;  // std dev = 23,112, 2.544,000 (wgt'ed) examples reached here.  /* #neg=1.781 #pos=763 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694903;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.06287300651141321;  // std dev = 23,226, 2.604,000 (wgt'ed) examples reached here.  /* #neg=1.841 #pos=763 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253523;  // std dev = 2,38e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.06059288892464367;  // std dev = 23,077, 2.526,000 (wgt'ed) examples reached here.  /* #neg=1.763 #pos=763 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.04288483507564506;  // std dev = 23,183, 2.581,000 (wgt'ed) examples reached here.  /* #neg=1.818 #pos=763 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.03344545746653146;  // std dev = 23,203, 2.592,000 (wgt'ed) examples reached here.  /* #neg=1.829 #pos=763 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 6,32e-08, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.031441201615704774;  // std dev = 23,129, 2.553,000 (wgt'ed) examples reached here.  /* #neg=1.790 #pos=763 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.32837
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 6.067 seconds
Total inference time: 5.07 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.579846
   AUC PR    = 0.178666
   CLL	      = -0.329411
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.159692
   F1        = 0.275404


Total scoring time: 6.391 seconds
Parameter learned model CLL: -0.329411


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.114, 1782, 763], 'true': [8.92e-07, 0, 145]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.002, 1726, 763], 'true': [0.0, 0, 145]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.185, 1819, 763], 'true': [5.13e-07, 0, 145]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.222, 1839, 763], 'true': [4.38e-07, 0, 145]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.112, 1781, 763], 'true': [2.56e-07, 0, 145]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.226, 1841, 763], 'true': [0.0, 0, 145]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.077, 1763, 763], 'true': [2.38e-07, 0, 145]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.183, 1818, 763], 'true': [0.0, 0, 145]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.203, 1829, 763], 'true': [0.0, 0, 145]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.129, 1790, 763], 'true': [6.32e-08, 0, 145]}]]
[{'': [5.488330096905601e-15, 0.20992137594036792]}, {'': [-2.2541355755148008e-15, 0.2125766389389504]}, {'': [1.8131090498706005e-15, 0.2081827596282704]}, {'': [1.3230795769326004e-15, 0.20724863686123848]}, {'': [4.532772624676501e-16, 0.20996854727859474]}, {'': [-1.4700884188140004e-16, 0.20715545149727949]}, {'': [3.920235783504001e-16, 0.2108191984673664]}, {'': [-2.9401768376280007e-16, 0.20822957261818317]}, {'': [-3.675221047035001e-17, 0.2077151860901622]}, {'': [2.7564157852762507e-17, 0.20954434227820704]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 8,92e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6581489350995123;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.04963829680164004;  // std dev = 2,698, 47,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else return 0.1746626965673972;  // std dev = 0,465, 2.180,000 (wgt'ed) examples reached here.  /* #neg=1.490 #pos=690 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.03362595667537975;  // std dev = 4,722, 231,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=25 */
%   | | | else return -0.08388005040773408;  // std dev = 1,941, 69,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06723984419042099;  // std dev = 4,265, 110,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109561;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1625778760376176;  // std dev = 0,469, 2.173,000 (wgt'ed) examples reached here.  /* #neg=1.462 #pos=711 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.02983133872834941;  // std dev = 4,721, 233,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=25 */
%   | | | else return 0.05825315948592482;  // std dev = 1,800, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.10532068959799691;  // std dev = 4,138, 90,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,13e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13937000594689355;  // std dev = 0,469, 2.171,000 (wgt'ed) examples reached here.  /* #neg=1.460 #pos=711 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.011803402645867756;  // std dev = 4,684, 204,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=25 */
%   | | | else return -0.06456960554600906;  // std dev = 1,918, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.09718220568371518;  // std dev = 4,122, 88,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,38e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11894481623898383;  // std dev = 0,469, 2.159,000 (wgt'ed) examples reached here.  /* #neg=1.448 #pos=711 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.013316963683381934;  // std dev = 4,691, 209,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=25 */
%   | | | else return -0.07422473549631661;  // std dev = 1,937, 77,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04319779753482034;  // std dev = 4,232, 104,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=23 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,56e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.45741945508596255;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.09267033723416869;  // std dev = 0,467, 2.192,000 (wgt'ed) examples reached here.  /* #neg=1.483 #pos=709 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, H), haswordvenue(B, H) )
%   | | | then return -0.051804907598602346;  // std dev = 3,039, 132,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=10 */
%   | | | else return -0.011897079123324182;  // std dev = 4,086, 162,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=19 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.21008465047190095;  // std dev = 0,742, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.011835529057962346;  // std dev = 4,201, 114,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694903;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08423977209442543;  // std dev = 0,470, 2.142,000 (wgt'ed) examples reached here.  /* #neg=1.431 #pos=711 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07871750408372714;  // std dev = 2,151, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.005840005070058807;  // std dev = 1,336, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.041805000620736055;  // std dev = 4,486, 263,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=22 */
%   | | | else return 0.027503016599849765;  // std dev = 4,150, 106,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253523;  // std dev = 2,38e-07, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05792859463216078;  // std dev = 0,466, 2.210,000 (wgt'ed) examples reached here.  /* #neg=1.499 #pos=711 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.41118646962564814;  // std dev = 1,165, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04162365686895704;  // std dev = 2,045, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.027545693305021657;  // std dev = 4,460, 237,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=22 */
%   | | | else return 0.019863456768756192;  // std dev = 4,164, 106,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0565019397217818;  // std dev = 0,470, 2.144,000 (wgt'ed) examples reached here.  /* #neg=1.433 #pos=711 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.008008933321288108;  // std dev = 4,660, 221,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=25 */
%   | | | else return 0.06305999630710177;  // std dev = 1,819, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.038772436966123154;  // std dev = 4,183, 98,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=23 */
%   | | | else return -0.10045928005279221;  // std dev = 0,025, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6747877216928476;  // std dev = 5,395, 693,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=663 */
%   | | | else return -0.24634060769828045;  // std dev = 6,101, 1.593,000 (wgt'ed) examples reached here.  /* #neg=1.558 #pos=35 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.19548377072991957;  // std dev = 2,778, 142,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=8 */
%   | | | else return 0.11376152452077867;  // std dev = 3,514, 70,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.6965097443764124;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6227258182105537;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.07358652583292025;  // std dev = 4,073, 83,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | | else return -0.0962774459541897;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 6,32e-08, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5290486656012795;  // std dev = 5,118, 691,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=665 */
%   | | | else return -0.21034965468611896;  // std dev = 5,964, 1.478,000 (wgt'ed) examples reached here.  /* #neg=1.441 #pos=37 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.18054519972143343;  // std dev = 2,556, 111,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=7 */
%   | | | else return 0.03262651044004214;  // std dev = 4,031, 126,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.4116448957767739;  // std dev = 0,355, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.157266359790858;  // std dev = 1,855, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.0043655337015533;  // std dev = 2,894, 116,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=12 */


Results
   AUC ROC   = 0.979755
   AUC PR    = 0.596994
   CLL	      = -0.23074
   Precision = 0.462525 at threshold = 0.5
   Recall    = 0.917001
   F1        = 0.614901


Total learning time: 691.106 seconds
Total inference time: 55.233 seconds
AUC ROC: 0.979755


Results scoring model
   AUC ROC   = 0.970507
   AUC PR    = 0.553355
   CLL	      = -0.225472
   Precision = 0.415401 at threshold = 0.5
   Recall    = 0.873348
   F1        = 0.56301


Total scoring time: 310.297 seconds
Refined model CLL: -0.225472


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.979755
   AUC PR    = 0.596994
   CLL	      = -0.23074
   Precision = 0.462525 at threshold = 0.5
   Recall    = 0.917001
   F1        = 0.614901


Total learning time: 1013.861 seconds
Total inference time: 55.233 seconds
AUC ROC: 0.979755
Total revision time: 1013.861
Best scored revision CLL: -0.225472


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:22:28
{'AUC PR': 0.596994, 'AUC ROC': 0.979755, 'Precision': [0.462525, 0.5], 'parameter_0.4': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.07, 'CLL': -0.32837, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 6.067}, 'Inference time': 55.233, 'CLL': -0.23074, 'Recall': 0.917001, 'F1': 0.614901, 'Learning time': 1013.861}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.524815601766179;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.10259337954395681;  // std dev = 2,883, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | else return 0.21962650765887404;  // std dev = 0,480, 2.274,000 (wgt'ed) examples reached here.  /* #neg=1.452 #pos=822 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordauthor(I, K), haswordtitle(L, K) )
%   | | | then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.05018439823382114;  // std dev = 0,289, 240,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=22 */
%   | | else return 0.07174116810922072;  // std dev = 0,410, 103,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.629257407097252;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.06280508038051011;  // std dev = 2,499, 65,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
%   | | else return 0.1972456883716972;  // std dev = 0,482, 2.249,000 (wgt'ed) examples reached here.  /* #neg=1.421 #pos=828 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return -0.006526485527909131;  // std dev = 0,339, 183,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=25 */
%   | | else return -0.06881736675663809;  // std dev = 0,252, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.10072491913221707;  // std dev = 3,949, 83,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
%   | | | else return 0.031007752064498403;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return -0.15698054949769133;  // std dev = 0,060, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.7119536671245885;  // std dev = 0,117, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.5993227560582612;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.05736052861745549;  // std dev = 2,506, 66,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=7 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.4127703718219406;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.12315403297189942;  // std dev = 2,764, 36,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else return 0.1686882718212459;  // std dev = 0,483, 2.175,000 (wgt'ed) examples reached here.  /* #neg=1.372 #pos=803 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then return -0.030398560799501862;  // std dev = 0,305, 271,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=29 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.10182019360973177;  // std dev = 0,442, 86,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | | else return -0.12426229509476634;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13923809593487507;  // std dev = 0,479, 2.317,000 (wgt'ed) examples reached here.  /* #neg=1.461 #pos=856 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.1967586599771193;  // std dev = 1,117, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.03493078571816067;  // std dev = 4,490, 226,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=23 */
%   | | | else return 0.02197009705033471;  // std dev = 1,850, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07398088838977555;  // std dev = 3,941, 83,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
%   | | | else return 0.013197001156272701;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return -0.11820891096061704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6003734675577669;  // std dev = 0,299, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.3714665935995971;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, D), haswordtitle(H, D) )
%   | | | then return 0.41680167500146403;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.02620349588462993;  // std dev = 3,203, 60,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else return 0.10643524077682959;  // std dev = 0,479, 2.279,000 (wgt'ed) examples reached here.  /* #neg=1.457 #pos=822 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.03529457665597652;  // std dev = 0,288, 306,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=29 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.033507515606058066;  // std dev = 4,018, 94,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | | else return 0.06989281651445492;  // std dev = 1,241, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.10643252934117785;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3435059741975381;  // std dev = 0,060, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07793763600990714;  // std dev = 2,975, 51,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return -0.20932061272815353;  // std dev = 0,923, 28,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | else return 0.09001135649774358;  // std dev = 0,480, 2.264,000 (wgt'ed) examples reached here.  /* #neg=1.436 #pos=828 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return 0.5186255371231514;  // std dev = 0,837, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordauthor(J, L), haswordtitle(M, L) )
%   | | | then return 0.1168131320382623;  // std dev = 1,865, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.13877676879215942;  // std dev = 0,061, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | then return -0.03483677706297157;  // std dev = 0,284, 248,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=22 */
%   | | else return 0.016983264980542336;  // std dev = 0,402, 107,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0787638605171407;  // std dev = 0,478, 2.296,000 (wgt'ed) examples reached here.  /* #neg=1.440 #pos=856 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6860591082816525;  // std dev = 1,995, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | | else return -0.12347953953989683;  // std dev = 0,212, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.1136022499976227;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.026005212382652212;  // std dev = 1,853, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return -0.013731969822307248;  // std dev = 1,809, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return -0.19761909080971754;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.04239689429551121;  // std dev = 3,759, 79,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | | | else return -0.10620175152272901;  // std dev = 0,036, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.07453980723621126;  // std dev = 2,784, 53,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | | else return -0.0702092558993897;  // std dev = 1,817, 26,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else return 0.5069880799581371;  // std dev = 0,492, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.05803546345168488;  // std dev = 0,480, 2.240,000 (wgt'ed) examples reached here.  /* #neg=1.418 #pos=822 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then return 0.3015398795766424;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordauthor(H, J), haswordtitle(K, J) )
%   | | | then return 0.09476754931645687;  // std dev = 1,574, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.1161763422853244;  // std dev = 0,079, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.03296702756575749;  // std dev = 0,255, 258,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=22 */
%   | | else return 0.007543811144113788;  // std dev = 0,401, 108,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04610527445203029;  // std dev = 0,478, 2.312,000 (wgt'ed) examples reached here.  /* #neg=1.456 #pos=856 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.46719043941180693;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.049411988215050676;  // std dev = 1,596, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.10005729452877679;  // std dev = 0,070, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.03315846626294197;  // std dev = 3,640, 228,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=18 */
%   | | | else return 0.05518423173100829;  // std dev = 1,818, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.013884890243166815;  // std dev = 4,150, 102,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=22 */
%   | | | else return -0.09453255468954927;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6181217955044024;  // std dev = 0,207, 821,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=787 */
%   | | else return -0.2811385969893242;  // std dev = 0,164, 1.495,000 (wgt'ed) examples reached here.  /* #neg=1.460 #pos=35 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.22511703256848345;  // std dev = 0,244, 132,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=8 */
%   | | else return 0.13861685165269294;  // std dev = 0,423, 92,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.39618456442454253;  // std dev = 0,423, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else return 0.5222091013536673;  // std dev = 0,315, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.05364451245982148;  // std dev = 3,879, 79,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | | | else return -0.04720256189463919;  // std dev = 1,305, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return -0.09515675886003964;  // std dev = 0,052, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.955373
   AUC PR    = 0.222905
   CLL	      = -0.315055
   Precision = 0.2 at threshold = 0.5
   Recall    = 0.021419
   F1        = 0.038694


Total learning time: 574.732 seconds
Total inference time: 41.629 seconds
AUC ROC: 0.955373


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 04:32:45
{'AUC PR': 0.222905, 'AUC ROC': 0.955373, 'Precision': [0.2, 0.5], 'Inference time': 41.629, 'CLL': -0.315055, 'Recall': 0.021419, 'Learning time': 574.732, 'F1': 0.038694}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.41814893509951234;  // std dev = 2,482, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.09727936988212106;  // std dev = 2,893, 46,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.6081489350995123;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.003982268432845658;  // std dev = 2,445, 48,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | else return 0.22381378027254917;  // std dev = 0,482, 2.196,000 (wgt'ed) examples reached here.  /* #neg=1.393 #pos=803 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, B) )
%   | | then if ( samebib(M, N), venue(N, A) )
%   | | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.1418510649004881;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( haswordtitle(L, P), haswordauthor(Q, P) )
%   | | | then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.02063894368836653;  // std dev = 1,875, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | else if ( haswordvenue(B, R), haswordtitle(S, R) )
%   | | then if ( title(T, S), venue(T, A) )
%   | | | then return 0.10233498161113995;  // std dev = 3,984, 86,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   | | | else return 0.001006077956655051;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.554389
   AUC PR    = 0.018459
   CLL	      = -0.201889
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 59.77 seconds
Total inference time: 7.503 seconds
AUC ROC: 0.554389


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 04:33:53
{'AUC PR': 0.018459, 'AUC ROC': 0.554389, 'Precision': [nan, 0.5], 'Inference time': 7.503, 'CLL': -0.201889, 'Recall': 0.0, 'Learning time': 59.77, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1,08e-06, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else return 0.15836091178207212;  // std dev = 28,158, 3.774,000 (wgt'ed) examples reached here.  /* #neg=2.641 #pos=1.133 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else return 0.13250290228383346;  // std dev = 28,268, 3.844,000 (wgt'ed) examples reached here.  /* #neg=2.711 #pos=1.133 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,59e-07, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else return 0.11215261606286535;  // std dev = 28,298, 3.864,000 (wgt'ed) examples reached here.  /* #neg=2.731 #pos=1.133 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583106;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else return 0.09251587860574315;  // std dev = 28,346, 3.896,000 (wgt'ed) examples reached here.  /* #neg=2.763 #pos=1.133 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3,21e-07, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else return 0.08624210355889085;  // std dev = 28,169, 3.781,000 (wgt'ed) examples reached here.  /* #neg=2.648 #pos=1.133 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2,86e-07, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else return 0.07332153700218749;  // std dev = 28,130, 3.757,000 (wgt'ed) examples reached here.  /* #neg=2.624 #pos=1.133 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else return 0.051419417720894464;  // std dev = 28,306, 3.869,000 (wgt'ed) examples reached here.  /* #neg=2.736 #pos=1.133 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527755;  // std dev = 6,66e-08, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else return 0.04547898619620259;  // std dev = 28,234, 3.822,000 (wgt'ed) examples reached here.  /* #neg=2.689 #pos=1.133 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else return 0.035136801996507004;  // std dev = 28,268, 3.844,000 (wgt'ed) examples reached here.  /* #neg=2.711 #pos=1.133 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,88e-08, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else return 0.02664898163457625;  // std dev = 28,301, 3.866,000 (wgt'ed) examples reached here.  /* #neg=2.733 #pos=1.133 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.32576
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 8.536 seconds
Total inference time: 4.97 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.584068
   AUC PR    = 0.187249
   CLL	      = -0.326691
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168135
   F1        = 0.287869


Total scoring time: 7.986 seconds
Parameter learned model CLL: -0.326691


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.158, 2641, 1133], 'true': [1.08e-06, 0, 229]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.268, 2711, 1133], 'true': [0.0, 0, 229]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.298, 2731, 1133], 'true': [5.59e-07, 0, 229]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.346, 2763, 1133], 'true': [0.0, 0, 229]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.169, 2648, 1133], 'true': [3.21e-07, 0, 229]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.13, 2624, 1133], 'true': [2.86e-07, 0, 229]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.306, 2736, 1133], 'true': [2.92e-07, 0, 229]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.234, 2689, 1133], 'true': [6.66e-08, 0, 229]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.268, 2711, 1133], 'true': [0.0, 0, 229]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.301, 2733, 1133], 'true': [9.88e-08, 0, 229]}]]
[{'': [5.088602998456613e-15, 0.21008474573893798]}, {'': [-4.095704852416298e-15, 0.20787040846932714]}, {'': [1.3652349508054327e-15, 0.2072418089794024]}, {'': [-6.205613412751966e-17, 0.2062399992199518]}, {'': [4.499069724245175e-16, 0.20986235203075557]}, {'': [3.568227712332381e-16, 0.21062569460438216]}, {'': [3.72336804765118e-16, 0.207084952857427]}, {'': [1.9392541914849895e-17, 0.20856399960461738]}, {'': [-1.5514033531879916e-16, 0.20787040846931415]}, {'': [4.266359221266977e-17, 0.20717905231354336]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1,08e-06, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18234844248866977;  // std dev = 0,468, 3.248,000 (wgt'ed) examples reached here.  /* #neg=2.195 #pos=1.053 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.011277816492844907;  // std dev = 5,970, 314,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=41 */
%   | | | else return -0.06968611644687943;  // std dev = 2,548, 97,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07006946490083579;  // std dev = 5,022, 151,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14917512051713058;  // std dev = 0,464, 3.346,000 (wgt'ed) examples reached here.  /* #neg=2.293 #pos=1.053 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.029796837765544044;  // std dev = 5,962, 364,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=40 */
%   | | | else return 0.06624931146430635;  // std dev = 2,528, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.06709060954623047;  // std dev = 5,003, 147,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=32 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,59e-07, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12528860951340728;  // std dev = 0,463, 3.370,000 (wgt'ed) examples reached here.  /* #neg=2.317 #pos=1.053 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.8555901238841795;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07101141126918792;  // std dev = 2,673, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0383944648468452;  // std dev = 5,767, 377,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=37 */
%   | | | else return 0.055526519135945016;  // std dev = 4,927, 146,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=31 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583106;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6191006462347317;  // std dev = 1,818, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return -0.08476408806478532;  // std dev = 3,107, 90,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=11 */
%   | | else return 0.11150684039793625;  // std dev = 0,466, 3.212,000 (wgt'ed) examples reached here.  /* #neg=2.189 #pos=1.023 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.3367991544335733;  // std dev = 2,250, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return -0.03076965010818466;  // std dev = 1,154, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.033692240290555966;  // std dev = 5,766, 376,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=37 */
%   | | | else return 0.011323659567848794;  // std dev = 5,038, 178,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=31 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3,21e-07, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.096572161821936;  // std dev = 0,466, 3.267,000 (wgt'ed) examples reached here.  /* #neg=2.214 #pos=1.053 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4351723004162089;  // std dev = 0,904, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.029653403205552955;  // std dev = 2,636, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0237158099306592;  // std dev = 5,748, 353,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=37 */
%   | | | else return 0.019747451455580663;  // std dev = 5,010, 167,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=31 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2,86e-07, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.13957347722005406;  // std dev = 4,586, 89,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=34 */
%   | | | else return 0.7653525541382041;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06447536454075792;  // std dev = 0,461, 3.299,000 (wgt'ed) examples reached here.  /* #neg=2.284 #pos=1.015 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.597150429977879;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06637115029122503;  // std dev = 2,566, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.025358825179879595;  // std dev = 5,761, 369,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=37 */
%   | | | else return 0.03695482204822276;  // std dev = 4,947, 151,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=31 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06784996798331792;  // std dev = 0,467, 3.254,000 (wgt'ed) examples reached here.  /* #neg=2.201 #pos=1.053 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.00507043821024018;  // std dev = 5,814, 290,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=41 */
%   | | | else return -0.05483345658485482;  // std dev = 2,544, 103,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.046138577340227784;  // std dev = 4,930, 141,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=32 */
%   | | | else return -0.12535382118670238;  // std dev = 0,001, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527755;  // std dev = 6,66e-08, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.053416803197591706;  // std dev = 0,466, 3.265,000 (wgt'ed) examples reached here.  /* #neg=2.212 #pos=1.053 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.001507190233821045;  // std dev = 5,860, 302,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=41 */
%   | | | else return -0.046671570926715984;  // std dev = 2,545, 97,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.021478584458313844;  // std dev = 5,017, 151,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=32 */
%   | | | else return -0.1173640756709378;  // std dev = 0,058, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3686813922689304;  // std dev = 2,135, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return -0.12347275671546733;  // std dev = 3,077, 90,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=11 */
%   | | else return 0.04941959628922724;  // std dev = 0,470, 3.109,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=1.023 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.17296885596665176;  // std dev = 2,383, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.04607023106960976;  // std dev = 0,838, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.008035010391973057;  // std dev = 6,494, 349,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=50 */
%   | | | else return -0.03149748555452606;  // std dev = 4,037, 202,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,88e-08, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.029511080300073537;  // std dev = 0,464, 3.305,000 (wgt'ed) examples reached here.  /* #neg=2.252 #pos=1.053 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.42437847622931935;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.026206593582471256;  // std dev = 2,330, 36,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0012867815003425747;  // std dev = 5,963, 282,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=43 */
%   | | | else return -0.018014849306654968;  // std dev = 4,685, 228,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=27 */


Results
   AUC ROC   = 0.602705
   AUC PR    = 0.171132
   CLL	      = -0.341446
   Precision = 0.642458 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.24838


Total learning time: 162.006 seconds
Total inference time: 12.04 seconds
AUC ROC: 0.602705


Results scoring model
   AUC ROC   = 0.647124
   AUC PR    = 0.200808
   CLL	      = -0.322368
   Precision = 0.874525 at threshold = 0.5
   Recall    = 0.168869
   F1        = 0.283077


Total scoring time: 39.003 seconds
Refined model CLL: -0.322368


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602705
   AUC PR    = 0.171132
   CLL	      = -0.341446
   Precision = 0.642458 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.24838


Total learning time: 217.531 seconds
Total inference time: 12.04 seconds
AUC ROC: 0.602705
Total revision time: 217.531
Best scored revision CLL: -0.322368


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:37:49
{'AUC PR': 0.171132, 'AUC ROC': 0.602705, 'Precision': [0.642458, 0.5], 'Inference time': 12.04, 'parameter_0.6': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 4.97, 'CLL': -0.32576, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 8.536}, 'CLL': -0.341446, 'Recall': 0.153949, 'F1': 0.24838, 'Learning time': 217.531}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22204334327435818;  // std dev = 0,481, 3.523,000 (wgt'ed) examples reached here.  /* #neg=2.241 #pos=1.282 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return -0.0313538273314274;  // std dev = 5,965, 362,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=40 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.058148935099512376;  // std dev = 0,400, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.100084418970479;  // std dev = 4,769, 124,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=30 */
%   | | | else return 0.011995088945666036;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2023492500588562;  // std dev = 0,484, 3.433,000 (wgt'ed) examples reached here.  /* #neg=2.151 #pos=1.282 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then return -0.028947563971151828;  // std dev = 0,312, 367,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=40 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.050922032513554226;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return -0.14907796748644583;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06135104712164755;  // std dev = 4,850, 139,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=30 */
%   | | | else return -0.04807940619653591;  // std dev = 1,345, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15718717949383224;  // std dev = 0,480, 3.572,000 (wgt'ed) examples reached here.  /* #neg=2.290 #pos=1.282 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.45973356276383565;  // std dev = 1,085, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.1862560330763145;  // std dev = 2,474, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.14096835242799444;  // std dev = 0,050, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.05060274251378274;  // std dev = 5,153, 346,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=29 */
%   | | | else return 0.05136028152897015;  // std dev = 2,516, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.056056999240486516;  // std dev = 4,926, 143,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=31 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13588652691115705;  // std dev = 0,481, 3.521,000 (wgt'ed) examples reached here.  /* #neg=2.239 #pos=1.282 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return -0.006153598651686022;  // std dev = 0,328, 327,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=41 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.12544004660654223;  // std dev = 0,036, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.029026501250594645;  // std dev = 2,461, 53,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.06097858061555416;  // std dev = 4,787, 130,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=30 */
%   | | | else return -0.06129133690853104;  // std dev = 1,368, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.1074724132381312;  // std dev = 0,039, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6219731630656358;  // std dev = 0,331, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.31840173449420744;  // std dev = 2,928, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | | | else return -0.03384875474258343;  // std dev = 3,535, 73,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | else return 0.10438540559535868;  // std dev = 0,479, 3.447,000 (wgt'ed) examples reached here.  /* #neg=2.215 #pos=1.232 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.383385042821723;  // std dev = 1,106, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordauthor(I, K), haswordtitle(L, K) )
%   | | | then return 0.16854564289743276;  // std dev = 2,480, 27,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.12507574141130798;  // std dev = 0,067, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.027236309202070076;  // std dev = 0,302, 361,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=37 */
%   | | else return 0.026718582430021603;  // std dev = 0,394, 158,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=31 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.715922214451238;  // std dev = 0,153, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.2732593569450755;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.12401838715225655;  // std dev = 3,470, 101,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=16 */
%   | | | else return 0.46541272610600176;  // std dev = 0,939, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.08768610053482978;  // std dev = 0,480, 3.437,000 (wgt'ed) examples reached here.  /* #neg=2.197 #pos=1.240 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | then return 0.1872132764740477;  // std dev = 0,475, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else return 0.04704019514371905;  // std dev = 0,325, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return -0.003999187637671626;  // std dev = 0,354, 333,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=50 */
%   | | else return -0.03754530939395267;  // std dev = 0,278, 212,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=18 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.6078509874284257;  // std dev = 0,188, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.047671811137183426;  // std dev = 4,759, 109,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
%   | | else return 0.6007338653333074;  // std dev = 0,118, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.07636262429219723;  // std dev = 0,480, 3.357,000 (wgt'ed) examples reached here.  /* #neg=2.125 #pos=1.232 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.3077978012095571;  // std dev = 1,064, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return -0.26200547587783235;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1272955948712741;  // std dev = 2,423, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.02514573489073308;  // std dev = 0,297, 374,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=37 */
%   | | else return 0.01957002689907159;  // std dev = 0,394, 159,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=31 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6520934190124219;  // std dev = 0,204, 1.226,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1.174 */
%   | | else return -0.2634989179201701;  // std dev = 0,152, 2.462,000 (wgt'ed) examples reached here.  /* #neg=2.411 #pos=51 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.17844366830578937;  // std dev = 0,282, 205,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=18 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.33477345386759766;  // std dev = 3,925, 67,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=43 */
%   | | | else return 0.0018899364100586772;  // std dev = 2,653, 61,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6790731708131934;  // std dev = 1,912, 46,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.16486231120685615;  // std dev = 1,235, 86,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=2 */
%   | | else return -0.05439130475322216;  // std dev = 0,329, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else return 0.4017196815752466;  // std dev = 0,366, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.5084940375206338;  // std dev = 0,188, 1.217,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1.174 */
%   | | else return -0.21398328599360056;  // std dev = 0,150, 2.398,000 (wgt'ed) examples reached here.  /* #neg=2.347 #pos=51 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.14320640190892903;  // std dev = 0,292, 188,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=18 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3464022935696094;  // std dev = 3,415, 59,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=43 */
%   | | | else return 0.011516195554016838;  // std dev = 2,634, 57,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.47088633264976126;  // std dev = 0,272, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.024883003698253407;  // std dev = 4,099, 133,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=30 */
%   | | | else return -0.039662528940718755;  // std dev = 1,352, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else return -0.14172070539702844;  // std dev = 0,112, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then return 0.017448546128979548;  // std dev = 0,314, 3.506,000 (wgt'ed) examples reached here.  /* #neg=2.281 #pos=1.225 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.11157401439014203;  // std dev = 0,297, 179,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=18 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.13040433502008225;  // std dev = 4,162, 72,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | | | else return 0.0032611464420388182;  // std dev = 2,640, 61,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.5239971733221349;  // std dev = 1,930, 45,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14880454422581338;  // std dev = 1,149, 85,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=2 */
%   | | else if ( title(K, H), venue(K, B) )
%   | | | then return -0.07784548731020408;  // std dev = 0,709, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.11910666039769328;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.2776947798927431;  // std dev = 0,266, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */


Results
   AUC ROC   = 0.979581
   AUC PR    = 0.493188
   CLL	      = -0.245282
   Precision = 0.465054 at threshold = 0.5
   Recall    = 0.926372
   F1        = 0.619239


Total learning time: 1814.382 seconds
Total inference time: 66.854 seconds
AUC ROC: 0.979581


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 05:09:11
{'AUC PR': 0.493188, 'AUC ROC': 0.979581, 'Precision': [0.465054, 0.5], 'Inference time': 66.854, 'CLL': -0.245282, 'Recall': 0.926372, 'Learning time': 1814.382, 'F1': 0.619239}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22675158029789708;  // std dev = 0,482, 3.478,000 (wgt'ed) examples reached here.  /* #neg=2.196 #pos=1.282 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7470378239884009;  // std dev = 2,108, 45,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | | | else return -0.13796001431683064;  // std dev = 0,998, 257,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0.007085105312278284;  // std dev = 2,441, 47,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.11238622323510442;  // std dev = 4,730, 118,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=30 */
%   | | | else return -0.05489454316135737;  // std dev = 1,351, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.54869
   AUC PR    = 0.014321
   CLL	      = -0.20187
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 73.034 seconds
Total inference time: 5.057 seconds
AUC ROC: 0.54869


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 05:10:29
{'AUC PR': 0.014321, 'AUC ROC': 0.54869, 'Precision': [nan, 0.5], 'Inference time': 5.057, 'CLL': -0.20187, 'Recall': 0.0, 'Learning time': 73.034, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,07e-06, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.15256320973100446;  // std dev = 32,727, 5.156,000 (wgt'ed) examples reached here.  /* #neg=3.638 #pos=1.518 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109577;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.12907064010394423;  // std dev = 32,817, 5.225,000 (wgt'ed) examples reached here.  /* #neg=3.707 #pos=1.518 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.113631095220205;  // std dev = 32,752, 5.175,000 (wgt'ed) examples reached here.  /* #neg=3.657 #pos=1.518 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583114;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.10216541941115613;  // std dev = 32,615, 5.073,000 (wgt'ed) examples reached here.  /* #neg=3.555 #pos=1.518 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601508;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.08194301709680211;  // std dev = 32,698, 5.134,000 (wgt'ed) examples reached here.  /* #neg=3.616 #pos=1.518 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3,58e-07, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.06270011962197058;  // std dev = 32,817, 5.225,000 (wgt'ed) examples reached here.  /* #neg=3.707 #pos=1.518 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253476;  // std dev = 2,83e-07, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.051648965723185836;  // std dev = 32,814, 5.222,000 (wgt'ed) examples reached here.  /* #neg=3.704 #pos=1.518 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527692;  // std dev = 1,74e-07, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.045449584896457625;  // std dev = 32,737, 5.163,000 (wgt'ed) examples reached here.  /* #neg=3.645 #pos=1.518 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.03991331473982682;  // std dev = 32,666, 5.110,000 (wgt'ed) examples reached here.  /* #neg=3.592 #pos=1.518 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080116;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.03521002093985979;  // std dev = 32,596, 5.059,000 (wgt'ed) examples reached here.  /* #neg=3.541 #pos=1.518 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.325895
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 13.533 seconds
Total inference time: 5.788 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.582048
   AUC PR    = 0.183119
   CLL	      = -0.326884
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164097
   F1        = 0.28193


Total scoring time: 9.291 seconds
Parameter learned model CLL: -0.326884


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.727, 3638, 1518], 'true': [1.07e-06, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.817, 3707, 1518], 'true': [0.0, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.752, 3657, 1518], 'true': [0.0, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.615, 3555, 1518], 'true': [0.0, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.698, 3616, 1518], 'true': [0.0, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.817, 3707, 1518], 'true': [3.58e-07, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.814, 3704, 1518], 'true': [2.83e-07, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.737, 3645, 1518], 'true': [1.74e-07, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.666, 3592, 1518], 'true': [0.0, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.596, 3541, 1518], 'true': [0.0, 0, 298]}]]
[{'': [3.814994554416645e-15, 0.20773450952465009]}, {'': [-4.768743193020807e-15, 0.2061207756233213]}, {'': [-4.7687431930208065e-17, 0.2072888888888624]}, {'': [-7.62998910883329e-16, 0.2096918986347847]}, {'': [-2.742027335986964e-16, 0.20825165653965957]}, {'': [4.291868873718726e-16, 0.20612077562330497]}, {'': [2.682418046074204e-16, 0.20619067225968538]}, {'': [1.0133579285169214e-16, 0.20757022405992925]}, {'': [-2.0863251469466028e-16, 0.208817215007617]}, {'': [-1.430622957906242e-16, 0.21002371658627242]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,07e-06, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17760286001418293;  // std dev = 0,466, 4.395,000 (wgt'ed) examples reached here.  /* #neg=2.991 #pos=1.404 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.030739953789376526;  // std dev = 6,992, 495,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=55 */
%   | | | else return 0.05259337954395682;  // std dev = 3,358, 72,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0937510293403495;  // std dev = 5,865, 191,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109577;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1602759920985065;  // std dev = 0,468, 4.318,000 (wgt'ed) examples reached here.  /* #neg=2.914 #pos=1.404 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.02836970809470605;  // std dev = 6,997, 501,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=55 */
%   | | | else return 0.07037540236624418;  // std dev = 3,307, 64,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.06166013007044657;  // std dev = 5,942, 209,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1322585275485194;  // std dev = 0,467, 4.382,000 (wgt'ed) examples reached here.  /* #neg=2.978 #pos=1.404 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.0067642171165937575;  // std dev = 6,982, 437,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=56 */
%   | | | else return -0.04968262954376603;  // std dev = 3,396, 133,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.19967249020888664;  // std dev = 2,985, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.026159584415855138;  // std dev = 5,012, 167,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=31 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583114;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10860876526297898;  // std dev = 0,466, 4.418,000 (wgt'ed) examples reached here.  /* #neg=3.014 #pos=1.404 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.2186679303468795;  // std dev = 2,997, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return -0.012844688504689205;  // std dev = 1,337, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.01287857719574927;  // std dev = 6,924, 449,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=55 */
%   | | | else return 0.061533522312019556;  // std dev = 5,719, 188,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=43 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601508;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09043504709795393;  // std dev = 0,466, 4.413,000 (wgt'ed) examples reached here.  /* #neg=3.009 #pos=1.404 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.11445553772796435;  // std dev = 1,206, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07344517851102833;  // std dev = 3,173, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1327990175003176;  // std dev = 3,146, 48,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return -0.009278347639742203;  // std dev = 8,470, 629,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=84 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3,58e-07, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07320642381055326;  // std dev = 0,465, 4.426,000 (wgt'ed) examples reached here.  /* #neg=3.022 #pos=1.404 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.81077991666749;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06193632862585091;  // std dev = 3,006, 51,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.028397272802494506;  // std dev = 6,997, 523,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=55 */
%   | | | else return 0.03928193870965168;  // std dev = 5,758, 198,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=43 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253476;  // std dev = 2,83e-07, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.061397450726301483;  // std dev = 0,466, 4.399,000 (wgt'ed) examples reached here.  /* #neg=2.995 #pos=1.404 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.047910027594448575;  // std dev = 6,717, 261,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=59 */
%   | | | else return -0.04930452384768418;  // std dev = 3,712, 175,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.13726866650126676;  // std dev = 3,011, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return -0.041608327508718915;  // std dev = 4,872, 300,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=26 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527692;  // std dev = 1,74e-07, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05137479533251533;  // std dev = 0,467, 4.373,000 (wgt'ed) examples reached here.  /* #neg=2.969 #pos=1.404 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1411860403061618;  // std dev = 2,928, 38,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return -0.08019370939440675;  // std dev = 1,166, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0068766423161124215;  // std dev = 7,664, 427,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=72 */
%   | | | else return -0.03239769510284087;  // std dev = 4,861, 283,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=26 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03945756083198412;  // std dev = 0,466, 4.396,000 (wgt'ed) examples reached here.  /* #neg=2.992 #pos=1.404 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6293442421506757;  // std dev = 0,155, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.026823902928551167;  // std dev = 2,947, 49,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.01405186957971863;  // std dev = 7,616, 411,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=72 */
%   | | | else return -0.025203663175367833;  // std dev = 4,849, 274,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=26 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080116;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03466466083961186;  // std dev = 0,467, 4.352,000 (wgt'ed) examples reached here.  /* #neg=2.948 #pos=1.404 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24502399368873323;  // std dev = 1,475, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.06042105836227947;  // std dev = 2,785, 44,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.026822520544001218;  // std dev = 3,036, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.010783760404274754;  // std dev = 8,477, 656,000 (wgt'ed) examples reached here.  /* #neg=572 #pos=84 */


Results
   AUC ROC   = 0.600852
   AUC PR    = 0.171058
   CLL	      = -0.33897
   Precision = 0.642458 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.24838


Total learning time: 170.97899999999998 seconds
Total inference time: 8.774 seconds
AUC ROC: 0.600852


Results scoring model
   AUC ROC   = 0.628888
   AUC PR    = 0.186696
   CLL	      = -0.325201
   Precision = 0.892857 at threshold = 0.5
   Recall    = 0.165198
   F1        = 0.27881


Total scoring time: 31.38 seconds
Refined model CLL: -0.325201


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.600852
   AUC PR    = 0.171058
   CLL	      = -0.33897
   Precision = 0.642458 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.24838


Total learning time: 225.183 seconds
Total inference time: 8.774 seconds
AUC ROC: 0.600852
Total revision time: 225.183
Best scored revision CLL: -0.325201


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 05:14:31
{'AUC PR': 0.171058, 'AUC ROC': 0.600852, 'Precision': [0.642458, 0.5], 'Inference time': 8.774, 'parameter_0.8': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.788, 'CLL': -0.325895, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 13.533}, 'CLL': -0.33897, 'Recall': 0.153949, 'F1': 0.24838, 'Learning time': 225.183}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8055173561521439;  // std dev = 0,223, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.37814893509951125;  // std dev = 3,533, 50,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | | else return 0.08167834686421822;  // std dev = 3,841, 85,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1513820178062781;  // std dev = 5,250, 133,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=39 */
%   | | | else return 0.2241141684023434;  // std dev = 31,851, 4.372,000 (wgt'ed) examples reached here.  /* #neg=2.772 #pos=1.600 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.019942937692006762;  // std dev = 0,327, 566,000 (wgt'ed) examples reached here.  /* #neg=497 #pos=69 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( haswordauthor(N, L) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11109011157009989;  // std dev = 5,668, 170,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=43 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1885761095858628;  // std dev = 0,479, 4.729,000 (wgt'ed) examples reached here.  /* #neg=3.027 #pos=1.702 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.021793661303340265;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return -0.024473258087824468;  // std dev = 6,849, 461,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=53 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.1019385902179583;  // std dev = 3,259, 58,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return -0.13944072012686967;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.0799246185557907;  // std dev = 5,719, 181,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=43 */
%   | | | else return -0.06068115896235024;  // std dev = 1,345, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7943530000476764;  // std dev = 0,223, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.1884609209911705;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.6245698596140891;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.03732100003179796;  // std dev = 3,569, 99,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=15 */
%   | else return 0.1613657276048436;  // std dev = 0,480, 4.556,000 (wgt'ed) examples reached here.  /* #neg=2.911 #pos=1.645 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.011350954903044828;  // std dev = 0,332, 544,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=69 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.047702868752208034;  // std dev = 5,797, 199,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=43 */
%   | | | else return 0.01856788033493465;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1391774909082405;  // std dev = 0,479, 4.648,000 (wgt'ed) examples reached here.  /* #neg=2.946 #pos=1.702 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return -0.018180582384120215;  // std dev = 6,969, 470,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=55 */
%   | | | else return -0.13519718831330876;  // std dev = 1,05e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordtitle(E, I), haswordvenue(B, I) )
%   | | | then return 0.08661807337756566;  // std dev = 3,268, 59,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | | else return -0.12231000406829237;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.07382258448864437;  // std dev = 5,666, 174,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=43 */
%   | | | else return -0.03839760225407277;  // std dev = 1,343, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6857769438416825;  // std dev = 0,446, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.28010780901891696;  // std dev = 0,037, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.5075095930984367;  // std dev = 0,041, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.039724075247255436;  // std dev = 3,931, 102,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=19 */
%   | else return 0.10763539213619346;  // std dev = 0,479, 4.562,000 (wgt'ed) examples reached here.  /* #neg=2.923 #pos=1.639 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, I) )
%   | | | then return 0.17221417055842372;  // std dev = 1,052, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.21207095069741413;  // std dev = 2,799, 35,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else return -0.04269854134289616;  // std dev = 0,296, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else return -0.01579579377967839;  // std dev = 0,334, 748,000 (wgt'ed) examples reached here.  /* #neg=650 #pos=98 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09195043246788648;  // std dev = 0,477, 4.658,000 (wgt'ed) examples reached here.  /* #neg=2.956 #pos=1.702 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.6013082666479137;  // std dev = 0,866, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.16349232754650747;  // std dev = 2,880, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.1322823568880108;  // std dev = 0,079, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.03901342663794642;  // std dev = 6,099, 447,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=41 */
%   | | | else return 0.04086622521633237;  // std dev = 3,339, 71,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03330439070495893;  // std dev = 5,811, 203,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=43 */
%   | | | else return -0.09137137556879717;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06778523533117381;  // std dev = 0,476, 4.730,000 (wgt'ed) examples reached here.  /* #neg=3.028 #pos=1.702 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7777645432072504;  // std dev = 1,431, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return -0.17670947321898017;  // std dev = 1,140, 213,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.11136460664168377;  // std dev = 1,383, 92,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=2 */
%   | | | else return 0.03884955991164795;  // std dev = 3,295, 78,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=13 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.4550716934851408;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05624351551011781;  // std dev = 3,004, 53,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.03049229835384612;  // std dev = 4,847, 270,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=26 */
%   | | | else return -0.08406342246669715;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5242889371344319;  // std dev = 0,521, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.22409600468798271;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.2793377920010885;  // std dev = 0,964, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.12157102449896225;  // std dev = 3,612, 116,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=15 */
%   | else return 0.0597674783159732;  // std dev = 0,480, 4.503,000 (wgt'ed) examples reached here.  /* #neg=2.858 #pos=1.645 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, I) )
%   | | | then return -0.046216168043380856;  // std dev = 0,748, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.10940748082897918;  // std dev = 2,921, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else return -0.020482303872141134;  // std dev = 0,315, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else return -0.009560034017063722;  // std dev = 0,313, 703,000 (wgt'ed) examples reached here.  /* #neg=605 #pos=98 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.21391569547808967;  // std dev = 0,281, 41,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=28 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.21913256173059623;  // std dev = 0,964, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.07548141392155774;  // std dev = 3,562, 98,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=15 */
%   | else return 0.04890143166974471;  // std dev = 0,480, 4.479,000 (wgt'ed) examples reached here.  /* #neg=2.834 #pos=1.645 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.38170929199324677;  // std dev = 0,817, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(I, K), haswordtitle(L, K) )
%   | | | then return 0.05712097420955549;  // std dev = 2,971, 45,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return -0.11712318924927298;  // std dev = 0,036, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | then return 0.030808115686139483;  // std dev = 0,340, 66,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | else return -0.01200584115059282;  // std dev = 0,310, 637,000 (wgt'ed) examples reached here.  /* #neg=553 #pos=84 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02755778256718591;  // std dev = 0,473, 4.326,000 (wgt'ed) examples reached here.  /* #neg=2.785 #pos=1.541 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.709653513578198;  // std dev = 2,622, 81,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=74 */
%   | | | else return -0.12907946189100905;  // std dev = 1,213, 370,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.20203312766794243;  // std dev = 0,289, 280,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=26 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3684783439581174;  // std dev = 4,499, 96,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=67 */
%   | | | else return 0.01704956412492711;  // std dev = 2,962, 87,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=15 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5484611150700925;  // std dev = 0,317, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.017581229814652266;  // std dev = 0,340, 209,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=45 */
%   | | else return -0.09677249182342072;  // std dev = 0,098, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.577966
   AUC PR    = 0.062866
   CLL	      = -0.385358
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.021419
   F1        = 0.04194


Total learning time: 1997.254 seconds
Total inference time: 28.145 seconds
AUC ROC: 0.577966


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 05:48:17
{'AUC PR': 0.062866, 'AUC ROC': 0.577966, 'Precision': [1.0, 0.5], 'Inference time': 28.145, 'CLL': -0.385358, 'Recall': 0.021419, 'Learning time': 1997.254, 'F1': 0.04194}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995117;  // std dev = 1,69e-07, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.7331489350995123;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.011416282291792005;  // std dev = 3,612, 115,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=15 */
%   | else return 0.2213637728120265;  // std dev = 0,481, 4.529,000 (wgt'ed) examples reached here.  /* #neg=2.884 #pos=1.645 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.7597882793618076;  // std dev = 2,326, 61,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=55 */
%   | | | else return -0.13910381215323478;  // std dev = 0,999, 364,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=1 */
%   | | else if ( haswordtitle(J, M), haswordauthor(N, M) )
%   | | | then return -0.13061510984430788;  // std dev = 0,994, 89,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=1 */
%   | | | else return 0.006297083247660496;  // std dev = 3,197, 81,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=12 */
%   | else if ( haswordvenue(B, P), haswordtitle(Q, P) )
%   | | then if ( title(R, Q), venue(R, B) )
%   | | | then return 0.09312161269514;  // std dev = 5,736, 183,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=43 */
%   | | | else return -0.06777699082641374;  // std dev = 1,361, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.561703
   AUC PR    = 0.028749
   CLL	      = -0.20007
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 122.443 seconds
Total inference time: 7.135 seconds
AUC ROC: 0.561703


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 05:50:27
{'AUC PR': 0.028749, 'AUC ROC': 0.561703, 'Precision': [nan, 0.5], 'Inference time': 7.135, 'CLL': -0.20007, 'Recall': 0.0, 'Learning time': 122.443, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1,41e-06, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.15471256290430865;  // std dev = 36,462, 6.373,000 (wgt'ed) examples reached here.  /* #neg=4.483 #pos=1.890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13077749349056003;  // std dev = 36,567, 6.461,000 (wgt'ed) examples reached here.  /* #neg=4.571 #pos=1.890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.10942818956101254;  // std dev = 36,640, 6.524,000 (wgt'ed) examples reached here.  /* #neg=4.634 #pos=1.890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09719826346520326;  // std dev = 36,523, 6.424,000 (wgt'ed) examples reached here.  /* #neg=4.534 #pos=1.890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.07900559077000112;  // std dev = 36,584, 6.476,000 (wgt'ed) examples reached here.  /* #neg=4.586 #pos=1.890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,34e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06907311280443063;  // std dev = 36,491, 6.397,000 (wgt'ed) examples reached here.  /* #neg=4.507 #pos=1.890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2,53e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04701152752886971;  // std dev = 36,742, 6.615,000 (wgt'ed) examples reached here.  /* #neg=4.725 #pos=1.890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2,63e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04535508535600289;  // std dev = 36,562, 6.457,000 (wgt'ed) examples reached here.  /* #neg=4.567 #pos=1.890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04174721745415756;  // std dev = 36,434, 6.350,000 (wgt'ed) examples reached here.  /* #neg=4.460 #pos=1.890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.027027921347754356;  // std dev = 36,607, 6.496,000 (wgt'ed) examples reached here.  /* #neg=4.606 #pos=1.890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.322515
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 22.303 seconds
Total inference time: 5.642 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.323471
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 12.048 seconds
Parameter learned model CLL: -0.323471


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.462, 4483, 1890], 'true': [1.41e-06, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.567, 4571, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.64, 4634, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.523, 4534, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.584, 4586, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.491, 4507, 1890], 'true': [4.34e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.742, 4725, 1890], 'true': [2.53e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.562, 4567, 1890], 'true': [2.63e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.434, 4460, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.607, 4606, 1890], 'true': [0.0, 0, 380]}]]
[{'': [5.235578052969159e-15, 0.20861364246799463]}, {'': [-5.310372025154433e-15, 0.20695386587380718]}, {'': [-1.009718624501195e-15, 0.20577372948486253]}, {'': [-1.495879443705474e-15, 0.20765015299108874]}, {'': [-1.402386978473882e-15, 0.20667225324955482]}, {'': [4.9551006572743825e-16, 0.20815970359320884]}, {'': [1.6828643741686584e-16, 0.20408163265299742]}, {'': [1.8231030720160465e-16, 0.20702902792756966]}, {'': [-2.5710427938687837e-16, 0.20904953809906662]}, {'': [-2.945012654795152e-16, 0.20629737663496805]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1,41e-06, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17631420630445802;  // std dev = 0,466, 5.494,000 (wgt'ed) examples reached here.  /* #neg=3.746 #pos=1.748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.19814893509951237;  // std dev = 3,350, 50,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return -0.06185106490048781;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.024204006076957874;  // std dev = 7,971, 612,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=72 */
%   | | | else return 0.05814893509951215;  // std dev = 6,387, 255,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15509791571168868;  // std dev = 0,466, 5.466,000 (wgt'ed) examples reached here.  /* #neg=3.718 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.025849214154308138;  // std dev = 7,893, 617,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=71 */
%   | | | else return 0.07249577639528275;  // std dev = 3,768, 85,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05478838521814056;  // std dev = 6,494, 259,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=53 */
%   | | | else return -0.14956451566403295;  // std dev = 0,041, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.132112061944296;  // std dev = 0,466, 5.475,000 (wgt'ed) examples reached here.  /* #neg=3.727 #pos=1.748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1825297182087558;  // std dev = 3,327, 49,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return 0.02015003439887936;  // std dev = 1,304, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.10054448453110254;  // std dev = 3,545, 68,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return -0.011840810703637312;  // std dev = 9,578, 813,000 (wgt'ed) examples reached here.  /* #neg=707 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10886355573384456;  // std dev = 0,465, 5.515,000 (wgt'ed) examples reached here.  /* #neg=3.767 #pos=1.748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4095633141511041;  // std dev = 1,291, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.09017453861254555;  // std dev = 3,270, 55,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.022510154749978455;  // std dev = 7,977, 632,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=72 */
%   | | | else return 0.022090861587418315;  // std dev = 6,452, 285,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4334003907647569;  // std dev = 3,350, 50,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   | | | else return -0.014001184038392053;  // std dev = 4,611, 127,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09709981273007431;  // std dev = 6,154, 173,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   | | | else return 0.09434434356710554;  // std dev = 33,290, 5.085,000 (wgt'ed) examples reached here.  /* #neg=3.453 #pos=1.632 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.421131875643533;  // std dev = 1,200, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.04621521227968324;  // std dev = 3,335, 62,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.01622157879855583;  // std dev = 7,962, 611,000 (wgt'ed) examples reached here.  /* #neg=539 #pos=72 */
%   | | | else return 0.03258128853750732;  // std dev = 6,396, 266,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,34e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06853428094459656;  // std dev = 0,463, 5.594,000 (wgt'ed) examples reached here.  /* #neg=3.846 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.020100937351824718;  // std dev = 7,813, 605,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=71 */
%   | | | else return 0.09842634548102305;  // std dev = 3,699, 75,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0552991449200192;  // std dev = 6,374, 237,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=53 */
%   | | | else return -0.1429261266294481;  // std dev = 0,058, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2,53e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06037330540152966;  // std dev = 0,465, 5.512,000 (wgt'ed) examples reached here.  /* #neg=3.764 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.005837524988637154;  // std dev = 7,701, 500,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=71 */
%   | | | else return -0.03508193929940037;  // std dev = 3,980, 165,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.06115802304921213;  // std dev = 6,331, 221,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=53 */
%   | | | else return -0.12416474217648824;  // std dev = 0,027, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2,63e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.045653744486085446;  // std dev = 0,464, 5.566,000 (wgt'ed) examples reached here.  /* #neg=3.818 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21927352323075944;  // std dev = 1,539, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.03570312962515806;  // std dev = 3,348, 66,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.049670071677536586;  // std dev = 3,463, 68,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return -0.012277794286564274;  // std dev = 9,556, 814,000 (wgt'ed) examples reached here.  /* #neg=708 #pos=106 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.01416329230605183;  // std dev = 5,896, 175,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=53 */
%   | | | else return 0.607298800181126;  // std dev = 0,927, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06377383398315407;  // std dev = 6,073, 164,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   | | | else return 0.043239681371651094;  // std dev = 33,304, 5.094,000 (wgt'ed) examples reached here.  /* #neg=3.462 #pos=1.632 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.028288418075313813;  // std dev = 7,854, 660,000 (wgt'ed) examples reached here.  /* #neg=589 #pos=71 */
%   | | | else return 0.08611744046390091;  // std dev = 3,720, 76,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.03305873078124724;  // std dev = 6,380, 242,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=53 */
%   | | | else return -0.11500652476205095;  // std dev = 0,033, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.031736983547341044;  // std dev = 0,465, 5.496,000 (wgt'ed) examples reached here.  /* #neg=3.748 #pos=1.748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.45804816326050996;  // std dev = 0,919, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05204407954780688;  // std dev = 3,292, 59,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.011704454186869292;  // std dev = 7,937, 616,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=72 */
%   | | | else return 0.013792293889884408;  // std dev = 6,345, 263,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=51 */


Results
   AUC ROC   = 0.6019
   AUC PR    = 0.171672
   CLL	      = -0.33628
   Precision = 0.642458 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.24838


Total learning time: 245.645 seconds
Total inference time: 10.624 seconds
AUC ROC: 0.6019


Results scoring model
   AUC ROC   = 0.637568
   AUC PR    = 0.196187
   CLL	      = -0.321947
   Precision = 0.9575 at threshold = 0.5
   Recall    = 0.168722
   F1        = 0.286891


Total scoring time: 43.385 seconds
Refined model CLL: -0.321947


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.6019
   AUC PR    = 0.171672
   CLL	      = -0.33628
   Precision = 0.642458 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.24838


Total learning time: 323.381 seconds
Total inference time: 10.624 seconds
AUC ROC: 0.6019
Total revision time: 323.381
Best scored revision CLL: -0.321947


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 05:56:09
{'AUC PR': 0.171672, 'AUC ROC': 0.6019, 'Precision': [0.642458, 0.5], 'parameter_1.0': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.642, 'CLL': -0.322515, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 22.303}, 'Inference time': 10.624, 'CLL': -0.33628, 'Recall': 0.153949, 'F1': 0.24838, 'Learning time': 323.381}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.19367525088898677;  // std dev = 5,821, 152,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=51 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21800870722921792;  // std dev = 0,480, 5.705,000 (wgt'ed) examples reached here.  /* #neg=3.652 #pos=2.053 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then return -0.027886377902092477;  // std dev = 0,318, 623,000 (wgt'ed) examples reached here.  /* #neg=552 #pos=71 */
%   | | else return 0.07766113022146359;  // std dev = 0,414, 82,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, A) )
%   | | | then return 0.10452574669371532;  // std dev = 6,200, 207,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=51 */
%   | | | else return -0.06185106490048781;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19274825563183243;  // std dev = 0,481, 5.851,000 (wgt'ed) examples reached here.  /* #neg=3.723 #pos=2.128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.5198928983282822;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.2009127398877606;  // std dev = 3,152, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.1423903965247614;  // std dev = 0,034, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.06333611739226497;  // std dev = 7,235, 310,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=67 */
%   | | | else return -0.05553378061233025;  // std dev = 4,288, 238,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=20 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.03665546949567248;  // std dev = 5,687, 353,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16523636210449802;  // std dev = 0,481, 5.827,000 (wgt'ed) examples reached here.  /* #neg=3.699 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return -0.01377794523379593;  // std dev = 7,844, 580,000 (wgt'ed) examples reached here.  /* #neg=509 #pos=71 */
%   | | | else return -0.14410205438212834;  // std dev = 0,033, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordtitle(E, I), haswordvenue(B, I) )
%   | | | then return 0.08709942855215941;  // std dev = 3,681, 73,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | | else return -0.14652461662127533;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.18743327262167567;  // std dev = 3,094, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.02436279486351256;  // std dev = 1,271, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.03007328700108906;  // std dev = 5,380, 189,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.11220448158937643;  // std dev = 0,002, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13322435191984563;  // std dev = 0,480, 5.897,000 (wgt'ed) examples reached here.  /* #neg=3.769 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.04904717218608523;  // std dev = 1,256, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.06139587528925261;  // std dev = 3,315, 61,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.33310229265384605;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.15343262435688854;  // std dev = 0,075, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.2066333663481162;  // std dev = 3,067, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.005013314547121795;  // std dev = 1,219, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0025966977005909657;  // std dev = 7,713, 483,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=71 */
%   | | | else return -0.02476037211859041;  // std dev = 5,584, 330,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=35 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11123534871296538;  // std dev = 0,480, 5.860,000 (wgt'ed) examples reached here.  /* #neg=3.732 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8139035283616123;  // std dev = 0,068, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16694161067023158;  // std dev = 0,086, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.13748689662235855;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.05996959279061232;  // std dev = 3,282, 61,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.015968676994123163;  // std dev = 7,717, 583,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=69 */
%   | | | else return 0.06064425660733465;  // std dev = 3,709, 79,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.016903699659845995;  // std dev = 5,408, 198,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=36 */
%   | | | else return -0.09943128715236649;  // std dev = 0,000307, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0871289274581871;  // std dev = 0,480, 5.901,000 (wgt'ed) examples reached here.  /* #neg=3.773 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return -0.012803893401918677;  // std dev = 7,797, 586,000 (wgt'ed) examples reached here.  /* #neg=515 #pos=71 */
%   | | | else return -0.12594555721883935;  // std dev = 0,052, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.04243649393122649;  // std dev = 0,416, 81,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.055718998604272714;  // std dev = 6,144, 216,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=51 */
%   | | | else return -0.08359746374503653;  // std dev = 1,398, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.10679548599819952;  // std dev = 0,095, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6930942703804402;  // std dev = 0,277, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.29061107959200355;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.5627370701599946;  // std dev = 4,21e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.10595730405682074;  // std dev = 4,424, 130,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.26610387791283213;  // std dev = 3,787, 58,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return -0.07041853176921171;  // std dev = 4,195, 108,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=24 */
%   | | else return 0.07254585803298011;  // std dev = 0,481, 5.499,000 (wgt'ed) examples reached here.  /* #neg=3.502 #pos=1.997 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return -0.004379706222571413;  // std dev = 0,333, 671,000 (wgt'ed) examples reached here.  /* #neg=582 #pos=89 */
%   | else return 0.026348769208643815;  // std dev = 0,393, 260,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=53 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5320977070912384;  // std dev = 0,298, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.2345079883995952;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.4230026448470862;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.11724170402704398;  // std dev = 4,511, 158,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=24 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.27254100411192056;  // std dev = 3,508, 52,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=32 */
%   | | | else return -0.07396101898671735;  // std dev = 4,252, 117,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=24 */
%   | | else return 0.05955864154536724;  // std dev = 0,482, 5.466,000 (wgt'ed) examples reached here.  /* #neg=3.469 #pos=1.997 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then return -0.012412514656669385;  // std dev = 0,327, 706,000 (wgt'ed) examples reached here.  /* #neg=617 #pos=89 */
%   | else return 0.02731721423983606;  // std dev = 0,396, 254,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=53 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.04110532637208425;  // std dev = 0,476, 5.351,000 (wgt'ed) examples reached here.  /* #neg=3.426 #pos=1.925 */
%   | | else return 0.02561294076771771;  // std dev = 0,358, 578,000 (wgt'ed) examples reached here.  /* #neg=479 #pos=99 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.1981457883227531;  // std dev = 0,286, 319,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=29 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4403503758729036;  // std dev = 4,527, 112,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=85 */
%   | | | else return 0.024905273105904895;  // std dev = 3,918, 104,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=20 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.6752489832366793;  // std dev = 2,370, 78,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=72 */
%   | | | else return -0.18161212297949977;  // std dev = 1,267, 182,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=2 */
%   | | else return -0.038287252026816466;  // std dev = 0,317, 31,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | else return 0.39616670930007286;  // std dev = 0,368, 50,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.032734378300231584;  // std dev = 0,476, 5.340,000 (wgt'ed) examples reached here.  /* #neg=3.415 #pos=1.925 */
%   | | else return 0.017640526774960457;  // std dev = 0,351, 602,000 (wgt'ed) examples reached here.  /* #neg=503 #pos=99 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.16343961219041667;  // std dev = 0,278, 341,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=29 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3120738974226178;  // std dev = 4,766, 116,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=85 */
%   | | | else return 7.649117783331322E-4;  // std dev = 3,964, 118,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=20 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.45633444172260773;  // std dev = 0,282, 65,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.032841571207324415;  // std dev = 5,173, 207,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=51 */
%   | | | else return -0.03907163910041117;  // std dev = 1,364, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.1297242999400209;  // std dev = 0,068, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.546852
   AUC PR    = 0.048061
   CLL	      = -0.386963
   Precision = 0.586957 at threshold = 0.5
   Recall    = 0.036145
   F1        = 0.068096


Total learning time: 3729.67 seconds
Total inference time: 32.664 seconds
AUC ROC: 0.546852


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 06:58:52
{'AUC PR': 0.048061, 'AUC ROC': 0.546852, 'Precision': [0.586957, 0.5], 'Inference time': 32.664, 'CLL': -0.386963, 'Recall': 0.036145, 'Learning time': 3729.67, 'F1': 0.068096}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.40987307303054565;  // std dev = 3,787, 58,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return 0.07833242133804388;  // std dev = 4,326, 109,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=24 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.6581489350995114;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=32 */
%   | | | else return 0.022532496743347553;  // std dev = 4,478, 146,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=24 */
%   | | else return 0.2251770549304206;  // std dev = 0,482, 5.441,000 (wgt'ed) examples reached here.  /* #neg=3.444 #pos=1.997 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordauthor(N, M) )
%   | | then if ( haswordvenue(A, M) )
%   | | | then return -0.0418510649004878;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return -0.02037219166105071;  // std dev = 7,786, 568,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=69 */
%   | | else if ( haswordtitle(L, P), haswordvenue(B, P) )
%   | | | then return 0.08891816586874314;  // std dev = 3,721, 78,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, Q), haswordtitle(R, Q) )
%   | | then if ( title(S, R), venue(S, A) )
%   | | | then return 0.10216807385549327;  // std dev = 6,209, 209,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=51 */
%   | | | else return -0.06185106490048781;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.538182
   AUC PR    = 0.01524
   CLL	      = -0.202952
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 216.972 seconds
Total inference time: 7.259 seconds
AUC ROC: 0.538182


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 07:02:37
{'AUC PR': 0.01524, 'AUC ROC': 0.538182, 'Precision': [nan, 0.5], 'Inference time': 7.259, 'CLL': -0.202952, 'Recall': 0.0, 'Learning time': 216.972, 'F1': nan}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 214413

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 35540

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995121;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.15116549377481336;  // std dev = 16,963, 1.389,000 (wgt'ed) examples reached here.  /* #neg=982 #pos=407 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.1200050647943419;  // std dev = 17,103, 1.447,000 (wgt'ed) examples reached here.  /* #neg=1.040 #pos=407 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,82e-07, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.10136794999921617;  // std dev = 17,124, 1.456,000 (wgt'ed) examples reached here.  /* #neg=1.049 #pos=407 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 1,52e-07, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.09151948415913631;  // std dev = 17,059, 1.428,000 (wgt'ed) examples reached here.  /* #neg=1.021 #pos=407 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.08108975990684976;  // std dev = 17,008, 1.407,000 (wgt'ed) examples reached here.  /* #neg=1.000 #pos=407 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.06475839643414218;  // std dev = 17,040, 1.420,000 (wgt'ed) examples reached here.  /* #neg=1.013 #pos=407 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.05398438390575412;  // std dev = 17,032, 1.417,000 (wgt'ed) examples reached here.  /* #neg=1.010 #pos=407 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,71e-08, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.05082743243523301;  // std dev = 16,953, 1.385,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=407 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.03634960291823605;  // std dev = 17,013, 1.409,000 (wgt'ed) examples reached here.  /* #neg=1.002 #pos=407 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.0413828522021464;  // std dev = 16,869, 1.353,000 (wgt'ed) examples reached here.  /* #neg=946 #pos=407 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.323884
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 3.373 seconds
Total inference time: 4.075 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.587221
   AUC PR    = 0.192501
   CLL	      = -0.320326
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174442
   F1        = 0.297064


Total scoring time: 4.752 seconds
Parameter learned model CLL: -0.320326


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.963, 982, 407], 'true': [0.0, 0, 86]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.103, 1040, 407], 'true': [2.8e-07, 0, 86]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.124, 1049, 407], 'true': [3.82e-07, 0, 86]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.059, 1021, 407], 'true': [1.52e-07, 0, 86]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.008, 1000, 407], 'true': [0.0, 0, 86]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.04, 1013, 407], 'true': [0.0, 0, 86]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.032, 1010, 407], 'true': [0.0, 0, 86]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.953, 978, 407], 'true': [4.71e-08, 0, 86]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.013, 1002, 407], 'true': [0.0, 0, 86]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.869, 946, 407], 'true': [5.77e-08, 0, 86]}]]
[{'': [-3.304849933767908e-16, 0.20715785501736908]}, {'': [9.088337317861747e-16, 0.20215788546139343]}, {'': [1.6937355910560528e-15, 0.2013942873747143]}, {'': [2.685190571186425e-16, 0.20378102221280237]}, {'': [-3.511403054628402e-16, 0.20559200141035475]}, {'': [-5.163828021512356e-17, 0.20446885538582785]}, {'': [-1.1360421647327184e-16, 0.2047274525633715]}, {'': [2.581914010756178e-17, 0.20750746132492665]}, {'': [-6.196593625814827e-17, 0.2054187795077788]}, {'': [3.872871016134267e-17, 0.21032454226980515]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995121;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.10814893509951223;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.16769250356423773;  // std dev = 0,462, 1.205,000 (wgt'ed) examples reached here.  /* #neg=832 #pos=373 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.019439257680157536;  // std dev = 3,547, 93,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=15 */
%   | | | else return 0.17393840878372288;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else return -0.016851064900487718;  // std dev = 0,331, 40,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.03196743783575556;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.1571430408588004;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.14551615201362916;  // std dev = 0,462, 1.207,000 (wgt'ed) examples reached here.  /* #neg=834 #pos=373 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0028249159451824526;  // std dev = 3,577, 102,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=15 */
%   | | | else return 0.08562940169864793;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.03564548271188991;  // std dev = 2,116, 48,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | | else return -0.13981214937855654;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,82e-07, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07967356410937504;  // std dev = 2,095, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.4403368686749502;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.12591232219514226;  // std dev = 0,463, 1.202,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=373 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.14656632738116998;  // std dev = 0,034, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05978067116180362;  // std dev = 3,417, 73,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | | else return -0.015546344966881176;  // std dev = 3,096, 85,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 1,52e-07, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10362288279206222;  // std dev = 0,462, 1.236,000 (wgt'ed) examples reached here.  /* #neg=855 #pos=381 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.1472467256256698;  // std dev = 0,023, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.011307161449493702;  // std dev = 3,515, 89,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
%   | | | else return -0.013809440470514182;  // std dev = 3,094, 86,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.13915896392927715;  // std dev = 1,433, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.025085771100411082;  // std dev = 1,834, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.12470725200930446;  // std dev = 2,426, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.09507514498589636;  // std dev = 15,773, 1.150,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=364 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return 0.04809193214283294;  // std dev = 2,785, 46,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.022256072737940336;  // std dev = 3,036, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.034919821867279204;  // std dev = 2,110, 46,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return -0.12067867010168869;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08695021536619237;  // std dev = 0,468, 1.171,000 (wgt'ed) examples reached here.  /* #neg=790 #pos=381 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.13782656352603154;  // std dev = 0,011, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return -0.13413258327413888;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.005336198244997304;  // std dev = 4,662, 164,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=26 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.33992882816983483;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.1359911378066544;  // std dev = 1,622, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else return 0.07256597283324322;  // std dev = 0,469, 1.138,000 (wgt'ed) examples reached here.  /* #neg=766 #pos=372 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.00784975431681908;  // std dev = 2,863, 61,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
%   | | | else return 0.016917750639642376;  // std dev = 3,039, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | else return -0.03558445428371679;  // std dev = 0,305, 48,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,71e-08, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05392970430398025;  // std dev = 0,467, 1.180,000 (wgt'ed) examples reached here.  /* #neg=799 #pos=381 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.11848189276850296;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.007019277021178368;  // std dev = 3,509, 92,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=15 */
%   | | | else return -0.011610075579666602;  // std dev = 3,085, 82,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return -0.04924813280954345;  // std dev = 2,155, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.2765117435101984;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.021909892357191648;  // std dev = 0,459, 1.238,000 (wgt'ed) examples reached here.  /* #neg=865 #pos=373 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.102993342156339;  // std dev = 0,020, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.015276685195206922;  // std dev = 3,490, 87,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=15 */
%   | | | else return -0.01973101436695567;  // std dev = 3,100, 89,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 86,000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1963998595562734;  // std dev = 2,085, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return -0.2719310878704301;  // std dev = 0,173, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.038161199823588725;  // std dev = 0,467, 1.156,000 (wgt'ed) examples reached here.  /* #neg=784 #pos=372 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.015572674952503472;  // std dev = 3,537, 94,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=15 */
%   | | | else return 0.06532580404909703;  // std dev = 2,100, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.04594646516118851;  // std dev = 2,129, 55,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=5 */
%   | | | else return -0.10263469332678561;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.644449
   AUC PR    = 0.1947
   CLL	      = -0.306968
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 81.104 seconds
Total inference time: 11.394 seconds
AUC ROC: 0.644449


Results scoring model
   AUC ROC   = 0.632305
   AUC PR    = 0.199412
   CLL	      = -0.325104
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174442
   F1        = 0.297064


Total scoring time: 19.955 seconds
Refined model CLL: -0.325104


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.323884
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 109.184 seconds
Total inference time: 4.075 seconds
AUC ROC: 0.574545
Total revision time: 109.184
Best scored revision CLL: -0.320326


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 07:04:43
{'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 4.075, 'CLL': -0.323884, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 109.184, 'parameter_0.2': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 4.075, 'CLL': -0.323884, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 3.373}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.016851064900487777;  // std dev = 1,620, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else return 0.22244036824602464;  // std dev = 0,481, 1.249,000 (wgt'ed) examples reached here.  /* #neg=794 #pos=455 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then if ( haswordvenue(B, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.010272117532066603;  // std dev = 3,609, 114,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=15 */
%   | | else return 0.14386322081379807;  // std dev = 0,452, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else return -0.04751144225897829;  // std dev = 0,292, 53,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17302422205616605;  // std dev = 0,475, 1.357,000 (wgt'ed) examples reached here.  /* #neg=890 #pos=467 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.1406052410854857;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, H), haswordauthor(I, H) )
%   | | | then return 0.014815408530859143;  // std dev = 3,558, 97,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=15 */
%   | | | else return 0.19265990620548604;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return -0.0010302119069341164;  // std dev = 0,342, 37,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.14692082624770522;  // std dev = 2,100, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.09635742277539401;  // std dev = 0,719, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7630240894420607;  // std dev = 0,098, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15577744851908115;  // std dev = 0,477, 1.294,000 (wgt'ed) examples reached here.  /* #neg=838 #pos=456 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return -0.12445772267102995;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( title(K, I), venue(K, B) )
%   | | | then return -0.008341875910559867;  // std dev = 3,481, 105,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=14 */
%   | | | else return 0.019869209872424846;  // std dev = 2,365, 35,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | else return 0.0028446744334478784;  // std dev = 0,346, 36,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13988757811411312;  // std dev = 0,480, 1.286,000 (wgt'ed) examples reached here.  /* #neg=819 #pos=467 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8586107055597524;  // std dev = 5,96e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.14067241074955428;  // std dev = 0,051, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.14138929444024745;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06633692546646693;  // std dev = 2,292, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.027683260764918328;  // std dev = 2,111, 46,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return -0.1363789129388314;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1363789129388314;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11023508853316584;  // std dev = 0,479, 1.301,000 (wgt'ed) examples reached here.  /* #neg=834 #pos=467 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5951463927380553;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.12370906090002975;  // std dev = 0,050, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.1592213126364388;  // std dev = 1,949, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.038737127545432945;  // std dev = 0,907, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.014103465761267479;  // std dev = 2,099, 42,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | | else return -0.12109772043438205;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12109772043438205;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.3699384353928919;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.13854030568908798;  // std dev = 1,543, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return -0.14445465844806377;  // std dev = 0,265, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.10752902654772409;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.08053215811945998;  // std dev = 1,119, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.08470941656180468;  // std dev = 0,478, 1.263,000 (wgt'ed) examples reached here.  /* #neg=816 #pos=447 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then return -0.13589910030398528;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.011126686087712797;  // std dev = 0,346, 87,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=15 */
%   | | else return -0.030112809530984157;  // std dev = 0,253, 85,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06156125705666557;  // std dev = 0,475, 1.342,000 (wgt'ed) examples reached here.  /* #neg=875 #pos=467 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7948676317482785;  // std dev = 0,273, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.15532925779549478;  // std dev = 0,260, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.10770804436627766;  // std dev = 0,020, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.018361163354274172;  // std dev = 1,129, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else return -0.014286403185678651;  // std dev = 0,254, 81,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.542078703162255;  // std dev = 0,116, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.12232226599623423;  // std dev = 2,154, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return -0.2244907430257493;  // std dev = 0,107, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | | then return -0.08838154786207139;  // std dev = 2,165, 29,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.2678407568458105;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.07140262547348206;  // std dev = 0,483, 1.207,000 (wgt'ed) examples reached here.  /* #neg=760 #pos=447 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then return -0.1128344263145709;  // std dev = 0,090, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | then return -0.10100941016113928;  // std dev = 0,027, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.009255477061483648;  // std dev = 0,276, 170,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=26 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7164222071932937;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2835777928067063;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.2835777928067063;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.01761115954401468;  // std dev = 2,016, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return 0.03344925077532582;  // std dev = 0,475, 1.313,000 (wgt'ed) examples reached here.  /* #neg=857 #pos=456 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then if ( haswordauthor(L, K) )
%   | | | then return -0.08781531390795969;  // std dev = 0,030, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.008237704666864892;  // std dev = 2,143, 47,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | else return -1.625502901023357E-4;  // std dev = 0,270, 71,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=11 */
%   | else return -0.042286492777600694;  // std dev = 0,247, 57,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then if ( haswordvenue(A, C), title(F, D) )
%   | | | then return 0.6489589198821021;  // std dev = 3,008, 365,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=356 */
%   | | | else return 0.5955257114228347;  // std dev = 2,207, 67,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=62 */
%   | | else return -0.28065855791528493;  // std dev = 0,165, 890,000 (wgt'ed) examples reached here.  /* #neg=867 #pos=23 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then return -0.044514843729299904;  // std dev = 0,446, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( haswordvenue(A, C) )
%   | | | then return 0.41547860259279457;  // std dev = 1,919, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.07430303183229116;  // std dev = 1,746, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then return 0.4059092246023642;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.478636497329637;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.00453195192559689;  // std dev = 0,272, 72,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */


Results
   AUC ROC   = 0.986999
   AUC PR    = 0.701471
   CLL	      = -0.262476
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.076364
   F1        = 0.140234


Total learning time: 525.683 seconds
Total inference time: 42.8 seconds
AUC ROC: 0.986999


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 07:14:12
{'AUC PR': 0.701471, 'AUC ROC': 0.986999, 'Precision': [0.857143, 0.5], 'Inference time': 42.8, 'CLL': -0.262476, 'Recall': 0.076364, 'Learning time': 525.683, 'F1': 0.140234}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20433129240121237;  // std dev = 0,476, 1.349,000 (wgt'ed) examples reached here.  /* #neg=882 #pos=467 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, H), haswordauthor(I, H) )
%   | | | then return 0.003780003060677406;  // std dev = 3,580, 103,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=15 */
%   | | | else return 0.31968739663797385;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return -0.033155412726574685;  // std dev = 0,311, 46,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */


Results
   AUC ROC   = 0.570317
   AUC PR    = 0.017905
   CLL	      = -0.200855
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.857 seconds
Total inference time: 2.918 seconds
AUC ROC: 0.570317


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 07:14:25
{'AUC PR': 0.017905, 'AUC ROC': 0.570317, 'Precision': [nan, 0.5], 'Inference time': 2.918, 'CLL': -0.200855, 'Recall': 0.0, 'Learning time': 9.857, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1,05e-06, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.14556987677203007;  // std dev = 24,143, 2.846,000 (wgt'ed) examples reached here.  /* #neg=2.028 #pos=818 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.13121500125303887;  // std dev = 24,070, 2.804,000 (wgt'ed) examples reached here.  /* #neg=1.986 #pos=818 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,65e-07, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.11056895794704895;  // std dev = 24,107, 2.825,000 (wgt'ed) examples reached here.  /* #neg=2.007 #pos=818 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583093;  // std dev = 4,17e-07, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.10045244528996196;  // std dev = 23,993, 2.761,000 (wgt'ed) examples reached here.  /* #neg=1.943 #pos=818 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3,77e-07, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.08201881186336367;  // std dev = 24,029, 2.781,000 (wgt'ed) examples reached here.  /* #neg=1.963 #pos=818 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694907;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.06350924225436712;  // std dev = 24,105, 2.824,000 (wgt'ed) examples reached here.  /* #neg=2.006 #pos=818 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2,73e-07, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.049257528033614016;  // std dev = 24,155, 2.853,000 (wgt'ed) examples reached here.  /* #neg=2.035 #pos=818 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.05347096563760855;  // std dev = 23,930, 2.727,000 (wgt'ed) examples reached here.  /* #neg=1.909 #pos=818 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.03035909584834681;  // std dev = 24,152, 2.851,000 (wgt'ed) examples reached here.  /* #neg=2.033 #pos=818 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,66e-08, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.0322775799413872;  // std dev = 24,020, 2.776,000 (wgt'ed) examples reached here.  /* #neg=1.958 #pos=818 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.325474
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 7.205 seconds
Total inference time: 3.149 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.585193
   AUC PR    = 0.188235
   CLL	      = -0.321993
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170385
   F1        = 0.291161


Total scoring time: 7.355 seconds
Parameter learned model CLL: -0.321993


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.143, 2028, 818], 'true': [1.05e-06, 0, 168]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.07, 1986, 818], 'true': [0.0, 0, 168]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.107, 2007, 818], 'true': [5.65e-07, 0, 168]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.993, 1943, 818], 'true': [4.17e-07, 0, 168]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.029, 1963, 818], 'true': [3.77e-07, 0, 168]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.105, 2006, 818], 'true': [0.0, 0, 168]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.155, 2035, 818], 'true': [2.73e-07, 0, 168]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.93, 1909, 818], 'true': [0.0, 0, 168]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.152, 2033, 818], 'true': [0.0, 0, 168]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.02, 1958, 818], 'true': [9.66e-08, 0, 168]}]]
[{'': [6.5133084111342514e-15, 0.20481014396062835]}, {'': [-2.960594732333751e-15, 0.2066219848962761]}, {'': [1.9032394707859826e-15, 0.2057139635053859]}, {'': [1.0362081563168128e-15, 0.20849387016160448]}, {'': [8.458842092382145e-16, 0.2076211659200454]}, {'': [-2.6433881538694203e-16, 0.20575710823457533]}, {'': [4.440892098500626e-16, 0.2045098235062696]}, {'': [-3.2249335477206927e-16, 0.20998533052182689]}, {'': [-2.484784864637255e-16, 0.20459558025202934]}, {'': [5.551115123125783e-17, 0.2078390112034989]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1,05e-06, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17031824726881942;  // std dev = 0,463, 2.457,000 (wgt'ed) examples reached here.  /* #neg=1.690 #pos=767 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.041972464511276515;  // std dev = 4,517, 136,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=25 */
%   | | | else return 0.14386322081379807;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.029175008562459488;  // std dev = 3,768, 142,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=16 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1396480002289652;  // std dev = 0,460, 2.527,000 (wgt'ed) examples reached here.  /* #neg=1.760 #pos=767 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.046404033697759625;  // std dev = 4,397, 124,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=24 */
%   | | | else return -0.002537097086730138;  // std dev = 3,044, 72,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.032376317560390125;  // std dev = 3,782, 151,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,65e-07, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13029882404904802;  // std dev = 0,464, 2.441,000 (wgt'ed) examples reached here.  /* #neg=1.674 #pos=767 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.025501167890547;  // std dev = 4,532, 141,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=25 */
%   | | | else return 0.11765197228194814;  // std dev = 2,686, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.02713978437718189;  // std dev = 3,779, 149,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=16 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583093;  // std dev = 4,17e-07, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11331495695220377;  // std dev = 0,466, 2.415,000 (wgt'ed) examples reached here.  /* #neg=1.648 #pos=767 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03861333992151897;  // std dev = 4,390, 123,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=24 */
%   | | | else return -0.01006759662591917;  // std dev = 3,035, 69,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.015451751239449875;  // std dev = 3,761, 138,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=16 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3,77e-07, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.27667952593400863;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.06115831190382924;  // std dev = 2,242, 37,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | else return 0.09324137079774565;  // std dev = 0,465, 2.385,000 (wgt'ed) examples reached here.  /* #neg=1.630 #pos=755 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.043442795318257885;  // std dev = 4,363, 117,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=24 */
%   | | | else return -0.006904231977583807;  // std dev = 3,025, 70,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.015354588012433435;  // std dev = 3,764, 140,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=16 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694907;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08052828707960118;  // std dev = 0,466, 2.395,000 (wgt'ed) examples reached here.  /* #neg=1.628 #pos=767 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.057056608566131393;  // std dev = 4,120, 98,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=22 */
%   | | | else return -0.00936826877641351;  // std dev = 3,306, 83,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01524156134136946;  // std dev = 3,768, 142,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=16 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2,73e-07, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return -0.006420457990065766;  // std dev = 2,702, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.17330183760307624;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.1601949450010066;  // std dev = 3,587, 53,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return 0.0528252065538425;  // std dev = 22,526, 2.382,000 (wgt'ed) examples reached here.  /* #neg=1.649 #pos=733 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | | then return 0.0744646850130531;  // std dev = 4,051, 88,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | | | else return -0.022617615131347524;  // std dev = 3,333, 92,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=13 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.020266705550116622;  // std dev = 3,782, 151,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=16 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.24470596374164644;  // std dev = 2,900, 34,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return -0.12406073323362195;  // std dev = 1,829, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else return 0.05729638125843066;  // std dev = 0,467, 2.313,000 (wgt'ed) examples reached here.  /* #neg=1.568 #pos=745 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.035221365123504086;  // std dev = 4,122, 100,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=22 */
%   | | | else return -0.01756303335044812;  // std dev = 3,331, 90,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.022097732743111255;  // std dev = 3,791, 157,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=16 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04571691887093773;  // std dev = 0,467, 2.378,000 (wgt'ed) examples reached here.  /* #neg=1.611 #pos=767 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.010280978550544651;  // std dev = 4,329, 126,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=23 */
%   | | | else return -0.019499688482292634;  // std dev = 3,135, 70,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=12 */
%   | | else return -0.02791232126978085;  // std dev = 0,289, 173,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,66e-08, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.027629142479765095;  // std dev = 0,464, 2.444,000 (wgt'ed) examples reached here.  /* #neg=1.677 #pos=767 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.027766028587642735;  // std dev = 4,132, 101,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=22 */
%   | | | else return -0.018334904758222234;  // std dev = 3,795, 159,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=16 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.031154559948717915;  // std dev = 3,360, 100,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=13 */
%   | | | else return -0.06666900558602183;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.638628
   AUC PR    = 0.178099
   CLL	      = -0.312157
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 143.025 seconds
Total inference time: 11.496 seconds
AUC ROC: 0.638628


Results scoring model
   AUC ROC   = 0.631192
   AUC PR    = 0.193946
   CLL	      = -0.326019
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170385
   F1        = 0.291161


Total scoring time: 44.717 seconds
Refined model CLL: -0.326019


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.325474
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 202.30200000000002 seconds
Total inference time: 3.149 seconds
AUC ROC: 0.574545
Total revision time: 202.30200000000002
Best scored revision CLL: -0.321993


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 07:18:03
{'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.149, 'CLL': -0.325474, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 7.205}, 'Inference time': 3.149, 'CLL': -0.325474, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 202.30200000000002}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(E, C) )
%   | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.12841920536978263;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return -0.050941973991396876;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.22367168051052083;  // std dev = 0,482, 2.506,000 (wgt'ed) examples reached here.  /* #neg=1.590 #pos=916 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then if ( haswordauthor(L, I) )
%   | | | then return 0.039967116917694;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.013554340504917434;  // std dev = 4,407, 148,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=23 */
%   | | else return 0.17064893509951234;  // std dev = 0,464, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else return -0.029175008562459488;  // std dev = 0,316, 142,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19219249772742641;  // std dev = 0,481, 2.573,000 (wgt'ed) examples reached here.  /* #neg=1.638 #pos=935 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return 0.013647033056365747;  // std dev = 3,435, 89,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | | | else return 0.05601427129601253;  // std dev = 2,966, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.09249097819018551;  // std dev = 0,437, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.031953603737648106;  // std dev = 3,661, 141,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=15 */
%   | | | else return 0.028330084205614402;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.13833658246105227;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1603294606737239;  // std dev = 0,480, 2.593,000 (wgt'ed) examples reached here.  /* #neg=1.658 #pos=935 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return 0.1851732673151029;  // std dev = 1,413, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.05860603131163197;  // std dev = 3,840, 87,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=19 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.013717627755528622;  // std dev = 3,300, 81,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=13 */
%   | | | else return -0.15087328188338764;  // std dev = 0,003, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.02042319895104396;  // std dev = 0,318, 140,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13195921834476584;  // std dev = 0,479, 2.604,000 (wgt'ed) examples reached here.  /* #neg=1.669 #pos=935 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return 0.3272547735188865;  // std dev = 1,222, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.026766059413776164;  // std dev = 3,901, 97,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=19 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.0026430813221071502;  // std dev = 3,319, 86,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=13 */
%   | | | else return -0.13907264940387354;  // std dev = 0,029, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.13221073096499836;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.013072707417013534;  // std dev = 0,324, 134,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10715584934585685;  // std dev = 0,479, 2.610,000 (wgt'ed) examples reached here.  /* #neg=1.675 #pos=935 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7610740147580677;  // std dev = 1,347, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return -0.15375283889775707;  // std dev = 0,129, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return -0.0024134404698955775;  // std dev = 2,995, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.130428859806982;  // std dev = 0,020, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.02508428056199687;  // std dev = 3,663, 142,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=15 */
%   | | | else return -0.05975677995993402;  // std dev = 0,960, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return -0.11909718183507718;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.5811554128214773;  // std dev = 1,303, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.29834043256019555;  // std dev = 1,973, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return -0.13931547064926822;  // std dev = 1,643, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.1563408600045111;  // std dev = 1,308, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.09942451837869888;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.02860614766060451;  // std dev = 2,136, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else return 0.0822377621263978;  // std dev = 0,478, 2.524,000 (wgt'ed) examples reached here.  /* #neg=1.630 #pos=894 */
%   else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | then return 0.015527917285595941;  // std dev = 0,346, 190,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=35 */
%   | else return -0.014505775924682402;  // std dev = 0,316, 142,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then return 0.36425805418952756;  // std dev = 0,890, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.4326422840017203;  // std dev = 0,776, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.06358793608153722;  // std dev = 0,477, 2.633,000 (wgt'ed) examples reached here.  /* #neg=1.705 #pos=928 */
%   else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | then if ( haswordtitle(G, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(A, H) )
%   | | | then return 0.10314788509152131;  // std dev = 1,115, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.008025246189592338;  // std dev = 3,771, 144,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=22 */
%   | | else return 0.0897567612134059;  // std dev = 0,446, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.007842255852253208;  // std dev = 3,755, 135,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=16 */
%   | | | else return -0.12913783570569307;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10577809960697677;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05108811822873881;  // std dev = 0,477, 2.643,000 (wgt'ed) examples reached here.  /* #neg=1.708 #pos=935 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.04263046003055792;  // std dev = 1,320, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return -9.730106601685592E-4;  // std dev = 3,730, 136,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=23 */
%   | | else return 0.08770481822300968;  // std dev = 0,447, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else return -0.036853659766513766;  // std dev = 0,283, 182,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.4235106935909762;  // std dev = 0,075, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04692469256237213;  // std dev = 3,128, 41,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return -0.15669934790408147;  // std dev = 1,623, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.15651215609313732;  // std dev = 1,191, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 1.3331207892684E-4;  // std dev = 2,659, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.3753801865833665;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.050178588007450495;  // std dev = 0,481, 2.464,000 (wgt'ed) examples reached here.  /* #neg=1.570 #pos=894 */
%   else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | then return -0.0057558550075620845;  // std dev = 0,335, 206,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=35 */
%   | else return -0.016429624659643125;  // std dev = 0,305, 154,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.638490329384548;  // std dev = 0,199, 896,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=860 */
%   | | else return -0.28334818096691594;  // std dev = 0,158, 1.786,000 (wgt'ed) examples reached here.  /* #neg=1.744 #pos=42 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.21076036955996744;  // std dev = 0,295, 114,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=11 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3860408039247471;  // std dev = 2,796, 39,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | | | else return 0.061183603633625724;  // std dev = 2,835, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.5094935892790425;  // std dev = 1,996, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.11661709548194206;  // std dev = 0,800, 61,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=1 */
%   | | else return -0.025742802484288684;  // std dev = 0,740, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.5228467782267769;  // std dev = 0,307, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */


Results
   AUC ROC   = 0.955884
   AUC PR    = 0.682397
   CLL	      = -0.274555
   Precision = 0.842105 at threshold = 0.5
   Recall    = 0.058182
   F1        = 0.108844


Total learning time: 951.931 seconds
Total inference time: 31.099 seconds
AUC ROC: 0.955884


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 07:34:27
{'AUC PR': 0.682397, 'AUC ROC': 0.955884, 'Precision': [0.842105, 0.5], 'Inference time': 31.099, 'CLL': -0.274555, 'Recall': 0.058182, 'Learning time': 951.931, 'F1': 0.108844}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.1914822684328457;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.0168510649004877;  // std dev = 2,291, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | else return 0.21750554553497214;  // std dev = 0,480, 2.549,000 (wgt'ed) examples reached here.  /* #neg=1.633 #pos=916 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( haswordvenue(A, J) )
%   | | | then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.021111898062475046;  // std dev = 4,291, 135,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=22 */
%   | | else return 0.12841920536978263;  // std dev = 0,444, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, A) )
%   | | | then return -0.015800644732420436;  // std dev = 3,621, 119,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=15 */
%   | | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.583895
   AUC PR    = 0.038635
   CLL	      = -0.20205
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 120.025 seconds
Total inference time: 4.435 seconds
AUC ROC: 0.583895


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 07:36:32
{'AUC PR': 0.038635, 'AUC ROC': 0.583895, 'Precision': [nan, 0.5], 'Inference time': 4.435, 'CLL': -0.20205, 'Recall': 0.0, 'Learning time': 120.025, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.15407958763983948;  // std dev = 29,416, 4.153,000 (wgt'ed) examples reached here.  /* #neg=2.924 #pos=1.229 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.13649515476590365;  // std dev = 29,369, 4.122,000 (wgt'ed) examples reached here.  /* #neg=2.893 #pos=1.229 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,62e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.11469305004531868;  // std dev = 29,420, 4.156,000 (wgt'ed) examples reached here.  /* #neg=2.927 #pos=1.229 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.10249831713014208;  // std dev = 29,307, 4.081,000 (wgt'ed) examples reached here.  /* #neg=2.852 #pos=1.229 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,98e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.07651840588475481;  // std dev = 29,498, 4.209,000 (wgt'ed) examples reached here.  /* #neg=2.980 #pos=1.229 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,15e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.06274808742160765;  // std dev = 29,510, 4.217,000 (wgt'ed) examples reached here.  /* #neg=2.988 #pos=1.229 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.04956958560641335;  // std dev = 29,550, 4.245,000 (wgt'ed) examples reached here.  /* #neg=3.016 #pos=1.229 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.039461602548301354;  // std dev = 29,569, 4.259,000 (wgt'ed) examples reached here.  /* #neg=3.030 #pos=1.229 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.04371079261579011;  // std dev = 29,325, 4.093,000 (wgt'ed) examples reached here.  /* #neg=2.864 #pos=1.229 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080111;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.025217213894094013;  // std dev = 29,535, 4.235,000 (wgt'ed) examples reached here.  /* #neg=3.006 #pos=1.229 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.327083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 10.889 seconds
Total inference time: 3.766 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.584797
   AUC PR    = 0.187412
   CLL	      = -0.323642
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169595
   F1        = 0.290006


Total scoring time: 9.119 seconds
Parameter learned model CLL: -0.323642


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.416, 2924, 1229], 'true': [1.08e-06, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.369, 2893, 1229], 'true': [0.0, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.42, 2927, 1229], 'true': [4.62e-07, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.307, 2852, 1229], 'true': [0.0, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.498, 2980, 1229], 'true': [1.98e-07, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.51, 2988, 1229], 'true': [3.15e-07, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.55, 3016, 1229], 'true': [2.86e-07, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.569, 3030, 1229], 'true': [0.0, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.325, 2864, 1229], 'true': [0.0, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.535, 3006, 1229], 'true': [0.0, 0, 251]}]]
[{'': [4.642589986639698e-15, 0.20835570142741158]}, {'': [-4.416122182413372e-15, 0.20925909446504068]}, {'': [8.492542658487254e-16, 0.20826847046048988]}, {'': [-3.113932308111993e-16, 0.21045934504066913]}, {'': [1.5569661540559965e-16, 0.20673323255259954]}, {'': [3.963186573960718e-16, 0.20650248109315478]}, {'': [3.255474685753447e-16, 0.20569693993207736]}, {'': [-2.1231356646218133e-17, 0.20529540609029326]}, {'': [-1.6277373428767236e-16, 0.21010742838338964]}, {'': [-3.5385594410363554e-18, 0.20598425723681993]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17260578236332424;  // std dev = 0,464, 3.673,000 (wgt'ed) examples reached here.  /* #neg=2.518 #pos=1.155 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.06460054800273712;  // std dev = 5,039, 155,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=32 */
%   | | | else return -6.0020124368260066E-5;  // std dev = 4,038, 134,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0456167552770569;  // std dev = 4,559, 239,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15242420205510393;  // std dev = 0,465, 3.648,000 (wgt'ed) examples reached here.  /* #neg=2.493 #pos=1.155 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.053893044872753926;  // std dev = 1,344, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.040936709030970554;  // std dev = 6,307, 262,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=49 */
%   | | else return -0.030296714805976847;  // std dev = 0,308, 217,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,62e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.28550974204189483;  // std dev = 3,634, 53,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=25 */
%   | | | else return -0.10108198818692829;  // std dev = 1,913, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | | else return 0.12842464923114535;  // std dev = 0,464, 3.579,000 (wgt'ed) examples reached here.  /* #neg=2.453 #pos=1.126 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.05668196938443751;  // std dev = 5,023, 152,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=32 */
%   | | | else return 0.005191753048842432;  // std dev = 4,014, 125,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=19 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.023854226993384676;  // std dev = 4,527, 211,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=23 */
%   | | | else return -0.12215838116751761;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1103064117089665;  // std dev = 0,465, 3.646,000 (wgt'ed) examples reached here.  /* #neg=2.491 #pos=1.155 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.04989909571392044;  // std dev = 5,022, 151,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=32 */
%   | | | else return -0.019570780695553267;  // std dev = 4,069, 149,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.021644202689655057;  // std dev = 4,528, 212,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=23 */
%   | | | else return -0.10965146520344594;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,98e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08882410428754645;  // std dev = 0,464, 3.680,000 (wgt'ed) examples reached here.  /* #neg=2.525 #pos=1.155 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.06370283217091846;  // std dev = 4,954, 138,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=32 */
%   | | | else return 0.008485341494257061;  // std dev = 4,009, 124,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020727459681798024;  // std dev = 4,532, 215,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=23 */
%   | | | else return -0.0993956555287121;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,15e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.14581971738446106;  // std dev = 3,819, 60,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | | | else return -0.11639749444300809;  // std dev = 1,913, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | | else return 0.07190309671479236;  // std dev = 0,464, 3.599,000 (wgt'ed) examples reached here.  /* #neg=2.473 #pos=1.126 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.0573408665503917;  // std dev = 4,947, 136,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=32 */
%   | | | else return 0.0074318003393141424;  // std dev = 4,009, 124,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=19 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.013217891693046746;  // std dev = 4,519, 205,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=23 */
%   | | | else return -0.09084562419504004;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06313138019923577;  // std dev = 0,465, 3.639,000 (wgt'ed) examples reached here.  /* #neg=2.484 #pos=1.155 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.004244825787280281;  // std dev = 5,468, 215,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=36 */
%   | | | else return 0.040460096594261134;  // std dev = 3,402, 66,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.02397037846938262;  // std dev = 4,550, 230,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=23 */
%   | | | else return -0.08361612992918538;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.11583410184595436;  // std dev = 2,933, 37,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return -0.10072738785231843;  // std dev = 2,742, 54,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.02220576800703629;  // std dev = 4,376, 101,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | | | else return 0.045861831108510755;  // std dev = 27,540, 3.531,000 (wgt'ed) examples reached here.  /* #neg=2.428 #pos=1.103 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return -0.07022386755446111;  // std dev = 1,337, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return -0.16380423666216856;  // std dev = 0,044, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.011358259625148793;  // std dev = 6,317, 268,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=49 */
%   | | | else return -0.022112045448641666;  // std dev = 4,551, 233,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=23 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.18117413275014735;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return -0.10724828665677238;  // std dev = 1,908, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.058586063457960136;  // std dev = 3,888, 72,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | | | else return 0.028784849241569075;  // std dev = 27,700, 3.624,000 (wgt'ed) examples reached here.  /* #neg=2.521 #pos=1.103 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.005646776330955496;  // std dev = 6,053, 312,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=43 */
%   | | | else return 0.01837551354107213;  // std dev = 3,076, 59,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | else return -0.011423880071907032;  // std dev = 0,343, 139,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=19 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080111;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6767554229232796;  // std dev = 7,013, 1.123,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1.072 */
%   | | | else return -0.24650038685499331;  // std dev = 7,777, 2.697,000 (wgt'ed) examples reached here.  /* #neg=2.639 #pos=58 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.16467660017652708;  // std dev = 3,880, 165,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=17 */
%   | | | else return 0.13265164652215752;  // std dev = 5,203, 127,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.497857522588973;  // std dev = 0,411, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 5.646498427976807E-4;  // std dev = 4,021, 129,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=19 */
%   | | | else return -0.07506625660393046;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.917553
   AUC PR    = 0.723733
   CLL	      = -0.24699
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174545
   F1        = 0.297214


Total learning time: 701.983 seconds
Total inference time: 26.747 seconds
AUC ROC: 0.917553


Results scoring model
   AUC ROC   = 0.942006
   AUC PR    = 0.541304
   CLL	      = -0.260967
   Precision = 0.996377 at threshold = 0.5
   Recall    = 0.185811
   F1        = 0.313212


Total scoring time: 317.388 seconds
Refined model CLL: -0.260967


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.917553
   AUC PR    = 0.723733
   CLL	      = -0.24699
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174545
   F1        = 0.297214


Total learning time: 1039.379 seconds
Total inference time: 26.747 seconds
AUC ROC: 0.917553
Total revision time: 1039.379
Best scored revision CLL: -0.260967


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 07:54:23
{'AUC PR': 0.723733, 'AUC ROC': 0.917553, 'Precision': [1.0, 0.5], 'Inference time': 26.747, 'parameter_0.6': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.766, 'CLL': -0.327083, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 10.889}, 'CLL': -0.24699, 'Recall': 0.174545, 'F1': 0.297214, 'Learning time': 1039.379}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2126622986900266;  // std dev = 0,478, 3.966,000 (wgt'ed) examples reached here.  /* #neg=2.560 #pos=1.406 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.060680580669131595;  // std dev = 0,402, 158,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=32 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.014670674229947162;  // std dev = 3,896, 115,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
%   | | | else return -0.030739953789376676;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.025448948498371458;  // std dev = 4,409, 189,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=22 */
%   | | | else return -0.07518439823382113;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18333010658477233;  // std dev = 0,478, 3.982,000 (wgt'ed) examples reached here.  /* #neg=2.576 #pos=1.406 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.0743768222199539;  // std dev = 0,417, 143,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=32 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.020336309577607934;  // std dev = 3,986, 116,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=19 */
%   | | | else return -0.13815014721646235;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.02906123801191467;  // std dev = 0,311, 211,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16213416675182374;  // std dev = 0,480, 3.913,000 (wgt'ed) examples reached here.  /* #neg=2.507 #pos=1.406 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.0909003726793571;  // std dev = 0,433, 128,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=32 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return 0.03416850320831992;  // std dev = 3,840, 100,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=18 */
%   | | | else return -0.06549158327115953;  // std dev = 0,961, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else return -0.03333940637102825;  // std dev = 0,302, 227,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=23 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1339240659079795;  // std dev = 0,479, 3.927,000 (wgt'ed) examples reached here.  /* #neg=2.521 #pos=1.406 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.020666788334528303;  // std dev = 2,010, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.09835909602683607;  // std dev = 4,440, 100,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=27 */
%   | | else if ( title(I, E), venue(I, A) )
%   | | | then return 0.008809889519238891;  // std dev = 3,890, 113,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=18 */
%   | | | else return -0.05018397211775053;  // std dev = 0,959, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.0337120741888526;  // std dev = 4,455, 225,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=22 */
%   | | | else return -0.07328182586598792;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else return -0.11875724206473448;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11014579581050299;  // std dev = 0,480, 3.923,000 (wgt'ed) examples reached here.  /* #neg=2.517 #pos=1.406 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7270992783912693;  // std dev = 1,909, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else return -0.16113367227072325;  // std dev = 0,179, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.0747822682316692;  // std dev = 1,665, 34,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | | else return 0.014997861545336708;  // std dev = 3,343, 70,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | else return -0.022056944928445423;  // std dev = 0,306, 220,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=23 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09262445471197119;  // std dev = 0,481, 3.884,000 (wgt'ed) examples reached here.  /* #neg=2.478 #pos=1.406 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.012664160023057867;  // std dev = 1,873, 31,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.046901708846412614;  // std dev = 4,202, 111,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=27 */
%   | | else if ( haswordauthor(I, D) )
%   | | | then return -0.12427857071305357;  // std dev = 0,014, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.007341746751685424;  // std dev = 3,520, 132,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.016339961230716155;  // std dev = 4,428, 202,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=22 */
%   | | | else return -0.056965710086898866;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else return -0.1047931974177957;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7120126477434195;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.13625507198584375;  // std dev = 2,839, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return -0.0684751571346293;  // std dev = 2,650, 41,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else return 0.06268849574138836;  // std dev = 0,477, 3.921,000 (wgt'ed) examples reached here.  /* #neg=2.546 #pos=1.375 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return -0.01984427260421993;  // std dev = 3,406, 124,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=19 */
%   | | | else return 0.06823704708541158;  // std dev = 3,187, 72,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | else return 0.05915442566893782;  // std dev = 0,430, 59,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.0156230012910811;  // std dev = 0,309, 215,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=23 */
%   | | else return -0.09536161988041934;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5481420142448491;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.22174963440100554;  // std dev = 2,542, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return -0.09047925907253783;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | else return 0.05110218510391648;  // std dev = 0,478, 3.905,000 (wgt'ed) examples reached here.  /* #neg=2.530 #pos=1.375 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.5740258168735952;  // std dev = 2,070, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | | | else return -0.14277557224425347;  // std dev = 0,200, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.07062704034380035;  // std dev = 1,664, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | | else return -0.012131537080361895;  // std dev = 3,360, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | else return -0.019710104387154773;  // std dev = 0,300, 230,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=23 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.41217638531432765;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.15199830180565965;  // std dev = 2,596, 27,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.03700812980536324;  // std dev = 2,650, 41,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | else return 0.04826557276347405;  // std dev = 0,480, 3.818,000 (wgt'ed) examples reached here.  /* #neg=2.443 #pos=1.375 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then return -0.07434985984547134;  // std dev = 0,269, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return -0.13639800954786116;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | | then return -0.02804417976128572;  // std dev = 4,237, 168,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=30 */
%   | | | else return -0.013252982319609008;  // std dev = 3,002, 128,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=19 */
%   | | else return -0.010152995469829255;  // std dev = 0,309, 214,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.031160236801209388;  // std dev = 0,477, 3.972,000 (wgt'ed) examples reached here.  /* #neg=2.566 #pos=1.406 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.04298596482739236;  // std dev = 1,778, 38,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | | else return 0.030017986870065374;  // std dev = 3,915, 112,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=27 */
%   | | else if ( haswordauthor(I, D) )
%   | | | then return -0.11540077392334705;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.015881722115946444;  // std dev = 4,543, 226,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=23 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return -0.029499080750807528;  // std dev = 2,905, 143,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=18 */
%   | | | else return 0.05045985389679449;  // std dev = 0,912, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.08509251975501753;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.632824
   AUC PR    = 0.048201
   CLL	      = -0.344714
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.018182
   F1        = 0.035714


Total learning time: 589.258 seconds
Total inference time: 19.173 seconds
AUC ROC: 0.632824


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 08:04:32
{'AUC PR': 0.048201, 'AUC ROC': 0.632824, 'Precision': [1.0, 0.5], 'Inference time': 19.173, 'CLL': -0.344714, 'Recall': 0.018182, 'Learning time': 589.258, 'F1': 0.035714}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21691392616865748;  // std dev = 0,480, 3.919,000 (wgt'ed) examples reached here.  /* #neg=2.513 #pos=1.406 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.04638422921715848;  // std dev = 0,391, 170,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=32 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.0012260649004876395;  // std dev = 3,933, 128,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=18 */
%   | | | else return -0.05851773156715445;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else return -0.04835512994113826;  // std dev = 0,291, 246,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=23 */


Results
   AUC ROC   = 0.571917
   AUC PR    = 0.01793
   CLL	      = -0.202656
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 35.101 seconds
Total inference time: 3.806 seconds
AUC ROC: 0.571917


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 08:05:12
{'AUC PR': 0.01793, 'AUC ROC': 0.571917, 'Precision': [nan, 0.5], 'Inference time': 3.806, 'CLL': -0.202656, 'Recall': 0.0, 'Learning time': 35.101, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1,04e-06, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.15008987087605938;  // std dev = 34,087, 5.621,000 (wgt'ed) examples reached here.  /* #neg=3.980 #pos=1.641 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.13455457942358426;  // std dev = 33,997, 5.550,000 (wgt'ed) examples reached here.  /* #neg=3.909 #pos=1.641 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.11526308418274156;  // std dev = 34,003, 5.555,000 (wgt'ed) examples reached here.  /* #neg=3.914 #pos=1.641 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.10018294454167878;  // std dev = 33,941, 5.507,000 (wgt'ed) examples reached here.  /* #neg=3.866 #pos=1.641 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.08331794226922139;  // std dev = 33,953, 5.516,000 (wgt'ed) examples reached here.  /* #neg=3.875 #pos=1.641 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,91e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.06853051694496266;  // std dev = 33,963, 5.524,000 (wgt'ed) examples reached here.  /* #neg=3.883 #pos=1.641 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.05617015844111642;  // std dev = 33,965, 5.525,000 (wgt'ed) examples reached here.  /* #neg=3.884 #pos=1.641 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2,86e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.04351039186832318;  // std dev = 34,019, 5.567,000 (wgt'ed) examples reached here.  /* #neg=3.926 #pos=1.641 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.033604198974896304;  // std dev = 34,058, 5.598,000 (wgt'ed) examples reached here.  /* #neg=3.957 #pos=1.641 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.025479866266111408;  // std dev = 34,097, 5.629,000 (wgt'ed) examples reached here.  /* #neg=3.988 #pos=1.641 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.32855
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 17.27 seconds
Total inference time: 3.963 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.584136
   AUC PR    = 0.186052
   CLL	      = -0.325146
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168272
   F1        = 0.288069


Total scoring time: 11.51 seconds
Parameter learned model CLL: -0.325146


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.087, 3980, 1641], 'true': [1.04e-06, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.997, 3909, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.003, 3914, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.941, 3866, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.953, 3875, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.963, 3883, 1641], 'true': [3.91e-07, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.965, 3884, 1641], 'true': [2.49e-07, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.019, 3926, 1641], 'true': [2.86e-07, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.058, 3957, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.097, 3988, 1641], 'true': [0.0, 0, 332]}]]
[{'': [3.2530872239619043e-15, 0.20671142579440435]}, {'': [-5.1364535115187965e-15, 0.20825157048937665]}, {'': [-5.136453511518796e-16, 0.20814274406733307]}, {'': [-9.844869230411027e-16, 0.20918969069497664]}, {'': [-7.062623578338345e-16, 0.20899301576901466]}, {'': [4.601406270735589e-16, 0.20881833652221718]}, {'': [1.872665342741228e-16, 0.20879651112798703]}, {'': [2.4612173076027567e-16, 0.20788178328571508]}, {'': [-2.3274554974069545e-16, 0.20720910890319136]}, {'': [-2.1936936872111526e-16, 0.20653860213845548]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1,04e-06, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.33037115732173455;  // std dev = 2,995, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.11621345122854462;  // std dev = 3,445, 62,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | else return 0.17059723948329542;  // std dev = 0,463, 4.836,000 (wgt'ed) examples reached here.  /* #neg=3.325 #pos=1.511 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.06245001036832839;  // std dev = 5,499, 186,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=38 */
%   | | | else return 0.020160108283869216;  // std dev = 4,930, 179,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=29 */
%   | | else return -0.03875828139533347;  // std dev = 0,304, 291,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=30 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.12213985211119062;  // std dev = 4,431, 95,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else return 0.013722225494602404;  // std dev = 2,040, 29,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else return 0.15140500185353462;  // std dev = 0,465, 4.792,000 (wgt'ed) examples reached here.  /* #neg=3.281 #pos=1.511 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.0725978233979747;  // std dev = 5,437, 171,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=38 */
%   | | | else return 0.012433851411110265;  // std dev = 4,945, 185,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.035157398313619116;  // std dev = 5,190, 294,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=30 */
%   | | | else return -0.13719821464014953;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25410729208203464;  // std dev = 3,026, 37,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.04665576940583135;  // std dev = 3,545, 74,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   | | else return 0.1286032274709991;  // std dev = 0,464, 4.807,000 (wgt'ed) examples reached here.  /* #neg=3.296 #pos=1.511 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.0698404101848255;  // std dev = 1,348, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.048654187963188794;  // std dev = 7,201, 323,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=65 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.030349569523035483;  // std dev = 5,188, 292,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=30 */
%   | | | else return -0.12175053818009991;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11787227488086734;  // std dev = 0,468, 4.767,000 (wgt'ed) examples reached here.  /* #neg=3.223 #pos=1.544 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0484763719754604;  // std dev = 6,169, 234,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=48 */
%   | | | else return -0.006844885836363544;  // std dev = 3,999, 123,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=19 */
%   | | else return -0.03207909459713103;  // std dev = 0,296, 309,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0970621639368788;  // std dev = 0,467, 4.781,000 (wgt'ed) examples reached here.  /* #neg=3.237 #pos=1.544 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.040646344062295586;  // std dev = 6,173, 236,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=48 */
%   | | | else return -0.01816404521688177;  // std dev = 4,030, 133,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.018136349477404078;  // std dev = 5,173, 278,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=30 */
%   | | | else return -0.10623529689714918;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,91e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.071428672392747;  // std dev = 0,464, 4.905,000 (wgt'ed) examples reached here.  /* #neg=3.361 #pos=1.544 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.06347958065261998;  // std dev = 0,276, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01317073696424246;  // std dev = 7,292, 362,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=65 */
%   | | | else return -0.010996430463732334;  // std dev = 5,156, 268,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=30 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1649536792127818;  // std dev = 2,988, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.025401496958152244;  // std dev = 3,474, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.046548115799243776;  // std dev = 5,077, 122,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
%   | | | else return 0.058631001943028185;  // std dev = 31,767, 4.674,000 (wgt'ed) examples reached here.  /* #neg=3.200 #pos=1.474 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.03219036432351707;  // std dev = 6,177, 237,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=48 */
%   | | | else return -0.013189752711697977;  // std dev = 4,023, 130,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=19 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.012174411539831098;  // std dev = 5,165, 271,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=30 */
%   | | | else return -0.09560700909003744;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2,86e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25809654775880897;  // std dev = 3,964, 63,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=33 */
%   | | | else return -0.19925648346310462;  // std dev = 1,935, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | else return 0.04411071934508289;  // std dev = 0,463, 4.825,000 (wgt'ed) examples reached here.  /* #neg=3.318 #pos=1.507 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.024786233036081184;  // std dev = 5,518, 194,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=38 */
%   | | | else return -0.012917507631202576;  // std dev = 4,940, 188,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.025106385797748616;  // std dev = 5,206, 311,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=30 */
%   | | | else return -0.08765377547818864;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.035329288237443496;  // std dev = 0,463, 4.946,000 (wgt'ed) examples reached here.  /* #neg=3.402 #pos=1.544 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.009877136930807641;  // std dev = 6,458, 308,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=50 */
%   | | | else return 0.04436324304618053;  // std dev = 3,658, 81,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | | else return -0.02719806682094378;  // std dev = 0,287, 330,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=30 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.028765038869138476;  // std dev = 0,463, 4.934,000 (wgt'ed) examples reached here.  /* #neg=3.390 #pos=1.544 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0076721441824595055;  // std dev = 6,455, 306,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=50 */
%   | | | else return 0.05221507275858175;  // std dev = 3,624, 76,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | else return -0.021529689857207945;  // std dev = 0,291, 320,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=30 */


Results
   AUC ROC   = 0.64125
   AUC PR    = 0.182245
   CLL	      = -0.309142
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 279.362 seconds
Total inference time: 10.566 seconds
AUC ROC: 0.64125


Results scoring model
   AUC ROC   = 0.630992
   AUC PR    = 0.191107
   CLL	      = -0.323484
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168272
   F1        = 0.288069


Total scoring time: 77.491 seconds
Refined model CLL: -0.323484


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.64125
   AUC PR    = 0.182245
   CLL	      = -0.309142
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 385.63300000000004 seconds
Total inference time: 10.566 seconds
AUC ROC: 0.64125
Total revision time: 385.63300000000004
Best scored revision CLL: -0.323484


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:11:54
{'AUC PR': 0.182245, 'AUC ROC': 0.64125, 'Precision': [1.0, 0.5], 'Inference time': 10.566, 'parameter_0.8': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.963, 'CLL': -0.32855, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 17.27}, 'CLL': -0.309142, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 385.63300000000004}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.32293766749387726;  // std dev = 4,203, 71,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | | | else return -0.05296217601159886;  // std dev = 1,909, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | else return 0.21600454065614969;  // std dev = 0,479, 5.111,000 (wgt'ed) examples reached here.  /* #neg=3.282 #pos=1.829 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( haswordvenue(A, J) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.009761838325318484;  // std dev = 6,315, 310,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=47 */
%   | | else if ( haswordtitle(I, L), haswordvenue(A, L) )
%   | | | then return 0.09758555481782223;  // std dev = 3,596, 71,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.04218329081410936;  // std dev = 0,300, 301,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=30 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8200518422048962;  // std dev = 0,123, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.1702303716032918;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.0902303716032918;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.2291871619929362;  // std dev = 3,485, 53,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | else return 0.193883130162487;  // std dev = 0,481, 5.037,000 (wgt'ed) examples reached here.  /* #neg=3.204 #pos=1.833 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then if ( haswordauthor(L, I) )
%   | | | then return -0.06304352664556095;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.02728232061301906;  // std dev = 6,304, 280,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=48 */
%   | | else return 0.05906745104765145;  // std dev = 0,409, 80,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | else return -0.034752466851113904;  // std dev = 0,303, 294,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=30 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15073936732282397;  // std dev = 0,476, 5.354,000 (wgt'ed) examples reached here.  /* #neg=3.478 #pos=1.876 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7930267307597292;  // std dev = 1,678, 51,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.14754768956545877;  // std dev = 0,076, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.07233094342279674;  // std dev = 1,676, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | | | else return 0.03589035136180052;  // std dev = 3,582, 81,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.019104871733829035;  // std dev = 5,157, 264,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=30 */
%   | | | else return -0.1327412353701923;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1327412353701923;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6292164397769161;  // std dev = 0,057, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.14784207644402333;  // std dev = 2,636, 44,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.05850735164362926;  // std dev = 3,376, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | else return 0.14270500504917258;  // std dev = 0,482, 4.994,000 (wgt'ed) examples reached here.  /* #neg=3.161 #pos=1.833 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6635867904912837;  // std dev = 1,677, 51,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.13003535439301586;  // std dev = 0,075, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.07592787070625148;  // std dev = 1,687, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | | | else return 0.00642158591181089;  // std dev = 3,634, 93,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
%   | else return -0.033452129340580575;  // std dev = 0,295, 312,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10749460500426479;  // std dev = 0,478, 5.239,000 (wgt'ed) examples reached here.  /* #neg=3.363 #pos=1.876 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return 0.06494598282316452;  // std dev = 0,965, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.013317484605456674;  // std dev = 4,642, 192,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=35 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.006076879706066341;  // std dev = 3,469, 161,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
%   | | | else return -0.04953201856677613;  // std dev = 0,958, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.020746128625180948;  // std dev = 5,003, 264,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=28 */
%   | | | else return 0.01863431808352061;  // std dev = 1,305, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return -0.11474848842901787;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08751877698699242;  // std dev = 0,478, 5.230,000 (wgt'ed) examples reached here.  /* #neg=3.354 #pos=1.876 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.11052019525151097;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.02378906304574938;  // std dev = 1,343, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.02121310594890877;  // std dev = 4,327, 231,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=48 */
%   | | | else return 4.490987213000474E-4;  // std dev = 3,748, 107,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.02399596534895681;  // std dev = 5,019, 278,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=28 */
%   | | | else return -0.04645787959457064;  // std dev = 1,351, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else return -0.10359738129913443;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.27936151632838624;  // std dev = 2,870, 36,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | | else return 0.0714750661647083;  // std dev = 2,986, 40,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.45725554075600616;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16894609110781214;  // std dev = 1,931, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | else return 0.07296562316787143;  // std dev = 0,480, 5.059,000 (wgt'ed) examples reached here.  /* #neg=3.230 #pos=1.829 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.7408804039557741;  // std dev = 2,287, 54,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.1298147511372811;  // std dev = 0,298, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | | else return -0.027093465026709514;  // std dev = 0,256, 141,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=20 */
%   | else return -0.022450161393776938;  // std dev = 0,251, 204,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=29 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04751250296391205;  // std dev = 0,475, 5.338,000 (wgt'ed) examples reached here.  /* #neg=3.462 #pos=1.876 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.44002990924435276;  // std dev = 2,457, 54,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=47 */
%   | | | else return -0.11545993361803919;  // std dev = 0,067, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return -0.01330152202736715;  // std dev = 3,367, 121,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=19 */
%   | | | else return -0.07170292533185135;  // std dev = 0,975, 21,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.02506259849598604;  // std dev = 4,463, 286,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=28 */
%   | | | else return -0.01283167501730722;  // std dev = 1,330, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.09246305191422968;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05054197072999567;  // std dev = 0,479, 5.145,000 (wgt'ed) examples reached here.  /* #neg=3.269 #pos=1.876 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.06581683569887596;  // std dev = 0,168, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, H), haswordvenue(B, H) )
%   | | | then return 0.006944018445875612;  // std dev = 3,941, 179,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=35 */
%   | | | else return -0.016317739724233712;  // std dev = 4,643, 292,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=30 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.022820551419265686;  // std dev = 3,209, 173,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=29 */
%   | | | else return -0.08499102545713617;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02472410215451174;  // std dev = 0,475, 4.885,000 (wgt'ed) examples reached here.  /* #neg=3.176 #pos=1.709 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.651379769248315;  // std dev = 2,383, 87,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=82 */
%   | | | else return -0.11855101029500578;  // std dev = 1,207, 334,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.19793840635927534;  // std dev = 0,310, 220,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=24 */
%   | | else if ( haswordtitle(D, H), haswordauthor(I, H) )
%   | | | then return 0.3241372632412099;  // std dev = 3,968, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | | else return 0.07620119103566406;  // std dev = 3,460, 111,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then return 0.05919155977482652;  // std dev = 0,306, 211,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=53 */
%   | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | then return 0.5949444889573423;  // std dev = 0,271, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return -0.07861038031282176;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.703508
   AUC PR    = 0.111153
   CLL	      = -0.336836
   Precision = 0.714286 at threshold = 0.5
   Recall    = 0.063636
   F1        = 0.116861


Total learning time: 2199.206 seconds
Total inference time: 28.635 seconds
AUC ROC: 0.703508


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 08:49:02
{'AUC PR': 0.111153, 'AUC ROC': 0.703508, 'Precision': [0.714286, 0.5], 'Inference time': 28.635, 'CLL': -0.336836, 'Recall': 0.063636, 'Learning time': 2199.206, 'F1': 0.116861}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2111786678808395;  // std dev = 0,478, 5.314,000 (wgt'ed) examples reached here.  /* #neg=3.438 #pos=1.876 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.05489454316135737;  // std dev = 1,351, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.08456402943913367;  // std dev = 5,277, 159,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=36 */
%   | | | else return 0.036063045528959455;  // std dev = 4,883, 163,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.037761845569633044;  // std dev = 5,009, 269,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=28 */
%   | | | else return -0.07042249347191638;  // std dev = 1,363, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.571952
   AUC PR    = 0.01793
   CLL	      = -0.202549
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 40.212 seconds
Total inference time: 4.344 seconds
AUC ROC: 0.571952


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 08:49:48
{'AUC PR': 0.01793, 'AUC ROC': 0.571952, 'Precision': [nan, 0.5], 'Inference time': 4.344, 'CLL': -0.202549, 'Recall': 0.0, 'Learning time': 40.212, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,72e-06, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.15254480725086159;  // std dev = 38,070, 6.977,000 (wgt'ed) examples reached here.  /* #neg=4.923 #pos=2.054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.13395886812068047;  // std dev = 38,042, 6.953,000 (wgt'ed) examples reached here.  /* #neg=4.899 #pos=2.054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.11614245717967027;  // std dev = 38,011, 6.926,000 (wgt'ed) examples reached here.  /* #neg=4.872 #pos=2.054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.0971757038532359;  // std dev = 38,042, 6.953,000 (wgt'ed) examples reached here.  /* #neg=4.899 #pos=2.054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07854094221846347;  // std dev = 38,116, 7.018,000 (wgt'ed) examples reached here.  /* #neg=4.964 #pos=2.054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4,42e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.06645234346647955;  // std dev = 38,078, 6.984,000 (wgt'ed) examples reached here.  /* #neg=4.930 #pos=2.054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.05234242816601799;  // std dev = 38,137, 7.037,000 (wgt'ed) examples reached here.  /* #neg=4.983 #pos=2.054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7,30e-08, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.04443062919496068;  // std dev = 38,090, 6.995,000 (wgt'ed) examples reached here.  /* #neg=4.941 #pos=2.054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.0387794215764913;  // std dev = 38,016, 6.930,000 (wgt'ed) examples reached here.  /* #neg=4.876 #pos=2.054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.03065332887093495;  // std dev = 38,033, 6.945,000 (wgt'ed) examples reached here.  /* #neg=4.891 #pos=2.054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.328632
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 24.173 seconds
Total inference time: 3.98 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.325243
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 13.809 seconds
Parameter learned model CLL: -0.325243


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.07, 4923, 2054], 'true': [1.72e-06, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.042, 4899, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.011, 4872, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.042, 4899, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.116, 4964, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.078, 4930, 2054], 'true': [4.42e-07, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.137, 4983, 2054], 'true': [2.46e-07, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.09, 4941, 2054], 'true': [7.3e-08, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.016, 4876, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.033, 4891, 2054], 'true': [0.0, 0, 413]}]]
[{'': [7.157040631385029e-15, 0.20772694261153377]}, {'': [-5.4365981719174735e-15, 0.20814377167696982]}, {'': [-1.3419451183846928e-15, 0.20861366090385378]}, {'': [-2.1677574989291194e-15, 0.2081437716769201]}, {'': [-1.4623760905474218e-15, 0.20701674909790804]}, {'': [4.731216763535776e-16, 0.20760552019411763]}, {'': [1.4623760905474217e-16, 0.20668845760133514]}, {'': [1.2903318446006663e-17, 0.20741485417181998]}, {'': [-3.5699181033951763e-16, 0.2085439844746369]}, {'': [-3.4193793881917656e-16, 0.20828289330811317]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,72e-06, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1772522810695088;  // std dev = 0,466, 6.067,000 (wgt'ed) examples reached here.  /* #neg=4.131 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.027547842203337742;  // std dev = 7,176, 366,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=62 */
%   | | | else return 0.08542166237223947;  // std dev = 3,931, 88,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=20 */
%   | | else return -0.045336319592177245;  // std dev = 0,295, 373,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14677842513604428;  // std dev = 0,463, 6.213,000 (wgt'ed) examples reached here.  /* #neg=4.277 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.056827397011534234;  // std dev = 6,802, 287,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=58 */
%   | | | else return 0.008506391942315476;  // std dev = 4,490, 151,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03806074121711825;  // std dev = 5,697, 366,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=36 */
%   | | | else return -0.13642139695482336;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.131496207306244;  // std dev = 0,466, 6.097,000 (wgt'ed) examples reached here.  /* #neg=4.161 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.031620548753710905;  // std dev = 1,630, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.038044160210802376;  // std dev = 7,994, 415,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=79 */
%   | | else return -0.027126861809199095;  // std dev = 0,306, 344,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2807245765048331;  // std dev = 4,471, 80,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=39 */
%   | | | else return -0.11467016033727327;  // std dev = 2,521, 76,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=7 */
%   | | else return 0.10885583902987668;  // std dev = 0,465, 5.988,000 (wgt'ed) examples reached here.  /* #neg=4.098 #pos=1.890 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.002297351700215413;  // std dev = 7,220, 392,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=62 */
%   | | | else return 0.05176998070430469;  // std dev = 3,972, 95,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.03292200360931396;  // std dev = 5,705, 375,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=36 */
%   | | | else return -0.11827324968846348;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.085888347743214;  // std dev = 0,463, 6.222,000 (wgt'ed) examples reached here.  /* #neg=4.286 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03242401322891681;  // std dev = 6,852, 305,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=58 */
%   | | | else return -0.003703299051470425;  // std dev = 4,491, 154,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=24 */
%   | | else return -0.02633084756530398;  // std dev = 0,298, 365,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4,42e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07865399727062669;  // std dev = 0,466, 6.067,000 (wgt'ed) examples reached here.  /* #neg=4.131 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.04804726942357152;  // std dev = 6,766, 276,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=58 */
%   | | | else return 0.008915647214238024;  // std dev = 4,458, 143,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.022412865536954006;  // std dev = 5,692, 360,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=36 */
%   | | | else return -0.10400566928560935;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.060095709620370884;  // std dev = 0,464, 6.140,000 (wgt'ed) examples reached here.  /* #neg=4.204 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.04028343059177105;  // std dev = 6,036, 224,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=46 */
%   | | | else return 0.00551577725383808;  // std dev = 5,455, 208,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=36 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.025038594411760425;  // std dev = 5,708, 379,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=36 */
%   | | | else return -0.09470497560219028;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7,30e-08, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.045791530605539095;  // std dev = 0,463, 6.193,000 (wgt'ed) examples reached here.  /* #neg=4.257 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.06958539471422207;  // std dev = 1,665, 37,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.028393080052099784;  // std dev = 7,947, 397,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=79 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.015133174448273582;  // std dev = 5,685, 352,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=36 */
%   | | | else return -0.08689111742623257;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17873960188137833;  // std dev = 3,570, 51,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=25 */
%   | | | else return -0.05876232534134345;  // std dev = 3,999, 101,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=21 */
%   | | else return 0.03973781906342604;  // std dev = 0,465, 5.989,000 (wgt'ed) examples reached here.  /* #neg=4.099 #pos=1.890 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.001950379561857181;  // std dev = 7,164, 365,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=62 */
%   | | | else return 0.041160020969223464;  // std dev = 3,952, 92,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=20 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.016399318352551765;  // std dev = 5,694, 362,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=36 */
%   | | | else return -0.0802400136435302;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.028501525882380977;  // std dev = 0,463, 6.200,000 (wgt'ed) examples reached here.  /* #neg=4.264 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.030624741907107924;  // std dev = 1,637, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return -0.17150771837420636;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.016971329577548964;  // std dev = 8,268, 638,000 (wgt'ed) examples reached here.  /* #neg=559 #pos=79 */
%   | | | else return 3.035667682718489E-4;  // std dev = 5,449, 216,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=36 */


Results
   AUC ROC   = 0.627285
   AUC PR    = 0.181022
   CLL	      = -0.309233
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 295.223 seconds
Total inference time: 7.935 seconds
AUC ROC: 0.627285


Results scoring model
   AUC ROC   = 0.627669
   AUC PR    = 0.190209
   CLL	      = -0.323205
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 61.741 seconds
Refined model CLL: -0.323205


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.627285
   AUC PR    = 0.181022
   CLL	      = -0.309233
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 394.946 seconds
Total inference time: 7.935 seconds
AUC ROC: 0.627285
Total revision time: 394.946
Best scored revision CLL: -0.323205


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:56:37
{'AUC PR': 0.181022, 'AUC ROC': 0.627285, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.98, 'CLL': -0.328632, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 24.173}, 'Inference time': 7.935, 'CLL': -0.309233, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 394.946}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22025776815022396;  // std dev = 0,481, 6.487,000 (wgt'ed) examples reached here.  /* #neg=4.138 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return -0.05613677918620208;  // std dev = 0,280, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | else if ( haswordtitle(E, G), haswordvenue(A, G) )
%   | | | then return 0.047576247874842076;  // std dev = 5,904, 227,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=43 */
%   | | | else return 0.018148935099511435;  // std dev = 5,499, 225,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=36 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.03882076187018517;  // std dev = 5,522, 330,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=34 */
%   | | | else return -0.07042249347191638;  // std dev = 1,363, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.3973498268056819;  // std dev = 3,286, 44,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   | | | else return 0.2736124530683082;  // std dev = 3,333, 45,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | | else return -0.03749865804280236;  // std dev = 0,340, 90,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=12 */
%   | else return 0.18623297201375183;  // std dev = 0,479, 6.419,000 (wgt'ed) examples reached here.  /* #neg=4.127 #pos=2.292 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.7751632385346959;  // std dev = 2,142, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | | else return -0.1451617350015676;  // std dev = 0,037, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
%   | | else if ( title(L, I), venue(L, B) )
%   | | | then return -0.14407471553876092;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.011664313102583958;  // std dev = 4,495, 153,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=24 */
%   | else return -0.033203763757485114;  // std dev = 0,304, 349,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7197625613173035;  // std dev = 0,283, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.2059913499026376;  // std dev = 4,695, 91,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=39 */
%   | | | else return -0.07584214702887036;  // std dev = 2,524, 78,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=7 */
%   | else return 0.1559506471863817;  // std dev = 0,478, 6.460,000 (wgt'ed) examples reached here.  /* #neg=4.168 #pos=2.292 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6088716662092615;  // std dev = 2,649, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | | else return -0.12804388621757787;  // std dev = 0,027, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.06407389456870045;  // std dev = 2,149, 67,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=5 */
%   | | | else return 0.02354438802401984;  // std dev = 3,964, 110,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=19 */
%   | else return -0.03874036065153713;  // std dev = 0,292, 383,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.632900076328435;  // std dev = 0,033, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.18730221155729943;  // std dev = 4,616, 87,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=39 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.7104310228440507;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.06676322599061423;  // std dev = 2,526, 79,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=7 */
%   | else return 0.12463556739244752;  // std dev = 0,477, 6.558,000 (wgt'ed) examples reached here.  /* #neg=4.266 #pos=2.292 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then if ( haswordtitle(J, L), haswordauthor(M, L) )
%   | | | then return -0.03235071273532873;  // std dev = 2,042, 50,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | | | else return 0.04406674452735384;  // std dev = 4,848, 186,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=40 */
%   | | else return -0.0015300584790902455;  // std dev = 0,270, 226,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=36 */
%   | else return -0.031695813489110956;  // std dev = 0,295, 373,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11847099617419098;  // std dev = 0,481, 6.421,000 (wgt'ed) examples reached here.  /* #neg=4.072 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.051085447887947014;  // std dev = 1,082, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.008318393987569842;  // std dev = 5,207, 334,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=59 */
%   | | else return 0.04194147099551641;  // std dev = 0,397, 99,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=20 */
%   | else return -0.027547682167639594;  // std dev = 0,296, 370,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6705845861433252;  // std dev = 1,042, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return -0.27003361200484927;  // std dev = 4,21e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.19860504057627784;  // std dev = 1,363, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.06556021261788544;  // std dev = 4,050, 79,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
%   | else return 0.08728613963785117;  // std dev = 0,478, 6.425,000 (wgt'ed) examples reached here.  /* #neg=4.133 #pos=2.292 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then return -2.73214854050701E-4;  // std dev = 0,282, 365,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=62 */
%   | | else if ( haswordtitle(J, M), haswordvenue(A, M) )
%   | | | then return 0.019055218984761996;  // std dev = 3,992, 108,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=20 */
%   | | | else return -0.1536532180130736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.025683455752671003;  // std dev = 0,294, 375,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordtitle(G, C) )
%   | | | then return 0.1512130357758854;  // std dev = 1,173, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.5007540236631843;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.1457222305764291;  // std dev = 2,881, 53,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | | else return -0.007434707031721445;  // std dev = 3,984, 84,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | else return 0.0720185516668994;  // std dev = 0,479, 6.382,000 (wgt'ed) examples reached here.  /* #neg=4.090 #pos=2.292 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then return 0.004233475403027691;  // std dev = 0,289, 348,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=62 */
%   | | else return 0.029698913450711708;  // std dev = 0,394, 101,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=20 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.02074651133332987;  // std dev = 0,298, 365,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=36 */
%   | | else return -0.10922108440617008;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.3644269415204411;  // std dev = 0,056, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.07270965164695617;  // std dev = 4,682, 90,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=39 */
%   | | | else return -0.08217369832363706;  // std dev = 2,506, 68,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.11867910018777421;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | | else return -0.002656574170872203;  // std dev = 3,975, 83,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   | | else return 0.05841938799033595;  // std dev = 0,480, 6.222,000 (wgt'ed) examples reached here.  /* #neg=3.976 #pos=2.246 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | then return 0.008150958834438683;  // std dev = 0,333, 253,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=46 */
%   | | else return -0.010629329355427873;  // std dev = 0,281, 221,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=36 */
%   | else return -0.013997831263222751;  // std dev = 0,303, 351,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03418641282624766;  // std dev = 0,474, 6.134,000 (wgt'ed) examples reached here.  /* #neg=3.995 #pos=2.139 */
%   | | else return 0.03655422495518469;  // std dev = 0,365, 534,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=101 */
%   | else if ( title(F, D), venue(F, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.10594214840219732;  // std dev = 4,711, 133,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=28 */
%   | | | else return -0.059306640139472795;  // std dev = 0,668, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.38929052509043904;  // std dev = 4,452, 95,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=68 */
%   | | | else return 0.11560130277678912;  // std dev = 3,607, 102,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then return 0.4587750340648536;  // std dev = 0,417, 40,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=31 */
%   | | else return 0.684974488439586;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.011728574960783009;  // std dev = 0,265, 242,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03320144853997056;  // std dev = 0,476, 6.036,000 (wgt'ed) examples reached here.  /* #neg=3.897 #pos=2.139 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7272273719752124;  // std dev = 2,356, 104,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=98 */
%   | | | else return -0.13590998701247556;  // std dev = 1,167, 380,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.19769855561316307;  // std dev = 4,950, 225,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=28 */
%   | | | else return -0.05941372842616724;  // std dev = 1,356, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.23657009978387503;  // std dev = 4,869, 105,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=68 */
%   | | | else return 0.04571401155291103;  // std dev = 3,698, 134,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=33 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return 0.06299499382709253;  // std dev = 0,319, 260,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=67 */
%   | else return 0.367999861587847;  // std dev = 0,268, 40,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */


Results
   AUC ROC   = 0.670611
   AUC PR    = 0.112484
   CLL	      = -0.341054
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.06
   F1        = 0.111111


Total learning time: 4079.226 seconds
Total inference time: 24.972 seconds
AUC ROC: 0.670611


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 10:05:01
{'AUC PR': 0.112484, 'AUC ROC': 0.670611, 'Precision': [0.75, 0.5], 'Inference time': 24.972, 'CLL': -0.341054, 'Recall': 0.06, 'Learning time': 4079.226, 'F1': 0.111111}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3224346493852258;  // std dev = 4,571, 84,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=39 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.03415875720818001;  // std dev = 2,499, 65,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
%   | else return 0.21989135934193138;  // std dev = 0,481, 6.336,000 (wgt'ed) examples reached here.  /* #neg=4.044 #pos=2.292 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then if ( haswordtitle(J, L), haswordauthor(M, L) )
%   | | | then return 0.011995088945666163;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | | else return 0.09344305274657004;  // std dev = 5,531, 170,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=40 */
%   | | else if ( title(N, J), venue(N, A) )
%   | | | then return 0.035232268432844736;  // std dev = 5,290, 192,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=34 */
%   | | | else return -0.03658790700575096;  // std dev = 1,338, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else if ( haswordvenue(A, P), haswordtitle(Q, P) )
%   | | then if ( title(R, Q), venue(R, B) )
%   | | | then return -0.03882076187018517;  // std dev = 5,522, 330,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=34 */
%   | | | else return -0.07733493586822972;  // std dev = 1,368, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.576896
   AUC PR    = 0.03243
   CLL	      = -0.203012
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 79.504 seconds
Total inference time: 5.937 seconds
AUC ROC: 0.576896


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 10:06:28
{'AUC PR': 0.03243, 'AUC ROC': 0.576896, 'Precision': [nan, 0.5], 'Inference time': 5.937, 'CLL': -0.203012, 'Recall': 0.0, 'Learning time': 79.504, 'F1': nan}


