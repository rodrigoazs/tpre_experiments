Starting experiment #1 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1418510649004891;  // std dev = 0,000, 703,000 (wgt'ed) examples reached here.  /* #neg=703 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.12544463852839235;  // std dev = 0,000, 685,000 (wgt'ed) examples reached here.  /* #neg=685 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360626;  // std dev = 5,05e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.11231637819360656;  // std dev = 0,000, 695,000 (wgt'ed) examples reached here.  /* #neg=695 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783626;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.10159632948783522;  // std dev = 4,19e-07, 675,000 (wgt'ed) examples reached here.  /* #neg=675 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926185;  // std dev = 0,000, 751,000 (wgt'ed) examples reached here.  /* #neg=751 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839675;  // std dev = 1,30e-07, 695,000 (wgt'ed) examples reached here.  /* #neg=695 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0787767547310917;  // std dev = 2,79e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07877675473109276;  // std dev = 0,000, 701,000 (wgt'ed) examples reached here.  /* #neg=701 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.0732462257633366;  // std dev = 2,12e-07, 647,000 (wgt'ed) examples reached here.  /* #neg=647 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.06842697784420251;  // std dev = 1,87e-07, 692,000 (wgt'ed) examples reached here.  /* #neg=692 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06419184008202529;  // std dev = 2,53e-07, 743,000 (wgt'ed) examples reached here.  /* #neg=743 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 218007

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 31946

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995117;  // std dev = 1,69e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.14783147478204706;  // std dev = 17,639, 1.512,000 (wgt'ed) examples reached here.  /* #neg=1.074 #pos=438 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.13795608662666878;  // std dev = 17,525, 1.466,000 (wgt'ed) examples reached here.  /* #neg=1.028 #pos=438 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,95e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.10841240331608731;  // std dev = 17,650, 1.517,000 (wgt'ed) examples reached here.  /* #neg=1.079 #pos=438 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831;  // std dev = 1,93e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.09904859963329411;  // std dev = 17,561, 1.480,000 (wgt'ed) examples reached here.  /* #neg=1.042 #pos=438 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.07799894611959907;  // std dev = 17,622, 1.505,000 (wgt'ed) examples reached here.  /* #neg=1.067 #pos=438 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.07504544179313188;  // std dev = 17,492, 1.453,000 (wgt'ed) examples reached here.  /* #neg=1.015 #pos=438 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253576;  // std dev = 1,07e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.05083103572449232;  // std dev = 17,627, 1.507,000 (wgt'ed) examples reached here.  /* #neg=1.069 #pos=438 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9,42e-08, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.04124952404999581;  // std dev = 17,629, 1.508,000 (wgt'ed) examples reached here.  /* #neg=1.070 #pos=438 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367125;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.04197735576640383;  // std dev = 17,523, 1.465,000 (wgt'ed) examples reached here.  /* #neg=1.027 #pos=438 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 6,14e-08, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.027880837664548432;  // std dev = 17,598, 1.495,000 (wgt'ed) examples reached here.  /* #neg=1.057 #pos=438 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.32327
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.253 seconds
Total inference time: 3.917 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.586011
   AUC PR    = 0.19089
   CLL	      = -0.324937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.172023
   F1        = 0.293548


Total scoring time: 4.92 seconds
Parameter learned model CLL: -0.324937


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.639, 1074, 438], 'true': [1.69e-07, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.525, 1028, 438], 'true': [2.8e-07, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.65, 1079, 438], 'true': [3.95e-07, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.561, 1042, 438], 'true': [1.93e-07, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.622, 1067, 438], 'true': [0.0, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.492, 1015, 438], 'true': [0.0, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.627, 1069, 438], 'true': [1.07e-07, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.629, 1070, 438], 'true': [9.42e-08, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.523, 1027, 438], 'true': [0.0, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.598, 1057, 438], 'true': [6.14e-08, 0, 91]}]]
[{'': [3.123264772571869e-16, 0.20576656588559594]}, {'': [8.58897812457264e-16, 0.20950736009858073]}, {'': [1.717795624914528e-15, 0.20536403728520583]}, {'': [4.099285014000578e-16, 0.2083619430240899]}, {'': [-3.5136728691433524e-16, 0.20633149744483484]}, {'': [-3.9040809657148365e-17, 0.21057602539588616]}, {'': [1.2688263138573217e-16, 0.20616992411877302]}, {'': [9.76020241428709e-17, 0.2060891865840129]}, {'': [-8.296172052144027e-17, 0.20958939533366067]}, {'': [4.1480860260720135e-17, 0.20714130714421294]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995117;  // std dev = 1,69e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15959821046182623;  // std dev = 0,459, 1.380,000 (wgt'ed) examples reached here.  /* #neg=964 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.02781597718118942;  // std dev = 3,394, 114,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=13 */
%   | | else return -0.04507687135210061;  // std dev = 0,296, 62,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16284370634363207;  // std dev = 0,468, 1.279,000 (wgt'ed) examples reached here.  /* #neg=863 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.20554706380927218;  // std dev = 0,476, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0181278479663551;  // std dev = 3,311, 83,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=13 */
%   | | | else return -0.042701965590864796;  // std dev = 2,332, 64,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,95e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12745647228970794;  // std dev = 0,464, 1.328,000 (wgt'ed) examples reached here.  /* #neg=912 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return -0.14067582236339424;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06577591794648138;  // std dev = 0,966, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.015641816155771805;  // std dev = 3,583, 114,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=15 */
%   | | | else return -0.03253230317051151;  // std dev = 2,327, 60,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831;  // std dev = 1,93e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.356646239841977;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return -0.07252042682468944;  // std dev = 1,862, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else return 0.10948270306575715;  // std dev = 0,465, 1.278,000 (wgt'ed) examples reached here.  /* #neg=875 #pos=403 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.12398744043087784;  // std dev = 1,412, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -2.516735877772915E-4;  // std dev = 3,348, 94,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12416626538685804;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.03921494730940852;  // std dev = 2,342, 66,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.49876469677842433;  // std dev = 1,386, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return -0.12215984508579582;  // std dev = 1,953, 46,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=4 */
%   | | else return 0.07047787060578282;  // std dev = 0,456, 1.367,000 (wgt'ed) examples reached here.  /* #neg=964 #pos=403 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.005514814118760795;  // std dev = 3,022, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
%   | | | else return 0.061805699068681295;  // std dev = 1,999, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.15299814883243718;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.026546777314688644;  // std dev = 2,327, 62,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.33459907935217764;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.0965038412569397;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.07349785180554708;  // std dev = 0,462, 1.293,000 (wgt'ed) examples reached here.  /* #neg=891 #pos=402 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.10272896511308945;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.011565503897928561;  // std dev = 3,361, 102,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=13 */
%   | | | else return -0.029400522527712754;  // std dev = 2,335, 66,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253576;  // std dev = 1,07e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05990883907161763;  // std dev = 0,463, 1.332,000 (wgt'ed) examples reached here.  /* #neg=916 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.018296140805535325;  // std dev = 3,502, 97,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=15 */
%   | | | else return -0.05260556946212807;  // std dev = 1,353, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else return -0.014176781639817445;  // std dev = 0,327, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9,42e-08, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05213965406147554;  // std dev = 0,463, 1.321,000 (wgt'ed) examples reached here.  /* #neg=905 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.022807104676784287;  // std dev = 3,055, 88,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
%   | | | else return 0.09093445452122703;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return -0.026130705308206194;  // std dev = 0,292, 64,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367125;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20670917077793155;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.008628300197148395;  // std dev = 2,072, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return 0.03940894388484778;  // std dev = 0,462, 1.289,000 (wgt'ed) examples reached here.  /* #neg=887 #pos=402 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.13618548442682116;  // std dev = 0,477, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.06493808516251827;  // std dev = 0,966, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.02218292878006399;  // std dev = 3,993, 167,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 6,14e-08, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.021640459419510726;  // std dev = 16,187, 1.249,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=379 */
%   | | | else return 0.06105505418630108;  // std dev = 3,144, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else if ( haswordtitle(E, G), haswordvenue(B, G) )
%   | | | then return 0.11053016529755944;  // std dev = 3,476, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.036206132613322395;  // std dev = 3,048, 74,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.49792374105498816;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.2169692263865375;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.011237909057373536;  // std dev = 2,070, 36,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */


Results
   AUC ROC   = 0.696895
   AUC PR    = 0.289143
   CLL	      = -0.292297
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 97.446 seconds
Total inference time: 11.918 seconds
AUC ROC: 0.696895


Results scoring model
   AUC ROC   = 0.647809
   AUC PR    = 0.210267
   CLL	      = -0.318539
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.172023
   F1        = 0.293548


Total scoring time: 39.326 seconds
Refined model CLL: -0.318539


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.696895
   AUC PR    = 0.289143
   CLL	      = -0.292297
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 145.945 seconds
Total inference time: 11.918 seconds
AUC ROC: 0.696895
Total revision time: 145.945
Best scored revision CLL: -0.318539


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:53:18
{'AUC PR': 0.289143, 'AUC ROC': 0.696895, 'Precision': [1.0, 0.5], 'Inference time': 11.918, 'CLL': -0.292297, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 145.945, 'parameter_0.2': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.917, 'CLL': -0.32327, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 4.253}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.31968739663797385;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.4581489350995123;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.04862512557570276;  // std dev = 1,799, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else return 0.20874065107583878;  // std dev = 0,477, 1.352,000 (wgt'ed) examples reached here.  /* #neg=878 #pos=474 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then return -0.005098928148350896;  // std dev = 0,344, 117,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=16 */
%   | else return -0.04507687135210061;  // std dev = 0,296, 62,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19128956222741522;  // std dev = 0,479, 1.403,000 (wgt'ed) examples reached here.  /* #neg=896 #pos=507 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.15876849149802724;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.03596835060723578;  // std dev = 2,675, 76,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=8 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.058768491498027264;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return -0.14123150850197266;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.05426018476894698;  // std dev = 0,275, 73,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16510313365535548;  // std dev = 0,479, 1.394,000 (wgt'ed) examples reached here.  /* #neg=887 #pos=507 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.17172781482291988;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.019278057464985843;  // std dev = 2,657, 68,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | | | else return 0.10266719461807339;  // std dev = 1,934, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else return -0.0392744340149518;  // std dev = 0,287, 66,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13924588278843375;  // std dev = 0,479, 1.389,000 (wgt'ed) examples reached here.  /* #neg=882 #pos=507 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return 0.12495843492141676;  // std dev = 0,451, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, H), haswordauthor(I, H) )
%   | | | then return -0.0371018296723431;  // std dev = 2,687, 82,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=8 */
%   | | | else return 0.011320661922474518;  // std dev = 2,032, 29,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.04129343591872965;  // std dev = 2,344, 71,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=6 */
%   | | | else return -0.1258004781722508;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6421208034429519;  // std dev = 0,035, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.08778823690844359;  // std dev = 1,828, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.27348920534432025;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return 0.09439543427584238;  // std dev = 0,475, 1.412,000 (wgt'ed) examples reached here.  /* #neg=925 #pos=487 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then return 0.1274047843580928;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.14019720029916868;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return -0.058119995370856714;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.015032501945219722;  // std dev = 3,363, 112,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=13 */
%   | | | else return -0.023200723068323582;  // std dev = 2,112, 47,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09316467376096171;  // std dev = 0,477, 1.396,000 (wgt'ed) examples reached here.  /* #neg=889 #pos=507 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.07245740255499929;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.01832693828049723;  // std dev = 2,670, 73,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=8 */
%   | | else return 0.07815452587575396;  // std dev = 0,425, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else return -0.03389159024646901;  // std dev = 0,280, 70,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07220289920131424;  // std dev = 0,478, 1.402,000 (wgt'ed) examples reached here.  /* #neg=895 #pos=507 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.009471096104862667;  // std dev = 0,433, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.006953517910208958;  // std dev = 2,484, 59,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=7 */
%   | | | else return -0.03752900067078813;  // std dev = 2,279, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.11185650174557923;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.02230606833339731;  // std dev = 0,291, 64,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.051280607121665295;  // std dev = 0,476, 1.425,000 (wgt'ed) examples reached here.  /* #neg=918 #pos=507 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.04327576266255894;  // std dev = 2,791, 56,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | | else return -0.1060281325071773;  // std dev = 1,013, 38,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
%   | | else return 0.09775689771956125;  // std dev = 0,439, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else return -0.042943082630710186;  // std dev = 0,256, 85,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordvenue(B, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.6515589936595928;  // std dev = 3,605, 463,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=450 */
%   | | | else return -0.30141865463508954;  // std dev = 3,169, 912,000 (wgt'ed) examples reached here.  /* #neg=902 #pos=10 */
%   | | else if ( title(G, D), venue(G, B) )
%   | | | then return -0.2443937702714818;  // std dev = 1,671, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | | else return 0.3677750547898508;  // std dev = 2,472, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | else if ( title(H, D), venue(H, B) )
%   | | then if ( title(I, D), venue(I, A) )
%   | | | then return 0.6420247607611982;  // std dev = 1,670, 28,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return -0.13109729572609605;  // std dev = 0,958, 82,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=1 */
%   | | else return 0.008668327291006354;  // std dev = 0,340, 45,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then return 0.5048475746049917;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return -0.014124135120086185;  // std dev = 0,317, 44,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.024420064095138538;  // std dev = 0,383, 1.425,000 (wgt'ed) examples reached here.  /* #neg=918 #pos=507 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return -0.1090127406246864;  // std dev = 0,068, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.007578438162543137;  // std dev = 0,327, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return -0.020496042064951252;  // std dev = 2,787, 84,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=10 */
%   | | | else return 0.07848999948794;  // std dev = 1,646, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return -0.01347538582299591;  // std dev = 0,272, 63,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */


Results
   AUC ROC   = 0.913544
   AUC PR    = 0.381258
   CLL	      = -0.262151
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.008152
   F1        = 0.016043


Total learning time: 589.3340000000001 seconds
Total inference time: 19.397 seconds
AUC ROC: 0.913544


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 01:03:27
{'AUC PR': 0.381258, 'AUC ROC': 0.913544, 'Precision': [0.5, 0.5], 'Inference time': 19.397, 'CLL': -0.262151, 'Recall': 0.008152, 'Learning time': 589.3340000000001, 'F1': 0.016043}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22003330340785857;  // std dev = 0,481, 1.401,000 (wgt'ed) examples reached here.  /* #neg=894 #pos=507 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.13087620782678497;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.050941973991396765;  // std dev = 3,015, 110,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=10 */
%   | | | else return -0.024204006076958332;  // std dev = 1,879, 34,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | else return -0.01027211753206666;  // std dev = 0,338, 38,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */


Results
   AUC ROC   = 0.597313
   AUC PR    = 0.014198
   CLL	      = -0.195917
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 11.183 seconds
Total inference time: 3.186 seconds
AUC ROC: 0.597313


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 01:03:42
{'AUC PR': 0.014198, 'AUC ROC': 0.597313, 'Precision': [nan, 0.5], 'Inference time': 3.186, 'CLL': -0.195917, 'Recall': 0.0, 'Learning time': 11.183, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1,04e-06, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.15841793308202234;  // std dev = 24,997, 2.974,000 (wgt'ed) examples reached here.  /* #neg=2.081 #pos=893 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.13882898872156155;  // std dev = 24,983, 2.966,000 (wgt'ed) examples reached here.  /* #neg=2.073 #pos=893 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,59e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.11664693645053137;  // std dev = 25,026, 2.990,000 (wgt'ed) examples reached here.  /* #neg=2.097 #pos=893 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4,30e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.09420382059668872;  // std dev = 25,105, 3.035,000 (wgt'ed) examples reached here.  /* #neg=2.142 #pos=893 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3,72e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.07754415860949733;  // std dev = 25,125, 3.047,000 (wgt'ed) examples reached here.  /* #neg=2.154 #pos=893 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.06784550480634219;  // std dev = 25,060, 3.009,000 (wgt'ed) examples reached here.  /* #neg=2.116 #pos=893 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2,70e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.049942463690914075;  // std dev = 25,161, 3.068,000 (wgt'ed) examples reached here.  /* #neg=2.175 #pos=893 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.04135163902855358;  // std dev = 25,149, 3.061,000 (wgt'ed) examples reached here.  /* #neg=2.168 #pos=893 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.04448760955871332;  // std dev = 24,954, 2.950,000 (wgt'ed) examples reached here.  /* #neg=2.057 #pos=893 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.0339378436811693;  // std dev = 24,988, 2.969,000 (wgt'ed) examples reached here.  /* #neg=2.076 #pos=893 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.327206
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 8.177 seconds
Total inference time: 3.676 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.578376
   AUC PR    = 0.175216
   CLL	      = -0.329077
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.156752
   F1        = 0.27102


Total scoring time: 7.119 seconds
Parameter learned model CLL: -0.329077


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.997, 2081, 893], 'true': [1.04e-06, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.983, 2073, 893], 'true': [0.0, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.026, 2097, 893], 'true': [5.59e-07, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.105, 2142, 893], 'true': [4.3e-07, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.125, 2154, 893], 'true': [3.72e-07, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.06, 2116, 893], 'true': [0.0, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.161, 2175, 893], 'true': [2.7e-07, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.149, 2168, 893], 'true': [0.0, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.954, 2057, 893], 'true': [0.0, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.988, 2076, 893], 'true': [9.42e-08, 0, 166]}]]
[{'': [6.5061744479238086e-15, 0.21010752683311687]}, {'': [-2.9106569898606513e-15, 0.21043039364087698]}, {'': [1.8833662875568922e-15, 0.20946309325399212]}, {'': [1.1128982608290726e-15, 0.2076603274808447]}, {'': [8.346736956218045e-16, 0.20718210889047972]}, {'': [-2.568226755759398e-16, 0.2087001430625338]}, {'': [4.387387374422305e-16, 0.20634787918866299]}, {'': [-3.210283444699248e-16, 0.2066255761511127]}, {'': [-2.487969669641917e-16, 0.21107739155415298]}, {'': [5.3504724078320797e-17, 0.21030926852656007]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1,04e-06, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.1607805140468801;  // std dev = 4,005, 76,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17428547505295955;  // std dev = 0,465, 2.578,000 (wgt'ed) examples reached here.  /* #neg=1.763 #pos=815 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.31968739663797385;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 3.903144098564415E-4;  // std dev = 5,320, 232,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=33 */
%   | | | else return -0.06271437425300565;  // std dev = 3,183, 139,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.778451058486318;  // std dev = 0,118, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07471216036794401;  // std dev = 4,091, 92,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.09320499032233898;  // std dev = 4,091, 89,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | | else return 0.16259203486369356;  // std dev = 23,102, 2.425,000 (wgt'ed) examples reached here.  /* #neg=1.632 #pos=793 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.1675609694253438;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.024693088425860748;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.02757476236657345;  // std dev = 4,987, 253,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=28 */
%   | | | else return 0.036129580223740486;  // std dev = 3,626, 90,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,59e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.42139327886550576;  // std dev = 2,309, 23,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.03366149455217012;  // std dev = 2,943, 55,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | else return 0.11904954989647247;  // std dev = 0,461, 2.660,000 (wgt'ed) examples reached here.  /* #neg=1.844 #pos=816 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 4.959911695542699E-4;  // std dev = 4,371, 159,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=23 */
%   | | | else return -0.04003681421971431;  // std dev = 3,299, 131,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06058431127397125;  // std dev = 3,565, 77,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | | else return -0.13864562425906454;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4,30e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11361203994319088;  // std dev = 0,466, 2.629,000 (wgt'ed) examples reached here.  /* #neg=1.787 #pos=842 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.04772361444431099;  // std dev = 4,401, 122,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=24 */
%   | | | else return 0.008185963802085423;  // std dev = 3,485, 93,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=15 */
%   | | else return -0.03094461377338861;  // std dev = 0,294, 125,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3,72e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.5636326487782717;  // std dev = 0,226, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09103983893426552;  // std dev = 3,950, 75,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1051243629637353;  // std dev = 3,755, 68,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return 0.09665055516238157;  // std dev = 23,175, 2.457,000 (wgt'ed) examples reached here.  /* #neg=1.664 #pos=793 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.4524397930348926;  // std dev = 1,417, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.028351462275173264;  // std dev = 0,915, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.021943573536255617;  // std dev = 4,980, 252,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=28 */
%   | | | else return 0.019939105405619332;  // std dev = 3,619, 90,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07767055672172746;  // std dev = 0,466, 2.621,000 (wgt'ed) examples reached here.  /* #neg=1.779 #pos=842 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.022627903952042474;  // std dev = 4,465, 133,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=24 */
%   | | | else return -0.0193458966645527;  // std dev = 3,458, 104,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=15 */
%   | | else return -0.029959769328090847;  // std dev = 0,288, 131,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2,70e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.18765081335799327;  // std dev = 2,844, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return -0.047222210170826256;  // std dev = 2,807, 54,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else return 0.06134896551014774;  // std dev = 0,466, 2.554,000 (wgt'ed) examples reached here.  /* #neg=1.739 #pos=815 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.005758000031291868;  // std dev = 5,012, 197,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=31 */
%   | | | else return 0.05013771778097557;  // std dev = 2,552, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else return -0.028032813084343935;  // std dev = 0,286, 133,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19299551445586374;  // std dev = 2,735, 31,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return -0.021937772766490914;  // std dev = 2,759, 51,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | else return 0.046466566753432956;  // std dev = 0,465, 2.578,000 (wgt'ed) examples reached here.  /* #neg=1.763 #pos=815 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.003634575583349814;  // std dev = 1,005, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.04379810253208911;  // std dev = 2,088, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.028010733181321083;  // std dev = 1,816, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return -0.010333964822361805;  // std dev = 5,882, 312,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=40 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03310905481858346;  // std dev = 22,997, 2.476,000 (wgt'ed) examples reached here.  /* #neg=1.704 #pos=772 */
%   | | | else return 0.05303980634568544;  // std dev = 5,664, 225,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=47 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.1475239684168939;  // std dev = 3,097, 98,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=11 */
%   | | | else return 0.14376079221818353;  // std dev = 4,288, 87,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.49972564758790117;  // std dev = 0,402, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.018737133984076434;  // std dev = 3,620, 88,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=16 */
%   | | | else return -0.11506836035595906;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6728061044969658;  // std dev = 5,901, 827,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=791 */
%   | | | else return -0.25743228307292015;  // std dev = 5,521, 1.904,000 (wgt'ed) examples reached here.  /* #neg=1.876 #pos=28 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13951921887994057;  // std dev = 3,139, 118,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=11 */
%   | | | else return 0.1522490434846019;  // std dev = 4,113, 82,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.39079107766433313;  // std dev = 0,401, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.014407881437453696;  // std dev = 3,639, 87,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | | | else return -0.10428561902276197;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.91911
   AUC PR    = 0.55908
   CLL	      = -0.243435
   Precision = 0.97 at threshold = 0.5
   Recall    = 0.263587
   F1        = 0.41453


Total learning time: 926.944 seconds
Total inference time: 22.955 seconds
AUC ROC: 0.91911


Results scoring model
   AUC ROC   = 0.945495
   AUC PR    = 0.525424
   CLL	      = -0.262541
   Precision = 0.994152 at threshold = 0.5
   Recall    = 0.160529
   F1        = 0.276423


Total scoring time: 294.827 seconds
Refined model CLL: -0.262541


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.91911
   AUC PR    = 0.55908
   CLL	      = -0.243435
   Precision = 0.97 at threshold = 0.5
   Recall    = 0.263587
   F1        = 0.41453


Total learning time: 1237.067 seconds
Total inference time: 22.955 seconds
AUC ROC: 0.91911
Total revision time: 1237.067
Best scored revision CLL: -0.262541


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 01:24:47
{'AUC PR': 0.55908, 'AUC ROC': 0.91911, 'Precision': [0.97, 0.5], 'parameter_0.4': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.676, 'CLL': -0.327206, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 8.177}, 'Inference time': 22.955, 'CLL': -0.243435, 'Recall': 0.263587, 'F1': 0.41453, 'Learning time': 1237.067}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.3465210281227675;  // std dev = 3,278, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return -0.10185106490048777;  // std dev = 0,980, 25,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.41814893509951234;  // std dev = 2,482, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.11529179224236952;  // std dev = 2,586, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else return 0.22123055218570098;  // std dev = 0,481, 2.622,000 (wgt'ed) examples reached here.  /* #neg=1.670 #pos=952 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordauthor(M, K) )
%   | | then return 0.1914822684328457;  // std dev = 0,471, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.012354542576147076;  // std dev = 0,361, 214,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=33 */
%   | else return -0.05851773156715433;  // std dev = 0,276, 144,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.21313555901270304;  // std dev = 2,860, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.057027119474896325;  // std dev = 2,662, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | else return 0.18487124371076183;  // std dev = 0,478, 2.738,000 (wgt'ed) examples reached here.  /* #neg=1.764 #pos=974 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6497418083303292;  // std dev = 2,181, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return -0.13479526160187477;  // std dev = 0,996, 114,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=1 */
%   | | else if ( title(L, I), venue(L, B) )
%   | | | then return -0.14336163994553308;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.006678704442418277;  // std dev = 3,568, 107,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=15 */
%   | else return -0.03570236225286584;  // std dev = 0,299, 121,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15614959301708353;  // std dev = 0,477, 2.836,000 (wgt'ed) examples reached here.  /* #neg=1.828 #pos=1.008 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.23639503308617826;  // std dev = 0,488, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.035255231944469466;  // std dev = 3,953, 129,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=24 */
%   | | | else return -0.03678262585081718;  // std dev = 2,835, 86,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.13076404538829944;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.041875156499410676;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.5165509657673112;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.2520405206994791;  // std dev = 2,596, 27,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return 0.049140753336267946;  // std dev = 2,624, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.31554251387051285;  // std dev = 2,466, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return -0.05662406976394156;  // std dev = 2,529, 52,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   | | else return 0.14146661307134809;  // std dev = 0,482, 2.599,000 (wgt'ed) examples reached here.  /* #neg=1.647 #pos=952 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordauthor(L, J) )
%   | | then return 0.17627412733682657;  // std dev = 0,482, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.01753503562779014;  // std dev = 0,343, 199,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=33 */
%   | else return -0.02748386670600108;  // std dev = 0,298, 122,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.08070991036689541;  // std dev = 3,676, 71,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   | | | else return 0.06407004166956583;  // std dev = 1,293, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.5974984653617196;  // std dev = 0,416, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.10663968091875063;  // std dev = 0,479, 2.729,000 (wgt'ed) examples reached here.  /* #neg=1.755 #pos=974 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then return 0.031131292535063308;  // std dev = 0,349, 127,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=24 */
%   | | else if ( haswordauthor(J, G) )
%   | | | then return 0.12191524310753318;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.04957974457199023;  // std dev = 2,860, 100,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=9 */
%   | else return -0.02185010125386825;  // std dev = 0,301, 119,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09274364776803662;  // std dev = 0,479, 2.763,000 (wgt'ed) examples reached here.  /* #neg=1.755 #pos=1.008 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.29206433278279054;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return -0.010448171591601838;  // std dev = 0,315, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return 0.03531041673495153;  // std dev = 1,570, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return -0.032623761208577975;  // std dev = 4,540, 246,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=24 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.05435074620121472;  // std dev = 3,174, 75,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return -0.1207412689553357;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06786989634678538;  // std dev = 0,477, 2.809,000 (wgt'ed) examples reached here.  /* #neg=1.801 #pos=1.008 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.3623625562067855;  // std dev = 0,460, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.12627411533279587;  // std dev = 0,871, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return -0.0036009800683266336;  // std dev = 4,083, 161,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=25 */
%   | | | else return 0.06908717300636169;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return -0.033871376937903847;  // std dev = 0,276, 132,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05059675088090921;  // std dev = 0,476, 2.838,000 (wgt'ed) examples reached here.  /* #neg=1.830 #pos=1.008 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.09289014675545113;  // std dev = 1,501, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.007584252673897878;  // std dev = 4,185, 163,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=27 */
%   | | else return 0.03877445592477785;  // std dev = 0,382, 45,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.11176091273120699;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.002821843709137003;  // std dev = 3,252, 102,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=12 */
%   | | else return -0.11234599328382444;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.042472109501731255;  // std dev = 0,477, 2.817,000 (wgt'ed) examples reached here.  /* #neg=1.809 #pos=1.008 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.1110099437688309;  // std dev = 1,718, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.021357191155043316;  // std dev = 4,125, 186,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=25 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.07280504355396275;  // std dev = 2,503, 37,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return -0.15158916495868188;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.03165656415139638;  // std dev = 0,275, 145,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then if ( haswordvenue(B, C), title(F, D) )
%   | | | then return 0.6330976588784718;  // std dev = 5,627, 844,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=812 */
%   | | | else return 0.6624881616611892;  // std dev = 2,291, 131,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=126 */
%   | | else return -0.28784446129999003;  // std dev = 0,136, 1.977,000 (wgt'ed) examples reached here.  /* #neg=1.946 #pos=31 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.2112121742910232;  // std dev = 2,664, 71,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=8 */
%   | | | else return -0.0597092757562727;  // std dev = 0,843, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3791604975811387;  // std dev = 3,027, 45,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | | | else return 0.07384440111557213;  // std dev = 2,721, 53,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6537884560878003;  // std dev = 0,101, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.02386255718137626;  // std dev = 0,357, 84,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */


Results
   AUC ROC   = 0.936189
   AUC PR    = 0.389493
   CLL	      = -0.268801
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.008152
   F1        = 0.016043


Total learning time: 1061.664 seconds
Total inference time: 26.953 seconds
AUC ROC: 0.936189


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 01:42:56
{'AUC PR': 0.389493, 'AUC ROC': 0.936189, 'Precision': [0.5, 0.5], 'Inference time': 26.953, 'CLL': -0.268801, 'Recall': 0.008152, 'Learning time': 1061.664, 'F1': 0.016043}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordtitle(G, C) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.3581489350995117;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return -0.10018439823382112;  // std dev = 0,979, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.29564893509951234;  // std dev = 2,806, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.06745126068090773;  // std dev = 2,668, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else return 0.2193021976184754;  // std dev = 0,480, 2.636,000 (wgt'ed) examples reached here.  /* #neg=1.684 #pos=952 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then if ( haswordtitle(N, L) )
%   | | then return 0.25814893509951237;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.0010060779566550668;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordvenue(B, P), haswordtitle(Q, P) )
%   | | then if ( haswordtitle(Q, R), haswordauthor(S, R) )
%   | | | then return 0.0034977723088142477;  // std dev = 4,622, 172,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=25 */
%   | | | else return 0.10814893509951237;  // std dev = 2,449, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( haswordvenue(A, T), haswordtitle(U, T) )
%   | | | then return -0.042751965801388576;  // std dev = 3,148, 111,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.603177
   AUC PR    = 0.020412
   CLL	      = -0.195279
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 30.76 seconds
Total inference time: 4.145 seconds
AUC ROC: 0.603177


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 01:43:32
{'AUC PR': 0.020412, 'AUC ROC': 0.603177, 'Precision': [nan, 0.5], 'Inference time': 4.145, 'CLL': -0.195279, 'Recall': 0.0, 'Learning time': 30.76, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.15949724970624873;  // std dev = 30,609, 4.450,000 (wgt'ed) examples reached here.  /* #neg=3.109 #pos=1.341 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.13356449160460268;  // std dev = 30,726, 4.531,000 (wgt'ed) examples reached here.  /* #neg=3.190 #pos=1.341 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,77e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.11496060477151412;  // std dev = 30,718, 4.525,000 (wgt'ed) examples reached here.  /* #neg=3.184 #pos=1.341 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.10300284311250706;  // std dev = 30,592, 4.439,000 (wgt'ed) examples reached here.  /* #neg=3.098 #pos=1.341 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2,38e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.07837537103393538;  // std dev = 30,760, 4.555,000 (wgt'ed) examples reached here.  /* #neg=3.214 #pos=1.341 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,10e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.06281668356707364;  // std dev = 30,804, 4.586,000 (wgt'ed) examples reached here.  /* #neg=3.245 #pos=1.341 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,89e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.0530557172367292;  // std dev = 30,770, 4.562,000 (wgt'ed) examples reached here.  /* #neg=3.221 #pos=1.341 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.045952224254673706;  // std dev = 30,711, 4.520,000 (wgt'ed) examples reached here.  /* #neg=3.179 #pos=1.341 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.03940294369096996;  // std dev = 30,663, 4.487,000 (wgt'ed) examples reached here.  /* #neg=3.146 #pos=1.341 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 4,21e-08, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.03162743484539429;  // std dev = 30,666, 4.489,000 (wgt'ed) examples reached here.  /* #neg=3.148 #pos=1.341 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.326955
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 11.722 seconds
Total inference time: 3.908 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.578037
   AUC PR    = 0.174503
   CLL	      = -0.328839
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.156073
   F1        = 0.270005


Total scoring time: 9.299 seconds
Parameter learned model CLL: -0.328839


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.609, 3109, 1341], 'true': [1.08e-06, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.726, 3190, 1341], 'true': [0.0, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.718, 3184, 1341], 'true': [4.77e-07, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.592, 3098, 1341], 'true': [0.0, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.76, 3214, 1341], 'true': [2.38e-07, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.804, 3245, 1341], 'true': [3.1e-07, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.77, 3221, 1341], 'true': [2.89e-07, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.711, 3179, 1341], 'true': [0.0, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.663, 3146, 1341], 'true': [0.0, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.666, 3148, 1341], 'true': [4.21e-08, 0, 248]}]]
[{'': [4.6987503493813075e-15, 0.21053750789041106]}, {'': [-4.354939348207066e-15, 0.20836815033404046]}, {'': [9.168293364646454e-16, 0.20852814016662233]}, {'': [-3.1516008440972187e-16, 0.21083363727908686]}, {'': [2.2920733411616134e-16, 0.20772936219227117]}, {'': [3.867873763210223e-16, 0.20690709261523157]}, {'': [3.36648271983112e-16, 0.20754340653327538]}, {'': [-3.223228136008519e-17, 0.2086615533714301]}, {'': [-1.7906822977825104e-16, 0.2095440613447648]}, {'': [7.162729191130042e-18, 0.20949047946267343]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16992093014287768;  // std dev = 0,463, 4.035,000 (wgt'ed) examples reached here.  /* #neg=2.777 #pos=1.258 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06007201202258848;  // std dev = 5,790, 208,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=42 */
%   | | | else return -0.004864763530624735;  // std dev = 4,155, 146,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=20 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.036030959080381904;  // std dev = 4,229, 189,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.34495240009095374;  // std dev = 3,774, 57,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=29 */
%   | | | else return 0.05535855245817432;  // std dev = 3,535, 73,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | else return 0.14720611129205227;  // std dev = 0,463, 3.900,000 (wgt'ed) examples reached here.  /* #neg=2.687 #pos=1.213 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.09035096693831733;  // std dev = 2,616, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return -0.02014381524187579;  // std dev = 6,426, 389,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=47 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.07123885106174045;  // std dev = 4,588, 123,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=27 */
%   | | | else return -0.13752138061485134;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,77e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.34034236656256855;  // std dev = 3,160, 40,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | | | else return 0.012121819581668174;  // std dev = 3,352, 71,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | | else return 0.13442859263146645;  // std dev = 0,466, 3.826,000 (wgt'ed) examples reached here.  /* #neg=2.603 #pos=1.223 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.25064006612503054;  // std dev = 2,338, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.0467503126343788;  // std dev = 0,953, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.015557939415013744;  // std dev = 6,329, 370,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=46 */
%   | | | else return 0.05092742782148471;  // std dev = 4,615, 131,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10329229329032687;  // std dev = 0,462, 4.064,000 (wgt'ed) examples reached here.  /* #neg=2.806 #pos=1.258 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06791035976773883;  // std dev = 5,687, 185,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=42 */
%   | | | else return -0.019994055557393604;  // std dev = 4,145, 162,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=20 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.05347232102357313;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.036750726339063594;  // std dev = 4,249, 206,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2,38e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3449184404747027;  // std dev = 3,391, 48,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=29 */
%   | | | else return 0.02392224492432487;  // std dev = 3,507, 69,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | | else return 0.08917658068127877;  // std dev = 0,463, 3.880,000 (wgt'ed) examples reached here.  /* #neg=2.667 #pos=1.213 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.32507916770744993;  // std dev = 1,012, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08030599071344531;  // std dev = 2,442, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.012569874825651237;  // std dev = 6,322, 367,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=46 */
%   | | | else return 0.04859792071903034;  // std dev = 4,581, 122,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=27 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,10e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.06225866237902762;  // std dev = 4,932, 118,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
%   | | | else return 0.7664939376383343;  // std dev = 0,085, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.037794401368505745;  // std dev = 4,633, 111,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | | else return 0.07588474758196581;  // std dev = 28,449, 3.749,000 (wgt'ed) examples reached here.  /* #neg=2.567 #pos=1.182 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.01269224242637557;  // std dev = 6,408, 284,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=51 */
%   | | | else return 0.06218952719375529;  // std dev = 2,971, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.021290210024896474;  // std dev = 4,324, 194,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=21 */
%   | | | else return -0.12889350484451864;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,89e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06626472000403617;  // std dev = 0,466, 3.924,000 (wgt'ed) examples reached here.  /* #neg=2.666 #pos=1.258 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.015421697950834227;  // std dev = 5,827, 219,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=42 */
%   | | | else return -0.012431781701273579;  // std dev = 4,104, 149,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=20 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.04379651095653701;  // std dev = 0,922, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.0246072586461658;  // std dev = 4,238, 198,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.041239361049311175;  // std dev = 28,154, 3.740,000 (wgt'ed) examples reached here.  /* #neg=2.589 #pos=1.151 */
%   | | | else return 0.07038998040168933;  // std dev = 6,864, 304,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=67 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.12332568713734678;  // std dev = 3,924, 150,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=18 */
%   | | | else return 0.15887691507424506;  // std dev = 5,462, 147,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=53 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5602475709862641;  // std dev = 0,372, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | else return 0.035283115744290154;  // std dev = 0,412, 124,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=27 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03873401859486356;  // std dev = 0,462, 4.002,000 (wgt'ed) examples reached here.  /* #neg=2.744 #pos=1.258 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.085436541935468;  // std dev = 2,502, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.17653269554577658;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.16015961734578094;  // std dev = 2,420, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.020588846733423;  // std dev = 7,443, 483,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=65 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 4,21e-08, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.6101323087752846;  // std dev = 0,352, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.036750226179948595;  // std dev = 4,875, 117,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.024319484334574967;  // std dev = 4,683, 124,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=31 */
%   | | | else return 0.03353839974533295;  // std dev = 28,343, 3.744,000 (wgt'ed) examples reached here.  /* #neg=2.562 #pos=1.182 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.05869455121459592;  // std dev = 2,535, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.16598014060191146;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.04771473023940714;  // std dev = 2,590, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.015592123302540947;  // std dev = 7,433, 476,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=65 */


Results
   AUC ROC   = 0.72479
   AUC PR    = 0.306528
   CLL	      = -0.30015
   Precision = 0.97 at threshold = 0.5
   Recall    = 0.263587
   F1        = 0.41453


Total learning time: 769.576 seconds
Total inference time: 12.51 seconds
AUC ROC: 0.72479


Results scoring model
   AUC ROC   = 0.657767
   AUC PR    = 0.199601
   CLL	      = -0.323634
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.157332
   F1        = 0.271887


Total scoring time: 133.784 seconds
Refined model CLL: -0.323634


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.72479
   AUC PR    = 0.306528
   CLL	      = -0.30015
   Precision = 0.97 at threshold = 0.5
   Recall    = 0.263587
   F1        = 0.41453


Total learning time: 924.381 seconds
Total inference time: 12.51 seconds
AUC ROC: 0.72479
Total revision time: 924.381
Best scored revision CLL: -0.323634


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 01:59:14
{'AUC PR': 0.306528, 'AUC ROC': 0.72479, 'Precision': [0.97, 0.5], 'Inference time': 12.51, 'parameter_0.6': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.908, 'CLL': -0.326955, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 11.722}, 'CLL': -0.30015, 'Recall': 0.263587, 'F1': 0.41453, 'Learning time': 924.381}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2098537459355651;  // std dev = 0,478, 4.282,000 (wgt'ed) examples reached here.  /* #neg=2.776 #pos=1.506 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.25814893509951237;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return -0.050941973991396876;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.029491514338690402;  // std dev = 5,160, 267,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=30 */
%   | | | else return 0.030191945852200554;  // std dev = 3,640, 93,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06115645389650409;  // std dev = 4,639, 133,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=27 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7639700123263256;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.35695246846667616;  // std dev = 3,078, 38,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | | else return -0.03186332100700762;  // std dev = 3,080, 80,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | else return 0.18837419123586546;  // std dev = 0,479, 4.084,000 (wgt'ed) examples reached here.  /* #neg=2.623 #pos=1.461 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.7616731553250001;  // std dev = 1,892, 43,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=39 */
%   | | | else return -0.13988830837650787;  // std dev = 0,135, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.11936951734952927;  // std dev = 2,419, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return -0.027016150052424047;  // std dev = 2,816, 76,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=9 */
%   | else return 0.06832498498219797;  // std dev = 0,413, 124,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15803757886098682;  // std dev = 0,478, 4.234,000 (wgt'ed) examples reached here.  /* #neg=2.728 #pos=1.506 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7753808257500829;  // std dev = 1,676, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return -0.14843703145297485;  // std dev = 0,902, 148,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.14677574468423796;  // std dev = 1,911, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.04424075694467663;  // std dev = 2,945, 125,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=12 */
%   | else return -0.023473612190010675;  // std dev = 0,280, 182,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=21 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6610862494741483;  // std dev = 2,98e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.1317722998024759;  // std dev = 0,478, 4.202,000 (wgt'ed) examples reached here.  /* #neg=2.710 #pos=1.492 */
%   else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | then if ( title(G, F), venue(G, A) )
%   | | then if ( title(H, F), venue(H, B) )
%   | | | then return 0.6649337706272622;  // std dev = 1,386, 42,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return -0.12629230926136173;  // std dev = 1,264, 172,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=2 */
%   | | else if ( haswordauthor(I, E) )
%   | | | then return 0.15161506122710625;  // std dev = 1,832, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.02702980223857841;  // std dev = 2,925, 111,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=12 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.02241486683050492;  // std dev = 3,678, 172,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=20 */
%   | | | else return -0.09408569792132235;  // std dev = 0,972, 32,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=1 */
%   | | else return -0.13044842700855339;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1107173254489075;  // std dev = 0,478, 4.199,000 (wgt'ed) examples reached here.  /* #neg=2.693 #pos=1.506 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.0487347962675065;  // std dev = 0,787, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07201781852344535;  // std dev = 1,604, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return -0.12507245127975142;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.014464222420910021;  // std dev = 4,978, 297,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=39 */
%   | | | else return -0.04807655506946604;  // std dev = 2,097, 89,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=8 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 4.291600647055097E-4;  // std dev = 3,394, 143,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=27 */
%   | | | else return -0.11635103304218578;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09276889042724894;  // std dev = 0,479, 4.162,000 (wgt'ed) examples reached here.  /* #neg=2.656 #pos=1.506 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.04970058961865358;  // std dev = 3,860, 160,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=39 */
%   | | | else return -0.05386629561757166;  // std dev = 2,407, 106,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=12 */
%   | | else return 0.06513152366454698;  // std dev = 0,353, 54,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | else return -0.018192325445115533;  // std dev = 0,279, 185,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=21 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0582982620363297;  // std dev = 0,475, 4.350,000 (wgt'ed) examples reached here.  /* #neg=2.844 #pos=1.506 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.05192507223697508;  // std dev = 1,969, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return -0.017359367913522255;  // std dev = 4,243, 268,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=42 */
%   | | else return 0.030829805314606714;  // std dev = 0,332, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.012179260490967665;  // std dev = 3,682, 166,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=20 */
%   | | | else return -0.06640961776908687;  // std dev = 0,970, 22,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else return -0.10305507240068586;  // std dev = 0,000720, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.055264203828615334;  // std dev = 0,477, 4.239,000 (wgt'ed) examples reached here.  /* #neg=2.733 #pos=1.506 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return -0.046236214069050464;  // std dev = 0,564, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.15474053939611762;  // std dev = 1,681, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.0049265982350978985;  // std dev = 0,823, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.013952518065254193;  // std dev = 4,540, 260,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=31 */
%   | | | else return -0.026250994377232537;  // std dev = 2,615, 123,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017106640798138176;  // std dev = 3,343, 127,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=27 */
%   | | | else return -0.0939360348508177;  // std dev = 0,000676, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.035635154864299114;  // std dev = 0,475, 3.947,000 (wgt'ed) examples reached here.  /* #neg=2.578 #pos=1.369 */
%   | | else return 0.055791174816233205;  // std dev = 0,349, 303,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=67 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.16329982993160927;  // std dev = 0,313, 160,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=18 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.44243432340116373;  // std dev = 3,473, 66,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=50 */
%   | | | else return 0.034343183814447856;  // std dev = 3,245, 108,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=23 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.4728243547401369;  // std dev = 2,172, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.3705992534004369;  // std dev = 0,836, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6623084068997936;  // std dev = 0,080, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.002428056889397687;  // std dev = 0,292, 135,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03544230344995468;  // std dev = 0,475, 4.230,000 (wgt'ed) examples reached here.  /* #neg=2.724 #pos=1.506 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return 0.09710259567254799;  // std dev = 1,753, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.025128163366023307;  // std dev = 3,698, 209,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=26 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.01817649220314342;  // std dev = 3,669, 173,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=20 */
%   | | | else return -0.06257235241397764;  // std dev = 0,969, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.006335739350039849;  // std dev = 3,123, 117,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=25 */
%   | | | else return 0.07003214494436688;  // std dev = 1,261, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return -0.09037671688973813;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.674708
   AUC PR    = 0.060319
   CLL	      = -0.333994
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.005435
   F1        = 0.010811


Total learning time: 1921.823 seconds
Total inference time: 19.984 seconds
AUC ROC: 0.674708


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 02:31:36
{'AUC PR': 0.060319, 'AUC ROC': 0.674708, 'Precision': [1.0, 0.5], 'Inference time': 19.984, 'CLL': -0.333994, 'Recall': 0.005435, 'Learning time': 1921.823, 'F1': 0.010811}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21434571844860842;  // std dev = 0,479, 4.228,000 (wgt'ed) examples reached here.  /* #neg=2.722 #pos=1.506 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.834339411289988;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.13509430814373122;  // std dev = 0,997, 148,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.25814893509951237;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.03374295679237956;  // std dev = 3,271, 111,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.01113211065212174;  // std dev = 4,170, 153,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=20 */
%   | | | else return -0.10481402786345073;  // std dev = 0,981, 27,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.621492
   AUC PR    = 0.019385
   CLL	      = -0.194478
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 63.658 seconds
Total inference time: 4.217 seconds
AUC ROC: 0.621492


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 02:32:45
{'AUC PR': 0.019385, 'AUC ROC': 0.621492, 'Precision': [nan, 0.5], 'Inference time': 4.217, 'CLL': -0.194478, 'Recall': 0.0, 'Learning time': 63.658, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.15483593031955;  // std dev = 35,580, 6.067,000 (wgt'ed) examples reached here.  /* #neg=4.267 #pos=1.800 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.14106276855361258;  // std dev = 35,425, 5.944,000 (wgt'ed) examples reached here.  /* #neg=4.144 #pos=1.800 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.11644552330395848;  // std dev = 35,541, 6.035,000 (wgt'ed) examples reached here.  /* #neg=4.235 #pos=1.800 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.09472035551036478;  // std dev = 35,636, 6.112,000 (wgt'ed) examples reached here.  /* #neg=4.312 #pos=1.800 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.07977397466612476;  // std dev = 35,620, 6.099,000 (wgt'ed) examples reached here.  /* #neg=4.299 #pos=1.800 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,77e-07, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.06739821515132619;  // std dev = 35,584, 6.070,000 (wgt'ed) examples reached here.  /* #neg=4.270 #pos=1.800 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.06433891990111561;  // std dev = 35,354, 5.890,000 (wgt'ed) examples reached here.  /* #neg=4.090 #pos=1.800 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2,67e-07, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.04581642546713041;  // std dev = 35,520, 6.019,000 (wgt'ed) examples reached here.  /* #neg=4.219 #pos=1.800 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.03790168966195673;  // std dev = 35,499, 6.002,000 (wgt'ed) examples reached here.  /* #neg=4.202 #pos=1.800 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.030207883348093514;  // std dev = 35,507, 6.008,000 (wgt'ed) examples reached here.  /* #neg=4.208 #pos=1.800 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.329671
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 19.29 seconds
Total inference time: 3.295 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575271
   AUC PR    = 0.168846
   CLL	      = -0.33162
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150543
   F1        = 0.26169


Total scoring time: 11.612 seconds
Parameter learned model CLL: -0.33162


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.58, 4267, 1800], 'true': [1.04e-06, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.425, 4144, 1800], 'true': [0.0, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.541, 4235, 1800], 'true': [0.0, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.636, 4312, 1800], 'true': [0.0, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.62, 4299, 1800], 'true': [0.0, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.584, 4270, 1800], 'true': [3.77e-07, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.354, 4090, 1800], 'true': [2.49e-07, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.52, 4219, 1800], 'true': [2.67e-07, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.499, 4202, 1800], 'true': [0.0, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.507, 4208, 1800], 'true': [0.0, 0, 319]}]]
[{'': [3.3856581766625463e-15, 0.2086638220872843]}, {'': [-4.9893909971869104e-15, 0.2111225633957267]}, {'': [-3.5638507122763644e-16, 0.2093010325710421]}, {'': [-8.90962678069091e-16, 0.2077708259093494]}, {'': [-4.900294729380001e-16, 0.20802842619655945]}, {'': [4.454813390345455e-16, 0.20860417588325747]}, {'': [1.948980858276137e-16, 0.21220969615564425]}, {'': [2.2274066951727276e-16, 0.2096203027236446]}, {'': [-2.2274066951727276e-16, 0.2099600033355567]}, {'': [-1.9211382745864777e-16, 0.2098400534751275]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17639959772729966;  // std dev = 0,466, 5.282,000 (wgt'ed) examples reached here.  /* #neg=3.601 #pos=1.681 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.07766113022146419;  // std dev = 7,012, 287,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=63 */
%   | | | else return -0.025028634993945947;  // std dev = 4,699, 214,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.023980342467028137;  // std dev = 5,229, 263,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=31 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16112941170548764;  // std dev = 0,469, 5.159,000 (wgt'ed) examples reached here.  /* #neg=3.478 #pos=1.681 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.09167309554721;  // std dev = 6,905, 259,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=63 */
%   | | | else return -0.005141730415280979;  // std dev = 4,654, 187,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.08013341912625815;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return -0.01367544207948923;  // std dev = 5,122, 240,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=30 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1290801267734279;  // std dev = 0,465, 5.300,000 (wgt'ed) examples reached here.  /* #neg=3.619 #pos=1.681 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.24476247285004898;  // std dev = 2,712, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.07910540457382798;  // std dev = 0,978, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.10640403691097866;  // std dev = 3,185, 54,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.0011338833411636982;  // std dev = 8,817, 619,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=92 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10414515632303901;  // std dev = 0,464, 5.375,000 (wgt'ed) examples reached here.  /* #neg=3.694 #pos=1.681 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.06482185330991921;  // std dev = 6,886, 269,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=62 */
%   | | | else return -0.011323950056692228;  // std dev = 4,714, 194,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=26 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02404699008197124;  // std dev = 5,243, 274,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=31 */
%   | | | else return -0.12322910657294683;  // std dev = 0,008, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3701777562388756;  // std dev = 3,704, 57,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   | | | else return 0.05573781021998323;  // std dev = 3,974, 78,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.023686528168700545;  // std dev = 5,809, 180,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=45 */
%   | | | else return 0.09268511488384426;  // std dev = 32,802, 4.953,000 (wgt'ed) examples reached here.  /* #neg=3.373 #pos=1.580 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.5728428305123012;  // std dev = 0,851, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09010116944138304;  // std dev = 2,725, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.01021663998383227;  // std dev = 7,623, 504,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=68 */
%   | | | else return 0.0478374909006587;  // std dev = 5,436, 176,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=38 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,77e-07, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2694133961343455;  // std dev = 3,807, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | | else return -0.06920938431724485;  // std dev = 4,081, 123,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=20 */
%   | | else return 0.07397432927149537;  // std dev = 0,465, 5.140,000 (wgt'ed) examples reached here.  /* #neg=3.508 #pos=1.632 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.08208881926995068;  // std dev = 6,731, 236,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=62 */
%   | | | else return -0.016855524803031315;  // std dev = 4,716, 202,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=26 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01041108915853827;  // std dev = 5,202, 251,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=31 */
%   | | | else return -0.11613992706851095;  // std dev = 0,006, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.057331593626449254;  // std dev = 5,669, 149,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=50 */
%   | | | else return 0.7382011100752256;  // std dev = 0,042, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.06659101666048188;  // std dev = 0,467, 5.032,000 (wgt'ed) examples reached here.  /* #neg=3.407 #pos=1.625 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.244084604560668;  // std dev = 1,310, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.11862552111758105;  // std dev = 2,797, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0101233317197131;  // std dev = 7,572, 501,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=67 */
%   | | | else return 0.03508451666070655;  // std dev = 5,324, 168,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=37 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2,67e-07, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04537304891476866;  // std dev = 0,464, 5.334,000 (wgt'ed) examples reached here.  /* #neg=3.653 #pos=1.681 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.10615811936309448;  // std dev = 2,899, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return -0.08048930734711394;  // std dev = 0,920, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.036172130303388596;  // std dev = 3,196, 59,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | | else return -0.004463236081316;  // std dev = 8,774, 615,000 (wgt'ed) examples reached here.  /* #neg=523 #pos=92 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.24964194227367054;  // std dev = 3,565, 52,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return -0.08062841057089919;  // std dev = 4,060, 125,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=20 */
%   | | else return 0.03776611015684184;  // std dev = 0,465, 5.145,000 (wgt'ed) examples reached here.  /* #neg=3.513 #pos=1.632 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0037825593151124344;  // std dev = 7,644, 406,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=74 */
%   | | | else return 0.03212661461182104;  // std dev = 3,419, 84,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10218585607601878;  // std dev = 0,957, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.00992863594102614;  // std dev = 5,124, 250,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=30 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.02838139092850968;  // std dev = 32,435, 4.896,000 (wgt'ed) examples reached here.  /* #neg=3.354 #pos=1.542 */
%   | | | else return 0.06811035614791008;  // std dev = 7,969, 414,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=92 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.16467730159318086;  // std dev = 4,415, 227,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=22 */
%   | | | else return 0.1188838933512752;  // std dev = 6,657, 213,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=75 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.4662879896737301;  // std dev = 0,669, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.14791173214593756;  // std dev = 6,278, 184,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=66 */
%   | | | else return -0.10666853014764174;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.725327
   AUC PR    = 0.306791
   CLL	      = -0.30753
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 988.16 seconds
Total inference time: 12.324 seconds
AUC ROC: 0.725327


Results scoring model
   AUC ROC   = 0.650949
   AUC PR    = 0.183886
   CLL	      = -0.329368
   Precision = 0.990741 at threshold = 0.5
   Recall    = 0.151487
   F1        = 0.262792


Total scoring time: 177.778 seconds
Refined model CLL: -0.329368


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.725327
   AUC PR    = 0.306791
   CLL	      = -0.30753
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 1196.84 seconds
Total inference time: 12.324 seconds
AUC ROC: 0.725327
Total revision time: 1196.84
Best scored revision CLL: -0.329368


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 02:52:59
{'AUC PR': 0.306791, 'AUC ROC': 0.725327, 'Precision': [1.0, 0.5], 'Inference time': 12.324, 'parameter_0.8': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.295, 'CLL': -0.329671, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 19.29}, 'CLL': -0.30753, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 1196.84}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21452812255495976;  // std dev = 0,479, 5.612,000 (wgt'ed) examples reached here.  /* #neg=3.612 #pos=2.000 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.09097336258042904;  // std dev = 6,841, 262,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=61 */
%   | | | else return -0.049258472307895054;  // std dev = 3,689, 162,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.011416282291792592;  // std dev = 5,108, 230,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=30 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1869297069231114;  // std dev = 0,479, 5.603,000 (wgt'ed) examples reached here.  /* #neg=3.603 #pos=2.000 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7975203167356337;  // std dev = 1,674, 56,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=53 */
%   | | | else return -0.1403899564220107;  // std dev = 0,203, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.15989896308544227;  // std dev = 2,876, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return -0.006101515232363719;  // std dev = 3,578, 104,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.09010153735242638;  // std dev = 5,291, 152,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=37 */
%   | | | else return -0.04425481634092617;  // std dev = 1,357, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16069684574141696;  // std dev = 0,480, 5.575,000 (wgt'ed) examples reached here.  /* #neg=3.575 #pos=2.000 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.03709999786908861;  // std dev = 0,780, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06990900338015231;  // std dev = 2,993, 51,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.020514474074338866;  // std dev = 5,879, 428,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=54 */
%   | | | else return 0.0518333931627858;  // std dev = 3,214, 64,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.0697980459331722;  // std dev = 5,317, 158,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=37 */
%   | | | else return 0.014096004055665988;  // std dev = 1,326, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7751887391855163;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.22481126081448363;  // std dev = 1,49e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.022888183891406733;  // std dev = 4,094, 104,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=21 */
%   | | | else return 0.7751887391855163;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13638777102316993;  // std dev = 0,480, 5.371,000 (wgt'ed) examples reached here.  /* #neg=3.431 #pos=1.940 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then return 0.09239954232124507;  // std dev = 0,439, 238,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=63 */
%   | | else if ( haswordtitle(J, L), haswordauthor(M, L) )
%   | | | then return -0.0427535198528729;  // std dev = 2,727, 111,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=12 */
%   | | | else return 0.030319138607891705;  // std dev = 2,834, 75,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | else return -0.012161416018187802;  // std dev = 0,290, 243,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=31 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.7129490918456791;  // std dev = 0,081, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.2671175693357434;  // std dev = 3,991, 64,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=33 */
%   | | | else return -0.027871095997676686;  // std dev = 3,844, 86,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.2942313705773748;  // std dev = 2,703, 46,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | | | else return -0.049743477522046685;  // std dev = 3,562, 97,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=17 */
%   | | else return 0.1074329186005711;  // std dev = 0,479, 5.290,000 (wgt'ed) examples reached here.  /* #neg=3.402 #pos=1.888 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then return 0.04752786536515758;  // std dev = 0,422, 269,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=63 */
%   | | else return -0.021923178028504745;  // std dev = 0,278, 206,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=25 */
%   | else return -0.020469911319540384;  // std dev = 0,281, 264,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=31 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08293368971696925;  // std dev = 0,476, 5.661,000 (wgt'ed) examples reached here.  /* #neg=3.661 #pos=2.000 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.29806975556756443;  // std dev = 0,994, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11740678168305195;  // std dev = 2,181, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else return -0.06728052009158135;  // std dev = 0,220, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.3147031266396014;  // std dev = 1,143, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03202794080235705;  // std dev = 2,856, 51,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.012287999571947912;  // std dev = 6,262, 430,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=56 */
%   | | | else return 0.019304219418005066;  // std dev = 5,321, 174,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.10563118193338289;  // std dev = 4,441, 118,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=48 */
%   | | | else return 0.6057462361305089;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12569421527602687;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=9 */
%   | else return 0.07531787193086452;  // std dev = 0,480, 5.358,000 (wgt'ed) examples reached here.  /* #neg=3.418 #pos=1.940 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then return -0.014073389846084748;  // std dev = 0,299, 500,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=67 */
%   | | else return 0.035136700589090346;  // std dev = 0,406, 62,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.06486892273902631;  // std dev = 5,192, 140,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=37 */
%   | | | else return -0.020448125142615445;  // std dev = 1,361, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return -0.10038634656815142;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05356897377421648;  // std dev = 0,476, 5.619,000 (wgt'ed) examples reached here.  /* #neg=3.619 #pos=2.000 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7471561659810162;  // std dev = 1,661, 65,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=62 */
%   | | | else return -0.1978534466325996;  // std dev = 0,935, 214,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.05003053507953466;  // std dev = 2,737, 118,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=12 */
%   | | | else return 0.008660369348720203;  // std dev = 2,890, 88,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=13 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return -0.03591381325937944;  // std dev = 0,223, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07219981107884596;  // std dev = 0,778, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.012168126289119745;  // std dev = 4,426, 241,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=29 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.020374357616735242;  // std dev = 0,469, 5.453,000 (wgt'ed) examples reached here.  /* #neg=3.632 #pos=1.821 */
%   | | else return 0.04058023173313199;  // std dev = 0,337, 457,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=92 */
%   | else if ( title(F, D), venue(F, B) )
%   | | then return -0.1388961773743866;  // std dev = 0,357, 136,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=21 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3687025891678177;  // std dev = 4,597, 98,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=67 */
%   | | | else return 0.07855337722382767;  // std dev = 4,181, 118,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.45695879045735893;  // std dev = 2,484, 36,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | | | else return 0.2716997826429341;  // std dev = 0,738, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5537395495541496;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return -0.01675086018657277;  // std dev = 0,324, 205,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=39 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03283101637623357;  // std dev = 0,472, 5.677,000 (wgt'ed) examples reached here.  /* #neg=3.677 #pos=2.000 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.014215981557216407;  // std dev = 5,481, 244,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=57 */
%   | | | else return -0.05545599805888419;  // std dev = 3,166, 157,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=17 */
%   | | else return 0.06348834692562715;  // std dev = 0,357, 64,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.009793547524961291;  // std dev = 4,340, 225,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=29 */
%   | | | else return -0.06518798762264817;  // std dev = 1,355, 33,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | | else return -0.08929735891652471;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.672388
   AUC PR    = 0.053767
   CLL	      = -0.337141
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.005435
   F1        = 0.010753


Total learning time: 2457.038 seconds
Total inference time: 14.973 seconds
AUC ROC: 0.672388


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 03:34:12
{'AUC PR': 0.053767, 'AUC ROC': 0.672388, 'Precision': [0.5, 0.5], 'Inference time': 14.973, 'CLL': -0.337141, 'Recall': 0.005435, 'Learning time': 2457.038, 'F1': 0.010753}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordtitle(G, C) )
%   | | | then return 0.6763307532813305;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.3904069996156402;  // std dev = 3,929, 62,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=33 */
%   | | | else return 0.07405802600860324;  // std dev = 3,860, 88,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=19 */
%   | else return 0.20675127955397063;  // std dev = 0,477, 5.545,000 (wgt'ed) examples reached here.  /* #neg=3.612 #pos=1.933 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then if ( author(L, J), title(L, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2285193054698827;  // std dev = 2,509, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else return -0.016851064900487787;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then if ( haswordauthor(P, M) )
%   | | | then return 0.13721870254137283;  // std dev = 2,941, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.013997183621948798;  // std dev = 6,989, 438,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=56 */
%   | | else if ( haswordvenue(B, Q), haswordtitle(R, Q) )
%   | | | then return 0.06694014389071995;  // std dev = 5,483, 182,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=38 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.599954
   AUC PR    = 0.020269
   CLL	      = -0.195373
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 42.142 seconds
Total inference time: 4.047 seconds
AUC ROC: 0.599954


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 03:34:59
{'AUC PR': 0.020269, 'AUC ROC': 0.599954, 'Precision': [nan, 0.5], 'Inference time': 4.047, 'CLL': -0.195373, 'Recall': 0.0, 'Learning time': 42.142, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,58e-06, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.15707280915291486;  // std dev = 39,717, 7.527,000 (wgt'ed) examples reached here.  /* #neg=5.277 #pos=2.250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.13602505719006197;  // std dev = 39,740, 7.548,000 (wgt'ed) examples reached here.  /* #neg=5.298 #pos=2.250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.11610264102892456;  // std dev = 39,757, 7.563,000 (wgt'ed) examples reached here.  /* #neg=5.313 #pos=2.250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.10366854760893845;  // std dev = 39,603, 7.427,000 (wgt'ed) examples reached here.  /* #neg=5.177 #pos=2.250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08124086120166253;  // std dev = 39,755, 7.561,000 (wgt'ed) examples reached here.  /* #neg=5.311 #pos=2.250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,58e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06699327872837176;  // std dev = 39,759, 7.565,000 (wgt'ed) examples reached here.  /* #neg=5.315 #pos=2.250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05403693861673468;  // std dev = 39,784, 7.587,000 (wgt'ed) examples reached here.  /* #neg=5.337 #pos=2.250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1,93e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.0421080470820178;  // std dev = 39,836, 7.635,000 (wgt'ed) examples reached here.  /* #neg=5.385 #pos=2.250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03558915320357784;  // std dev = 39,794, 7.596,000 (wgt'ed) examples reached here.  /* #neg=5.346 #pos=2.250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.02894626135408883;  // std dev = 39,786, 7.589,000 (wgt'ed) examples reached here.  /* #neg=5.339 #pos=2.250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.32683
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 25.953 seconds
Total inference time: 3.583 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.328794
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 14.103 seconds
Parameter learned model CLL: -0.328794


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.717, 5277, 2250], 'true': [1.58e-06, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.74, 5298, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.757, 5313, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.603, 5177, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.755, 5311, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.759, 5315, 2250], 'true': [4.58e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.784, 5337, 2250], 'true': [2.46e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.836, 5385, 2250], 'true': [1.93e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.794, 5346, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.786, 5339, 2250], 'true': [0.0, 0, 399]}]]
[{'': [6.268447192670558e-15, 0.20956839157424453]}, {'': [-5.342426584662407e-15, 0.2092332442794877]}, {'': [-1.2109500258568123e-15, 0.20899415162541696]}, {'': [-1.887657393247384e-15, 0.21117078543893386]}, {'': [-1.6383441526298048e-15, 0.2090260161670657]}, {'': [5.2533861415847e-16, 0.20896229155645596]}, {'': [1.5136875323210153e-16, 0.20861212778742222]}, {'': [9.349246523159212e-17, 0.20785005461612893]}, {'': [-2.62669307079235e-16, 0.2084690370835866]}, {'': [-3.227716061566871e-16, 0.20858032187663955]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,58e-06, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1763445148754684;  // std dev = 0,466, 6.606,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.24839283753853675;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.024815601766178853;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.008719446141032655;  // std dev = 8,734, 661,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=88 */
%   | | | else return 0.04905802600860251;  // std dev = 5,829, 220,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=42 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15665623967742984;  // std dev = 0,467, 6.541,000 (wgt'ed) examples reached here.  /* #neg=4.439 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.21538963726453592;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.015802109833888873;  // std dev = 8,645, 558,000 (wgt'ed) examples reached here.  /* #neg=469 #pos=89 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.024721005769832733;  // std dev = 6,164, 370,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=43 */
%   | | | else return -0.14792842696700764;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3531413981409554;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.01921242784834808;  // std dev = 4,454, 121,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=25 */
%   | | else return 0.12861078623837638;  // std dev = 0,465, 6.446,000 (wgt'ed) examples reached here.  /* #neg=4.409 #pos=2.037 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.34924247658924723;  // std dev = 1,385, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.06918454660282194;  // std dev = 3,312, 65,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.12384421568633464;  // std dev = 3,259, 52,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return -0.002240974018644195;  // std dev = 9,890, 812,000 (wgt'ed) examples reached here.  /* #neg=698 #pos=114 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10915877061401537;  // std dev = 0,465, 6.629,000 (wgt'ed) examples reached here.  /* #neg=4.527 #pos=2.102 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.007369013437458503;  // std dev = 1,210, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.19741013896306497;  // std dev = 3,195, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -7.829824610536794E-4;  // std dev = 8,661, 615,000 (wgt'ed) examples reached here.  /* #neg=526 #pos=89 */
%   | | | else return 0.049112806839027516;  // std dev = 5,721, 206,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=41 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.09906270284650015;  // std dev = 6,167, 176,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=59 */
%   | | | else return 0.6407952674050889;  // std dev = 0,918, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.08866748704386533;  // std dev = 0,465, 6.467,000 (wgt'ed) examples reached here.  /* #neg=4.430 #pos=2.037 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.056843395842971337;  // std dev = 7,603, 344,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=74 */
%   | | | else return -0.034648228613081596;  // std dev = 5,090, 248,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=31 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.005747624526309697;  // std dev = 6,104, 322,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=43 */
%   | | | else return -0.13778306190477227;  // std dev = 0,027, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,58e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2737666640450437;  // std dev = 4,168, 71,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=40 */
%   | | | else return 0.001979955832681007;  // std dev = 4,294, 108,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=25 */
%   | | else return 0.07155363975557137;  // std dev = 0,464, 6.492,000 (wgt'ed) examples reached here.  /* #neg=4.455 #pos=2.037 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.054730394815839176;  // std dev = 7,576, 335,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=74 */
%   | | | else return -0.027511681860469178;  // std dev = 5,067, 251,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=31 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0061177971913546495;  // std dev = 6,107, 325,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=43 */
%   | | | else return -0.12139993592424496;  // std dev = 0,011, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2566338956426322;  // std dev = 4,403, 78,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=40 */
%   | | | else return -0.09059496403064843;  // std dev = 4,547, 150,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=25 */
%   | | else return 0.05878803059804323;  // std dev = 0,464, 6.466,000 (wgt'ed) examples reached here.  /* #neg=4.429 #pos=2.037 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.10347245122945105;  // std dev = 3,324, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.01617433799840837;  // std dev = 1,197, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.08142833345762181;  // std dev = 3,346, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.002190814788861215;  // std dev = 9,805, 767,000 (wgt'ed) examples reached here.  /* #neg=653 #pos=114 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1,93e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.04562522698575949;  // std dev = 36,395, 6.177,000 (wgt'ed) examples reached here.  /* #neg=4.242 #pos=1.935 */
%   | | | else return 0.07074890700274922;  // std dev = 9,148, 523,000 (wgt'ed) examples reached here.  /* #neg=403 #pos=120 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.15199884491066717;  // std dev = 4,983, 285,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=28 */
%   | | | else return 0.15887636569951805;  // std dev = 7,190, 245,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=90 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5200445726443224;  // std dev = 0,406, 43,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=34 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.04251072740605199;  // std dev = 5,784, 200,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=43 */
%   | | | else return -0.11154078173623139;  // std dev = 0,026, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.009730384721498857;  // std dev = 6,256, 208,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=59 */
%   | | | else return 0.579390959346624;  // std dev = 0,181, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03779157495688412;  // std dev = 0,462, 6.509,000 (wgt'ed) examples reached here.  /* #neg=4.472 #pos=2.037 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03743489732120603;  // std dev = 7,535, 326,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=74 */
%   | | | else return -0.030639355015823846;  // std dev = 5,063, 228,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=31 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.009185351032044972;  // std dev = 6,077, 316,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=43 */
%   | | | else return -0.10177836289346653;  // std dev = 0,024, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.14827171051138674;  // std dev = 5,603, 134,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=58 */
%   | | | else return -0.18956021122876385;  // std dev = 2,274, 72,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=7 */
%   | | else return 0.03139715594350658;  // std dev = 0,463, 6.462,000 (wgt'ed) examples reached here.  /* #neg=4.425 #pos=2.037 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.10762315595526761;  // std dev = 3,216, 44,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return -0.09395761165577565;  // std dev = 1,360, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01236298010076866;  // std dev = 8,596, 613,000 (wgt'ed) examples reached here.  /* #neg=525 #pos=88 */
%   | | | else return 0.016091275108387353;  // std dev = 5,772, 217,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=42 */


Results
   AUC ROC   = 0.725724
   AUC PR    = 0.307051
   CLL	      = -0.303109
   Precision = 0.97 at threshold = 0.5
   Recall    = 0.263587
   F1        = 0.41453


Total learning time: 1233.566 seconds
Total inference time: 11.665 seconds
AUC ROC: 0.725724


Results scoring model
   AUC ROC   = 0.651287
   AUC PR    = 0.189982
   CLL	      = -0.325821
   Precision = 0.959716 at threshold = 0.5
   Recall    = 0.152888
   F1        = 0.263758


Total scoring time: 210.552 seconds
Refined model CLL: -0.325821


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.725724
   AUC PR    = 0.307051
   CLL	      = -0.303109
   Precision = 0.97 at threshold = 0.5
   Recall    = 0.263587
   F1        = 0.41453


Total learning time: 1484.174 seconds
Total inference time: 11.665 seconds
AUC ROC: 0.725724
Total revision time: 1484.174
Best scored revision CLL: -0.325821


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 04:00:00
{'AUC PR': 0.307051, 'AUC ROC': 0.725724, 'Precision': [0.97, 0.5], 'parameter_1.0': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.583, 'CLL': -0.32683, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 25.953}, 'Inference time': 11.665, 'CLL': -0.303109, 'Recall': 0.263587, 'F1': 0.41453, 'Learning time': 1484.174}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.4316783468642176;  // std dev = 4,078, 68,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | | | else return 0.07174116810922072;  // std dev = 4,159, 103,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.407444709747399;  // std dev = 4,193, 71,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | | else return 0.022328039577124023;  // std dev = 4,288, 134,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=22 */
%   | | else return 0.21217502596770327;  // std dev = 0,478, 6.669,000 (wgt'ed) examples reached here.  /* #neg=4.308 #pos=2.361 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( haswordtitle(M, K) )
%   | | then return 0.2059750220560341;  // std dev = 0,476, 46,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | else return -0.03658790700575096;  // std dev = 0,307, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else return 0.006720363670938854;  // std dev = 0,356, 875,000 (wgt'ed) examples reached here.  /* #neg=745 #pos=130 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18627104829459548;  // std dev = 0,478, 7.023,000 (wgt'ed) examples reached here.  /* #neg=4.522 #pos=2.501 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8507920832406803;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14192599152877647;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1426160113208364;  // std dev = 3,156, 49,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return -0.14267110098790306;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15676303127526778;  // std dev = 3,073, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return -0.026344223662905873;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.010998503123135148;  // std dev = 8,016, 562,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=74 */
%   | | | else return 0.040815137544206376;  // std dev = 5,715, 218,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=40 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1585761902538449;  // std dev = 0,478, 7.016,000 (wgt'ed) examples reached here.  /* #neg=4.515 #pos=2.501 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.14876703264485294;  // std dev = 0,953, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.14940469079630317;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.21213543431605547;  // std dev = 0,927, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.12131478311727177;  // std dev = 3,156, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.011392900014230899;  // std dev = 7,851, 542,000 (wgt'ed) examples reached here.  /* #neg=470 #pos=72 */
%   | | | else return 0.05583555001583435;  // std dev = 3,696, 86,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.046345488346922;  // std dev = 5,746, 210,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=41 */
%   | | | else return -0.1462505146911314;  // std dev = 0,013, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13029572576244244;  // std dev = 0,477, 7.057,000 (wgt'ed) examples reached here.  /* #neg=4.556 #pos=2.501 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.020295876920722745;  // std dev = 1,023, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.1436239255836068;  // std dev = 3,065, 44,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.39942964995062563;  // std dev = 0,675, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1367953842883666;  // std dev = 0,028, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.01389176931620495;  // std dev = 7,735, 461,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=72 */
%   | | | else return -0.04097870200597335;  // std dev = 3,893, 164,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.05209112086098287;  // std dev = 5,704, 198,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=41 */
%   | | | else return -0.1302539786098997;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10126979476790884;  // std dev = 0,476, 7.169,000 (wgt'ed) examples reached here.  /* #neg=4.668 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.20279463320912328;  // std dev = 0,483, 40,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else return -0.04204472548064736;  // std dev = 0,303, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return -0.024618018398375945;  // std dev = 7,836, 582,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=71 */
%   | | | else return 0.03183104388154134;  // std dev = 3,742, 97,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.022347755297813462;  // std dev = 5,789, 227,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=42 */
%   | | | else return -0.11619475802825671;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.08018819833239267;  // std dev = 0,475, 6.573,000 (wgt'ed) examples reached here.  /* #neg=4.292 #pos=2.281 */
%   | | else return 0.06281055162394886;  // std dev = 0,397, 538,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=120 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.14387322117662577;  // std dev = 0,300, 274,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=28 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.46894240901814827;  // std dev = 4,535, 107,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=79 */
%   | | | else return 0.09509247039578161;  // std dev = 5,449, 162,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=43 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.7438888059851197;  // std dev = 1,697, 75,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=72 */
%   | | | else return -0.15802606747434467;  // std dev = 0,924, 122,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=1 */
%   | | else return 0.014961396967284823;  // std dev = 0,379, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else return 0.5934859521064232;  // std dev = 0,306, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.5441078296643704;  // std dev = 0,052, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.1791209798836956;  // std dev = 4,459, 86,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=41 */
%   | | | else return -0.10180889099736658;  // std dev = 4,170, 127,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
%   | else return 0.08254121798570441;  // std dev = 0,479, 6.611,000 (wgt'ed) examples reached here.  /* #neg=4.189 #pos=2.422 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.6930371463776657;  // std dev = 2,085, 77,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=73 */
%   | | | else return -0.1520988725729048;  // std dev = 1,082, 240,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=1 */
%   | | else return -0.03426260727062202;  // std dev = 0,322, 245,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=31 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.00351342420209331;  // std dev = 0,346, 305,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=43 */
%   | | else return -0.17441257770538934;  // std dev = 0,005, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05321304703937806;  // std dev = 0,474, 7.069,000 (wgt'ed) examples reached here.  /* #neg=4.568 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.024838913526624595;  // std dev = 0,806, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1548001011637794;  // std dev = 2,883, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.26568616792567423;  // std dev = 1,091, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.14548951703394658;  // std dev = 0,091, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.029136667381634025;  // std dev = 2,699, 56,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | | else return -0.01327302922290123;  // std dev = 7,753, 556,000 (wgt'ed) examples reached here.  /* #neg=482 #pos=74 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01604529373077877;  // std dev = 3,949, 196,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=42 */
%   | | | else return -0.15108834698974952;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.035021111979797584;  // std dev = 0,474, 6.590,000 (wgt'ed) examples reached here.  /* #neg=4.309 #pos=2.281 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7260619547933806;  // std dev = 2,568, 124,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=118 */
%   | | | else return -0.14883105065039118;  // std dev = 1,439, 390,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=2 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1325483919280299;  // std dev = 0,296, 278,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=28 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3135969622801553;  // std dev = 4,701, 110,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=79 */
%   | | | else return 0.05814400801584896;  // std dev = 4,873, 169,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=43 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.07797073335689131;  // std dev = 0,322, 219,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=72 */
%   | | else return 0.027052727391737832;  // std dev = 0,369, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else return 0.40433001692496;  // std dev = 0,291, 27,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.035456383667350856;  // std dev = 0,473, 7.009,000 (wgt'ed) examples reached here.  /* #neg=4.508 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.01064072849702607;  // std dev = 0,791, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.050153151626603915;  // std dev = 2,416, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.41689234979697626;  // std dev = 0,696, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1141787107320824;  // std dev = 0,090, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.018122809941398896;  // std dev = 5,532, 322,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=72 */
%   | | | else return -0.0480653254190581;  // std dev = 3,495, 187,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=17 */
%   | | else return -0.018097512871029328;  // std dev = 0,294, 317,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=41 */


Results
   AUC ROC   = 0.679224
   AUC PR    = 0.070375
   CLL	      = -0.334903
   Precision = 0.363636 at threshold = 0.5
   Recall    = 0.043478
   F1        = 0.07767


Total learning time: 3796.518 seconds
Total inference time: 18.604 seconds
AUC ROC: 0.679224


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 05:03:36
{'AUC PR': 0.070375, 'AUC ROC': 0.679224, 'Precision': [0.363636, 0.5], 'Inference time': 18.604, 'CLL': -0.334903, 'Recall': 0.043478, 'Learning time': 3796.518, 'F1': 0.07767}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.858148935099512;  // std dev = 2,38e-07, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.724815601766179;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.03414893509951206;  // std dev = 4,258, 125,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=22 */
%   | else return 0.21105582712923174;  // std dev = 0,478, 6.863,000 (wgt'ed) examples reached here.  /* #neg=4.441 #pos=2.422 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), title(K, J) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2823913593419366;  // std dev = 2,839, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( author(L, I), venue(L, A) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then if ( haswordauthor(P, M) )
%   | | | then return 0.07689893509951237;  // std dev = 3,307, 64,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return -0.017689991074983875;  // std dev = 8,051, 596,000 (wgt'ed) examples reached here.  /* #neg=522 #pos=74 */
%   | | else if ( haswordvenue(B, Q), haswordtitle(R, Q) )
%   | | | then return 0.05349777230881391;  // std dev = 5,813, 215,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=42 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.60397
   AUC PR    = 0.020779
   CLL	      = -0.195208
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 54.411 seconds
Total inference time: 4.012 seconds
AUC ROC: 0.60397


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 05:04:35
{'AUC PR': 0.020779, 'AUC ROC': 0.60397, 'Precision': [nan, 0.5], 'Inference time': 4.012, 'CLL': -0.195208, 'Recall': 0.0, 'Learning time': 54.411, 'F1': nan}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 185871

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 64082

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.1482963361856207;  // std dev = 16,294, 1.289,000 (wgt'ed) examples reached here.  /* #neg=915 #pos=374 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2,06e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.13222462081120964;  // std dev = 16,260, 1.276,000 (wgt'ed) examples reached here.  /* #neg=902 #pos=374 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,21e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.11611392812962586;  // std dev = 16,230, 1.265,000 (wgt'ed) examples reached here.  /* #neg=891 #pos=374 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.1057967550391037;  // std dev = 16,145, 1.234,000 (wgt'ed) examples reached here.  /* #neg=860 #pos=374 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.07852890582242206;  // std dev = 16,260, 1.276,000 (wgt'ed) examples reached here.  /* #neg=902 #pos=374 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.0645392244352298;  // std dev = 16,265, 1.278,000 (wgt'ed) examples reached here.  /* #neg=904 #pos=374 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.07304097213360246;  // std dev = 16,033, 1.196,000 (wgt'ed) examples reached here.  /* #neg=822 #pos=374 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,11e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.031397127763333615;  // std dev = 16,357, 1.314,000 (wgt'ed) examples reached here.  /* #neg=940 #pos=374 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7,60e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.03138512020583405;  // std dev = 16,289, 1.287,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=374 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,16e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.024862217937743666;  // std dev = 16,294, 1.289,000 (wgt'ed) examples reached here.  /* #neg=915 #pos=374 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.324867
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 3.69 seconds
Total inference time: 5.376 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.583519
   AUC PR    = 0.185795
   CLL	      = -0.324433
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167038
   F1        = 0.28626


Total scoring time: 4.279 seconds
Parameter learned model CLL: -0.324433


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.294, 915, 374], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.26, 902, 374], 'true': [2.06e-07, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.23, 891, 374], 'true': [3.21e-07, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.145, 860, 374], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.26, 902, 374], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.265, 904, 374], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.033, 822, 374], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.357, 940, 374], 'true': [2.11e-08, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.289, 913, 374], 'true': [7.6e-08, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.294, 915, 374], 'true': [5.16e-08, 0, 75]}]]
[{'': [-1.4210854715202005e-15, 0.20596188672906893]}, {'': [5.684341886080802e-16, 0.2071938168846765]}, {'': [1.3737159558028603e-15, 0.20824196597354305]}, {'': [-1.1842378929335003e-16, 0.21122228380647282]}, {'': [-3.789561257387201e-16, 0.20719381688466454]}, {'': [-1.1842378929335004e-17, 0.20700380338018132]}, {'': [-1.0066022089934752e-16, 0.21492209259404393]}, {'': [5.921189464667502e-18, 0.2036145108641496]}, {'': [7.697546304067752e-17, 0.2061509240996356]}, {'': [3.552713678800501e-17, 0.2059618867290816]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.40360348055405776;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.10814893509951236;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else return 0.1787453936270005;  // std dev = 0,467, 1.073,000 (wgt'ed) examples reached here.  /* #neg=729 #pos=344 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.04610638404942385;  // std dev = 2,853, 94,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.08470820775763056;  // std dev = 1,942, 70,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2,06e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14812259761654534;  // std dev = 0,464, 1.133,000 (wgt'ed) examples reached here.  /* #neg=778 #pos=355 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.6490068483161878;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.11018785062144343;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0829765371763349;  // std dev = 2,388, 118,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=6 */
%   | | | else return 0.06981528093914253;  // std dev = 2,357, 34,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,21e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12562104469882754;  // std dev = 0,463, 1.137,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=355 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.0029457878163645017;  // std dev = 3,327, 83,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return -0.13132951925421488;  // std dev = 0,022, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.04761989183137835;  // std dev = 2,139, 65,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=5 */
%   | | | else return -0.1400478104274228;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3348171156227867;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return -0.20218146323323682;  // std dev = 0,047, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.11194627015502825;  // std dev = 0,466, 1.081,000 (wgt'ed) examples reached here.  /* #neg=737 #pos=344 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.03081893028334578;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.052492212863187324;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0652121090770083;  // std dev = 2,381, 108,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=6 */
%   | | | else return 0.008769112292645612;  // std dev = 2,431, 46,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0947978508936677;  // std dev = 0,466, 1.106,000 (wgt'ed) examples reached here.  /* #neg=751 #pos=355 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.048086377888572;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.045208423139081376;  // std dev = 0,895, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.054608530360502804;  // std dev = 2,377, 100,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=6 */
%   | | | else return -0.008128007478456602;  // std dev = 2,452, 52,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08575082220100434;  // std dev = 0,470, 1.078,000 (wgt'ed) examples reached here.  /* #neg=723 #pos=355 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.0475404546569688;  // std dev = 2,627, 108,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=9 */
%   | | | else return -0.008482217618231607;  // std dev = 1,699, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07354364378367675;  // std dev = 2,339, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return -0.12408528337075678;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06943574208168934;  // std dev = 0,469, 1.080,000 (wgt'ed) examples reached here.  /* #neg=725 #pos=355 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.18289481326006418;  // std dev = 1,606, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.046072445793119574;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.046325246260805024;  // std dev = 2,376, 101,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=6 */
%   | | | else return -0.014574931699956552;  // std dev = 2,454, 50,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,11e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.012815469416527206;  // std dev = 2,381, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.18087684781329988;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.005700187063893548;  // std dev = 2,561, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.04077220081249538;  // std dev = 15,198, 1.075,000 (wgt'ed) examples reached here.  /* #neg=739 #pos=336 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return -0.10216568612239116;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06261735098012472;  // std dev = 1,016, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.16877159813090853;  // std dev = 1,739, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.031212607900982924;  // std dev = 3,276, 139,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7,60e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 7.341613392756892E-4;  // std dev = 2,694, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return -0.20165143581078396;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.033489542578930644;  // std dev = 0,464, 1.099,000 (wgt'ed) examples reached here.  /* #neg=755 #pos=344 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.037959358154124934;  // std dev = 2,524, 102,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=9 */
%   | | | else return -0.018071374398110792;  // std dev = 1,691, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03948864461956897;  // std dev = 2,386, 37,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return -0.1067694910019882;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,16e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.676285208305311;  // std dev = 3,378, 326,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=314 */
%   | | | else return -0.23459721196463953;  // std dev = 5,298, 825,000 (wgt'ed) examples reached here.  /* #neg=798 #pos=27 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.18657683697278282;  // std dev = 1,947, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | | else return 0.14679585605497245;  // std dev = 3,130, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.42755561435634604;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.04786778403918548;  // std dev = 0,399, 35,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */


Results
   AUC ROC   = 0.954173
   AUC PR    = 0.492608
   CLL	      = -0.267073
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.154345
   F1        = 0.262404


Total learning time: 200.588 seconds
Total inference time: 39.619 seconds
AUC ROC: 0.954173


Results scoring model
   AUC ROC   = 0.942503
   AUC PR    = 0.593778
   CLL	      = -0.2621
   Precision = 0.934783 at threshold = 0.5
   Recall    = 0.191537
   F1        = 0.31793


Total scoring time: 76.949 seconds
Refined model CLL: -0.2621


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.954173
   AUC PR    = 0.492608
   CLL	      = -0.267073
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.154345
   F1        = 0.262404


Total learning time: 285.506 seconds
Total inference time: 39.619 seconds
AUC ROC: 0.954173
Total revision time: 285.506
Best scored revision CLL: -0.2621


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 05:10:07
{'AUC PR': 0.492608, 'AUC ROC': 0.954173, 'Precision': [0.875, 0.5], 'Inference time': 39.619, 'CLL': -0.267073, 'Recall': 0.154345, 'F1': 0.262404, 'Learning time': 285.506, 'parameter_0.2': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 5.376, 'CLL': -0.324867, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 3.69}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22504313305172588;  // std dev = 0,482, 1.172,000 (wgt'ed) examples reached here.  /* #neg=742 #pos=430 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.274815601766179;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.10237738068996138;  // std dev = 1,698, 76,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=3 */
%   | | | else return -0.011416282291792127;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else return 0.020939632773930943;  // std dev = 0,369, 43,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1892273561578759;  // std dev = 0,480, 1.192,000 (wgt'ed) examples reached here.  /* #neg=762 #pos=430 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.2758460958624092;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( haswordtitle(E, G), haswordvenue(A, G) )
%   | | | then return -0.08302785952796708;  // std dev = 1,368, 40,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | | | else return 0.011136357071792648;  // std dev = 2,431, 45,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -1.2784210178492147E-4;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.06783779789547438;  // std dev = 1,932, 64,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=4 */
%   | | | else return -0.14441919848376303;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15794457949002252;  // std dev = 0,479, 1.201,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=430 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.23173075167607263;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.08602427091612844;  // std dev = 0,863, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.08577173878226911;  // std dev = 1,700, 83,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=3 */
%   | | | else return -0.030912180501946294;  // std dev = 1,642, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else return 0.01056938419170934;  // std dev = 0,362, 45,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.14380102068278897;  // std dev = 0,483, 1.161,000 (wgt'ed) examples reached here.  /* #neg=731 #pos=430 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.046403486614251935;  // std dev = 2,987, 57,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | | else return -0.09745941681390649;  // std dev = 1,403, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | else return -0.11192999143284786;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.04955823168476077;  // std dev = 0,246, 75,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7124878025233755;  // std dev = 3,542, 374,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=361 */
%   | | | else return -0.2164906355616383;  // std dev = 5,006, 717,000 (wgt'ed) examples reached here.  /* #neg=691 #pos=26 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.18002556646058623;  // std dev = 1,926, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | | else return 0.28570869927367926;  // std dev = 2,542, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.41391382747880784;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.5472471608121412;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.6639138274788079;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then return -0.04645553268826506;  // std dev = 0,265, 142,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=12 */
%   | else return 0.016662135640916547;  // std dev = 0,374, 42,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.578159239180923;  // std dev = 2,221, 366,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=361 */
%   | | | else return -0.1750461234066409;  // std dev = 4,998, 666,000 (wgt'ed) examples reached here.  /* #neg=640 #pos=26 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.13695112196624026;  // std dev = 1,915, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | | else return 0.2729387446028732;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.3281855184792268;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.6310529765821886;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6035000200226645;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then return 0.13774636419923023;  // std dev = 0,455, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else return -0.031865694971493115;  // std dev = 0,272, 155,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.44851732086271173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06210277059577745;  // std dev = 0,265, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return -0.02319529069780701;  // std dev = 0,283, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else return 0.055874503764217515;  // std dev = 0,337, 1.109,000 (wgt'ed) examples reached here.  /* #neg=698 #pos=411 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.27199421318992806;  // std dev = 0,486, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.014310796475382975;  // std dev = 0,895, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.04704542734717388;  // std dev = 0,233, 103,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=6 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.0409534831309881;  // std dev = 2,389, 37,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return -0.12156722582571149;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.40709736826974546;  // std dev = 3,120, 371,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=361 */
%   | | | else return -0.16053494346433936;  // std dev = 4,908, 726,000 (wgt'ed) examples reached here.  /* #neg=701 #pos=25 */
%   | | else if ( title(G, D), venue(G, B) )
%   | | | then return -0.0280503929541321;  // std dev = 2,041, 30,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.2516200387040137;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.2479992057648286;  // std dev = 1,873, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.46252273957186524;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.35712443418039896;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.014718839028203392;  // std dev = 0,353, 83,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | else return -0.04214197057234605;  // std dev = 0,232, 85,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return 0.31100382456651193;  // std dev = 3,125, 371,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=361 */
%   | | | else return 0.6273012730573345;  // std dev = 0,631, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return -0.13590179241593744;  // std dev = 4,906, 714,000 (wgt'ed) examples reached here.  /* #neg=689 #pos=25 */
%   | | | else return -0.11391732340504589;  // std dev = 1,053, 97,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=1 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then return -0.004290467581244977;  // std dev = 0,388, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return -0.055907370424243985;  // std dev = 1,079, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.10899464803554954;  // std dev = 2,772, 42,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.35516113526324217;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.023346553739570446;  // std dev = 0,385, 39,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.005288822941788976;  // std dev = 0,259, 1.149,000 (wgt'ed) examples reached here.  /* #neg=744 #pos=405 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.0020541158174895435;  // std dev = 1,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.1810422991939369;  // std dev = 0,723, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.1919475110253484;  // std dev = 1,222, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.27856517055241903;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.018663790830501997;  // std dev = 0,249, 117,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=12 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return -0.023353815236903965;  // std dev = 2,082, 37,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.35241315293239284;  // std dev = 0,991, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.10735626979051087;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.970475
   AUC PR    = 0.357626
   CLL	      = -0.186937
   Precision = 0.334701 at threshold = 0.5
   Recall    = 0.95201
   F1        = 0.495277


Total learning time: 941.255 seconds
Total inference time: 142.466 seconds
AUC ROC: 0.970475


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 05:28:11
{'AUC PR': 0.357626, 'AUC ROC': 0.970475, 'Precision': [0.334701, 0.5], 'Inference time': 142.466, 'CLL': -0.186937, 'Recall': 0.95201, 'Learning time': 941.255, 'F1': 0.495277}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return -0.04185106490048778;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.15226658215833588;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return 0.2198327838967583;  // std dev = 0,480, 1.164,000 (wgt'ed) examples reached here.  /* #neg=743 #pos=421 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | then if ( haswordauthor(K, J) )
%   | | | then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.10548742853685135;  // std dev = 1,388, 55,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=2 */
%   | | else if ( title(L, I), venue(L, A) )
%   | | | then return -0.07627729440868444;  // std dev = 1,933, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.08395538671241559;  // std dev = 0,418, 31,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */


Results
   AUC ROC   = 0.560415
   AUC PR    = 0.016337
   CLL	      = -0.200826
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 19.535 seconds
Total inference time: 6.668 seconds
AUC ROC: 0.560415


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 05:28:38
{'AUC PR': 0.016337, 'AUC ROC': 0.560415, 'Precision': [nan, 0.5], 'Inference time': 6.668, 'CLL': -0.200826, 'Recall': 0.0, 'Learning time': 19.535, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,54e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.15025729787924813;  // std dev = 22,949, 2.547,000 (wgt'ed) examples reached here.  /* #neg=1.803 #pos=744 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.12468032202195257;  // std dev = 23,051, 2.603,000 (wgt'ed) examples reached here.  /* #neg=1.859 #pos=744 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.11628669762079388;  // std dev = 22,902, 2.522,000 (wgt'ed) examples reached here.  /* #neg=1.778 #pos=744 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,66e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.1040574174661963;  // std dev = 22,813, 2.476,000 (wgt'ed) examples reached here.  /* #neg=1.732 #pos=744 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,92e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.07600955195769406;  // std dev = 22,993, 2.571,000 (wgt'ed) examples reached here.  /* #neg=1.827 #pos=744 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.06512853910208112;  // std dev = 22,959, 2.552,000 (wgt'ed) examples reached here.  /* #neg=1.808 #pos=744 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,51e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.05524239795011648;  // std dev = 22,931, 2.537,000 (wgt'ed) examples reached here.  /* #neg=1.793 #pos=744 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.0489436922876404;  // std dev = 22,868, 2.504,000 (wgt'ed) examples reached here.  /* #neg=1.760 #pos=744 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.03757870199420943;  // std dev = 22,902, 2.522,000 (wgt'ed) examples reached here.  /* #neg=1.778 #pos=744 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6,99e-08, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.023698155969668275;  // std dev = 23,010, 2.580,000 (wgt'ed) examples reached here.  /* #neg=1.836 #pos=744 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.323752
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 6.499 seconds
Total inference time: 5.076 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.585746
   AUC PR    = 0.190175
   CLL	      = -0.323255
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.171492
   F1        = 0.292776


Total scoring time: 5.845 seconds
Parameter learned model CLL: -0.323255


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.949, 1803, 744], 'true': [9.54e-07, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.051, 1859, 744], 'true': [0.0, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.902, 1778, 744], 'true': [5.4e-07, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.813, 1732, 744], 'true': [4.66e-07, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.993, 1827, 744], 'true': [2.92e-07, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.959, 1808, 744], 'true': [0.0, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.931, 1793, 744], 'true': [2.51e-07, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.868, 1760, 744], 'true': [0.0, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.902, 1778, 744], 'true': [0.0, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.01, 1836, 744], 'true': [6.99e-08, 0, 154]}]]
[{'': [5.905809751772262e-15, 0.2067810671739051]}, {'': [-2.5837917664003644e-15, 0.20412866208775846]}, {'': [1.8917046861145523e-15, 0.20797662567817615]}, {'': [1.4072437299144842e-15, 0.21019362617803003]}, {'': [5.536696642286495e-16, 0.20563987424584249]}, {'': [-1.9609133941431335e-16, 0.2065427816157488]}, {'': [4.09484855835772e-16, 0.20725847135239486]}, {'': [-3.0567179379290025e-16, 0.2088415723341071]}, {'': [-3.7488050182148143e-17, 0.20797662567815375]}, {'': [3.172065784643304e-17, 0.2052136289886386]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,54e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16815342141624123;  // std dev = 0,462, 2.229,000 (wgt'ed) examples reached here.  /* #neg=1.538 #pos=691 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1308762078267851;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14981560176617903;  // std dev = 2,227, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.02659682761235268;  // std dev = 5,485, 295,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=34 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15603391538461533;  // std dev = 0,466, 2.162,000 (wgt'ed) examples reached here.  /* #neg=1.471 #pos=691 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.23845610811232132;  // std dev = 2,185, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.005796423416628264;  // std dev = 4,944, 196,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=29 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.16073225752622722;  // std dev = 0,021, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.029516238726637483;  // std dev = 3,771, 146,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.22134668235316013;  // std dev = 2,553, 27,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.021486444757073522;  // std dev = 2,952, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.2207189359627019;  // std dev = 3,773, 59,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | | else return 0.13230057800597853;  // std dev = 20,968, 2.026,000 (wgt'ed) examples reached here.  /* #neg=1.381 #pos=645 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.03785528979288082;  // std dev = 0,832, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.27847675465193544;  // std dev = 2,461, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.04272094840570821;  // std dev = 4,604, 243,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=24 */
%   | | | else return 0.06551104469472623;  // std dev = 3,684, 82,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,66e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10965608552649864;  // std dev = 0,465, 2.181,000 (wgt'ed) examples reached here.  /* #neg=1.490 #pos=691 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.07570913096677713;  // std dev = 2,671, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.027850148150562748;  // std dev = 4,573, 225,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=24 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.1923036438920818;  // std dev = 0,070, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.10425508261870237;  // std dev = 3,735, 75,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,92e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09421538194055608;  // std dev = 0,466, 2.159,000 (wgt'ed) examples reached here.  /* #neg=1.468 #pos=691 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.47091144322679757;  // std dev = 0,807, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.060761661503656215;  // std dev = 2,270, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.24739882873377625;  // std dev = 2,287, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return -0.027537857006439303;  // std dev = 5,471, 304,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4742223790596559;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.0018683667368929956;  // std dev = 2,921, 49,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else return 0.06632601845028484;  // std dev = 0,462, 2.164,000 (wgt'ed) examples reached here.  /* #neg=1.495 #pos=669 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.46876501086085953;  // std dev = 0,874, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06879543172760953;  // std dev = 2,420, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.022738697972281854;  // std dev = 4,572, 215,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=24 */
%   | | | else return 0.020642498204879747;  // std dev = 3,748, 94,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,51e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05884458304279799;  // std dev = 0,464, 2.196,000 (wgt'ed) examples reached here.  /* #neg=1.505 #pos=691 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.08055304329977542;  // std dev = 2,309, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.00813013087852621;  // std dev = 0,872, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03561364265740192;  // std dev = 4,640, 238,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=25 */
%   | | | else return 0.04539844757732887;  // std dev = 3,812, 88,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.28149095775817484;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.0419606290468937;  // std dev = 2,860, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else return 0.05256808648835517;  // std dev = 0,466, 2.086,000 (wgt'ed) examples reached here.  /* #neg=1.420 #pos=666 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.6046778602993162;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.046544432178359636;  // std dev = 2,447, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01684723997222177;  // std dev = 4,559, 213,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=24 */
%   | | | else return 0.019377905976548773;  // std dev = 3,725, 91,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6764121712571705;  // std dev = 5,481, 652,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=620 */
%   | | | else return -0.2336512116105162;  // std dev = 7,012, 1.621,000 (wgt'ed) examples reached here.  /* #neg=1.573 #pos=48 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12435376814783974;  // std dev = 3,325, 104,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=13 */
%   | | | else return 0.056132256567525275;  // std dev = 4,595, 115,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.35508138887163715;  // std dev = 0,482, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.06204924572699994;  // std dev = 3,688, 78,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | | | else return -0.16404061986719873;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6,99e-08, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.010899456697388855;  // std dev = 17,209, 2.081,000 (wgt'ed) examples reached here.  /* #neg=1.453 #pos=628 */
%   | | | else return -0.03388797677627359;  // std dev = 4,641, 128,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=29 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.037537346105624356;  // std dev = 4,474, 212,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=39 */
%   | | | else return 0.07056966756663544;  // std dev = 3,290, 63,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.09354055442231383;  // std dev = 4,060, 92,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | | else return 0.05970800213102963;  // std dev = 1,446, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return -0.1393879074762058;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.955255
   AUC PR    = 0.517685
   CLL	      = -0.264499
   Precision = 0.871795 at threshold = 0.5
   Recall    = 0.176394
   F1        = 0.29342


Total learning time: 388.273 seconds
Total inference time: 42.857 seconds
AUC ROC: 0.955255


Results scoring model
   AUC ROC   = 0.93704
   AUC PR    = 0.555365
   CLL	      = -0.260995
   Precision = 0.78355 at threshold = 0.5
   Recall    = 0.201559
   F1        = 0.320638


Total scoring time: 180.435 seconds
Refined model CLL: -0.260995


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.955255
   AUC PR    = 0.517685
   CLL	      = -0.264499
   Precision = 0.871795 at threshold = 0.5
   Recall    = 0.176394
   F1        = 0.29342


Total learning time: 581.052 seconds
Total inference time: 42.857 seconds
AUC ROC: 0.955255
Total revision time: 581.052
Best scored revision CLL: -0.260995


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 05:39:08
{'AUC PR': 0.517685, 'AUC ROC': 0.955255, 'Precision': [0.871795, 0.5], 'parameter_0.4': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 5.076, 'CLL': -0.323752, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 6.499}, 'Inference time': 42.857, 'CLL': -0.264499, 'Recall': 0.176394, 'F1': 0.29342, 'Learning time': 581.052}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.06492798797741087;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.23314893509951234;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2355074256655498;  // std dev = 3,529, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return -0.04185106490048778;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return 0.21439893509950728;  // std dev = 0,479, 2.240,000 (wgt'ed) examples reached here.  /* #neg=1.442 #pos=798 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.2010060779566552;  // std dev = 0,475, 35,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | else return -0.023695445303946377;  // std dev = 0,323, 347,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=41 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19657774869799344;  // std dev = 0,481, 2.304,000 (wgt'ed) examples reached here.  /* #neg=1.459 #pos=845 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.35554685390767016;  // std dev = 0,498, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return -2.9550164080654237E-4;  // std dev = 0,352, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return 0.06717184253700714;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return -0.0475931899335669;  // std dev = 3,930, 186,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=17 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.11658472131835988;  // std dev = 3,749, 74,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | | else return -0.13899103939593233;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6781479073586515;  // std dev = 2,98e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.148644363310981;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.08172118182023508;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.14028145118124524;  // std dev = 2,808, 35,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | else return 0.1628564365824776;  // std dev = 0,480, 2.261,000 (wgt'ed) examples reached here.  /* #neg=1.442 #pos=819 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.018174836789810134;  // std dev = 0,324, 274,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=34 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( haswordauthor(M, K) )
%   | | | then return -0.18722418206965424;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.042735898100974855;  // std dev = 3,896, 96,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=19 */
%   | | else return -0.12317660227882483;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.745338270640748;  // std dev = 4,159, 729,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=712 */
%   | | | else return -0.19113860326522297;  // std dev = 6,669, 1.365,000 (wgt'ed) examples reached here.  /* #neg=1.319 #pos=46 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.10370039748344574;  // std dev = 3,243, 99,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=12 */
%   | | | else return 0.42316373863702383;  // std dev = 3,016, 40,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.5643761292071612;  // std dev = 1,990, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return 0.3731469844878515;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.6731693233534146;  // std dev = 0,300, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return -0.012692112133068817;  // std dev = 0,329, 265,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=34 */
%   | else return 0.023004136474332963;  // std dev = 0,383, 105,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=19 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09607589946479841;  // std dev = 0,400, 2.373,000 (wgt'ed) examples reached here.  /* #neg=1.528 #pos=845 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.06542423988041199;  // std dev = 0,827, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.25360523707737026;  // std dev = 2,255, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.13791271726250173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1924276016181417;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.031363134005776845;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.04773909538829446;  // std dev = 3,950, 207,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=17 */
%   | | | else return 0.06171611099528971;  // std dev = 3,626, 77,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08382391216653591;  // std dev = 0,398, 2.328,000 (wgt'ed) examples reached here.  /* #neg=1.483 #pos=845 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.3291893428574602;  // std dev = 0,495, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.010849501441884242;  // std dev = 3,741, 98,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */
%   | | | else return -0.06097861200783232;  // std dev = 2,564, 88,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.0038420854259028714;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.01839671646123463;  // std dev = 3,585, 105,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06854107943299999;  // std dev = 0,395, 2.327,000 (wgt'ed) examples reached here.  /* #neg=1.482 #pos=845 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.08606048999421974;  // std dev = 0,711, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.14741737856842937;  // std dev = 2,128, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return -0.03947555425383552;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.04957723813478284;  // std dev = 3,616, 175,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=14 */
%   | | | else return 0.011050034268025014;  // std dev = 2,831, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.044982431161771606;  // std dev = 3,821, 86,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   | | | else return -0.12102640387643766;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.5470707335113303;  // std dev = 0,137, 762,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=750 */
%   | | else return -0.19468617569699065;  // std dev = 0,171, 1.599,000 (wgt'ed) examples reached here.  /* #neg=1.551 #pos=48 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.11812846444408978;  // std dev = 0,313, 113,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=13 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.22055927233763964;  // std dev = 3,155, 41,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.1253289941490548;  // std dev = 3,075, 49,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5755906496041467;  // std dev = 0,000917, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05005732109596527;  // std dev = 3,585, 72,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | | else return 0.11417851335072372;  // std dev = 1,200, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.1087306919172812;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.029801059954111517;  // std dev = 0,328, 2.318,000 (wgt'ed) examples reached here.  /* #neg=1.473 #pos=845 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.28455358164414696;  // std dev = 0,846, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09751525659640302;  // std dev = 1,877, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.11366752377813193;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.06172202844104938;  // std dev = 2,767, 96,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | | else return -0.0034149688706796803;  // std dev = 3,361, 131,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02323550159797942;  // std dev = 3,850, 87,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=19 */
%   | | | else return -0.09863330137026861;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.015941903827520372;  // std dev = 0,323, 2.410,000 (wgt'ed) examples reached here.  /* #neg=1.565 #pos=845 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6032504595159621;  // std dev = 1,756, 26,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | else return -0.10662035946951326;  // std dev = 0,440, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1122494512196215;  // std dev = 0,097, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.030193647780281666;  // std dev = 3,027, 62,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.009893669122365363;  // std dev = 3,691, 92,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=17 */
%   | | | else return 0.01672468286770163;  // std dev = 1,279, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return -0.09254627531798366;  // std dev = 0,013, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.972405
   AUC PR    = 0.373911
   CLL	      = -0.239573
   Precision = 0.349881 at threshold = 0.5
   Recall    = 0.950713
   F1        = 0.511514


Total learning time: 768.199 seconds
Total inference time: 64.499 seconds
AUC ROC: 0.972405


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 05:53:01
{'AUC PR': 0.373911, 'AUC ROC': 0.972405, 'Precision': [0.349881, 0.5], 'Inference time': 64.499, 'CLL': -0.239573, 'Recall': 0.950713, 'Learning time': 768.199, 'F1': 0.511514}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22080987930551585;  // std dev = 0,481, 2.330,000 (wgt'ed) examples reached here.  /* #neg=1.485 #pos=845 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.0010060779566550668;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.20430278125335852;  // std dev = 2,426, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.029551599659846082;  // std dev = 4,318, 187,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=21 */
%   | | | else return -0.08415875720818004;  // std dev = 1,681, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08481560176617904;  // std dev = 3,626, 75,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */


Results
   AUC ROC   = 0.540984
   AUC PR    = 0.012967
   CLL	      = -0.201897
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 16.99 seconds
Total inference time: 4.368 seconds
AUC ROC: 0.540984


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 05:53:23
{'AUC PR': 0.012967, 'AUC ROC': 0.540984, 'Precision': [nan, 0.5], 'Inference time': 4.368, 'CLL': -0.201897, 'Recall': 0.0, 'Learning time': 16.99, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,07e-06, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.14859778687403746;  // std dev = 28,102, 3.832,000 (wgt'ed) examples reached here.  /* #neg=2.719 #pos=1.113 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.13548526709619624;  // std dev = 27,984, 3.755,000 (wgt'ed) examples reached here.  /* #neg=2.642 #pos=1.113 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.11961334127066404;  // std dev = 27,919, 3.714,000 (wgt'ed) examples reached here.  /* #neg=2.601 #pos=1.113 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.09204552298527587;  // std dev = 28,102, 3.832,000 (wgt'ed) examples reached here.  /* #neg=2.719 #pos=1.113 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,98e-07, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.08154146256019285;  // std dev = 28,012, 3.773,000 (wgt'ed) examples reached here.  /* #neg=2.660 #pos=1.113 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.07093269148474438;  // std dev = 27,944, 3.730,000 (wgt'ed) examples reached here.  /* #neg=2.617 #pos=1.113 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.052962759995229564;  // std dev = 28,049, 3.797,000 (wgt'ed) examples reached here.  /* #neg=2.684 #pos=1.113 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9,42e-08, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.041095648135211486;  // std dev = 28,090, 3.824,000 (wgt'ed) examples reached here.  /* #neg=2.711 #pos=1.113 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.03308397432878313;  // std dev = 28,095, 3.827,000 (wgt'ed) examples reached here.  /* #neg=2.714 #pos=1.113 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,88e-08, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.027008347972826516;  // std dev = 28,089, 3.823,000 (wgt'ed) examples reached here.  /* #neg=2.710 #pos=1.113 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.323878
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 9.997 seconds
Total inference time: 4.79 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.58686
   AUC PR    = 0.192412
   CLL	      = -0.323349
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.173719
   F1        = 0.296015


Total scoring time: 8.01 seconds
Parameter learned model CLL: -0.323349


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.102, 2719, 1113], 'true': [1.07e-06, 0, 234]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.984, 2642, 1113], 'true': [0.0, 0, 234]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.919, 2601, 1113], 'true': [5.33e-07, 0, 234]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.102, 2719, 1113], 'true': [0.0, 0, 234]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.012, 2660, 1113], 'true': [2.98e-07, 0, 234]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.944, 2617, 1113], 'true': [2.95e-07, 0, 234]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.049, 2684, 1113], 'true': [2.92e-07, 0, 234]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.09, 2711, 1113], 'true': [9.42e-08, 0, 234]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.095, 2714, 1113], 'true': [0.0, 0, 234]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.089, 2710, 1113], 'true': [9.88e-08, 0, 234]}]]
[{'': [4.8584118684451296e-15, 0.20608831627741322]}, {'': [-4.12965008817836e-15, 0.20854899193441245]}, {'': [1.2146029671112824e-15, 0.20987065489439677]}, {'': [-1.2146029671112825e-16, 0.2060883162774218]}, {'': [3.795634272222757e-16, 0.20797119657440688]}, {'': [3.7197215867783024e-16, 0.2093539808379001]}, {'': [3.643808901333847e-16, 0.20720321110691314]}, {'': [3.7956342722227575e-17, 0.20634260768809118]}, {'': [-1.6321227370557858e-16, 0.20624721040225819]}, {'': [4.175197699445033e-17, 0.20637441688788896]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,07e-06, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17136906851369763;  // std dev = 0,464, 3.298,000 (wgt'ed) examples reached here.  /* #neg=2.265 #pos=1.033 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11455919150976876;  // std dev = 2,727, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04416468957915148;  // std dev = 5,856, 389,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=38 */
%   | | | else return 0.05409488104545747;  // std dev = 4,829, 148,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=29 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14986836051937713;  // std dev = 0,464, 3.291,000 (wgt'ed) examples reached here.  /* #neg=2.258 #pos=1.033 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.08129082396652339;  // std dev = 2,893, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return -0.02804467726310901;  // std dev = 5,821, 350,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=38 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.10425243831218937;  // std dev = 4,793, 122,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | | else return -0.14856442691522087;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.36994115715865705;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return 0.047718934936435115;  // std dev = 3,276, 60,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else return 0.128626603168062;  // std dev = 0,464, 3.195,000 (wgt'ed) examples reached here.  /* #neg=2.191 #pos=1.004 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.234129792201316;  // std dev = 2,719, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return -7.698659343559741E-4;  // std dev = 1,326, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.025709921512629987;  // std dev = 5,628, 324,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=36 */
%   | | | else return 0.05398361906304567;  // std dev = 4,824, 139,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=30 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11455921231064539;  // std dev = 0,467, 3.222,000 (wgt'ed) examples reached here.  /* #neg=2.189 #pos=1.033 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.833590901665652;  // std dev = 0,067, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1286333139825676;  // std dev = 2,632, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04201260814917776;  // std dev = 5,694, 390,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=36 */
%   | | | else return 0.06212644277351595;  // std dev = 4,772, 130,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,98e-07, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22337840383192942;  // std dev = 4,068, 67,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=30 */
%   | | | else return -0.1494784352014009;  // std dev = 1,361, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else return 0.09014561894433801;  // std dev = 0,464, 3.173,000 (wgt'ed) examples reached here.  /* #neg=2.172 #pos=1.001 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.3544195365902671;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.07671133963909353;  // std dev = 2,686, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.031081720148105396;  // std dev = 5,673, 367,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=36 */
%   | | | else return 0.017092932934803868;  // std dev = 4,884, 154,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=30 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07471479387941202;  // std dev = 0,464, 3.266,000 (wgt'ed) examples reached here.  /* #neg=2.233 #pos=1.033 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.7322107973900294;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12688445374243512;  // std dev = 2,611, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02856694536463686;  // std dev = 5,729, 376,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=38 */
%   | | | else return 0.01371078151835849;  // std dev = 4,801, 147,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=29 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2731515032521269;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | | else return 0.06251514287542341;  // std dev = 3,120, 46,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else return 0.05279248531307464;  // std dev = 0,462, 3.256,000 (wgt'ed) examples reached here.  /* #neg=2.252 #pos=1.004 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.03513819600585562;  // std dev = 2,846, 47,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return -0.024904358261657954;  // std dev = 5,759, 364,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=38 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04842947911488742;  // std dev = 4,783, 129,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=31 */
%   | | | else return -0.14989669929020855;  // std dev = 0,012, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9,42e-08, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.038705832177917406;  // std dev = 0,460, 3.385,000 (wgt'ed) examples reached here.  /* #neg=2.352 #pos=1.033 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.027952260226588487;  // std dev = 2,866, 46,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return -0.01398335523739194;  // std dev = 5,712, 343,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=38 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03499124407702834;  // std dev = 4,803, 132,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=31 */
%   | | | else return -0.13143567166003056;  // std dev = 0,008, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03978277087915889;  // std dev = 0,464, 3.289,000 (wgt'ed) examples reached here.  /* #neg=2.256 #pos=1.033 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.011226259893270314;  // std dev = 5,771, 216,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=43 */
%   | | | else return -0.027726207508662216;  // std dev = 3,202, 109,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.23805663525871337;  // std dev = 0,358, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -2.957491493698058E-4;  // std dev = 4,536, 204,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,88e-08, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.13446056884637847;  // std dev = 2,691, 29,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return -0.03397283092398107;  // std dev = 3,270, 60,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.018533015461462504;  // std dev = 4,560, 99,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0.03821128908627889;  // std dev = 25,737, 3.048,000 (wgt'ed) examples reached here.  /* #neg=2.075 #pos=973 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.25721619335198403;  // std dev = 1,187, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1319197932807161;  // std dev = 2,554, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.016253355032076623;  // std dev = 5,642, 334,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=36 */
%   | | | else return 0.01494684125387395;  // std dev = 4,777, 142,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=30 */


Results
   AUC ROC   = 0.62594
   AUC PR    = 0.16219
   CLL	      = -0.325654
   Precision = 0.962617 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.234624


Total learning time: 153.906 seconds
Total inference time: 11.24 seconds
AUC ROC: 0.62594


Results scoring model
   AUC ROC   = 0.640287
   AUC PR    = 0.200522
   CLL	      = -0.319474
   Precision = 0.88764 at threshold = 0.5
   Recall    = 0.175947
   F1        = 0.29368


Total scoring time: 30.9 seconds
Refined model CLL: -0.319474


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.62594
   AUC PR    = 0.16219
   CLL	      = -0.325654
   Precision = 0.962617 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.234624


Total learning time: 202.81300000000002 seconds
Total inference time: 11.24 seconds
AUC ROC: 0.62594
Total revision time: 202.81300000000002
Best scored revision CLL: -0.319474


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 05:57:04
{'AUC PR': 0.16219, 'AUC ROC': 0.62594, 'Precision': [0.962617, 0.5], 'Inference time': 11.24, 'parameter_0.6': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 4.79, 'CLL': -0.323878, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 9.997}, 'CLL': -0.325654, 'Recall': 0.133593, 'F1': 0.234624, 'Learning time': 202.81300000000002}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21994219609322507;  // std dev = 0,481, 3.502,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=1.267 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return -0.03560106490048822;  // std dev = 0,308, 320,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=34 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.18072958026080266;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.058517731567154375;  // std dev = 2,141, 60,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=5 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.07619404788146632;  // std dev = 4,762, 133,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=29 */
%   | | | else return -0.00851773156715447;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8292127042646112;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.17078729573538873;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.7042127042646112;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.03233770426461116;  // std dev = 3,219, 64,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | else return 0.18989245814680875;  // std dev = 0,480, 3.413,000 (wgt'ed) examples reached here.  /* #neg=2.182 #pos=1.231 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then if ( author(L, J), title(L, K) )
%   | | | then return 0.3451374351017613;  // std dev = 0,993, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.24691819936901657;  // std dev = 2,481, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else return 0.0033120214018354083;  // std dev = 0,351, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else return -0.006886514250972881;  // std dev = 0,340, 489,000 (wgt'ed) examples reached here.  /* #neg=423 #pos=66 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15734854094167425;  // std dev = 0,478, 3.550,000 (wgt'ed) examples reached here.  /* #neg=2.283 #pos=1.267 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return -0.026208903077980957;  // std dev = 0,916, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.10073526625274194;  // std dev = 2,689, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return -0.05418739058705227;  // std dev = 3,518, 159,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=14 */
%   | | | else return -0.003285440200896814;  // std dev = 4,560, 180,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.12701871070387358;  // std dev = 4,571, 104,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | | | else return -0.02887513024168416;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return -0.12469107758523679;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.14046222082604615;  // std dev = 0,481, 3.458,000 (wgt'ed) examples reached here.  /* #neg=2.191 #pos=1.267 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.48028388527895766;  // std dev = 1,169, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.22040037490909264;  // std dev = 2,488, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.14112299439959985;  // std dev = 0,069, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.05814870734326102;  // std dev = 4,500, 288,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=22 */
%   | | | else return 0.008665068222202137;  // std dev = 3,384, 91,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.046629784985962236;  // std dev = 4,861, 142,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=30 */
%   | | | else return -0.1117063664089777;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10812229883036234;  // std dev = 0,479, 3.525,000 (wgt'ed) examples reached here.  /* #neg=2.258 #pos=1.267 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7661582621012981;  // std dev = 1,666, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | | else return -0.1322554278448567;  // std dev = 0,289, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.0776191524683401;  // std dev = 2,684, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.025868536342725807;  // std dev = 2,121, 47,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.017149629123265824;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.22759863967029773;  // std dev = 0,046, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0727573400442636;  // std dev = 4,753, 124,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=30 */
%   | | | else return -0.1010933337275598;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09076129511230756;  // std dev = 0,479, 3.491,000 (wgt'ed) examples reached here.  /* #neg=2.224 #pos=1.267 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.03413402996874497;  // std dev = 0,403, 49,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.025717839207214113;  // std dev = 4,602, 290,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=33 */
%   | | | else return -0.06910349026003061;  // std dev = 2,169, 90,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=5 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0616544019070403;  // std dev = 4,655, 117,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=29 */
%   | | | else return 0.0026040703460896795;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return -0.09226996307104748;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.5875741801776956;  // std dev = 0,027, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.026835636873847733;  // std dev = 4,406, 91,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | else return 0.4073291309458161;  // std dev = 0,443, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.07410243865174582;  // std dev = 0,480, 3.371,000 (wgt'ed) examples reached here.  /* #neg=2.143 #pos=1.228 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), venue(K, A) )
%   | | | then return 0.13514828463261583;  // std dev = 0,947, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2738994595809128;  // std dev = 1,847, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else return 0.03752806432151572;  // std dev = 0,307, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.021569962438666695;  // std dev = 0,286, 328,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=36 */
%   | | else return 0.03464044573532055;  // std dev = 0,411, 137,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=30 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6560214260292949;  // std dev = 0,186, 1.186,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1.143 */
%   | | else return -0.2563166070706798;  // std dev = 0,168, 2.367,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=63 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.18268644694931108;  // std dev = 0,274, 207,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=17 */
%   | | else return 0.16984677056034322;  // std dev = 0,460, 150,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=60 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.742213174533053;  // std dev = 1,010, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.20582079356087357;  // std dev = 0,259, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( title(L, I), venue(L, B) )
%   | | | then return 0.127310470619775;  // std dev = 0,694, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24674459584153585;  // std dev = 1,365, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.44585588228401324;  // std dev = 0,358, 26,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3362041320171973;  // std dev = 0,060, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.030179802367391196;  // std dev = 0,391, 3.563,000 (wgt'ed) examples reached here.  /* #neg=2.304 #pos=1.259 */
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( haswordtitle(G, E) )
%   | | then if ( author(H, F), venue(H, A) )
%   | | | then return 0.004723352276937033;  // std dev = 0,889, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.06166019136849769;  // std dev = 1,617, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else return 0.008876737231630101;  // std dev = 0,223, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return -0.009188699090670957;  // std dev = 2,637, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return 0.2840885647279755;  // std dev = 0,744, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.03497745378623215;  // std dev = 3,965, 311,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=27 */
%   | | | else return -0.016611201246873562;  // std dev = 4,035, 149,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.4985273663838579;  // std dev = 0,181, 1.184,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1.145 */
%   | | else return -0.21520505605277443;  // std dev = 0,165, 2.499,000 (wgt'ed) examples reached here.  /* #neg=2.434 #pos=65 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.10313759301607088;  // std dev = 3,310, 83,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=13 */
%   | | | else return -0.10865187316407932;  // std dev = 0,100, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2594438770609175;  // std dev = 3,903, 64,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | | | else return 0.05840619704768497;  // std dev = 3,698, 88,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.45981472157456627;  // std dev = 0,273, 37,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.0062581013388199325;  // std dev = 0,343, 144,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=31 */
%   | | else return -0.12846347037862807;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.977294
   AUC PR    = 0.354507
   CLL	      = -0.248698
   Precision = 0.354792 at threshold = 0.5
   Recall    = 0.950713
   F1        = 0.516743


Total learning time: 1215.993 seconds
Total inference time: 69.131 seconds
AUC ROC: 0.977294


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 06:18:29
{'AUC PR': 0.354507, 'AUC ROC': 0.977294, 'Precision': [0.354792, 0.5], 'Inference time': 69.131, 'CLL': -0.248698, 'Recall': 0.950713, 'Learning time': 1215.993, 'F1': 0.516743}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.34201990284144784;  // std dev = 2,782, 31,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.12345505754849195;  // std dev = 3,090, 49,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | else return 0.21599777230880954;  // std dev = 0,479, 3.440,000 (wgt'ed) examples reached here.  /* #neg=2.209 #pos=1.231 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return 0.24276431971489695;  // std dev = 2,481, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, A) )
%   | | | then return -0.06185106490048783;  // std dev = 4,499, 275,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=22 */
%   | | | else return 0.013704490655067922;  // std dev = 3,438, 90,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
%   | | else if ( haswordvenue(B, P), haswordtitle(Q, P) )
%   | | | then return 0.08715656868729757;  // std dev = 4,809, 131,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=30 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.55631
   AUC PR    = 0.016251
   CLL	      = -0.201017
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 30.5 seconds
Total inference time: 6.109 seconds
AUC ROC: 0.55631


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 06:19:07
{'AUC PR': 0.016251, 'AUC ROC': 0.55631, 'Precision': [nan, 0.5], 'Inference time': 6.109, 'CLL': -0.201017, 'Recall': 0.0, 'Learning time': 30.5, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.153338006570503;  // std dev = 32,417, 5.051,000 (wgt'ed) examples reached here.  /* #neg=3.560 #pos=1.491 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.13397953755523;  // std dev = 32,409, 5.045,000 (wgt'ed) examples reached here.  /* #neg=3.554 #pos=1.491 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.11238571492379737;  // std dev = 32,469, 5.090,000 (wgt'ed) examples reached here.  /* #neg=3.599 #pos=1.491 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.09361264159015822;  // std dev = 32,505, 5.117,000 (wgt'ed) examples reached here.  /* #neg=3.626 #pos=1.491 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601509;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.07919609463134711;  // std dev = 32,485, 5.102,000 (wgt'ed) examples reached here.  /* #neg=3.611 #pos=1.491 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,63e-07, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.06345643497024162;  // std dev = 32,535, 5.140,000 (wgt'ed) examples reached here.  /* #neg=3.649 #pos=1.491 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,53e-07, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.0600261307904213;  // std dev = 32,353, 5.004,000 (wgt'ed) examples reached here.  /* #neg=3.513 #pos=1.491 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2,46e-07, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.041370124301856014;  // std dev = 32,528, 5.135,000 (wgt'ed) examples reached here.  /* #neg=3.644 #pos=1.491 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.03861685875930867;  // std dev = 32,412, 5.047,000 (wgt'ed) examples reached here.  /* #neg=3.556 #pos=1.491 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801165;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.022816601128137003;  // std dev = 32,604, 5.194,000 (wgt'ed) examples reached here.  /* #neg=3.703 #pos=1.491 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.322956
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 14.935 seconds
Total inference time: 5.085 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.584911
   AUC PR    = 0.18843
   CLL	      = -0.322481
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169822
   F1        = 0.290338


Total scoring time: 9.012 seconds
Parameter learned model CLL: -0.322481


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.417, 3560, 1491], 'true': [1.05e-06, 0, 305]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.409, 3554, 1491], 'true': [0.0, 0, 305]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.469, 3599, 1491], 'true': [0.0, 0, 305]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.505, 3626, 1491], 'true': [0.0, 0, 305]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.485, 3611, 1491], 'true': [0.0, 0, 305]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.535, 3649, 1491], 'true': [3.63e-07, 0, 305]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.353, 3513, 1491], 'true': [2.53e-07, 0, 305]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.528, 3644, 1491], 'true': [2.46e-07, 0, 305]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.412, 3556, 1491], 'true': [0.0, 0, 305]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.604, 3703, 1491], 'true': [0.0, 0, 305]}]]
[{'': [3.634251369789365e-15, 0.20805248355503125]}, {'': [-4.845668493052486e-15, 0.20819616513816394]}, {'': [-1.397788988380525e-16, 0.20712090041342698]}, {'': [-8.153769098886396e-16, 0.20647839194849918]}, {'': [-3.145025223856181e-16, 0.20683509176425888]}, {'': [4.309849380839952e-16, 0.20593267876880858]}, {'': [2.0966834825707875e-16, 0.2091804973287225]}, {'': [1.9802010668724104e-16, 0.206051184711891]}, {'': [-2.1258040864953816e-16, 0.20814826071817613]}, {'': [-1.5725126119280905e-16, 0.20465740586013242]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17449179224236433;  // std dev = 0,465, 4.375,000 (wgt'ed) examples reached here.  /* #neg=2.991 #pos=1.384 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27481560176617903;  // std dev = 2,958, 36,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.039967116917694;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.09029179224236951;  // std dev = 3,159, 56,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return -0.01685106490048738;  // std dev = 8,208, 616,000 (wgt'ed) examples reached here.  /* #neg=539 #pos=77 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.13858368178555;  // std dev = 5,280, 132,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return 0.8355533787552469;  // std dev = 4,21e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.15518044067251702;  // std dev = 0,466, 4.183,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=1.337 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.17013785061927997;  // std dev = 3,125, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.01909013130954184;  // std dev = 6,967, 361,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=58 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.07543600074677749;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.032923839268210735;  // std dev = 5,348, 298,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.13026196452207714;  // std dev = 5,161, 123,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
%   | | | else return 0.7713453437385849;  // std dev = 0,145, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.12791952003226142;  // std dev = 0,464, 4.252,000 (wgt'ed) examples reached here.  /* #neg=2.913 #pos=1.339 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.13586254329961608;  // std dev = 3,144, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.0665449970326616;  // std dev = 1,246, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.027680776118963576;  // std dev = 7,104, 508,000 (wgt'ed) examples reached here.  /* #neg=451 #pos=57 */
%   | | | else return 0.04623128338897824;  // std dev = 5,171, 175,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=33 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3400605256232999;  // std dev = 2,952, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.08433383298950546;  // std dev = 4,064, 83,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | | else return 0.10384283521724964;  // std dev = 0,463, 4.305,000 (wgt'ed) examples reached here.  /* #neg=2.966 #pos=1.339 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0653943733099787;  // std dev = 6,315, 238,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=51 */
%   | | | else return -0.011104973013506197;  // std dev = 4,188, 146,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=22 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.024844957828437715;  // std dev = 5,504, 309,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=34 */
%   | | | else return -0.14313835412530215;  // std dev = 0,023, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601509;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09433749316764313;  // std dev = 0,466, 4.329,000 (wgt'ed) examples reached here.  /* #neg=2.945 #pos=1.384 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.11125529830769965;  // std dev = 3,029, 48,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return -0.015420942213979499;  // std dev = 7,171, 473,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=60 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.05999359748937888;  // std dev = 5,152, 156,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=34 */
%   | | | else return -0.12974354540132083;  // std dev = 0,027, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,63e-07, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07392366494576269;  // std dev = 0,464, 4.376,000 (wgt'ed) examples reached here.  /* #neg=2.992 #pos=1.384 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.05309172810137865;  // std dev = 3,127, 56,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return -0.005634113061824888;  // std dev = 7,133, 447,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=60 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.015139044377700897;  // std dev = 5,275, 187,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=34 */
%   | | | else return -0.11469745553317949;  // std dev = 0,025, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,53e-07, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16610256224394024;  // std dev = 4,893, 101,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=43 */
%   | | | else return -0.15707775111234829;  // std dev = 1,601, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else return 0.05597411144737976;  // std dev = 0,463, 4.288,000 (wgt'ed) examples reached here.  /* #neg=2.951 #pos=1.337 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.1581627778263023;  // std dev = 1,589, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.02764794669081759;  // std dev = 3,106, 53,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.03551259071913288;  // std dev = 3,174, 61,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return -0.009824408682876368;  // std dev = 8,150, 588,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=77 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2,46e-07, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.23290196125842075;  // std dev = 2,953, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.05649755977362221;  // std dev = 3,976, 75,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | else return 0.05814722641931004;  // std dev = 0,468, 4.125,000 (wgt'ed) examples reached here.  /* #neg=2.786 #pos=1.339 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.19049816783176118;  // std dev = 2,928, 35,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return -0.0027854800935975623;  // std dev = 6,951, 380,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=58 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.016464026285093532;  // std dev = 5,491, 303,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=34 */
%   | | | else return -0.10165349486366035;  // std dev = 0,021, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2027113876915447;  // std dev = 3,332, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return -0.04506985631105608;  // std dev = 4,023, 97,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.015352358550773828;  // std dev = 5,120, 126,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0.04275246083510999;  // std dev = 29,678, 4.045,000 (wgt'ed) examples reached here.  /* #neg=2.749 #pos=1.296 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.4161238357538253;  // std dev = 1,145, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.05568515592349939;  // std dev = 2,954, 42,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.014271194980597165;  // std dev = 7,043, 475,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=57 */
%   | | | else return 0.005263052999559558;  // std dev = 5,222, 199,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=33 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801165;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2862247403290069;  // std dev = 2,633, 33,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | | else return -0.04742732301994423;  // std dev = 4,297, 110,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | else return 0.033995407929867084;  // std dev = 0,467, 4.162,000 (wgt'ed) examples reached here.  /* #neg=2.825 #pos=1.337 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.17795142718865142;  // std dev = 1,304, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.02563107467458828;  // std dev = 3,005, 56,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.004704818875585693;  // std dev = 7,065, 452,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=60 */
%   | | | else return 0.006909988923503994;  // std dev = 5,114, 187,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=32 */


Results
   AUC ROC   = 0.626821
   AUC PR    = 0.173952
   CLL	      = -0.330838
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 235.539 seconds
Total inference time: 13.809 seconds
AUC ROC: 0.626821


Results scoring model
   AUC ROC   = 0.639339
   AUC PR    = 0.20264
   CLL	      = -0.324809
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170935
   F1        = 0.291964


Total scoring time: 48.586 seconds
Refined model CLL: -0.324809


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.322956
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 308.072 seconds
Total inference time: 5.085 seconds
AUC ROC: 0.566796
Total revision time: 308.072
Best scored revision CLL: -0.322481


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:24:35
{'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 5.085, 'parameter_0.8': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 5.085, 'CLL': -0.322956, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 14.935}, 'CLL': -0.322956, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 308.072}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.26010971941323735;  // std dev = 4,952, 102,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=41 */
%   | | | else return 0.2867203636709409;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2205159563761029;  // std dev = 0,481, 4.512,000 (wgt'ed) examples reached here.  /* #neg=2.877 #pos=1.635 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then return 0.1034319539674369;  // std dev = 0,430, 53,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else return -0.021610583938563667;  // std dev = 0,325, 499,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=60 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.07883859027192504;  // std dev = 4,994, 145,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=32 */
%   | | | else return -0.03658790700575096;  // std dev = 1,338, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1883917899160603;  // std dev = 0,480, 4.696,000 (wgt'ed) examples reached here.  /* #neg=3.007 #pos=1.689 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.853720721826506;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14236095270929922;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.16995241716001303;  // std dev = 2,992, 42,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return -0.14168063798168398;  // std dev = 0,026, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09508597027374144;  // std dev = 2,872, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.1836918559977885;  // std dev = 1,151, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.03814182677057866;  // std dev = 6,430, 455,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=46 */
%   | | | else return 0.03085862375993901;  // std dev = 5,030, 173,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=31 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16149282549459995;  // std dev = 0,480, 4.677,000 (wgt'ed) examples reached here.  /* #neg=2.988 #pos=1.689 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.10952429584321448;  // std dev = 0,441, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.049674267833135846;  // std dev = 6,226, 242,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=49 */
%   | | | else return -0.06750436304239513;  // std dev = 2,898, 129,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.010188887055106196;  // std dev = 5,249, 254,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=32 */
%   | | | else return -0.10305071293329071;  // std dev = 1,394, 60,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=2 */
%   | | else return -0.12467825661706132;  // std dev = 0,028, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13008473814466634;  // std dev = 0,479, 4.734,000 (wgt'ed) examples reached here.  /* #neg=3.045 #pos=1.689 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.20022150799455277;  // std dev = 0,478, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.21752510199510883;  // std dev = 0,930, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12505189827001228;  // std dev = 0,026, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.16209366203769326;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07766101898010844;  // std dev = 3,107, 52,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.019905734747326577;  // std dev = 6,381, 413,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=46 */
%   | | | else return 0.02359466092659084;  // std dev = 5,023, 171,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=31 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.7116754571953137;  // std dev = 0,054, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.32878463570928157;  // std dev = 3,046, 38,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return -0.02402438629901596;  // std dev = 4,032, 93,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=21 */
%   | else return 0.11080691989769219;  // std dev = 0,480, 4.524,000 (wgt'ed) examples reached here.  /* #neg=2.891 #pos=1.633 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.06020335221081528;  // std dev = 0,959, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.18514322694235222;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( title(K, H), venue(K, B) )
%   | | | then return 0.05655199150711286;  // std dev = 6,153, 223,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=49 */
%   | | | else return -0.06307039626628627;  // std dev = 2,909, 135,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=9 */
%   | else return -0.024984194247529255;  // std dev = 0,305, 320,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6950373234394428;  // std dev = 0,322, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.27906303720149145;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.4671398262964424;  // std dev = 0,942, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.0525810963320946;  // std dev = 4,024, 94,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.16727110197609502;  // std dev = 4,730, 93,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=41 */
%   | | | else return -0.20281454005373103;  // std dev = 1,358, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else return 0.09296801435238065;  // std dev = 0,481, 4.372,000 (wgt'ed) examples reached here.  /* #neg=2.780 #pos=1.592 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.019322645743944943;  // std dev = 0,401, 72,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else return -0.006522304147653261;  // std dev = 0,339, 664,000 (wgt'ed) examples reached here.  /* #neg=574 #pos=90 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.0577391364628423;  // std dev = 0,474, 4.354,000 (wgt'ed) examples reached here.  /* #neg=2.838 #pos=1.516 */
%   | | else return 0.050947178539062235;  // std dev = 0,376, 411,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=84 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.15796361361107011;  // std dev = 0,297, 240,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=24 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.42489956602848716;  // std dev = 4,141, 85,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=61 */
%   | | | else return 0.08339721018149095;  // std dev = 4,495, 118,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=31 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.6519992580969806;  // std dev = 0,213, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.05203581523290196;  // std dev = 4,945, 140,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | | | else return -0.009050989415916633;  // std dev = 1,332, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.11470243821932226;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.08292724690420118;  // std dev = 4,747, 102,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=43 */
%   | | | else return -0.09048704750628668;  // std dev = 1,657, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else return 0.4969064546983236;  // std dev = 0,217, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0642205995848706;  // std dev = 0,478, 4.444,000 (wgt'ed) examples reached here.  /* #neg=2.811 #pos=1.633 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then if ( author(J, I), title(J, H) )
%   | | | then return 0.09435612853374739;  // std dev = 0,922, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1177307844536255;  // std dev = 2,857, 35,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( title(K, H), venue(K, A) )
%   | | | then return 0.02217976437994551;  // std dev = 6,221, 244,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=49 */
%   | | | else return -0.05330167622058965;  // std dev = 2,900, 122,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=9 */
%   | else return -0.019664476279582677;  // std dev = 0,309, 308,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.037496883974270624;  // std dev = 0,476, 4.286,000 (wgt'ed) examples reached here.  /* #neg=2.770 #pos=1.516 */
%   | | else return 0.03896723586697424;  // std dev = 0,368, 421,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=84 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.15405232271593608;  // std dev = 0,288, 260,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=24 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.20775681699076917;  // std dev = 4,864, 100,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=61 */
%   | | | else return 0.0738225866188442;  // std dev = 4,482, 112,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.34777178696877936;  // std dev = 0,383, 56,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=46 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.029879077064590386;  // std dev = 4,972, 149,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=32 */
%   | | | else return -0.032687995801388425;  // std dev = 1,375, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return -0.10174818596297143;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03825453216852633;  // std dev = 0,474, 4.635,000 (wgt'ed) examples reached here.  /* #neg=2.946 #pos=1.689 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.2836220917060285;  // std dev = 1,144, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.060291617605486694;  // std dev = 2,846, 44,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.21866214710339968;  // std dev = 0,098, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0333649095748653;  // std dev = 6,414, 358,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=51 */
%   | | | else return 0.08457870169188786;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.013677651517542641;  // std dev = 5,385, 297,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=34 */
%   | | | else return -0.09281841001113221;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.581781
   AUC PR    = 0.032516
   CLL	      = -0.379259
   Precision = 0.206186 at threshold = 0.5
   Recall    = 0.02594
   F1        = 0.046083


Total learning time: 2365.056 seconds
Total inference time: 30.6 seconds
AUC ROC: 0.581781


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 07:04:32
{'AUC PR': 0.032516, 'AUC ROC': 0.581781, 'Precision': [0.206186, 0.5], 'Inference time': 30.6, 'CLL': -0.379259, 'Recall': 0.02594, 'Learning time': 2365.056, 'F1': 0.046083}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21432776259845276;  // std dev = 0,479, 4.742,000 (wgt'ed) examples reached here.  /* #neg=3.053 #pos=1.689 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.2635543405049178;  // std dev = 0,491, 37,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.08605591184369818;  // std dev = 6,151, 215,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=49 */
%   | | | else return -0.08144838033672926;  // std dev = 2,908, 149,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.006829967854074825;  // std dev = 5,261, 237,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=32 */
%   | | | else return -0.09929787341112603;  // std dev = 1,384, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.541194
   AUC PR    = 0.012965
   CLL	      = -0.201448
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 33.952 seconds
Total inference time: 4.281 seconds
AUC ROC: 0.541194


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 07:05:10
{'AUC PR': 0.012965, 'AUC ROC': 0.541194, 'Precision': [nan, 0.5], 'Inference time': 4.281, 'CLL': -0.201448, 'Recall': 0.0, 'Learning time': 33.952, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,53e-06, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15248136881914517;  // std dev = 36,171, 6.299,000 (wgt'ed) examples reached here.  /* #neg=4.445 #pos=1.854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.1354329062652175;  // std dev = 36,105, 6.245,000 (wgt'ed) examples reached here.  /* #neg=4.391 #pos=1.854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11055904847967762;  // std dev = 36,251, 6.367,000 (wgt'ed) examples reached here.  /* #neg=4.513 #pos=1.854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09121108402208875;  // std dev = 36,312, 6.420,000 (wgt'ed) examples reached here.  /* #neg=4.566 #pos=1.854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.0803182112347044;  // std dev = 36,211, 6.333,000 (wgt'ed) examples reached here.  /* #neg=4.479 #pos=1.854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06273817201522798;  // std dev = 36,309, 6.417,000 (wgt'ed) examples reached here.  /* #neg=4.563 #pos=1.854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.049512933244355364;  // std dev = 36,361, 6.463,000 (wgt'ed) examples reached here.  /* #neg=4.609 #pos=1.854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2,19e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.04530922287295378;  // std dev = 36,237, 6.355,000 (wgt'ed) examples reached here.  /* #neg=4.501 #pos=1.854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.04056535940070027;  // std dev = 36,140, 6.274,000 (wgt'ed) examples reached here.  /* #neg=4.420 #pos=1.854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.031004837486458922;  // std dev = 36,186, 6.312,000 (wgt'ed) examples reached here.  /* #neg=4.458 #pos=1.854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.323042
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 21.369 seconds
Total inference time: 5.266 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.322505
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 11.169 seconds
Parameter learned model CLL: -0.322505


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.171, 4445, 1854], 'true': [1.53e-06, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.105, 4391, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.251, 4513, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.312, 4566, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.211, 4479, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.309, 4563, 1854], 'true': [4.46e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.361, 4609, 1854], 'true': [2.46e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.237, 4501, 1854], 'true': [2.19e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.14, 4420, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.186, 4458, 1854], 'true': [0.0, 0, 392]}]]
[{'': [5.945357584931451e-15, 0.20770085218025117]}, {'': [-5.3653226985966745e-15, 0.2087412508068945]}, {'': [-1.1600697726695512e-15, 0.20639794246923257]}, {'': [-1.740104659004327e-15, 0.2053882435147089]}, {'': [-1.5407176668267478e-15, 0.20704837016900293]}, {'': [5.075305255429287e-16, 0.20544525728360497]}, {'': [1.5407176668267478e-16, 0.2045729114818884]}, {'': [1.2235110883624173e-16, 0.2066272677243517]}, {'': [-2.628283078704452e-16, 0.2081819012314321]}, {'': [-3.149408171895852e-16, 0.20745113417866626]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,53e-06, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.13765204068957412;  // std dev = 5,694, 161,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=45 */
%   | | | else return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.17040264123574284;  // std dev = 0,463, 5.329,000 (wgt'ed) examples reached here.  /* #neg=3.665 #pos=1.664 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1414822684328457;  // std dev = 3,490, 60,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | | else return 0.011995088945666036;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.010816582141866609;  // std dev = 8,127, 580,000 (wgt'ed) examples reached here.  /* #neg=504 #pos=76 */
%   | | | else return 0.04674542632758186;  // std dev = 5,907, 228,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15291031805916971;  // std dev = 0,465, 5.417,000 (wgt'ed) examples reached here.  /* #neg=3.701 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1718198589869696;  // std dev = 3,412, 54,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return 4.234424515521251E-4;  // std dev = 1,312, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02296661856469756;  // std dev = 8,110, 627,000 (wgt'ed) examples reached here.  /* #neg=552 #pos=75 */
%   | | | else return 0.04063699848232301;  // std dev = 5,977, 234,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=44 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12446743776472965;  // std dev = 0,463, 5.528,000 (wgt'ed) examples reached here.  /* #neg=3.812 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.18949071180195454;  // std dev = 3,309, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return -0.02606440752171654;  // std dev = 1,333, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.016138738338835758;  // std dev = 8,092, 606,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=75 */
%   | | | else return 0.03780561829720881;  // std dev = 5,969, 231,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=44 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.07586167024521343;  // std dev = 5,708, 163,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=45 */
%   | | | else return 0.687718228641934;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.11400071775719513;  // std dev = 0,466, 5.208,000 (wgt'ed) examples reached here.  /* #neg=3.544 #pos=1.664 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.3902960872693773;  // std dev = 1,339, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06135315874212255;  // std dev = 3,327, 62,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.013153558662433635;  // std dev = 8,086, 602,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=75 */
%   | | | else return 0.05801444300878036;  // std dev = 5,875, 204,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=44 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0901264108042562;  // std dev = 0,464, 5.450,000 (wgt'ed) examples reached here.  /* #neg=3.734 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.06486665304065656;  // std dev = 7,187, 300,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=67 */
%   | | | else return -0.022249321156002644;  // std dev = 4,648, 199,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=26 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01906958191993623;  // std dev = 6,295, 386,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=45 */
%   | | | else return -0.16564700583344158;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07923962347903364;  // std dev = 0,466, 5.362,000 (wgt'ed) examples reached here.  /* #neg=3.646 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.048572286500257494;  // std dev = 7,227, 309,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=67 */
%   | | | else return -0.029772212106281164;  // std dev = 4,678, 217,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=26 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.008723491693380292;  // std dev = 6,267, 360,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=45 */
%   | | | else return -0.14298846507916949;  // std dev = 0,012, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.08322282113146677;  // std dev = 5,457, 133,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | | | else return 0.6697286982652455;  // std dev = 0,312, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.05480422043100597;  // std dev = 0,462, 5.360,000 (wgt'ed) examples reached here.  /* #neg=3.696 #pos=1.664 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03901505904390818;  // std dev = 7,236, 314,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=67 */
%   | | | else return -0.03422959484105672;  // std dev = 4,713, 226,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=26 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02398012524704048;  // std dev = 6,324, 415,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=45 */
%   | | | else return -0.12696388553558616;  // std dev = 0,004, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2,19e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.052120822357768354;  // std dev = 0,465, 5.386,000 (wgt'ed) examples reached here.  /* #neg=3.670 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.415061662033177;  // std dev = 1,181, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0848536310171326;  // std dev = 3,299, 56,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.10352633845472703;  // std dev = 3,491, 63,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.005840745340838609;  // std dev = 9,298, 733,000 (wgt'ed) examples reached here.  /* #neg=631 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03855465846015716;  // std dev = 0,464, 5.442,000 (wgt'ed) examples reached here.  /* #neg=3.726 #pos=1.716 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1784207731093154;  // std dev = 1,571, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.02758117144567459;  // std dev = 3,367, 70,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05929323180156303;  // std dev = 3,500, 65,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | | else return -0.012305561476955999;  // std dev = 9,337, 775,000 (wgt'ed) examples reached here.  /* #neg=673 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.029760123396067623;  // std dev = 32,833, 5.007,000 (wgt'ed) examples reached here.  /* #neg=3.436 #pos=1.571 */
%   | | | else return 0.04218997487643554;  // std dev = 8,479, 511,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.14970980128691652;  // std dev = 5,115, 289,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=30 */
%   | | | else return 0.15900275200153252;  // std dev = 6,787, 217,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=83 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.39930697924566433;  // std dev = 0,117, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.561882755509147;  // std dev = 1,840, 26,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02443492323396188;  // std dev = 5,942, 213,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=45 */
%   | | | else return -0.11307512377433948;  // std dev = 0,011, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.618055
   AUC PR    = 0.168392
   CLL	      = -0.330097
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 854.626 seconds
Total inference time: 18.272 seconds
AUC ROC: 0.618055


Results scoring model
   AUC ROC   = 0.658543
   AUC PR    = 0.212858
   CLL	      = -0.320329
   Precision = 0.966102 at threshold = 0.5
   Recall    = 0.177649
   F1        = 0.300113


Total scoring time: 150.644 seconds
Refined model CLL: -0.320329


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.618055
   AUC PR    = 0.168392
   CLL	      = -0.330097
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1037.808 seconds
Total inference time: 18.272 seconds
AUC ROC: 0.618055
Total revision time: 1037.808
Best scored revision CLL: -0.320329


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 07:22:54
{'AUC PR': 0.168392, 'AUC ROC': 0.618055, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 5.266, 'CLL': -0.323042, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 21.369}, 'Inference time': 18.272, 'CLL': -0.330097, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1037.808}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2175079531697424;  // std dev = 0,480, 5.866,000 (wgt'ed) examples reached here.  /* #neg=3.758 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1642713840791042;  // std dev = 3,226, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.058766219050130145;  // std dev = 7,208, 324,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=65 */
%   | | | else return -0.0722308117359307;  // std dev = 3,199, 158,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.024815601766178853;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.016477930572129935;  // std dev = 6,061, 335,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=42 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19789544720483293;  // std dev = 0,482, 5.723,000 (wgt'ed) examples reached here.  /* #neg=3.615 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.2512214375475705;  // std dev = 0,493, 41,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return 0.06675875127731652;  // std dev = 7,136, 302,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=65 */
%   | | | else return -0.0653991699188217;  // std dev = 3,205, 159,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=11 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.0038876095922117247;  // std dev = 6,092, 316,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=43 */
%   | | | else return -0.10864434132493075;  // std dev = 1,392, 65,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=2 */
%   | | else return -0.13865599765474798;  // std dev = 0,014, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15957799788198948;  // std dev = 0,480, 5.858,000 (wgt'ed) examples reached here.  /* #neg=3.750 #pos=2.108 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.006001529936832927;  // std dev = 1,265, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.12221473097237223;  // std dev = 3,258, 55,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.5088382138434003;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13879897743950828;  // std dev = 0,062, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12570533278525445;  // std dev = 3,178, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.02741503328414634;  // std dev = 1,330, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.03055859170519799;  // std dev = 7,303, 564,000 (wgt'ed) examples reached here.  /* #neg=504 #pos=60 */
%   | | | else return 0.03768424003408783;  // std dev = 5,809, 220,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=42 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.12910990759471316;  // std dev = 5,786, 146,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
%   | | | else return 0.20151695260449756;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.7729455240330689;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12900480912459256;  // std dev = 0,479, 5.735,000 (wgt'ed) examples reached here.  /* #neg=3.693 #pos=2.042 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then return 0.4691451640771584;  // std dev = 1,207, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(J, G) )
%   | | | then return 0.09839278556581497;  // std dev = 3,200, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.14308713302569095;  // std dev = 0,017, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return 0.1255960271871136;  // std dev = 0,442, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return -0.010917411607691612;  // std dev = 0,334, 788,000 (wgt'ed) examples reached here.  /* #neg=686 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10818340773251034;  // std dev = 0,479, 5.873,000 (wgt'ed) examples reached here.  /* #neg=3.765 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7699525006866957;  // std dev = 1,932, 71,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=67 */
%   | | | else return -0.16697086408344447;  // std dev = 0,385, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.08816660911952513;  // std dev = 3,185, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.0695764491850834;  // std dev = 3,234, 197,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.006576292561489886;  // std dev = 6,052, 303,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=43 */
%   | | | else return -0.09612883830740009;  // std dev = 1,396, 73,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=2 */
%   | | else return -0.1234507915135316;  // std dev = 0,029, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0896928006941703;  // std dev = 0,480, 5.834,000 (wgt'ed) examples reached here.  /* #neg=3.726 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6458111860568305;  // std dev = 1,704, 70,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=67 */
%   | | | else return -0.14331469570053426;  // std dev = 0,292, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.10184300744322487;  // std dev = 3,115, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -0.05057317452543963;  // std dev = 3,211, 166,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.009025063614004104;  // std dev = 6,040, 296,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=43 */
%   | | | else return -0.08937540706711093;  // std dev = 1,399, 81,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=2 */
%   | | else return -0.11258047456134494;  // std dev = 0,020, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.08464572950805332;  // std dev = 5,705, 139,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=52 */
%   | | | else return 0.09542915853594698;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.563209222456239;  // std dev = 2,11e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.06718555648266221;  // std dev = 0,479, 5.726,000 (wgt'ed) examples reached here.  /* #neg=3.684 #pos=2.042 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then return 0.41073682428238606;  // std dev = 0,826, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(J, G) )
%   | | | then return 0.04735642000092852;  // std dev = 3,179, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.11810902903514787;  // std dev = 0,051, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.012601185267547006;  // std dev = 0,307, 580,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=75 */
%   | | else return 0.01530368207024323;  // std dev = 0,291, 209,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=44 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.059169619821662627;  // std dev = 0,481, 5.805,000 (wgt'ed) examples reached here.  /* #neg=3.697 #pos=2.108 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.17964153853943512;  // std dev = 1,047, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.016016472951536194;  // std dev = 2,132, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return -0.011361919718563318;  // std dev = 0,688, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 6.976116702495245E-4;  // std dev = 7,330, 457,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=65 */
%   | | | else return -0.03760534355434932;  // std dev = 2,384, 115,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.011072518708585086;  // std dev = 4,136, 207,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=43 */
%   | | | else return -0.10240493627570756;  // std dev = 0,023, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.04290101336171436;  // std dev = 0,480, 5.287,000 (wgt'ed) examples reached here.  /* #neg=3.388 #pos=1.899 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7000534993857028;  // std dev = 2,923, 107,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=98 */
%   | | | else return -0.13702768998413914;  // std dev = 1,562, 412,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=2 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1827208675098507;  // std dev = 0,299, 299,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3734629905528111;  // std dev = 4,982, 116,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=80 */
%   | | | else return 0.05847000439579068;  // std dev = 3,697, 141,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=38 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.0841956971771724;  // std dev = 0,352, 199,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=64 */
%   | | else return -3.92397425858756E-4;  // std dev = 0,336, 37,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | else return 0.4014050110046869;  // std dev = 0,370, 45,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03326902049330384;  // std dev = 0,476, 5.858,000 (wgt'ed) examples reached here.  /* #neg=3.750 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.06111865980138026;  // std dev = 0,441, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.055766042921992116;  // std dev = 2,745, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | else return -0.03345728702895978;  // std dev = 0,201, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.03182899549597726;  // std dev = 5,128, 462,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=67 */
%   | | | else return 0.059954904976243194;  // std dev = 2,460, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.012726266453431351;  // std dev = 5,442, 369,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=43 */
%   | | | else return -0.135154333666117;  // std dev = 0,008, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.585447
   AUC PR    = 0.044119
   CLL	      = -0.379316
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.002594
   F1        = 0.005161


Total learning time: 1729.953 seconds
Total inference time: 23.085 seconds
AUC ROC: 0.585447


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 07:52:08
{'AUC PR': 0.044119, 'AUC ROC': 0.585447, 'Precision': [0.5, 0.5], 'Inference time': 23.085, 'CLL': -0.379316, 'Recall': 0.002594, 'Learning time': 1729.953, 'F1': 0.005161}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2205350447780356;  // std dev = 0,481, 5.817,000 (wgt'ed) examples reached here.  /* #neg=3.709 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.19814893509951237;  // std dev = 0,474, 50,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.06918789613847401;  // std dev = 7,161, 308,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=65 */
%   | | | else return -0.07310106490048765;  // std dev = 3,201, 160,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=11 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.0031413874811333023;  // std dev = 6,086, 310,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=43 */
%   | | | else return -0.11108183413125693;  // std dev = 1,392, 65,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.541486
   AUC PR    = 0.012974
   CLL	      = -0.202231
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 42.882 seconds
Total inference time: 4.86 seconds
AUC ROC: 0.541486


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 07:52:56
{'AUC PR': 0.012974, 'AUC ROC': 0.541486, 'Precision': [nan, 0.5], 'Inference time': 4.86, 'CLL': -0.202231, 'Recall': 0.0, 'Learning time': 42.882, 'F1': nan}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 199372

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 50581

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.15960878911410595;  // std dev = 16,985, 1.370,000 (wgt'ed) examples reached here.  /* #neg=957 #pos=413 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1,88e-07, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.14216043390702082;  // std dev = 16,947, 1.356,000 (wgt'ed) examples reached here.  /* #neg=943 #pos=413 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,31e-07, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.11593662956471697;  // std dev = 17,020, 1.383,000 (wgt'ed) examples reached here.  /* #neg=970 #pos=413 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.10551190336561142;  // std dev = 16,928, 1.349,000 (wgt'ed) examples reached here.  /* #neg=936 #pos=413 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.08737491816307198;  // std dev = 16,936, 1.352,000 (wgt'ed) examples reached here.  /* #neg=939 #pos=413 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.07369824520353532;  // std dev = 16,917, 1.345,000 (wgt'ed) examples reached here.  /* #neg=932 #pos=413 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.05421233598458851;  // std dev = 16,991, 1.372,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=413 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,98e-08, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.036300334880544446;  // std dev = 17,084, 1.408,000 (wgt'ed) examples reached here.  /* #neg=995 #pos=413 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.037003968596320755;  // std dev = 16,991, 1.372,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=413 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,16e-08, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.021846432723710556;  // std dev = 17,086, 1.409,000 (wgt'ed) examples reached here.  /* #neg=996 #pos=413 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.33115
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.369 seconds
Total inference time: 4.708 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.575975
   AUC PR    = 0.170558
   CLL	      = -0.331954
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.151951
   F1        = 0.263815


Total scoring time: 4.65 seconds
Parameter learned model CLL: -0.331954


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.985, 957, 413], 'true': [0.0, 0, 74]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.947, 943, 413], 'true': [1.88e-07, 0, 74]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.02, 970, 413], 'true': [2.31e-07, 0, 74]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.928, 936, 413], 'true': [0.0, 0, 74]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.936, 939, 413], 'true': [0.0, 0, 74]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.917, 932, 413], 'true': [0.0, 0, 74]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.991, 959, 413], 'true': [0.0, 0, 74]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.084, 995, 413], 'true': [2.98e-08, 0, 74]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.991, 959, 413], 'true': [7.3e-08, 0, 74]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.086, 996, 413], 'true': [5.16e-08, 0, 74]}]]
[{'': [-1.4402893292434464e-15, 0.21058181043207802]}, {'': [4.800964430811488e-16, 0.2118080028889384]}, {'': [7.201446646217232e-16, 0.20944858259757365]}, {'': [-9.601928861622976e-17, 0.21242322649564405]}, {'': [-3.720747433878903e-16, 0.2121593913028401]}, {'': [-1.200241107702872e-17, 0.2127753900581889]}, {'': [-9.601928861622976e-17, 0.21040712203248216]}, {'': [1.200241107702872e-17, 0.20728497465779414]}, {'': [7.201446646217232e-17, 0.21040712203248887]}, {'': [3.600723323108616e-17, 0.2071988801585312]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1612029679890924;  // std dev = 0,460, 1.277,000 (wgt'ed) examples reached here.  /* #neg=890 #pos=387 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.012788110357244326;  // std dev = 3,561, 97,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=15 */
%   | | | else return -0.06492798797741085;  // std dev = 1,664, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else return 0.1005731775237548;  // std dev = 0,429, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1,88e-07, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4689501302619815;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return -0.10380528769467527;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else return 0.15867702481794876;  // std dev = 0,467, 1.164,000 (wgt'ed) examples reached here.  /* #neg=790 #pos=374 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.01811807709791145;  // std dev = 3,290, 79,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   | | | else return 0.20887185599863253;  // std dev = 1,972, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14526910189790593;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.04409051175018677;  // std dev = 2,510, 71,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,31e-07, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13274437797903055;  // std dev = 0,465, 1.216,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=387 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.28104105525411893;  // std dev = 1,312, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.025171820686260244;  // std dev = 3,601, 90,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03960075168600603;  // std dev = 2,511, 72,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=7 */
%   | | | else return -0.14886671858468103;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3382905493035363;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return -0.12814679897091868;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else return 0.10614803062799093;  // std dev = 0,463, 1.197,000 (wgt'ed) examples reached here.  /* #neg=823 #pos=374 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.056290935493284525;  // std dev = 3,182, 61,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return -0.04431207979324776;  // std dev = 2,272, 49,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else return -0.03167136377981691;  // std dev = 0,299, 70,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0916775964853736;  // std dev = 0,464, 1.221,000 (wgt'ed) examples reached here.  /* #neg=834 #pos=387 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.02075309754438532;  // std dev = 3,234, 71,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
%   | | | else return -0.03888625078784621;  // std dev = 2,271, 50,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.11880943268699977;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.02542561337966697;  // std dev = 2,502, 68,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07293726750703006;  // std dev = 0,463, 1.231,000 (wgt'ed) examples reached here.  /* #neg=844 #pos=387 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.02005643238888761;  // std dev = 3,305, 93,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
%   | | | else return 0.21059908342614575;  // std dev = 1,929, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return -0.022264238899934938;  // std dev = 0,303, 68,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06415705001131061;  // std dev = 0,465, 1.211,000 (wgt'ed) examples reached here.  /* #neg=824 #pos=387 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5683773292755634;  // std dev = 0,852, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.10481563154616448;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.008177754728726838;  // std dev = 3,668, 120,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=16 */
%   | | | else return 0.008046932625801684;  // std dev = 2,400, 40,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,98e-08, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05588928968848783;  // std dev = 0,466, 1.197,000 (wgt'ed) examples reached here.  /* #neg=810 #pos=387 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.31880578607560595;  // std dev = 1,081, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.09538031432897322;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01915318513109075;  // std dev = 3,710, 126,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=16 */
%   | | | else return 0.004796154276816743;  // std dev = 2,401, 41,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, D) )
%   | | | then return 0.20438175622786084;  // std dev = 2,167, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.0358968077984803;  // std dev = 16,034, 1.211,000 (wgt'ed) examples reached here.  /* #neg=837 #pos=374 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.023658801114947132;  // std dev = 2,903, 70,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | | | else return -0.11351679229995264;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.6113227026642617;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.012800056757048095;  // std dev = 0,379, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,16e-08, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.02839647106069392;  // std dev = 0,463, 1.224,000 (wgt'ed) examples reached here.  /* #neg=837 #pos=387 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.00985449682916469;  // std dev = 3,129, 72,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=13 */
%   | | | else return 0.13676616570097933;  // std dev = 1,991, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.0356764895236343;  // std dev = 2,522, 83,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=7 */
%   | | | else return -0.12497900411956664;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.622067
   AUC PR    = 0.195688
   CLL	      = -0.317422
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 123.532 seconds
Total inference time: 17.59 seconds
AUC ROC: 0.622067


Results scoring model
   AUC ROC   = 0.63412
   AUC PR    = 0.183116
   CLL	      = -0.325664
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.151951
   F1        = 0.263815


Total scoring time: 82.554 seconds
Refined model CLL: -0.325664


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622067
   AUC PR    = 0.195688
   CLL	      = -0.317422
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 214.105 seconds
Total inference time: 17.59 seconds
AUC ROC: 0.622067
Total revision time: 214.105
Best scored revision CLL: -0.325664


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:56:54
{'AUC PR': 0.195688, 'AUC ROC': 0.622067, 'Precision': [1.0, 0.5], 'Inference time': 17.59, 'CLL': -0.317422, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 214.105, 'parameter_0.2': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 4.708, 'CLL': -0.33115, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.369}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5640312880406888;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return -0.06492798797741087;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return 0.22074122386078718;  // std dev = 0,481, 1.219,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=442 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then if ( author(K, J), title(K, I) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.019899845388292564;  // std dev = 2,963, 82,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=10 */
%   | | | else return 0.14386322081379807;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else return -0.037373452960189193;  // std dev = 0,306, 67,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19093745621174876;  // std dev = 0,480, 1.270,000 (wgt'ed) examples reached here.  /* #neg=809 #pos=461 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.2628313515357211;  // std dev = 0,483, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.13736222589460334;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return -0.02580952751826343;  // std dev = 2,977, 88,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=10 */
%   | | | else return 0.10058829495228912;  // std dev = 2,106, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return -0.045256962736708595;  // std dev = 0,289, 76,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7817169809966436;  // std dev = 0,157, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.19967588379281945;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.020087521490058095;  // std dev = 0,761, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.03863486065450064;  // std dev = 1,381, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.28527416848029624;  // std dev = 2,335, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return -0.06698377138994586;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return 0.1609935722741377;  // std dev = 0,480, 1.195,000 (wgt'ed) examples reached here.  /* #neg=764 #pos=431 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.05289512398959478;  // std dev = 0,393, 95,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=19 */
%   | else return -0.04528928148556423;  // std dev = 0,281, 81,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.620464861169939;  // std dev = 0,222, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.34796765914915245;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return -0.08328208366194567;  // std dev = 0,967, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else return 0.13053418146019868;  // std dev = 0,477, 1.236,000 (wgt'ed) examples reached here.  /* #neg=794 #pos=442 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.03969357940658809;  // std dev = 0,382, 70,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=13 */
%   | | else if ( haswordtitle(I, K), haswordauthor(L, K) )
%   | | | then return -0.10231707010249852;  // std dev = 0,936, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.0031550672287676655;  // std dev = 2,018, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | then return -0.11711640994801657;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.03364768368154308;  // std dev = 0,291, 75,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11861980533883454;  // std dev = 0,478, 1.242,000 (wgt'ed) examples reached here.  /* #neg=781 #pos=461 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7630863445647346;  // std dev = 0,955, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.1476540225591423;  // std dev = 2,11e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.10444408167065981;  // std dev = 0,948, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.06749963645433829;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.011980176435609773;  // std dev = 2,492, 64,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   | | | else return -0.12329752109095085;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11737799452229243;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.4447969735957738;  // std dev = 0,223, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.14420050280824048;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return -0.09490699868193277;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | else return 0.09443312724909157;  // std dev = 0,480, 1.201,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=442 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.011270436999707567;  // std dev = 2,797, 76,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=13 */
%   | | | else return -0.12624613458370587;  // std dev = 0,083, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.07361922824716743;  // std dev = 0,436, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | then return -0.11755235741221408;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.027877824604816505;  // std dev = 0,289, 76,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordtitle(D, E), haswordvenue(B, E) )
%   | then if ( title(F, D), venue(F, A) )
%   | | then return 0.04597639971570655;  // std dev = 0,470, 1.280,000 (wgt'ed) examples reached here.  /* #neg=842 #pos=438 */
%   | | else if ( haswordtitle(D, G), haswordauthor(H, G) )
%   | | | then return 0.0022385962380749146;  // std dev = 1,660, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.17304587456230766;  // std dev = 2,720, 37,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | else if ( title(I, D), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.6101736033594849;  // std dev = 1,462, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.10568375898488742;  // std dev = 0,840, 54,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=1 */
%   | | else return -0.1078644509733963;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | then return 0.7075967721480857;  // std dev = 5,16e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.04648278494362281;  // std dev = 0,614, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.008934692407776952;  // std dev = 0,317, 43,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordtitle(D, E), haswordvenue(B, E) )
%   | then if ( title(F, D), venue(F, A) )
%   | | then return 0.04512547529443026;  // std dev = 0,472, 1.252,000 (wgt'ed) examples reached here.  /* #neg=814 #pos=438 */
%   | | else if ( haswordauthor(G, E) )
%   | | | then return 0.28960642388853214;  // std dev = 0,899, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06937277000992464;  // std dev = 3,050, 57,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | else if ( title(H, D), venue(H, B) )
%   | | then return 0.027147043165695196;  // std dev = 0,319, 66,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | | else return -0.09791516055806793;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then return 0.4328113489988899;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.293922460110001;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.15347950644402997;  // std dev = 0,700, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.029191620696893225;  // std dev = 0,332, 36,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordvenue(B, C) )
%   | then return 0.043557219162649596;  // std dev = 0,475, 1.232,000 (wgt'ed) examples reached here.  /* #neg=789 #pos=443 */
%   | else if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7212228202108671;  // std dev = 0,380, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.1357660248146811;  // std dev = 1,034, 91,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=1 */
%   | | else if ( haswordtitle(D, G), haswordauthor(H, G) )
%   | | | then return -0.08991946743316961;  // std dev = 0,619, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return -0.05796089926902126;  // std dev = 1,365, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.4455666124189932;  // std dev = 0,051, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.06768124439712886;  // std dev = 0,364, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.02143716629287235;  // std dev = 0,468, 1.320,000 (wgt'ed) examples reached here.  /* #neg=859 #pos=461 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.49423519511612096;  // std dev = 1,341, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.12004183374277932;  // std dev = 0,416, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.07630330545510128;  // std dev = 0,625, 27,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | | else return -0.023609284877904282;  // std dev = 1,092, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else return 0.01174888517471934;  // std dev = 0,338, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */


Results
   AUC ROC   = 0.58638
   AUC PR    = 0.023839
   CLL	      = -0.351869
   Precision = 0.119205 at threshold = 0.5
   Recall    = 0.030981
   F1        = 0.04918


Total learning time: 1820.105 seconds
Total inference time: 36.858 seconds
AUC ROC: 0.58638


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 08:27:51
{'AUC PR': 0.023839, 'AUC ROC': 0.58638, 'Precision': [0.119205, 0.5], 'Inference time': 36.858, 'CLL': -0.351869, 'Recall': 0.030981, 'Learning time': 1820.105, 'F1': 0.04918}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21662482934523059;  // std dev = 0,480, 1.286,000 (wgt'ed) examples reached here.  /* #neg=825 #pos=461 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.013645936695359474;  // std dev = 2,953, 78,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=10 */
%   | | else return 0.14386322081379807;  // std dev = 0,452, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.05094197399139678;  // std dev = 2,523, 77,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.550341
   AUC PR    = 0.012642
   CLL	      = -0.198326
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 45.516 seconds
Total inference time: 4.056 seconds
AUC ROC: 0.550341


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 08:28:41
{'AUC PR': 0.012642, 'AUC ROC': 0.550341, 'Precision': [nan, 0.5], 'Inference time': 4.056, 'CLL': -0.198326, 'Recall': 0.0, 'Learning time': 45.516, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995101;  // std dev = 8,68e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else return 0.1619880575857961;  // std dev = 24,052, 2.735,000 (wgt'ed) examples reached here.  /* #neg=1.904 #pos=831 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210956;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else return 0.1289455322158425;  // std dev = 24,261, 2.849,000 (wgt'ed) examples reached here.  /* #neg=2.018 #pos=831 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,13e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else return 0.11719990745883284;  // std dev = 24,148, 2.786,000 (wgt'ed) examples reached here.  /* #neg=1.955 #pos=831 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,30e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else return 0.10550882083507063;  // std dev = 24,039, 2.728,000 (wgt'ed) examples reached here.  /* #neg=1.897 #pos=831 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,49e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else return 0.08714715003711876;  // std dev = 24,056, 2.737,000 (wgt'ed) examples reached here.  /* #neg=1.906 #pos=831 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694903;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else return 0.07434896563840086;  // std dev = 24,015, 2.716,000 (wgt'ed) examples reached here.  /* #neg=1.885 #pos=831 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253523;  // std dev = 2,35e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else return 0.053059448525794896;  // std dev = 24,150, 2.787,000 (wgt'ed) examples reached here.  /* #neg=1.956 #pos=831 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else return 0.04591738424805704;  // std dev = 24,102, 2.761,000 (wgt'ed) examples reached here.  /* #neg=1.930 #pos=831 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else return 0.03829910626486771;  // std dev = 24,081, 2.750,000 (wgt'ed) examples reached here.  /* #neg=1.919 #pos=831 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 6,32e-08, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else return 0.026246877984667488;  // std dev = 24,159, 2.792,000 (wgt'ed) examples reached here.  /* #neg=1.961 #pos=831 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.332483
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 6.584 seconds
Total inference time: 4.781 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.573409
   AUC PR    = 0.165166
   CLL	      = -0.333355
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.146817
   F1        = 0.256043


Total scoring time: 5.964 seconds
Parameter learned model CLL: -0.333355


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.052, 1904, 831], 'true': [8.68e-07, 0, 143]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.261, 2018, 831], 'true': [0.0, 0, 143]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.148, 1955, 831], 'true': [5.13e-07, 0, 143]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.039, 1897, 831], 'true': [4.3e-07, 0, 143]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.056, 1906, 831], 'true': [2.49e-07, 0, 143]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.015, 1885, 831], 'true': [0.0, 0, 143]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.15, 1956, 831], 'true': [2.35e-07, 0, 143]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.102, 1930, 831], 'true': [0.0, 0, 143]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.081, 1919, 831], 'true': [0.0, 0, 143]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.159, 1961, 831], 'true': [6.32e-08, 0, 143]}]]
[{'': [5.2669601392007426e-15, 0.21152091013307597]}, {'': [-2.1862853408003084e-15, 0.20660331576442142]}, {'': [1.8384672184002593e-15, 0.20930787152865848]}, {'': [1.2918958832001822e-15, 0.21182617431055017]}, {'': [4.347726530000613e-16, 0.21143375620010754]}, {'': [-1.3664283380001927e-16, 0.21235028446495388]}, {'': [3.8508434980005427e-16, 0.20926468151569608]}, {'': [-2.9191878130004114e-16, 0.21039020632102756]}, {'': [-3.7266227400005256e-17, 0.21086796694215126]}, {'': [2.7949670550003944e-17, 0.2090488532524232]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995101;  // std dev = 8,68e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return -0.0942320172814401;  // std dev = 1,690, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.17633075328133013;  // std dev = 3,784, 66,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | | else return 0.18357713009291965;  // std dev = 22,357, 2.277,000 (wgt'ed) examples reached here.  /* #neg=1.536 #pos=741 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.2265699877310913;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.017997853891313795;  // std dev = 4,864, 218,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=27 */
%   | | else return -0.02926828344353401;  // std dev = 0,316, 151,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210956;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1547540653073283;  // std dev = 0,466, 2.436,000 (wgt'ed) examples reached here.  /* #neg=1.656 #pos=780 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.3667335724779828;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.00706484234421824;  // std dev = 4,800, 184,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=27 */
%   | | else return -0.026483359247015316;  // std dev = 0,315, 152,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=17 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5,13e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13089642992970577;  // std dev = 0,465, 2.448,000 (wgt'ed) examples reached here.  /* #neg=1.668 #pos=780 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20721390024417113;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.13719640118372986;  // std dev = 0,007, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.01610143752113294;  // std dev = 4,862, 217,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=27 */
%   | | | else return 0.016586712784610658;  // std dev = 3,797, 112,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4,30e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10612120307863761;  // std dev = 0,464, 2.478,000 (wgt'ed) examples reached here.  /* #neg=1.698 #pos=780 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0027862653639615267;  // std dev = 4,517, 167,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=25 */
%   | | | else return 0.09217729694590375;  // std dev = 2,631, 39,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else return -0.028431492115248327;  // std dev = 0,311, 157,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2,49e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11007890950600367;  // std dev = 0,472, 2.316,000 (wgt'ed) examples reached here.  /* #neg=1.536 #pos=780 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.005612420700307642;  // std dev = 4,469, 164,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=25 */
%   | | | else return 0.06954484452889334;  // std dev = 2,650, 41,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.019588419585718116;  // std dev = 3,879, 150,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=17 */
%   | | | else return -0.13141384410038354;  // std dev = 0,016, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694903;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0683717813033674;  // std dev = 0,464, 2.476,000 (wgt'ed) examples reached here.  /* #neg=1.696 #pos=780 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.16790067620211932;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.004833871601872136;  // std dev = 4,811, 195,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02344560875870239;  // std dev = 3,893, 158,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=17 */
%   | | | else return -0.11930687690144577;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253523;  // std dev = 2,35e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20309621596429642;  // std dev = 2,826, 34,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return -0.1887999508176004;  // std dev = 1,374, 50,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=2 */
%   | | else return 0.06392910648990485;  // std dev = 0,468, 2.353,000 (wgt'ed) examples reached here.  /* #neg=1.591 #pos=762 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.26542453279452305;  // std dev = 1,097, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.031262225379810146;  // std dev = 1,486, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.061596321810435326;  // std dev = 1,908, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.005023193800165624;  // std dev = 5,878, 305,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=40 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return 0.18525840559814974;  // std dev = 3,161, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0.040529884354690446;  // std dev = 22,755, 2.459,000 (wgt'ed) examples reached here.  /* #neg=1.706 #pos=753 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.07408408186989993;  // std dev = 4,444, 129,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=28 */
%   | | | else return -0.1532137300511922;  // std dev = 0,130, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5321546010382849;  // std dev = 0,403, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.05083761685810436;  // std dev = 3,234, 64,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return -0.10684887592824095;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6902493009557271;  // std dev = 4,987, 792,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=767 */
%   | | | else return -0.25565331962554505;  // std dev = 4,827, 1.794,000 (wgt'ed) examples reached here.  /* #neg=1.773 #pos=21 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.19972201848484505;  // std dev = 0,421, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.08146759042672969;  // std dev = 2,963, 56,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.45890758492358674;  // std dev = 0,368, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.05480162170083416;  // std dev = 3,173, 64,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return -0.09707205540010744;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 6,32e-08, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.13918758840781803;  // std dev = 1,949, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return -0.12632045207412224;  // std dev = 0,976, 35,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | else return 0.023775722499284956;  // std dev = 0,378, 2.356,000 (wgt'ed) examples reached here.  /* #neg=1.594 #pos=762 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.053445694120387924;  // std dev = 1,666, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.034750328343084315;  // std dev = 4,622, 240,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=27 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.02221871111747201;  // std dev = 0,780, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.015158062075934299;  // std dev = 3,289, 147,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=16 */


Results
   AUC ROC   = 0.929969
   AUC PR    = 0.438061
   CLL	      = -0.263668
   Precision = 0.697987 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.284932


Total learning time: 578.952 seconds
Total inference time: 29.402 seconds
AUC ROC: 0.929969


Results scoring model
   AUC ROC   = 0.968867
   AUC PR    = 0.527332
   CLL	      = -0.259172
   Precision = 0.564103 at threshold = 0.5
   Recall    = 0.180698
   F1        = 0.273717


Total scoring time: 282.854 seconds
Refined model CLL: -0.259172


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.929969
   AUC PR    = 0.438061
   CLL	      = -0.263668
   Precision = 0.697987 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.284932


Total learning time: 874.354 seconds
Total inference time: 29.402 seconds
AUC ROC: 0.929969
Total revision time: 874.354
Best scored revision CLL: -0.259172


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 08:43:51
{'AUC PR': 0.438061, 'AUC ROC': 0.929969, 'Precision': [0.697987, 0.5], 'parameter_0.4': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 4.781, 'CLL': -0.332483, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 6.584}, 'Inference time': 29.402, 'CLL': -0.263668, 'Recall': 0.179002, 'F1': 0.284932, 'Learning time': 874.354}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2149328546974972;  // std dev = 0,479, 2.587,000 (wgt'ed) examples reached here.  /* #neg=1.664 #pos=923 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21529179224236947;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0168510649004878;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01576410837874906;  // std dev = 5,034, 230,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=29 */
%   | | | else return 0.010926712877290126;  // std dev = 3,053, 72,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18739577839595647;  // std dev = 0,479, 2.582,000 (wgt'ed) examples reached here.  /* #neg=1.659 #pos=923 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24653694853461672;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.28162893957529533;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.028701038267445425;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01105403418914251;  // std dev = 5,026, 225,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=29 */
%   | | | else return -0.022307257890570552;  // std dev = 3,110, 91,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8018141096175916;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.30181410961759164;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return -0.016367708564226535;  // std dev = 1,809, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else return 0.16038782756628825;  // std dev = 0,480, 2.496,000 (wgt'ed) examples reached here.  /* #neg=1.601 #pos=895 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), venue(K, A) )
%   | | | then return 0.0772761955745147;  // std dev = 1,074, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.23796246617454744;  // std dev = 1,680, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.01656056766968967;  // std dev = 0,330, 257,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=32 */
%   | | else return 0.02688761632075356;  // std dev = 0,371, 71,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6447079410783126;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.24475680259080615;  // std dev = 2,818, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | | else return -0.1588115732854005;  // std dev = 1,675, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | else return 0.1306318397253029;  // std dev = 0,478, 2.526,000 (wgt'ed) examples reached here.  /* #neg=1.628 #pos=898 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.01916083186769847;  // std dev = 4,327, 137,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=24 */
%   | | | else return -0.13098177545233627;  // std dev = 1,039, 30,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | else return 0.05322799076469121;  // std dev = 0,400, 46,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.011474046013627621;  // std dev = 0,328, 136,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=17 */
%   | | else return -0.14374923455566138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.487789757155502;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.18362625949378827;  // std dev = 3,031, 37,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return -0.048422444609081496;  // std dev = 1,822, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | else return 0.10976445157900568;  // std dev = 0,479, 2.502,000 (wgt'ed) examples reached here.  /* #neg=1.607 #pos=895 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then return 0.32033882730611674;  // std dev = 0,481, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return -0.10102128616117138;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.022259667087070244;  // std dev = 0,318, 278,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=32 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.011795652187972298;  // std dev = 3,152, 75,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=12 */
%   | | | else return -0.12694527374608366;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.3610057454610962;  // std dev = 2,114, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.0030458867890644004;  // std dev = 1,664, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return -0.1114562649747307;  // std dev = 0,290, 33,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | else return 0.09123467995443178;  // std dev = 0,480, 2.489,000 (wgt'ed) examples reached here.  /* #neg=1.591 #pos=898 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), title(K, J) )
%   | | | then return 0.26778162543822775;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19417437426288214;  // std dev = 1,541, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return -0.09297214213770795;  // std dev = 0,005, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return -0.009003095003374333;  // std dev = 0,337, 204,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=27 */
%   | | else return -0.017635632884216778;  // std dev = 0,320, 145,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07350354688768865;  // std dev = 0,478, 2.553,000 (wgt'ed) examples reached here.  /* #neg=1.630 #pos=923 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.24841363629987537;  // std dev = 0,703, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20105469987884844;  // std dev = 1,466, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.012474278890413575;  // std dev = 3,924, 144,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=18 */
%   | | | else return 0.10335625635177728;  // std dev = 2,612, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.010387687217988191;  // std dev = 3,807, 118,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=17 */
%   | | | else return -0.12693775211927302;  // std dev = 0,044, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11143170826282967;  // std dev = 0,003, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.6718818608234429;  // std dev = 0,161, 915,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=892 */
%   | | else return -0.2737196525610347;  // std dev = 0,119, 1.739,000 (wgt'ed) examples reached here.  /* #neg=1.718 #pos=21 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( haswordtitle(D, G), haswordauthor(H, G) )
%   | | | then return 0.11994756912848657;  // std dev = 1,568, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.5856980261064925;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( haswordtitle(D, I), haswordvenue(B, I) )
%   | | | then return 0.03137701699271283;  // std dev = 2,574, 48,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return -0.13679620926490427;  // std dev = 0,109, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then return 0.6280038193691663;  // std dev = 0,259, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.022291538417890295;  // std dev = 0,378, 72,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=13 */
%   | | else return -0.1011733527393242;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.13678123745102558;  // std dev = 0,265, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.01629021504559822;  // std dev = 2,492, 43,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return -0.07729683798863245;  // std dev = 1,581, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else return 0.04089404616375934;  // std dev = 0,386, 2.437,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=895 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( haswordvenue(A, J) )
%   | | | then return 0.057104265380908674;  // std dev = 1,359, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.024929818880950947;  // std dev = 3,998, 158,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=22 */
%   | | else if ( haswordtitle(I, L), haswordvenue(A, L) )
%   | | | then return 0.0827932509789508;  // std dev = 2,257, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return -0.16758721016043263;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.014643523755070446;  // std dev = 0,265, 164,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=17 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.49471141013774844;  // std dev = 0,192, 928,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=892 */
%   | | else return -0.22947053778369478;  // std dev = 0,115, 1.808,000 (wgt'ed) examples reached here.  /* #neg=1.787 #pos=21 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( title(G, D), venue(G, B) )
%   | | | then return -0.3382041525862084;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.5655482317083664;  // std dev = 0,334, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.013848274280927516;  // std dev = 0,339, 57,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, H) )
%   | | | then return 0.19344731221721698;  // std dev = 0,888, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0635233715882182;  // std dev = 3,854, 101,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=27 */
%   | | else return -0.1454911255433997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.30556521089723626;  // std dev = 0,343, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */


Results
   AUC ROC   = 0.93697
   AUC PR    = 0.278285
   CLL	      = -0.265073
   Precision = 0.332432 at threshold = 0.5
   Recall    = 0.635112
   F1        = 0.436428


Total learning time: 1091.552 seconds
Total inference time: 35.076 seconds
AUC ROC: 0.93697


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 09:02:38
{'AUC PR': 0.278285, 'AUC ROC': 0.93697, 'Precision': [0.332432, 0.5], 'Inference time': 35.076, 'CLL': -0.265073, 'Recall': 0.635112, 'Learning time': 1091.552, 'F1': 0.436428}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22053605720394384;  // std dev = 0,481, 2.547,000 (wgt'ed) examples reached here.  /* #neg=1.624 #pos=923 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.274815601766179;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0033102254220924695;  // std dev = 4,804, 186,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=27 */
%   | | | else return -0.07240662045604325;  // std dev = 2,157, 72,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=5 */
%   | | else return 0.002727248352524393;  // std dev = 0,352, 83,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=12 */


Results
   AUC ROC   = 0.549249
   AUC PR    = 0.012628
   CLL	      = -0.199616
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 16.773 seconds
Total inference time: 2.868 seconds
AUC ROC: 0.549249


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 09:02:58
{'AUC PR': 0.012628, 'AUC ROC': 0.549249, 'Precision': [nan, 0.5], 'Inference time': 2.868, 'CLL': -0.199616, 'Recall': 0.0, 'Learning time': 16.773, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1,07e-06, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.1533210192295263;  // std dev = 29,504, 4.184,000 (wgt'ed) examples reached here.  /* #neg=2.949 #pos=1.235 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.13467580877416618;  // std dev = 29,481, 4.169,000 (wgt'ed) examples reached here.  /* #neg=2.934 #pos=1.235 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,72e-07, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.12131387733238753;  // std dev = 29,361, 4.090,000 (wgt'ed) examples reached here.  /* #neg=2.855 #pos=1.235 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.0980776536012348;  // std dev = 29,457, 4.153,000 (wgt'ed) examples reached here.  /* #neg=2.918 #pos=1.235 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014955;  // std dev = 3,37e-07, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.08018488741334401;  // std dev = 29,495, 4.178,000 (wgt'ed) examples reached here.  /* #neg=2.943 #pos=1.235 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2,83e-07, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.05954938180724043;  // std dev = 29,636, 4.276,000 (wgt'ed) examples reached here.  /* #neg=3.041 #pos=1.235 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3,01e-07, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.05943002754854559;  // std dev = 29,415, 4.125,000 (wgt'ed) examples reached here.  /* #neg=2.890 #pos=1.235 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527758;  // std dev = 5,16e-08, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.04777246136824732;  // std dev = 29,429, 4.134,000 (wgt'ed) examples reached here.  /* #neg=2.899 #pos=1.235 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.0410161409644374;  // std dev = 29,380, 4.102,000 (wgt'ed) examples reached here.  /* #neg=2.867 #pos=1.235 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 1,46e-07, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.030499057889017567;  // std dev = 29,433, 4.137,000 (wgt'ed) examples reached here.  /* #neg=2.902 #pos=1.235 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.329081
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 9.788 seconds
Total inference time: 4.215 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.577344
   AUC PR    = 0.173182
   CLL	      = -0.329852
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.154689
   F1        = 0.267931


Total scoring time: 8.71 seconds
Parameter learned model CLL: -0.329852


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.504, 2949, 1235], 'true': [1.07e-06, 0, 226]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.481, 2934, 1235], 'true': [0.0, 0, 226]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.361, 2855, 1235], 'true': [5.72e-07, 0, 226]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.457, 2918, 1235], 'true': [0.0, 0, 226]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.495, 2943, 1235], 'true': [3.37e-07, 0, 226]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.636, 3041, 1235], 'true': [2.83e-07, 0, 226]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.415, 2890, 1235], 'true': [3.01e-07, 0, 226]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.429, 2899, 1235], 'true': [5.16e-08, 0, 226]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.38, 2867, 1235], 'true': [0.0, 0, 226]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.433, 2902, 1235], 'true': [1.46e-07, 0, 226]}]]
[{'': [5.030391049629028e-15, 0.20804552488038622]}, {'': [-4.087192727823585e-15, 0.20847946162380462]}, {'': [1.4462374267683456e-15, 0.21077857019025975]}, {'': [-3.1439944060181424e-17, 0.208943267942454]}, {'': [5.030391049629028e-16, 0.20821899617340783]}, {'': [3.5369937067704103e-16, 0.2054035686377249]}, {'': [4.0085928676731314e-16, 0.20975720844814486]}, {'': [1.1789979022568034e-17, 0.2094952731299867]}, {'': [-1.5326972729338443e-16, 0.21042790842295683]}, {'': [9.431983218054427e-17, 0.20940802648284737]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1,07e-06, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.36835301673216436;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | | | else return -0.036587907005750875;  // std dev = 2,317, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | | else return 0.170666281755072;  // std dev = 0,464, 3.603,000 (wgt'ed) examples reached here.  /* #neg=2.477 #pos=1.126 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.3819584589090361;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023023487070838112;  // std dev = 6,198, 279,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=46 */
%   | | | else return -0.036851064900487784;  // std dev = 4,335, 200,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=21 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1541073852670255;  // std dev = 0,465, 3.640,000 (wgt'ed) examples reached here.  /* #neg=2.483 #pos=1.157 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3550312082279251;  // std dev = 2,225, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.028908030520537985;  // std dev = 6,166, 265,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=46 */
%   | | | else return -0.037898071040519905;  // std dev = 4,349, 211,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=21 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,72e-07, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13868120570803408;  // std dev = 0,468, 3.562,000 (wgt'ed) examples reached here.  /* #neg=2.405 #pos=1.157 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.12194255965629659;  // std dev = 2,669, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.054768579667787275;  // std dev = 1,260, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06115935296479417;  // std dev = 2,563, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.02261129184985781;  // std dev = 7,020, 467,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=56 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.31123218998355795;  // std dev = 3,528, 50,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | | else return -0.025584716091062377;  // std dev = 2,569, 44,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.10523722719163682;  // std dev = 4,329, 92,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
%   | | | else return 0.11115086166389328;  // std dev = 27,290, 3.427,000 (wgt'ed) examples reached here.  /* #neg=2.333 #pos=1.094 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.30973250265629587;  // std dev = 2,150, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.11856014857405503;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.00103330744386921;  // std dev = 6,246, 310,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=46 */
%   | | | else return -0.042640320214774714;  // std dev = 4,375, 237,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=21 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014955;  // std dev = 3,37e-07, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.41712300784258544;  // std dev = 2,633, 33,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | | | else return -0.10786492985720615;  // std dev = 2,813, 87,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=9 */
%   | | else return 0.09320110572361205;  // std dev = 0,466, 3.515,000 (wgt'ed) examples reached here.  /* #neg=2.389 #pos=1.126 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.05007179395562277;  // std dev = 5,520, 196,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=39 */
%   | | | else return -0.015382197222703047;  // std dev = 3,638, 115,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.021146064517188475;  // std dev = 4,333, 201,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=21 */
%   | | | else return -0.12564777433911548;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2,83e-07, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07995754201197455;  // std dev = 3,879, 73,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | | | else return -0.11615790454351292;  // std dev = 2,067, 51,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
%   | | else return 0.07943664426539593;  // std dev = 0,468, 3.481,000 (wgt'ed) examples reached here.  /* #neg=2.355 #pos=1.126 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.33844221226830357;  // std dev = 1,242, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1154393834929269;  // std dev = 2,531, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.009506093631457862;  // std dev = 6,065, 311,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=46 */
%   | | | else return -0.021157245512406553;  // std dev = 4,235, 198,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3,01e-07, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06294610647017591;  // std dev = 0,466, 3.600,000 (wgt'ed) examples reached here.  /* #neg=2.443 #pos=1.157 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1686684603485549;  // std dev = 2,330, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return -0.10500916726157603;  // std dev = 0,009, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.06963355719116893;  // std dev = 2,837, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return -0.017312188240390526;  // std dev = 7,010, 471,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=56 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527758;  // std dev = 5,16e-08, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21086232932689136;  // std dev = 3,524, 50,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | | else return -0.07391740538240842;  // std dev = 2,597, 48,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | else return 0.047973296745693596;  // std dev = 0,465, 3.526,000 (wgt'ed) examples reached here.  /* #neg=2.403 #pos=1.123 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.14664751904491202;  // std dev = 2,479, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.009563223092733126;  // std dev = 1,211, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.0065194026281873395;  // std dev = 6,075, 297,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=46 */
%   | | | else return -0.01648330293856502;  // std dev = 4,234, 197,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.028217360335823505;  // std dev = 27,361, 3.535,000 (wgt'ed) examples reached here.  /* #neg=2.443 #pos=1.092 */
%   | | | else return 0.04306783088428451;  // std dev = 6,916, 361,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=70 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.16781720943171885;  // std dev = 1,088, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.10972875941129352;  // std dev = 4,343, 98,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5611229502035742;  // std dev = 0,368, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.020374436225174156;  // std dev = 4,124, 120,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=21 */
%   | | | else return -0.10243014348178987;  // std dev = 0,021, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 1,46e-07, 226,000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.036239358415181486;  // std dev = 0,465, 3.582,000 (wgt'ed) examples reached here.  /* #neg=2.425 #pos=1.157 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.18988026760594554;  // std dev = 2,172, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.1055790719479157;  // std dev = 0,067, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.0031356519452070608;  // std dev = 6,165, 295,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=46 */
%   | | | else return -0.030484491334981486;  // std dev = 4,356, 223,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=21 */


Results
   AUC ROC   = 0.711431
   AUC PR    = 0.214195
   CLL	      = -0.311556
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 675.177 seconds
Total inference time: 15.178 seconds
AUC ROC: 0.711431


Results scoring model
   AUC ROC   = 0.655523
   AUC PR    = 0.190077
   CLL	      = -0.3263
   Precision = 0.922764 at threshold = 0.5
   Recall    = 0.155373
   F1        = 0.265964


Total scoring time: 94.682 seconds
Refined model CLL: -0.3263


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.711431
   AUC PR    = 0.214195
   CLL	      = -0.311556
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 788.3570000000001 seconds
Total inference time: 15.178 seconds
AUC ROC: 0.711431
Total revision time: 788.3570000000001
Best scored revision CLL: -0.3263


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 09:16:28
{'AUC PR': 0.214195, 'AUC ROC': 0.711431, 'Precision': [1.0, 0.5], 'Inference time': 15.178, 'parameter_0.6': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 4.215, 'CLL': -0.329081, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 9.788}, 'CLL': -0.311556, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 788.3570000000001}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2075678335330595;  // std dev = 0,477, 3.958,000 (wgt'ed) examples reached here.  /* #neg=2.575 #pos=1.383 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.33183314562582816;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.06601410363883695;  // std dev = 5,414, 178,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=37 */
%   | | | else return -0.06290369647943503;  // std dev = 2,879, 114,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.03132474911101411;  // std dev = 4,322, 190,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=21 */
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19461828494764977;  // std dev = 0,481, 3.803,000 (wgt'ed) examples reached here.  /* #neg=2.420 #pos=1.383 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.39918155834239133;  // std dev = 2,023, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return -0.0011695424687248259;  // std dev = 4,710, 186,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=26 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 5.093732800503507E-4;  // std dev = 4,209, 139,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | | else return -0.13436496134612616;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.03326285028245185;  // std dev = 0,304, 203,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=21 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16540142415995682;  // std dev = 0,481, 3.804,000 (wgt'ed) examples reached here.  /* #neg=2.421 #pos=1.383 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.39540534561920665;  // std dev = 0,473, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else return -0.13976208142181842;  // std dev = 0,032, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.04263849744134889;  // std dev = 5,465, 192,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=37 */
%   | | | else return -0.05340906887548555;  // std dev = 2,875, 113,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=9 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.020205478035305632;  // std dev = 4,311, 186,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=21 */
%   | | | else return -0.12184066183089515;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1345844609210497;  // std dev = 0,480, 3.838,000 (wgt'ed) examples reached here.  /* #neg=2.455 #pos=1.383 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8522764576772083;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14630217099022663;  // std dev = 0,039, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.13285176039872615;  // std dev = 2,455, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.14397990842308905;  // std dev = 0,048, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.19562534044748797;  // std dev = 2,166, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.1258603692409489;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.026803810784998;  // std dev = 5,811, 355,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=38 */
%   | | | else return -0.011716770700581247;  // std dev = 3,918, 129,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10823591715269704;  // std dev = 0,480, 3.859,000 (wgt'ed) examples reached here.  /* #neg=2.476 #pos=1.383 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.14493139726870213;  // std dev = 0,962, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4459965013724275;  // std dev = 1,208, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.029673305272506827;  // std dev = 5,425, 200,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=37 */
%   | | | else return -0.05089846810789838;  // std dev = 2,885, 123,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.006279899023700769;  // std dev = 4,232, 156,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=21 */
%   | | | else return -0.1185678219394051;  // std dev = 0,024, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.1058323538899438;  // std dev = 0,011, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.06776784704301125;  // std dev = 0,473, 3.808,000 (wgt'ed) examples reached here.  /* #neg=2.518 #pos=1.290 */
%   | | else return 0.05191788238641024;  // std dev = 0,373, 334,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=70 */
%   | else if ( title(F, D), venue(F, B) )
%   | | then return -0.2012969790621227;  // std dev = 0,288, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.6790073428413563;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.05823321215031409;  // std dev = 3,962, 94,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=22 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.633769247603261;  // std dev = 0,294, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.05214623407657707;  // std dev = 0,837, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0513099110474029;  // std dev = 3,910, 95,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | else return -0.09660017714235107;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6932661220200266;  // std dev = 0,172, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.20560973816704997;  // std dev = 3,570, 51,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=25 */
%   | | | else return -0.04300662690910113;  // std dev = 2,306, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.27951622383824154;  // std dev = 3,097, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | | else return -0.18493661299065972;  // std dev = 2,466, 69,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
%   | | else return 0.06361474932044242;  // std dev = 0,475, 3.741,000 (wgt'ed) examples reached here.  /* #neg=2.431 #pos=1.310 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, A) )
%   | | then return 0.03574609499281531;  // std dev = 0,773, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.16961769757768141;  // std dev = 0,458, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else return -0.017336355056668164;  // std dev = 0,330, 489,000 (wgt'ed) examples reached here.  /* #neg=423 #pos=66 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06477357733886141;  // std dev = 0,478, 3.791,000 (wgt'ed) examples reached here.  /* #neg=2.408 #pos=1.383 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7572147817714387;  // std dev = 1,410, 41,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | else return -0.16895983997233982;  // std dev = 0,278, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.10714439601473168;  // std dev = 2,258, 73,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=9 */
%   | | | else return 0.02473626728324364;  // std dev = 2,768, 61,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.026500841239951573;  // std dev = 4,300, 196,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=21 */
%   | | | else return -0.11065641594554279;  // std dev = 0,044, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.08879478344160503;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03103567267756073;  // std dev = 0,473, 3.766,000 (wgt'ed) examples reached here.  /* #neg=2.476 #pos=1.290 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6821264356527365;  // std dev = 2,334, 75,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=70 */
%   | | | else return -0.13841734817802762;  // std dev = 1,326, 274,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1945580301045781;  // std dev = 0,105, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.48765064331574653;  // std dev = 0,978, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.0839587992420855;  // std dev = 3,312, 71,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.4276293706160823;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0.4066147961647517;  // std dev = 0,357, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else return 0.005483170060380733;  // std dev = 0,309, 121,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03315396208972015;  // std dev = 0,472, 3.888,000 (wgt'ed) examples reached here.  /* #neg=2.505 #pos=1.383 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5843567494118752;  // std dev = 2,120, 45,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | | else return -0.11891094720836638;  // std dev = 0,803, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.0015051452619100987;  // std dev = 2,022, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return -0.06143652952813005;  // std dev = 2,111, 82,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.003174975372411013;  // std dev = 3,406, 117,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=21 */
%   | | | else return -0.10626169116076888;  // std dev = 0,017, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08228093793216013;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.786533
   AUC PR    = 0.03345
   CLL	      = -0.354313
   Precision = 0.047777 at threshold = 0.5
   Recall    = 0.247849
   F1        = 0.080111


Total learning time: 2448.555 seconds
Total inference time: 26.85 seconds
AUC ROC: 0.786533


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 09:57:43
{'AUC PR': 0.03345, 'AUC ROC': 0.786533, 'Precision': [0.047777, 0.5], 'Inference time': 26.85, 'CLL': -0.354313, 'Recall': 0.247849, 'Learning time': 2448.555, 'F1': 0.080111}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2192455408436325;  // std dev = 0,480, 3.830,000 (wgt'ed) examples reached here.  /* #neg=2.447 #pos=1.383 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7651256792855584;  // std dev = 1,905, 43,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=39 */
%   | | | else return -0.14185106490048824;  // std dev = 0,000, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.5504566274072047;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return -0.06808057309720897;  // std dev = 2,887, 122,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=9 */
%   | else return -0.03941204051024388;  // std dev = 0,303, 205,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=21 */


Results
   AUC ROC   = 0.574181
   AUC PR    = 0.02066
   CLL	      = -0.198355
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 54.364 seconds
Total inference time: 3.851 seconds
AUC ROC: 0.574181


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 09:58:42
{'AUC PR': 0.02066, 'AUC ROC': 0.574181, 'Precision': [nan, 0.5], 'Inference time': 3.851, 'CLL': -0.198355, 'Recall': 0.0, 'Learning time': 54.364, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.15551496598052442;  // std dev = 33,915, 5.505,000 (wgt'ed) examples reached here.  /* #neg=3.868 #pos=1.637 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.1388975543140033;  // std dev = 33,833, 5.443,000 (wgt'ed) examples reached here.  /* #neg=3.806 #pos=1.637 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.11336130564626681;  // std dev = 33,973, 5.550,000 (wgt'ed) examples reached here.  /* #neg=3.913 #pos=1.637 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.09505448004209265;  // std dev = 33,993, 5.566,000 (wgt'ed) examples reached here.  /* #neg=3.929 #pos=1.637 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.08722103673714587;  // std dev = 33,806, 5.423,000 (wgt'ed) examples reached here.  /* #neg=3.786 #pos=1.637 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.0681432022927099;  // std dev = 33,903, 5.496,000 (wgt'ed) examples reached here.  /* #neg=3.859 #pos=1.637 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,53e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.04743849234033095;  // std dev = 34,106, 5.656,000 (wgt'ed) examples reached here.  /* #neg=4.019 #pos=1.637 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2,53e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.04362799308011014;  // std dev = 33,986, 5.560,000 (wgt'ed) examples reached here.  /* #neg=3.923 #pos=1.637 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.03449678726292691;  // std dev = 34,006, 5.576,000 (wgt'ed) examples reached here.  /* #neg=3.939 #pos=1.637 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080117;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.03307205676176477;  // std dev = 33,879, 5.478,000 (wgt'ed) examples reached here.  /* #neg=3.841 #pos=1.637 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.326708
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 16.414 seconds
Total inference time: 4.42 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.579825
   AUC PR    = 0.178239
   CLL	      = -0.327417
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.159651
   F1        = 0.275343


Total scoring time: 9.319 seconds
Parameter learned model CLL: -0.327417


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.915, 3868, 1637], 'true': [1.05e-06, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.833, 3806, 1637], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.973, 3913, 1637], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.993, 3929, 1637], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.806, 3786, 1637], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.903, 3859, 1637], 'true': [3.67e-07, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.106, 4019, 1637], 'true': [2.53e-07, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.986, 3923, 1637], 'true': [2.53e-07, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.006, 3939, 1637], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.879, 3841, 1637], 'true': [0.0, 0, 311]}]]
[{'': [3.5641371954525925e-15, 0.2089394745590288]}, {'': [-4.93495919370359e-15, 0.2103007370254552]}, {'': [-2.2847033304183284e-16, 0.20795652950251334]}, {'': [-8.453402322547816e-16, 0.20760810495529777]}, {'': [-3.6555253286693257e-16, 0.2107415064316212]}, {'': [4.3409363277948243e-16, 0.20913658391761375]}, {'': [2.0562329973764956e-16, 0.20565907779146894]}, {'': [2.0562329973764956e-16, 0.2077386975311574]}, {'': [-2.1704681638974121e-16, 0.20739062959927626]}, {'': [-1.7420862894439756e-16, 0.20953131121186322]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17586914235339318;  // std dev = 0,466, 4.825,000 (wgt'ed) examples reached here.  /* #neg=3.292 #pos=1.533 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2812258581764354;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.009664086614664176;  // std dev = 7,426, 429,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=65 */
%   | | | else return -0.028947839094036486;  // std dev = 4,984, 248,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3676221024745746;  // std dev = 3,929, 62,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=33 */
%   | | | else return -0.008385962041554324;  // std dev = 2,905, 64,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=10 */
%   | | else return 0.15124277444352263;  // std dev = 0,465, 4.717,000 (wgt'ed) examples reached here.  /* #neg=3.227 #pos=1.490 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.04941902057952082;  // std dev = 6,533, 275,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.02860286048369341;  // std dev = 4,455, 193,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=23 */
%   | | else return -0.026501057022165087;  // std dev = 0,315, 251,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13386933970671003;  // std dev = 0,466, 4.783,000 (wgt'ed) examples reached here.  /* #neg=3.250 #pos=1.533 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.3224299813360966;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.018139832771419593;  // std dev = 7,360, 397,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=65 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.023871934211603614;  // std dev = 4,988, 252,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=28 */
%   | | | else return -0.13270072115263237;  // std dev = 0,016, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.34788408340890176;  // std dev = 3,651, 54,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=30 */
%   | | | else return -0.10343072138994022;  // std dev = 3,143, 106,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=11 */
%   | | else return 0.11089458387320897;  // std dev = 0,466, 4.681,000 (wgt'ed) examples reached here.  /* #neg=3.189 #pos=1.492 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0431927903317675;  // std dev = 6,515, 270,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=53 */
%   | | | else return -0.01246632629660672;  // std dev = 4,332, 168,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03317516852453506;  // std dev = 5,021, 283,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=28 */
%   | | | else return -0.12045276158198512;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.07080759756814091;  // std dev = 5,017, 123,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
%   | | | else return 0.6290493889508868;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.08672136346083768;  // std dev = 0,463, 4.760,000 (wgt'ed) examples reached here.  /* #neg=3.270 #pos=1.490 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.00947232538959137;  // std dev = 0,942, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.1652823906084774;  // std dev = 2,827, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.1133105557468768;  // std dev = 2,480, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.012681133076779615;  // std dev = 8,377, 627,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=81 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07382740687691836;  // std dev = 0,464, 4.850,000 (wgt'ed) examples reached here.  /* #neg=3.317 #pos=1.533 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.030059845468309483;  // std dev = 6,527, 276,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=53 */
%   | | | else return -0.01473444635248102;  // std dev = 4,331, 167,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=23 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.04492170795498402;  // std dev = 0,963, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.020955418654684317;  // std dev = 4,911, 255,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=27 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,53e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05963202891021526;  // std dev = 0,464, 4.858,000 (wgt'ed) examples reached here.  /* #neg=3.325 #pos=1.533 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2675131531533577;  // std dev = 1,304, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.04044495079605864;  // std dev = 2,738, 46,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06976661317973776;  // std dev = 2,578, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.01038866344067632;  // std dev = 8,365, 626,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=81 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2,53e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1705448108206871;  // std dev = 4,088, 71,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | | | else return -0.14474430673405775;  // std dev = 2,743, 80,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.10452799962272377;  // std dev = 4,772, 104,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=40 */
%   | | | else return 0.05942368073383228;  // std dev = 31,265, 4.443,000 (wgt'ed) examples reached here.  /* #neg=2.991 #pos=1.452 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.03845129133248862;  // std dev = 6,473, 256,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=53 */
%   | | | else return -0.02913342727079873;  // std dev = 4,381, 182,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=23 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.011844460153136654;  // std dev = 4,983, 248,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=28 */
%   | | | else return -0.10704420524764334;  // std dev = 0,019, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04268483855426511;  // std dev = 0,466, 4.765,000 (wgt'ed) examples reached here.  /* #neg=3.232 #pos=1.533 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.00383855433426023;  // std dev = 6,931, 366,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=60 */
%   | | | else return 0.08554273401718604;  // std dev = 3,523, 73,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.024534485604807692;  // std dev = 5,024, 282,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=28 */
%   | | | else return -0.09451845417855945;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080117;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22219745012129913;  // std dev = 3,507, 52,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=30 */
%   | | | else return -0.0954864914853933;  // std dev = 3,055, 84,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=11 */
%   | | else return 0.033417700988714036;  // std dev = 0,467, 4.636,000 (wgt'ed) examples reached here.  /* #neg=3.144 #pos=1.492 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.17463866678066664;  // std dev = 2,514, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.013034776819594454;  // std dev = 7,276, 383,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=65 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.12881559635197215;  // std dev = 0,036, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.013463973881881454;  // std dev = 4,996, 264,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=28 */


Results
   AUC ROC   = 0.618384
   AUC PR    = 0.188839
   CLL	      = -0.321498
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 257.578 seconds
Total inference time: 9.5 seconds
AUC ROC: 0.618384


Results scoring model
   AUC ROC   = 0.639205
   AUC PR    = 0.190757
   CLL	      = -0.326704
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.159651
   F1        = 0.275343


Total scoring time: 52.837 seconds
Refined model CLL: -0.326704


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.618384
   AUC PR    = 0.188839
   CLL	      = -0.321498
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 336.14799999999997 seconds
Total inference time: 9.5 seconds
AUC ROC: 0.618384
Total revision time: 336.14799999999997
Best scored revision CLL: -0.326704


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 10:04:34
{'AUC PR': 0.188839, 'AUC ROC': 0.618384, 'Precision': [1.0, 0.5], 'Inference time': 9.5, 'parameter_0.8': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 4.42, 'CLL': -0.326708, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 16.414}, 'CLL': -0.321498, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 336.14799999999997}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.21501320967049;  // std dev = 0,479, 5.128,000 (wgt'ed) examples reached here.  /* #neg=3.298 #pos=1.830 */
%   else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | then if ( haswordauthor(G, E) )
%   | | then return 0.2129876447769317;  // std dev = 0,478, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( title(H, F), venue(H, A) )
%   | | | then return 0.05582335370416332;  // std dev = 6,397, 258,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=51 */
%   | | | else return -0.030739953789376547;  // std dev = 3,528, 126,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.03890988842989982;  // std dev = 0,304, 272,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7890627419570067;  // std dev = 0,999, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.17009038989965217;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.10032294803918705;  // std dev = 1,671, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | | | else return 0.35015257886016615;  // std dev = 2,314, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | else return 0.18691000898354565;  // std dev = 0,479, 5.014,000 (wgt'ed) examples reached here.  /* #neg=3.224 #pos=1.790 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordauthor(K, I) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.4968620137543591;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30387955761400837;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.017641770170327205;  // std dev = 0,369, 399,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=65 */
%   | else return -0.04207025836007529;  // std dev = 0,292, 296,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15734422737978482;  // std dev = 0,477, 5.178,000 (wgt'ed) examples reached here.  /* #neg=3.334 #pos=1.844 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.030396450978215115;  // std dev = 0,917, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.13487617481568076;  // std dev = 2,636, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.358346161831099;  // std dev = 0,981, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.006827112138281479;  // std dev = 6,267, 299,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=48 */
%   | | | else return 0.08150948806059405;  // std dev = 3,524, 72,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | | else return -0.02210408036649667;  // std dev = 0,312, 246,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.10600308432998223;  // std dev = 4,228, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.037401637029998165;  // std dev = 2,156, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else return 0.681641456593787;  // std dev = 0,236, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.3312470557047553;  // std dev = 3,651, 54,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=30 */
%   | | | else return -0.13235447686229557;  // std dev = 2,695, 87,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=8 */
%   | | else return 0.14617151706605397;  // std dev = 0,483, 4.729,000 (wgt'ed) examples reached here.  /* #neg=2.977 #pos=1.752 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordauthor(L, J) )
%   | | then return 0.19598860631691964;  // std dev = 0,495, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else return 0.01422716734682769;  // std dev = 0,371, 391,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=65 */
%   | else return -0.02499441275558979;  // std dev = 0,307, 266,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=28 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1112218529431313;  // std dev = 0,478, 5.091,000 (wgt'ed) examples reached here.  /* #neg=3.247 #pos=1.844 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return 0.044241923263325086;  // std dev = 0,399, 262,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=53 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.04896373331355697;  // std dev = 2,555, 77,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=9 */
%   | | | else return 0.02286966218548988;  // std dev = 3,398, 80,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.021690186212653007;  // std dev = 5,004, 266,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=28 */
%   | | | else return -0.12784160717478374;  // std dev = 0,018, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.1335751099579568;  // std dev = 0,065, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.661300316057828;  // std dev = 0,452, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.31039706444122017;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.5221981188288386;  // std dev = 0,266, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.10915276280840033;  // std dev = 2,666, 72,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=8 */
%   | else return 0.08953523266954416;  // std dev = 0,479, 4.953,000 (wgt'ed) examples reached here.  /* #neg=3.161 #pos=1.792 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then if ( author(L, J), venue(L, A) )
%   | | | then return 0.09744290383968478;  // std dev = 1,074, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.16123622422728756;  // std dev = 2,320, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return -0.13853801587373554;  // std dev = 0,077, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.004718446746567063;  // std dev = 0,345, 664,000 (wgt'ed) examples reached here.  /* #neg=571 #pos=93 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0679454971660344;  // std dev = 0,475, 5.139,000 (wgt'ed) examples reached here.  /* #neg=3.295 #pos=1.844 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8102652400896624;  // std dev = 1,011, 53,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1589230376307824;  // std dev = 1,042, 197,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.09013529976238822;  // std dev = 2,600, 115,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=9 */
%   | | | else return 0.012254474131652274;  // std dev = 3,415, 84,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.004493556564212653;  // std dev = 4,963, 235,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=28 */
%   | | | else return -0.1151383437444311;  // std dev = 0,031, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.11728675385584654;  // std dev = 0,059, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05664697528294067;  // std dev = 0,476, 5.096,000 (wgt'ed) examples reached here.  /* #neg=3.252 #pos=1.844 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.1825320054178965;  // std dev = 2,289, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.006983895426119096;  // std dev = 5,119, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.0045416696035187245;  // std dev = 3,971, 159,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=27 */
%   | | | else return -0.14442793947532626;  // std dev = 0,129, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.022908649178871053;  // std dev = 0,295, 288,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=28 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5128892308828221;  // std dev = 0,625, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.23475246920366943;  // std dev = 0,050, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.38750463929782925;  // std dev = 0,129, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12884900230814425;  // std dev = 2,351, 51,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | else return 0.0420506065721928;  // std dev = 0,477, 5.000,000 (wgt'ed) examples reached here.  /* #neg=3.210 #pos=1.790 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then if ( author(L, J), title(L, K) )
%   | | | then return -0.018499480710213036;  // std dev = 0,947, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.09466374845254702;  // std dev = 2,124, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else return -0.03815360357033373;  // std dev = 0,312, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else return -0.019307386806040584;  // std dev = 0,307, 716,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=91 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.01856713757897133;  // std dev = 0,469, 5.011,000 (wgt'ed) examples reached here.  /* #neg=3.285 #pos=1.726 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7135839405488225;  // std dev = 2,444, 95,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=89 */
%   | | | else return -0.13293117342238434;  // std dev = 1,496, 380,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=2 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( haswordtitle(D, G), haswordauthor(H, G) )
%   | | | then return 0.2005229221481888;  // std dev = 2,398, 24,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.6741819366042726;  // std dev = 5,16e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.05462529382040623;  // std dev = 0,356, 126,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=32 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then return 0.42549721898367937;  // std dev = 0,427, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | else return 0.6525809597877599;  // std dev = 0,099, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.01157536833439125;  // std dev = 0,302, 176,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=27 */


Results
   AUC ROC   = 0.575614
   AUC PR    = 0.021443
   CLL	      = -0.374657
   Precision = 0.076923 at threshold = 0.5
   Recall    = 0.005164
   F1        = 0.009677


Total learning time: 1878.11 seconds
Total inference time: 19.624 seconds
AUC ROC: 0.575614


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 10:36:12
{'AUC PR': 0.021443, 'AUC ROC': 0.575614, 'Precision': [0.076923, 0.5], 'Inference time': 19.624, 'CLL': -0.374657, 'Recall': 0.005164, 'Learning time': 1878.11, 'F1': 0.009677}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22694893509950717;  // std dev = 0,482, 5.000,000 (wgt'ed) examples reached here.  /* #neg=3.156 #pos=1.844 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.28672036367094095;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.05506013201070906;  // std dev = 6,400, 259,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=51 */
%   | | | else return -0.050941973991396744;  // std dev = 3,568, 154,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.02709696653983237;  // std dev = 4,979, 244,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=28 */
%   | | | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.550386
   AUC PR    = 0.012643
   CLL	      = -0.20031
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 33.322 seconds
Total inference time: 3.706 seconds
AUC ROC: 0.550386


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 10:36:50
{'AUC PR': 0.012643, 'AUC ROC': 0.550386, 'Precision': [nan, 0.5], 'Inference time': 3.706, 'CLL': -0.20031, 'Recall': 0.0, 'Learning time': 33.322, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,56e-06, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.15260620992629698;  // std dev = 37,938, 6.928,000 (wgt'ed) examples reached here.  /* #neg=4.888 #pos=2.040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13295328099769643;  // std dev = 37,939, 6.929,000 (wgt'ed) examples reached here.  /* #neg=4.889 #pos=2.040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.12038158563497504;  // std dev = 37,771, 6.785,000 (wgt'ed) examples reached here.  /* #neg=4.745 #pos=2.040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.09535708369830412;  // std dev = 37,947, 6.936,000 (wgt'ed) examples reached here.  /* #neg=4.896 #pos=2.040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.08685682538302632;  // std dev = 37,755, 6.772,000 (wgt'ed) examples reached here.  /* #neg=4.732 #pos=2.040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,50e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.062178763202220995;  // std dev = 38,016, 6.997,000 (wgt'ed) examples reached here.  /* #neg=4.957 #pos=2.040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.057477708567397076;  // std dev = 37,842, 6.845,000 (wgt'ed) examples reached here.  /* #neg=4.805 #pos=2.040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2,06e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04240328622804498;  // std dev = 37,961, 6.948,000 (wgt'ed) examples reached here.  /* #neg=4.908 #pos=2.040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.03867436433525264;  // std dev = 37,844, 6.847,000 (wgt'ed) examples reached here.  /* #neg=4.807 #pos=2.040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.02718562311339395;  // std dev = 37,952, 6.940,000 (wgt'ed) examples reached here.  /* #neg=4.900 #pos=2.040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.326511
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 22.228 seconds
Total inference time: 4.304 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.327182
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 11.415 seconds
Parameter learned model CLL: -0.327182


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.938, 4888, 2040], 'true': [1.56e-06, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.939, 4889, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.771, 4745, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.947, 4896, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.755, 4732, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.016, 4957, 2040], 'true': [4.5e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.842, 4805, 2040], 'true': [2.46e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.961, 4908, 2040], 'true': [2.06e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.844, 4807, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.952, 4900, 2040], 'true': [0.0, 0, 396]}]]
[{'': [6.172391441956426e-15, 0.2077521881283063]}, {'': [-5.311127519822971e-15, 0.20773471668737495]}, {'': [-1.2201238896890609e-15, 0.21026485121222885]}, {'': [-1.8301858345335913e-15, 0.20761245674741766]}, {'': [-1.5969268556224474e-15, 0.2104946220652759]}, {'': [5.113754537667388e-16, 0.20655006620052194]}, {'': [1.525154862111326e-16, 0.20920721325437147]}, {'': [1.0765799026668185e-16, 0.20740303244531735]}, {'': [-2.6017347647781446e-16, 0.2091720408830233]}, {'': [-3.1848822120560044e-16, 0.20754262555125966]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,56e-06, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3776294545800314;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | | else return 0.029201566678459745;  // std dev = 3,283, 76,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=13 */
%   | | else return 0.17576977843169775;  // std dev = 0,466, 5.834,000 (wgt'ed) examples reached here.  /* #neg=3.981 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.04514080501821204;  // std dev = 7,490, 369,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=69 */
%   | | | else return 3.0579784460978935E-4;  // std dev = 4,988, 204,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.04101072876603445;  // std dev = 5,689, 357,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14719383609356074;  // std dev = 0,463, 6.108,000 (wgt'ed) examples reached here.  /* #neg=4.202 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5244830874558027;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.12930886669489536;  // std dev = 3,077, 48,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.02259080432331626;  // std dev = 8,301, 494,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=83 */
%   | | | else return -0.03606076175139105;  // std dev = 5,527, 339,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=34 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.11709488003259282;  // std dev = 5,504, 148,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | | else return 0.8276253593835616;  // std dev = 0,050, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14520560794461626;  // std dev = 5,725, 148,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=49 */
%   | | | else return 0.1320099894185682;  // std dev = 35,079, 5.675,000 (wgt'ed) examples reached here.  /* #neg=3.871 #pos=1.804 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.0028537549547166946;  // std dev = 1,301, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.12771347106783898;  // std dev = 3,268, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.09092562368013603;  // std dev = 3,329, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return -0.011566986960394765;  // std dev = 9,402, 782,000 (wgt'ed) examples reached here.  /* #neg=680 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3693747612511069;  // std dev = 4,091, 69,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=40 */
%   | | | else return -0.08565097228415096;  // std dev = 3,347, 104,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=13 */
%   | | else return 0.10885496842756393;  // std dev = 0,464, 5.868,000 (wgt'ed) examples reached here.  /* #neg=4.015 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.060394121047246785;  // std dev = 7,349, 323,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=69 */
%   | | | else return -0.022685209305729235;  // std dev = 4,994, 233,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.036382083200337485;  // std dev = 5,684, 371,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=36 */
%   | | | else return -0.12172452120072147;  // std dev = 0,015, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09336312173187566;  // std dev = 0,465, 5.978,000 (wgt'ed) examples reached here.  /* #neg=4.072 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20446773550354455;  // std dev = 3,050, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.07394882470006568;  // std dev = 1,279, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.01674103054447853;  // std dev = 8,263, 491,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=83 */
%   | | | else return -0.025145419248972418;  // std dev = 5,525, 333,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,50e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07905369371534306;  // std dev = 0,466, 5.935,000 (wgt'ed) examples reached here.  /* #neg=4.029 #pos=1.906 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07829470108996013;  // std dev = 3,298, 61,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return -0.040058713697650974;  // std dev = 1,306, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.0017253615659788561;  // std dev = 8,270, 531,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=82 */
%   | | | else return -0.011112137160312023;  // std dev = 5,547, 306,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=35 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05917837366920299;  // std dev = 0,464, 6.029,000 (wgt'ed) examples reached here.  /* #neg=4.123 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.011486682800541232;  // std dev = 8,033, 458,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=80 */
%   | | | else return 0.07893299940233496;  // std dev = 3,738, 81,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.011166729116489062;  // std dev = 5,631, 315,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=36 */
%   | | | else return -0.10705304527036984;  // std dev = 0,021, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2,06e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.035631727766163517;  // std dev = 35,325, 5.923,000 (wgt'ed) examples reached here.  /* #neg=4.123 #pos=1.800 */
%   | | | else return 0.05237076126628673;  // std dev = 9,042, 567,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=115 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.09367995874376822;  // std dev = 1,433, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.11509853328296829;  // std dev = 5,761, 172,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=53 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5393614741093667;  // std dev = 0,392, 42,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.026486326583938492;  // std dev = 5,390, 191,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=36 */
%   | | | else return -0.0977321795085755;  // std dev = 0,021, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.043244610825070966;  // std dev = 0,464, 5.965,000 (wgt'ed) examples reached here.  /* #neg=4.059 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5208039016428023;  // std dev = 0,948, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.12754678061811958;  // std dev = 2,918, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.010102071939235355;  // std dev = 8,313, 533,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=83 */
%   | | | else return -0.02676616965860304;  // std dev = 5,526, 340,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03329777468678771;  // std dev = 0,464, 5.989,000 (wgt'ed) examples reached here.  /* #neg=4.083 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.17930636726306767;  // std dev = 2,984, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return -0.001731913782969192;  // std dev = 8,283, 508,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=83 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.10408163340232322;  // std dev = 1,193, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return -0.026364779963948592;  // std dev = 5,532, 350,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=34 */


Results
   AUC ROC   = 0.711058
   AUC PR    = 0.212807
   CLL	      = -0.314575
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 1032.774 seconds
Total inference time: 14.702 seconds
AUC ROC: 0.711058


Results scoring model
   AUC ROC   = 0.655834
   AUC PR    = 0.202765
   CLL	      = -0.323917
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.163383
   F1        = 0.280875


Total scoring time: 146.578 seconds
Refined model CLL: -0.323917


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.711058
   AUC PR    = 0.212807
   CLL	      = -0.314575
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 1212.995 seconds
Total inference time: 14.702 seconds
AUC ROC: 0.711058
Total revision time: 1212.995
Best scored revision CLL: -0.323917


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 10:57:24
{'AUC PR': 0.212807, 'AUC ROC': 0.711058, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 4.304, 'CLL': -0.326511, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 22.228}, 'Inference time': 14.702, 'CLL': -0.314575, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 1212.995}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.858148935099512;  // std dev = 2,38e-07, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.015800644732420436;  // std dev = 3,621, 119,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=15 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.22249633610977274;  // std dev = 0,481, 6.137,000 (wgt'ed) examples reached here.  /* #neg=3.901 #pos=2.236 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.7770678540184317;  // std dev = 2,348, 74,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=68 */
%   | | | else return -0.1378188068359722;  // std dev = 0,998, 248,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=1 */
%   | | else return 0.020160108283869216;  // std dev = 0,368, 179,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=29 */
%   | else return -0.039578337627760966;  // std dev = 0,303, 352,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18794888178489774;  // std dev = 0,478, 6.408,000 (wgt'ed) examples reached here.  /* #neg=4.106 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.44839967515878887;  // std dev = 0,703, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2914684581463509;  // std dev = 2,703, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.0431393774904028;  // std dev = 6,354, 339,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=67 */
%   | | | else return -0.0631046312339716;  // std dev = 3,834, 197,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.010340606092549227;  // std dev = 5,607, 284,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=36 */
%   | | | else return -0.13710116947283052;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.13710116947283052;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.163827646014655;  // std dev = 0,479, 6.334,000 (wgt'ed) examples reached here.  /* #neg=4.032 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.08229273170401918;  // std dev = 0,966, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.17084400051354326;  // std dev = 2,888, 37,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.2641175857744499;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.13370169887364364;  // std dev = 0,015, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.04398012902595228;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.12500873488968167;  // std dev = 2,688, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.023880764224347244;  // std dev = 7,534, 595,000 (wgt'ed) examples reached here.  /* #neg=526 #pos=69 */
%   | | | else return 0.018404404439697816;  // std dev = 4,483, 189,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=33 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7426558558670974;  // std dev = 0,083, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.22701261030193584;  // std dev = 4,613, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | | else return -0.08295650790566034;  // std dev = 2,924, 70,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=10 */
%   | else return 0.13219689777781388;  // std dev = 0,478, 6.227,000 (wgt'ed) examples reached here.  /* #neg=3.991 #pos=2.236 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then if ( author(K, J), title(K, I) )
%   | | | then return 0.01293299607486225;  // std dev = 0,992, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.18276662531719703;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( title(L, I), venue(L, A) )
%   | | | then return 0.01903834842356968;  // std dev = 6,370, 375,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=67 */
%   | | | else return -0.0479634793439722;  // std dev = 3,826, 185,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=16 */
%   | else return -0.030149245618717867;  // std dev = 0,300, 357,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10231295481368495;  // std dev = 0,476, 6.511,000 (wgt'ed) examples reached here.  /* #neg=4.209 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.17198631556886135;  // std dev = 2,878, 36,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return -0.001443509354061146;  // std dev = 6,317, 415,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=65 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.08667367957151695;  // std dev = 3,727, 83,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | | | else return -0.13645248498507762;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.019241690536178947;  // std dev = 5,647, 326,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=36 */
%   | | | else return -0.11702637584591973;  // std dev = 0,027, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.11952929262613561;  // std dev = 0,015, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5621394803340204;  // std dev = 0,105, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.24445603874142002;  // std dev = 4,262, 73,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=39 */
%   | | | else return -0.09467465269726887;  // std dev = 2,939, 74,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=10 */
%   | else return 0.08502516659046971;  // std dev = 0,477, 6.289,000 (wgt'ed) examples reached here.  /* #neg=4.053 #pos=2.236 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), venue(K, A) )
%   | | | then return 0.019493005069685276;  // std dev = 0,966, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2248481713615335;  // std dev = 2,544, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return -0.04847693825893401;  // std dev = 0,251, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.01060693854006004;  // std dev = 0,328, 503,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=83 */
%   | | else return -0.020683488557958478;  // std dev = 0,302, 331,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07027765174386966;  // std dev = 0,476, 6.421,000 (wgt'ed) examples reached here.  /* #neg=4.119 #pos=2.302 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7361920322088189;  // std dev = 0,163, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1378270862536163;  // std dev = 0,042, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08967583499512498;  // std dev = 2,548, 46,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return -0.13962175874216498;  // std dev = 0,031, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.25562203253579197;  // std dev = 1,238, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03852084991184306;  // std dev = 2,666, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0071524457427063265;  // std dev = 6,865, 479,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=69 */
%   | | | else return -0.02345331185274993;  // std dev = 5,436, 335,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=33 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5205540578760633;  // std dev = 0,544, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.22881350277160425;  // std dev = 0,061, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.12426315454512454;  // std dev = 3,002, 96,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=15 */
%   | | | else return 0.47611771488051147;  // std dev = 0,309, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.06013776506050164;  // std dev = 0,480, 6.169,000 (wgt'ed) examples reached here.  /* #neg=3.933 #pos=2.236 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.6676552058050801;  // std dev = 0,279, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.25795329131549594;  // std dev = 0,075, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.005265152576221926;  // std dev = 0,401, 49,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | else return -0.006252410326281022;  // std dev = 0,314, 858,000 (wgt'ed) examples reached here.  /* #neg=741 #pos=117 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05071436123170735;  // std dev = 0,478, 6.277,000 (wgt'ed) examples reached here.  /* #neg=3.975 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.16681022683203728;  // std dev = 0,487, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0988244277567;  // std dev = 2,665, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.017180764480075578;  // std dev = 6,298, 369,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=67 */
%   | | | else return -0.04042739944878047;  // std dev = 3,792, 171,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.003094283640746953;  // std dev = 5,556, 299,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=36 */
%   | | | else return -0.1010073706683733;  // std dev = 0,036, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.10355418469275389;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.021972333171698985;  // std dev = 0,472, 6.181,000 (wgt'ed) examples reached here.  /* #neg=4.029 #pos=2.152 */
%   | | else return 0.05135065473044579;  // std dev = 0,362, 555,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=115 */
%   | else if ( haswordtitle(D, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return 0.38045039339740905;  // std dev = 2,905, 42,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=30 */
%   | | | else return 0.04969139306930914;  // std dev = 4,752, 176,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=41 */
%   | | else return -0.07444573407955565;  // std dev = 0,262, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.6629253159985067;  // std dev = 1,209, 67,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=66 */
%   | | | else return -0.1369813914328216;  // std dev = 1,278, 153,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=2 */
%   | | else return -0.034776619305817436;  // std dev = 0,203, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return 0.3756600470711068;  // std dev = 0,377, 41,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */


Results
   AUC ROC   = 0.580511
   AUC PR    = 0.021357
   CLL	      = -0.390127
   Precision = 0.045455 at threshold = 0.5
   Recall    = 0.001721
   F1        = 0.003317


Total learning time: 2192.429 seconds
Total inference time: 18.113 seconds
AUC ROC: 0.580511


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 11:34:15
{'AUC PR': 0.021357, 'AUC ROC': 0.580511, 'Precision': [0.045455, 0.5], 'Inference time': 18.113, 'CLL': -0.390127, 'Recall': 0.001721, 'Learning time': 2192.429, 'F1': 0.003317}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.339630416580993;  // std dev = 4,497, 81,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=39 */
%   | | | else return 0.016879093829671076;  // std dev = 2,900, 63,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=10 */
%   | else return 0.21122014937394265;  // std dev = 0,478, 6.333,000 (wgt'ed) examples reached here.  /* #neg=4.097 #pos=2.236 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then if ( author(J, H), venue(J, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.32243464938522665;  // std dev = 2,639, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( author(K, H), venue(K, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then if ( haswordtitle(N, L) )
%   | | | then return 0.15360348055405781;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.058148935099512175;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(B, P), haswordtitle(Q, P) )
%   | | | then return 0.010131313954138306;  // std dev = 7,649, 454,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=69 */
%   | | | else return -0.04915443568700503;  // std dev = 5,472, 356,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=33 */


Results
   AUC ROC   = 0.552119
   AUC PR    = 0.013206
   CLL	      = -0.197516
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 36.738 seconds
Total inference time: 3.883 seconds
AUC ROC: 0.552119


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 11:34:57
{'AUC PR': 0.013206, 'AUC ROC': 0.552119, 'Precision': [nan, 0.5], 'Inference time': 3.883, 'CLL': -0.197516, 'Recall': 0.0, 'Learning time': 36.738, 'F1': nan}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 182149

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 67804

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.15751702356712197;  // std dev = 16,295, 1.266,000 (wgt'ed) examples reached here.  /* #neg=887 #pos=379 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2,06e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.1377142854937746;  // std dev = 16,290, 1.264,000 (wgt'ed) examples reached here.  /* #neg=885 #pos=379 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,21e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.12051748757555429;  // std dev = 16,262, 1.254,000 (wgt'ed) examples reached here.  /* #neg=875 #pos=379 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.09392755275935391;  // std dev = 16,355, 1.288,000 (wgt'ed) examples reached here.  /* #neg=909 #pos=379 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.08380670844515294;  // std dev = 16,293, 1.265,000 (wgt'ed) examples reached here.  /* #neg=886 #pos=379 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.06670402553030695;  // std dev = 16,323, 1.276,000 (wgt'ed) examples reached here.  /* #neg=897 #pos=379 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.0711275053237394;  // std dev = 16,130, 1.209,000 (wgt'ed) examples reached here.  /* #neg=830 #pos=379 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,11e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.03255976478893208;  // std dev = 16,425, 1.315,000 (wgt'ed) examples reached here.  /* #neg=936 #pos=379 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7,60e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.043254734544760365;  // std dev = 16,228, 1.242,000 (wgt'ed) examples reached here.  /* #neg=863 #pos=379 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,16e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.029022696592222848;  // std dev = 16,295, 1.266,000 (wgt'ed) examples reached here.  /* #neg=887 #pos=379 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.331671
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 4.027 seconds
Total inference time: 5.546 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.582599
   AUC PR    = 0.184438
   CLL	      = -0.332619
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165198
   F1        = 0.283554


Total scoring time: 3.825 seconds
Parameter learned model CLL: -0.332619


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.295, 887, 379], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.29, 885, 379], 'true': [2.06e-07, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.262, 875, 379], 'true': [3.21e-07, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.355, 909, 379], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.293, 886, 379], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.323, 897, 379], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.13, 830, 379], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.425, 936, 379], 'true': [2.11e-08, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.228, 863, 379], 'true': [7.6e-08, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.295, 887, 379], 'true': [5.16e-08, 0, 75]}]]
[{'': [-1.4210854715202005e-15, 0.20974683607484298]}, {'': [5.684341886080802e-16, 0.2099366838246962]}, {'': [1.3737159558028603e-15, 0.2108881563049432]}, {'': [-1.1842378929335003e-16, 0.20766885440377306]}, {'': [-3.789561257387201e-16, 0.2098417410051698]}, {'': [-1.1842378929335004e-17, 0.20879990860938233]}, {'': [-1.0066022089934752e-16, 0.2152111165158464]}, {'': [5.921189464667502e-18, 0.20514623603059573]}, {'': [7.697546304067752e-17, 0.21203463843315143]}, {'': [3.552713678800501e-17, 0.20974683607485967]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6763307532813305;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.018148935099512268;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.24703782398840124;  // std dev = 2,925, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.1887940963898301;  // std dev = 14,817, 992,000 (wgt'ed) examples reached here.  /* #neg=664 #pos=328 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.2867203636709409;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.06290369647943503;  // std dev = 2,879, 114,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=9 */
%   | | | else return 0.05814893509951238;  // std dev = 2,683, 45,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2,06e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15632487976234577;  // std dev = 0,467, 1.098,000 (wgt'ed) examples reached here.  /* #neg=743 #pos=355 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.06119422963880908;  // std dev = 1,667, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | | | else return 0.02037970403582723;  // std dev = 2,984, 69,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.006220824629302997;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.0410762753970619;  // std dev = 2,691, 47,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,21e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.09598661953738377;  // std dev = 2,907, 41,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.7759631098092966;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.17229136613083007;  // std dev = 2,565, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.14647008860959992;  // std dev = 14,761, 977,000 (wgt'ed) examples reached here.  /* #neg=649 #pos=328 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.48213944344352333;  // std dev = 0,815, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08276365996010844;  // std dev = 1,714, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.041689403782592;  // std dev = 2,857, 99,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=9 */
%   | | | else return 0.03414815746169605;  // std dev = 2,703, 48,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11043462853934363;  // std dev = 0,467, 1.095,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=355 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.0640185599251012;  // std dev = 1,680, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | | | else return 0.0034405539515313635;  // std dev = 2,980, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.08910229187239929;  // std dev = 2,710, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return -0.1588744547693943;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09762851060711669;  // std dev = 0,469, 1.074,000 (wgt'ed) examples reached here.  /* #neg=719 #pos=355 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.24697595075366585;  // std dev = 1,631, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.035557018572010914;  // std dev = 0,805, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.03816201845465789;  // std dev = 2,863, 103,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=9 */
%   | | | else return 0.0038031658225851517;  // std dev = 2,725, 52,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.0928846180621358;  // std dev = 2,803, 35,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.5664190710343454;  // std dev = 0,086, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06593861977258296;  // std dev = 0,464, 1.076,000 (wgt'ed) examples reached here.  /* #neg=736 #pos=340 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.23498093719682028;  // std dev = 1,067, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.03131707390001881;  // std dev = 3,179, 123,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.017720709041915306;  // std dev = 0,921, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.0665184549421404;  // std dev = 2,568, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3398656586060256;  // std dev = 1,409, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.10446411183082567;  // std dev = 1,974, 31,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else return 0.04942880106414339;  // std dev = 0,463, 1.094,000 (wgt'ed) examples reached here.  /* #neg=752 #pos=342 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.30576025321519706;  // std dev = 1,214, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.16112069522327135;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0365789697346378;  // std dev = 3,218, 127,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=12 */
%   | | | else return 0.02152833826217257;  // std dev = 2,631, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,11e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.042047155911606224;  // std dev = 14,994, 1.052,000 (wgt'ed) examples reached here.  /* #neg=721 #pos=331 */
%   | | | else return 0.014386550782061712;  // std dev = 3,841, 135,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=21 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.22492755601572464;  // std dev = 1,011, 38,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
%   | | | else return 0.11082427169765;  // std dev = 2,435, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.6443490547752099;  // std dev = 0,341, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.05890198356852894;  // std dev = 0,896, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.0932812222140727;  // std dev = 2,492, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7,60e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03854760064579388;  // std dev = 0,462, 1.110,000 (wgt'ed) examples reached here.  /* #neg=755 #pos=355 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.16058076727394252;  // std dev = 1,632, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.002415434925599591;  // std dev = 0,821, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.05045287639717061;  // std dev = 2,870, 136,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=9 */
%   | | | else return 0.04020107039446678;  // std dev = 2,605, 39,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,16e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.034481632804345616;  // std dev = 0,464, 1.094,000 (wgt'ed) examples reached here.  /* #neg=739 #pos=355 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.030685252771078968;  // std dev = 3,261, 129,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=13 */
%   | | | else return -0.07043314060340534;  // std dev = 0,981, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.016014738313044976;  // std dev = 2,725, 45,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return -0.16002001790712167;  // std dev = 0,051, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.603085
   AUC PR    = 0.17677
   CLL	      = -0.341383
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 225.722 seconds
Total inference time: 20.396 seconds
AUC ROC: 0.603085


Results scoring model
   AUC ROC   = 0.66595
   AUC PR    = 0.213062
   CLL	      = -0.320315
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.171806
   F1        = 0.288355


Total scoring time: 39.044 seconds
Refined model CLL: -0.320315


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.603085
   AUC PR    = 0.17677
   CLL	      = -0.341383
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 272.618 seconds
Total inference time: 20.396 seconds
AUC ROC: 0.603085
Total revision time: 272.618
Best scored revision CLL: -0.320315


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 11:39:57
{'AUC PR': 0.17677, 'AUC ROC': 0.603085, 'Precision': [1.0, 0.5], 'Inference time': 20.396, 'CLL': -0.341383, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 272.618, 'parameter_0.2': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.546, 'CLL': -0.331671, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 4.027}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23206197857776834;  // std dev = 0,484, 1.150,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=430 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.274815601766179;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.09185106490048772;  // std dev = 1,688, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   | | | else return -0.04015614964625042;  // std dev = 2,322, 59,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=6 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.034619523334806494;  // std dev = 2,722, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.8274894582108098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4941561248774764;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8274894582108098;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.001402501689070574;  // std dev = 1,818, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.5774894582108098;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2274894582108097;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.18694891767027924;  // std dev = 0,480, 1.110,000 (wgt'ed) examples reached here.  /* #neg=711 #pos=399 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.2068633213821999;  // std dev = 0,481, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.016623938299069593;  // std dev = 0,325, 149,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.14304752131160273;  // std dev = 2,470, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.18036292424885095;  // std dev = 1,595, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.7518841987364213;  // std dev = 0,095, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15952176616270874;  // std dev = 0,479, 1.140,000 (wgt'ed) examples reached here.  /* #neg=729 #pos=411 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then return 0.3459164600475607;  // std dev = 0,963, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.052315253092617094;  // std dev = 0,276, 139,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=12 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.08169324066731688;  // std dev = 2,762, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return -0.1440558058716701;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14112529722008046;  // std dev = 0,078, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13467108289811702;  // std dev = 0,479, 1.181,000 (wgt'ed) examples reached here.  /* #neg=751 #pos=430 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return -0.009483360334481784;  // std dev = 0,324, 102,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=13 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.1280459798352527;  // std dev = 0,007, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07105002130350843;  // std dev = 0,974, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05939835990596862;  // std dev = 0,286, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.1045921655911144;  // std dev = 2,553, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.10913567594863356;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1223348930443687;  // std dev = 0,482, 1.142,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=430 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.12004085763834335;  // std dev = 0,022, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.031468291365276735;  // std dev = 1,654, 34,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return 0.0231035643753879;  // std dev = 2,939, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.11535814145906133;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.07357091479274594;  // std dev = 2,741, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return -0.1588064658546439;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09896873400081323;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07938301758542643;  // std dev = 0,477, 1.202,000 (wgt'ed) examples reached here.  /* #neg=772 #pos=430 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.10856369029725634;  // std dev = 0,015, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.040273274159227164;  // std dev = 1,663, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return 0.034730959299867935;  // std dev = 2,796, 46,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return -0.14831262642482917;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.04097862386652658;  // std dev = 2,910, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | | else return -0.10765505343469997;  // std dev = 0,028, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09187938685130966;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5154727269926428;  // std dev = 0,125, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3750436922487213;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.009460797292607048;  // std dev = 2,258, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.07876437146115989;  // std dev = 0,482, 1.108,000 (wgt'ed) examples reached here.  /* #neg=697 #pos=411 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.46337841242556754;  // std dev = 0,782, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordauthor(I, K), haswordtitle(L, K) )
%   | | | then return 0.1513116672866819;  // std dev = 1,554, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.17278201105662316;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.04940146469098269;  // std dev = 0,255, 126,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=9 */
%   | | else return 0.006155223899786903;  // std dev = 0,368, 53,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6379368103075633;  // std dev = 0,222, 412,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=391 */
%   | | else return -0.27338501335533516;  // std dev = 0,136, 745,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=12 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1506497643844368;  // std dev = 0,333, 77,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=10 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.44132347849493275;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return -0.03466297322917229;  // std dev = 0,975, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6425157768575954;  // std dev = 1,273, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.19061573297606765;  // std dev = 0,272, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.12614346594633102;  // std dev = 0,054, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5510478740185758;  // std dev = 0,258, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.5060945978499279;  // std dev = 0,185, 403,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=389 */
%   | | else return -0.22253003972193505;  // std dev = 0,156, 774,000 (wgt'ed) examples reached here.  /* #neg=755 #pos=19 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then return -0.21785027896110823;  // std dev = 0,153, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | else if ( haswordvenue(A, C) )
%   | | | then return 0.3437484819721872;  // std dev = 2,136, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return -0.028754763855995766;  // std dev = 1,363, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordauthor(I, H) )
%   | | then return -0.07018693353924947;  // std dev = 0,703, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5511717734196284;  // std dev = 0,148, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.18447485895245627;  // std dev = 0,387, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return -0.01500096761497568;  // std dev = 0,259, 61,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.381294574234161;  // std dev = 0,187, 403,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=389 */
%   | | else return -0.1820579075580569;  // std dev = 0,158, 749,000 (wgt'ed) examples reached here.  /* #neg=730 #pos=19 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then return -0.17647774263340787;  // std dev = 0,167, 35,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
%   | | else if ( haswordvenue(A, C) )
%   | | | then return 0.20124578338081783;  // std dev = 2,370, 26,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return -0.025081546482442874;  // std dev = 1,390, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then return 0.13184376196593234;  // std dev = 0,405, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.3886876708729366;  // std dev = 0,083, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return 0.0231663491819606;  // std dev = 0,294, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | else return -0.13895152031662378;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.979055
   AUC PR    = 0.493176
   CLL	      = -0.211288
   Precision = 0.454019 at threshold = 0.5
   Recall    = 0.945114
   F1        = 0.61338


Total learning time: 616.134 seconds
Total inference time: 82.43 seconds
AUC ROC: 0.979055


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 11:51:36
{'AUC PR': 0.493176, 'AUC ROC': 0.979055, 'Precision': [0.454019, 0.5], 'Inference time': 82.43, 'CLL': -0.211288, 'Recall': 0.945114, 'Learning time': 616.134, 'F1': 0.61338}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2275647426596449;  // std dev = 0,483, 1.164,000 (wgt'ed) examples reached here.  /* #neg=734 #pos=430 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.056744681921764274;  // std dev = 2,705, 94,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=8 */
%   | | | else return -0.1148240378734607;  // std dev = 0,986, 37,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06745126068090773;  // std dev = 2,668, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.532068
   AUC PR    = 0.011649
   CLL	      = -0.201986
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.029 seconds
Total inference time: 3.8 seconds
AUC ROC: 0.532068


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 11:51:49
{'AUC PR': 0.011649, 'AUC ROC': 0.532068, 'Precision': [nan, 0.5], 'Inference time': 3.8, 'CLL': -0.201986, 'Recall': 0.0, 'Learning time': 9.029, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,54e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.15005756847155524;  // std dev = 23,106, 2.583,000 (wgt'ed) examples reached here.  /* #neg=1.829 #pos=754 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.12866036427094393;  // std dev = 23,141, 2.602,000 (wgt'ed) examples reached here.  /* #neg=1.848 #pos=754 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.11969626609938012;  // std dev = 22,991, 2.522,000 (wgt'ed) examples reached here.  /* #neg=1.768 #pos=754 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,66e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.0858940572863538;  // std dev = 23,244, 2.660,000 (wgt'ed) examples reached here.  /* #neg=1.906 #pos=754 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,92e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.07768535915070254;  // std dev = 23,150, 2.607,000 (wgt'ed) examples reached here.  /* #neg=1.853 #pos=754 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.08309757370404854;  // std dev = 22,844, 2.449,000 (wgt'ed) examples reached here.  /* #neg=1.695 #pos=754 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,51e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.050629637450870006;  // std dev = 23,134, 2.598,000 (wgt'ed) examples reached here.  /* #neg=1.844 #pos=754 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.045477278543088855;  // std dev = 23,065, 2.561,000 (wgt'ed) examples reached here.  /* #neg=1.807 #pos=754 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.03849606977030484;  // std dev = 23,039, 2.547,000 (wgt'ed) examples reached here.  /* #neg=1.793 #pos=754 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6,99e-08, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else return 0.029218666432508488;  // std dev = 23,069, 2.563,000 (wgt'ed) examples reached here.  /* #neg=1.809 #pos=754 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.324487
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 5.647 seconds
Total inference time: 5.196 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.584802
   AUC PR    = 0.188776
   CLL	      = -0.325403
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169604
   F1        = 0.290019


Total scoring time: 5.864 seconds
Parameter learned model CLL: -0.325403


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.106, 1829, 754], 'true': [9.54e-07, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.141, 1848, 754], 'true': [0.0, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.991, 1768, 754], 'true': [5.4e-07, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.244, 1906, 754], 'true': [4.66e-07, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.15, 1853, 754], 'true': [2.92e-07, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.844, 1695, 754], 'true': [0.0, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.134, 1844, 754], 'true': [2.51e-07, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.065, 1807, 754], 'true': [0.0, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.039, 1793, 754], 'true': [0.0, 0, 154]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.069, 1809, 754], 'true': [6.99e-08, 0, 154]}]]
[{'': [5.905809751772262e-15, 0.2066979831349363]}, {'': [-2.5837917664003644e-15, 0.20580633002110107]}, {'': [1.8917046861145523e-15, 0.20958656605377246]}, {'': [1.4072437299144842e-15, 0.203109842274867]}, {'': [5.536696642286495e-16, 0.20557235109098562]}, {'': [-1.9609133941431335e-16, 0.21309020056519823]}, {'': [4.09484855835772e-16, 0.20599371459419888]}, {'': [-3.0567179379290025e-16, 0.2077353191270115]}, {'': [-3.7488050182148143e-17, 0.20839809539046167]}, {'': [3.172065784643304e-17, 0.20764080329806534]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,54e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.47719655414713136;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.04963829680164004;  // std dev = 2,698, 47,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.25208832903890505;  // std dev = 3,970, 66,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | | | else return 0.1789497163495073;  // std dev = 21,124, 2.048,000 (wgt'ed) examples reached here.  /* #neg=1.391 #pos=657 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 2.809147949432622E-4;  // std dev = 4,901, 197,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=28 */
%   | | | else return -0.11108183413125693;  // std dev = 1,392, 65,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.06245001036832955;  // std dev = 3,888, 93,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14948058791138955;  // std dev = 0,464, 2.239,000 (wgt'ed) examples reached here.  /* #neg=1.534 #pos=705 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3542451686310424;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12223645545128005;  // std dev = 1,917, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04680710457671726;  // std dev = 4,660, 259,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=24 */
%   | | | else return 0.031584589190545555;  // std dev = 3,837, 100,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.433761560770982;  // std dev = 2,231, 23,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return -0.037563961249726045;  // std dev = 2,492, 49,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
%   | | else return 0.14192726608975115;  // std dev = 0,470, 2.076,000 (wgt'ed) examples reached here.  /* #neg=1.393 #pos=683 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.006703480500577275;  // std dev = 4,917, 210,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=28 */
%   | | | else return -0.08867850331054959;  // std dev = 1,390, 56,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04059673773442701;  // std dev = 3,905, 97,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=19 */
%   | | | else return -0.12895091794774816;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,66e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11567647698492314;  // std dev = 0,467, 2.168,000 (wgt'ed) examples reached here.  /* #neg=1.463 #pos=705 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.006028860307379137;  // std dev = 4,877, 195,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=28 */
%   | | | else return -0.08343521102556725;  // std dev = 1,392, 64,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.028229350799740476;  // std dev = 3,920, 101,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=19 */
%   | | | else return -0.11514644602560827;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,92e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09892249295421181;  // std dev = 0,469, 2.146,000 (wgt'ed) examples reached here.  /* #neg=1.441 #pos=705 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.012361144689606637;  // std dev = 4,932, 220,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=28 */
%   | | | else return -0.07570933288023872;  // std dev = 1,393, 65,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.040783768034494836;  // std dev = 3,879, 93,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | | else return -0.10586859466561199;  // std dev = 0,011, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5011221422503249;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.020817493806216055;  // std dev = 2,806, 39,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else return 0.0783344108809911;  // std dev = 0,467, 2.084,000 (wgt'ed) examples reached here.  /* #neg=1.406 #pos=678 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.14497343627689277;  // std dev = 1,188, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.020753215060112157;  // std dev = 4,958, 260,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=28 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.00648550798178096;  // std dev = 3,949, 108,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=19 */
%   | | | else return -0.09676909301719834;  // std dev = 0,010, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,51e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.271994476021862;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | | else return -0.03461323425108981;  // std dev = 2,903, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else return 0.06146244549083384;  // std dev = 0,466, 2.098,000 (wgt'ed) examples reached here.  /* #neg=1.420 #pos=678 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.3059120844866381;  // std dev = 0,983, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04022043365816337;  // std dev = 1,999, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.029651717070149797;  // std dev = 4,640, 250,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=24 */
%   | | | else return 0.005794283608919937;  // std dev = 3,844, 107,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.044353270993022796;  // std dev = 0,463, 2.211,000 (wgt'ed) examples reached here.  /* #neg=1.506 #pos=705 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.011530832361513539;  // std dev = 4,137, 129,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=21 */
%   | | | else return -0.07053941115566556;  // std dev = 2,372, 95,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.00730186570127643;  // std dev = 4,295, 162,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=22 */
%   | | | else return -0.08906158807095216;  // std dev = 0,013, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.022647278139906156;  // std dev = 3,678, 67,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return 0.7273364664928771;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.023842060676753082;  // std dev = 3,493, 69,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | | else return 0.037120168731036324;  // std dev = 21,139, 2.054,000 (wgt'ed) examples reached here.  /* #neg=1.397 #pos=657 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.044019275330295815;  // std dev = 3,942, 101,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=20 */
%   | | | else return -0.05939560477281456;  // std dev = 2,562, 103,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=7 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.2079135910709603;  // std dev = 1,910, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.00308309785018277;  // std dev = 3,726, 131,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6,99e-08, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.030090937297548772;  // std dev = 0,464, 2.192,000 (wgt'ed) examples reached here.  /* #neg=1.487 #pos=705 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.1645568876244671;  // std dev = 1,134, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.01974196031269638;  // std dev = 4,947, 268,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=28 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.018867627761282476;  // std dev = 3,883, 97,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=19 */
%   | | | else return -0.07992607098722458;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.60647
   AUC PR    = 0.173412
   CLL	      = -0.342103
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 136.822 seconds
Total inference time: 14.722 seconds
AUC ROC: 0.60647


Results scoring model
   AUC ROC   = 0.652377
   AUC PR    = 0.203541
   CLL	      = -0.323257
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169604
   F1        = 0.290019


Total scoring time: 38.289 seconds
Refined model CLL: -0.323257


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.60647
   AUC PR    = 0.173412
   CLL	      = -0.342103
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 186.622 seconds
Total inference time: 14.722 seconds
AUC ROC: 0.60647
Total revision time: 186.622
Best scored revision CLL: -0.323257


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 11:55:17
{'AUC PR': 0.173412, 'AUC ROC': 0.60647, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.196, 'CLL': -0.324487, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 5.647}, 'Inference time': 14.722, 'CLL': -0.342103, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 186.622}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23065543986967205;  // std dev = 0,483, 2.306,000 (wgt'ed) examples reached here.  /* #neg=1.447 #pos=859 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.791482268432845;  // std dev = 1,366, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return -0.14185106490048827;  // std dev = 0,000, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.07288554765910848;  // std dev = 1,365, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.026373234164932945;  // std dev = 3,869, 107,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=18 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8276901500552486;  // std dev = 4,21e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.17230984994475154;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return 0.0776901500552486;  // std dev = 2,739, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.8276901500552485;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.5276901500552487;  // std dev = 2,049, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return -0.023373679731985557;  // std dev = 2,441, 47,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
%   | | else return 0.18993734106647958;  // std dev = 0,481, 2.225,000 (wgt'ed) examples reached here.  /* #neg=1.419 #pos=806 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.12117262477072106;  // std dev = 0,403, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else return -0.015383943091067987;  // std dev = 0,309, 331,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=42 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6773575241834139;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14910291560560243;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.7468419924097048;  // std dev = 0,139, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.010065287094453843;  // std dev = 2,792, 56,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | else return 0.170839859913143;  // std dev = 0,483, 2.225,000 (wgt'ed) examples reached here.  /* #neg=1.398 #pos=827 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.026466311748133634;  // std dev = 0,278, 258,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=30 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.07757853691255857;  // std dev = 3,738, 81,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | | | else return -0.06627097936399483;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return -0.12376659478859961;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13204107383880076;  // std dev = 0,477, 2.367,000 (wgt'ed) examples reached here.  /* #neg=1.508 #pos=859 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.2514734611935726;  // std dev = 0,444, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.1471208314151983;  // std dev = 0,694, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13620848451276177;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.019792794867022505;  // std dev = 3,815, 182,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=22 */
%   | | | else return -0.08622574721932663;  // std dev = 1,382, 52,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.024876646714728636;  // std dev = 3,845, 103,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=18 */
%   | | | else return -0.11095712445589827;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11717656874965988;  // std dev = 0,479, 2.310,000 (wgt'ed) examples reached here.  /* #neg=1.451 #pos=859 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.1199834234315236;  // std dev = 0,138, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.019931330007583483;  // std dev = 2,400, 73,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=8 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return 0.018989449435988747;  // std dev = 3,630, 130,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=22 */
%   | | | else return -0.11264160400093833;  // std dev = 0,010, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.07051840393293662;  // std dev = 3,713, 79,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
%   | | | else return -0.062373082876211676;  // std dev = 0,966, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return -0.11145703039053871;  // std dev = 0,069, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.40126952236027474;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.16225566651055903;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.048354278244441315;  // std dev = 1,818, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.18446309656807441;  // std dev = 2,067, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else return 0.09246269524089033;  // std dev = 0,482, 2.240,000 (wgt'ed) examples reached here.  /* #neg=1.413 #pos=827 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.02736208758831312;  // std dev = 0,263, 284,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=30 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.048631645644199355;  // std dev = 3,746, 83,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | | | else return -0.07061196892255042;  // std dev = 0,973, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else return -0.09084046426392968;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06963342400117034;  // std dev = 0,477, 2.347,000 (wgt'ed) examples reached here.  /* #neg=1.488 #pos=859 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.6650118897365775;  // std dev = 1,800, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.16129741665477573;  // std dev = 0,332, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.10180788272213434;  // std dev = 1,015, 45,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
%   | | | else return -0.002545787632343288;  // std dev = 1,983, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.2929883461465158;  // std dev = 0,824, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10651231835143844;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.008208245436371513;  // std dev = 3,543, 150,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=20 */
%   | | | else return -0.0836117382188713;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.05233275785089282;  // std dev = 2,845, 43,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return -0.11916400436295704;  // std dev = 1,945, 34,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | else return 0.5900963056194736;  // std dev = 0,392, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.05680866677289394;  // std dev = 0,479, 2.260,000 (wgt'ed) examples reached here.  /* #neg=1.428 #pos=832 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return -0.01208079944894189;  // std dev = 0,279, 226,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=28 */
%   | | else return -0.06939964609705558;  // std dev = 0,166, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.02031001273546344;  // std dev = 3,258, 89,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
%   | | | else return 0.045862618689679634;  // std dev = 0,922, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.08213477875690335;  // std dev = 0,042, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6192704663375729;  // std dev = 0,224, 821,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=779 */
%   | | else return -0.2746856972371325;  // std dev = 0,152, 1.495,000 (wgt'ed) examples reached here.  /* #neg=1.465 #pos=30 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.14842267670730047;  // std dev = 0,337, 148,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=20 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4270931426358937;  // std dev = 3,000, 48,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=36 */
%   | | | else return -0.04940826446214286;  // std dev = 1,260, 37,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=2 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.6556282075420315;  // std dev = 0,848, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.13889753669273516;  // std dev = 0,835, 59,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=1 */
%   | | else return -0.004823579898672867;  // std dev = 0,323, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else return 0.3759346081079803;  // std dev = 0,350, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.49813529501564136;  // std dev = 0,166, 800,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=779 */
%   | | else return -0.22459323611471213;  // std dev = 0,147, 1.525,000 (wgt'ed) examples reached here.  /* #neg=1.495 #pos=30 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.142363641733317;  // std dev = 3,910, 124,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=18 */
%   | | | else return -0.022860249857887125;  // std dev = 1,075, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2443698496605494;  // std dev = 3,464, 54,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=36 */
%   | | | else return -0.044660287643816354;  // std dev = 1,261, 37,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=2 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5463500881582483;  // std dev = 0,103, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.058238122542518096;  // std dev = 0,253, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else return 0.024301278795618195;  // std dev = 0,297, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */


Results
   AUC ROC   = 0.979675
   AUC PR    = 0.495758
   CLL	      = -0.250917
   Precision = 0.428922 at threshold = 0.5
   Recall    = 0.937082
   F1        = 0.588483


Total learning time: 907.848 seconds
Total inference time: 62.596000000000004 seconds
AUC ROC: 0.979675


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 12:11:28
{'AUC PR': 0.495758, 'AUC ROC': 0.979675, 'Precision': [0.428922, 0.5], 'Inference time': 62.596000000000004, 'CLL': -0.250917, 'Recall': 0.937082, 'Learning time': 907.848, 'F1': 0.588483}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return 0.05422736647206138;  // std dev = 2,835, 51,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.6359267128772901;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return -0.004596162939703367;  // std dev = 2,457, 51,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=7 */
%   | | else return 0.2133715001061181;  // std dev = 0,479, 2.269,000 (wgt'ed) examples reached here.  /* #neg=1.463 #pos=806 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then if ( author(N, M), venue(N, A) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordauthor(M, P), haswordtitle(Q, P) )
%   | | | then return 0.13592671287729013;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, R), haswordtitle(S, R) )
%   | | then if ( title(T, S), venue(T, B) )
%   | | | then return -0.03239832858207988;  // std dev = 4,426, 201,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=22 */
%   | | | else return -0.10548742853685135;  // std dev = 1,388, 55,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=2 */
%   | | else if ( haswordvenue(B, U), haswordtitle(W, U) )
%   | | | then return 0.04371594540879073;  // std dev = 3,829, 97,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.543171
   AUC PR    = 0.023634
   CLL	      = -0.199957
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 28.414 seconds
Total inference time: 7.176 seconds
AUC ROC: 0.543171


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 12:12:04
{'AUC PR': 0.023634, 'AUC ROC': 0.543171, 'Precision': [nan, 0.5], 'Inference time': 7.176, 'CLL': -0.199957, 'Recall': 0.0, 'Learning time': 28.414, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1,08e-06, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.14825826639876982;  // std dev = 28,460, 3.933,000 (wgt'ed) examples reached here.  /* #neg=2.792 #pos=1.141 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109572;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.14113795814327024;  // std dev = 28,221, 3.778,000 (wgt'ed) examples reached here.  /* #neg=2.637 #pos=1.141 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,96e-07, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.12228563190695586;  // std dev = 28,198, 3.764,000 (wgt'ed) examples reached here.  /* #neg=2.623 #pos=1.141 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 1,19e-07, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.09356442073503546;  // std dev = 28,397, 3.891,000 (wgt'ed) examples reached here.  /* #neg=2.750 #pos=1.141 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014944;  // std dev = 3,53e-07, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.08568872657651916;  // std dev = 28,246, 3.794,000 (wgt'ed) examples reached here.  /* #neg=2.653 #pos=1.141 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948823;  // std dev = 2,73e-07, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.05804666616731133;  // std dev = 28,504, 3.963,000 (wgt'ed) examples reached here.  /* #neg=2.822 #pos=1.141 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3,01e-07, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.05598354872288439;  // std dev = 28,336, 3.851,000 (wgt'ed) examples reached here.  /* #neg=2.710 #pos=1.141 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527764;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.043628333900383676;  // std dev = 28,376, 3.877,000 (wgt'ed) examples reached here.  /* #neg=2.736 #pos=1.141 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.029686422297266982;  // std dev = 28,490, 3.953,000 (wgt'ed) examples reached here.  /* #neg=2.812 #pos=1.141 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1,43e-07, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.026008141020510394;  // std dev = 28,448, 3.925,000 (wgt'ed) examples reached here.  /* #neg=2.784 #pos=1.141 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.323282
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 9.709 seconds
Total inference time: 5.099 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.581131
   AUC PR    = 0.181257
   CLL	      = -0.32431
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162261
   F1        = 0.279217


Total scoring time: 6.932 seconds
Parameter learned model CLL: -0.32431


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.46, 2792, 1141], 'true': [1.08e-06, 0, 221]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.221, 2637, 1141], 'true': [0.0, 0, 221]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.198, 2623, 1141], 'true': [5.96e-07, 0, 221]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.397, 2750, 1141], 'true': [1.19e-07, 0, 221]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.246, 2653, 1141], 'true': [3.53e-07, 0, 221]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.504, 2822, 1141], 'true': [2.73e-07, 0, 221]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.336, 2710, 1141], 'true': [3.01e-07, 0, 221]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.376, 2736, 1141], 'true': [0.0, 0, 221]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.49, 2812, 1141], 'true': [0.0, 0, 221]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.448, 2784, 1141], 'true': [1.43e-07, 0, 221]}]]
[{'': [5.2728058219301554e-15, 0.20594590719238337]}, {'': [-4.051058131482924e-15, 0.21080061182835408]}, {'': [1.607562750588462e-15, 0.21124415713042985]}, {'': [6.430251002353848e-17, 0.20725063823155465]}, {'': [5.626469627059617e-16, 0.2102946582971707]}, {'': [3.37588177623577e-16, 0.20501918802414146]}, {'': [4.099285014000578e-16, 0.2085008827594065]}, {'': [-4.018906876471155e-18, 0.20768739327565577]}, {'': [-1.4869955442943272e-16, 0.20532760057158947]}, {'': [9.243485815883657e-17, 0.20619377662377777]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1,08e-06, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.6010060779566544;  // std dev = 2,586, 35,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=26 */
%   | | | else return 0.0733388085172339;  // std dev = 3,653, 79,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | | else return 0.18343483090636872;  // std dev = 0,468, 3.148,000 (wgt'ed) examples reached here.  /* #neg=2.124 #pos=1.024 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05259337954395681;  // std dev = 2,375, 36,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.028094451143874294;  // std dev = 6,173, 378,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=43 */
%   | | | else return 0.019687396637973704;  // std dev = 4,196, 130,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=21 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109572;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1583661253582945;  // std dev = 0,468, 3.288,000 (wgt'ed) examples reached here.  /* #neg=2.221 #pos=1.067 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.039840534600390255;  // std dev = 5,832, 383,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=38 */
%   | | | else return 0.0015345652139785637;  // std dev = 2,454, 50,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05404529435103992;  // std dev = 4,809, 145,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=29 */
%   | | | else return -0.14523161100844198;  // std dev = 0,007, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,96e-07, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.553203983624587;  // std dev = 2,274, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return -0.01021366020896479;  // std dev = 3,724, 95,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=17 */
%   | | else return 0.1335538318264307;  // std dev = 0,467, 3.191,000 (wgt'ed) examples reached here.  /* #neg=2.161 #pos=1.030 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.02585887856826195;  // std dev = 5,804, 349,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=38 */
%   | | | else return 0.01352531415731228;  // std dev = 2,436, 46,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06483571367864674;  // std dev = 4,756, 133,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=29 */
%   | | | else return -0.1272445889561302;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 1,19e-07, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11438661840648115;  // std dev = 0,467, 3.284,000 (wgt'ed) examples reached here.  /* #neg=2.217 #pos=1.067 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13480052035202136;  // std dev = 2,491, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.05566156705683863;  // std dev = 0,880, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.001120980771996726;  // std dev = 5,756, 266,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=39 */
%   | | | else return -0.021425196444589036;  // std dev = 4,717, 230,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=25 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014944;  // std dev = 3,53e-07, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3399068110575597;  // std dev = 3,014, 40,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | | | else return 0.0817871960857374;  // std dev = 3,454, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | else return 0.09012536293970688;  // std dev = 0,466, 3.201,000 (wgt'ed) examples reached here.  /* #neg=2.177 #pos=1.024 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.17581384786019033;  // std dev = 2,003, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.029077761866626285;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.020707626107003937;  // std dev = 5,880, 350,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=39 */
%   | | | else return 0.012730178849519451;  // std dev = 4,783, 159,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948823;  // std dev = 2,73e-07, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07427700400184639;  // std dev = 0,465, 3.321,000 (wgt'ed) examples reached here.  /* #neg=2.254 #pos=1.067 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.01667114313451489;  // std dev = 5,621, 317,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=36 */
%   | | | else return -0.048001260065666275;  // std dev = 2,863, 106,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.050429317465429786;  // std dev = 4,750, 133,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=29 */
%   | | | else return -0.11578229381658059;  // std dev = 0,024, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3,01e-07, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.01903647869484537;  // std dev = 4,930, 118,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
%   | | | else return 0.7074778091534915;  // std dev = 0,115, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06030590066915908;  // std dev = 0,466, 3.197,000 (wgt'ed) examples reached here.  /* #neg=2.173 #pos=1.024 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.24501494973166632;  // std dev = 1,848, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.06256804718802089;  // std dev = 0,980, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.025482027259236224;  // std dev = 5,910, 386,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=39 */
%   | | | else return 0.02574184772395246;  // std dev = 4,712, 143,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527764;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05029990012182835;  // std dev = 0,465, 3.302,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=1.067 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5155187558991559;  // std dev = 0,830, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.005829493483496018;  // std dev = 2,371, 39,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.016020892575690796;  // std dev = 6,173, 391,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=43 */
%   | | | else return -0.0010735806296920762;  // std dev = 4,159, 124,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04367484550035934;  // std dev = 0,467, 3.266,000 (wgt'ed) examples reached here.  /* #neg=2.199 #pos=1.067 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.15853478631775725;  // std dev = 1,203, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03145731249034727;  // std dev = 2,308, 33,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.030778169160370527;  // std dev = 2,167, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return -0.014397042485337757;  // std dev = 7,119, 488,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=58 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1,43e-07, 221,000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.410637832850696;  // std dev = 1,991, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.06351933522403713;  // std dev = 3,648, 83,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else return 0.033643399988294964;  // std dev = 0,467, 3.165,000 (wgt'ed) examples reached here.  /* #neg=2.135 #pos=1.030 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.00664916855725023;  // std dev = 5,555, 301,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=36 */
%   | | | else return -0.04133648139495507;  // std dev = 2,873, 112,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023310155443121126;  // std dev = 4,778, 143,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=29 */
%   | | | else return -0.11106642223054589;  // std dev = 0,053, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.605525
   AUC PR    = 0.172269
   CLL	      = -0.344575
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 161.083 seconds
Total inference time: 12.224 seconds
AUC ROC: 0.605525


Results scoring model
   AUC ROC   = 0.650901
   AUC PR    = 0.199457
   CLL	      = -0.325188
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16373
   F1        = 0.281388


Total scoring time: 35.569 seconds
Refined model CLL: -0.325188


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.323282
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 213.293 seconds
Total inference time: 5.099 seconds
AUC ROC: 0.576975
Total revision time: 213.293
Best scored revision CLL: -0.32431


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 12:15:56
{'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.099, 'parameter_0.6': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.099, 'CLL': -0.323282, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 9.709}, 'CLL': -0.323282, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 213.293}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2185294611207719;  // std dev = 0,480, 3.574,000 (wgt'ed) examples reached here.  /* #neg=2.286 #pos=1.288 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then return -0.04105530893231846;  // std dev = 0,301, 377,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=38 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.02481560176617901;  // std dev = 2,415, 42,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07027014722072364;  // std dev = 4,697, 132,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=28 */
%   | | | else return -0.050941973991396876;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19356309128335122;  // std dev = 0,481, 3.537,000 (wgt'ed) examples reached here.  /* #neg=2.249 #pos=1.288 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6062256656769063;  // std dev = 0,874, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14719823606062868;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return 0.06472033555891703;  // std dev = 2,339, 33,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return -0.15062213779816352;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return -0.03244609782984766;  // std dev = 4,006, 169,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=18 */
%   | | | else return -0.009848126396456387;  // std dev = 4,671, 197,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=25 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03758561817605266;  // std dev = 4,127, 113,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=21 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.800257968942357;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3431151117995003;  // std dev = 2,947, 35,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.011525574576159946;  // std dev = 3,440, 71,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | else return 0.1640273572946912;  // std dev = 0,481, 3.417,000 (wgt'ed) examples reached here.  /* #neg=2.174 #pos=1.243 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, H) )
%   | | | then return 0.12140837694377746;  // std dev = 1,093, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1269877518217589;  // std dev = 2,226, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else return 0.05200623611620429;  // std dev = 0,786, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.024433116341734916;  // std dev = 0,314, 388,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=43 */
%   | | else return 0.005755682850445683;  // std dev = 0,362, 134,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=21 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7292187085449119;  // std dev = 0,171, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.21331784606158938;  // std dev = 0,052, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.01781398297259776;  // std dev = 3,528, 82,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.7465480714953779;  // std dev = 0,180, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.14379042846196735;  // std dev = 0,483, 3.350,000 (wgt'ed) examples reached here.  /* #neg=2.107 #pos=1.243 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.020392646918102632;  // std dev = 0,316, 396,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=45 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.06767703289284768;  // std dev = 4,622, 123,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=28 */
%   | | | else return -0.10152231074375337;  // std dev = 0,989, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else return -0.11703210264785834;  // std dev = 0,033, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.5028357432300864;  // std dev = 0,215, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return -0.04936624115019324;  // std dev = 3,603, 101,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=17 */
%   | | | else return 0.3544285132972708;  // std dev = 1,168, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.11145516672260095;  // std dev = 0,481, 3.406,000 (wgt'ed) examples reached here.  /* #neg=2.163 #pos=1.243 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return -0.009794703258760128;  // std dev = 0,325, 297,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=36 */
%   | | else return -0.04982160843449989;  // std dev = 0,275, 109,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=9 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.05798021347205049;  // std dev = 4,619, 124,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=28 */
%   | | | else return -0.06305653169089617;  // std dev = 0,973, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return -0.1049090542503847;  // std dev = 0,031, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0918911890679329;  // std dev = 0,479, 3.506,000 (wgt'ed) examples reached here.  /* #neg=2.218 #pos=1.288 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.053211735276324404;  // std dev = 1,131, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.024929602691010806;  // std dev = 5,680, 349,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=36 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.05435964446665307;  // std dev = 2,390, 38,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return -0.11442206161147933;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04703641498130672;  // std dev = 4,629, 125,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=28 */
%   | | | else return -0.0412689935628598;  // std dev = 0,969, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return -0.10148577262005179;  // std dev = 0,035, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06491602438526896;  // std dev = 0,477, 3.582,000 (wgt'ed) examples reached here.  /* #neg=2.294 #pos=1.288 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return -0.021691808562105157;  // std dev = 5,798, 362,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=38 */
%   | | | else return -0.1207044742354055;  // std dev = 0,006, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.023718590771668803;  // std dev = 0,365, 44,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.16037679358802803;  // std dev = 2,093, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.04361504655444004;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0013583109079084127;  // std dev = 4,148, 120,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=21 */
%   | | | else return -0.08432624834567583;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6525167171540388;  // std dev = 0,611, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.3024402129719972;  // std dev = 0,089, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.2485920707365827;  // std dev = 1,135, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.0727334339448848;  // std dev = 3,456, 53,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | else return 0.04498313119726571;  // std dev = 0,475, 3.511,000 (wgt'ed) examples reached here.  /* #neg=2.274 #pos=1.237 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.015812913976288073;  // std dev = 0,309, 414,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=45 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.02878548751392425;  // std dev = 4,637, 129,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=28 */
%   | | | else return -0.0959817321061472;  // std dev = 1,006, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else return -0.08526528413617272;  // std dev = 0,047, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.4459415851861388;  // std dev = 0,181, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.22848700056417265;  // std dev = 1,604, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return -0.05270349828407254;  // std dev = 3,298, 77,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | else return 0.04870084870660676;  // std dev = 0,480, 3.393,000 (wgt'ed) examples reached here.  /* #neg=2.150 #pos=1.243 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return -0.0031716523671841282;  // std dev = 0,324, 299,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=36 */
%   | | else return -0.034150759243535465;  // std dev = 0,288, 97,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=9 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.01347692747579482;  // std dev = 4,667, 136,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=28 */
%   | | | else return -0.06076326700300234;  // std dev = 0,988, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else return -0.09789031328215853;  // std dev = 0,078, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6274091465881295;  // std dev = 6,540, 1.160,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1.119 */
%   | | | else return -0.3028533428465887;  // std dev = 6,387, 2.046,000 (wgt'ed) examples reached here.  /* #neg=2.005 #pos=41 */
%   | | else return 0.026106945542652714;  // std dev = 0,346, 322,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=53 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.17234651497240927;  // std dev = 0,316, 199,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=23 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.37886469516873067;  // std dev = 3,943, 75,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   | | | else return 0.009414253533284072;  // std dev = 2,871, 74,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=10 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.533808167505088;  // std dev = 0,315, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return 0.08064347596893941;  // std dev = 0,438, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.006578969053603708;  // std dev = 0,380, 117,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=21 */


Results
   AUC ROC   = 0.947694
   AUC PR    = 0.458545
   CLL	      = -0.301431
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.021419
   F1        = 0.04194


Total learning time: 1594.555 seconds
Total inference time: 43.141 seconds
AUC ROC: 0.947694


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 12:43:14
{'AUC PR': 0.458545, 'AUC ROC': 0.947694, 'Precision': [1.0, 0.5], 'Inference time': 43.141, 'CLL': -0.301431, 'Recall': 0.021419, 'Learning time': 1594.555, 'F1': 0.04194}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2263593410457622;  // std dev = 0,482, 3.498,000 (wgt'ed) examples reached here.  /* #neg=2.210 #pos=1.288 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then return -0.03830883056806317;  // std dev = 0,305, 367,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=38 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.010322848142990589;  // std dev = 2,436, 46,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07689893509951148;  // std dev = 4,677, 128,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
%   | | | else return -0.08302753548872309;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.532516
   AUC PR    = 0.011661
   CLL	      = -0.202101
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 222.424 seconds
Total inference time: 3.581 seconds
AUC ROC: 0.532516


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 12:47:00
{'AUC PR': 0.011661, 'AUC ROC': 0.532516, 'Precision': [nan, 0.5], 'Inference time': 3.581, 'CLL': -0.202101, 'Recall': 0.0, 'Learning time': 222.424, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,07e-06, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.1533648044110591;  // std dev = 32,709, 5.142,000 (wgt'ed) examples reached here.  /* #neg=3.624 #pos=1.518 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109577;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.13808045885927972;  // std dev = 32,606, 5.066,000 (wgt'ed) examples reached here.  /* #neg=3.548 #pos=1.518 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.11257757028744723;  // std dev = 32,743, 5.168,000 (wgt'ed) examples reached here.  /* #neg=3.650 #pos=1.518 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583114;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.09895854263310845;  // std dev = 32,658, 5.104,000 (wgt'ed) examples reached here.  /* #neg=3.586 #pos=1.518 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601508;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.08286317497111409;  // std dev = 32,655, 5.102,000 (wgt'ed) examples reached here.  /* #neg=3.584 #pos=1.518 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3,58e-07, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.07032360267856362;  // std dev = 32,614, 5.072,000 (wgt'ed) examples reached here.  /* #neg=3.554 #pos=1.518 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253476;  // std dev = 2,83e-07, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.05434660129823104;  // std dev = 32,691, 5.129,000 (wgt'ed) examples reached here.  /* #neg=3.611 #pos=1.518 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527692;  // std dev = 1,74e-07, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.04264196187485459;  // std dev = 32,729, 5.157,000 (wgt'ed) examples reached here.  /* #neg=3.639 #pos=1.518 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.03492554384799079;  // std dev = 32,719, 5.150,000 (wgt'ed) examples reached here.  /* #neg=3.632 #pos=1.518 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080116;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else return 0.027581332634417775;  // std dev = 32,733, 5.160,000 (wgt'ed) examples reached here.  /* #neg=3.642 #pos=1.518 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.326254
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 14.557 seconds
Total inference time: 4.987 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.582048
   AUC PR    = 0.183119
   CLL	      = -0.327241
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164097
   F1        = 0.28193


Total scoring time: 9.262 seconds
Parameter learned model CLL: -0.327241


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.709, 3624, 1518], 'true': [1.07e-06, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.606, 3548, 1518], 'true': [0.0, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.743, 3650, 1518], 'true': [0.0, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.658, 3586, 1518], 'true': [0.0, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.655, 3584, 1518], 'true': [0.0, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.614, 3554, 1518], 'true': [3.58e-07, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.691, 3611, 1518], 'true': [2.83e-07, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.729, 3639, 1518], 'true': [1.74e-07, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.719, 3632, 1518], 'true': [0.0, 0, 298]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.733, 3642, 1518], 'true': [0.0, 0, 298]}]]
[{'': [3.814994554416645e-15, 0.20806345981812022]}, {'': [-4.768743193020807e-15, 0.20985774979121966]}, {'': [-4.7687431930208065e-17, 0.20745295531443383]}, {'': [-7.62998910883329e-16, 0.20895882877528452]}, {'': [-2.742027335986964e-16, 0.20900605307549833]}, {'': [4.291868873718726e-16, 0.20971558454155956]}, {'': [2.682418046074204e-16, 0.20836936194175332]}, {'': [1.0133579285169214e-16, 0.20771103239606034]}, {'': [-2.0863251469466028e-16, 0.2078754265246182]}, {'': [-1.430622957906242e-16, 0.20764061654949464]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,07e-06, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.462315601766178;  // std dev = 3,388, 48,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=29 */
%   | | | else return 0.062032430245143176;  // std dev = 4,089, 103,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=21 */
%   | | else return 0.18258914472313748;  // std dev = 0,468, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.836 #pos=1.362 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.011730582972776828;  // std dev = 6,854, 415,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=54 */
%   | | | else return -0.04535983683031223;  // std dev = 3,153, 114,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06627076251067895;  // std dev = 5,698, 197,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=41 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109577;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5348375200046578;  // std dev = 2,900, 40,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | | | else return 0.007662349672434502;  // std dev = 4,455, 138,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.17831508971284324;  // std dev = 5,346, 133,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=46 */
%   | | | else return 0.15697088248323413;  // std dev = 29,836, 4.074,000 (wgt'ed) examples reached here.  /* #neg=2.760 #pos=1.314 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.0121630659244352;  // std dev = 6,861, 421,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=54 */
%   | | | else return -0.060556557433074455;  // std dev = 3,188, 145,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.05907248276602016;  // std dev = 5,694, 196,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=41 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.49295520734609477;  // std dev = 1,117, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.12309147155352058;  // std dev = 5,531, 155,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
%   | | | else return 0.13497127655339144;  // std dev = 30,304, 4.203,000 (wgt'ed) examples reached here.  /* #neg=2.843 #pos=1.360 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.02064023391624339;  // std dev = 6,962, 469,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=55 */
%   | | | else return 0.019671217800691053;  // std dev = 2,914, 67,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0471957003199978;  // std dev = 5,709, 200,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=41 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583114;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11282855377568667;  // std dev = 0,467, 4.372,000 (wgt'ed) examples reached here.  /* #neg=2.960 #pos=1.412 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.34965278583053383;  // std dev = 1,415, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.027574556618875878;  // std dev = 2,687, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06442788478431345;  // std dev = 2,962, 54,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return -0.019034552222685908;  // std dev = 8,448, 673,000 (wgt'ed) examples reached here.  /* #neg=591 #pos=82 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601508;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0863726414283527;  // std dev = 0,464, 4.472,000 (wgt'ed) examples reached here.  /* #neg=3.060 #pos=1.412 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.010844949425359525;  // std dev = 6,922, 443,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=55 */
%   | | | else return 0.05513719482317639;  // std dev = 2,853, 54,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.07852938293184956;  // std dev = 5,559, 169,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=41 */
%   | | | else return -0.10101454967824419;  // std dev = 0,010, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3,58e-07, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06881118212946051;  // std dev = 0,463, 4.498,000 (wgt'ed) examples reached here.  /* #neg=3.086 #pos=1.412 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11494193378881795;  // std dev = 2,706, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.001969078230551804;  // std dev = 1,322, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.025546902105832926;  // std dev = 6,931, 505,000 (wgt'ed) examples reached here.  /* #neg=451 #pos=54 */
%   | | | else return 0.013649911105060135;  // std dev = 5,676, 217,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=40 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253476;  // std dev = 2,83e-07, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06611744378362126;  // std dev = 0,467, 4.358,000 (wgt'ed) examples reached here.  /* #neg=2.946 #pos=1.412 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.019507766934234953;  // std dev = 6,953, 491,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=55 */
%   | | | else return 0.04140087433004102;  // std dev = 2,872, 57,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.03607299297236862;  // std dev = 5,665, 192,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=41 */
%   | | | else return -0.09438260465801696;  // std dev = 0,007, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527692;  // std dev = 1,74e-07, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05357210347937176;  // std dev = 0,467, 4.354,000 (wgt'ed) examples reached here.  /* #neg=2.942 #pos=1.412 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.009845343967099853;  // std dev = 6,780, 385,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=54 */
%   | | | else return -0.044955959584403925;  // std dev = 3,155, 133,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03631064949464831;  // std dev = 5,645, 187,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=41 */
%   | | | else return -0.08742510585878728;  // std dev = 0,015, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.43748101435507447;  // std dev = 2,362, 35,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | | else return -0.06604844404725106;  // std dev = 4,381, 129,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=24 */
%   | | else return 0.041177687568489434;  // std dev = 0,467, 4.211,000 (wgt'ed) examples reached here.  /* #neg=2.851 #pos=1.360 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.18140778031091628;  // std dev = 1,094, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.051053496869757235;  // std dev = 2,845, 46,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.03683537804873759;  // std dev = 2,981, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | | else return -0.00964370553970582;  // std dev = 8,379, 629,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=82 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080116;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #pos=298 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03278879143369189;  // std dev = 0,466, 4.372,000 (wgt'ed) examples reached here.  /* #neg=2.960 #pos=1.412 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.018654402276572616;  // std dev = 6,947, 496,000 (wgt'ed) examples reached here.  /* #neg=441 #pos=55 */
%   | | | else return 0.0462451892786563;  // std dev = 2,864, 56,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.01696479387504659;  // std dev = 5,684, 200,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=41 */
%   | | | else return -0.08211566843788123;  // std dev = 0,025, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.606114
   AUC PR    = 0.172356
   CLL	      = -0.343052
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 232.684 seconds
Total inference time: 12.201 seconds
AUC ROC: 0.606114


Results scoring model
   AUC ROC   = 0.646986
   AUC PR    = 0.19951
   CLL	      = -0.324285
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164648
   F1        = 0.282742


Total scoring time: 55.21 seconds
Refined model CLL: -0.324285


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.606114
   AUC PR    = 0.172356
   CLL	      = -0.343052
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 311.71299999999997 seconds
Total inference time: 12.201 seconds
AUC ROC: 0.606114
Total revision time: 311.71299999999997
Best scored revision CLL: -0.324285


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 12:52:31
{'AUC PR': 0.172356, 'AUC ROC': 0.606114, 'Precision': [1.0, 0.5], 'Inference time': 12.201, 'parameter_0.8': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 4.987, 'CLL': -0.326254, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 14.557}, 'CLL': -0.343052, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 311.71299999999997}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.46684458727342437;  // std dev = 3,310, 46,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | | | else return 0.05814893509951238;  // std dev = 3,795, 90,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=18 */
%   | else return 0.2225688246022696;  // std dev = 0,481, 4.525,000 (wgt'ed) examples reached here.  /* #neg=2.876 #pos=1.649 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordauthor(I, K), haswordtitle(L, K) )
%   | | | then return 0.1308762078267851;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.03209496733951205;  // std dev = 0,313, 492,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=54 */
%   | | else return 0.03996711691769331;  // std dev = 0,386, 220,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=40 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8179037030670625;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.17115959794892555;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.006395476751957873;  // std dev = 4,190, 127,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=21 */
%   | else return 0.19307406195465848;  // std dev = 0,481, 4.522,000 (wgt'ed) examples reached here.  /* #neg=2.875 #pos=1.647 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return 0.7927941835770488;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordauthor(J, L), haswordtitle(M, L) )
%   | | | then return 0.10616484729313494;  // std dev = 2,572, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.005838857365102961;  // std dev = 0,341, 697,000 (wgt'ed) examples reached here.  /* #neg=603 #pos=94 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7059501114607474;  // std dev = 1,029, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.2396345405261082;  // std dev = 0,033, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.5533315028957801;  // std dev = 0,023, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.0188659364236654;  // std dev = 3,807, 93,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=18 */
%   | else return 0.16236859092599315;  // std dev = 0,480, 4.549,000 (wgt'ed) examples reached here.  /* #neg=2.900 #pos=1.649 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.020231488359651176;  // std dev = 0,323, 540,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=65 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.10609822765183749;  // std dev = 5,379, 153,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=39 */
%   | | | else return -0.08154034087834607;  // std dev = 1,368, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else return -0.14346107824006588;  // std dev = 0,032, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5530401583697981;  // std dev = 1,040, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.19928147056463952;  // std dev = 0,029, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return 0.004565344158625564;  // std dev = 3,728, 104,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=23 */
%   | | | else return 0.6454662456399252;  // std dev = 0,540, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1305642022098045;  // std dev = 0,478, 4.607,000 (wgt'ed) examples reached here.  /* #neg=2.958 #pos=1.649 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.8437885096656348;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14735472275255113;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.027765827161222553;  // std dev = 0,386, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | else return -0.011542112218338106;  // std dev = 0,335, 706,000 (wgt'ed) examples reached here.  /* #neg=613 #pos=93 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.15378732027594302;  // std dev = 4,128, 96,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=42 */
%   | | | else return -0.07016912762009847;  // std dev = 2,655, 69,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | | else return 0.5538870558302168;  // std dev = 0,258, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, C) )
%   | | | then return 0.05817826225856228;  // std dev = 4,283, 135,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   | | | else return 0.7077424497146446;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.11720416331915681;  // std dev = 0,482, 4.344,000 (wgt'ed) examples reached here.  /* #neg=2.743 #pos=1.601 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.018050132762438154;  // std dev = 0,319, 548,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=65 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.04025695042537048;  // std dev = 0,396, 204,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=41 */
%   | | else return -0.1315344999274199;  // std dev = 0,023, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08168854866949454;  // std dev = 0,474, 4.793,000 (wgt'ed) examples reached here.  /* #neg=3.083 #pos=1.710 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7975763047583563;  // std dev = 1,696, 57,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=54 */
%   | | | else return -0.13339086708646203;  // std dev = 0,295, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13177640330773333;  // std dev = 0,006, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.007015682985611512;  // std dev = 3,105, 88,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05511049173597102;  // std dev = 5,433, 176,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=39 */
%   | | | else return -0.077669578840651;  // std dev = 1,378, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.11074632312223019;  // std dev = 0,035, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.41291604553391653;  // std dev = 0,391, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.18882016925736447;  // std dev = 0,044, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.16032935755097652;  // std dev = 1,035, 34,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | | | else return 0.11316289583244812;  // std dev = 3,403, 70,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=28 */
%   | else return 0.07785031353389556;  // std dev = 0,480, 4.483,000 (wgt'ed) examples reached here.  /* #neg=2.834 #pos=1.649 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.01748676236374604;  // std dev = 0,283, 545,000 (wgt'ed) examples reached here.  /* #neg=480 #pos=65 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.03827702759641265;  // std dev = 5,461, 184,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=39 */
%   | | | else return -0.07334948664191783;  // std dev = 1,381, 30,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else return -0.10185125636821138;  // std dev = 0,039, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5026725502859448;  // std dev = 0,621, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.22900173099345034;  // std dev = 0,063, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.08611797045115163;  // std dev = 3,960, 130,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=25 */
%   | | | else return 0.3617640314776704;  // std dev = 1,030, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.05756269112938257;  // std dev = 0,478, 4.518,000 (wgt'ed) examples reached here.  /* #neg=2.871 #pos=1.647 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.01299634041354295;  // std dev = 0,288, 528,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=65 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.06149239035425956;  // std dev = 5,357, 162,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=39 */
%   | | | else return -0.07247877347149;  // std dev = 1,397, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.09663915787074727;  // std dev = 0,039, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.042052892005694134;  // std dev = 0,473, 4.270,000 (wgt'ed) examples reached here.  /* #neg=2.728 #pos=1.542 */
%   | | else return 0.013505404820188412;  // std dev = 0,313, 456,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=76 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.17397834541708132;  // std dev = 0,305, 263,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=28 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.39206803100519405;  // std dev = 4,463, 97,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=69 */
%   | | | else return 0.0029189709053197913;  // std dev = 3,266, 97,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.6943783442599275;  // std dev = 1,890, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return -0.17179222638958144;  // std dev = 1,230, 134,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=2 */
%   | | else return 0.011272638950533057;  // std dev = 0,380, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else return 0.35975337230376514;  // std dev = 0,357, 39,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03456494227494228;  // std dev = 0,471, 4.704,000 (wgt'ed) examples reached here.  /* #neg=2.994 #pos=1.710 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return -0.04818667418198714;  // std dev = 0,551, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.24460600184430467;  // std dev = 0,172, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.19613509424676212;  // std dev = 0,633, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.016140811528900352;  // std dev = 2,210, 48,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.03271486509445263;  // std dev = 5,482, 470,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=44 */
%   | | | else return 0.03435295641371088;  // std dev = 2,859, 61,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.001995191009513757;  // std dev = 4,843, 213,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=40 */
%   | | | else return -0.11993394382927705;  // std dev = 0,007, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.556423
   AUC PR    = 0.056303
   CLL	      = -0.384553
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.021419
   F1        = 0.04194


Total learning time: 1555.943 seconds
Total inference time: 29.965 seconds
AUC ROC: 0.556423


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 13:18:57
{'AUC PR': 0.056303, 'AUC ROC': 0.556423, 'Precision': [1.0, 0.5], 'Inference time': 29.965, 'CLL': -0.384553, 'Recall': 0.021419, 'Learning time': 1555.943, 'F1': 0.04194}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22105216090595878;  // std dev = 0,481, 4.712,000 (wgt'ed) examples reached here.  /* #neg=3.002 #pos=1.710 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return -0.02458027598790768;  // std dev = 6,968, 469,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=55 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordtitle(E, I), haswordvenue(B, I) )
%   | | | then return 0.06223056775257359;  // std dev = 2,821, 49,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.07361854835917973;  // std dev = 5,531, 181,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=39 */
%   | | | else return -0.04661296966239256;  // std dev = 1,345, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.532491
   AUC PR    = 0.01166
   CLL	      = -0.200736
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 229.07999999999998 seconds
Total inference time: 5.396 seconds
AUC ROC: 0.532491


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 13:22:53
{'AUC PR': 0.01166, 'AUC ROC': 0.532491, 'Precision': [nan, 0.5], 'Inference time': 5.396, 'CLL': -0.200736, 'Recall': 0.0, 'Learning time': 229.07999999999998, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1,41e-06, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.15573986566162334;  // std dev = 36,436, 6.351,000 (wgt'ed) examples reached here.  /* #neg=4.461 #pos=1.890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.12946571602381313;  // std dev = 36,597, 6.487,000 (wgt'ed) examples reached here.  /* #neg=4.597 #pos=1.890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11329449188242101;  // std dev = 36,541, 6.439,000 (wgt'ed) examples reached here.  /* #neg=4.549 #pos=1.890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09512738718525239;  // std dev = 36,562, 6.457,000 (wgt'ed) examples reached here.  /* #neg=4.567 #pos=1.890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.08370199977925591;  // std dev = 36,456, 6.368,000 (wgt'ed) examples reached here.  /* #neg=4.478 #pos=1.890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,34e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06942289995359265;  // std dev = 36,454, 6.366,000 (wgt'ed) examples reached here.  /* #neg=4.476 #pos=1.890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2,53e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.05560079726805544;  // std dev = 36,490, 6.396,000 (wgt'ed) examples reached here.  /* #neg=4.506 #pos=1.890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2,63e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04783218014093403;  // std dev = 36,425, 6.342,000 (wgt'ed) examples reached here.  /* #neg=4.452 #pos=1.890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.03674557231384034;  // std dev = 36,477, 6.385,000 (wgt'ed) examples reached here.  /* #neg=4.495 #pos=1.890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.03271830388287412;  // std dev = 36,396, 6.319,000 (wgt'ed) examples reached here.  /* #neg=4.429 #pos=1.890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.327301
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 19.497 seconds
Total inference time: 5.002 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.328236
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 11.814 seconds
Parameter learned model CLL: -0.328236


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.436, 4461, 1890], 'true': [1.41e-06, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.597, 4597, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.541, 4549, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.562, 4567, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.456, 4478, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.454, 4476, 1890], 'true': [4.34e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.49, 4506, 1890], 'true': [2.53e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.425, 4452, 1890], 'true': [2.63e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.477, 4495, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.396, 4429, 1890], 'true': [0.0, 0, 380]}]]
[{'': [5.235578052969159e-15, 0.209030568609228]}, {'': [-5.310372025154433e-15, 0.20646598482083756]}, {'': [-1.009718624501195e-15, 0.20736759498223534]}, {'': [-1.495879443705474e-15, 0.20702902792758093]}, {'': [-1.402386978473882e-15, 0.20870833043986003]}, {'': [4.9551006572743825e-16, 0.20874621686902164]}, {'': [1.6828643741686584e-16, 0.20817859896016838]}, {'': [1.8231030720160465e-16, 0.2092013508178698]}, {'': [-2.5710427938687837e-16, 0.20838655595139788]}, {'': [-2.945012654795152e-16, 0.20963836973623728]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1,41e-06, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5914822684328447;  // std dev = 2,966, 45,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=33 */
%   | | | else return 0.0198255818060986;  // std dev = 4,758, 167,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.18373033044835074;  // std dev = 6,146, 172,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
%   | | | else return 0.1772729085058427;  // std dev = 33,335, 5.114,000 (wgt'ed) examples reached here.  /* #neg=3.482 #pos=1.632 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.17890365208064443;  // std dev = 3,398, 53,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return -0.05489454316135737;  // std dev = 1,351, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.02646644951587192;  // std dev = 7,981, 624,000 (wgt'ed) examples reached here.  /* #neg=552 #pos=72 */
%   | | | else return 0.05582335370416332;  // std dev = 6,397, 258,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.15215879236068203;  // std dev = 6,018, 167,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=53 */
%   | | | else return 0.7066091902166255;  // std dev = 0,912, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.14850586550926362;  // std dev = 0,463, 5.387,000 (wgt'ed) examples reached here.  /* #neg=3.699 #pos=1.688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.35424470548392567;  // std dev = 1,401, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.118765881388237;  // std dev = 3,311, 56,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.0743261057017109;  // std dev = 3,592, 74,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | | else return -0.011773340154853372;  // std dev = 9,599, 818,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13784788843849113;  // std dev = 0,467, 5.390,000 (wgt'ed) examples reached here.  /* #neg=3.642 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.026324403733576824;  // std dev = 7,878, 622,000 (wgt'ed) examples reached here.  /* #neg=551 #pos=71 */
%   | | | else return 0.09582818517948191;  // std dev = 3,717, 77,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.059746671657604083;  // std dev = 6,442, 250,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=53 */
%   | | | else return -0.15619818666041788;  // std dev = 0,041, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.31371031287909684;  // std dev = 3,949, 63,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=33 */
%   | | | else return -0.0042941463897989834;  // std dev = 4,511, 128,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=27 */
%   | | else return 0.112085036644714;  // std dev = 0,466, 5.271,000 (wgt'ed) examples reached here.  /* #neg=3.583 #pos=1.688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.22063189987222206;  // std dev = 3,199, 43,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return -0.059430667126312973;  // std dev = 1,358, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.024708831892860432;  // std dev = 7,980, 644,000 (wgt'ed) examples reached here.  /* #neg=572 #pos=72 */
%   | | | else return 0.035786224823699024;  // std dev = 6,378, 265,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08804955337777431;  // std dev = 0,463, 5.543,000 (wgt'ed) examples reached here.  /* #neg=3.795 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.360954056577263;  // std dev = 1,294, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.03930096354317387;  // std dev = 3,401, 71,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.050878028770292884;  // std dev = 3,567, 70,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | | else return -0.005544118837313776;  // std dev = 9,546, 792,000 (wgt'ed) examples reached here.  /* #neg=686 #pos=106 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,34e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08188358472387432;  // std dev = 0,467, 5.379,000 (wgt'ed) examples reached here.  /* #neg=3.631 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.01675255402627442;  // std dev = 7,797, 585,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=71 */
%   | | | else return 0.09451853483723156;  // std dev = 3,700, 75,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0649562787973452;  // std dev = 6,340, 228,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=53 */
%   | | | else return -0.14435739392119187;  // std dev = 0,082, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2,53e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3126795564583245;  // std dev = 3,341, 50,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   | | | else return -0.045532134009588526;  // std dev = 4,679, 145,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=27 */
%   | | else return 0.05979738604486734;  // std dev = 0,465, 5.304,000 (wgt'ed) examples reached here.  /* #neg=3.616 #pos=1.688 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.01659644108756137;  // std dev = 7,811, 591,000 (wgt'ed) examples reached here.  /* #neg=520 #pos=71 */
%   | | | else return 0.09813230763132148;  // std dev = 3,666, 70,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.041693334352928574;  // std dev = 6,400, 242,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=53 */
%   | | | else return -0.12242011647573248;  // std dev = 0,063, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2,63e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.046173129035714466;  // std dev = 0,463, 5.525,000 (wgt'ed) examples reached here.  /* #neg=3.777 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.005077615966424551;  // std dev = 7,710, 506,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=71 */
%   | | | else return -0.040178082318402794;  // std dev = 3,947, 162,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.019493264206590175;  // std dev = 6,482, 258,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=53 */
%   | | | else return -0.11542494059958595;  // std dev = 0,048, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04114934320294953;  // std dev = 0,465, 5.456,000 (wgt'ed) examples reached here.  /* #neg=3.708 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.013182225663932753;  // std dev = 7,785, 595,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=71 */
%   | | | else return 0.05684066889633299;  // std dev = 3,748, 80,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.019323857814294812;  // std dev = 6,466, 256,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=53 */
%   | | | else return -0.10102916635764611;  // std dev = 0,053, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.23501624989887487;  // std dev = 3,765, 58,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | | else return -0.04753763808896454;  // std dev = 4,460, 119,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=27 */
%   | | else return 0.02831290505771808;  // std dev = 0,464, 5.346,000 (wgt'ed) examples reached here.  /* #neg=3.658 #pos=1.688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.06521836743842419;  // std dev = 1,610, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.009842348490889625;  // std dev = 3,396, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.028648145270574823;  // std dev = 3,601, 79,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | | | else return -0.013050715253179091;  // std dev = 9,536, 815,000 (wgt'ed) examples reached here.  /* #neg=709 #pos=106 */


Results
   AUC ROC   = 0.606093
   AUC PR    = 0.172356
   CLL	      = -0.339122
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 288.293 seconds
Total inference time: 12.418 seconds
AUC ROC: 0.606093


Results scoring model
   AUC ROC   = 0.647843
   AUC PR    = 0.20258
   CLL	      = -0.321448
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167841
   F1        = 0.287439


Total scoring time: 53.002 seconds
Refined model CLL: -0.321448


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.606093
   AUC PR    = 0.172356
   CLL	      = -0.339122
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 372.606 seconds
Total inference time: 12.418 seconds
AUC ROC: 0.606093
Total revision time: 372.606
Best scored revision CLL: -0.321448


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:29:24
{'AUC PR': 0.172356, 'AUC ROC': 0.606093, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.002, 'CLL': -0.327301, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 19.497}, 'Inference time': 12.418, 'CLL': -0.339122, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 372.606}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21394228069388935;  // std dev = 0,479, 5.981,000 (wgt'ed) examples reached here.  /* #neg=3.853 #pos=2.128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.24451257146314873;  // std dev = 0,487, 44,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.04331091891508637;  // std dev = 6,977, 548,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=54 */
%   | | | else return 0.06991364098186532;  // std dev = 3,767, 85,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.06546600827024385;  // std dev = 6,358, 246,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=51 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.7800607286528607;  // std dev = 0,218, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.40148930008143185;  // std dev = 3,703, 56,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=32 */
%   | | | else return 0.048242546834678664;  // std dev = 4,332, 110,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=24 */
%   | else return 0.1943908085108599;  // std dev = 0,481, 5.635,000 (wgt'ed) examples reached here.  /* #neg=3.582 #pos=2.053 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then return -0.022665471733908895;  // std dev = 0,319, 608,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=71 */
%   | | else return 0.062370849493370045;  // std dev = 0,408, 85,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.0785870670101279;  // std dev = 6,265, 223,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=51 */
%   | | | else return -0.07593447674306954;  // std dev = 1,361, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else return -0.1376572602842584;  // std dev = 0,095, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7886801792190905;  // std dev = 0,207, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.19914177736938823;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.6287558319269168;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.027736877321970336;  // std dev = 4,460, 140,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=24 */
%   | else return 0.15737514350695034;  // std dev = 0,479, 5.760,000 (wgt'ed) examples reached here.  /* #neg=3.707 #pos=2.053 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.004493791654996298;  // std dev = 0,339, 659,000 (wgt'ed) examples reached here.  /* #neg=570 #pos=89 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.049911534425864094;  // std dev = 6,341, 242,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=51 */
%   | | | else return -0.04058151661384511;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.11713972652998471;  // std dev = 0,071, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5358019049805813;  // std dev = 0,071, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.4673030991924015;  // std dev = 2,162, 41,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   | | | else return -0.027936292398413314;  // std dev = 4,471, 144,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=24 */
%   | else return 0.14325073041302416;  // std dev = 0,482, 5.570,000 (wgt'ed) examples reached here.  /* #neg=3.517 #pos=2.053 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.5943101745427866;  // std dev = 0,904, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(I, K), haswordtitle(L, K) )
%   | | | then return 0.08607897467407279;  // std dev = 3,345, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return -0.12381704732108482;  // std dev = 0,035, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.022175695889393474;  // std dev = 0,317, 632,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=72 */
%   | | else return 0.03661760101962054;  // std dev = 0,393, 261,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6454864774520245;  // std dev = 1,132, 37,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return -0.29236145334957514;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.18287256179042177;  // std dev = 1,137, 42,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=2 */
%   | | | else return 0.13764340724291035;  // std dev = 4,167, 87,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=37 */
%   | else return 0.1138328875457765;  // std dev = 0,480, 5.626,000 (wgt'ed) examples reached here.  /* #neg=3.573 #pos=2.053 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return 0.4807482995893878;  // std dev = 0,907, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(J, L), haswordtitle(M, L) )
%   | | | then return 0.07832969126809589;  // std dev = 3,334, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.11074021469146239;  // std dev = 0,049, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.006492271606574177;  // std dev = 0,341, 901,000 (wgt'ed) examples reached here.  /* #neg=778 #pos=123 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.30570278267118367;  // std dev = 0,323, 47,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=36 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return -0.05057583457715175;  // std dev = 4,328, 156,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
%   | | | else return 0.4652193550702037;  // std dev = 1,335, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, C) )
%   | | | then return 0.01708715392524232;  // std dev = 5,245, 178,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=51 */
%   | | | else return 0.5835083429683393;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.09197018649174496;  // std dev = 0,482, 5.465,000 (wgt'ed) examples reached here.  /* #neg=3.468 #pos=1.997 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then if ( haswordauthor(L, M), haswordtitle(N, M) )
%   | | then return 0.07074667589046368;  // std dev = 0,412, 73,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | else return -0.03122356483910868;  // std dev = 0,326, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else return -0.002707665089893956;  // std dev = 0,346, 859,000 (wgt'ed) examples reached here.  /* #neg=736 #pos=123 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0698095774803601;  // std dev = 0,475, 5.878,000 (wgt'ed) examples reached here.  /* #neg=3.750 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return -0.03673794287667917;  // std dev = 1,293, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return -0.02213379336444005;  // std dev = 7,709, 605,000 (wgt'ed) examples reached here.  /* #neg=536 #pos=69 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.10823274632668585;  // std dev = 3,641, 69,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return -0.15399763189825283;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.051237968723381454;  // std dev = 6,230, 225,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=51 */
%   | | | else return -0.07972182350900733;  // std dev = 1,383, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.11486465315183589;  // std dev = 0,104, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.05208211018793529;  // std dev = 0,474, 5.373,000 (wgt'ed) examples reached here.  /* #neg=3.448 #pos=1.925 */
%   | | else return 0.032816126842928436;  // std dev = 0,363, 552,000 (wgt'ed) examples reached here.  /* #neg=453 #pos=99 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.18636656406645172;  // std dev = 0,285, 321,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=29 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.42602367311168265;  // std dev = 4,766, 116,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=85 */
%   | | | else return 0.040003402667037065;  // std dev = 3,922, 99,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=20 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.632213007796665;  // std dev = 0,174, 60,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.04383000428368998;  // std dev = 6,230, 225,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=51 */
%   | | | else return -0.08261043324206463;  // std dev = 1,397, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else return -0.09277001535410337;  // std dev = 0,024, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04551501231584334;  // std dev = 0,472, 5.839,000 (wgt'ed) examples reached here.  /* #neg=3.711 #pos=2.128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.02329037194626842;  // std dev = 0,922, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1343545949183123;  // std dev = 3,178, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.22127559409359712;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10297696480141671;  // std dev = 0,057, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.02687502716344287;  // std dev = 6,949, 526,000 (wgt'ed) examples reached here.  /* #neg=472 #pos=54 */
%   | | | else return 0.008472798974159089;  // std dev = 3,830, 100,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.017187748591646474;  // std dev = 6,362, 259,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=51 */
%   | | | else return -0.08663592971030808;  // std dev = 0,012, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.24874258836775612;  // std dev = 0,277, 43,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=36 */
%   | | else if ( haswordvenue(A, D), haswordtitle(G, C) )
%   | | | then return 0.35136718032591846;  // std dev = 1,49e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.04308819841027766;  // std dev = 4,370, 131,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=29 */
%   | else return 0.037629742359622284;  // std dev = 0,476, 5.611,000 (wgt'ed) examples reached here.  /* #neg=3.558 #pos=2.053 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return -0.007526436530187139;  // std dev = 0,333, 540,000 (wgt'ed) examples reached here.  /* #neg=469 #pos=71 */
%   | | else return -0.04339893864709306;  // std dev = 0,297, 175,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=18 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.03071165883212946;  // std dev = 6,250, 229,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=51 */
%   | | | else return -0.055546489728292396;  // std dev = 1,377, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return -0.0895305773756696;  // std dev = 0,095, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.542082
   AUC PR    = 0.039575
   CLL	      = -0.392349
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.012048
   F1        = 0.02381


Total learning time: 1869.261 seconds
Total inference time: 26.918 seconds
AUC ROC: 0.542082


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 14:01:01
{'AUC PR': 0.039575, 'AUC ROC': 0.542082, 'Precision': [1.0, 0.5], 'Inference time': 26.918, 'CLL': -0.392349, 'Recall': 0.012048, 'Learning time': 1869.261, 'F1': 0.02381}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2205467552629949;  // std dev = 0,481, 5.872,000 (wgt'ed) examples reached here.  /* #neg=3.744 #pos=2.128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.24276431971489698;  // std dev = 3,038, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.03740232215387265;  // std dev = 6,954, 517,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=54 */
%   | | | else return 0.1047242775652658;  // std dev = 3,683, 73,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.16584124279182005;  // std dev = 3,328, 52,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.035813909718800704;  // std dev = 5,365, 197,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=35 */


Results
   AUC ROC   = 0.53209
   AUC PR    = 0.011652
   CLL	      = -0.201336
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 30.77 seconds
Total inference time: 4.359 seconds
AUC ROC: 0.53209


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 14:01:37
{'AUC PR': 0.011652, 'AUC ROC': 0.53209, 'Precision': [nan, 0.5], 'Inference time': 4.359, 'CLL': -0.201336, 'Recall': 0.0, 'Learning time': 30.77, 'F1': nan}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 214413

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 35540

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.15836491782088968;  // std dev = 17,082, 1.389,000 (wgt'ed) examples reached here.  /* #neg=972 #pos=417 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,06e-07, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.13141927238268597;  // std dev = 17,162, 1.420,000 (wgt'ed) examples reached here.  /* #neg=1.003 #pos=417 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,26e-07, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.11909318764587747;  // std dev = 17,085, 1.390,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=417 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.10852048039671476;  // std dev = 16,990, 1.355,000 (wgt'ed) examples reached here.  /* #neg=938 #pos=417 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.07450078456570212;  // std dev = 17,187, 1.430,000 (wgt'ed) examples reached here.  /* #neg=1.013 #pos=417 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.07389869374141861;  // std dev = 17,037, 1.372,000 (wgt'ed) examples reached here.  /* #neg=955 #pos=417 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.053410804613818426;  // std dev = 17,124, 1.405,000 (wgt'ed) examples reached here.  /* #neg=988 #pos=417 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,98e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.03683169745932501;  // std dev = 17,204, 1.437,000 (wgt'ed) examples reached here.  /* #neg=1.020 #pos=417 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7,60e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.04026228129386578;  // std dev = 17,077, 1.387,000 (wgt'ed) examples reached here.  /* #neg=970 #pos=417 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,37e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.018975087120424144;  // std dev = 17,241, 1.452,000 (wgt'ed) examples reached here.  /* #neg=1.035 #pos=417 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.32973
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 3.984 seconds
Total inference time: 3.915 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.577079
   AUC PR    = 0.171839
   CLL	      = -0.326527
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.154158
   F1        = 0.267135


Total scoring time: 4.12 seconds
Parameter learned model CLL: -0.326527


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.082, 972, 417], 'true': [0.0, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.162, 1003, 417], 'true': [2.06e-07, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.085, 973, 417], 'true': [3.26e-07, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.99, 938, 417], 'true': [0.0, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.187, 1013, 417], 'true': [0.0, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.037, 955, 417], 'true': [0.0, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.124, 988, 417], 'true': [0.0, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.204, 1020, 417], 'true': [2.98e-08, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.077, 970, 417], 'true': [7.6e-08, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.241, 1035, 417], 'true': [5.37e-08, 0, 76]}]]
[{'': [-1.3088945132422897e-15, 0.21008634643999954]}, {'': [5.609547913895527e-16, 0.20742461813132324]}, {'': [1.402386978473882e-15, 0.21000000000002284]}, {'': [-9.349246523159212e-17, 0.2130395827943446]}, {'': [-3.8565641908031755e-16, 0.20657293755196213]}, {'': [-1.1686558153949016e-17, 0.2115588530289402]}, {'': [-9.933574430856664e-17, 0.20870860298121213]}, {'': [1.1686558153949016e-17, 0.20597887910182794]}, {'': [7.596262800066861e-17, 0.21025913194358942]}, {'': [3.7981314000334304e-17, 0.204711939075201]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.324815601766179;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.13814893509951237;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else return 0.16239421811837534;  // std dev = 0,460, 1.272,000 (wgt'ed) examples reached here.  /* #neg=885 #pos=387 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.03073995378937657;  // std dev = 2,981, 90,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=10 */
%   | | | else return -0.1033895264389493;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else return -0.013645936695359509;  // std dev = 0,334, 39,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,06e-07, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.17054222576405276;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.07945777423594735;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return 0.16668561562147619;  // std dev = 0,470, 1.201,000 (wgt'ed) examples reached here.  /* #neg=805 #pos=396 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.029362920916518747;  // std dev = 2,985, 92,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=10 */
%   | | | else return -0.09208427710818981;  // std dev = 0,982, 25,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else return -0.03381507965811727;  // std dev = 0,308, 47,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,26e-07, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1291741677025788;  // std dev = 0,464, 1.270,000 (wgt'ed) examples reached here.  /* #neg=869 #pos=401 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.034361268605558735;  // std dev = 2,999, 100,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=10 */
%   | | | else return -0.08990421244090974;  // std dev = 0,986, 32,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=1 */
%   | | else return -0.01989220869756923;  // std dev = 0,321, 43,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12224978750758084;  // std dev = 0,470, 1.218,000 (wgt'ed) examples reached here.  /* #neg=817 #pos=401 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.11456817748886858;  // std dev = 0,026, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.024572488742389095;  // std dev = 3,134, 109,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=11 */
%   | | | else return -0.011897054087474981;  // std dev = 2,095, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2839961413085574;  // std dev = 1,785, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.035473863194906044;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else return 0.08751034445128657;  // std dev = 0,464, 1.228,000 (wgt'ed) examples reached here.  /* #neg=841 #pos=387 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.12379166756047241;  // std dev = 0,028, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.015909851683310047;  // std dev = 3,125, 102,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=11 */
%   | | | else return -8.960643921490338E-4;  // std dev = 2,084, 38,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3841864987684709;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.07434010885470317;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.014158679450994397;  // std dev = 1,924, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.08075914824057634;  // std dev = 16,063, 1.177,000 (wgt'ed) examples reached here.  /* #neg=795 #pos=382 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return -0.11560002132639621;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0013637555647788716;  // std dev = 2,643, 64,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=8 */
%   | | | else return -0.028762740147984807;  // std dev = 2,684, 84,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05763578513713296;  // std dev = 0,465, 1.264,000 (wgt'ed) examples reached here.  /* #neg=863 #pos=401 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.09938846126250646;  // std dev = 0,021, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.019594055309345555;  // std dev = 2,666, 78,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010958700472994616;  // std dev = 2,664, 72,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=8 */
%   | | | else return -0.12910346052705168;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,98e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04902359993090771;  // std dev = 0,465, 1.255,000 (wgt'ed) examples reached here.  /* #neg=854 #pos=401 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.013175161111662176;  // std dev = 2,983, 93,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
%   | | | else return -0.07061648219901448;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0015953904560767704;  // std dev = 2,084, 38,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | | else return -0.1152692623496296;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7,60e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.017506384408733765;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.13052801188920582;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return 0.0462285994470653;  // std dev = 0,469, 1.210,000 (wgt'ed) examples reached here.  /* #neg=814 #pos=396 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.09708871255225962;  // std dev = 0,024, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.09450010687626861;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.016428863850877835;  // std dev = 3,780, 154,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,37e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6747721730935257;  // std dev = 3,741, 377,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=362 */
%   | | | else return -0.24317435171880777;  // std dev = 5,428, 915,000 (wgt'ed) examples reached here.  /* #neg=886 #pos=29 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.19440844680233618;  // std dev = 1,925, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return 0.01929596066579095;  // std dev = 2,196, 34,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5439413256510539;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0.003942941465292638;  // std dev = 0,338, 38,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */


Results
   AUC ROC   = 0.919457
   AUC PR    = 0.712409
   CLL	      = -0.246041
   Precision = 0.960396 at threshold = 0.5
   Recall    = 0.176364
   F1        = 0.298003


Total learning time: 237.982 seconds
Total inference time: 26.662 seconds
AUC ROC: 0.919457


Results scoring model
   AUC ROC   = 0.939356
   AUC PR    = 0.512883
   CLL	      = -0.264545
   Precision = 0.943182 at threshold = 0.5
   Recall    = 0.168357
   F1        = 0.285714


Total scoring time: 97.096 seconds
Refined model CLL: -0.264545


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.919457
   AUC PR    = 0.712409
   CLL	      = -0.246041
   Precision = 0.960396 at threshold = 0.5
   Recall    = 0.176364
   F1        = 0.298003


Total learning time: 343.182 seconds
Total inference time: 26.662 seconds
AUC ROC: 0.919457
Total revision time: 343.182
Best scored revision CLL: -0.264545


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:07:52
{'AUC PR': 0.712409, 'AUC ROC': 0.919457, 'Precision': [0.960396, 0.5], 'Inference time': 26.662, 'CLL': -0.246041, 'Recall': 0.176364, 'F1': 0.298003, 'Learning time': 343.182, 'parameter_0.2': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.915, 'CLL': -0.32973, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 3.984}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.2510060779566552;  // std dev = 2,584, 28,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.10814893509951232;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.04185106490048778;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return 0.21658030764852704;  // std dev = 0,480, 1.275,000 (wgt'ed) examples reached here.  /* #neg=818 #pos=457 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, B) )
%   | | then return -0.034708207757630574;  // std dev = 0,309, 56,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | | else return -0.09185106490048775;  // std dev = 0,218, 40,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | else return -0.01877414182356461;  // std dev = 0,329, 65,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.09446743783575551;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.136832517440075;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.2344286684901309;  // std dev = 1,022, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.20666566992543614;  // std dev = 0,485, 1.248,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=471 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.7710639642114195;  // std dev = 0,955, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.13784843495908994;  // std dev = 0,030, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.1373007307878632;  // std dev = 0,010, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09545794721501595;  // std dev = 0,978, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | else return -0.00246647016648349;  // std dev = 0,342, 37,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16425861324868643;  // std dev = 0,480, 1.307,000 (wgt'ed) examples reached here.  /* #neg=830 #pos=477 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6519349004823294;  // std dev = 0,956, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.1215754858317611;  // std dev = 0,032, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.12200533019655702;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07093127993275357;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.001503107678144151;  // std dev = 2,075, 36,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | | else return -0.13075297014597875;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.13928507594270126;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11779323341523497;  // std dev = 0,475, 1.378,000 (wgt'ed) examples reached here.  /* #neg=901 #pos=477 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return -0.0741555293389293;  // std dev = 1,618, 85,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=5 */
%   | | | else return 0.02244267902470186;  // std dev = 1,425, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else return -0.0276454413960428;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.04627506807995201;  // std dev = 0,285, 56,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return -0.06873886919045942;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.3884039879523977;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.023778547277288616;  // std dev = 0,310, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else return 0.11495669189800234;  // std dev = 0,482, 1.286,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=471 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.5186325098394611;  // std dev = 0,931, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.1036464766979602;  // std dev = 0,034, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.10950337336148615;  // std dev = 0,012, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.0538208959443922;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | else return -0.006916952443375762;  // std dev = 0,326, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08278620952942649;  // std dev = 0,478, 1.344,000 (wgt'ed) examples reached here.  /* #neg=867 #pos=477 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4794361923649947;  // std dev = 0,054, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09475206746986115;  // std dev = 0,037, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.10233351393618;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.05472353325704784;  // std dev = 0,971, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else return 0.0030415304843081988;  // std dev = 0,337, 38,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07704540165517978;  // std dev = 0,481, 1.303,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=477 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.08474258687772343;  // std dev = 0,013, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.028136900347334272;  // std dev = 1,147, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( title(I, E), venue(I, A) )
%   | | | then return -0.05192864304828472;  // std dev = 1,330, 84,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=8 */
%   | | | else return -0.09562296380272567;  // std dev = 0,026, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.0016377964555845772;  // std dev = 0,337, 38,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return -0.06315782943496043;  // std dev = 0,939, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.13715419809647703;  // std dev = 1,254, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.05316539399796195;  // std dev = 0,297, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else return 0.06800142621426983;  // std dev = 0,484, 1.258,000 (wgt'ed) examples reached here.  /* #neg=787 #pos=471 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( title(K, I), venue(K, B) )
%   | | | then return 0.7335225261168282;  // std dev = 0,904, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.12060835098531829;  // std dev = 0,117, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.05362697678936018;  // std dev = 0,128, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return -0.0829685019746244;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.039800692927817856;  // std dev = 0,138, 78,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6313858181671848;  // std dev = 0,204, 448,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=430 */
%   | | else return -0.2654581089278708;  // std dev = 0,190, 857,000 (wgt'ed) examples reached here.  /* #neg=828 #pos=29 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.22949564027764913;  // std dev = 1,907, 44,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=4 */
%   | | | else return -0.1117973918848667;  // std dev = 0,221, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3719029611209522;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.011289962006239577;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.44882603804402926;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0.67959526881326;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.024325937482158073;  // std dev = 0,330, 30,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.028409834372826157;  // std dev = 0,395, 1.307,000 (wgt'ed) examples reached here.  /* #neg=830 #pos=477 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return -0.08165288596319596;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return -0.018232214883622082;  // std dev = 0,914, 71,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=10 */
%   | | | else return -0.04318953915373415;  // std dev = 0,871, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else return -0.013596919719185552;  // std dev = 0,291, 40,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */


Results
   AUC ROC   = 0.955956
   AUC PR    = 0.62363
   CLL	      = -0.273375
   Precision = 0.602151 at threshold = 0.5
   Recall    = 0.101818
   F1        = 0.174184


Total learning time: 482.305 seconds
Total inference time: 41.553 seconds
AUC ROC: 0.955956


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 14:16:37
{'AUC PR': 0.62363, 'AUC ROC': 0.955956, 'Precision': [0.602151, 0.5], 'Inference time': 41.553, 'CLL': -0.273375, 'Recall': 0.101818, 'Learning time': 482.305, 'F1': 0.174184}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22171600827023913;  // std dev = 0,481, 1.312,000 (wgt'ed) examples reached here.  /* #neg=835 #pos=477 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.014866937916360698;  // std dev = 2,643, 63,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=8 */
%   | | | else return -0.035184398233821024;  // std dev = 2,673, 75,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=8 */


Results
   AUC ROC   = 0.569182
   AUC PR    = 0.017885
   CLL	      = -0.201997
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.227 seconds
Total inference time: 3.102 seconds
AUC ROC: 0.569182


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 14:16:46
{'AUC PR': 0.017885, 'AUC ROC': 0.569182, 'Precision': [nan, 0.5], 'Inference time': 3.102, 'CLL': -0.201997, 'Recall': 0.0, 'Learning time': 6.227, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1,04e-06, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.1551427779100831;  // std dev = 24,010, 2.761,000 (wgt'ed) examples reached here.  /* #neg=1.941 #pos=820 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.12764059449739584;  // std dev = 24,138, 2.833,000 (wgt'ed) examples reached here.  /* #neg=2.013 #pos=820 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,59e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.10967627172352107;  // std dev = 24,136, 2.832,000 (wgt'ed) examples reached here.  /* #neg=2.012 #pos=820 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4,30e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.10037154611562121;  // std dev = 24,010, 2.761,000 (wgt'ed) examples reached here.  /* #neg=1.941 #pos=820 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3,72e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.07916583545427325;  // std dev = 24,093, 2.807,000 (wgt'ed) examples reached here.  /* #neg=1.987 #pos=820 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.07438628814010681;  // std dev = 23,943, 2.725,000 (wgt'ed) examples reached here.  /* #neg=1.905 #pos=820 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2,70e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.05281900778174031;  // std dev = 24,084, 2.802,000 (wgt'ed) examples reached here.  /* #neg=1.982 #pos=820 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.041602718476358214;  // std dev = 24,109, 2.816,000 (wgt'ed) examples reached here.  /* #neg=1.996 #pos=820 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.032596805456962474;  // std dev = 24,128, 2.827,000 (wgt'ed) examples reached here.  /* #neg=2.007 #pos=820 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.029008434145311627;  // std dev = 24,082, 2.801,000 (wgt'ed) examples reached here.  /* #neg=1.981 #pos=820 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.326422
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 7.414 seconds
Total inference time: 3.272 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.584178
   AUC PR    = 0.186169
   CLL	      = -0.322982
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168357
   F1        = 0.288194


Total scoring time: 6.413 seconds
Parameter learned model CLL: -0.322982


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.01, 1941, 820], 'true': [1.04e-06, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.138, 2013, 820], 'true': [0.0, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.136, 2012, 820], 'true': [5.59e-07, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.01, 1941, 820], 'true': [4.3e-07, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.093, 1987, 820], 'true': [3.72e-07, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.943, 1905, 820], 'true': [0.0, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.084, 1982, 820], 'true': [2.7e-07, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.109, 1996, 820], 'true': [0.0, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.128, 2007, 820], 'true': [0.0, 0, 166]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.082, 1981, 820], 'true': [9.42e-08, 0, 166]}]]
[{'': [6.5061744479238086e-15, 0.20878850014320802]}, {'': [-2.9106569898606513e-15, 0.20566693608644296]}, {'': [1.8833662875568922e-15, 0.205709965207936]}, {'': [1.1128982608290726e-15, 0.20878850014320488]}, {'': [8.346736956218045e-16, 0.20678874344494655]}, {'': [-2.568226755759398e-16, 0.21036613079709005]}, {'': [4.387387374422305e-16, 0.2070051930888613]}, {'': [-3.210283444699248e-16, 0.20639971268076013]}, {'': [-2.487969669641917e-16, 0.20592525283946678]}, {'': [5.3504724078320797e-17, 0.20704851036906766]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1,04e-06, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2265699877310913;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.0862955093449322;  // std dev = 1,374, 36,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.23314893509951187;  // std dev = 3,623, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | | else return 0.1805369948009998;  // std dev = 22,633, 2.345,000 (wgt'ed) examples reached here.  /* #neg=1.589 #pos=756 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.1438632208137979;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.04507687135210067;  // std dev = 4,355, 217,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=21 */
%   | | | else return 0.0223280395771243;  // std dev = 3,032, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1529627827921982;  // std dev = 0,466, 2.471,000 (wgt'ed) examples reached here.  /* #neg=1.685 #pos=786 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.13645196559086475;  // std dev = 1,29e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.012940176682952168;  // std dev = 4,168, 155,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=20 */
%   | | | else return -0.03467803935961143;  // std dev = 3,547, 137,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,59e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13229763068283576;  // std dev = 0,466, 2.459,000 (wgt'ed) examples reached here.  /* #neg=1.673 #pos=786 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.02971663314794238;  // std dev = 4,330, 202,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=21 */
%   | | | else return -0.0947453891809691;  // std dev = 1,386, 50,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.0025701103358102616;  // std dev = 3,076, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
%   | | | else return -0.14035434679061867;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4,30e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11290173982708154;  // std dev = 0,467, 2.447,000 (wgt'ed) examples reached here.  /* #neg=1.661 #pos=786 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.012452576953296081;  // std dev = 4,298, 177,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=21 */
%   | | | else return -0.07781314843879715;  // std dev = 1,381, 44,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -2.7451186496499466E-5;  // std dev = 3,071, 77,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
%   | | | else return -0.12425877600613229;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3,72e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3129079485795119;  // std dev = 2,225, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.019348664915743823;  // std dev = 2,727, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.060722279677748695;  // std dev = 2,720, 62,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | | | else return 0.09745368449626009;  // std dev = 22,587, 2.325,000 (wgt'ed) examples reached here.  /* #neg=1.569 #pos=756 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.0698585563094342;  // std dev = 1,246, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.01639000047945808;  // std dev = 3,976, 154,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.042577325274617064;  // std dev = 3,577, 167,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=14 */
%   | | | else return -0.11135612927485462;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0684563834346351;  // std dev = 0,463, 2.510,000 (wgt'ed) examples reached here.  /* #neg=1.724 #pos=786 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.0612240197825078;  // std dev = 1,245, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.018656188815441514;  // std dev = 3,986, 160,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.040157747789412904;  // std dev = 3,582, 171,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=14 */
%   | | | else return -0.1008043391384645;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2,70e-07, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21412656267350907;  // std dev = 2,275, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.016931480077975215;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.03426224923818537;  // std dev = 2,673, 52,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | | | else return 0.056284606828921925;  // std dev = 22,765, 2.404,000 (wgt'ed) examples reached here.  /* #neg=1.648 #pos=756 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.08001849135224293;  // std dev = 1,224, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.020715501063681713;  // std dev = 3,994, 167,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=18 */
%   | | else return -0.02265146259618019;  // std dev = 0,292, 148,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.13599432958047464;  // std dev = 2,107, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.11508746301834191;  // std dev = 1,374, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return 0.04762945334106702;  // std dev = 0,465, 2.449,000 (wgt'ed) examples reached here.  /* #neg=1.672 #pos=777 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.10869470032466443;  // std dev = 0,060, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.009974568529440873;  // std dev = 4,514, 209,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=23 */
%   | | | else return -0.015167005639083768;  // std dev = 3,109, 92,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6877690820699273;  // std dev = 5,217, 741,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=713 */
%   | | | else return -0.23226762985547972;  // std dev = 7,272, 1.751,000 (wgt'ed) examples reached here.  /* #neg=1.699 #pos=52 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13122028523637316;  // std dev = 3,334, 107,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=13 */
%   | | | else return 0.03004962184177856;  // std dev = 2,942, 66,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.21658669827909008;  // std dev = 3,735, 66,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | | | else return -0.04531304734796586;  // std dev = 0,830, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.38807872877961175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08891607585120885;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.514331496369805;  // std dev = 6,468, 756,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=713 */
%   | | | else return -0.1925697601681421;  // std dev = 7,207, 1.761,000 (wgt'ed) examples reached here.  /* #neg=1.709 #pos=52 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.09275367680713253;  // std dev = 3,304, 92,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=13 */
%   | | | else return 0.0528302442791507;  // std dev = 2,946, 50,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.6792867804575676;  // std dev = 0,053, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.3039050722937117;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.027787936206643698;  // std dev = 3,083, 84,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=11 */
%   | | | else return -0.08197140028609878;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.957135
   AUC PR    = 0.746985
   CLL	      = -0.206853
   Precision = 0.702663 at threshold = 0.5
   Recall    = 0.863636
   F1        = 0.774878


Total learning time: 779.87 seconds
Total inference time: 42.32 seconds
AUC ROC: 0.957135


Results scoring model
   AUC ROC   = 0.957957
   AUC PR    = 0.532547
   CLL	      = -0.224947
   Precision = 0.395199 at threshold = 0.5
   Recall    = 0.868154
   F1        = 0.543147


Total scoring time: 364.957 seconds
Refined model CLL: -0.224947


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.957135
   AUC PR    = 0.746985
   CLL	      = -0.206853
   Precision = 0.702663 at threshold = 0.5
   Recall    = 0.863636
   F1        = 0.774878


Total learning time: 1158.654 seconds
Total inference time: 42.32 seconds
AUC ROC: 0.957135
Total revision time: 1158.654
Best scored revision CLL: -0.224947


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:36:52
{'AUC PR': 0.746985, 'AUC ROC': 0.957135, 'Precision': [0.702663, 0.5], 'parameter_0.4': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.272, 'CLL': -0.326422, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 7.414}, 'Inference time': 42.32, 'CLL': -0.206853, 'Recall': 0.863636, 'F1': 0.774878, 'Learning time': 1158.654}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22303969784385375;  // std dev = 0,481, 2.609,000 (wgt'ed) examples reached here.  /* #neg=1.657 #pos=952 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8126943896449667;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.14185106490048807;  // std dev = 0,000, 151,000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.09307057709560969;  // std dev = 1,379, 41,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.0223280395771243;  // std dev = 3,032, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8287735917504331;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.35258311555995725;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.08518384816068984;  // std dev = 2,727, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else return 0.19721556313355643;  // std dev = 0,482, 2.516,000 (wgt'ed) examples reached here.  /* #neg=1.589 #pos=927 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return -0.025512049303031473;  // std dev = 0,276, 178,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=21 */
%   | | else return -0.08081018148812177;  // std dev = 0,212, 42,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return -0.009510535512599526;  // std dev = 3,083, 82,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
%   | | | else return -0.13980428807363238;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15877380912232059;  // std dev = 0,480, 2.644,000 (wgt'ed) examples reached here.  /* #neg=1.692 #pos=952 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.12365145401790346;  // std dev = 0,386, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.0039039748464179927;  // std dev = 3,348, 97,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
%   | | | else return -0.04397219002977439;  // std dev = 1,824, 55,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.03449963560653071;  // std dev = 3,061, 128,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=14 */
%   | | | else return -0.12153989696357882;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1257658375613361;  // std dev = 0,478, 2.692,000 (wgt'ed) examples reached here.  /* #neg=1.740 #pos=952 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7376881410337718;  // std dev = 0,043, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.11977178504893607;  // std dev = 0,054, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.11396595616237062;  // std dev = 0,012, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06482776463867018;  // std dev = 1,373, 36,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.013069364941344832;  // std dev = 3,045, 71,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=11 */
%   | | | else return -0.12770773253122839;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10934470723219625;  // std dev = 0,480, 2.642,000 (wgt'ed) examples reached here.  /* #neg=1.690 #pos=952 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return -0.021772587368921025;  // std dev = 0,234, 160,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=21 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.10411751190222976;  // std dev = 0,032, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.039256334329420585;  // std dev = 1,359, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | else return -0.0014975538721637223;  // std dev = 0,347, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09200719508183594;  // std dev = 0,481, 2.617,000 (wgt'ed) examples reached here.  /* #neg=1.665 #pos=952 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.4967563948348037;  // std dev = 1,184, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.0968101879956222;  // std dev = 0,967, 166,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=2 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.12418354087639619;  // std dev = 0,296, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.04686550267154165;  // std dev = 1,367, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.03168628342545018;  // std dev = 3,008, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | | | else return -0.1144221371144269;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09256540930052168;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06723925227546222;  // std dev = 0,479, 2.661,000 (wgt'ed) examples reached here.  /* #neg=1.709 #pos=952 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return -0.04104953350924569;  // std dev = 0,187, 191,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=21 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.08716721045263734;  // std dev = 0,025, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.05421755610457591;  // std dev = 1,376, 39,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.0161891642719521;  // std dev = 3,031, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.10667104236836888;  // std dev = 0,037, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08507791894464513;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06069742102888654;  // std dev = 0,481, 2.607,000 (wgt'ed) examples reached here.  /* #neg=1.655 #pos=952 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.012401249092658778;  // std dev = 0,669, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.0290351557956222;  // std dev = 1,807, 73,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=7 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.0017293779845164387;  // std dev = 3,060, 74,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | | | else return -0.09058599883339166;  // std dev = 0,033, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.028126428082637118;  // std dev = 2,065, 127,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=14 */
%   | | | else return -0.08648334843746988;  // std dev = 0,007, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07868501189211262;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.06410819438202216;  // std dev = 2,395, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.2624661850443887;  // std dev = 1,164, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else return 0.39536246542119813;  // std dev = 0,832, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.04563722186619807;  // std dev = 0,481, 2.587,000 (wgt'ed) examples reached here.  /* #neg=1.648 #pos=939 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return -0.047952238989120724;  // std dev = 2,511, 87,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=7 */
%   | | | else return 0.021102728597425787;  // std dev = 2,327, 48,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | else return 0.001045195392668538;  // std dev = 0,206, 32,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.04238968717913649;  // std dev = 0,213, 124,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=14 */
%   | | else return -0.07316663336984068;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6450530280820068;  // std dev = 0,151, 885,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=865 */
%   | | else return -0.27759266395419213;  // std dev = 0,178, 1.765,000 (wgt'ed) examples reached here.  /* #neg=1.713 #pos=52 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.18042961659417742;  // std dev = 0,330, 104,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=13 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.06660791067302914;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.03977759767085815;  // std dev = 1,909, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.6781916139973294;  // std dev = 1,421, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.1504123057502618;  // std dev = 0,269, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.0320743128422873;  // std dev = 0,213, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else return 0.5016625579544007;  // std dev = 0,312, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */


Results
   AUC ROC   = 0.961396
   AUC PR    = 0.667136
   CLL	      = -0.271048
   Precision = 0.7125 at threshold = 0.5
   Recall    = 0.103636
   F1        = 0.180952


Total learning time: 834.721 seconds
Total inference time: 36.644 seconds
AUC ROC: 0.961396


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 14:51:24
{'AUC PR': 0.667136, 'AUC ROC': 0.961396, 'Precision': [0.7125, 0.5], 'Inference time': 36.644, 'CLL': -0.271048, 'Recall': 0.103636, 'Learning time': 834.721, 'F1': 0.180952}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21244740923422997;  // std dev = 0,478, 2.687,000 (wgt'ed) examples reached here.  /* #neg=1.735 #pos=952 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.04040178953816886;  // std dev = 2,508, 69,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.010926712877290126;  // std dev = 3,053, 72,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.049135833112408184;  // std dev = 0,290, 151,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=14 */


Results
   AUC ROC   = 0.574123
   AUC PR    = 0.017976
   CLL	      = -0.201473
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 22.273 seconds
Total inference time: 4.597 seconds
AUC ROC: 0.574123


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 14:51:51
{'AUC PR': 0.017976, 'AUC ROC': 0.574123, 'Precision': [nan, 0.5], 'Inference time': 4.597, 'CLL': -0.201473, 'Recall': 0.0, 'Learning time': 22.273, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.1546507445084336;  // std dev = 29,404, 4.145,000 (wgt'ed) examples reached here.  /* #neg=2.916 #pos=1.229 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.1377254355424289;  // std dev = 29,342, 4.104,000 (wgt'ed) examples reached here.  /* #neg=2.875 #pos=1.229 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,62e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.10254250831888875;  // std dev = 29,668, 4.330,000 (wgt'ed) examples reached here.  /* #neg=3.101 #pos=1.229 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.0977838928819358;  // std dev = 29,440, 4.169,000 (wgt'ed) examples reached here.  /* #neg=2.940 #pos=1.229 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,98e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.0800283836722616;  // std dev = 29,478, 4.195,000 (wgt'ed) examples reached here.  /* #neg=2.966 #pos=1.229 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,15e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.06750011924722235;  // std dev = 29,453, 4.178,000 (wgt'ed) examples reached here.  /* #neg=2.949 #pos=1.229 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.05707893008843394;  // std dev = 29,419, 4.155,000 (wgt'ed) examples reached here.  /* #neg=2.926 #pos=1.229 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.04289594920273373;  // std dev = 29,495, 4.207,000 (wgt'ed) examples reached here.  /* #neg=2.978 #pos=1.229 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.037870976868287456;  // std dev = 29,431, 4.163,000 (wgt'ed) examples reached here.  /* #neg=2.934 #pos=1.229 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080111;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.0260281920064087;  // std dev = 29,525, 4.228,000 (wgt'ed) examples reached here.  /* #neg=2.999 #pos=1.229 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.326856
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 10.39 seconds
Total inference time: 3.788 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.584797
   AUC PR    = 0.187412
   CLL	      = -0.323412
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169595
   F1        = 0.290006


Total scoring time: 9.208 seconds
Parameter learned model CLL: -0.323412


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.404, 2916, 1229], 'true': [1.08e-06, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.342, 2875, 1229], 'true': [0.0, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.668, 3101, 1229], 'true': [4.62e-07, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.44, 2940, 1229], 'true': [0.0, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.478, 2966, 1229], 'true': [1.98e-07, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.453, 2949, 1229], 'true': [3.15e-07, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.419, 2926, 1229], 'true': [2.86e-07, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.495, 2978, 1229], 'true': [0.0, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.431, 2934, 1229], 'true': [0.0, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.525, 2999, 1229], 'true': [0.0, 0, 251]}]]
[{'': [4.642589986639698e-15, 0.20858848642618524]}, {'': [-4.416122182413372e-15, 0.2097852876858897]}, {'': [8.492542658487254e-16, 0.20327213863215363]}, {'': [-3.113932308111993e-16, 0.20789087302760334]}, {'': [1.5569661540559965e-16, 0.20713767596084207]}, {'': [3.963186573960718e-16, 0.20762984710311275]}, {'': [3.255474685753447e-16, 0.20829754359135672]}, {'': [-2.1231356646218133e-17, 0.20679096137835842]}, {'': [-1.6277373428767236e-16, 0.20806506699234614]}, {'': [-3.5385594410363554e-18, 0.2061856287183676]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.21663950113724814;  // std dev = 3,491, 53,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return -0.07042249347191633;  // std dev = 1,669, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | | else return 0.17535026253313551;  // std dev = 0,465, 3.616,000 (wgt'ed) examples reached here.  /* #neg=2.469 #pos=1.147 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.0038442993379226974;  // std dev = 4,335, 151,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=22 */
%   | | | else return -0.05393897698839974;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03701072371739823;  // std dev = 4,250, 123,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=22 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15991663673239445;  // std dev = 0,468, 3.606,000 (wgt'ed) examples reached here.  /* #neg=2.437 #pos=1.169 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.006425580612334951;  // std dev = 5,291, 218,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=33 */
%   | | | else return 0.05403574296491046;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.052077745642047195;  // std dev = 3,830, 192,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,62e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12827435232776357;  // std dev = 0,464, 3.704,000 (wgt'ed) examples reached here.  /* #neg=2.535 #pos=1.169 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 4.899776372670175E-4;  // std dev = 5,307, 226,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=33 */
%   | | | else return 0.025470649004538857;  // std dev = 3,014, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.12942901434738466;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.05355371632489013;  // std dev = 3,845, 212,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10979244341945708;  // std dev = 0,465, 3.681,000 (wgt'ed) examples reached here.  /* #neg=2.512 #pos=1.169 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.05630754050890307;  // std dev = 4,184, 108,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=22 */
%   | | | else return 0.012137528715123158;  // std dev = 4,300, 138,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04598748778016054;  // std dev = 3,841, 207,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=16 */
%   | | | else return -0.10708682250803603;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,98e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0874473569701013;  // std dev = 0,464, 3.726,000 (wgt'ed) examples reached here.  /* #neg=2.557 #pos=1.169 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.05484149998226922;  // std dev = 1,345, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.0239600567981901;  // std dev = 5,883, 239,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=42 */
%   | | else return -0.042305050112409585;  // std dev = 0,265, 211,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,15e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.17209421677340017;  // std dev = 3,313, 45,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | else return -0.1320266884081043;  // std dev = 1,672, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1119665878065897;  // std dev = 4,252, 79,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | | else return 0.0733702470097861;  // std dev = 27,669, 3.543,000 (wgt'ed) examples reached here.  /* #neg=2.424 #pos=1.119 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.009368930764056323;  // std dev = 5,095, 192,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=31 */
%   | | | else return -0.0233906882231987;  // std dev = 3,352, 96,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=13 */
%   | | else return -0.044428302650352;  // std dev = 0,254, 231,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06993928140584114;  // std dev = 0,468, 3.588,000 (wgt'ed) examples reached here.  /* #neg=2.419 #pos=1.169 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.01378703276236204;  // std dev = 5,329, 239,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=33 */
%   | | | else return 0.043910558699306546;  // std dev = 2,958, 54,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.029337737759871165;  // std dev = 3,835, 199,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=16 */
%   | | | else return -0.0899152968071333;  // std dev = 6,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6872714863715621;  // std dev = 7,035, 1.126,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=1.073 */
%   | | | else return -0.23366132766207864;  // std dev = 8,092, 2.692,000 (wgt'ed) examples reached here.  /* #neg=2.628 #pos=64 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.14659521383327054;  // std dev = 3,868, 153,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=17 */
%   | | | else return 0.09361328608406894;  // std dev = 4,378, 106,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.5702535619597701;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return 0.39692022862643633;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14622151411624748;  // std dev = 0,021, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.03665812923665627;  // std dev = 4,220, 120,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5383530656263563;  // std dev = 6,872, 1.121,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1.073 */
%   | | | else return -0.19014011875230033;  // std dev = 8,038, 2.625,000 (wgt'ed) examples reached here.  /* #neg=2.561 #pos=64 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12382272967419149;  // std dev = 3,880, 164,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=17 */
%   | | | else return 0.09534086320716911;  // std dev = 4,331, 98,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.11205600166756308;  // std dev = 4,842, 131,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
%   | | | else return -0.03871912039045832;  // std dev = 1,176, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return 0.06056391017239009;  // std dev = 0,292, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080111;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.0019484650913000454;  // std dev = 18,543, 3.540,000 (wgt'ed) examples reached here.  /* #neg=2.457 #pos=1.083 */
%   | | | else return 0.010475893209639573;  // std dev = 4,580, 331,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=53 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return 0.026567955049639713;  // std dev = 3,733, 85,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | | else return 0.10006859780370829;  // std dev = 4,281, 89,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.4192152141378831;  // std dev = 1,837, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return 0.29811268860718426;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1371764987390235;  // std dev = 0,024, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.014914565131207728;  // std dev = 4,229, 121,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=22 */


Results
   AUC ROC   = 0.955637
   AUC PR    = 0.758616
   CLL	      = -0.204867
   Precision = 0.670376 at threshold = 0.5
   Recall    = 0.876364
   F1        = 0.759653


Total learning time: 1694.593 seconds
Total inference time: 43.797 seconds
AUC ROC: 0.955637


Results scoring model
   AUC ROC   = 0.95892
   AUC PR    = 0.559435
   CLL	      = -0.220968
   Precision = 0.387363 at threshold = 0.5
   Recall    = 0.886486
   F1        = 0.539141


Total scoring time: 605.807 seconds
Refined model CLL: -0.220968


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.955637
   AUC PR    = 0.758616
   CLL	      = -0.204867
   Precision = 0.670376 at threshold = 0.5
   Recall    = 0.876364
   F1        = 0.759653


Total learning time: 2319.998 seconds
Total inference time: 43.797 seconds
AUC ROC: 0.955637
Total revision time: 2319.998
Best scored revision CLL: -0.220968


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 15:31:20
{'AUC PR': 0.758616, 'AUC ROC': 0.955637, 'Precision': [0.670376, 0.5], 'Inference time': 43.797, 'parameter_0.6': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.788, 'CLL': -0.326856, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 10.39}, 'CLL': -0.204867, 'Recall': 0.876364, 'F1': 0.759653, 'Learning time': 2319.998}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.09837280403092258;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return 0.18423589162125148;  // std dev = 3,179, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2539822684328456;  // std dev = 3,388, 48,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return -0.04185106490048778;  // std dev = 1,643, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else return 0.22168838072850505;  // std dev = 0,481, 3.752,000 (wgt'ed) examples reached here.  /* #neg=2.388 #pos=1.364 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.032061978577772675;  // std dev = 0,379, 253,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=44 */
%   | else return -0.06673369400846886;  // std dev = 0,264, 213,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7959645506217329;  // std dev = 0,132, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3407170446381443;  // std dev = 2,263, 29,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return 0.07248835854297556;  // std dev = 3,022, 52,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | else return 0.19742021880824118;  // std dev = 0,482, 3.765,000 (wgt'ed) examples reached here.  /* #neg=2.379 #pos=1.386 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.7659657623208838;  // std dev = 1,654, 34,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | else return -0.14579894356146872;  // std dev = 1,05e-07, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.05204894356146899;  // std dev = 1,649, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | | else return 0.04650874874622334;  // std dev = 2,842, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | else return -0.05625021101979916;  // std dev = 0,268, 206,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15732215436935587;  // std dev = 0,478, 3.964,000 (wgt'ed) examples reached here.  /* #neg=2.544 #pos=1.420 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.033027665308896594;  // std dev = 1,336, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.0010109383803923026;  // std dev = 4,454, 202,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=31 */
%   | | else return 0.03277273100514119;  // std dev = 0,386, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | else return -0.05060611456002;  // std dev = 0,266, 208,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13577000092875108;  // std dev = 0,479, 3.912,000 (wgt'ed) examples reached here.  /* #neg=2.492 #pos=1.420 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.08630570578215857;  // std dev = 1,053, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.004448201736187147;  // std dev = 4,522, 212,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=31 */
%   | | else return 0.03877216743675625;  // std dev = 0,393, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.03644230848286141;  // std dev = 3,825, 187,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=16 */
%   | | | else return -0.12200380580906452;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.12200380580906452;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5638358608739336;  // std dev = 0,151, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.21281469544164638;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.1275855076818398;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.06815835707853718;  // std dev = 3,147, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | else return 0.10296333567199331;  // std dev = 0,478, 3.908,000 (wgt'ed) examples reached here.  /* #neg=2.522 #pos=1.386 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then return 0.013854658516200642;  // std dev = 0,326, 182,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=31 */
%   | | else if ( haswordauthor(L, I) )
%   | | | then return 0.0650009462875392;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.03465946982953306;  // std dev = 3,098, 91,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=11 */
%   | else return -0.04998418661587518;  // std dev = 0,250, 238,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08744901853513894;  // std dev = 0,478, 3.951,000 (wgt'ed) examples reached here.  /* #neg=2.531 #pos=1.420 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.63964159284817;  // std dev = 1,651, 34,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | else return -0.1300956289236427;  // std dev = 0,026, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.13492656892641586;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.00477936596277188;  // std dev = 3,328, 88,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.02002091839933005;  // std dev = 3,809, 172,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=16 */
%   | | | else return -0.10474516475222463;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10474516475222463;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordtitle(G, C) )
%   | | | then return 0.07080725481015386;  // std dev = 0,587, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5917247569342587;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.10836827321852431;  // std dev = 1,804, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return -0.009682404314281927;  // std dev = 3,004, 56,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | else return 0.07018879958486803;  // std dev = 0,479, 3.858,000 (wgt'ed) examples reached here.  /* #neg=2.472 #pos=1.386 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then return -0.003332044681612383;  // std dev = 0,272, 205,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=33 */
%   | | else if ( haswordtitle(J, M), haswordvenue(A, M) )
%   | | | then return 0.029043040705512026;  // std dev = 2,923, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | | else return -0.15586486532550003;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.03805347864937742;  // std dev = 0,257, 225,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.24953509242387995;  // std dev = 2,109, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return -0.04641073066201857;  // std dev = 2,572, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.4450664623240612;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16814608747679805;  // std dev = 1,658, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else return 0.06339857199292039;  // std dev = 0,480, 3.789,000 (wgt'ed) examples reached here.  /* #neg=2.397 #pos=1.392 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then return -0.00570642254784869;  // std dev = 0,277, 203,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=33 */
%   | | else if ( haswordtitle(J, M), haswordvenue(A, M) )
%   | | | then return 0.018965292296377764;  // std dev = 2,933, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | | else return -0.13643886263896884;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.03234630699188316;  // std dev = 0,260, 218,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6529700205941826;  // std dev = 0,171, 1.333,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1.294 */
%   | | else return -0.27221527594685946;  // std dev = 0,162, 2.653,000 (wgt'ed) examples reached here.  /* #neg=2.589 #pos=64 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.20445963865787212;  // std dev = 3,765, 143,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=16 */
%   | | | else return -0.12969473760409386;  // std dev = 0,904, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3565966862064139;  // std dev = 3,073, 43,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   | | | else return 0.03445394784957122;  // std dev = 2,593, 73,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6107495101266796;  // std dev = 0,258, 42,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.0059325130457609015;  // std dev = 0,279, 125,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=22 */
%   | | else return -0.08942117462287823;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.49383803442016966;  // std dev = 0,191, 1.341,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1.294 */
%   | | else return -0.2188686632274562;  // std dev = 0,161, 2.565,000 (wgt'ed) examples reached here.  /* #neg=2.501 #pos=64 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.15768432195979476;  // std dev = 3,757, 137,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=16 */
%   | | | else return -0.08584537463384098;  // std dev = 0,845, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2448614258953585;  // std dev = 3,211, 45,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | | | else return 0.01316822103921193;  // std dev = 2,669, 77,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.46675941604769766;  // std dev = 0,258, 42,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.004911400529380891;  // std dev = 0,283, 123,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=22 */
%   | | else return -0.08240241894529605;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.992012
   AUC PR    = 0.689012
   CLL	      = -0.217923
   Precision = 0.662983 at threshold = 0.5
   Recall    = 0.872727
   F1        = 0.753532


Total learning time: 1770.306 seconds
Total inference time: 54.543 seconds
AUC ROC: 0.992012


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 16:01:46
{'AUC PR': 0.689012, 'AUC ROC': 0.992012, 'Precision': [0.662983, 0.5], 'Inference time': 54.543, 'CLL': -0.217923, 'Recall': 0.872727, 'Learning time': 1770.306, 'F1': 0.753532}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21601183832531365;  // std dev = 0,479, 3.968,000 (wgt'ed) examples reached here.  /* #neg=2.548 #pos=1.420 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.06021841183926325;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | | | else return 0.014670674229947162;  // std dev = 3,896, 115,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
%   | | else if ( title(I, E), venue(I, A) )
%   | | | then return 0.047338124288701315;  // std dev = 4,126, 111,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=21 */
%   | | | else return -0.05851773156715445;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.05937683809636393;  // std dev = 3,832, 194,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=16 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.576911
   AUC PR    = 0.018026
   CLL	      = -0.201691
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 45.28 seconds
Total inference time: 5.181 seconds
AUC ROC: 0.576911


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 16:02:37
{'AUC PR': 0.018026, 'AUC ROC': 0.576911, 'Precision': [nan, 0.5], 'Inference time': 5.181, 'CLL': -0.201691, 'Recall': 0.0, 'Learning time': 45.28, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.14901304536633875;  // std dev = 34,165, 5.659,000 (wgt'ed) examples reached here.  /* #neg=4.013 #pos=1.646 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.12947789828517542;  // std dev = 34,175, 5.667,000 (wgt'ed) examples reached here.  /* #neg=4.021 #pos=1.646 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.11224279227080874;  // std dev = 34,150, 5.647,000 (wgt'ed) examples reached here.  /* #neg=4.001 #pos=1.646 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.09359205912916672;  // std dev = 34,187, 5.677,000 (wgt'ed) examples reached here.  /* #neg=4.031 #pos=1.646 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.08773383392191313;  // std dev = 33,962, 5.500,000 (wgt'ed) examples reached here.  /* #neg=3.854 #pos=1.646 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,86e-07, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.07019486268214443;  // std dev = 34,023, 5.547,000 (wgt'ed) examples reached here.  /* #neg=3.901 #pos=1.646 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,46e-07, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.0566999994296423;  // std dev = 34,046, 5.565,000 (wgt'ed) examples reached here.  /* #neg=3.919 #pos=1.646 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2,76e-07, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.0444370192617349;  // std dev = 34,090, 5.599,000 (wgt'ed) examples reached here.  /* #neg=3.953 #pos=1.646 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.03893943688831743;  // std dev = 34,019, 5.544,000 (wgt'ed) examples reached here.  /* #neg=3.898 #pos=1.646 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.02976494736099576;  // std dev = 34,059, 5.575,000 (wgt'ed) examples reached here.  /* #neg=3.929 #pos=1.646 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.328909
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 17.118 seconds
Total inference time: 3.952 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.582869
   AUC PR    = 0.18347
   CLL	      = -0.325544
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165737
   F1        = 0.284348


Total scoring time: 13.087 seconds
Parameter learned model CLL: -0.325544


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.165, 4013, 1646], 'true': [1.04e-06, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.175, 4021, 1646], 'true': [0.0, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.15, 4001, 1646], 'true': [0.0, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.187, 4031, 1646], 'true': [0.0, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.962, 3854, 1646], 'true': [0.0, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.023, 3901, 1646], 'true': [3.86e-07, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.046, 3919, 1646], 'true': [2.46e-07, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.09, 3953, 1646], 'true': [2.76e-07, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.019, 3898, 1646], 'true': [0.0, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.059, 3929, 1646], 'true': [0.0, 0, 327]}]]
[{'': [3.3028286188237073e-15, 0.20626217962545693]}, {'': [-5.041159470836185e-15, 0.2060902654840551]}, {'': [-4.3458271300311937e-16, 0.20652032830907632]}, {'': [-9.560819686068626e-16, 0.20587558231761896]}, {'': [-6.301449338545231e-16, 0.20970856198343546]}, {'': [4.563118486532754e-16, 0.20868414264407725]}, {'': [1.8469765302632573e-16, 0.20829303929945253]}, {'': [2.3358820823917666e-16, 0.20755619967732336]}, {'': [-2.281559243266377e-16, 0.20874939354379404]}, {'': [-2.091429306327512e-16, 0.20807606024654407]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3164822684328448;  // std dev = 3,452, 48,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=22 */
%   | | | else return 0.03672036367094095;  // std dev = 3,510, 84,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08263873101787853;  // std dev = 5,059, 147,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=33 */
%   | | | else return 0.17043920355588302;  // std dev = 32,000, 4.768,000 (wgt'ed) examples reached here.  /* #neg=3.279 #pos=1.489 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.04246266058970803;  // std dev = 6,192, 255,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=47 */
%   | | | else return -0.0039200304177290255;  // std dev = 3,714, 116,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.058806082201525965;  // std dev = 4,691, 289,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15154510854442627;  // std dev = 0,464, 4.947,000 (wgt'ed) examples reached here.  /* #neg=3.388 #pos=1.559 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.047937496740560685;  // std dev = 6,085, 236,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=46 */
%   | | | else return -0.019690143941658557;  // std dev = 3,864, 139,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=17 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.054842273492412066;  // std dev = 4,699, 300,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=24 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12730874652981153;  // std dev = 0,463, 4.988,000 (wgt'ed) examples reached here.  /* #neg=3.429 #pos=1.559 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03703829992292232;  // std dev = 6,103, 242,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=46 */
%   | | | else return -0.006850218185099319;  // std dev = 3,841, 128,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=17 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.039352202042484824;  // std dev = 4,675, 269,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=24 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11294997878366234;  // std dev = 0,466, 4.898,000 (wgt'ed) examples reached here.  /* #neg=3.339 #pos=1.559 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.009017626364380842;  // std dev = 6,455, 305,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=50 */
%   | | | else return 0.055762579753031824;  // std dev = 3,236, 67,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | else return -0.034167660877685004;  // std dev = 0,285, 268,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09105397508148148;  // std dev = 0,465, 4.941,000 (wgt'ed) examples reached here.  /* #neg=3.382 #pos=1.559 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0420954866858298;  // std dev = 6,126, 234,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=47 */
%   | | | else return -0.005155524215047172;  // std dev = 3,715, 115,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.12055677351160489;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.029050649142150404;  // std dev = 4,669, 263,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,86e-07, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1711883075077717;  // std dev = 3,510, 50,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   | | | else return -0.009145094444585772;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | else return 0.07900106927484782;  // std dev = 0,466, 4.761,000 (wgt'ed) examples reached here.  /* #neg=3.239 #pos=1.522 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.026402209693949866;  // std dev = 5,343, 196,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=35 */
%   | | | else return -0.0060792496513513185;  // std dev = 4,854, 178,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=28 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.032809922901450295;  // std dev = 4,686, 284,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=24 */
%   | | | else return -0.0959696973312324;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,46e-07, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06385946870992894;  // std dev = 0,466, 4.883,000 (wgt'ed) examples reached here.  /* #neg=3.324 #pos=1.559 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03309857626137127;  // std dev = 6,067, 232,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=46 */
%   | | | else return -0.02724851086598471;  // std dev = 3,868, 143,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=17 */
%   | | else return -0.028175624198393295;  // std dev = 0,279, 281,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2,76e-07, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.11394349847879331;  // std dev = 3,537, 51,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | | | else return 0.003835625999175519;  // std dev = 3,397, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | else return 0.04729764907011127;  // std dev = 0,465, 4.830,000 (wgt'ed) examples reached here.  /* #neg=3.308 #pos=1.522 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.03092147642698987;  // std dev = 6,058, 229,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=46 */
%   | | | else return -0.02334223178416647;  // std dev = 3,867, 142,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=17 */
%   | | else return -0.031094956172072558;  // std dev = 0,270, 302,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.15738639009290264;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return -0.022127759476510862;  // std dev = 3,452, 73,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.003687558851084542;  // std dev = 4,928, 125,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=33 */
%   | | | else return 0.03649824543217471;  // std dev = 31,959, 4.741,000 (wgt'ed) examples reached here.  /* #neg=3.252 #pos=1.489 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.02037241145821295;  // std dev = 5,344, 198,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=35 */
%   | | | else return -0.015314745539031597;  // std dev = 4,857, 181,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=28 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.022610489722850527;  // std dev = 4,684, 281,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=24 */
%   | | | else return -0.08331993596523568;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.028829224444776543;  // std dev = 0,463, 4.977,000 (wgt'ed) examples reached here.  /* #neg=3.418 #pos=1.559 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.017992923351569944;  // std dev = 5,342, 198,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=35 */
%   | | | else return -0.018766494461618207;  // std dev = 4,873, 188,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.016482678513371467;  // std dev = 4,674, 268,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=24 */
%   | | | else return -0.07717310856486756;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.646437
   AUC PR    = 0.184017
   CLL	      = -0.304986
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 310.854 seconds
Total inference time: 11.612 seconds
AUC ROC: 0.646437


Results scoring model
   AUC ROC   = 0.628444
   AUC PR    = 0.188053
   CLL	      = -0.322599
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165737
   F1        = 0.284348


Total scoring time: 91.173 seconds
Refined model CLL: -0.322599


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.646437
   AUC PR    = 0.184017
   CLL	      = -0.304986
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 432.23199999999997 seconds
Total inference time: 11.612 seconds
AUC ROC: 0.646437
Total revision time: 432.23199999999997
Best scored revision CLL: -0.322599


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 16:10:07
{'AUC PR': 0.184017, 'AUC ROC': 0.646437, 'Precision': [1.0, 0.5], 'Inference time': 11.612, 'parameter_0.8': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.952, 'CLL': -0.328909, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 17.118}, 'CLL': -0.304986, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 432.23199999999997}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2162275377195945;  // std dev = 0,479, 5.267,000 (wgt'ed) examples reached here.  /* #neg=3.381 #pos=1.886 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.005487428536851416;  // std dev = 1,610, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.03792421599838787;  // std dev = 5,123, 178,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=32 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.012434649385226086;  // std dev = 4,779, 175,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=27 */
%   | | | else return -0.0793510649004878;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0604951326970981;  // std dev = 4,695, 295,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19453503252337814;  // std dev = 0,481, 5.170,000 (wgt'ed) examples reached here.  /* #neg=3.284 #pos=1.886 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8145227770261865;  // std dev = 1,383, 49,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | | else return -0.1439489474727182;  // std dev = 0,039, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.14389799057246788;  // std dev = 0,004, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.014994440188391998;  // std dev = 3,668, 100,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.04988357022926239;  // std dev = 4,588, 272,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=23 */
%   | | | else return -0.09427732215896062;  // std dev = 0,979, 25,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8004704752500653;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.1995295247499351;  // std dev = 2,11e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.1370295247499351;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.19630380858339888;  // std dev = 3,388, 48,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | else return 0.16271236315564339;  // std dev = 0,481, 5.085,000 (wgt'ed) examples reached here.  /* #neg=3.243 #pos=1.842 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.5916282236115903;  // std dev = 2,463, 53,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=46 */
%   | | | else return -0.12762971390455072;  // std dev = 0,018, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | | else return -0.01081601983462095;  // std dev = 0,337, 127,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=17 */
%   | else return -0.04802671545111161;  // std dev = 0,271, 300,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.3645346261356651;  // std dev = 2,650, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.15521306739236057;  // std dev = 2,833, 34,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return 0.5781041572158704;  // std dev = 0,846, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14058330243262168;  // std dev = 2,138, 58,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
%   | else return 0.12708082905092902;  // std dev = 0,477, 5.213,000 (wgt'ed) examples reached here.  /* #neg=3.367 #pos=1.846 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then return 0.02638546315945506;  // std dev = 0,291, 223,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=46 */
%   | | else if ( haswordtitle(J, L), haswordauthor(M, L) )
%   | | | then return -0.06216441587773672;  // std dev = 1,919, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | | else return 0.029631988461946774;  // std dev = 3,237, 73,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=13 */
%   | else return -0.030056451443296148;  // std dev = 0,290, 259,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10597342654214831;  // std dev = 0,477, 5.299,000 (wgt'ed) examples reached here.  /* #neg=3.413 #pos=1.886 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return 0.05608326185538967;  // std dev = 1,051, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.010124530301170744;  // std dev = 4,446, 186,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.0021785325886991167;  // std dev = 3,372, 156,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
%   | | | else return -0.06330607574611248;  // std dev = 0,965, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.028559815383059232;  // std dev = 4,669, 262,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=24 */
%   | | | else return -0.11579622128643295;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1047638404583652;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08558831854971541;  // std dev = 0,477, 5.299,000 (wgt'ed) examples reached here.  /* #neg=3.413 #pos=1.886 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return -0.019489599302821594;  // std dev = 3,588, 185,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=28 */
%   | | | else return 0.0294757601192748;  // std dev = 3,212, 103,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
%   | | else return 0.03503226455733679;  // std dev = 0,387, 69,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.02882220051447398;  // std dev = 4,577, 261,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=23 */
%   | | | else return -0.07214118742484919;  // std dev = 0,980, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else return -0.09533715567128852;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.3418135512405372;  // std dev = 2,325, 26,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return 0.03992406185365409;  // std dev = 2,942, 39,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return -0.1700463793102085;  // std dev = 1,712, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | | else return 0.2041569294948406;  // std dev = 1,605, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0.07252738519816075;  // std dev = 0,479, 5.126,000 (wgt'ed) examples reached here.  /* #neg=3.280 #pos=1.846 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then return 0.011619244966537533;  // std dev = 0,280, 249,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=47 */
%   | | else if ( title(M, K), venue(M, B) )
%   | | | then return -0.11988184762283208;  // std dev = 0,004, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.02770044131532256;  // std dev = 3,747, 130,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=16 */
%   | else return -0.03810274224054024;  // std dev = 0,262, 322,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.2363780532680767;  // std dev = 2,416, 27,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.02307250697214729;  // std dev = 2,961, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return 0.443170931395541;  // std dev = 0,802, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.13581931479091375;  // std dev = 2,046, 62,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=5 */
%   | else return 0.058070518461068844;  // std dev = 0,479, 5.119,000 (wgt'ed) examples reached here.  /* #neg=3.273 #pos=1.846 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then return 0.015851763234365747;  // std dev = 0,285, 237,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=47 */
%   | | else if ( title(L, J), venue(L, B) )
%   | | | then return -0.10779843008033564;  // std dev = 0,004, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.012402681550408919;  // std dev = 3,723, 118,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=16 */
%   | else return -0.03396788490722485;  // std dev = 0,263, 319,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.4966834390185854;  // std dev = 0,105, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return -0.06473031301494447;  // std dev = 4,307, 118,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=29 */
%   | | | else return 0.5516084184203172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.0450256790106016;  // std dev = 0,479, 5.126,000 (wgt'ed) examples reached here.  /* #neg=3.280 #pos=1.846 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then if ( haswordauthor(L, I) )
%   | | | then return 0.05500646599733056;  // std dev = 1,562, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.007200978503260398;  // std dev = 4,290, 179,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=32 */
%   | | else if ( title(M, J), venue(M, B) )
%   | | | then return -0.0071921533797352725;  // std dev = 3,340, 168,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=27 */
%   | | | else return -0.05912906269368734;  // std dev = 0,967, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | else return -0.0244702067984915;  // std dev = 0,274, 294,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02217060541017871;  // std dev = 0,474, 4.982,000 (wgt'ed) examples reached here.  /* #neg=3.254 #pos=1.728 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6279772327855639;  // std dev = 3,351, 86,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=72 */
%   | | | else return -0.11844291756322319;  // std dev = 1,044, 330,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.20744234091696592;  // std dev = 4,407, 188,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=22 */
%   | | | else return -0.03546526618704687;  // std dev = 1,064, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.36647724950392685;  // std dev = 3,810, 68,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | | | else return 0.06272450583696738;  // std dev = 3,334, 97,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=26 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5791469327618455;  // std dev = 0,295, 52,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=47 */
%   | else return -0.017452510375374816;  // std dev = 0,257, 191,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=28 */


Results
   AUC ROC   = 0.667335
   AUC PR    = 0.075786
   CLL	      = -0.339564
   Precision = 0.344828 at threshold = 0.5
   Recall    = 0.018182
   F1        = 0.034542


Total learning time: 2323.855 seconds
Total inference time: 26.078 seconds
AUC ROC: 0.667335


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 16:49:17
{'AUC PR': 0.075786, 'AUC ROC': 0.667335, 'Precision': [0.344828, 0.5], 'Inference time': 26.078, 'CLL': -0.339564, 'Recall': 0.018182, 'Learning time': 2323.855, 'F1': 0.034542}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.4581489350995123;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.20950028645086372;  // std dev = 2,904, 37,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07855992565998136;  // std dev = 2,164, 79,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.265556342506919;  // std dev = 3,611, 54,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | | else return 0.0636283871543069;  // std dev = 3,452, 73,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | else return 0.22089206724308044;  // std dev = 0,481, 4.987,000 (wgt'ed) examples reached here.  /* #neg=3.178 #pos=1.809 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then if ( title(N, M), venue(N, A) )
%   | | then if ( samebib(N, P), venue(P, B) )
%   | | | then return 0.7797175625504926;  // std dev = 1,920, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return -0.14185106490048832;  // std dev = 0,000, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else if ( title(Q, M), venue(Q, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -2.581445465053424E-4;  // std dev = 3,706, 113,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=16 */
%   | else if ( haswordvenue(A, R), haswordauthor(S, R) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, T), haswordtitle(U, T) )
%   | | | then return -0.05329017929163179;  // std dev = 4,677, 271,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.634268
   AUC PR    = 0.070158
   CLL	      = -0.199678
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 111.78 seconds
Total inference time: 5.522 seconds
AUC ROC: 0.634268


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 16:51:15
{'AUC PR': 0.070158, 'AUC ROC': 0.634268, 'Precision': [nan, 0.5], 'Inference time': 5.522, 'CLL': -0.199678, 'Recall': 0.0, 'Learning time': 111.78, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,72e-06, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.15032532201273616;  // std dev = 38,130, 7.030,000 (wgt'ed) examples reached here.  /* #neg=4.976 #pos=2.054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.13438664572196488;  // std dev = 38,039, 6.950,000 (wgt'ed) examples reached here.  /* #neg=4.896 #pos=2.054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.11297900710540722;  // std dev = 38,104, 7.007,000 (wgt'ed) examples reached here.  /* #neg=4.953 #pos=2.054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.09997257146654745;  // std dev = 37,988, 6.906,000 (wgt'ed) examples reached here.  /* #neg=4.852 #pos=2.054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07658700311215148;  // std dev = 38,179, 7.074,000 (wgt'ed) examples reached here.  /* #neg=5.020 #pos=2.054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4,42e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.06570804134580312;  // std dev = 38,117, 7.019,000 (wgt'ed) examples reached here.  /* #neg=4.965 #pos=2.054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.05709257884822049;  // std dev = 38,033, 6.945,000 (wgt'ed) examples reached here.  /* #neg=4.891 #pos=2.054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7,30e-08, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.0461393225469873;  // std dev = 38,045, 6.955,000 (wgt'ed) examples reached here.  /* #neg=4.901 #pos=2.054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.03622328467667745;  // std dev = 38,077, 6.983,000 (wgt'ed) examples reached here.  /* #neg=4.929 #pos=2.054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.02519976725227884;  // std dev = 38,185, 7.080,000 (wgt'ed) examples reached here.  /* #neg=5.026 #pos=2.054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.326986
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 26.251 seconds
Total inference time: 3.876 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.323574
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 14.494 seconds
Parameter learned model CLL: -0.323574


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.13, 4976, 2054], 'true': [1.72e-06, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.039, 4896, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.104, 4953, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.988, 4852, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.179, 5020, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.117, 4965, 2054], 'true': [4.42e-07, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.033, 4891, 2054], 'true': [2.46e-07, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.045, 4901, 2054], 'true': [7.3e-08, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.077, 4929, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.185, 5026, 2054], 'true': [0.0, 0, 413]}]]
[{'': [7.157040631385029e-15, 0.2068093458434959]}, {'': [-5.4365981719174735e-15, 0.20819593188762653]}, {'': [-1.3419451183846928e-15, 0.20720705215804414]}, {'': [-2.1677574989291194e-15, 0.2089623691071474]}, {'': [-1.4623760905474218e-15, 0.20605067684262116]}, {'': [4.731216763535776e-16, 0.20699945750007817]}, {'': [1.4623760905474217e-16, 0.2082828933080471]}, {'': [1.2903318446006663e-17, 0.20810900515325087]}, {'': [-3.5699181033951763e-16, 0.20762286200310154]}, {'': [-3.4193793881917656e-16, 0.20594744485935268]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,72e-06, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1744371233040489;  // std dev = 0,465, 6.121,000 (wgt'ed) examples reached here.  /* #neg=4.185 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.05224176210373128;  // std dev = 6,089, 237,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=46 */
%   | | | else return 0.005087710609715592;  // std dev = 5,542, 245,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.04481602446922138;  // std dev = 5,701, 371,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27376313753543585;  // std dev = 4,681, 89,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=39 */
%   | | | else return -0.05674680196326835;  // std dev = 2,499, 65,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
%   | | else return 0.15262178616722244;  // std dev = 0,465, 5.961,000 (wgt'ed) examples reached here.  /* #neg=4.071 #pos=1.890 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.050036083720644;  // std dev = 6,832, 298,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=58 */
%   | | | else return -0.005729006405170328;  // std dev = 4,537, 169,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.029428501673618067;  // std dev = 5,669, 337,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=36 */
%   | | | else return -0.13648270483124372;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12612029456293689;  // std dev = 0,463, 6.194,000 (wgt'ed) examples reached here.  /* #neg=4.258 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.02634486902517;  // std dev = 7,142, 351,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=62 */
%   | | | else return 0.060758714289486336;  // std dev = 3,977, 96,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=20 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.029854792446613918;  // std dev = 5,681, 350,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=36 */
%   | | | else return -0.12118046067230191;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.24867123762120893;  // std dev = 4,522, 82,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=39 */
%   | | | else return -0.07959953118174763;  // std dev = 2,518, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07071781493830016;  // std dev = 5,767, 166,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=46 */
%   | | | else return 0.10968754369910572;  // std dev = 35,513, 5.834,000 (wgt'ed) examples reached here.  /* #neg=3.990 #pos=1.844 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.04359065177837948;  // std dev = 6,760, 288,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=57 */
%   | | | else return -0.0022028963863385044;  // std dev = 4,602, 165,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=25 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.023856566252879526;  // std dev = 5,673, 341,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=36 */
%   | | | else return -0.10885609047909937;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1414077930476967;  // std dev = 4,777, 94,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=39 */
%   | | | else return -0.09441142936739562;  // std dev = 2,553, 102,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=7 */
%   | | else return 0.09011754858290558;  // std dev = 0,464, 6.002,000 (wgt'ed) examples reached here.  /* #neg=4.112 #pos=1.890 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.039649696458618176;  // std dev = 6,067, 232,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=46 */
%   | | | else return 0.006459032074092738;  // std dev = 5,486, 221,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.021313898954682945;  // std dev = 5,674, 341,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=36 */
%   | | | else return -0.09873718535400257;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4,42e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.22756075482216;  // std dev = 3,595, 52,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | | else return 0.005522804627240373;  // std dev = 4,098, 91,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.07661474318806887;  // std dev = 5,304, 151,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=46 */
%   | | | else return 0.07761064029458602;  // std dev = 35,446, 5.787,000 (wgt'ed) examples reached here.  /* #neg=3.943 #pos=1.844 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.032307762906914006;  // std dev = 6,825, 299,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=58 */
%   | | | else return -0.0024766711948579836;  // std dev = 4,500, 154,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=24 */
%   | | else return -0.025607245742986364;  // std dev = 0,297, 367,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05832797708763876;  // std dev = 0,463, 6.171,000 (wgt'ed) examples reached here.  /* #neg=4.235 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.06405679268386293;  // std dev = 1,651, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | | else return 0.0275260287281957;  // std dev = 7,979, 413,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=79 */
%   | | else return -0.02763646200637069;  // std dev = 0,291, 385,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7,30e-08, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.047476487619102205;  // std dev = 0,464, 6.164,000 (wgt'ed) examples reached here.  /* #neg=4.228 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.0710836185362619;  // std dev = 1,666, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | | else return -0.17059831379006793;  // std dev = 0,013, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.022465927611854966;  // std dev = 7,987, 415,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=79 */
%   | | | else return -0.019363032734503866;  // std dev = 5,691, 365,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03266138452740261;  // std dev = 35,069, 5.783,000 (wgt'ed) examples reached here.  /* #neg=3.999 #pos=1.784 */
%   | | | else return 0.04821810438818805;  // std dev = 8,437, 516,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=99 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.14173369946107495;  // std dev = 5,183, 264,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=31 */
%   | | | else return 0.13953587440934745;  // std dev = 6,548, 197,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=71 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.4432347965774925;  // std dev = 2,936, 43,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */
%   | | | else return 0.3905087921700547;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023459566545897547;  // std dev = 5,390, 188,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=36 */
%   | | | else return -0.08450306531155731;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.038131663393438486;  // std dev = 0,465, 6.045,000 (wgt'ed) examples reached here.  /* #neg=4.109 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.016003171421228375;  // std dev = 6,801, 292,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=58 */
%   | | | else return -0.008128877156764221;  // std dev = 4,488, 151,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.11197806301516519;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.017985266691615553;  // std dev = 5,671, 354,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=36 */


Results
   AUC ROC   = 0.654299
   AUC PR    = 0.183097
   CLL	      = -0.310586
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1192.864 seconds
Total inference time: 15.265 seconds
AUC ROC: 0.654299


Results scoring model
   AUC ROC   = 0.655959
   AUC PR    = 0.202657
   CLL	      = -0.323062
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 223.713 seconds
Refined model CLL: -0.323062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.654299
   AUC PR    = 0.183097
   CLL	      = -0.310586
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1457.322 seconds
Total inference time: 15.265 seconds
AUC ROC: 0.654299
Total revision time: 1457.322
Best scored revision CLL: -0.323062


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 17:15:54
{'AUC PR': 0.183097, 'AUC ROC': 0.654299, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.876, 'CLL': -0.326986, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 26.251}, 'Inference time': 15.265, 'CLL': -0.310586, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1457.322}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21688442685271422;  // std dev = 0,480, 6.548,000 (wgt'ed) examples reached here.  /* #neg=4.199 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return 0.04286231089569082;  // std dev = 0,388, 314,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=58 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.06609348914291195;  // std dev = 2,150, 66,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=5 */
%   | | | else return 0.04084124279182004;  // std dev = 3,941, 104,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=19 */
%   | else return -0.04507687135210113;  // std dev = 0,296, 372,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1868533358505221;  // std dev = 0,479, 6.576,000 (wgt'ed) examples reached here.  /* #neg=4.227 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.044281185896311005;  // std dev = 1,654, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | | else return 0.03689806799793283;  // std dev = 6,937, 323,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=59 */
%   | | else return 0.09700052634940978;  // std dev = 0,429, 82,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.03526148940038886;  // std dev = 5,528, 336,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=34 */
%   | | | else return -0.09389877410150305;  // std dev = 1,384, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | else return -0.13645196559086473;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1640341593438137;  // std dev = 0,481, 6.481,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.030396414654149335;  // std dev = 2,311, 55,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
%   | | | else return 0.0812092017308153;  // std dev = 5,525, 169,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=40 */
%   | | else if ( title(I, E), venue(I, A) )
%   | | | then return 0.025295958207000202;  // std dev = 5,289, 192,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=34 */
%   | | | else return -0.06231437695575329;  // std dev = 1,360, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return -0.13125175059437807;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.02005762267024836;  // std dev = 5,654, 322,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=36 */
%   | | else return -0.1211559573208563;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13179697616757977;  // std dev = 0,479, 6.569,000 (wgt'ed) examples reached here.  /* #neg=4.220 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.0034118230527082154;  // std dev = 2,267, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | | else return 0.04952946420516917;  // std dev = 5,600, 185,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=40 */
%   | | else if ( haswordauthor(I, D) )
%   | | | then return -0.14024609853690095;  // std dev = 0,020, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.005706175951023998;  // std dev = 5,501, 226,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=36 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.023031535104920786;  // std dev = 5,510, 318,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=34 */
%   | | | else return -0.05868308589771628;  // std dev = 1,367, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else return -0.10883614714228564;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11526241967432181;  // std dev = 0,481, 6.437,000 (wgt'ed) examples reached here.  /* #neg=4.088 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return -0.13828918057758222;  // std dev = 0,035, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.044368192932447245;  // std dev = 1,660, 37,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.02657351836798533;  // std dev = 6,865, 311,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=58 */
%   | | | else return -0.008642995824276628;  // std dev = 4,179, 132,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=21 */
%   | else return -0.032213751420098274;  // std dev = 0,291, 384,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0838261101856548;  // std dev = 0,479, 6.604,000 (wgt'ed) examples reached here.  /* #neg=4.255 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7272578902936585;  // std dev = 2,486, 64,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=57 */
%   | | | else return -0.16052012604235869;  // std dev = 0,148, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.060634342947560815;  // std dev = 2,182, 65,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=5 */
%   | | | else return 8.212275345031284E-4;  // std dev = 4,054, 113,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=20 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return -0.021694331567980313;  // std dev = 5,524, 334,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=34 */
%   | | | else return -0.001061840587663601;  // std dev = 1,336, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return -0.09589126925975709;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06643475936983273;  // std dev = 0,479, 6.613,000 (wgt'ed) examples reached here.  /* #neg=4.264 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6642865664808529;  // std dev = 1,691, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return -0.1423546163143934;  // std dev = 0,121, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.018414619494345374;  // std dev = 2,122, 50,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | | else return 0.016308797517274733;  // std dev = 3,914, 99,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.014804152934653089;  // std dev = 5,510, 319,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=34 */
%   | | | else return -0.04021162669685744;  // std dev = 1,359, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.08789389628819617;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.04012519612354349;  // std dev = 0,475, 6.241,000 (wgt'ed) examples reached here.  /* #neg=4.102 #pos=2.139 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7185552614269953;  // std dev = 2,682, 106,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=98 */
%   | | | else return -0.13431024937207306;  // std dev = 1,113, 390,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.17475445889017618;  // std dev = 4,942, 219,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=28 */
%   | | | else return -0.09145836351333728;  // std dev = 1,451, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3912692108516921;  // std dev = 4,562, 98,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=68 */
%   | | | else return 0.04622312769572955;  // std dev = 3,792, 134,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=33 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.635853198292823;  // std dev = 0,240, 65,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=61 */
%   | else return -0.008130406864715492;  // std dev = 0,269, 217,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5952442457625313;  // std dev = 0,264, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.11742875600863326;  // std dev = 3,703, 56,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | | | else return -0.014887004261180845;  // std dev = 3,927, 75,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | else return 0.04249379319505545;  // std dev = 0,475, 6.443,000 (wgt'ed) examples reached here.  /* #neg=4.151 #pos=2.292 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.48931335466969733;  // std dev = 1,916, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return -0.1264276645148084;  // std dev = 0,137, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.041044728365779964;  // std dev = 1,419, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.03567368957039255;  // std dev = 3,688, 156,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=21 */
%   | else return -0.01954121091927908;  // std dev = 0,267, 365,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02478320685747855;  // std dev = 0,475, 6.194,000 (wgt'ed) examples reached here.  /* #neg=4.055 #pos=2.139 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6073192460347046;  // std dev = 2,309, 103,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=98 */
%   | | | else return -0.11998542072166221;  // std dev = 1,203, 421,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.15840180950858504;  // std dev = 4,971, 240,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=28 */
%   | | | else return -0.05803425840564228;  // std dev = 1,437, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3118723307286496;  // std dev = 4,383, 95,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=68 */
%   | | | else return 0.03609958222185864;  // std dev = 3,306, 132,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=33 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.47752199112758376;  // std dev = 0,240, 65,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=61 */
%   | else return -0.01765940892303487;  // std dev = 0,232, 214,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=36 */


Results
   AUC ROC   = 0.698486
   AUC PR    = 0.09039
   CLL	      = -0.334741
   Precision = 0.471698 at threshold = 0.5
   Recall    = 0.090909
   F1        = 0.152439


Total learning time: 4244.398 seconds
Total inference time: 32.118 seconds
AUC ROC: 0.698486


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 18:27:11
{'AUC PR': 0.09039, 'AUC ROC': 0.698486, 'Precision': [0.471698, 0.5], 'Inference time': 32.118, 'CLL': -0.334741, 'Recall': 0.090909, 'Learning time': 4244.398, 'F1': 0.152439}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21405802600859805;  // std dev = 0,479, 6.600,000 (wgt'ed) examples reached here.  /* #neg=4.251 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.030433579294268483;  // std dev = 0,378, 267,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=46 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.0025068026054064344;  // std dev = 5,409, 244,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=34 */
%   | | | else return -0.05094197399139689;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.03787552973229249;  // std dev = 5,519, 327,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=34 */
%   | | | else return -0.07042249347191638;  // std dev = 1,363, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.572653
   AUC PR    = 0.017942
   CLL	      = -0.202145
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 59.395 seconds
Total inference time: 4.571 seconds
AUC ROC: 0.572653


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 18:28:16
{'AUC PR': 0.017942, 'AUC ROC': 0.572653, 'Precision': [nan, 0.5], 'Inference time': 4.571, 'CLL': -0.202145, 'Recall': 0.0, 'Learning time': 59.395, 'F1': nan}


