Starting experiment #5 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048902;  // std dev = 0,000, 691,000 (wgt'ed) examples reached here.  /* #neg=691 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.12544463852839238;  // std dev = 0,000, 746,000 (wgt'ed) examples reached here.  /* #neg=746 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360651;  // std dev = 0,000, 699,000 (wgt'ed) examples reached here.  /* #neg=699 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783617;  // std dev = 5,27e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.10159632948783509;  // std dev = 4,55e-07, 714,000 (wgt'ed) examples reached here.  /* #neg=714 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926205;  // std dev = 0,000, 701,000 (wgt'ed) examples reached here.  /* #neg=701 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839675;  // std dev = 1,40e-07, 731,000 (wgt'ed) examples reached here.  /* #neg=731 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109173;  // std dev = 2,36e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109289;  // std dev = 0,000, 737,000 (wgt'ed) examples reached here.  /* #neg=737 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07324622576333649;  // std dev = 2,49e-07, 711,000 (wgt'ed) examples reached here.  /* #neg=711 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06842697784420256;  // std dev = 1,85e-07, 701,000 (wgt'ed) examples reached here.  /* #neg=701 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202539;  // std dev = 2,48e-07, 689,000 (wgt'ed) examples reached here.  /* #neg=689 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 218007

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 31946

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.15095939261584723;  // std dev = 17,799, 1.530,000 (wgt'ed) examples reached here.  /* #neg=1.082 #pos=448 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.12723526505221885;  // std dev = 17,854, 1.553,000 (wgt'ed) examples reached here.  /* #neg=1.105 #pos=448 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.11438215425473498;  // std dev = 17,790, 1.526,000 (wgt'ed) examples reached here.  /* #neg=1.078 #pos=448 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 8,43e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.1129652761400637;  // std dev = 17,587, 1.447,000 (wgt'ed) examples reached here.  /* #neg=999 #pos=448 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.08577385037171598;  // std dev = 17,698, 1.489,000 (wgt'ed) examples reached here.  /* #neg=1.041 #pos=448 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.0626852292215293;  // std dev = 17,802, 1.531,000 (wgt'ed) examples reached here.  /* #neg=1.083 #pos=448 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.06458137645134213;  // std dev = 17,635, 1.465,000 (wgt'ed) examples reached here.  /* #neg=1.017 #pos=448 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3,65e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.03957258748844549;  // std dev = 17,799, 1.530,000 (wgt'ed) examples reached here.  /* #neg=1.082 #pos=448 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367116;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.046476050995290875;  // std dev = 17,617, 1.458,000 (wgt'ed) examples reached here.  /* #neg=1.010 #pos=448 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,58e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.025272223793350135;  // std dev = 17,770, 1.518,000 (wgt'ed) examples reached here.  /* #neg=1.070 #pos=448 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.32898
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 3.887 seconds
Total inference time: 3.608 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.57656
   AUC PR    = 0.171615
   CLL	      = -0.330884
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153119
   F1        = 0.265574


Total scoring time: 4.809 seconds
Parameter learned model CLL: -0.330884


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.799, 1082, 448], 'true': [0.0, 0, 81]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.854, 1105, 448], 'true': [2.53e-07, 0, 81]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.79, 1078, 448], 'true': [3.42e-07, 0, 81]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.587, 999, 448], 'true': [8.43e-08, 0, 81]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.698, 1041, 448], 'true': [0.0, 0, 81]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.802, 1083, 448], 'true': [0.0, 0, 81]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.635, 1017, 448], 'true': [0.0, 0, 81]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.799, 1082, 448], 'true': [3.65e-08, 0, 81]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.617, 1010, 448], 'true': [0.0, 0, 81]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.77, 1070, 448], 'true': [5.58e-08, 0, 81]}]]
[{'': [-7.894919286223335e-16, 0.20707249348539425]}, {'': [7.894919286223335e-16, 0.20525671809004228]}, {'': [1.4474018691409447e-15, 0.20738995034089402]}, {'': [8.77213254024815e-17, 0.2137501558165178]}, {'': [-2.8509430755806487e-16, 0.21034846541978736]}, {'': [-4.386066270124075e-17, 0.20699320509170727]}, {'': [-8.22387425648264e-17, 0.21228715535415785]}, {'': [1.644774851296528e-17, 0.20707249348540885]}, {'': [-4.9343245538895844e-17, 0.21285523698775088]}, {'': [3.8378079863585656e-17, 0.208026301856864]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18807019494202712;  // std dev = 0,470, 1.270,000 (wgt'ed) examples reached here.  /* #neg=851 #pos=419 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.022854817452453553;  // std dev = 3,420, 85,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=14 */
%   | | | else return -0.06021841183926325;  // std dev = 1,917, 49,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.18167834686421824;  // std dev = 2,728, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15426062642793859;  // std dev = 0,467, 1.307,000 (wgt'ed) examples reached here.  /* #neg=888 #pos=419 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.231385385569672;  // std dev = 0,483, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05275469436999679;  // std dev = 3,875, 93,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | | else return -0.006850125736809846;  // std dev = 2,453, 52,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12692573445459382;  // std dev = 0,465, 1.327,000 (wgt'ed) examples reached here.  /* #neg=908 #pos=419 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.026281800941734303;  // std dev = 3,470, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | | else return -0.02333081859994113;  // std dev = 2,465, 54,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=7 */
%   | | else return -0.049870546474250266;  // std dev = 0,293, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 8,43e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.09865589027296279;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.20903641741934503;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.11741314572600905;  // std dev = 0,469, 1.259,000 (wgt'ed) examples reached here.  /* #neg=848 #pos=411 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.020222123060732494;  // std dev = 3,621, 120,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=15 */
%   | | | else return 0.1059654154891186;  // std dev = 1,493, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.06808743340419822;  // std dev = 0,429, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10581728318279231;  // std dev = 0,471, 1.253,000 (wgt'ed) examples reached here.  /* #neg=834 #pos=419 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.025452544541352987;  // std dev = 3,633, 130,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=15 */
%   | | | else return 0.09473224040882733;  // std dev = 1,488, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.0741327190406247;  // std dev = 0,439, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06704293637430302;  // std dev = 0,464, 1.331,000 (wgt'ed) examples reached here.  /* #neg=912 #pos=419 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.006070562324331204;  // std dev = 3,809, 97,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=18 */
%   | | | else return 0.06742687208680044;  // std dev = 1,779, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.15915057060207677;  // std dev = 0,013, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.005909556838011247;  // std dev = 2,471, 56,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.205100357742623;  // std dev = 1,443, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.09516717184240228;  // std dev = 1,810, 29,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else return 0.06358524770226992;  // std dev = 0,468, 1.266,000 (wgt'ed) examples reached here.  /* #neg=855 #pos=411 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0073588053045459175;  // std dev = 3,831, 106,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return 0.060715853007835906;  // std dev = 1,774, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.012064057743157336;  // std dev = 2,481, 59,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=7 */
%   | | | else return -0.13443971512980887;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3,65e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7038223624796129;  // std dev = 3,284, 402,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=391 */
%   | | | else return -0.2420882836865553;  // std dev = 4,442, 983,000 (wgt'ed) examples reached here.  /* #neg=964 #pos=19 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1730199269124194;  // std dev = 2,132, 60,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=5 */
%   | | | else return 0.10770390007360672;  // std dev = 2,946, 45,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.14790732717357924;  // std dev = 3,211, 47,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return -0.016059865616374444;  // std dev = 1,227, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return -0.11954974631503694;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367116;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.01780072113696993;  // std dev = 13,253, 1.247,000 (wgt'ed) examples reached here.  /* #neg=862 #pos=385 */
%   | | | else return -0.06452373939256158;  // std dev = 3,117, 68,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.08437978736575182;  // std dev = 3,786, 111,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=28 */
%   | | | else return 0.04060027016897722;  // std dev = 1,555, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.502844780538862;  // std dev = 0,395, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.040993154213582524;  // std dev = 2,844, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return -0.10752735308657929;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,58e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5347321509065549;  // std dev = 3,755, 406,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=392 */
%   | | | else return -0.2029180301411948;  // std dev = 4,040, 933,000 (wgt'ed) examples reached here.  /* #neg=917 #pos=16 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.01021446220568852;  // std dev = 2,323, 31,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.13613209027550857;  // std dev = 2,854, 38,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.12402537978023746;  // std dev = 0,457, 49,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | else return -0.09763544957006093;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.955542
   AUC PR    = 0.616017
   CLL	      = -0.21735
   Precision = 0.455505 at threshold = 0.5
   Recall    = 0.820652
   F1        = 0.585839


Total learning time: 472.62 seconds
Total inference time: 27.698 seconds
AUC ROC: 0.955542


Results scoring model
   AUC ROC   = 0.973255
   AUC PR    = 0.556507
   CLL	      = -0.227316
   Precision = 0.423823 at threshold = 0.5
   Recall    = 0.867675
   F1        = 0.569479


Total scoring time: 202.404 seconds
Refined model CLL: -0.227316


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.955542
   AUC PR    = 0.616017
   CLL	      = -0.21735
   Precision = 0.455505 at threshold = 0.5
   Recall    = 0.820652
   F1        = 0.585839


Total learning time: 683.72 seconds
Total inference time: 27.698 seconds
AUC ROC: 0.955542
Total revision time: 683.72
Best scored revision CLL: -0.227316


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 15:41:35
{'AUC PR': 0.616017, 'AUC ROC': 0.955542, 'Learning time': 683.72, 'F1': 0.585839, 'Inference time': 27.698, 'Precision': [0.455505, 0.5], 'Recall': 0.820652, 'parameter_0.2': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Learning time': 3.887, 'F1': 0.413793, 'Inference time': 3.608, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.32898}, 'CLL': -0.21735}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21150582555887135;  // std dev = 0,478, 1.415,000 (wgt'ed) examples reached here.  /* #neg=915 #pos=500 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.0198998453882926;  // std dev = 2,095, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03890988842989946;  // std dev = 2,506, 68,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18602291514691513;  // std dev = 0,479, 1.406,000 (wgt'ed) examples reached here.  /* #neg=906 #pos=500 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8575665795145491;  // std dev = 0,038, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1274261171851292;  // std dev = 0,854, 77,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return -0.018681221114642866;  // std dev = 1,582, 31,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return -0.13740683136402057;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.12956020619504668;  // std dev = 0,393, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15668339598196715;  // std dev = 0,478, 1.412,000 (wgt'ed) examples reached here.  /* #neg=912 #pos=500 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7188268808000765;  // std dev = 0,061, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.11462449984306823;  // std dev = 0,867, 83,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.06166345274006498;  // std dev = 1,061, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.08898444759644863;  // std dev = 1,174, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.10417439102821129;  // std dev = 2,215, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.016058719471768738;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12917917746609278;  // std dev = 0,478, 1.418,000 (wgt'ed) examples reached here.  /* #neg=918 #pos=500 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return -0.029144929274839467;  // std dev = 2,372, 103,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=13 */
%   | | | else return -0.08436089650140187;  // std dev = 0,957, 36,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | else return 0.014072694450285339;  // std dev = 0,309, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else return 0.0363673840011069;  // std dev = 0,362, 47,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10621727181672115;  // std dev = 0,478, 1.417,000 (wgt'ed) examples reached here.  /* #neg=917 #pos=500 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return -0.111316067605284;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1197892496176879;  // std dev = 0,999, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.018305368207576538;  // std dev = 2,432, 103,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=14 */
%   | | | else return -0.0550223834185555;  // std dev = 1,163, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | else return 0.051449137641962406;  // std dev = 0,376, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7330967426077565;  // std dev = 5,16e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.26690325739224335;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.2669032573922433;  // std dev = 1,05e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.040789050300064335;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0.0949731387358279;  // std dev = 0,481, 1.343,000 (wgt'ed) examples reached here.  /* #neg=857 #pos=486 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, B) )
%   | | | then return -0.0042015714985969895;  // std dev = 2,337, 84,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=13 */
%   | | | else return -0.06861677108165393;  // std dev = 0,979, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else return 0.06286823939211114;  // std dev = 0,346, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return 0.03971801534186092;  // std dev = 0,364, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05608523407424614;  // std dev = 0,473, 1.461,000 (wgt'ed) examples reached here.  /* #neg=961 #pos=500 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return 0.010495619302951386;  // std dev = 0,328, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.07127332798702658;  // std dev = 1,320, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.017643688191062382;  // std dev = 1,231, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else return -0.025232325254366104;  // std dev = 0,233, 57,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6608388729648417;  // std dev = 0,130, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.27394986013716316;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.16414537795807493;  // std dev = 1,862, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.18670070891856033;  // std dev = 1,611, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return -0.13342833619585157;  // std dev = 1,291, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return 0.07450572450625217;  // std dev = 0,483, 1.285,000 (wgt'ed) examples reached here.  /* #neg=807 #pos=478 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, B) )
%   | | then return 0.13680079486741165;  // std dev = 0,616, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.051666722617909805;  // std dev = 0,342, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return -0.009511085592205114;  // std dev = 0,266, 178,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=26 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6434476561312376;  // std dev = 0,191, 479,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=462 */
%   | | else return -0.2750052791186099;  // std dev = 0,146, 1.006,000 (wgt'ed) examples reached here.  /* #neg=987 #pos=19 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1788585943546229;  // std dev = 0,272, 62,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=5 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.22091194325796623;  // std dev = 2,346, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.10641646379018668;  // std dev = 1,735, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.6082056317059822;  // std dev = 0,953, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.1760340449913127;  // std dev = 0,143, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.05149824923134179;  // std dev = 0,336, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.46208158417420886;  // std dev = 0,392, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.3881323850667355;  // std dev = 0,181, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.06986655061235288;  // std dev = 1,198, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return -0.1008133458285186;  // std dev = 1,141, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else return 0.03263750404835087;  // std dev = 0,392, 1.334,000 (wgt'ed) examples reached here.  /* #neg=848 #pos=486 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return -0.017981394575704013;  // std dev = 0,215, 95,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=14 */
%   | | else if ( haswordauthor(K, H) )
%   | | | then return 0.08719851250455377;  // std dev = 0,953, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07668448786107299;  // std dev = 1,162, 38,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.045229555469960235;  // std dev = 0,504, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.00626228732607349;  // std dev = 0,278, 48,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */


Results
   AUC ROC   = 0.953485
   AUC PR    = 0.267655
   CLL	      = -0.269784
   Precision = 0.109453 at threshold = 0.5
   Recall    = 0.059783
   F1        = 0.077329


Total learning time: 601.027 seconds
Total inference time: 25.473 seconds
AUC ROC: 0.953485


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 15:52:02
{'AUC PR': 0.267655, 'AUC ROC': 0.953485, 'Learning time': 601.027, 'F1': 0.077329, 'Inference time': 25.473, 'Precision': [0.109453, 0.5], 'Recall': 0.059783, 'CLL': -0.269784}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.06648226843284567;  // std dev = 1,990, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else return 0.2156050754503846;  // std dev = 0,479, 1.368,000 (wgt'ed) examples reached here.  /* #neg=879 #pos=489 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then if ( haswordtitle(J, L), haswordauthor(M, L) )
%   | | | then return -0.01685106490048774;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return 0.0702701472207245;  // std dev = 2,348, 33,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( haswordauthor(N, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12005369700427426;  // std dev = 2,849, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | else if ( haswordvenue(A, P), haswordtitle(Q, P) )
%   | | then if ( title(R, Q), venue(R, B) )
%   | | | then return -0.021161409728073902;  // std dev = 2,481, 58,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.599434
   AUC PR    = 0.014273
   CLL	      = -0.196473
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 21.815 seconds
Total inference time: 5.057 seconds
AUC ROC: 0.599434


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 15:52:29
{'AUC PR': 0.014273, 'AUC ROC': 0.599434, 'Learning time': 21.815, 'F1': nan, 'Inference time': 5.057, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.196473}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,68e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.1532469743151935;  // std dev = 25,229, 3.060,000 (wgt'ed) examples reached here.  /* #neg=2.157 #pos=903 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.13835209486892755;  // std dev = 25,143, 3.011,000 (wgt'ed) examples reached here.  /* #neg=2.108 #pos=903 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.11892380485838869;  // std dev = 25,140, 3.009,000 (wgt'ed) examples reached here.  /* #neg=2.106 #pos=903 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,58e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.09931749210563123;  // std dev = 25,163, 3.022,000 (wgt'ed) examples reached here.  /* #neg=2.119 #pos=903 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,98e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.0760294112574111;  // std dev = 25,287, 3.094,000 (wgt'ed) examples reached here.  /* #neg=2.191 #pos=903 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.0748647291715311;  // std dev = 25,073, 2.972,000 (wgt'ed) examples reached here.  /* #neg=2.069 #pos=903 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,53e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.051777406260766067;  // std dev = 25,245, 3.069,000 (wgt'ed) examples reached here.  /* #neg=2.166 #pos=903 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.042813707648634944;  // std dev = 25,233, 3.062,000 (wgt'ed) examples reached here.  /* #neg=2.159 #pos=903 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.03796756792218719;  // std dev = 25,174, 3.028,000 (wgt'ed) examples reached here.  /* #neg=2.125 #pos=903 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.03478642511802588;  // std dev = 25,098, 2.986,000 (wgt'ed) examples reached here.  /* #neg=2.083 #pos=903 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.328496
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 6.963 seconds
Total inference time: 3.519 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.573654
   AUC PR    = 0.165566
   CLL	      = -0.330492
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147309
   F1        = 0.25679


Total scoring time: 7.246 seconds
Parameter learned model CLL: -0.330492


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.229, 2157, 903], 'true': [9.68e-07, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.143, 2108, 903], 'true': [0.0, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.14, 2106, 903], 'true': [5.4e-07, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.163, 2119, 903], 'true': [4.58e-07, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.287, 2191, 903], 'true': [2.98e-07, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.073, 2069, 903], 'true': [0.0, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.245, 2166, 903], 'true': [2.53e-07, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.233, 2159, 903], 'true': [0.0, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.174, 2125, 903], 'true': [0.0, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.098, 2083, 903], 'true': [9.19e-08, 0, 156]}]]
[{'': [6.012284687200848e-15, 0.20801518646676903]}, {'': [-2.6417614534670392e-15, 0.20996013620376502]}, {'': [1.8674520619335967e-15, 0.21003987041866276]}, {'': [1.343654532366856e-15, 0.20952207526449662]}, {'': [5.693451408334137e-16, 0.20667574373988326]}, {'': [-2.1635115351669717e-16, 0.21151960695521474]}, {'': [4.099285014000578e-16, 0.20765979729181686]}, {'': [-3.0744637605004334e-16, 0.20793616020061054]}, {'': [-2.3627823344586665e-16, 0.209283477503681]}, {'': [5.408778837917429e-17, 0.21095868686599603]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,68e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17141084865695091;  // std dev = 0,464, 2.707,000 (wgt'ed) examples reached here.  /* #neg=1.859 #pos=848 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2867203636709409;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.022532496743347025;  // std dev = 5,485, 219,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=36 */
%   | | | else return -0.036587907005750826;  // std dev = 3,277, 114,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3159762749784817;  // std dev = 2,498, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return -0.04863910963690245;  // std dev = 2,304, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.22307304917202989;  // std dev = 3,835, 62,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.15941126695281113;  // std dev = 23,352, 2.492,000 (wgt'ed) examples reached here.  /* #neg=1.686 #pos=806 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.06143092765865111;  // std dev = 4,712, 135,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=28 */
%   | | | else return -0.008631854949802129;  // std dev = 3,440, 99,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.06321440386150054;  // std dev = 0,964, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.04568407166843672;  // std dev = 3,299, 130,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1308300041734552;  // std dev = 0,465, 2.667,000 (wgt'ed) examples reached here.  /* #neg=1.819 #pos=848 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4923967963729559;  // std dev = 0,836, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09201779549780605;  // std dev = 1,900, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01768191064105546;  // std dev = 5,208, 251,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=31 */
%   | | | else return 0.022491565522632463;  // std dev = 3,745, 98,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,58e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12266933450102252;  // std dev = 0,470, 2.567,000 (wgt'ed) examples reached here.  /* #neg=1.719 #pos=848 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.8537457393173448;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05687865931157582;  // std dev = 1,717, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03385211322625333;  // std dev = 5,389, 194,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=36 */
%   | | | else return -0.03525505024387232;  // std dev = 3,277, 123,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,98e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.09255882152844323;  // std dev = 3,356, 54,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return -0.17268569344005213;  // std dev = 0,943, 26,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else return 0.0934512694976214;  // std dev = 0,467, 2.574,000 (wgt'ed) examples reached here.  /* #neg=1.744 #pos=830 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.20933245800284653;  // std dev = 1,875, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.006365881004769481;  // std dev = 5,501, 239,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.024516937802295104;  // std dev = 3,365, 124,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=13 */
%   | | | else return -0.13241352239604584;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07792620835848134;  // std dev = 0,467, 2.626,000 (wgt'ed) examples reached here.  /* #neg=1.778 #pos=848 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04744474680221292;  // std dev = 4,650, 133,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=28 */
%   | | | else return -0.01716879899046011;  // std dev = 3,412, 98,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14749373152620246;  // std dev = 0,794, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.03625711450866758;  // std dev = 3,283, 133,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,53e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06250448262453585;  // std dev = 0,467, 2.631,000 (wgt'ed) examples reached here.  /* #neg=1.783 #pos=848 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.04056560572732536;  // std dev = 4,645, 134,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=28 */
%   | | | else return -0.010338570230857347;  // std dev = 3,379, 100,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020916649628383525;  // std dev = 3,372, 125,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=13 */
%   | | | else return -0.12453205569258546;  // std dev = 0,033, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6960052115809058;  // std dev = 5,269, 822,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=793 */
%   | | | else return -0.24188238736541504;  // std dev = 5,909, 1.874,000 (wgt'ed) examples reached here.  /* #neg=1.841 #pos=33 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1445327959850012;  // std dev = 3,105, 103,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=11 */
%   | | | else return 0.14124940579342415;  // std dev = 4,472, 97,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | else return 0.11650109047653233;  // std dev = 0,436, 105,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.025016770816116748;  // std dev = 18,713, 2.464,000 (wgt'ed) examples reached here.  /* #neg=1.687 #pos=777 */
%   | | | else return -0.042362609715495624;  // std dev = 4,751, 140,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=31 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return 0.09006847138504112;  // std dev = 4,694, 183,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=47 */
%   | | | else return 0.022142893802637804;  // std dev = 3,359, 80,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.4932395305129701;  // std dev = 0,408, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.003057846280393632;  // std dev = 3,649, 87,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=17 */
%   | | | else return -0.11340030300021567;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03227949818243663;  // std dev = 0,383, 2.587,000 (wgt'ed) examples reached here.  /* #neg=1.739 #pos=848 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.06773681671184083;  // std dev = 1,678, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.0569384214793717;  // std dev = 0,715, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.022864456299754254;  // std dev = 5,310, 236,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=36 */
%   | | | else return -0.01571569833651582;  // std dev = 2,841, 116,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=12 */


Results
   AUC ROC   = 0.918338
   AUC PR    = 0.603165
   CLL	      = -0.24783
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 529.391 seconds
Total inference time: 17.964 seconds
AUC ROC: 0.918338


Results scoring model
   AUC ROC   = 0.949646
   AUC PR    = 0.562852
   CLL	      = -0.265527
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147309
   F1        = 0.25679


Total scoring time: 241.443 seconds
Refined model CLL: -0.265527


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.918338
   AUC PR    = 0.603165
   CLL	      = -0.24783
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 785.0429999999999 seconds
Total inference time: 17.964 seconds
AUC ROC: 0.918338
Total revision time: 785.0429999999999
Best scored revision CLL: -0.265527


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 16:05:57
{'AUC PR': 0.603165, 'AUC ROC': 0.918338, 'parameter_0.4': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Learning time': 6.963, 'F1': 0.413793, 'Inference time': 3.519, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.328496}, 'Learning time': 785.0429999999999, 'F1': 0.413793, 'Inference time': 17.964, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.24783}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.21529179224236947;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else return 0.21066431693084997;  // std dev = 0,478, 2.763,000 (wgt'ed) examples reached here.  /* #neg=1.789 #pos=974 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.23314893509951234;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.02178529873587505;  // std dev = 0,370, 220,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=36 */
%   | | else return -0.051625500990713225;  // std dev = 0,287, 133,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18614821298351575;  // std dev = 0,478, 2.820,000 (wgt'ed) examples reached here.  /* #neg=1.816 #pos=1.004 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8544712048642927;  // std dev = 0,028, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.14501439974695887;  // std dev = 0,039, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.14452372233399677;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.022089637893140623;  // std dev = 3,384, 82,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.014617513821257809;  // std dev = 3,378, 107,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=13 */
%   | | | else return -0.13568215751473783;  // std dev = 1,97e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.1372182616746584;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7614435381076469;  // std dev = 0,140, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.31289685862466643;  // std dev = 2,363, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return -0.05925300713845515;  // std dev = 2,249, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | else return 0.16051433335485327;  // std dev = 0,479, 2.722,000 (wgt'ed) examples reached here.  /* #neg=1.748 #pos=974 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6175824013717343;  // std dev = 1,644, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | | else return -0.12851640884288212;  // std dev = 0,050, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return 0.0065370859564440114;  // std dev = 2,196, 38,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.04319987770866436;  // std dev = 2,545, 42,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | else return -0.0404525916703444;  // std dev = 0,289, 141,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13242388855769394;  // std dev = 0,477, 2.814,000 (wgt'ed) examples reached here.  /* #neg=1.810 #pos=1.004 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.07763495617430337;  // std dev = 0,546, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3311639316440678;  // std dev = 1,557, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.031139825293551804;  // std dev = 3,209, 126,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=27 */
%   | | | else return -0.053697715973662276;  // std dev = 2,843, 96,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.013018042509107633;  // std dev = 3,337, 91,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=13 */
%   | | | else return -0.11689684876533557;  // std dev = 0,008, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11616114426483776;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.33784248224130786;  // std dev = 2,156, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.030051630020205545;  // std dev = 2,426, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else return -0.16842668068760935;  // std dev = 0,250, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | else return 0.10823676949941236;  // std dev = 0,477, 2.751,000 (wgt'ed) examples reached here.  /* #neg=1.771 #pos=980 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then return 0.28653966209952164;  // std dev = 1,094, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.010254009501791953;  // std dev = 0,272, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 3.2459063003458866E-4;  // std dev = 0,305, 215,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=36 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.11713941103791414;  // std dev = 0,858, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.024880111658654464;  // std dev = 3,130, 108,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5670677489916084;  // std dev = 0,232, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.1596355766025796;  // std dev = 2,344, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return -0.05514864054151121;  // std dev = 2,217, 37,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | else return 0.08417455151694485;  // std dev = 0,477, 2.765,000 (wgt'ed) examples reached here.  /* #neg=1.791 #pos=974 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.11471937434117374;  // std dev = 0,455, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return -0.016619616833993003;  // std dev = 0,286, 233,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=36 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.009481235607889205;  // std dev = 3,370, 108,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=13 */
%   | | | else return -0.10271243651002637;  // std dev = 0,003, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.10244598574185926;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6699833465763785;  // std dev = 0,188, 964,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=931 */
%   | | else return -0.2565763873731902;  // std dev = 0,136, 1.804,000 (wgt'ed) examples reached here.  /* #neg=1.772 #pos=32 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(A, C) )
%   | | | then return -0.18170224627067555;  // std dev = 2,838, 90,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=9 */
%   | | | else return -0.1070487571999165;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, C) )
%   | | | then return 0.35179918202109495;  // std dev = 3,087, 42,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=27 */
%   | | | else return 0.049732210926227455;  // std dev = 3,691, 86,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6824129161361875;  // std dev = 0,183, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return 0.11900860842122722;  // std dev = 0,826, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.002297054913413031;  // std dev = 0,321, 101,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04860404205240716;  // std dev = 0,388, 2.819,000 (wgt'ed) examples reached here.  /* #neg=1.815 #pos=1.004 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(B, F) )
%   | | | then return 0.13754086460390813;  // std dev = 1,764, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.028778216803724648;  // std dev = 4,392, 220,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=24 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.022160914054163216;  // std dev = 1,238, 35,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return -0.09325304549386597;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.11861674122716304;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.022968878121638933;  // std dev = 2,021, 70,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | | else return -0.09320790622736619;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.5282616364159617;  // std dev = 0,163, 958,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=933 */
%   | | else return -0.21734050766097;  // std dev = 0,133, 1.859,000 (wgt'ed) examples reached here.  /* #neg=1.826 #pos=33 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.13408430681191225;  // std dev = 0,281, 117,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=11 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.203391842242406;  // std dev = 3,182, 43,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.04231053900260991;  // std dev = 1,867, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.1071698606654744;  // std dev = 0,282, 83,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   | | else if ( title(K, I), venue(K, B) )
%   | | | then return 0.02537108329768114;  // std dev = 0,586, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.01744306768788814;  // std dev = 0,914, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.33967139181752104;  // std dev = 0,338, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.3711378136461671;  // std dev = 0,207, 971,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=929 */
%   | | else return -0.18635841945732326;  // std dev = 0,119, 1.834,000 (wgt'ed) examples reached here.  /* #neg=1.808 #pos=26 */
%   | else if ( haswordvenue(A, C) )
%   | | then if ( title(G, D), venue(G, B) )
%   | | | then return 0.018207820917799527;  // std dev = 3,331, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | | else return 0.26971368048616245;  // std dev = 2,852, 40,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | | else if ( haswordtitle(D, H), haswordauthor(I, H) )
%   | | | then return -0.03792321323835874;  // std dev = 2,030, 62,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=8 */
%   | | | else return 0.0861617293208918;  // std dev = 2,531, 46,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return 0.2894758911922878;  // std dev = 0,355, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | else return 0.46186161844137164;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.007636508099550689;  // std dev = 0,276, 124,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=13 */


Results
   AUC ROC   = 0.954405
   AUC PR    = 0.321334
   CLL	      = -0.194127
   Precision = 0.398207 at threshold = 0.5
   Recall    = 0.845109
   F1        = 0.54134


Total learning time: 1430.34 seconds
Total inference time: 37.517 seconds
AUC ROC: 0.954405


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 16:30:25
{'AUC PR': 0.321334, 'AUC ROC': 0.954405, 'Learning time': 1430.34, 'F1': 0.54134, 'Inference time': 37.517, 'Precision': [0.398207, 0.5], 'Recall': 0.845109, 'CLL': -0.194127}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.18072958026080266;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else return 0.22076993286570232;  // std dev = 0,481, 2.686,000 (wgt'ed) examples reached here.  /* #neg=1.712 #pos=974 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordauthor(K, I) )
%   | | then return 0.1914822684328457;  // std dev = 0,471, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( title(L, J), venue(L, A) )
%   | | | then return 0.048289780169934196;  // std dev = 4,676, 142,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=27 */
%   | | | else return -0.04610638404942385;  // std dev = 2,853, 94,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=9 */
%   | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | then return 0.0010060779566550668;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, P), haswordauthor(Q, P) )
%   | | | then return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.0565797470710303;  // std dev = 3,172, 129,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=11 */


Results
   AUC ROC   = 0.595642
   AUC PR    = 0.014131
   CLL	      = -0.196173
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 29.376 seconds
Total inference time: 3.492 seconds
AUC ROC: 0.595642


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 16:30:58
{'AUC PR': 0.014131, 'AUC ROC': 0.595642, 'Learning time': 29.376, 'F1': nan, 'Inference time': 3.492, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.196173}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,07e-06, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.15575743819959575;  // std dev = 30,725, 4.516,000 (wgt'ed) examples reached here.  /* #neg=3.172 #pos=1.344 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.14440127864042762;  // std dev = 30,534, 4.388,000 (wgt'ed) examples reached here.  /* #neg=3.044 #pos=1.344 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.11828922317515814;  // std dev = 30,656, 4.469,000 (wgt'ed) examples reached here.  /* #neg=3.125 #pos=1.344 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.09147759513670449;  // std dev = 30,842, 4.599,000 (wgt'ed) examples reached here.  /* #neg=3.255 #pos=1.344 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2,53e-07, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.08097958084475307;  // std dev = 30,742, 4.528,000 (wgt'ed) examples reached here.  /* #neg=3.184 #pos=1.344 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,07e-07, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.07379894980763467;  // std dev = 30,592, 4.426,000 (wgt'ed) examples reached here.  /* #neg=3.082 #pos=1.344 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,89e-07, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.05876953723276604;  // std dev = 30,630, 4.451,000 (wgt'ed) examples reached here.  /* #neg=3.107 #pos=1.344 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452774;  // std dev = 1,30e-07, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.03871033810141071;  // std dev = 30,828, 4.589,000 (wgt'ed) examples reached here.  /* #neg=3.245 #pos=1.344 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.037294304015281374;  // std dev = 30,697, 4.497,000 (wgt'ed) examples reached here.  /* #neg=3.153 #pos=1.344 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.02602731886369598;  // std dev = 30,785, 4.558,000 (wgt'ed) examples reached here.  /* #neg=3.214 #pos=1.344 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.327814
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 12.446 seconds
Total inference time: 3.519 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.577093
   AUC PR    = 0.172575
   CLL	      = -0.32972
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.154185
   F1        = 0.267176


Total scoring time: 9.058 seconds
Parameter learned model CLL: -0.32972


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.725, 3172, 1344], 'true': [1.07e-06, 0, 245]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.534, 3044, 1344], 'true': [0.0, 0, 245]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.656, 3125, 1344], 'true': [4.92e-07, 0, 245]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.842, 3255, 1344], 'true': [0.0, 0, 245]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.742, 3184, 1344], 'true': [2.53e-07, 0, 245]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.592, 3082, 1344], 'true': [3.07e-07, 0, 245]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.63, 3107, 1344], 'true': [2.89e-07, 0, 245]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.828, 3245, 1344], 'true': [1.3e-07, 0, 245]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.697, 3153, 1344], 'true': [0.0, 0, 245]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.785, 3214, 1344], 'true': [6.66e-08, 0, 245]}]]
[{'': [4.640279090678205e-15, 0.20903768198260247]}, {'': [-4.29225815887734e-15, 0.21247638998881826]}, {'': [9.860593067691186e-16, 0.21029482282684211]}, {'': [-2.6101569885064907e-16, 0.20683471987657695]}, {'': [2.6101569885064907e-16, 0.20871780144591479]}, {'': [3.842731121967889e-16, 0.21145067892578284]}, {'': [3.407704957216807e-16, 0.21077802624858505]}, {'': [6.887914275225461e-17, 0.20709892971252972]}, {'': [-1.7763568394002506e-16, 0.20954507808411293]}, {'': [1.8126090197961738e-17, 0.20792011153209403]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,07e-06, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3483450135308838;  // std dev = 3,570, 51,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=25 */
%   | | | else return 0.09344305274657119;  // std dev = 3,029, 51,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14602772297829889;  // std dev = 5,202, 132,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=38 */
%   | | | else return 0.18142245331592916;  // std dev = 28,366, 3.678,000 (wgt'ed) examples reached here.  /* #neg=2.489 #pos=1.189 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.24945328292559932;  // std dev = 2,341, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.014698455866285279;  // std dev = 6,429, 313,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=49 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.025448948498371458;  // std dev = 4,409, 189,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=22 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14847461428102618;  // std dev = 0,464, 4.028,000 (wgt'ed) examples reached here.  /* #neg=2.764 #pos=1.264 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.05860007301737508;  // std dev = 5,647, 197,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=40 */
%   | | | else return -0.03937182402514872;  // std dev = 3,964, 166,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01986240712139346;  // std dev = 4,403, 185,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=22 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,92e-07, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1332365513563114;  // std dev = 0,466, 3.948,000 (wgt'ed) examples reached here.  /* #neg=2.684 #pos=1.264 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2784694867675504;  // std dev = 2,227, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return -0.01324754377703809;  // std dev = 0,937, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01646597707071816;  // std dev = 6,265, 365,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=45 */
%   | | | else return 0.05564670079040094;  // std dev = 4,451, 123,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=25 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10359791150042531;  // std dev = 0,463, 4.057,000 (wgt'ed) examples reached here.  /* #neg=2.793 #pos=1.264 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.004538575960043505;  // std dev = 6,086, 323,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=44 */
%   | | | else return 0.10136154479668612;  // std dev = 2,871, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else return 0.039151054494578834;  // std dev = 0,398, 127,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=25 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2,53e-07, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09174191759331528;  // std dev = 0,465, 3.983,000 (wgt'ed) examples reached here.  /* #neg=2.719 #pos=1.264 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1444512470687253;  // std dev = 2,409, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.066366251778895;  // std dev = 0,968, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.009390727584501019;  // std dev = 6,233, 347,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=45 */
%   | | | else return 0.0376197319828287;  // std dev = 4,468, 126,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=25 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,07e-07, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08160899318396259;  // std dev = 0,468, 3.906,000 (wgt'ed) examples reached here.  /* #neg=2.642 #pos=1.264 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.14981895616609403;  // std dev = 1,436, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.017764574461753932;  // std dev = 2,196, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.031616017662787786;  // std dev = 2,576, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return -0.005294380150652041;  // std dev = 7,265, 439,000 (wgt'ed) examples reached here.  /* #neg=377 #pos=62 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,89e-07, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3402898306636627;  // std dev = 3,261, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | | else return -0.057039067005222856;  // std dev = 3,227, 67,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | else return 0.05097284557373685;  // std dev = 0,462, 3.972,000 (wgt'ed) examples reached here.  /* #neg=2.747 #pos=1.225 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.22869444874874656;  // std dev = 2,180, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.05663089256307049;  // std dev = 0,965, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.013966006109862055;  // std dev = 6,256, 361,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=45 */
%   | | | else return 0.02269907962976278;  // std dev = 4,487, 133,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=25 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452774;  // std dev = 1,30e-07, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04513168461187616;  // std dev = 0,463, 4.045,000 (wgt'ed) examples reached here.  /* #neg=2.781 #pos=1.264 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.014651793043071345;  // std dev = 6,082, 339,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=44 */
%   | | | else return 0.04258354416984699;  // std dev = 2,975, 54,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.011357143132669794;  // std dev = 4,525, 136,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=25 */
%   | | | else return -0.12814356700588134;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03176242435923656;  // std dev = 28,281, 3.765,000 (wgt'ed) examples reached here.  /* #neg=2.605 #pos=1.160 */
%   | | | else return 0.04626871485639472;  // std dev = 6,981, 346,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=70 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.15258041333530972;  // std dev = 3,757, 166,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=16 */
%   | | | else return 0.15794215190313088;  // std dev = 5,467, 139,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=51 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5392844810006732;  // std dev = 0,389, 27,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.2607576360796297;  // std dev = 0,143, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.036817152592861974;  // std dev = 4,427, 123,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=25 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 245,000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2550992342220697;  // std dev = 3,334, 49,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=28 */
%   | | | else return -0.123852588026884;  // std dev = 3,067, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
%   | | else return 0.038703664582440504;  // std dev = 0,465, 3.811,000 (wgt'ed) examples reached here.  /* #neg=2.586 #pos=1.225 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.02660169300798869;  // std dev = 2,326, 36,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return -0.025628235329408625;  // std dev = 6,373, 382,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=48 */
%   | | else return 0.022455440814057783;  // std dev = 0,400, 125,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=25 */


Results
   AUC ROC   = 0.724755
   AUC PR    = 0.305902
   CLL	      = -0.301217
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 683.004 seconds
Total inference time: 10.462 seconds
AUC ROC: 0.724755


Results scoring model
   AUC ROC   = 0.655708
   AUC PR    = 0.195777
   CLL	      = -0.324741
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.154185
   F1        = 0.267176


Total scoring time: 113.936 seconds
Refined model CLL: -0.324741


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.724755
   AUC PR    = 0.305902
   CLL	      = -0.301217
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 818.4440000000001 seconds
Total inference time: 10.462 seconds
AUC ROC: 0.724755
Total revision time: 818.4440000000001
Best scored revision CLL: -0.324741


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 16:44:52
{'AUC PR': 0.305902, 'AUC ROC': 0.724755, 'Learning time': 818.4440000000001, 'F1': 0.413793, 'Inference time': 10.462, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'parameter_0.6': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Learning time': 12.446, 'F1': 0.413793, 'Inference time': 3.519, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.327814}, 'CLL': -0.301217}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21329132154337632;  // std dev = 0,479, 4.249,000 (wgt'ed) examples reached here.  /* #neg=2.740 #pos=1.509 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2391013160518933;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.07481560176617788;  // std dev = 5,527, 180,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=39 */
%   | | | else return -0.06311090742017271;  // std dev = 3,035, 127,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.030739953789376624;  // std dev = 4,216, 180,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=20 */
%   | | | else return -0.07042249347191638;  // std dev = 1,363, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1849609037295683;  // std dev = 0,478, 4.253,000 (wgt'ed) examples reached here.  /* #neg=2.744 #pos=1.509 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.15981560379085666;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.051479591478997104;  // std dev = 5,574, 193,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=39 */
%   | | | else return -0.05947757482586018;  // std dev = 3,043, 132,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06086881620651629;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return -0.036205372995216485;  // std dev = 0,301, 208,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=21 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, B) )
%   | | then return 0.8024610875389614;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(F, C) )
%   | | | then return 0.6024610875389612;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.46912775420562797;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.42150870658658085;  // std dev = 3,147, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | | else return -0.05800402874010853;  // std dev = 3,213, 86,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=12 */
%   | | else return 0.15551590521583591;  // std dev = 0,478, 4.141,000 (wgt'ed) examples reached here.  /* #neg=2.679 #pos=1.462 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, B) )
%   | | then return 0.03751741893383175;  // std dev = 0,396, 205,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=40 */
%   | | else return -0.008538573626058456;  // std dev = 0,329, 139,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=18 */
%   | else return -0.02331719517884681;  // std dev = 0,312, 201,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7213226104269588;  // std dev = 0,111, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.2728443498898431;  // std dev = 1,49e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.5662269413756896;  // std dev = 0,939, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.03266113331742675;  // std dev = 3,183, 77,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=12 */
%   | else return 0.13055636325994333;  // std dev = 0,478, 4.131,000 (wgt'ed) examples reached here.  /* #neg=2.669 #pos=1.462 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.766454450013898;  // std dev = 1,669, 43,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | | else return -0.1636978091661722;  // std dev = 0,107, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else return -0.012497447263918608;  // std dev = 0,316, 150,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=18 */
%   | else return -0.02122308494275108;  // std dev = 0,311, 202,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1162305176996891;  // std dev = 0,478, 4.154,000 (wgt'ed) examples reached here.  /* #neg=2.645 #pos=1.509 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.031258750496859576;  // std dev = 0,719, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1413549189604986;  // std dev = 2,301, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.029266916270468044;  // std dev = 4,728, 192,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=39 */
%   | | | else return -0.038943510451992826;  // std dev = 3,023, 116,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.021154460104872385;  // std dev = 4,225, 186,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=20 */
%   | | | else return -0.06713105984268404;  // std dev = 1,373, 35,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | else return -0.1168507515377771;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08450489293268862;  // std dev = 0,476, 4.265,000 (wgt'ed) examples reached here.  /* #neg=2.756 #pos=1.509 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.22839859406648233;  // std dev = 0,489, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return -0.06823711340791985;  // std dev = 0,236, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.02293563237818162;  // std dev = 4,921, 268,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=27 */
%   | | | else return 0.04894115391778241;  // std dev = 3,229, 82,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.04341423914231013;  // std dev = 3,809, 113,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=25 */
%   | | | else return -0.10532144247070385;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08241460916084277;  // std dev = 0,480, 4.093,000 (wgt'ed) examples reached here.  /* #neg=2.584 #pos=1.509 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.11284420787073478;  // std dev = 0,475, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.13345270716242807;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11668659792226675;  // std dev = 0,029, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.025787540267293893;  // std dev = 5,399, 338,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=34 */
%   | | | else return 0.046760593437164454;  // std dev = 2,431, 47,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008848293501582435;  // std dev = 3,871, 134,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=25 */
%   | | | else return -0.09580164391944986;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.12982194300402414;  // std dev = 3,659, 79,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=37 */
%   | | | else return 0.7701685047179107;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.4698664482915944;  // std dev = 0,105, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19451630201680215;  // std dev = 1,236, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | else return 0.05148483353526476;  // std dev = 0,478, 4.123,000 (wgt'ed) examples reached here.  /* #neg=2.661 #pos=1.462 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 2.60264888427521E-4;  // std dev = 0,331, 211,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=40 */
%   | | else if ( title(K, I), venue(K, B) )
%   | | | then return -0.15507801734668286;  // std dev = 0,007, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0168407110783057;  // std dev = 3,821, 140,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=18 */
%   | else return 0.010304006872976335;  // std dev = 0,335, 170,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02363538372288599;  // std dev = 0,470, 4.078,000 (wgt'ed) examples reached here.  /* #neg=2.702 #pos=1.376 */
%   | | else return 0.03962738346863442;  // std dev = 0,358, 371,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=71 */
%   | else if ( title(F, D), venue(F, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.11859616671446195;  // std dev = 3,802, 93,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=18 */
%   | | | else return -0.03477947474660645;  // std dev = 1,092, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4108067029418691;  // std dev = 3,404, 59,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=43 */
%   | | | else return 0.07954997630136591;  // std dev = 3,418, 80,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.5626720503689229;  // std dev = 0,316, 36,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.08774226572897632;  // std dev = 0,379, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.006193242318921836;  // std dev = 0,322, 136,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.030118200331181913;  // std dev = 0,473, 3.962,000 (wgt'ed) examples reached here.  /* #neg=2.581 #pos=1.381 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6764913019417363;  // std dev = 2,423, 75,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=68 */
%   | | | else return -0.1293720524485501;  // std dev = 1,373, 248,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=2 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.189253893246843;  // std dev = 0,292, 168,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=16 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2703243079436637;  // std dev = 3,682, 63,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=43 */
%   | | | else return 0.045301569092576405;  // std dev = 3,480, 86,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.3250010823110122;  // std dev = 0,407, 28,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | else return 0.5543762452608888;  // std dev = 2,11e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.02467622563033222;  // std dev = 0,343, 123,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=25 */


Results
   AUC ROC   = 0.671821
   AUC PR    = 0.057474
   CLL	      = -0.332944
   Precision = 0.275362 at threshold = 0.5
   Recall    = 0.05163
   F1        = 0.086957


Total learning time: 2738.79 seconds
Total inference time: 18.659 seconds
AUC ROC: 0.671821


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 17:30:50
{'AUC PR': 0.057474, 'AUC ROC': 0.671821, 'Learning time': 2738.79, 'F1': 0.086957, 'Inference time': 18.659, 'Precision': [0.275362, 0.5], 'Recall': 0.05163, 'CLL': -0.332944}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2210637980143701;  // std dev = 0,481, 4.158,000 (wgt'ed) examples reached here.  /* #neg=2.649 #pos=1.509 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3025933795439568;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.03882076187018517;  // std dev = 5,522, 330,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=34 */
%   | | | else return 0.041482268432845706;  // std dev = 2,997, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.040630686924329334;  // std dev = 4,521, 137,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.598058
   AUC PR    = 0.014209
   CLL	      = -0.196384
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 19.48 seconds
Total inference time: 2.782 seconds
AUC ROC: 0.598058


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 17:31:13
{'AUC PR': 0.014209, 'AUC ROC': 0.598058, 'Learning time': 19.48, 'F1': nan, 'Inference time': 2.782, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.196384}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1,04e-06, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.15457395992572362;  // std dev = 35,498, 6.042,000 (wgt'ed) examples reached here.  /* #neg=4.251 #pos=1.791 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.13255386663285287;  // std dev = 35,552, 6.086,000 (wgt'ed) examples reached here.  /* #neg=4.295 #pos=1.791 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.12171394494847568;  // std dev = 35,351, 5.926,000 (wgt'ed) examples reached here.  /* #neg=4.135 #pos=1.791 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.09848320037986238;  // std dev = 35,466, 6.016,000 (wgt'ed) examples reached here.  /* #neg=4.225 #pos=1.791 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.07897831949938855;  // std dev = 35,550, 6.084,000 (wgt'ed) examples reached here.  /* #neg=4.293 #pos=1.791 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,91e-07, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.06071132405742871;  // std dev = 35,666, 6.181,000 (wgt'ed) examples reached here.  /* #neg=4.390 #pos=1.791 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,46e-07, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.06045833657331796;  // std dev = 35,397, 5.962,000 (wgt'ed) examples reached here.  /* #neg=4.171 #pos=1.791 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2,80e-07, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.047108739589064724;  // std dev = 35,452, 6.005,000 (wgt'ed) examples reached here.  /* #neg=4.214 #pos=1.791 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.04054881049694239;  // std dev = 35,391, 5.957,000 (wgt'ed) examples reached here.  /* #neg=4.166 #pos=1.791 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.02785236497311831;  // std dev = 35,513, 6.054,000 (wgt'ed) examples reached here.  /* #neg=4.263 #pos=1.791 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.327147
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 18.957 seconds
Total inference time: 3.636 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.577395
   AUC PR    = 0.173186
   CLL	      = -0.32905
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.15479
   F1        = 0.268083


Total scoring time: 11.105 seconds
Parameter learned model CLL: -0.32905


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.498, 4251, 1791], 'true': [1.04e-06, 0, 328]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.552, 4295, 1791], 'true': [0.0, 0, 328]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.351, 4135, 1791], 'true': [0.0, 0, 328]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.466, 4225, 1791], 'true': [0.0, 0, 328]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.55, 4293, 1791], 'true': [0.0, 0, 328]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.666, 4390, 1791], 'true': [3.91e-07, 0, 328]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.397, 4171, 1791], 'true': [2.46e-07, 0, 328]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.452, 4214, 1791], 'true': [2.8e-07, 0, 328]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.391, 4166, 1791], 'true': [0.0, 0, 328]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.513, 4263, 1791], 'true': [0.0, 0, 328]}]]
[{'': [3.292759019376074e-15, 0.20855722948293268]}, {'': [-5.112441635347062e-15, 0.20768008743979233]}, {'': [-4.76583542278116e-16, 0.21088602723045]}, {'': [-9.53167084556232e-16, 0.20907718490931326]}, {'': [-6.498866485610672e-16, 0.20771988025632554]}, {'': [4.657520981354315e-16, 0.20579869613638446]}, {'': [1.841345504256357e-16, 0.21016085774586593]}, {'': [2.38291771139058e-16, 0.20929752544543873]}, {'': [-2.247524659607024e-16, 0.21026144816204825]}, {'': [-2.0850529974667573e-16, 0.208317658418129]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1,04e-06, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17218303665468798;  // std dev = 0,464, 5.337,000 (wgt'ed) examples reached here.  /* #neg=3.661 #pos=1.676 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11346808403568258;  // std dev = 2,989, 47,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08228686613399513;  // std dev = 3,176, 58,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return -0.012137641069417024;  // std dev = 8,651, 663,000 (wgt'ed) examples reached here.  /* #neg=577 #pos=86 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15120432562208053;  // std dev = 0,465, 5.315,000 (wgt'ed) examples reached here.  /* #neg=3.639 #pos=1.676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.1581384852879809;  // std dev = 3,100, 45,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.019331488179732802;  // std dev = 7,647, 433,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=70 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020414849904346454;  // std dev = 5,218, 256,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=31 */
%   | | | else return -0.14214135985453236;  // std dev = 0,015, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13323769393012808;  // std dev = 0,466, 5.251,000 (wgt'ed) examples reached here.  /* #neg=3.575 #pos=1.676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.058208271225664694;  // std dev = 6,374, 251,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=52 */
%   | | | else return 0.05311035814788745;  // std dev = 5,064, 162,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=32 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010072590599162472;  // std dev = 5,195, 240,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=31 */
%   | | | else return -0.12408752578806087;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10873473902104291;  // std dev = 0,465, 5.309,000 (wgt'ed) examples reached here.  /* #neg=3.633 #pos=1.676 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3875103624719473;  // std dev = 1,294, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06381045811798071;  // std dev = 3,033, 52,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.006203371525018992;  // std dev = 7,667, 497,000 (wgt'ed) examples reached here.  /* #neg=428 #pos=69 */
%   | | | else return 0.033293755181069216;  // std dev = 4,950, 165,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08925330214109464;  // std dev = 0,464, 5.327,000 (wgt'ed) examples reached here.  /* #neg=3.651 #pos=1.676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.037195041076971976;  // std dev = 6,692, 287,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=56 */
%   | | | else return -0.012608387362965922;  // std dev = 4,826, 198,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03259618004542763;  // std dev = 5,264, 292,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=31 */
%   | | | else return -0.11455119786597454;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,91e-07, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3586673074445044;  // std dev = 3,633, 55,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=33 */
%   | | | else return -0.0038326925554955467;  // std dev = 3,806, 80,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06386211263930965;  // std dev = 5,715, 154,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
%   | | | else return 0.07381518913915552;  // std dev = 32,864, 5.004,000 (wgt'ed) examples reached here.  /* #neg=3.427 #pos=1.577 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return -0.02744922164559789;  // std dev = 1,216, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.11542439163081811;  // std dev = 3,087, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.014611430083192493;  // std dev = 7,536, 406,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=69 */
%   | | | else return -0.013964878139934736;  // std dev = 5,141, 254,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=30 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,46e-07, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.18832907182961356;  // std dev = 5,014, 102,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=45 */
%   | | | else return -0.17377160322176602;  // std dev = 2,129, 61,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   | | else return 0.05920964087980444;  // std dev = 0,464, 5.165,000 (wgt'ed) examples reached here.  /* #neg=3.539 #pos=1.626 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.13631970823524836;  // std dev = 3,031, 41,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.0013767191332644951;  // std dev = 1,134, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01099889976033283;  // std dev = 7,544, 410,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=69 */
%   | | | else return -0.00943577880504984;  // std dev = 5,130, 250,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=30 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2,80e-07, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.02027430034687364;  // std dev = 5,469, 153,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
%   | | | else return 0.7251826563967719;  // std dev = 0,072, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.05446690449338485;  // std dev = 0,467, 5.059,000 (wgt'ed) examples reached here.  /* #neg=3.433 #pos=1.626 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0308996725934431;  // std dev = 6,631, 279,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=56 */
%   | | | else return -0.017970555977493807;  // std dev = 4,841, 200,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=28 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 7.178144267422105E-4;  // std dev = 5,181, 233,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=31 */
%   | | | else return -0.10619282061949649;  // std dev = 0,028, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2631624603126829;  // std dev = 3,585, 53,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | | | else return -0.0775272775091808;  // std dev = 3,841, 106,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=21 */
%   | | else return 0.03941025814232091;  // std dev = 0,465, 5.126,000 (wgt'ed) examples reached here.  /* #neg=3.500 #pos=1.626 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.21288603493220556;  // std dev = 2,868, 35,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return -0.05710681505657781;  // std dev = 0,960, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.0084728881246463;  // std dev = 7,626, 440,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=70 */
%   | | | else return 0.0029948292240549747;  // std dev = 5,090, 222,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=30 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.023616850750518142;  // std dev = 32,518, 4.977,000 (wgt'ed) examples reached here.  /* #neg=3.439 #pos=1.538 */
%   | | | else return 0.06755391357163541;  // std dev = 8,174, 430,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=99 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.16468604918479832;  // std dev = 4,416, 229,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=22 */
%   | | | else return 0.14425348466886523;  // std dev = 6,340, 190,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=69 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5677663294083504;  // std dev = 0,344, 36,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=31 */
%   | | else return 0.002467842996829862;  // std dev = 0,375, 188,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=32 */


Results
   AUC ROC   = 0.724968
   AUC PR    = 0.307269
   CLL	      = -0.30129
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 858.703 seconds
Total inference time: 11.532 seconds
AUC ROC: 0.724968


Results scoring model
   AUC ROC   = 0.655552
   AUC PR    = 0.197641
   CLL	      = -0.32575
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.155734
   F1        = 0.269498


Total scoring time: 171.399 seconds
Refined model CLL: -0.32575


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.724968
   AUC PR    = 0.307269
   CLL	      = -0.30129
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 1060.164 seconds
Total inference time: 11.532 seconds
AUC ROC: 0.724968
Total revision time: 1060.164
Best scored revision CLL: -0.32575


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 17:49:10
{'AUC PR': 0.307269, 'AUC ROC': 0.724968, 'parameter_0.8': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Learning time': 18.957, 'F1': 0.413793, 'Inference time': 3.636, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.327147}, 'Learning time': 1060.164, 'F1': 0.413793, 'Inference time': 11.532, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.30129}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8318331456258272;  // std dev = 0,987, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.04916017105456856;  // std dev = 3,708, 89,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=17 */
%   | else return 0.2181415125721366;  // std dev = 0,480, 5.389,000 (wgt'ed) examples reached here.  /* #neg=3.449 #pos=1.940 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.7748156017661791;  // std dev = 2,141, 60,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=55 */
%   | | | else return -0.13623308737239834;  // std dev = 0,997, 178,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=1 */
%   | | else return -0.0059287348034008135;  // std dev = 0,343, 206,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=28 */
%   | else return -0.029123792173215462;  // std dev = 0,316, 275,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=31 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19079124926689553;  // std dev = 0,479, 5.543,000 (wgt'ed) examples reached here.  /* #neg=3.539 #pos=2.004 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.007565895055470469;  // std dev = 0,798, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2550916229614598;  // std dev = 2,796, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.11472741553553237;  // std dev = 0,863, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1342492167706787;  // std dev = 0,020, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07651756571061961;  // std dev = 5,629, 232,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=55 */
%   | | | else return -0.05733201253879254;  // std dev = 3,707, 179,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.020695628722304796;  // std dev = 5,145, 255,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=30 */
%   | | | else return -0.13834268754583445;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1574910100285057;  // std dev = 0,478, 5.612,000 (wgt'ed) examples reached here.  /* #neg=3.608 #pos=2.004 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7827086199906299;  // std dev = 0,127, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13550813819345156;  // std dev = 0,000945, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10374076407470119;  // std dev = 2,523, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.13484147609969616;  // std dev = 0,001, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 5.022772023080616E-4;  // std dev = 6,055, 353,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=55 */
%   | | | else return 0.02846246013731058;  // std dev = 3,423, 86,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.013372606590980525;  // std dev = 5,127, 245,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=30 */
%   | | | else return -0.12270539246244243;  // std dev = 0,000419, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12893436456812546;  // std dev = 0,477, 5.648,000 (wgt'ed) examples reached here.  /* #neg=3.644 #pos=2.004 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.2557638061891049;  // std dev = 0,487, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | else return -0.04473056319578515;  // std dev = 0,258, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.041586813959148414;  // std dev = 5,636, 258,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=55 */
%   | | | else return -0.0392150563339348;  // std dev = 3,676, 155,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=15 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.015445727607086844;  // std dev = 5,123, 250,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=30 */
%   | | | else return -0.10997123682805725;  // std dev = 0,001, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.6161854301883868;  // std dev = 0,011, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.2132867698487766;  // std dev = 3,262, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | | else return 0.008029016610417161;  // std dev = 3,626, 75,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | else return 0.11544808909263607;  // std dev = 0,481, 5.325,000 (wgt'ed) examples reached here.  /* #neg=3.385 #pos=1.940 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.7004143144739788;  // std dev = 0,257, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.14114734462185669;  // std dev = 0,158, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else if ( haswordtitle(H, K), haswordauthor(L, K) )
%   | | | then return -0.019092180791153154;  // std dev = 3,372, 111,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=15 */
%   | | | else return 0.023899519028581333;  // std dev = 3,433, 89,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | else return -0.011207750070230695;  // std dev = 0,325, 256,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=31 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08967495266474211;  // std dev = 0,478, 5.544,000 (wgt'ed) examples reached here.  /* #neg=3.540 #pos=2.004 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.21865201692674288;  // std dev = 2,698, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return -0.019255288020884716;  // std dev = 4,728, 346,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=56 */
%   | | else return 0.03923810026438576;  // std dev = 0,380, 80,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.05545740498524254;  // std dev = 0,776, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.14520289028043906;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.00256432268842949;  // std dev = 0,334, 234,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=30 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06876443601618355;  // std dev = 0,477, 5.589,000 (wgt'ed) examples reached here.  /* #neg=3.585 #pos=2.004 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.35663964903122336;  // std dev = 0,759, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1182906335001709;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06224893073758874;  // std dev = 1,959, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return -0.10328154878653517;  // std dev = 0,021, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10746473123366937;  // std dev = 2,765, 34,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return -0.05308600407878426;  // std dev = 0,940, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01743267612806384;  // std dev = 6,564, 456,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=56 */
%   | | | else return 0.01424464415036541;  // std dev = 3,505, 150,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=30 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05426215589104373;  // std dev = 0,477, 5.592,000 (wgt'ed) examples reached here.  /* #neg=3.588 #pos=2.004 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.32283657075426475;  // std dev = 0,579, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.02495986098166197;  // std dev = 1,947, 46,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return -0.09729719800400334;  // std dev = 0,025, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13597381359164168;  // std dev = 2,653, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return -0.010452844782447117;  // std dev = 5,473, 370,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=57 */
%   | | else return -0.006979129914136306;  // std dev = 0,326, 248,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=30 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordvenue(B, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.02839510068510282;  // std dev = 0,473, 5.303,000 (wgt'ed) examples reached here.  /* #neg=3.479 #pos=1.824 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.15680300148293203;  // std dev = 4,303, 139,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=22 */
%   | | | else return 0.35281849977812235;  // std dev = 4,547, 95,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=64 */
%   | else if ( haswordauthor(G, C) )
%   | | then return 0.1115961572688919;  // std dev = 0,342, 45,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else if ( title(H, D), venue(H, B) )
%   | | | then return 0.05323258834215;  // std dev = 7,850, 432,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=93 */
%   | | | else return -0.010113316422808554;  // std dev = 3,106, 123,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=19 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then return 0.4729079027664471;  // std dev = 0,403, 39,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=31 */
%   | | else return 0.6849236172221038;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.012227001841444757;  // std dev = 0,271, 182,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.01983993547991719;  // std dev = 0,471, 5.369,000 (wgt'ed) examples reached here.  /* #neg=3.542 #pos=1.827 */
%   | | else return 0.048707194615286734;  // std dev = 0,374, 451,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=99 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.19670411285919603;  // std dev = 0,300, 215,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=22 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2498378776337931;  // std dev = 4,468, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | | | else return 0.0649109207086433;  // std dev = 3,599, 117,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then return 0.07867934462930815;  // std dev = 0,323, 187,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
%   | | else if ( title(J, H), venue(J, B) )
%   | | | then return -0.05845638520797443;  // std dev = 0,742, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.2966059582134094;  // std dev = 1,249, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.2939238136150095;  // std dev = 0,299, 27,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */


Results
   AUC ROC   = 0.68292
   AUC PR    = 0.062346
   CLL	      = -0.336932
   Precision = 0.372093 at threshold = 0.5
   Recall    = 0.043478
   F1        = 0.077859


Total learning time: 2771.753 seconds
Total inference time: 16.249 seconds
AUC ROC: 0.68292


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 18:35:39
{'AUC PR': 0.062346, 'AUC ROC': 0.68292, 'Learning time': 2771.753, 'F1': 0.077859, 'Inference time': 16.249, 'Precision': [0.372093, 0.5], 'Recall': 0.043478, 'CLL': -0.336932}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21600607795665;  // std dev = 0,479, 5.600,000 (wgt'ed) examples reached here.  /* #neg=3.596 #pos=2.004 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3781489350995123;  // std dev = 2,498, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.0559906617182174;  // std dev = 6,642, 278,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=55 */
%   | | | else return -0.04381184921421314;  // std dev = 3,678, 153,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.01576410837874906;  // std dev = 5,034, 230,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=29 */
%   | | | else return -0.095339436993511;  // std dev = 1,381, 43,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.598446
   AUC PR    = 0.014214
   CLL	      = -0.196188
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 39.82 seconds
Total inference time: 3.524 seconds
AUC ROC: 0.598446


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 18:36:23
{'AUC PR': 0.014214, 'AUC ROC': 0.598446, 'Learning time': 39.82, 'F1': nan, 'Inference time': 3.524, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.196188}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,58e-06, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.15939408170547847;  // std dev = 39,651, 7.469,000 (wgt'ed) examples reached here.  /* #neg=5.219 #pos=2.250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.13535456526172782;  // std dev = 39,750, 7.557,000 (wgt'ed) examples reached here.  /* #neg=5.307 #pos=2.250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.11601481150005905;  // std dev = 39,753, 7.559,000 (wgt'ed) examples reached here.  /* #neg=5.309 #pos=2.250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.0970302384858357;  // std dev = 39,784, 7.587,000 (wgt'ed) examples reached here.  /* #neg=5.337 #pos=2.250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08151089104293832;  // std dev = 39,771, 7.576,000 (wgt'ed) examples reached here.  /* #neg=5.326 #pos=2.250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,58e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.0685931875975808;  // std dev = 39,738, 7.546,000 (wgt'ed) examples reached here.  /* #neg=5.296 #pos=2.250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05372900135128843;  // std dev = 39,809, 7.610,000 (wgt'ed) examples reached here.  /* #neg=5.360 #pos=2.250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1,93e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.04455701504255776;  // std dev = 39,786, 7.589,000 (wgt'ed) examples reached here.  /* #neg=5.339 #pos=2.250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03583320580963123;  // std dev = 39,792, 7.595,000 (wgt'ed) examples reached here.  /* #neg=5.345 #pos=2.250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03270525538484908;  // std dev = 39,684, 7.498,000 (wgt'ed) examples reached here.  /* #neg=5.248 #pos=2.250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.327607
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 25.386 seconds
Total inference time: 3.773 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.329567
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 13.431 seconds
Parameter learned model CLL: -0.329567


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.651, 5219, 2250], 'true': [1.58e-06, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.75, 5307, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.753, 5309, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.784, 5337, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.771, 5326, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.738, 5296, 2250], 'true': [4.58e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.809, 5360, 2250], 'true': [2.46e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.786, 5339, 2250], 'true': [1.93e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.792, 5345, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.684, 5248, 2250], 'true': [0.0, 0, 399]}]]
[{'': [6.268447192670558e-15, 0.2104965082522527]}, {'': [-5.342426584662407e-15, 0.20908975864419554]}, {'': [-1.2109500258568123e-15, 0.20905788517556234]}, {'': [-1.887657393247384e-15, 0.20861212778741478]}, {'': [-1.6383441526298048e-15, 0.20878714140909055]}, {'': [5.2533861415847e-16, 0.20926514216652717]}, {'': [1.5136875323210153e-16, 0.2082466358497801]}, {'': [9.349246523159212e-17, 0.2085803218767671]}, {'': [-2.62669307079235e-16, 0.208484931486706]}, {'': [-3.227716061566871e-16, 0.21003200213225517]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,58e-06, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3986894756400525;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.02706785401843078;  // std dev = 4,558, 148,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=25 */
%   | | else return 0.17023718391213163;  // std dev = 0,463, 6.527,000 (wgt'ed) examples reached here.  /* #neg=4.490 #pos=2.037 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.25814893509951237;  // std dev = 3,098, 40,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.024815601766178853;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.12481560176617904;  // std dev = 3,425, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.006586435099510776;  // std dev = 9,853, 768,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=114 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2967663300606935;  // std dev = 4,645, 87,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=40 */
%   | | | else return 0.08145389915924243;  // std dev = 4,344, 102,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | else return 0.15676261773623995;  // std dev = 0,466, 6.354,000 (wgt'ed) examples reached here.  /* #neg=4.317 #pos=2.037 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.016607681071710075;  // std dev = 1,298, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.1086236099559845;  // std dev = 3,421, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.005736091962407862;  // std dev = 8,723, 643,000 (wgt'ed) examples reached here.  /* #neg=554 #pos=89 */
%   | | | else return 0.03684547529186132;  // std dev = 5,796, 228,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=41 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.32447524281374407;  // std dev = 4,254, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | | | else return -0.0015262737899179857;  // std dev = 4,572, 152,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.13554271819328337;  // std dev = 6,358, 187,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=61 */
%   | | | else return 0.13017963982143538;  // std dev = 36,746, 6.240,000 (wgt'ed) examples reached here.  /* #neg=4.264 #pos=1.976 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.08915707020877574;  // std dev = 7,483, 310,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=74 */
%   | | | else return -0.020411590511690628;  // std dev = 5,150, 242,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=31 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0184158376377034;  // std dev = 6,141, 345,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=43 */
%   | | | else return -0.15345655792140653;  // std dev = 0,038, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1059791444660007;  // std dev = 0,463, 6.715,000 (wgt'ed) examples reached here.  /* #neg=4.613 #pos=2.102 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2287398007571122;  // std dev = 1,543, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.08276645383781384;  // std dev = 3,185, 53,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0027239402127941527;  // std dev = 8,709, 631,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=89 */
%   | | | else return 0.039829829500232276;  // std dev = 5,727, 208,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=41 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09402626968828756;  // std dev = 0,465, 6.589,000 (wgt'ed) examples reached here.  /* #neg=4.487 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03711409772886021;  // std dev = 7,650, 363,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=74 */
%   | | | else return -0.013956252511458265;  // std dev = 5,132, 235,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.019827243844978488;  // std dev = 6,154, 354,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=43 */
%   | | | else return -0.13365187520448854;  // std dev = 0,002, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,58e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08164672960016643;  // std dev = 0,467, 6.498,000 (wgt'ed) examples reached here.  /* #neg=4.396 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.14557123552604226;  // std dev = 3,299, 49,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return -0.0470827835750061;  // std dev = 1,351, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010804184717137;  // std dev = 8,674, 652,000 (wgt'ed) examples reached here.  /* #neg=564 #pos=88 */
%   | | | else return 0.03737217919297319;  // std dev = 5,756, 205,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1761465397048528;  // std dev = 5,464, 131,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=58 */
%   | | | else return -0.11498483785630197;  // std dev = 2,350, 61,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.048475290725657885;  // std dev = 6,413, 196,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=61 */
%   | | | else return 0.058467903620104004;  // std dev = 36,776, 6.262,000 (wgt'ed) examples reached here.  /* #neg=4.286 #pos=1.976 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.060164613104740784;  // std dev = 7,499, 314,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=74 */
%   | | | else return -0.028443799320992575;  // std dev = 5,149, 256,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=31 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.010082297254205244;  // std dev = 6,130, 339,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=43 */
%   | | | else return -0.12433825801700277;  // std dev = 0,028, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1,93e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.051122323559575265;  // std dev = 0,466, 6.569,000 (wgt'ed) examples reached here.  /* #neg=4.467 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.22225983266530594;  // std dev = 3,051, 38,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return -6.997740626050066E-4;  // std dev = 8,529, 546,000 (wgt'ed) examples reached here.  /* #neg=457 #pos=89 */
%   | | else return -1.5903572609751176E-4;  // std dev = 0,342, 318,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=43 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03058308334002448;  // std dev = 36,471, 6.249,000 (wgt'ed) examples reached here.  /* #neg=4.314 #pos=1.935 */
%   | | | else return 0.05178403846451923;  // std dev = 9,255, 576,000 (wgt'ed) examples reached here.  /* #neg=456 #pos=120 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.15983309757594155;  // std dev = 4,981, 288,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=28 */
%   | | | else return 0.13586244861141059;  // std dev = 7,313, 257,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=90 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5528481860552525;  // std dev = 0,377, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.019342630696372907;  // std dev = 1,198, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.028322674359790367;  // std dev = 5,671, 197,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.016249134421796395;  // std dev = 6,325, 195,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=59 */
%   | | | else return 0.6973094801409979;  // std dev = 0,044, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.0386122796725059;  // std dev = 0,466, 6.298,000 (wgt'ed) examples reached here.  /* #neg=4.261 #pos=2.037 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.14761794496289665;  // std dev = 3,111, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return -0.01338351436985476;  // std dev = 8,546, 557,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=89 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.013538016133947764;  // std dev = 6,113, 343,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=43 */
%   | | | else return -0.11452522417529934;  // std dev = 0,024, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.725237
   AUC PR    = 0.305244
   CLL	      = -0.305175
   Precision = 0.97 at threshold = 0.5
   Recall    = 0.263587
   F1        = 0.41453


Total learning time: 1147.646 seconds
Total inference time: 11.002 seconds
AUC ROC: 0.725237


Results scoring model
   AUC ROC   = 0.65108
   AUC PR    = 0.187314
   CLL	      = -0.328305
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 208.388 seconds
Refined model CLL: -0.328305


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.725237
   AUC PR    = 0.305244
   CLL	      = -0.305175
   Precision = 0.97 at threshold = 0.5
   Recall    = 0.263587
   F1        = 0.41453


Total learning time: 1394.8509999999999 seconds
Total inference time: 11.002 seconds
AUC ROC: 0.725237
Total revision time: 1394.8509999999999
Best scored revision CLL: -0.328305


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 18:59:54
{'AUC PR': 0.305244, 'AUC ROC': 0.725237, 'Learning time': 1394.8509999999999, 'F1': 0.41453, 'Inference time': 11.002, 'Precision': [0.97, 0.5], 'Recall': 0.263587, 'parameter_1.0': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Learning time': 25.386, 'F1': 0.413793, 'Inference time': 3.773, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.327607}, 'CLL': -0.305175}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.8055173561521439;  // std dev = 0,223, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.3923955104419774;  // std dev = 4,262, 73,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=39 */
%   | | | else return 0.0738352096093159;  // std dev = 4,154, 102,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=22 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.47719655414713086;  // std dev = 3,854, 63,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | | | else return 0.01642231639447612;  // std dev = 4,303, 139,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=22 */
%   | | else return 0.20880985890761644;  // std dev = 0,477, 6.733,000 (wgt'ed) examples reached here.  /* #neg=4.372 #pos=2.361 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( haswordtitle(L, J) )
%   | | then return 0.2137044906550679;  // std dev = 0,479, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | else return -0.05094197399139689;  // std dev = 0,287, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | else return 0.0045453314959067095;  // std dev = 0,354, 888,000 (wgt'ed) examples reached here.  /* #neg=758 #pos=130 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6773408397065112;  // std dev = 0,223, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2551956456824466;  // std dev = 5,532, 131,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=56 */
%   | | | else return -0.08959582305669955;  // std dev = 2,109, 74,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=5 */
%   | | else return 0.1828476492206537;  // std dev = 0,477, 6.879,000 (wgt'ed) examples reached here.  /* #neg=4.457 #pos=2.422 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return -0.0010379474144109316;  // std dev = 0,345, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return 0.25680900609024937;  // std dev = 2,893, 35,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.07981695588385963;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.10134499520273078;  // std dev = 0,437, 61,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | else return 0.006809393347502472;  // std dev = 0,356, 764,000 (wgt'ed) examples reached here.  /* #neg=650 #pos=114 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7294243599660711;  // std dev = 0,372, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.2358574885279386;  // std dev = 0,170, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.0014448709881518182;  // std dev = 4,453, 158,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=29 */
%   | | | else return 0.7407221526138951;  // std dev = 0,281, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2728995814301812;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | | else return 0.029553899271658114;  // std dev = 4,181, 107,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
%   | | else return 0.16242806446476254;  // std dev = 0,480, 6.578,000 (wgt'ed) examples reached here.  /* #neg=4.217 #pos=2.361 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.13472582727389082;  // std dev = 0,459, 58,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | else return 0.002632992915448303;  // std dev = 0,355, 878,000 (wgt'ed) examples reached here.  /* #neg=748 #pos=130 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.21761856009029137;  // std dev = 4,762, 127,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=63 */
%   | | | else return 0.6873286418551189;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.02918609568510322;  // std dev = 0,269, 79,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=12 */
%   | else return 0.1316510700791275;  // std dev = 0,478, 6.823,000 (wgt'ed) examples reached here.  /* #neg=4.401 #pos=2.422 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then return 0.22631928185329353;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( title(J, H), venue(J, A) )
%   | | | then return 0.06863649973335967;  // std dev = 7,496, 332,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=72 */
%   | | | else return -0.057849865705140564;  // std dev = 3,945, 196,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=17 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return -0.10062916910789156;  // std dev = 0,226, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else return -0.009734960138785154;  // std dev = 0,341, 312,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=42 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.42862615196205706;  // std dev = 0,228, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.2193584480752671;  // std dev = 3,094, 68,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | | | else return -0.028616783999627714;  // std dev = 4,038, 133,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=22 */
%   | else return 0.10984572964322692;  // std dev = 0,479, 6.783,000 (wgt'ed) examples reached here.  /* #neg=4.361 #pos=2.422 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.08629657817822103;  // std dev = 0,436, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else return -0.011871303252875647;  // std dev = 0,339, 656,000 (wgt'ed) examples reached here.  /* #neg=567 #pos=89 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.047352262781448926;  // std dev = 5,731, 201,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=41 */
%   | | | else return -0.018388439771480712;  // std dev = 1,337, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.14182703206570124;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.37710796459545504;  // std dev = 0,078, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.17017580627446363;  // std dev = 2,992, 70,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | | | else return -0.03299691109781193;  // std dev = 4,060, 143,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=22 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.14036032129155226;  // std dev = 4,547, 83,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=39 */
%   | | | else return -0.044266346832965486;  // std dev = 4,261, 126,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=22 */
%   | | else return 0.08792745615217222;  // std dev = 0,479, 6.632,000 (wgt'ed) examples reached here.  /* #neg=4.271 #pos=2.361 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, A) )
%   | | then return 0.4650590289176965;  // std dev = 1,103, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.03836088430522739;  // std dev = 0,437, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | else return -0.006123335350282236;  // std dev = 0,347, 918,000 (wgt'ed) examples reached here.  /* #neg=788 #pos=130 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.060198448203234514;  // std dev = 0,472, 6.596,000 (wgt'ed) examples reached here.  /* #neg=4.315 #pos=2.281 */
%   | | else return 0.057062102909446674;  // std dev = 0,389, 544,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=120 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.16670249053547895;  // std dev = 0,291, 294,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=28 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3887476210303966;  // std dev = 5,000, 116,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=79 */
%   | | | else return 0.08292825512879681;  // std dev = 5,492, 164,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=43 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.5558939692282494;  // std dev = 0,351, 64,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=55 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.05579615157237874;  // std dev = 5,660, 189,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=41 */
%   | | | else return -0.06295188262770607;  // std dev = 1,379, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return -0.12524219733436068;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.057297964329917614;  // std dev = 0,472, 7.029,000 (wgt'ed) examples reached here.  /* #neg=4.528 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7447873441574342;  // std dev = 2,390, 79,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=73 */
%   | | | else return -0.17150035846134032;  // std dev = 1,134, 266,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.23572783417597698;  // std dev = 2,664, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return -0.058004059919202745;  // std dev = 3,951, 211,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.00787696389100235;  // std dev = 5,917, 290,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=41 */
%   | | | else return -0.08199738155221667;  // std dev = 1,357, 40,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | | else return -0.11427362210617789;  // std dev = 0,022, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.034789192379330466;  // std dev = 0,472, 6.612,000 (wgt'ed) examples reached here.  /* #neg=4.331 #pos=2.281 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6815945686325712;  // std dev = 3,175, 129,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=118 */
%   | | | else return -0.15252826462380137;  // std dev = 1,553, 387,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=2 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.13419482290595458;  // std dev = 0,302, 269,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=28 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3204412649913842;  // std dev = 4,756, 111,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=79 */
%   | | | else return 0.05761670204600449;  // std dev = 4,840, 168,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=43 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.44530977976410524;  // std dev = 0,320, 62,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.18685672726145414;  // std dev = 0,210, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return 0.029776509624557954;  // std dev = 0,343, 210,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.05073583095027571;  // std dev = 4,676, 145,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=63 */
%   | | | else return 0.3323910796360461;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07889944159899247;  // std dev = 0,216, 90,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=12 */
%   | else return 0.034630696935702976;  // std dev = 0,472, 6.839,000 (wgt'ed) examples reached here.  /* #neg=4.417 #pos=2.422 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return -0.014870625938697438;  // std dev = 0,301, 506,000 (wgt'ed) examples reached here.  /* #neg=432 #pos=74 */
%   | | else return -0.028702394327957906;  // std dev = 0,285, 220,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=31 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return -0.13365534513708244;  // std dev = 0,679, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.011464161121085522;  // std dev = 5,025, 224,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=42 */
%   | | else return -0.10384295515800876;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.662422
   AUC PR    = 0.053006
   CLL	      = -0.332702
   Precision = 0.276923 at threshold = 0.5
   Recall    = 0.048913
   F1        = 0.083141


Total learning time: 4319.012 seconds
Total inference time: 20.487 seconds
AUC ROC: 0.662422


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 20:12:15
{'AUC PR': 0.053006, 'AUC ROC': 0.662422, 'Learning time': 4319.012, 'F1': 0.083141, 'Inference time': 20.487, 'Precision': [0.276923, 0.5], 'Recall': 0.048913, 'CLL': -0.332702}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.858148935099512;  // std dev = 2,38e-07, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return 0.11478610324110418;  // std dev = 4,643, 113,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2162210817582889;  // std dev = 0,479, 6.764,000 (wgt'ed) examples reached here.  /* #neg=4.342 #pos=2.422 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.7940463709969487;  // std dev = 2,163, 78,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=73 */
%   | | | else return -0.1378828109322343;  // std dev = 0,998, 252,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=1 */
%   | | else if ( haswordauthor(M, I) )
%   | | | then return 0.2823913593419366;  // std dev = 2,839, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return -0.05932679305582745;  // std dev = 3,949, 206,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=17 */
%   | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | then if ( title(Q, P), venue(Q, B) )
%   | | | then return 0.004577506528083151;  // std dev = 5,916, 280,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=41 */
%   | | | else return -0.10018439823382107;  // std dev = 1,384, 48,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.623594
   AUC PR    = 0.023225
   CLL	      = -0.194809
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 119.378 seconds
Total inference time: 5.065 seconds
AUC ROC: 0.623594


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 20:14:20
{'AUC PR': 0.023225, 'AUC ROC': 0.623594, 'Learning time': 119.378, 'F1': nan, 'Inference time': 5.065, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.194809}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 185871

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 64082

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.1389708529077266;  // std dev = 16,290, 1.314,000 (wgt'ed) examples reached here.  /* #neg=945 #pos=369 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,38e-07, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.1316152530312474;  // std dev = 16,172, 1.267,000 (wgt'ed) examples reached here.  /* #neg=898 #pos=369 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,37e-07, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.12562424743923375;  // std dev = 16,029, 1.215,000 (wgt'ed) examples reached here.  /* #neg=846 #pos=369 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 4,21e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.08446394896778993;  // std dev = 16,281, 1.310,000 (wgt'ed) examples reached here.  /* #neg=941 #pos=369 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.06946463508600675;  // std dev = 16,295, 1.316,000 (wgt'ed) examples reached here.  /* #neg=947 #pos=369 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.05852580951350561;  // std dev = 16,286, 1.312,000 (wgt'ed) examples reached here.  /* #neg=943 #pos=369 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.05104445324137265;  // std dev = 16,254, 1.299,000 (wgt'ed) examples reached here.  /* #neg=930 #pos=369 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3,65e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.05128911211741652;  // std dev = 16,146, 1.257,000 (wgt'ed) examples reached here.  /* #neg=888 #pos=369 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8,56e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.047463759273398666;  // std dev = 16,080, 1.233,000 (wgt'ed) examples reached here.  /* #neg=864 #pos=369 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,58e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.024308928868720256;  // std dev = 16,241, 1.294,000 (wgt'ed) examples reached here.  /* #neg=925 #pos=369 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.318846
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 3.503 seconds
Total inference time: 5.309 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.589087
   AUC PR    = 0.19713
   CLL	      = -0.318248
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.178174
   F1        = 0.302457


Total scoring time: 4.264 seconds
Parameter learned model CLL: -0.318248


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.29, 945, 369], 'true': [0.0, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.172, 898, 369], 'true': [2.38e-07, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.029, 846, 369], 'true': [3.37e-07, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.281, 941, 369], 'true': [4.21e-08, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.295, 947, 369], 'true': [0.0, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.286, 943, 369], 'true': [0.0, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.254, 930, 369], 'true': [0.0, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.146, 888, 369], 'true': [3.65e-08, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.08, 864, 369], 'true': [8.56e-08, 0, 80]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.241, 925, 369], 'true': [5.58e-08, 0, 80]}]]
[{'': [-7.993605777301127e-16, 0.2019609682867141]}, {'': [7.105427357601002e-16, 0.2064189065021884]}, {'': [1.4210854715202005e-15, 0.21146776406036447]}, {'': [2.2204460492503132e-17, 0.2023361109492456]}, {'': [-3.9968028886505636e-16, 0.20177370404929115]}, {'': [-4.4408920985006264e-17, 0.20214843750000458]}, {'': [-8.326672684688674e-17, 0.20337193115330235]}, {'': [1.6653345369377347e-17, 0.20738091033886247]}, {'': [9.159339953157541e-17, 0.20970749640364628]}, {'': [3.8857805861880476e-17, 0.20384475727947418]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15195887407073677;  // std dev = 0,456, 1.147,000 (wgt'ed) examples reached here.  /* #neg=810 #pos=337 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.21529179224236947;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010703523916881097;  // std dev = 3,728, 122,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=16 */
%   | | | else return 0.08731560176617903;  // std dev = 2,912, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,38e-07, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15535545052338667;  // std dev = 0,465, 1.064,000 (wgt'ed) examples reached here.  /* #neg=727 #pos=337 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.06982102170806738;  // std dev = 3,637, 78,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | | else return -0.027348436592468914;  // std dev = 2,265, 50,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | | else return -0.012116220010578051;  // std dev = 0,335, 70,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,37e-07, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4414810356154217;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.09260987347548738;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return 0.13016924854318135;  // std dev = 0,464, 1.052,000 (wgt'ed) examples reached here.  /* #neg=722 #pos=330 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.1689443447929574;  // std dev = 0,468, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.021159428169589354;  // std dev = 3,656, 99,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=16 */
%   | | | else return 0.08341702673146083;  // std dev = 2,879, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 4,21e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6295017119682899;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.005909412438071383;  // std dev = 1,986, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else return 0.10350046712534264;  // std dev = 0,461, 1.064,000 (wgt'ed) examples reached here.  /* #neg=737 #pos=327 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.10468051542076062;  // std dev = 3,505, 63,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0423916461324629;  // std dev = 2,261, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.026420993938324866;  // std dev = 2,822, 78,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=9 */
%   | | | else return -0.16227688496476203;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07986712148712911;  // std dev = 0,458, 1.117,000 (wgt'ed) examples reached here.  /* #neg=780 #pos=337 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06994162549304737;  // std dev = 3,552, 68,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return -0.0026018338917466162;  // std dev = 2,222, 40,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | else return -0.03268969850669752;  // std dev = 0,308, 85,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.15209234508165007;  // std dev = 2,329, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.26777564026157574;  // std dev = 0,192, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.07766795015180705;  // std dev = 0,463, 1.045,000 (wgt'ed) examples reached here.  /* #neg=718 #pos=327 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.305311763289986;  // std dev = 1,583, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.1504482977643886;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.016362795443370496;  // std dev = 3,727, 125,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=16 */
%   | | | else return 0.05794827139980805;  // std dev = 2,844, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06622596528872403;  // std dev = 0,463, 1.067,000 (wgt'ed) examples reached here.  /* #neg=730 #pos=337 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.20880703236342218;  // std dev = 1,650, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.004021987280913203;  // std dev = 3,775, 102,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.1356639730360042;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.017469960899843963;  // std dev = 2,822, 78,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3,65e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.05590735355035493;  // std dev = 1,818, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.3752123184613095;  // std dev = 0,731, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.03885481493186541;  // std dev = 0,458, 1.095,000 (wgt'ed) examples reached here.  /* #neg=765 #pos=330 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.2913425034173247;  // std dev = 0,473, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.05982845122433247;  // std dev = 1,298, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.007472625006943647;  // std dev = 4,524, 151,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=25 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8,56e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05980922877755264;  // std dev = 0,469, 1.020,000 (wgt'ed) examples reached here.  /* #neg=683 #pos=337 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.001956243559270113;  // std dev = 3,659, 110,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=17 */
%   | | | else return 0.11456687237475843;  // std dev = 1,722, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.1327547935122326;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.022739770092094134;  // std dev = 2,773, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,58e-08, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.04026910239217253;  // std dev = 2,437, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.2247569421395273;  // std dev = 0,150, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.03225432286476004;  // std dev = 0,464, 1.040,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=327 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.03305188510845877;  // std dev = 3,557, 70,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | | else return -0.05012063827185561;  // std dev = 2,105, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.14909838599373373;  // std dev = 0,013, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.011069251023015396;  // std dev = 2,814, 75,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */


Results
   AUC ROC   = 0.62903
   AUC PR    = 0.169999
   CLL	      = -0.326349
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 64.057 seconds
Total inference time: 12.209 seconds
AUC ROC: 0.62903


Results scoring model
   AUC ROC   = 0.639657
   AUC PR    = 0.207396
   CLL	      = -0.322011
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.178174
   F1        = 0.302457


Total scoring time: 13.861 seconds
Refined model CLL: -0.322011


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.318846
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 85.685 seconds
Total inference time: 5.309 seconds
AUC ROC: 0.566796
Total revision time: 85.685
Best scored revision CLL: -0.318248


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 20:16:05
{'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Learning time': 85.685, 'F1': 0.235698, 'Inference time': 5.309, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'parameter_0.2': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Learning time': 3.503, 'F1': 0.235698, 'Inference time': 5.309, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.318846}, 'CLL': -0.318846}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0418510649004878;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else return 0.22481560176617416;  // std dev = 0,482, 1.110,000 (wgt'ed) examples reached here.  /* #neg=703 #pos=407 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.4831489350995123;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.04963829680164004;  // std dev = 0,393, 94,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=18 */
%   | | else return -0.00949812372401708;  // std dev = 0,339, 68,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.32852142974552956;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.01498980207198863;  // std dev = 2,016, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.258609020898584;  // std dev = 1,395, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.01918545861654559;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return 0.19816761224087942;  // std dev = 0,483, 1.074,000 (wgt'ed) examples reached here.  /* #neg=677 #pos=397 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordauthor(M, K) )
%   | | then return 0.3442128842638682;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.04170954323096412;  // std dev = 0,392, 95,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=18 */
%   | else return -0.008121525984141356;  // std dev = 0,339, 68,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7767216705486826;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.22327832945131745;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.17361872551009983;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10414902839218593;  // std dev = 2,142, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return 0.07795529622842245;  // std dev = 0,375, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else return 0.1581129049073859;  // std dev = 0,480, 1.104,000 (wgt'ed) examples reached here.  /* #neg=707 #pos=397 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( haswordtitle(M, K) )
%   | | then return 0.28120058628467004;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return -0.12787801340658778;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.0203482244448605;  // std dev = 0,374, 160,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1334432579413359;  // std dev = 0,476, 1.158,000 (wgt'ed) examples reached here.  /* #neg=741 #pos=417 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.012694432341164281;  // std dev = 3,105, 72,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=13 */
%   | | | else return -0.035002928018246844;  // std dev = 1,890, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else return 0.11066764732081416;  // std dev = 0,442, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else return 0.10327772724352706;  // std dev = 0,442, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10514381828015315;  // std dev = 0,476, 1.169,000 (wgt'ed) examples reached here.  /* #neg=752 #pos=417 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(B, F) )
%   | | | then return 0.08100525629649584;  // std dev = 1,705, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.039021660384014056;  // std dev = 3,276, 113,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=12 */
%   | | else return 0.1365618059015323;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0.06623283126089027;  // std dev = 0,429, 46,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.46994665804843755;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.1937538375819121;  // std dev = 1,255, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.022036753068502755;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else return 0.09388433076672464;  // std dev = 0,481, 1.111,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=407 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.26794606145676075;  // std dev = 0,487, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( title(K, I), venue(K, A) )
%   | | | then return 0.08134243122657062;  // std dev = 3,429, 62,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return -0.08273669432896394;  // std dev = 1,366, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return -0.11969374386693994;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.01569416332678649;  // std dev = 0,327, 74,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06058522992807433;  // std dev = 0,473, 1.188,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=417 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7391290909607455;  // std dev = 0,984, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.19060105755768209;  // std dev = 0,272, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.10595358736054215;  // std dev = 1,563, 37,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return 0.14435942935109156;  // std dev = 1,194, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return -0.023035026231694275;  // std dev = 0,316, 80,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04800169694529225;  // std dev = 0,474, 1.184,000 (wgt'ed) examples reached here.  /* #neg=767 #pos=417 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.14074926355270942;  // std dev = 0,646, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return -0.033769896129893645;  // std dev = 0,930, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.15859474967618006;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return -0.03043144011968699;  // std dev = 1,599, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.10499589770721159;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.014308711844592564;  // std dev = 3,428, 115,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=15 */
%   | | | else return -0.0035470265754586083;  // std dev = 2,374, 51,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordvenue(B, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6585073700340712;  // std dev = 2,865, 361,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=353 */
%   | | | else return -0.2746379057571997;  // std dev = 4,721, 664,000 (wgt'ed) examples reached here.  /* #neg=641 #pos=23 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.15366888162884715;  // std dev = 2,588, 52,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   | | | else return 0.4024018378109123;  // std dev = 2,246, 26,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | else if ( haswordtitle(D, H), haswordauthor(I, H) )
%   | | then return 2.1452395020063087E-4;  // std dev = 0,349, 125,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=21 */
%   | | else return 0.34758502161453775;  // std dev = 0,403, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then return 0.13281708876073048;  // std dev = 0,403, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | else return -0.21773180960436234;  // std dev = 0,177, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.4357340978893752;  // std dev = 0,349, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.49816315095826985;  // std dev = 0,206, 386,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=371 */
%   | | else return -0.21154573081851172;  // std dev = 0,179, 801,000 (wgt'ed) examples reached here.  /* #neg=775 #pos=26 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then return -0.10327581428073321;  // std dev = 0,358, 33,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.31034001376529347;  // std dev = 2,246, 26,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return 0.06665220550420844;  // std dev = 1,907, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.5730850872008568;  // std dev = 0,968, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.17876452898071712;  // std dev = 0,076, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.24550037777750738;  // std dev = 0,196, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.3394958292353717;  // std dev = 0,344, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */


Results
   AUC ROC   = 0.982643
   AUC PR    = 0.395582
   CLL	      = -0.251537
   Precision = 0.348083 at threshold = 0.5
   Recall    = 0.918288
   F1        = 0.504813


Total learning time: 557.284 seconds
Total inference time: 78.705 seconds
AUC ROC: 0.982643


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 20:26:41
{'AUC PR': 0.395582, 'AUC ROC': 0.982643, 'Learning time': 557.284, 'F1': 0.504813, 'Inference time': 78.705, 'Precision': [0.348083, 0.5], 'Recall': 0.918288, 'CLL': -0.251537}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2103448810454534;  // std dev = 0,478, 1.184,000 (wgt'ed) examples reached here.  /* #neg=767 #pos=417 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(B, F) )
%   | | | then return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.03374295679237956;  // std dev = 3,271, 111,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=12 */
%   | | else return 0.16584124279182003;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0.12005369700427426;  // std dev = 0,440, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */


Results
   AUC ROC   = 0.541659
   AUC PR    = 0.012976
   CLL	      = -0.201307
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 43.493 seconds
Total inference time: 5.085 seconds
AUC ROC: 0.541659


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 20:27:30
{'AUC PR': 0.012976, 'AUC ROC': 0.541659, 'Learning time': 43.493, 'F1': nan, 'Inference time': 5.085, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.201307}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1,08e-06, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else return 0.14694893509950727;  // std dev = 22,660, 2.500,000 (wgt'ed) examples reached here.  /* #neg=1.778 #pos=722 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else return 0.12244023920996663;  // std dev = 22,750, 2.550,000 (wgt'ed) examples reached here.  /* #neg=1.828 #pos=722 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,84e-07, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else return 0.10917320251519463;  // std dev = 22,688, 2.515,000 (wgt'ed) examples reached here.  /* #neg=1.793 #pos=722 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583095;  // std dev = 3,91e-07, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else return 0.09390234958849863;  // std dev = 22,668, 2.504,000 (wgt'ed) examples reached here.  /* #neg=1.782 #pos=722 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014917;  // std dev = 3,48e-07, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else return 0.08476611710440389;  // std dev = 22,572, 2.453,000 (wgt'ed) examples reached here.  /* #neg=1.731 #pos=722 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948884;  // std dev = 3,55e-07, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else return 0.06776282991231015;  // std dev = 22,614, 2.475,000 (wgt'ed) examples reached here.  /* #neg=1.753 #pos=722 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325351;  // std dev = 2,98e-07, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else return 0.047075004552559314;  // std dev = 22,752, 2.551,000 (wgt'ed) examples reached here.  /* #neg=1.829 #pos=722 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527825;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else return 0.03595421037794443;  // std dev = 22,792, 2.574,000 (wgt'ed) examples reached here.  /* #neg=1.852 #pos=722 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else return 0.03446812747319966;  // std dev = 22,709, 2.527,000 (wgt'ed) examples reached here.  /* #neg=1.805 #pos=722 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7,60e-08, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else return 0.0360685150813051;  // std dev = 22,580, 2.457,000 (wgt'ed) examples reached here.  /* #neg=1.735 #pos=722 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.317775
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 5.64 seconds
Total inference time: 5.06 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.597996
   AUC PR    = 0.215086
   CLL	      = -0.316919
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.195991
   F1        = 0.327747


Total scoring time: 6.597 seconds
Parameter learned model CLL: -0.316919


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.66, 1778, 722], 'true': [1.08e-06, 0, 176]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.75, 1828, 722], 'true': [0.0, 0, 176]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.688, 1793, 722], 'true': [5.84e-07, 0, 176]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.668, 1782, 722], 'true': [3.91e-07, 0, 176]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.572, 1731, 722], 'true': [3.48e-07, 0, 176]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.614, 1753, 722], 'true': [3.55e-07, 0, 176]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.752, 1829, 722], 'true': [2.98e-07, 0, 176]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.792, 1852, 722], 'true': [0.0, 0, 176]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.709, 1805, 722], 'true': [0.0, 0, 176]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.58, 1735, 722], 'true': [7.6e-08, 0, 176]}]]
[{'': [6.620966401400933e-15, 0.20539456000002487]}, {'': [-3.148996215300444e-15, 0.20297054978856202]}, {'': [1.937843824800273e-15, 0.20466402380941526]}, {'': [8.679925465251224e-16, 0.2051994763649591]}, {'': [6.863196879500968e-16, 0.20770127811747785]}, {'': [7.16598497712601e-16, 0.20661826344251116]}, {'': [5.046468293750712e-16, 0.202922397977381]}, {'': [-1.6653345369377348e-16, 0.20181855613090868]}, {'': [-4.0371746350005693e-17, 0.2040816326530628]}, {'': [3.2802043909379627e-17, 0.20750394783768905]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1,08e-06, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.27920156667845974;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.06327714022771751;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else return 0.16639438092884573;  // std dev = 0,462, 2.086,000 (wgt'ed) examples reached here.  /* #neg=1.443 #pos=643 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07243464938522666;  // std dev = 2,171, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.010068119164054257;  // std dev = 5,433, 258,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=34 */
%   | | | else return 0.08803399257077657;  // std dev = 3,925, 87,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15301546176002542;  // std dev = 0,465, 2.084,000 (wgt'ed) examples reached here.  /* #neg=1.425 #pos=659 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.45445850836180285;  // std dev = 1,087, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.062322809650454;  // std dev = 1,959, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.028668641428153736;  // std dev = 5,367, 198,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=35 */
%   | | | else return -0.01543527196870709;  // std dev = 4,146, 157,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,84e-07, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1322474241068873;  // std dev = 0,465, 2.076,000 (wgt'ed) examples reached here.  /* #neg=1.417 #pos=659 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5368209785329391;  // std dev = 0,857, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07283217203567396;  // std dev = 1,934, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06519724649002116;  // std dev = 2,470, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.014836587754384473;  // std dev = 6,273, 293,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=47 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583095;  // std dev = 3,91e-07, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2822306463093719;  // std dev = 3,278, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return -0.16068690125933818;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.08222093684115658;  // std dev = 3,352, 57,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.10052521995277347;  // std dev = 20,750, 2.025,000 (wgt'ed) examples reached here.  /* #neg=1.404 #pos=621 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.17721408385499465;  // std dev = 2,124, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.02364057401879409;  // std dev = 5,314, 195,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.01446170554941298;  // std dev = 4,212, 162,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=21 */
%   | | | else return -0.15590073155305728;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014917;  // std dev = 3,48e-07, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07773995147250486;  // std dev = 0,459, 2.187,000 (wgt'ed) examples reached here.  /* #neg=1.528 #pos=659 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.013494199026796053;  // std dev = 5,509, 258,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=36 */
%   | | | else return 0.06525478135973059;  // std dev = 2,355, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.08618312950391353;  // std dev = 3,810, 79,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | | else return -0.133719385729255;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948884;  // std dev = 3,55e-07, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.062356063708835334;  // std dev = 0,458, 2.200,000 (wgt'ed) examples reached here.  /* #neg=1.541 #pos=659 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7452700902480994;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0711467563470471;  // std dev = 2,124, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010983781436837634;  // std dev = 5,411, 251,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=34 */
%   | | | else return 0.06165112659216311;  // std dev = 3,834, 84,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325351;  // std dev = 2,98e-07, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05631190416244102;  // std dev = 0,460, 2.161,000 (wgt'ed) examples reached here.  /* #neg=1.502 #pos=659 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4160620312327016;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07781608895340714;  // std dev = 1,837, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.010127861261617434;  // std dev = 5,498, 232,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=37 */
%   | | | else return 0.03232015802985505;  // std dev = 3,757, 84,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527825;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.053184576636642306;  // std dev = 0,463, 2.111,000 (wgt'ed) examples reached here.  /* #neg=1.452 #pos=659 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06386920213498751;  // std dev = 4,764, 121,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=31 */
%   | | | else return -0.028353692020508324;  // std dev = 3,032, 82,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.003101401091411852;  // std dev = 4,143, 146,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=21 */
%   | | | else return -0.12918168644951614;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936715;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.041298632478143305;  // std dev = 0,462, 2.120,000 (wgt'ed) examples reached here.  /* #neg=1.461 #pos=659 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.005694301731409766;  // std dev = 5,413, 199,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=38 */
%   | | | else return 0.22002655296079376;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.12309104901187304;  // std dev = 0,829, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.026134015990368478;  // std dev = 4,128, 174,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7,60e-08, 176,000 (wgt'ed) examples reached here.  /* #pos=176 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03671746374907628;  // std dev = 0,464, 2.093,000 (wgt'ed) examples reached here.  /* #neg=1.434 #pos=659 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.058433979327379294;  // std dev = 4,716, 121,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=31 */
%   | | | else return -0.05252533942284831;  // std dev = 3,077, 92,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.005137210624311555;  // std dev = 4,150, 154,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=21 */
%   | | | else return -0.11269244992337178;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.626761
   AUC PR    = 0.160553
   CLL	      = -0.324149
   Precision = 0.962617 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.234624


Total learning time: 92.77600000000001 seconds
Total inference time: 10.761 seconds
AUC ROC: 0.626761


Results scoring model
   AUC ROC   = 0.645359
   AUC PR    = 0.222636
   CLL	      = -0.318107
   Precision = 0.898477 at threshold = 0.5
   Recall    = 0.197105
   F1        = 0.323288


Total scoring time: 18.519 seconds
Refined model CLL: -0.318107


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.317775
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 123.53200000000001 seconds
Total inference time: 5.06 seconds
AUC ROC: 0.566796
Total revision time: 123.53200000000001
Best scored revision CLL: -0.316919


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 20:29:51
{'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'parameter_0.4': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Learning time': 5.64, 'F1': 0.235698, 'Inference time': 5.06, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.317775}, 'Learning time': 123.53200000000001, 'F1': 0.235698, 'Inference time': 5.06, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.317775}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22453770210257878;  // std dev = 0,482, 2.279,000 (wgt'ed) examples reached here.  /* #neg=1.444 #pos=835 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7192600462106227;  // std dev = 2,075, 36,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=31 */
%   | | | else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.13087620782678508;  // std dev = 2,089, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.07855992565998136;  // std dev = 2,164, 79,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.020750561115772417;  // std dev = 4,092, 123,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=20 */
%   | | | else return -0.10851773156715441;  // std dev = 0,983, 30,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18058451713514545;  // std dev = 0,478, 2.372,000 (wgt'ed) examples reached here.  /* #neg=1.537 #pos=835 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7466339871804317;  // std dev = 8,43e-08, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.14145896494019375;  // std dev = 2,049, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.07231340717514168;  // std dev = 2,168, 83,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.015604162073366254;  // std dev = 4,099, 125,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=20 */
%   | | | else return -0.09973570417938399;  // std dev = 0,985, 34,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15578407289288362;  // std dev = 0,478, 2.356,000 (wgt'ed) examples reached here.  /* #neg=1.521 #pos=835 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.7633631068968686;  // std dev = 0,221, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07742833719315916;  // std dev = 0,419, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return -0.01575864074311989;  // std dev = 4,655, 221,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=27 */
%   | | | else return 0.08181880020126946;  // std dev = 1,562, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.051443001186032344;  // std dev = 2,828, 84,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1289201928203019;  // std dev = 0,478, 2.362,000 (wgt'ed) examples reached here.  /* #neg=1.527 #pos=835 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.07499548557446102;  // std dev = 1,543, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.01369204613586668;  // std dev = 5,059, 229,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=30 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.04424065670634812;  // std dev = 1,575, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.13039844818156604;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04002738085697371;  // std dev = 2,741, 75,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | | else return -0.058744391733120814;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7521614585930622;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.1732140901720096;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.03162232519072161;  // std dev = 2,504, 37,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | else return 0.10387661273980658;  // std dev = 0,478, 2.303,000 (wgt'ed) examples reached here.  /* #neg=1.493 #pos=810 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then return 0.27811300496382346;  // std dev = 0,485, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( author(K, I), venue(K, A) )
%   | | | then return 0.40046385576724103;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14556757745522758;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.06925689478091748;  // std dev = 0,344, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else return 0.0014170936498941274;  // std dev = 0,317, 292,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=47 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5885591239475634;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( haswordtitle(G, D), haswordtitle(G, C) )
%   | | | then return -0.025663076496289072;  // std dev = 3,020, 52,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.24812817024074135;  // std dev = 1,387, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.08416276292617982;  // std dev = 0,478, 2.302,000 (wgt'ed) examples reached here.  /* #neg=1.492 #pos=810 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then return -0.07655924283368958;  // std dev = 0,478, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return 0.20048021146778142;  // std dev = 1,834, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.09819726123525353;  // std dev = 0,922, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.006854647581331153;  // std dev = 0,319, 240,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=34 */
%   | | else return 0.03550418272713316;  // std dev = 0,305, 85,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.12139239399300555;  // std dev = 3,509, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | | else return 0.7154767516734722;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.16180920592662698;  // std dev = 0,296, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.117852597920592;  // std dev = 2,160, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.062369262883352504;  // std dev = 2,549, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else return 0.07447447376913656;  // std dev = 0,480, 2.195,000 (wgt'ed) examples reached here.  /* #neg=1.407 #pos=788 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( author(L, K), venue(L, A) )
%   | | then return 0.17805142260576373;  // std dev = 0,988, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.08367360495999374;  // std dev = 0,458, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else return 0.007981527529395608;  // std dev = 0,312, 323,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=54 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05663781245399962;  // std dev = 0,478, 2.339,000 (wgt'ed) examples reached here.  /* #neg=1.504 #pos=835 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(B, F) )
%   | | | then return -0.010121920344473604;  // std dev = 2,141, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.029557192640455046;  // std dev = 4,799, 256,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=29 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.11481588348047955;  // std dev = 1,462, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.1155890845173773;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.20135260712891279;  // std dev = 0,126, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.09814410338321122;  // std dev = 0,753, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.005912584100383045;  // std dev = 2,748, 87,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.042860622002377495;  // std dev = 0,477, 2.350,000 (wgt'ed) examples reached here.  /* #neg=1.515 #pos=835 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return -0.0022272294222273857;  // std dev = 0,354, 195,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=30 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11257370157002754;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.032626956876798;  // std dev = 2,351, 85,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0195840275267329;  // std dev = 2,617, 84,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | | else return -0.04135850724481253;  // std dev = 0,967, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return -0.09705419307892392;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6519503732343471;  // std dev = 4,242, 725,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=707 */
%   | | | else return -0.2836814305897991;  // std dev = 6,875, 1.368,000 (wgt'ed) examples reached here.  /* #neg=1.319 #pos=49 */
%   | | else if ( samebib(E, G), venue(G, A) )
%   | | | then return 0.6729496331844128;  // std dev = 2,033, 46,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=41 */
%   | | | else return -0.1526667673298412;  // std dev = 1,237, 163,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=1 */
%   | else if ( title(H, D), venue(H, A) )
%   | | then return -0.18203073564117764;  // std dev = 0,296, 122,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=12 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.36297516634911947;  // std dev = 2,980, 43,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=30 */
%   | | | else return 0.06287738891734632;  // std dev = 2,629, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then return 0.060741127523604554;  // std dev = 0,349, 95,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | else return 0.5210468292048384;  // std dev = 0,298, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */


Results
   AUC ROC   = 0.97368
   AUC PR    = 0.417984
   CLL	      = -0.294409
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.007782
   F1        = 0.015404


Total learning time: 883.516 seconds
Total inference time: 47.885 seconds
AUC ROC: 0.97368


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 20:45:22
{'AUC PR': 0.417984, 'AUC ROC': 0.97368, 'Learning time': 883.516, 'F1': 0.015404, 'Inference time': 47.885, 'Precision': [0.75, 0.5], 'Recall': 0.007782, 'CLL': -0.294409}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2186843409717007;  // std dev = 0,480, 2.316,000 (wgt'ed) examples reached here.  /* #neg=1.481 #pos=835 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.15226658215833588;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.16584124279182005;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.009430973576287305;  // std dev = 5,016, 219,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=29 */
%   | | | else return 0.08314893509951238;  // std dev = 3,735, 80,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=18 */


Results
   AUC ROC   = 0.540835
   AUC PR    = 0.01296
   CLL	      = -0.202121
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.613 seconds
Total inference time: 3.843 seconds
AUC ROC: 0.540835


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 20:45:35
{'AUC PR': 0.01296, 'AUC ROC': 0.540835, 'Learning time': 8.613, 'F1': nan, 'Inference time': 3.843, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.202121}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.15158936347969462;  // std dev = 27,828, 3.735,000 (wgt'ed) examples reached here.  /* #neg=2.639 #pos=1.096 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.12747718171180433;  // std dev = 27,919, 3.795,000 (wgt'ed) examples reached here.  /* #neg=2.699 #pos=1.096 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,62e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.10300459197999351;  // std dev = 28,046, 3.882,000 (wgt'ed) examples reached here.  /* #neg=2.786 #pos=1.096 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.0939668571859643;  // std dev = 27,916, 3.793,000 (wgt'ed) examples reached here.  /* #neg=2.697 #pos=1.096 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,98e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.069503305157934;  // std dev = 28,098, 3.919,000 (wgt'ed) examples reached here.  /* #neg=2.823 #pos=1.096 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,15e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.06909568936625943;  // std dev = 27,875, 3.766,000 (wgt'ed) examples reached here.  /* #neg=2.670 #pos=1.096 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.05319774180847402;  // std dev = 27,949, 3.815,000 (wgt'ed) examples reached here.  /* #neg=2.719 #pos=1.096 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.05520171838370645;  // std dev = 27,719, 3.666,000 (wgt'ed) examples reached here.  /* #neg=2.570 #pos=1.096 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.02737758791670075;  // std dev = 28,063, 3.894,000 (wgt'ed) examples reached here.  /* #neg=2.798 #pos=1.096 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080111;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.03374351313213354;  // std dev = 27,836, 3.740,000 (wgt'ed) examples reached here.  /* #neg=2.644 #pos=1.096 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.3192
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 9.856 seconds
Total inference time: 4.896 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.59317
   AUC PR    = 0.205253
   CLL	      = -0.318485
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.18634
   F1        = 0.314143


Total scoring time: 8.267 seconds
Parameter learned model CLL: -0.318485


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.828, 2639, 1096], 'true': [1.08e-06, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.919, 2699, 1096], 'true': [0.0, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.046, 2786, 1096], 'true': [4.62e-07, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.916, 2697, 1096], 'true': [0.0, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.098, 2823, 1096], 'true': [1.98e-07, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.875, 2670, 1096], 'true': [3.15e-07, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.949, 2719, 1096], 'true': [2.86e-07, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.719, 2570, 1096], 'true': [0.0, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.063, 2798, 1096], 'true': [0.0, 0, 251]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.836, 2644, 1096], 'true': [0.0, 0, 251]}]]
[{'': [4.642589986639698e-15, 0.20733314337226547]}, {'': [-4.416122182413372e-15, 0.20539500521625828]}, {'': [8.492542658487254e-16, 0.20261920365354877]}, {'': [-3.113932308111993e-16, 0.20545930523078865]}, {'': [1.5569661540559965e-16, 0.20145168548018585]}, {'': [3.963186573960718e-16, 0.20632943272803936]}, {'': [3.255474685753447e-16, 0.20475319022483332]}, {'': [-2.1231356646218133e-17, 0.2095843047195759]}, {'': [-1.6277373428767236e-16, 0.20223968023709868]}, {'': [-3.5385594410363554e-18, 0.20717092281734645]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17107410516753443;  // std dev = 0,464, 3.234,000 (wgt'ed) examples reached here.  /* #neg=2.222 #pos=1.012 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.06269438964496693;  // std dev = 2,676, 44,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return -0.011295509344932378;  // std dev = 6,392, 360,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=47 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.09952824544433897;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.14530079451800462;  // std dev = 4,552, 97,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | | else return 0.8360224440025402;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.13856429149168836;  // std dev = 0,459, 3.226,000 (wgt'ed) examples reached here.  /* #neg=2.250 #pos=976 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.08442103983801394;  // std dev = 5,663, 179,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=42 */
%   | | | else return -0.0034354750963504284;  // std dev = 3,829, 123,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=17 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.025697010354719406;  // std dev = 4,704, 217,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=25 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,62e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12943066747593404;  // std dev = 0,464, 3.227,000 (wgt'ed) examples reached here.  /* #neg=2.215 #pos=1.012 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4546821330984658;  // std dev = 1,096, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10814972723247734;  // std dev = 2,605, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01755468721366723;  // std dev = 6,191, 356,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=44 */
%   | | | else return 0.054332347282870216;  // std dev = 4,668, 129,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10388121628168644;  // std dev = 0,461, 3.283,000 (wgt'ed) examples reached here.  /* #neg=2.271 #pos=1.012 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7889761523572334;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07413922964258575;  // std dev = 2,642, 39,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0204568673993238;  // std dev = 6,210, 371,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=44 */
%   | | | else return 0.04584537978918295;  // std dev = 4,665, 131,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=28 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,98e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08893558244148814;  // std dev = 0,462, 3.257,000 (wgt'ed) examples reached here.  /* #neg=2.245 #pos=1.012 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.15561899687620784;  // std dev = 2,595, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.016252263806819857;  // std dev = 1,041, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1056313779150551;  // std dev = 2,710, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.008398018537515147;  // std dev = 7,258, 448,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=62 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,15e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.18993610276582581;  // std dev = 4,189, 73,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=32 */
%   | | | else return -0.11481998136090536;  // std dev = 1,732, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else return 0.0662865550692992;  // std dev = 0,460, 3.216,000 (wgt'ed) examples reached here.  /* #neg=2.240 #pos=976 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.05603568778160764;  // std dev = 5,667, 183,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=42 */
%   | | | else return -0.021681864139503158;  // std dev = 3,799, 132,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=17 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.031239584239879915;  // std dev = 4,662, 239,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=25 */
%   | | | else return -0.12338917555038313;  // std dev = 0,012, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,86e-07, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06147706194671891;  // std dev = 0,463, 3.249,000 (wgt'ed) examples reached here.  /* #neg=2.237 #pos=1.012 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.031623790947465716;  // std dev = 5,719, 197,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=42 */
%   | | | else return -0.02568111169454994;  // std dev = 3,829, 136,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=17 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.021897577505396247;  // std dev = 4,664, 222,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=25 */
%   | | | else return -0.10920327838114342;  // std dev = 6,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05119130964437458;  // std dev = 0,463, 3.235,000 (wgt'ed) examples reached here.  /* #neg=2.223 #pos=1.012 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6154901006759351;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05760147309540289;  // std dev = 2,624, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -7.061923551517295E-4;  // std dev = 6,331, 296,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=49 */
%   | | | else return -0.026336738730918567;  // std dev = 4,545, 232,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=23 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04484068233426447;  // std dev = 0,465, 3.196,000 (wgt'ed) examples reached here.  /* #neg=2.184 #pos=1.012 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 8.501844123640413E-4;  // std dev = 6,487, 288,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=52 */
%   | | | else return 0.14016110785698138;  // std dev = 2,262, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.02354736983339158;  // std dev = 4,665, 230,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=25 */
%   | | | else return -0.0988854209933808;  // std dev = 0,019, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080111;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03716952565174411;  // std dev = 0,465, 3.183,000 (wgt'ed) examples reached here.  /* #neg=2.171 #pos=1.012 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -5.916008689707723E-4;  // std dev = 6,497, 290,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=52 */
%   | | | else return 0.17252113569595243;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.0036637354783636234;  // std dev = 4,601, 200,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=25 */
%   | | | else return -0.08920245323377281;  // std dev = 0,009, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.614386
   AUC PR    = 0.158793
   CLL	      = -0.326232
   Precision = 0.927928 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.23356


Total learning time: 140.832 seconds
Total inference time: 10.134 seconds
AUC ROC: 0.614386


Results scoring model
   AUC ROC   = 0.640235
   AUC PR    = 0.212699
   CLL	      = -0.318767
   Precision = 0.743363 at threshold = 0.5
   Recall    = 0.187082
   F1        = 0.298932


Total scoring time: 26.311 seconds
Refined model CLL: -0.318767


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.3192
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 185.266 seconds
Total inference time: 4.896 seconds
AUC ROC: 0.566796
Total revision time: 185.266
Best scored revision CLL: -0.318485


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 20:48:57
{'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Learning time': 185.266, 'F1': 0.235698, 'Inference time': 4.896, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'parameter_0.6': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Learning time': 9.856, 'F1': 0.235698, 'Inference time': 4.896, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.3192}, 'CLL': -0.3192}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21113943258413548;  // std dev = 0,478, 3.578,000 (wgt'ed) examples reached here.  /* #neg=2.315 #pos=1.263 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(B, F) )
%   | | | then return 0.17064893509951234;  // std dev = 2,622, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.03757299003417803;  // std dev = 5,910, 374,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=39 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.10814893509951237;  // std dev = 2,291, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.09922036367094003;  // std dev = 4,527, 112,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=27 */
%   | | | else return -0.06492798797741087;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.767955732489476;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.23045573248947598;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.03384556299795052;  // std dev = 3,092, 59,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | else return 0.18809867297953023;  // std dev = 0,479, 3.428,000 (wgt'ed) examples reached here.  /* #neg=2.202 #pos=1.226 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.7227253995368904;  // std dev = 2,298, 48,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=42 */
%   | | | else return -0.149748756433136;  // std dev = 0,088, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( haswordtitle(H, K), haswordauthor(L, K) )
%   | | | then return -0.05057078400666714;  // std dev = 2,952, 110,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=10 */
%   | | | else return 0.19599474964298488;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else return -0.018965227269142564;  // std dev = 0,322, 212,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=25 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6944283776844121;  // std dev = 4,21e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.25004577382565557;  // std dev = 2,335, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.02563687443853682;  // std dev = 3,098, 60,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
%   | else return 0.15766708070490215;  // std dev = 0,479, 3.450,000 (wgt'ed) examples reached here.  /* #neg=2.224 #pos=1.226 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.6647205825683159;  // std dev = 1,652, 45,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.1329629211215418;  // std dev = 0,062, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.14427528096918113;  // std dev = 2,505, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.06109360828186762;  // std dev = 2,670, 99,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=8 */
%   | else return -0.03064264263260698;  // std dev = 0,305, 241,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=25 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.1480107076216814;  // std dev = 4,385, 87,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=35 */
%   | | | else return -0.059804504137279516;  // std dev = 1,736, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else return 0.6713057293552663;  // std dev = 0,121, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G), haswordtitle(I, C) )
%   | | | then return 0.045819993846580434;  // std dev = 3,670, 71,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | | else return 0.13772558086269185;  // std dev = 1,593, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.1441663703167762;  // std dev = 0,482, 3.244,000 (wgt'ed) examples reached here.  /* #neg=2.050 #pos=1.194 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then return 0.017661999856589616;  // std dev = 0,314, 313,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=59 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.010793293412076202;  // std dev = 0,326, 207,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=25 */
%   | | else return -0.12010259973431722;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10814998075452305;  // std dev = 0,478, 3.525,000 (wgt'ed) examples reached here.  /* #neg=2.262 #pos=1.263 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.04853625206260566;  // std dev = 0,586, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1505454270342949;  // std dev = 2,441, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.029921293745610762;  // std dev = 4,036, 183,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=41 */
%   | | | else return -0.05691642109656393;  // std dev = 2,668, 102,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02550622376768749;  // std dev = 4,501, 154,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=24 */
%   | | | else return -0.11011050653971735;  // std dev = 0,990, 50,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
%   | | else return -0.10797816940036876;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09030538522427224;  // std dev = 0,479, 3.496,000 (wgt'ed) examples reached here.  /* #neg=2.233 #pos=1.263 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.040960342859418415;  // std dev = 4,188, 169,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=39 */
%   | | | else return -0.04916794324784134;  // std dev = 2,575, 114,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=13 */
%   | | else return 0.1692696038722798;  // std dev = 0,466, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.007920049897621151;  // std dev = 4,540, 170,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=24 */
%   | | | else return -0.09320140137618826;  // std dev = 0,987, 41,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
%   | | else return -0.09800948861110474;  // std dev = 6,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6868890013066735;  // std dev = 0,163, 1.161,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1.129 */
%   | | else return -0.2435432809422371;  // std dev = 0,171, 2.389,000 (wgt'ed) examples reached here.  /* #neg=2.320 #pos=69 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1534944410560027;  // std dev = 0,299, 177,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=18 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.41055983722429334;  // std dev = 3,643, 65,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=46 */
%   | | | else return 0.068429305481237;  // std dev = 3,131, 83,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.11490562314787053;  // std dev = 0,353, 114,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=39 */
%   | | else if ( title(K, I), venue(K, B) )
%   | | | then return -0.1215902725287985;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.14775252504621686;  // std dev = 1,256, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0.5947575293232558;  // std dev = 0,270, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.046948664404849426;  // std dev = 0,393, 3.521,000 (wgt'ed) examples reached here.  /* #neg=2.258 #pos=1.263 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.22505571968783789;  // std dev = 0,402, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.4735801062053902;  // std dev = 0,713, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12292544194243547;  // std dev = 0,060, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.12483205128420544;  // std dev = 1,041, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03506790925065102;  // std dev = 1,722, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.026010763378280156;  // std dev = 4,216, 269,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=40 */
%   | | | else return -0.017357726155097702;  // std dev = 3,911, 211,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.5059187142463235;  // std dev = 6,109, 1.110,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1.072 */
%   | | | else return -0.2161569065977302;  // std dev = 8,110, 2.104,000 (wgt'ed) examples reached here.  /* #neg=2.036 #pos=68 */
%   | | else return 0.028715594506612416;  // std dev = 0,309, 306,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=58 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.13635570455341714;  // std dev = 0,292, 186,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=18 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3082838095098186;  // std dev = 3,643, 65,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=46 */
%   | | | else return 0.04636261217110071;  // std dev = 3,138, 86,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return 0.07276660828814434;  // std dev = 0,339, 139,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=42 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then return 0.4615451188972476;  // std dev = 0,287, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return -0.148612187544102;  // std dev = 0,014, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.39082102683213227;  // std dev = 0,194, 1.173,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1.129 */
%   | | else return -0.17368677673458538;  // std dev = 0,166, 2.464,000 (wgt'ed) examples reached here.  /* #neg=2.395 #pos=69 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.030223128124212177;  // std dev = 3,767, 97,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=18 */
%   | | | else return -0.12080530688747403;  // std dev = 0,121, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.22265352934192686;  // std dev = 3,709, 66,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=46 */
%   | | | else return 0.02261252802735407;  // std dev = 3,125, 97,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.4860625260086651;  // std dev = 0,187, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return -0.00962265988904656;  // std dev = 0,283, 134,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=28 */
%   | | else return -0.12945471457707777;  // std dev = 0,011, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.989344
   AUC PR    = 0.388664
   CLL	      = -0.214306
   Precision = 0.354603 at threshold = 0.5
   Recall    = 0.944228
   F1        = 0.515581


Total learning time: 2235.498 seconds
Total inference time: 97.67699999999999 seconds
AUC ROC: 0.989344


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 21:27:51
{'AUC PR': 0.388664, 'AUC ROC': 0.989344, 'Learning time': 2235.498, 'F1': 0.515581, 'Inference time': 97.67699999999999, 'Precision': [0.354603, 0.5], 'Recall': 0.944228, 'CLL': -0.214306}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2196257525007665;  // std dev = 0,480, 3.494,000 (wgt'ed) examples reached here.  /* #neg=2.231 #pos=1.263 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7914822684328453;  // std dev = 1,673, 45,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14185106490048804;  // std dev = 0,000, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1914822684328457;  // std dev = 2,449, 27,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.05851773156715434;  // std dev = 2,708, 96,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.00851773156715467;  // std dev = 4,561, 180,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=24 */
%   | | | else return -0.11912379217321498;  // std dev = 0,989, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.561725
   AUC PR    = 0.022031
   CLL	      = -0.200674
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 47.475 seconds
Total inference time: 5.362 seconds
AUC ROC: 0.561725


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 21:28:44
{'AUC PR': 0.022031, 'AUC ROC': 0.561725, 'Learning time': 47.475, 'F1': nan, 'Inference time': 5.362, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.200674}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.14875732257735713;  // std dev = 32,358, 5.079,000 (wgt'ed) examples reached here.  /* #neg=3.603 #pos=1.476 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.12717136522517705;  // std dev = 32,415, 5.123,000 (wgt'ed) examples reached here.  /* #neg=3.647 #pos=1.476 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.11266398260582888;  // std dev = 32,337, 5.063,000 (wgt'ed) examples reached here.  /* #neg=3.587 #pos=1.476 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.09165104510929535;  // std dev = 32,425, 5.131,000 (wgt'ed) examples reached here.  /* #neg=3.655 #pos=1.476 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.07809965222955746;  // std dev = 32,396, 5.108,000 (wgt'ed) examples reached here.  /* #neg=3.632 #pos=1.476 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,82e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.0622873298033884;  // std dev = 32,453, 5.153,000 (wgt'ed) examples reached here.  /* #neg=3.677 #pos=1.476 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,53e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.05294681783740398;  // std dev = 32,415, 5.123,000 (wgt'ed) examples reached here.  /* #neg=3.647 #pos=1.476 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2,67e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.040892362892753574;  // std dev = 32,470, 5.166,000 (wgt'ed) examples reached here.  /* #neg=3.690 #pos=1.476 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.03469861332761768;  // std dev = 32,437, 5.140,000 (wgt'ed) examples reached here.  /* #neg=3.664 #pos=1.476 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801178;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.03384980061079002;  // std dev = 32,306, 5.039,000 (wgt'ed) examples reached here.  /* #neg=3.563 #pos=1.476 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.318909
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 13.386 seconds
Total inference time: 4.673 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.589087
   AUC PR    = 0.196936
   CLL	      = -0.318311
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.178174
   F1        = 0.302457


Total scoring time: 9.709 seconds
Parameter learned model CLL: -0.318311


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.358, 3603, 1476], 'true': [1.05e-06, 0, 320]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.415, 3647, 1476], 'true': [0.0, 0, 320]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.337, 3587, 1476], 'true': [0.0, 0, 320]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.425, 3655, 1476], 'true': [0.0, 0, 320]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.396, 3632, 1476], 'true': [0.0, 0, 320]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.453, 3677, 1476], 'true': [3.82e-07, 0, 320]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.415, 3647, 1476], 'true': [2.53e-07, 0, 320]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.47, 3690, 1476], 'true': [2.67e-07, 0, 320]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.437, 3664, 1476], 'true': [0.0, 0, 320]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.306, 3563, 1476], 'true': [0.0, 0, 320]}]]
[{'': [3.4638958368304883e-15, 0.20615515260531772]}, {'': [-4.973799150320701e-15, 0.20510365942565137]}, {'': [-3.552713678800501e-16, 0.2065389093666812]}, {'': [-9.103828801926283e-16, 0.20491309336393362]}, {'': [-5.10702591327572e-16, 0.20546148379038928]}, {'': [4.551914400963141e-16, 0.20439002766084963]}, {'': [1.9984014443252818e-16, 0.20510365942572634]}, {'': [2.220446049250313e-16, 0.20408163265305748]}, {'': [-2.248201624865942e-16, 0.20469893563869862]}, {'': [-1.942890293094024e-16, 0.20711591085858314]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17586693138893203;  // std dev = 0,466, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.942 #pos=1.370 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.020785689597824362;  // std dev = 6,629, 413,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=50 */
%   | | | else return 0.02481560176617902;  // std dev = 3,979, 114,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.09381772490842813;  // std dev = 5,318, 157,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=37 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15300867312634006;  // std dev = 0,466, 4.313,000 (wgt'ed) examples reached here.  /* #neg=2.943 #pos=1.370 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22818145555417468;  // std dev = 2,971, 38,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.041973180550392855;  // std dev = 1,280, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.030781230644448418;  // std dev = 6,929, 492,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=54 */
%   | | | else return 0.05068671996449516;  // std dev = 5,349, 177,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12969854492150293;  // std dev = 0,465, 4.329,000 (wgt'ed) examples reached here.  /* #neg=2.959 #pos=1.370 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06771964348843648;  // std dev = 6,474, 244,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=54 */
%   | | | else return -0.033319994962557234;  // std dev = 4,166, 177,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=20 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.016579871724435966;  // std dev = 5,307, 267,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=32 */
%   | | | else return -0.1311117685668957;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10508182539546045;  // std dev = 0,463, 4.386,000 (wgt'ed) examples reached here.  /* #neg=3.016 #pos=1.370 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4096600442593947;  // std dev = 1,295, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06188360209171061;  // std dev = 3,048, 53,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.027916379209508017;  // std dev = 6,925, 496,000 (wgt'ed) examples reached here.  /* #neg=442 #pos=54 */
%   | | | else return 0.04661860860035289;  // std dev = 5,302, 170,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08404252134264811;  // std dev = 0,462, 4.432,000 (wgt'ed) examples reached here.  /* #neg=3.062 #pos=1.370 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06590160386810419;  // std dev = 6,416, 232,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=54 */
%   | | | else return -0.023692127310073294;  // std dev = 4,139, 167,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=20 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.024800592541611047;  // std dev = 5,329, 298,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=32 */
%   | | | else return -0.12178251212381333;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,82e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07610921246009245;  // std dev = 0,465, 4.333,000 (wgt'ed) examples reached here.  /* #neg=2.963 #pos=1.370 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.05024332968023467;  // std dev = 6,442, 239,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=54 */
%   | | | else return -0.029538505366693845;  // std dev = 4,164, 179,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=20 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.017365196547576862;  // std dev = 5,316, 285,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=32 */
%   | | | else return -0.10934588709061674;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,53e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05920215493663379;  // std dev = 0,464, 4.371,000 (wgt'ed) examples reached here.  /* #neg=3.001 #pos=1.370 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.02092115973034317;  // std dev = 0,950, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.04530717786233719;  // std dev = 3,153, 64,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.10791634066193335;  // std dev = 3,261, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return -0.012517105509399482;  // std dev = 8,085, 574,000 (wgt'ed) examples reached here.  /* #neg=497 #pos=77 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2,67e-07, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.0645745792834022;  // std dev = 4,842, 106,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return 0.7343859000381188;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.046357731024010966;  // std dev = 0,463, 4.260,000 (wgt'ed) examples reached here.  /* #neg=2.931 #pos=1.329 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.09283564873208905;  // std dev = 2,939, 48,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.10433744622298553;  // std dev = 1,165, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.14461491679936447;  // std dev = 3,166, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.014372754007933997;  // std dev = 8,096, 595,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=77 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.047469213675375245;  // std dev = 5,140, 121,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=39 */
%   | | | else return 0.6735585448397012;  // std dev = 0,179, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03736090286890164;  // std dev = 0,463, 4.242,000 (wgt'ed) examples reached here.  /* #neg=2.917 #pos=1.325 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.17535956901541036;  // std dev = 2,895, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return -0.005835061239475717;  // std dev = 7,019, 384,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=60 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.019357082944351445;  // std dev = 5,331, 296,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=32 */
%   | | | else return -0.1001978926821677;  // std dev = 0,030, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801178;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.0056311043951875785;  // std dev = 4,979, 120,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=35 */
%   | | | else return 0.5084994498257369;  // std dev = 0,182, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.030249958679359774;  // std dev = 0,463, 4.250,000 (wgt'ed) examples reached here.  /* #neg=2.921 #pos=1.329 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.06148686093900498;  // std dev = 2,976, 51,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0.1290175124875651;  // std dev = 1,134, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02034161999870705;  // std dev = 7,004, 495,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=57 */
%   | | | else return 0.01450688554464;  // std dev = 5,240, 179,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=35 */


Results
   AUC ROC   = 0.596895
   AUC PR    = 0.151621
   CLL	      = -0.326751
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 191.649 seconds
Total inference time: 10.834 seconds
AUC ROC: 0.596895


Results scoring model
   AUC ROC   = 0.632929
   AUC PR    = 0.203838
   CLL	      = -0.318853
   Precision = 0.936782 at threshold = 0.5
   Recall    = 0.181514
   F1        = 0.304104


Total scoring time: 40.347 seconds
Refined model CLL: -0.318853


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.318909
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 255.091 seconds
Total inference time: 4.673 seconds
AUC ROC: 0.566796
Total revision time: 255.091
Best scored revision CLL: -0.318311


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 21:33:16
{'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'parameter_0.8': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Learning time': 13.386, 'F1': 0.235698, 'Inference time': 4.673, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.318909}, 'Learning time': 255.091, 'F1': 0.235698, 'Inference time': 4.673, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.318909}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.3930326560297439;  // std dev = 3,271, 43,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | | else return 0.047622619310038694;  // std dev = 3,820, 95,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=18 */
%   | else return 0.21705003400060607;  // std dev = 0,480, 4.550,000 (wgt'ed) examples reached here.  /* #neg=2.917 #pos=1.633 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.805517356152144;  // std dev = 1,686, 57,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=54 */
%   | | | else return -0.14185106490048824;  // std dev = 0,000, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else if ( haswordauthor(K, G) )
%   | | | then return 0.221785298735876;  // std dev = 2,763, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.08470820775763051;  // std dev = 2,746, 140,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=8 */
%   | else return -0.035538772541684194;  // std dev = 0,308, 301,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.156541961754199;  // std dev = 4,712, 101,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   | | else return 0.7824154049244935;  // std dev = 0,055, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, C) )
%   | | | then return 0.12371802705217572;  // std dev = 5,042, 128,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=37 */
%   | | | else return 0.8522524083232305;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19267922430041715;  // std dev = 0,481, 4.396,000 (wgt'ed) examples reached here.  /* #neg=2.800 #pos=1.596 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordauthor(L, J) )
%   | | then return 0.2161418965225606;  // std dev = 0,478, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else return 0.01525692540336675;  // std dev = 0,327, 364,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=60 */
%   | else return -0.03196920785090797;  // std dev = 0,307, 303,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1700095657602501;  // std dev = 0,482, 4.567,000 (wgt'ed) examples reached here.  /* #neg=2.877 #pos=1.690 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6897534064406077;  // std dev = 1,388, 56,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=54 */
%   | | | else return -0.12726445279169313;  // std dev = 0,024, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.13895351913149717;  // std dev = 2,808, 35,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return -0.0715897226280737;  // std dev = 2,739, 129,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0019154397616612455;  // std dev = 5,188, 235,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=31 */
%   | | | else return -0.11496240885038059;  // std dev = 0,991, 53,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
%   | | else return -0.13383033337868236;  // std dev = 9,13e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.45148918073812794;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.29453452827917626;  // std dev = 2,782, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.033391240954837496;  // std dev = 3,856, 80,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | else return 0.13447877808800554;  // std dev = 0,480, 4.521,000 (wgt'ed) examples reached here.  /* #neg=2.884 #pos=1.637 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then if ( author(J, H), venue(J, A) )
%   | | | then return 0.09079292562685018;  // std dev = 0,791, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.22386119336652677;  // std dev = 2,553, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( author(K, H), venue(K, A) )
%   | | | then return 0.3713778931464139;  // std dev = 0,990, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13221370589002884;  // std dev = 0,012, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.015432661693826578;  // std dev = 0,287, 671,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=90 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.4015235248484687;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.06372320219275114;  // std dev = 4,738, 107,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.3864965166514757;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4450002809613095;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.10373109524642048;  // std dev = 0,478, 4.602,000 (wgt'ed) examples reached here.  /* #neg=2.965 #pos=1.637 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.36783559178149994;  // std dev = 1,056, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return 0.07300729639999755;  // std dev = 2,796, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.11645643437661099;  // std dev = 0,017, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.011693004301370508;  // std dev = 0,285, 671,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=90 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08898942419628306;  // std dev = 0,479, 4.666,000 (wgt'ed) examples reached here.  /* #neg=2.976 #pos=1.690 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.014114805051537295;  // std dev = 0,924, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.03712191607840079;  // std dev = 1,989, 49,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.011032874741119117;  // std dev = 6,391, 363,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=49 */
%   | | | else return -0.066383799417957;  // std dev = 2,060, 108,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04569772302879317;  // std dev = 3,694, 149,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=36 */
%   | | | else return -0.07598038658857009;  // std dev = 0,993, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else return -0.11624662958215243;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06299072225079334;  // std dev = 0,477, 4.768,000 (wgt'ed) examples reached here.  /* #neg=3.078 #pos=1.690 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7407081275312507;  // std dev = 2,168, 55,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=50 */
%   | | | else return -0.14031492188327738;  // std dev = 0,794, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.007553814833669832;  // std dev = 2,677, 100,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=18 */
%   | | | else return -0.09925742953782411;  // std dev = 1,009, 60,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02445093652800551;  // std dev = 3,668, 170,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=36 */
%   | | | else return -0.07392251931179113;  // std dev = 1,010, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else return -0.10101770063012212;  // std dev = 0,024, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05620927611238587;  // std dev = 0,478, 4.685,000 (wgt'ed) examples reached here.  /* #neg=2.995 #pos=1.690 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.17477546295197668;  // std dev = 0,714, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11351384471192709;  // std dev = 0,011, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05415592290752745;  // std dev = 1,964, 41,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.07603643315064697;  // std dev = 0,812, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.007767175672435076;  // std dev = 5,445, 363,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=49 */
%   | | | else return -0.05307715416323793;  // std dev = 2,108, 83,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0013377483084870045;  // std dev = 3,821, 188,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=35 */
%   | | | else return -0.09352681889896988;  // std dev = 0,016, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04936551487411477;  // std dev = 0,480, 4.618,000 (wgt'ed) examples reached here.  /* #neg=2.928 #pos=1.690 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6031707083065249;  // std dev = 0,149, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12492618044710208;  // std dev = 0,033, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.023483870141587704;  // std dev = 1,980, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return -0.1539537139925419;  // std dev = 0,129, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.002865016811241664;  // std dev = 5,485, 330,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=49 */
%   | | | else return -0.04568004447368106;  // std dev = 2,067, 103,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007641984705160022;  // std dev = 3,717, 186,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=35 */
%   | | | else return -0.08792362999587844;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03168042992475538;  // std dev = 0,478, 4.266,000 (wgt'ed) examples reached here.  /* #neg=2.739 #pos=1.527 */
%   | | else return 0.018935646353126823;  // std dev = 0,322, 409,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=75 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.17262166310229402;  // std dev = 0,307, 214,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=23 */
%   | | else if ( haswordtitle(D, G), haswordauthor(H, G) )
%   | | | then return 0.1957058622151147;  // std dev = 5,281, 158,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=74 */
%   | | | else return 0.06312671025969294;  // std dev = 2,894, 65,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.402346357313102;  // std dev = 1,926, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.30183791064955584;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6208185848517132;  // std dev = 0,202, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return 0.0174619729568023;  // std dev = 0,283, 177,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=37 */


Results
   AUC ROC   = 0.597326
   AUC PR    = 0.035828
   CLL	      = -0.376979
   Precision = 0.454545 at threshold = 0.5
   Recall    = 0.006485
   F1        = 0.012788


Total learning time: 1465.162 seconds
Total inference time: 27.344 seconds
AUC ROC: 0.597326


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 21:58:09
{'AUC PR': 0.035828, 'AUC ROC': 0.597326, 'Learning time': 1465.162, 'F1': 0.012788, 'Inference time': 27.344, 'Precision': [0.454545, 0.5], 'Recall': 0.006485, 'CLL': -0.376979}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21795306539544074;  // std dev = 0,480, 4.697,000 (wgt'ed) examples reached here.  /* #neg=3.007 #pos=1.690 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.16926004621062346;  // std dev = 0,463, 45,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else return 0.011995088945666036;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return 0.06569610491083312;  // std dev = 2,952, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.04300049018784439;  // std dev = 6,225, 435,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=43 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.08891816586874178;  // std dev = 5,262, 156,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.541183
   AUC PR    = 0.01297
   CLL	      = -0.2015
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 19.832 seconds
Total inference time: 3.587 seconds
AUC ROC: 0.541183


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 21:58:34
{'AUC PR': 0.01297, 'AUC ROC': 0.541183, 'Learning time': 19.832, 'F1': nan, 'Inference time': 3.587, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.2015}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,53e-06, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15067023519417422;  // std dev = 36,217, 6.338,000 (wgt'ed) examples reached here.  /* #neg=4.484 #pos=1.854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.12830700404748363;  // std dev = 36,294, 6.404,000 (wgt'ed) examples reached here.  /* #neg=4.550 #pos=1.854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11256561224882443;  // std dev = 36,233, 6.352,000 (wgt'ed) examples reached here.  /* #neg=4.498 #pos=1.854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08967775227305509;  // std dev = 36,380, 6.479,000 (wgt'ed) examples reached here.  /* #neg=4.625 #pos=1.854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.07495727174139964;  // std dev = 36,384, 6.483,000 (wgt'ed) examples reached here.  /* #neg=4.629 #pos=1.854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06870376338139597;  // std dev = 36,218, 6.339,000 (wgt'ed) examples reached here.  /* #neg=4.485 #pos=1.854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.060140479775970125;  // std dev = 36,126, 6.262,000 (wgt'ed) examples reached here.  /* #neg=4.408 #pos=1.854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2,19e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.04369714352578045;  // std dev = 36,265, 6.379,000 (wgt'ed) examples reached here.  /* #neg=4.525 #pos=1.854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03954712432821579;  // std dev = 36,161, 6.291,000 (wgt'ed) examples reached here.  /* #neg=4.437 #pos=1.854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.024071161828687692;  // std dev = 36,363, 6.464,000 (wgt'ed) examples reached here.  /* #neg=4.610 #pos=1.854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.321293
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 20.734 seconds
Total inference time: 4.899 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.320754
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 10.912 seconds
Parameter learned model CLL: -0.320754


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.217, 4484, 1854], 'true': [1.53e-06, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.294, 4550, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.233, 4498, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.38, 4625, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.384, 4629, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.218, 4485, 1854], 'true': [4.46e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.126, 4408, 1854], 'true': [2.46e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.265, 4525, 1854], 'true': [2.19e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.161, 4437, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.363, 4610, 1854], 'true': [0.0, 0, 392]}]]
[{'': [5.945357584931451e-15, 0.20695258908553088]}, {'': [-5.3653226985966745e-15, 0.20569251104385441]}, {'': [-1.1600697726695512e-15, 0.20668463967785833]}, {'': [-1.740104659004327e-15, 0.20427043182545546]}, {'': [-1.5407176668267478e-15, 0.20419488894996451]}, {'': [5.075305255429287e-16, 0.2069334382136431]}, {'': [1.5407176668267478e-16, 0.20841318427802702]}, {'': [1.2235110883624173e-16, 0.2061688787630962]}, {'': [-2.628283078704452e-16, 0.2078546707844831]}, {'': [-3.149408171895852e-16, 0.2045539921024339]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,53e-06, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17295355810446036;  // std dev = 0,464, 5.451,000 (wgt'ed) examples reached here.  /* #neg=3.735 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16723984419042145;  // std dev = 3,427, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return -0.0168510649004878;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.015588438637860982;  // std dev = 8,095, 594,000 (wgt'ed) examples reached here.  /* #neg=519 #pos=75 */
%   | | | else return 0.03774077183420566;  // std dev = 6,008, 245,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=44 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3357646290905083;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.15081799677549024;  // std dev = 0,465, 5.434,000 (wgt'ed) examples reached here.  /* #neg=3.722 #pos=1.712 */
%   | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return 0.17654740169043137;  // std dev = 3,350, 50,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return -0.01481214937855653;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.014335927128905183;  // std dev = 8,098, 597,000 (wgt'ed) examples reached here.  /* #neg=522 #pos=75 */
%   | | | else return 0.044796734662352275;  // std dev = 5,965, 230,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=44 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13052712706874564;  // std dev = 0,465, 5.421,000 (wgt'ed) examples reached here.  /* #neg=3.705 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.24685017776005916;  // std dev = 3,097, 39,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.010072331578991997;  // std dev = 7,999, 492,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=76 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.018237898366554546;  // std dev = 6,293, 375,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=45 */
%   | | | else return -0.15219829932277534;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10359807906651665;  // std dev = 0,463, 5.532,000 (wgt'ed) examples reached here.  /* #neg=3.816 #pos=1.716 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4160143145354122;  // std dev = 1,272, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.08859986807172064;  // std dev = 3,385, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06568894762753302;  // std dev = 3,468, 63,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.011049627564917529;  // std dev = 9,396, 780,000 (wgt'ed) examples reached here.  /* #neg=678 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08880322390223425;  // std dev = 0,464, 5.484,000 (wgt'ed) examples reached here.  /* #neg=3.768 #pos=1.716 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.10464976868979292;  // std dev = 3,507, 64,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.013356607712436455;  // std dev = 1,222, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010665411123890798;  // std dev = 8,042, 566,000 (wgt'ed) examples reached here.  /* #neg=490 #pos=76 */
%   | | | else return 0.05245837433735586;  // std dev = 5,837, 210,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=43 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07379202660250478;  // std dev = 0,464, 5.470,000 (wgt'ed) examples reached here.  /* #neg=3.754 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.07752650135521448;  // std dev = 7,130, 284,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=67 */
%   | | | else return -0.04396807317616586;  // std dev = 4,608, 221,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=26 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.015122635188624944;  // std dev = 6,291, 375,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=45 */
%   | | | else return -0.13890797442350503;  // std dev = 0,007, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06100550568918829;  // std dev = 0,464, 5.454,000 (wgt'ed) examples reached here.  /* #neg=3.738 #pos=1.716 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3376760893295351;  // std dev = 1,267, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.03215800038424123;  // std dev = 3,425, 72,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06203970788793624;  // std dev = 3,475, 62,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.006004138160195461;  // std dev = 9,340, 740,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2,19e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0491117500625764;  // std dev = 0,464, 5.457,000 (wgt'ed) examples reached here.  /* #neg=3.741 #pos=1.716 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.016384856411448937;  // std dev = 8,412, 648,000 (wgt'ed) examples reached here.  /* #neg=564 #pos=84 */
%   | | | else return 0.046260416338889665;  // std dev = 2,697, 47,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0410604473885778;  // std dev = 5,929, 211,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=45 */
%   | | | else return -0.12314887117092173;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.03696525078284406;  // std dev = 5,553, 144,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   | | | else return 0.5904078129433102;  // std dev = 0,926, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.03872353144007684;  // std dev = 0,464, 5.304,000 (wgt'ed) examples reached here.  /* #neg=3.640 #pos=1.664 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.3886850475546717;  // std dev = 0,798, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06764460248074211;  // std dev = 3,434, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.018777793841612236;  // std dev = 8,092, 635,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=75 */
%   | | | else return 0.015191221884694779;  // std dev = 5,932, 234,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.02847847331288579;  // std dev = 32,892, 5.047,000 (wgt'ed) examples reached here.  /* #neg=3.476 #pos=1.571 */
%   | | | else return 0.03333235192703513;  // std dev = 8,555, 536,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.162607371377264;  // std dev = 5,164, 315,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=30 */
%   | | | else return 0.15452080200847773;  // std dev = 6,832, 226,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=83 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.6609262327678298;  // std dev = 0,138, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4758313162180218;  // std dev = 2,304, 29,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.029387254322946452;  // std dev = 5,928, 215,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=45 */
%   | | | else return -0.11300919770128479;  // std dev = 0,012, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.615208
   AUC PR    = 0.172185
   CLL	      = -0.328246
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 825.782 seconds
Total inference time: 16.634 seconds
AUC ROC: 0.615208


Results scoring model
   AUC ROC   = 0.657371
   AUC PR    = 0.213358
   CLL	      = -0.318471
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174978
   F1        = 0.29784


Total scoring time: 136.273 seconds
Refined model CLL: -0.318471


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.615208
   AUC PR    = 0.172185
   CLL	      = -0.328246
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 993.701 seconds
Total inference time: 16.634 seconds
AUC ROC: 0.615208
Total revision time: 993.701
Best scored revision CLL: -0.318471


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 22:15:31
{'AUC PR': 0.172185, 'AUC ROC': 0.615208, 'Learning time': 993.701, 'F1': 0.235698, 'Inference time': 16.634, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'parameter_1.0': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Learning time': 20.734, 'F1': 0.235698, 'Inference time': 4.899, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.321293}, 'CLL': -0.328246}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19905802600860323;  // std dev = 5,446, 132,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | | else return -0.08185106490048774;  // std dev = 1,679, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | else return 0.21886258993080904;  // std dev = 0,480, 5.661,000 (wgt'ed) examples reached here.  /* #neg=3.619 #pos=2.042 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), venue(K, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2635543405049178;  // std dev = 2,986, 37,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else return -0.05489454316135737;  // std dev = 0,282, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.020687898503072073;  // std dev = 0,326, 619,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=75 */
%   | | else return 0.052839200586237395;  // std dev = 0,396, 226,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=44 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3409934496447706;  // std dev = 3,278, 43,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | | else return 0.08222017341148793;  // std dev = 4,406, 103,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=26 */
%   | else return 0.19226517078303829;  // std dev = 0,481, 5.632,000 (wgt'ed) examples reached here.  /* #neg=3.590 #pos=2.042 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.2144526908076318;  // std dev = 0,488, 43,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | else if ( title(K, I), venue(K, B) )
%   | | | then return 0.06233829624927612;  // std dev = 7,178, 313,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=65 */
%   | | | else return -0.08018212653768125;  // std dev = 3,213, 183,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=11 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.010938422558529691;  // std dev = 0,334, 351,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=45 */
%   | | else return -0.14840566216149692;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15941500331054514;  // std dev = 0,479, 5.867,000 (wgt'ed) examples reached here.  /* #neg=3.759 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4094970173764782;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11357036553188443;  // std dev = 3,190, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.04635700590280727;  // std dev = 7,211, 327,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=65 */
%   | | | else return -0.07005463411186456;  // std dev = 3,217, 175,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -5.488625207799198E-4;  // std dev = 6,091, 313,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=43 */
%   | | | else return -0.107741615718723;  // std dev = 1,393, 66,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=2 */
%   | | else return -0.13061108681645003;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13408858196362475;  // std dev = 0,479, 5.846,000 (wgt'ed) examples reached here.  /* #neg=3.738 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7616638563843019;  // std dev = 0,209, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.32162625687813934;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1358733863928207;  // std dev = 3,084, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return -0.13560992598631372;  // std dev = 0,030, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.03851221616457735;  // std dev = 0,945, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.11788445989575196;  // std dev = 3,402, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.021911427246998464;  // std dev = 7,276, 533,000 (wgt'ed) examples reached here.  /* #neg=473 #pos=60 */
%   | | | else return 0.02002219236186296;  // std dev = 5,856, 236,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=42 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11070648649759517;  // std dev = 0,479, 5.829,000 (wgt'ed) examples reached here.  /* #neg=3.721 #pos=2.108 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.029113775502213366;  // std dev = 1,207, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.15991007206607316;  // std dev = 3,092, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else return 0.1642541362755036;  // std dev = 1,137, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.06481938877188495;  // std dev = 3,135, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.0047744554975192545;  // std dev = 1,141, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.019488261137861056;  // std dev = 7,275, 535,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=60 */
%   | | | else return 0.005854022254589835;  // std dev = 5,892, 255,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.047154895876003085;  // std dev = 5,550, 152,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return -0.050318439511295505;  // std dev = 1,827, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else return 0.5399558490271406;  // std dev = 0,310, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.09036902325839037;  // std dev = 0,480, 5.643,000 (wgt'ed) examples reached here.  /* #neg=3.601 #pos=2.042 */
%   else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.7982427980673639;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1501983694539726;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(K, G) )
%   | | | then return 0.05007578141479705;  // std dev = 3,275, 63,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return -0.19888653729802694;  // std dev = 0,027, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.008112154832340953;  // std dev = 0,354, 775,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.06610187356301718;  // std dev = 0,478, 5.333,000 (wgt'ed) examples reached here.  /* #neg=3.434 #pos=1.899 */
%   | | else return 0.04419093371730654;  // std dev = 0,376, 498,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=100 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.16345632370727253;  // std dev = 0,288, 321,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3643181419288845;  // std dev = 5,174, 121,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=80 */
%   | | | else return 0.09246992387272472;  // std dev = 4,948, 136,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=38 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.7613909901544125;  // std dev = 1,195, 63,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | | | else return -0.16177048916731354;  // std dev = 1,292, 129,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=2 */
%   | | else return 0.022560663960621195;  // std dev = 0,374, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | else return 0.5038349022980496;  // std dev = 0,351, 38,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=29 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05598439866950755;  // std dev = 0,476, 5.845,000 (wgt'ed) examples reached here.  /* #neg=3.737 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return -0.11015022976671852;  // std dev = 0,742, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.06877644812042805;  // std dev = 3,086, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.23402594489414213;  // std dev = 0,924, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12510897150385927;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.042958410847416244;  // std dev = 3,289, 62,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | | else return -0.021161216985088032;  // std dev = 0,756, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.022042574005707773;  // std dev = 7,258, 536,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=60 */
%   | | | else return 0.012013269347283034;  // std dev = 5,023, 220,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.3754244964605879;  // std dev = 0,073, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return -0.04825793184916717;  // std dev = 5,620, 171,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=43 */
%   | | | else return 0.6947779153635507;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.044753047428987745;  // std dev = 0,477, 5.660,000 (wgt'ed) examples reached here.  /* #neg=3.618 #pos=2.042 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return -0.008332306739799011;  // std dev = 0,339, 476,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=67 */
%   | | else return -0.040562505868018434;  // std dev = 0,305, 225,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=26 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.020184468112419748;  // std dev = 4,882, 205,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=43 */
%   | | | else return -0.051790089086413985;  // std dev = 1,362, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.18263002552646354;  // std dev = 0,052, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03126366980227934;  // std dev = 0,478, 5.328,000 (wgt'ed) examples reached here.  /* #neg=3.429 #pos=1.899 */
%   | | else return 0.025527391085512094;  // std dev = 0,360, 537,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=100 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.1441773052445332;  // std dev = 0,301, 291,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.33694395579846037;  // std dev = 4,533, 108,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=80 */
%   | | | else return 0.06428095361177755;  // std dev = 4,982, 144,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=38 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then return 0.06902422801689616;  // std dev = 0,360, 219,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=64 */
%   | | else return 0.014076362051969672;  // std dev = 0,368, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then return 0.46531005999589964;  // std dev = 0,296, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | else return -0.1603348000972793;  // std dev = 0,003, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.566199
   AUC PR    = 0.03111
   CLL	      = -0.379364
   Precision = 0.294118 at threshold = 0.5
   Recall    = 0.02594
   F1        = 0.047676


Total learning time: 2900.999 seconds
Total inference time: 30.132 seconds
AUC ROC: 0.566199


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 23:04:22
{'AUC PR': 0.03111, 'AUC ROC': 0.566199, 'Learning time': 2900.999, 'F1': 0.047676, 'Inference time': 30.132, 'Precision': [0.294118, 0.5], 'Recall': 0.02594, 'CLL': -0.379364}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordtitle(G, C) )
%   | | | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.2709929717967604;  // std dev = 5,140, 109,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=45 */
%   | | | else return -0.07935106490048774;  // std dev = 1,677, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, C) )
%   | | | then return 0.17666745361803043;  // std dev = 5,413, 135,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.22281608945210407;  // std dev = 0,481, 5.468,000 (wgt'ed) examples reached here.  /* #neg=3.474 #pos=1.994 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then if ( haswordtitle(N, L) )
%   | | then return 0.16723984419042145;  // std dev = 0,462, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | else if ( author(P, M), venue(P, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(A, Q), haswordtitle(R, Q) )
%   | | then if ( haswordauthor(S, Q) )
%   | | | then return 0.07554023944733847;  // std dev = 3,426, 69,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | | else return -0.03489919324273359;  // std dev = 7,320, 561,000 (wgt'ed) examples reached here.  /* #neg=501 #pos=60 */
%   | | else if ( haswordvenue(B, T), haswordtitle(U, T) )
%   | | | then return 0.07070932157294162;  // std dev = 5,886, 207,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=44 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.559868
   AUC PR    = 0.016379
   CLL	      = -0.201031
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 56.403 seconds
Total inference time: 6.197 seconds
AUC ROC: 0.559868


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 23:05:26
{'AUC PR': 0.016379, 'AUC ROC': 0.559868, 'Learning time': 56.403, 'F1': nan, 'Inference time': 6.197, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.201031}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 199372

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 50581

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else return 0.1539029614538266;  // std dev = 16,868, 1.366,000 (wgt'ed) examples reached here.  /* #neg=962 #pos=404 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else return 0.13090449257067113;  // std dev = 16,906, 1.381,000 (wgt'ed) examples reached here.  /* #neg=977 #pos=404 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,53e-07, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else return 0.11215942393308723;  // std dev = 16,909, 1.382,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=404 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,12e-07, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else return 0.10126047133410043;  // std dev = 16,834, 1.353,000 (wgt'ed) examples reached here.  /* #neg=949 #pos=404 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else return 0.08605892704112725;  // std dev = 16,818, 1.347,000 (wgt'ed) examples reached here.  /* #neg=943 #pos=404 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else return 0.07101162901010513;  // std dev = 16,820, 1.348,000 (wgt'ed) examples reached here.  /* #neg=944 #pos=404 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else return 0.04304894515890942;  // std dev = 17,002, 1.420,000 (wgt'ed) examples reached here.  /* #neg=1.016 #pos=404 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else return 0.056862373794751925;  // std dev = 16,741, 1.319,000 (wgt'ed) examples reached here.  /* #neg=915 #pos=404 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else return 0.03770843442741905;  // std dev = 16,841, 1.356,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=404 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else return 0.03850937672991933;  // std dev = 16,744, 1.320,000 (wgt'ed) examples reached here.  /* #neg=916 #pos=404 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.330559
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.042 seconds
Total inference time: 4.812 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.585216
   AUC PR    = 0.189406
   CLL	      = -0.331106
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170431
   F1        = 0.291228


Total scoring time: 4.139 seconds
Parameter learned model CLL: -0.331106


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.868, 962, 404], 'true': [0.0, 0, 83]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.906, 977, 404], 'true': [2.67e-07, 0, 83]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.909, 978, 404], 'true': [3.53e-07, 0, 83]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.834, 949, 404], 'true': [1.12e-07, 0, 83]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.818, 943, 404], 'true': [0.0, 0, 83]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.82, 944, 404], 'true': [0.0, 0, 83]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.002, 1016, 404], 'true': [0.0, 0, 83]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.741, 915, 404], 'true': [4.21e-08, 0, 83]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.841, 952, 404], 'true': [0.0, 0, 83]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.744, 916, 404], 'true': [5.77e-08, 0, 83]}]]
[{'': [-5.136453511518796e-16, 0.20828358224951007]}, {'': [8.5607558525313275e-16, 0.20696102741195357]}, {'': [1.4981322741929824e-15, 0.20687315306786855]}, {'': [1.4981322741929822e-16, 0.2094363132705964]}, {'': [-3.424302341012531e-16, 0.2099702988686767]}, {'': [-5.3504724078320797e-17, 0.20988121758578393]}, {'': [-1.33761810195802e-16, 0.20356278516168258]}, {'': [2.140188963132832e-17, 0.21247746098457349]}, {'': [-5.3504724078320797e-17, 0.20916977749931517]}, {'': [4.01285430587406e-17, 0.2123875114784211]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16846575069658298;  // std dev = 0,463, 1.231,000 (wgt'ed) examples reached here.  /* #neg=849 #pos=382 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0803711573217346;  // std dev = 3,300, 63,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return -0.02063894368836653;  // std dev = 1,875, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08302753548872299;  // std dev = 1,940, 68,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15418336772673605;  // std dev = 0,466, 1.202,000 (wgt'ed) examples reached here.  /* #neg=820 #pos=382 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.28741966972400806;  // std dev = 1,304, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.1453003925623977;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.050731351532457905;  // std dev = 1,544, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.047028736703747215;  // std dev = 3,792, 169,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,53e-07, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14319881465017234;  // std dev = 0,470, 1.161,000 (wgt'ed) examples reached here.  /* #neg=779 #pos=382 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.24452046691339735;  // std dev = 1,313, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.02625128610604803;  // std dev = 3,517, 88,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.06110017356801522;  // std dev = 1,934, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | | | else return -0.1267443517726202;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,12e-07, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10438491884123026;  // std dev = 0,464, 1.221,000 (wgt'ed) examples reached here.  /* #neg=839 #pos=382 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.1428519752068527;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10812289839903738;  // std dev = 1,664, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.010015288983375881;  // std dev = 3,439, 102,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=14 */
%   | | | else return -0.02891786291345666;  // std dev = 1,906, 44,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09237664950018765;  // std dev = 0,466, 1.199,000 (wgt'ed) examples reached here.  /* #neg=817 #pos=382 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.08813804751403545;  // std dev = 0,850, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.054237299568526506;  // std dev = 1,473, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.05311995247409382;  // std dev = 3,287, 150,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=12 */
%   | | | else return -0.01769961138191882;  // std dev = 2,282, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22386687596583424;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.15946645736749895;  // std dev = 1,354, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else return 0.08154803538612049;  // std dev = 0,468, 1.150,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=373 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.25363225485430463;  // std dev = 0,484, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.028883219098478786;  // std dev = 3,249, 123,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=12 */
%   | | | else return 0.027740875872902953;  // std dev = 2,224, 35,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3158284670979349;  // std dev = 1,760, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.18071062804883095;  // std dev = 0,998, 21,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else return 0.06124454836679151;  // std dev = 0,466, 1.168,000 (wgt'ed) examples reached here.  /* #neg=795 #pos=373 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.08227226336703206;  // std dev = 3,190, 59,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | | else return -0.05094514934904153;  // std dev = 1,878, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11314039874554997;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.05217018478630555;  // std dev = 1,953, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.044932810886509834;  // std dev = 0,463, 1.214,000 (wgt'ed) examples reached here.  /* #neg=832 #pos=382 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.13352039559958534;  // std dev = 0,758, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08152268836121307;  // std dev = 1,373, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03437902461928549;  // std dev = 3,271, 136,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=12 */
%   | | | else return -0.010299080692563386;  // std dev = 2,255, 41,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03703576831329687;  // std dev = 0,464, 1.210,000 (wgt'ed) examples reached here.  /* #neg=828 #pos=382 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.014943419682311323;  // std dev = 3,317, 75,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | | else return -0.05198490476791661;  // std dev = 1,889, 49,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.08266381266537978;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.033742270717941836;  // std dev = 1,939, 57,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.011959517114452348;  // std dev = 0,457, 1.241,000 (wgt'ed) examples reached here.  /* #neg=871 #pos=370 */
%   | | else if ( title(F, E), venue(F, A) )
%   | | | then return 0.022197492718236723;  // std dev = 3,209, 96,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=14 */
%   | | | else return 0.10281699515943406;  // std dev = 2,274, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else return 0.07696479743911729;  // std dev = 0,412, 47,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */


Results
   AUC ROC   = 0.624671
   AUC PR    = 0.199741
   CLL	      = -0.314566
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 87.91499999999999 seconds
Total inference time: 8.504 seconds
AUC ROC: 0.624671


Results scoring model
   AUC ROC   = 0.647056
   AUC PR    = 0.204547
   CLL	      = -0.318374
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170431
   F1        = 0.291228


Total scoring time: 14.352 seconds
Refined model CLL: -0.318374


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.624671
   AUC PR    = 0.199741
   CLL	      = -0.314566
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 109.448 seconds
Total inference time: 8.504 seconds
AUC ROC: 0.624671
Total revision time: 109.448
Best scored revision CLL: -0.318374


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 23:07:30
{'AUC PR': 0.199741, 'AUC ROC': 0.624671, 'Learning time': 109.448, 'F1': 0.291176, 'Inference time': 8.504, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'parameter_0.2': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 3.042, 'F1': 0.291176, 'Inference time': 4.812, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.330559}, 'CLL': -0.314566}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.25814893509951237;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.22003844670879485;  // std dev = 0,481, 1.249,000 (wgt'ed) examples reached here.  /* #neg=797 #pos=452 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.13087620782678497;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return -0.016851064900487666;  // std dev = 0,331, 112,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=14 */
%   | | else return -0.08031260336202617;  // std dev = 0,240, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19706299448227807;  // std dev = 0,482, 1.264,000 (wgt'ed) examples reached here.  /* #neg=799 #pos=465 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.8542472065904688;  // std dev = 0,036, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.14341237248065514;  // std dev = 0,052, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.11018785062144339;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.08373951427462802;  // std dev = 1,375, 35,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.13235297140207228;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.053565563422554516;  // std dev = 0,272, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15604799144346632;  // std dev = 0,479, 1.304,000 (wgt'ed) examples reached here.  /* #neg=839 #pos=465 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.7139985709286932;  // std dev = 0,058, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.12548162409280572;  // std dev = 0,039, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.24058743974171257;  // std dev = 1,106, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.08840510114540966;  // std dev = 1,385, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.06007326315056422;  // std dev = 1,933, 60,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=4 */
%   | | | else return -0.13211517286371238;  // std dev = 0,025, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12491487534005308;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.16651565263038795;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.04698955467397067;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.24814439602526073;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7613633581495827;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.12777667850485486;  // std dev = 0,478, 1.275,000 (wgt'ed) examples reached here.  /* #neg=823 #pos=452 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then return 0.03274672413266703;  // std dev = 0,274, 64,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else if ( haswordauthor(L, I) )
%   | | | then return 0.47912685686941886;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.069081103865673;  // std dev = 1,377, 39,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | else return -0.05304428812578727;  // std dev = 0,247, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10246312138773422;  // std dev = 0,478, 1.316,000 (wgt'ed) examples reached here.  /* #neg=851 #pos=465 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.5421800526432119;  // std dev = 0,070, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.11660423102021723;  // std dev = 0,047, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.05784405113608447;  // std dev = 1,195, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.011761192312740086;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else return -0.0373368939103758;  // std dev = 0,266, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.17653192898274556;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.11020918561414546;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.07658736396872011;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.07354808752306219;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.09997468610477703;  // std dev = 0,483, 1.223,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=452 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordauthor(K, I) )
%   | | then return 0.14000193976637104;  // std dev = 0,434, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( title(L, J), venue(L, B) )
%   | | | then return -0.0024660448690098065;  // std dev = 1,660, 66,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | | else return -0.06415365857804392;  // std dev = 1,376, 43,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
%   | else return -0.05855115800314087;  // std dev = 0,224, 76,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.03064280429714109;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.08896236195816486;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.32627407685618165;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.305469265493153;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.07214723767752619;  // std dev = 0,481, 1.249,000 (wgt'ed) examples reached here.  /* #neg=797 #pos=452 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then return -0.04409853880149623;  // std dev = 0,267, 101,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=8 */
%   | | else if ( haswordauthor(L, I) )
%   | | | then return 0.12826777384162025;  // std dev = 0,601, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.028218912636081644;  // std dev = 0,904, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else return -0.022608351175136848;  // std dev = 0,187, 45,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6489896756749018;  // std dev = 0,108, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3290275545188028;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.3144056172808146;  // std dev = 1,017, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.020657030657619924;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.0567883653658617;  // std dev = 0,480, 1.250,000 (wgt'ed) examples reached here.  /* #neg=798 #pos=452 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then return 0.019542303300177092;  // std dev = 0,218, 57,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else if ( haswordauthor(L, I) )
%   | | | then return 0.22089180632292496;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.034573800657752965;  // std dev = 1,362, 30,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | else return -0.03480466145167391;  // std dev = 0,250, 60,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.038361910721372;  // std dev = 0,477, 1.303,000 (wgt'ed) examples reached here.  /* #neg=838 #pos=465 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.031074294320696676;  // std dev = 0,919, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.041687851243314075;  // std dev = 2,699, 110,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=8 */
%   | | else return 0.022286714268610917;  // std dev = 0,223, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else return -0.012251904463451781;  // std dev = 0,196, 40,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.030852227951556833;  // std dev = 0,478, 1.299,000 (wgt'ed) examples reached here.  /* #neg=834 #pos=465 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.849512494207059;  // std dev = 0,271, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.09936067833562681;  // std dev = 0,313, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.10855223371927282;  // std dev = 0,583, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06361630320253492;  // std dev = 0,831, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.026822506351945236;  // std dev = 1,368, 42,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return -0.19044500470736345;  // std dev = 0,226, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09172549937960091;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.575811
   AUC PR    = 0.021149
   CLL	      = -0.372397
   Precision = 0.025682 at threshold = 0.5
   Recall    = 0.055077
   F1        = 0.03503


Total learning time: 307.601 seconds
Total inference time: 15.235 seconds
AUC ROC: 0.575811


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 23:12:53
{'AUC PR': 0.021149, 'AUC ROC': 0.575811, 'Learning time': 307.601, 'F1': 0.03503, 'Inference time': 15.235, 'Precision': [0.025682, 0.5], 'Recall': 0.055077, 'CLL': -0.372397}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21666859585509723;  // std dev = 0,480, 1.297,000 (wgt'ed) examples reached here.  /* #neg=832 #pos=465 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.04124752664880815;  // std dev = 3,259, 71,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
%   | | | else return -0.07518439823382113;  // std dev = 1,366, 30,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | else return -0.08214957236317427;  // std dev = 0,237, 67,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=4 */


Results
   AUC ROC   = 0.550178
   AUC PR    = 0.012641
   CLL	      = -0.198436
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 12.408 seconds
Total inference time: 3.877 seconds
AUC ROC: 0.550178


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 23:13:10
{'AUC PR': 0.012641, 'AUC ROC': 0.550178, 'Learning time': 12.408, 'F1': nan, 'Inference time': 3.877, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.198436}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,39e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.1476875050184928;  // std dev = 24,166, 2.839,000 (wgt'ed) examples reached here.  /* #neg=2.017 #pos=822 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.13319476215346826;  // std dev = 24,090, 2.796,000 (wgt'ed) examples reached here.  /* #neg=1.974 #pos=822 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,33e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.1216177596762854;  // std dev = 23,967, 2.729,000 (wgt'ed) examples reached here.  /* #neg=1.907 #pos=822 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,62e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.09918195192301829;  // std dev = 24,032, 2.764,000 (wgt'ed) examples reached here.  /* #neg=1.942 #pos=822 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,83e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.07996438012769382;  // std dev = 24,083, 2.792,000 (wgt'ed) examples reached here.  /* #neg=1.970 #pos=822 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.07554309240573114;  // std dev = 23,923, 2.706,000 (wgt'ed) examples reached here.  /* #neg=1.884 #pos=822 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,49e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.04947806351713717;  // std dev = 24,136, 2.822,000 (wgt'ed) examples reached here.  /* #neg=2.000 #pos=822 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.05032837881547077;  // std dev = 23,965, 2.728,000 (wgt'ed) examples reached here.  /* #neg=1.906 #pos=822 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.04376096337296394;  // std dev = 23,913, 2.701,000 (wgt'ed) examples reached here.  /* #neg=1.879 #pos=822 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else return 0.027125961705667;  // std dev = 24,052, 2.775,000 (wgt'ed) examples reached here.  /* #neg=1.953 #pos=822 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.32962
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 6.702 seconds
Total inference time: 3.819 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.578029
   AUC PR    = 0.174609
   CLL	      = -0.330371
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.156057
   F1        = 0.269982


Total scoring time: 6.224 seconds
Parameter learned model CLL: -0.330371


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.166, 2017, 822], 'true': [9.39e-07, 0, 152]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.09, 1974, 822], 'true': [0.0, 0, 152]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.967, 1907, 822], 'true': [5.33e-07, 0, 152]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.032, 1942, 822], 'true': [4.62e-07, 0, 152]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.083, 1970, 822], 'true': [2.83e-07, 0, 152]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.923, 1884, 822], 'true': [0.0, 0, 152]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.136, 2000, 822], 'true': [2.49e-07, 0, 152]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.965, 1906, 822], 'true': [0.0, 0, 152]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.913, 1879, 822], 'true': [0.0, 0, 152]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.052, 1953, 822], 'true': [6.66e-08, 0, 152]}]]
[{'': [5.796532844358712e-15, 0.20570598644827953]}, {'': [-2.4308040960213954e-15, 0.20756046344566192]}, {'': [1.8698493046318425e-15, 0.21048223141344657]}, {'': [1.402386978473882e-15, 0.20895124622756261]}, {'': [5.258951169277057e-16, 0.20773382402445667]}, {'': [-1.8698493046318425e-16, 0.21149355214577378]}, {'': [4.0902953538821556e-16, 0.2064371213122099]}, {'': [-3.0385051200267443e-16, 0.21052611776643518]}, {'': [-3.7981314000334304e-17, 0.2117139277196888]}, {'': [2.921639538487254e-17, 0.20847216946678107]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,39e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18667797282735804;  // std dev = 0,470, 2.359,000 (wgt'ed) examples reached here.  /* #neg=1.584 #pos=775 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05125238337537366;  // std dev = 4,753, 145,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=28 */
%   | | | else return -0.03768439823382101;  // std dev = 2,993, 96,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06985106490048766;  // std dev = 2,890, 125,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.31387209549833556;  // std dev = 2,498, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.02742048259510941;  // std dev = 2,200, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.10310286472910499;  // std dev = 3,917, 78,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | | | else return 0.15924786914998287;  // std dev = 22,283, 2.262,000 (wgt'ed) examples reached here.  /* #neg=1.526 #pos=736 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return -0.13019693709627936;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3133332317254323;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.047288787443971074;  // std dev = 4,763, 278,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=25 */
%   | | | else return 0.06609892920129862;  // std dev = 3,544, 75,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,33e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2857423928885971;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return -0.03359766611310056;  // std dev = 2,276, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else return 0.12907833743484645;  // std dev = 0,466, 2.379,000 (wgt'ed) examples reached here.  /* #neg=1.622 #pos=757 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03368578511225581;  // std dev = 4,742, 146,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=28 */
%   | | | else return -0.01139653666049518;  // std dev = 2,969, 82,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=10 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.062272112425678136;  // std dev = 2,900, 137,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=9 */
%   | | | else return -0.1413949333924921;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,62e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4963720676853231;  // std dev = 2,196, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.09953589953408475;  // std dev = 2,343, 58,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=6 */
%   | | else return 0.11025906604115812;  // std dev = 0,466, 2.351,000 (wgt'ed) examples reached here.  /* #neg=1.598 #pos=753 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.016234995975663035;  // std dev = 4,252, 165,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=21 */
%   | | | else return -0.047055351428463336;  // std dev = 2,888, 120,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=9 */
%   | | else return 0.07891544516806673;  // std dev = 0,425, 71,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,83e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25800192931208576;  // std dev = 3,002, 41,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | | else return -0.16483539393071978;  // std dev = 1,383, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else return 0.08836584328721457;  // std dev = 0,465, 2.374,000 (wgt'ed) examples reached here.  /* #neg=1.621 #pos=753 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.10751527621752184;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.20533972890110108;  // std dev = 1,888, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.12513542843909017;  // std dev = 1,723, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.022444382963717428;  // std dev = 5,676, 320,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=37 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09016647596236253;  // std dev = 0,470, 2.314,000 (wgt'ed) examples reached here.  /* #neg=1.539 #pos=775 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.3353852221909727;  // std dev = 1,597, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.007991748499189228;  // std dev = 5,203, 203,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=33 */
%   | | else return -0.04648685052682312;  // std dev = 0,254, 130,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,49e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0509521161811218;  // std dev = 0,463, 2.474,000 (wgt'ed) examples reached here.  /* #neg=1.699 #pos=775 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3543112676011494;  // std dev = 1,463, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.13226154369439547;  // std dev = 0,063, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.008589413717405596;  // std dev = 5,247, 226,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=33 */
%   | | | else return -0.03792382382543176;  // std dev = 2,892, 125,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return -4.139598145263697E-4;  // std dev = 2,798, 44,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.2424021947129026;  // std dev = 1,743, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09986626335698126;  // std dev = 3,270, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | | else return 0.04566424642078231;  // std dev = 22,412, 2.318,000 (wgt'ed) examples reached here.  /* #neg=1.582 #pos=736 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.02348572202762767;  // std dev = 4,716, 142,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=28 */
%   | | | else return -0.045905779212891365;  // std dev = 2,930, 101,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.04054634798696122;  // std dev = 2,903, 136,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=9 */
%   | | | else return -0.13877404206204402;  // std dev = 0,058, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.17441331027649482;  // std dev = 2,558, 29,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return -0.12168022379815732;  // std dev = 2,279, 55,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
%   | | else return 0.0453898484607707;  // std dev = 0,469, 2.306,000 (wgt'ed) examples reached here.  /* #neg=1.553 #pos=753 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03768492960604531;  // std dev = 4,643, 133,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=28 */
%   | | | else return -0.007335954206560023;  // std dev = 2,854, 78,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.10710812736181206;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.03132235508877554;  // std dev = 2,894, 126,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6,66e-08, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.015890422685195298;  // std dev = 0,459, 2.427,000 (wgt'ed) examples reached here.  /* #neg=1.684 #pos=743 */
%   | | else if ( title(F, E), venue(F, B) )
%   | | | then return 0.05336841899602302;  // std dev = 5,069, 201,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=37 */
%   | | | else return 0.005687450224075423;  // std dev = 2,932, 71,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.5222557782931184;  // std dev = 0,390, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else return 0.01692927472537327;  // std dev = 0,392, 88,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */


Results
   AUC ROC   = 0.620661
   AUC PR    = 0.194149
   CLL	      = -0.31993
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 199.63400000000001 seconds
Total inference time: 11.87 seconds
AUC ROC: 0.620661


Results scoring model
   AUC ROC   = 0.646497
   AUC PR    = 0.191194
   CLL	      = -0.324471
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.156057
   F1        = 0.269982


Total scoring time: 44.361 seconds
Refined model CLL: -0.324471


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.620661
   AUC PR    = 0.194149
   CLL	      = -0.31993
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 256.921 seconds
Total inference time: 11.87 seconds
AUC ROC: 0.620661
Total revision time: 256.921
Best scored revision CLL: -0.324471


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 23:17:44
{'AUC PR': 0.194149, 'AUC ROC': 0.620661, 'parameter_0.4': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 6.702, 'F1': 0.291176, 'Inference time': 3.819, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.32962}, 'Learning time': 256.921, 'F1': 0.291176, 'Inference time': 11.87, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.31993}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.25814893509951237;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.014398935099512298;  // std dev = 2,054, 32,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else return 0.2248021119509844;  // std dev = 0,482, 2.471,000 (wgt'ed) examples reached here.  /* #neg=1.565 #pos=906 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.7891834178581324;  // std dev = 1,365, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return -0.13259180564122838;  // std dev = 0,995, 108,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=1 */
%   | | else if ( haswordauthor(K, G) )
%   | | | then return 0.16584124279182003;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.05965928407856989;  // std dev = 2,347, 73,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=6 */
%   | else return -0.07314877482415177;  // std dev = 0,253, 131,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18028785032058442;  // std dev = 0,477, 2.636,000 (wgt'ed) examples reached here.  /* #neg=1.709 #pos=927 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6642144080263028;  // std dev = 1,365, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return -0.1154749728719881;  // std dev = 0,994, 91,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.20037491426869272;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.06577725286766926;  // std dev = 2,364, 87,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.058177803279148205;  // std dev = 2,885, 120,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=9 */
%   | | | else return -0.13317780327914838;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.13317780327914838;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17030657041730707;  // std dev = 0,482, 2.513,000 (wgt'ed) examples reached here.  /* #neg=1.586 #pos=927 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.5143648017828345;  // std dev = 1,363, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.10052156949603709;  // std dev = 1,249, 102,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=2 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1151825054634929;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.04933446945846482;  // std dev = 2,352, 77,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.05343308897782259;  // std dev = 2,888, 123,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=9 */
%   | | | else return -0.11854027053579543;  // std dev = 9,13e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11854027053579544;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1397508612669144;  // std dev = 0,482, 2.527,000 (wgt'ed) examples reached here.  /* #neg=1.600 #pos=927 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.2521816418085272;  // std dev = 1,460, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.011465769219728751;  // std dev = 2,668, 152,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=26 */
%   | | else return 0.0735345407059968;  // std dev = 0,397, 36,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.11275003502688292;  // std dev = 0,018, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.044844560363334826;  // std dev = 0,261, 122,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.6109971876221121;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.1548570494271182;  // std dev = 2,652, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return -0.03639311506496838;  // std dev = 2,027, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | else return 0.10537247519537071;  // std dev = 0,479, 2.531,000 (wgt'ed) examples reached here.  /* #neg=1.625 #pos=906 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, G) )
%   | | | then return 0.17829576226343205;  // std dev = 1,538, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.025664502498547518;  // std dev = 2,781, 171,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=26 */
%   | | else return 0.05971852372639279;  // std dev = 0,393, 37,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return -0.11418297371190758;  // std dev = 0,013, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.04892429861510091;  // std dev = 0,245, 140,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7270050507601215;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.27299494923987855;  // std dev = 1,49e-08, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.4602114565319161;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2004386759236404;  // std dev = 1,668, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | else return 0.09595803789773302;  // std dev = 0,482, 2.449,000 (wgt'ed) examples reached here.  /* #neg=1.547 #pos=902 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.024236967826586454;  // std dev = 0,252, 126,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=28 */
%   | | else if ( haswordtitle(I, K), haswordauthor(L, K) )
%   | | | then return -0.0796081643177319;  // std dev = 1,703, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | | else return 0.029794799524070784;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | else return -0.03378269932722111;  // std dev = 0,263, 120,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06349536884916364;  // std dev = 0,476, 2.607,000 (wgt'ed) examples reached here.  /* #neg=1.680 #pos=927 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.013181745968048357;  // std dev = 3,107, 133,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=29 */
%   | | | else return -0.09304517403840405;  // std dev = 0,907, 49,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=2 */
%   | | else if ( haswordtitle(E, I), haswordvenue(A, I) )
%   | | | then return 0.0789540427722833;  // std dev = 2,345, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return -0.14042999731753972;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.02804107744987956;  // std dev = 2,877, 113,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=9 */
%   | | | else return -0.09450913024257099;  // std dev = 0,008, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.09435940981029256;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.061552751762738715;  // std dev = 0,479, 2.524,000 (wgt'ed) examples reached here.  /* #neg=1.597 #pos=927 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.031036325665336775;  // std dev = 2,964, 121,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=29 */
%   | | | else return -0.07195327185776657;  // std dev = 0,805, 45,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=2 */
%   | | else return 0.04684452765819736;  // std dev = 0,396, 36,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.09576154657773872;  // std dev = 0,021, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.024816584557855393;  // std dev = 2,873, 116,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=9 */
%   | | | else return -0.08600663558372917;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04174008060196588;  // std dev = 0,477, 2.573,000 (wgt'ed) examples reached here.  /* #neg=1.646 #pos=927 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.04436561563162283;  // std dev = 0,239, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return -0.026577952967154362;  // std dev = 0,557, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.14037496498177987;  // std dev = 1,492, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.09600808024926759;  // std dev = 0,033, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.029598152427989733;  // std dev = 3,968, 226,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=21 */
%   | | | else return -0.004506878571706259;  // std dev = 2,126, 88,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6344541923520474;  // std dev = 0,191, 930,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=895 */
%   | | else return -0.2937954318724695;  // std dev = 0,130, 1.729,000 (wgt'ed) examples reached here.  /* #neg=1.705 #pos=24 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.2055915029592576;  // std dev = 0,123, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( haswordtitle(D, H), haswordauthor(I, H) )
%   | | | then return 0.2014027879048921;  // std dev = 1,879, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.012025876644507957;  // std dev = 1,662, 34,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( samebib(L, M), venue(M, B) )
%   | | | then return 0.4761127555957859;  // std dev = 1,563, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return -0.083538981887091;  // std dev = 1,109, 67,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=2 */
%   | | else return -0.10593624690678649;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.456955883121963;  // std dev = 0,340, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */


Results
   AUC ROC   = 0.938734
   AUC PR    = 0.264205
   CLL	      = -0.297654
   Precision = 0.2 at threshold = 0.5
   Recall    = 0.032702
   F1        = 0.056213


Total learning time: 923.188 seconds
Total inference time: 25.523 seconds
AUC ROC: 0.938734


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 23:33:33
{'AUC PR': 0.264205, 'AUC ROC': 0.938734, 'Learning time': 923.188, 'F1': 0.056213, 'Inference time': 25.523, 'Precision': [0.2, 0.5], 'Recall': 0.032702, 'CLL': -0.297654}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2212511677669573;  // std dev = 0,481, 2.553,000 (wgt'ed) examples reached here.  /* #neg=1.626 #pos=927 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.822434649385226;  // std dev = 0,982, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.13276015580957856;  // std dev = 0,995, 110,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.16584124279182003;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.04507687135210061;  // std dev = 2,328, 62,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06685106490048766;  // std dev = 2,885, 120,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=9 */


Results
   AUC ROC   = 0.574152
   AUC PR    = 0.02066
   CLL	      = -0.198174
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 40.106 seconds
Total inference time: 3.856 seconds
AUC ROC: 0.574152


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 23:34:17
{'AUC PR': 0.02066, 'AUC ROC': 0.574152, 'Learning time': 40.106, 'F1': nan, 'Inference time': 3.856, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.198174}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.14877169816321512;  // std dev = 29,394, 4.191,000 (wgt'ed) examples reached here.  /* #neg=2.973 #pos=1.218 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.13142376851430565;  // std dev = 29,358, 4.166,000 (wgt'ed) examples reached here.  /* #neg=2.948 #pos=1.218 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,06e-07, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.12073153412462403;  // std dev = 29,195, 4.057,000 (wgt'ed) examples reached here.  /* #neg=2.839 #pos=1.218 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.09581388091122008;  // std dev = 29,329, 4.146,000 (wgt'ed) examples reached here.  /* #neg=2.928 #pos=1.218 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2,60e-07, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.07290379496504343;  // std dev = 29,479, 4.251,000 (wgt'ed) examples reached here.  /* #neg=3.033 #pos=1.218 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,07e-07, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.06492018463370527;  // std dev = 29,386, 4.185,000 (wgt'ed) examples reached here.  /* #neg=2.967 #pos=1.218 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.05101290799798199;  // std dev = 29,434, 4.219,000 (wgt'ed) examples reached here.  /* #neg=3.001 #pos=1.218 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,26e-07, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.046800642040882565;  // std dev = 29,327, 4.145,000 (wgt'ed) examples reached here.  /* #neg=2.927 #pos=1.218 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.04158024211958774;  // std dev = 29,253, 4.095,000 (wgt'ed) examples reached here.  /* #neg=2.877 #pos=1.218 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7,88e-08, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.03394721983505777;  // std dev = 29,245, 4.090,000 (wgt'ed) examples reached here.  /* #neg=2.872 #pos=1.218 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.324376
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 9.232 seconds
Total inference time: 4.715 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.583162
   AUC PR    = 0.185058
   CLL	      = -0.324995
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.166324
   F1        = 0.285211


Total scoring time: 8.245 seconds
Parameter learned model CLL: -0.324995


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.394, 2973, 1218], 'true': [1.08e-06, 0, 243]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.358, 2948, 1218], 'true': [0.0, 0, 243]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.195, 2839, 1218], 'true': [5.06e-07, 0, 243]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.329, 2928, 1218], 'true': [0.0, 0, 243]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.479, 3033, 1218], 'true': [2.6e-07, 0, 243]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.386, 2967, 1218], 'true': [3.07e-07, 0, 243]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.434, 3001, 1218], 'true': [2.92e-07, 0, 243]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.327, 2927, 1218], 'true': [1.26e-07, 0, 243]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.253, 2877, 1218], 'true': [0.0, 0, 243]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.245, 2872, 1218], 'true': [7.88e-08, 0, 243]}]]
[{'': [4.795432455335656e-15, 0.20616117265295]}, {'': [-4.269104502920767e-15, 0.20688844540616969]}, {'': [1.052655904829778e-15, 0.2100886863064368]}, {'': [-2.3392353440661737e-16, 0.20747212978110388]}, {'': [2.777841971078581e-16, 0.2044266391220018]}, {'': [3.8743585386096e-16, 0.20633547873228253]}, {'': [3.50885301609926e-16, 0.20534977576636132]}, {'': [6.579099405186112e-17, 0.20750135687480484]}, {'': [-1.7178759557985962e-16, 0.20896778435241023]}, {'': [2.5585386575723773e-17, 0.2091149622491817]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3248156017661784;  // std dev = 3,347, 45,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | | else return 0.028880642416585518;  // std dev = 2,409, 41,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.15814893509951122;  // std dev = 4,347, 90,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | | else return 0.18056632122633068;  // std dev = 27,089, 3.359,000 (wgt'ed) examples reached here.  /* #neg=2.276 #pos=1.083 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.08566216261273905;  // std dev = 5,763, 189,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=43 */
%   | | | else return -1.8439823382097412E-4;  // std dev = 3,820, 120,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.050941973991396806;  // std dev = 4,264, 220,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=20 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15297804277204377;  // std dev = 0,466, 3.577,000 (wgt'ed) examples reached here.  /* #neg=2.439 #pos=1.138 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2855921258644104;  // std dev = 1,313, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.11848608453466572;  // std dev = 2,108, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.022711578081796437;  // std dev = 6,285, 380,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=45 */
%   | | | else return 0.053955132030290495;  // std dev = 4,537, 127,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=26 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,06e-07, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12971174275759587;  // std dev = 0,465, 3.589,000 (wgt'ed) examples reached here.  /* #neg=2.451 #pos=1.138 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06149282068723142;  // std dev = 5,795, 198,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=43 */
%   | | | else return -0.009707993519496727;  // std dev = 3,828, 128,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=17 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.12898154183347826;  // std dev = 1,168, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.03251521273648711;  // std dev = 4,023, 179,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10975748474112623;  // std dev = 0,465, 3.583,000 (wgt'ed) examples reached here.  /* #neg=2.445 #pos=1.138 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.1387793395588253;  // std dev = 2,218, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.001618660666263858;  // std dev = 6,663, 337,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=53 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03459710351837863;  // std dev = 4,233, 206,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=20 */
%   | | | else return -0.1317277994714327;  // std dev = 0,025, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2,60e-07, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09325915071656463;  // std dev = 0,466, 3.557,000 (wgt'ed) examples reached here.  /* #neg=2.419 #pos=1.138 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.39403692742974916;  // std dev = 1,112, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0665113104912319;  // std dev = 2,132, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02546439004443489;  // std dev = 6,303, 406,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=45 */
%   | | | else return 0.02218333527505378;  // std dev = 4,580, 139,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=26 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3,07e-07, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07247661911058699;  // std dev = 0,465, 3.603,000 (wgt'ed) examples reached here.  /* #neg=2.465 #pos=1.138 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.033423231928025446;  // std dev = 5,856, 215,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=43 */
%   | | | else return -0.03289340105327829;  // std dev = 3,854, 154,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=17 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.032326514127822406;  // std dev = 4,217, 214,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=20 */
%   | | | else return -0.11609347712612648;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06366704486057022;  // std dev = 0,467, 3.549,000 (wgt'ed) examples reached here.  /* #neg=2.411 #pos=1.138 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.19396232538722977;  // std dev = 0,841, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.06346015322303807;  // std dev = 2,578, 41,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.005805286175288841;  // std dev = 6,501, 310,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=51 */
%   | | | else return -0.028194930548576795;  // std dev = 4,103, 204,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 1,26e-07, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.23972766114540006;  // std dev = 3,113, 39,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return -0.0778318810248772;  // std dev = 2,421, 43,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else return 0.04937860658877305;  // std dev = 0,466, 3.483,000 (wgt'ed) examples reached here.  /* #neg=2.373 #pos=1.110 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.010483537737375977;  // std dev = 6,225, 270,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=48 */
%   | | | else return 0.10670202480465546;  // std dev = 3,016, 50,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.03031886316352336;  // std dev = 4,228, 222,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=20 */
%   | | | else return -0.10553505566458345;  // std dev = 0,026, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.023124135418602226;  // std dev = 0,459, 3.608,000 (wgt'ed) examples reached here.  /* #neg=2.516 #pos=1.092 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.12300123215992424;  // std dev = 2,581, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.03307048393428378;  // std dev = 7,285, 402,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=72 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return 0.3799212072262067;  // std dev = 1,044, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.5302778527386154;  // std dev = 1,799, 21,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.006145442896969851;  // std dev = 4,417, 133,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7,88e-08, 243,000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03762376356875452;  // std dev = 0,466, 3.531,000 (wgt'ed) examples reached here.  /* #neg=2.393 #pos=1.138 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.0036806195508534588;  // std dev = 6,223, 267,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=48 */
%   | | | else return 0.08011878626554235;  // std dev = 3,036, 52,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else return -0.020807661658295697;  // std dev = 0,298, 199,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=20 */


Results
   AUC ROC   = 0.623471
   AUC PR    = 0.197936
   CLL	      = -0.320905
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 229.198 seconds
Total inference time: 9.106 seconds
AUC ROC: 0.623471


Results scoring model
   AUC ROC   = 0.640801
   AUC PR    = 0.200529
   CLL	      = -0.324972
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.166324
   F1        = 0.285211


Total scoring time: 40.504 seconds
Refined model CLL: -0.324972


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.623471
   AUC PR    = 0.197936
   CLL	      = -0.320905
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 287.17900000000003 seconds
Total inference time: 9.106 seconds
AUC ROC: 0.623471
Total revision time: 287.17900000000003
Best scored revision CLL: -0.324972


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 23:39:20
{'AUC PR': 0.197936, 'AUC ROC': 0.623471, 'Learning time': 287.17900000000003, 'F1': 0.291176, 'Inference time': 9.106, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'parameter_0.6': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 9.232, 'F1': 0.291176, 'Inference time': 4.715, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.324376}, 'CLL': -0.320905}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21731668542460472;  // std dev = 0,480, 3.845,000 (wgt'ed) examples reached here.  /* #neg=2.464 #pos=1.381 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.23314893509951234;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.07243464938522579;  // std dev = 5,745, 196,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=42 */
%   | | | else return -0.01685106490048768;  // std dev = 3,102, 88,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.02420400607695833;  // std dev = 4,201, 170,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=20 */
%   | | | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.20271853348527155;  // std dev = 3,959, 67,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | | else return 0.09045377034445388;  // std dev = 2,106, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return 0.8295842051270629;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.31795629815031845;  // std dev = 3,278, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return -0.0821805007552903;  // std dev = 2,339, 68,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=6 */
%   | | else return 0.1922215677644128;  // std dev = 0,481, 3.640,000 (wgt'ed) examples reached here.  /* #neg=2.320 #pos=1.320 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( haswordtitle(L, J) )
%   | | then return 0.29439232268567067;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else return 0.03976156093270634;  // std dev = 0,387, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else return -0.00796026139102707;  // std dev = 0,341, 524,000 (wgt'ed) examples reached here.  /* #neg=453 #pos=71 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1572664595245139;  // std dev = 0,478, 3.877,000 (wgt'ed) examples reached here.  /* #neg=2.496 #pos=1.381 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7238279433358094;  // std dev = 2,289, 48,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=42 */
%   | | | else return -0.14481916811356368;  // std dev = 1,002, 168,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.0701210361333324;  // std dev = 2,190, 71,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=6 */
%   | | | else return 0.05757101854604252;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | else return -0.04026734144950582;  // std dev = 0,294, 208,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=20 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7516553776869338;  // std dev = 5,96e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.24834462231306623;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.7613391731579199;  // std dev = 0,127, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.10375736758966271;  // std dev = 2,357, 75,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=6 */
%   | else return 0.1358645034299775;  // std dev = 0,480, 3.723,000 (wgt'ed) examples reached here.  /* #neg=2.377 #pos=1.346 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then if ( haswordauthor(L, I) )
%   | | | then return 0.1987627857813482;  // std dev = 1,981, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.00943051750173192;  // std dev = 5,071, 250,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=41 */
%   | | else return 0.1271490629179988;  // std dev = 0,446, 44,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else return -0.037111945862546215;  // std dev = 0,291, 213,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6005747798337558;  // std dev = 0,055, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2231732601727525;  // std dev = 2,671, 45,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | | | else return -0.10515508183048736;  // std dev = 1,948, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.19497339756810458;  // std dev = 3,330, 45,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | | | else return -0.1180119961429041;  // std dev = 2,185, 45,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | else return 0.1099233516529943;  // std dev = 0,480, 3.665,000 (wgt'ed) examples reached here.  /* #neg=2.345 #pos=1.320 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, A) )
%   | | then return 0.03834913133835579;  // std dev = 0,348, 214,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=43 */
%   | | else return -0.02767435389250811;  // std dev = 0,333, 126,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=17 */
%   | else return -0.03416110658570199;  // std dev = 0,290, 214,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09158494727983563;  // std dev = 0,478, 3.811,000 (wgt'ed) examples reached here.  /* #neg=2.430 #pos=1.381 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6339813170305703;  // std dev = 1,910, 46,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.13441870028501904;  // std dev = 1,001, 168,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.05840851692889448;  // std dev = 2,125, 67,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=6 */
%   | | | else return 0.03770626147667427;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.007938755835242424;  // std dev = 4,200, 170,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=20 */
%   | | | else return -0.1130726658172396;  // std dev = 0,005, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.11351898279627415;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0643270046011828;  // std dev = 0,475, 3.906,000 (wgt'ed) examples reached here.  /* #neg=2.525 #pos=1.381 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.3789335608172934;  // std dev = 0,467, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.37076507585472296;  // std dev = 0,999, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12917344606579367;  // std dev = 0,003, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.22046823510545557;  // std dev = 1,079, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.05328325853220689;  // std dev = 1,495, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.024389228839260153;  // std dev = 5,413, 338,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=38 */
%   | | | else return -0.007513407443867088;  // std dev = 3,212, 140,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.048994944585223535;  // std dev = 0,475, 3.925,000 (wgt'ed) examples reached here.  /* #neg=2.544 #pos=1.381 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.0065217840485832035;  // std dev = 2,087, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.010163171782950937;  // std dev = 4,136, 254,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=41 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.12560198211021398;  // std dev = 2,936, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return -0.1627956102640545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0036724687575516736;  // std dev = 4,172, 167,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=20 */
%   | | | else return -0.10007531553844236;  // std dev = 0,007, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.10134359318241438;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03354299157717912;  // std dev = 0,473, 3.766,000 (wgt'ed) examples reached here.  /* #neg=2.461 #pos=1.305 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7108276976353182;  // std dev = 2,044, 68,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=63 */
%   | | | else return -0.14659128403414812;  // std dev = 0,916, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( title(G, D), venue(G, B) )
%   | | | then return -0.31378121374598816;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.5897924897992027;  // std dev = 0,999, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.025946128134718378;  // std dev = 0,299, 103,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return 0.09676752040841291;  // std dev = 0,348, 144,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=44 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then return 0.6092957093309348;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.09247962198539804;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.030266148397543394;  // std dev = 0,472, 3.923,000 (wgt'ed) examples reached here.  /* #neg=2.542 #pos=1.381 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5748539950271082;  // std dev = 0,296, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19563613159023768;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.01856964660477778;  // std dev = 1,606, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.11068949861728718;  // std dev = 0,029, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.13156638536140824;  // std dev = 1,006, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.009832383695514004;  // std dev = 1,522, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.031039084053967606;  // std dev = 4,874, 356,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=38 */
%   | | | else return -0.013331414296276805;  // std dev = 3,158, 134,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=24 */


Results
   AUC ROC   = 0.704862
   AUC PR    = 0.036267
   CLL	      = -0.35244
   Precision = 0.076923 at threshold = 0.5
   Recall    = 0.005164
   F1        = 0.009677


Total learning time: 1619.746 seconds
Total inference time: 21.515 seconds
AUC ROC: 0.704862


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:06:42
{'AUC PR': 0.036267, 'AUC ROC': 0.704862, 'Learning time': 1619.746, 'F1': 0.009677, 'Inference time': 21.515, 'Precision': [0.076923, 0.5], 'Recall': 0.005164, 'CLL': -0.35244}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22109243050029562;  // std dev = 0,481, 3.805,000 (wgt'ed) examples reached here.  /* #neg=2.424 #pos=1.381 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7914822684328453;  // std dev = 1,673, 45,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.13513965550451484;  // std dev = 0,997, 149,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.17393840878372288;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.029606166941304003;  // std dev = 3,125, 98,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.024815601766178853;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.05447242412378862;  // std dev = 4,053, 206,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.574339
   AUC PR    = 0.020662
   CLL	      = -0.198532
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 57.657 seconds
Total inference time: 3.694 seconds
AUC ROC: 0.574339


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 00:07:44
{'AUC PR': 0.020662, 'AUC ROC': 0.574339, 'Learning time': 57.657, 'F1': nan, 'Inference time': 3.694, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.198532}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.15346684364386862;  // std dev = 33,798, 5.489,000 (wgt'ed) examples reached here.  /* #neg=3.868 #pos=1.621 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.13202817668639108;  // std dev = 33,839, 5.521,000 (wgt'ed) examples reached here.  /* #neg=3.900 #pos=1.621 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.10719020121926978;  // std dev = 33,986, 5.639,000 (wgt'ed) examples reached here.  /* #neg=4.018 #pos=1.621 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.09141741919956288;  // std dev = 33,971, 5.627,000 (wgt'ed) examples reached here.  /* #neg=4.006 #pos=1.621 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.0795216635195478;  // std dev = 33,901, 5.570,000 (wgt'ed) examples reached here.  /* #neg=3.949 #pos=1.621 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,86e-07, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.06998166617611289;  // std dev = 33,804, 5.494,000 (wgt'ed) examples reached here.  /* #neg=3.873 #pos=1.621 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,46e-07, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.05932468328994437;  // std dev = 33,761, 5.461,000 (wgt'ed) examples reached here.  /* #neg=3.840 #pos=1.621 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2,76e-07, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.052436092448198884;  // std dev = 33,665, 5.388,000 (wgt'ed) examples reached here.  /* #neg=3.767 #pos=1.621 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.03811570292654612;  // std dev = 33,771, 5.468,000 (wgt'ed) examples reached here.  /* #neg=3.847 #pos=1.621 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.029611614301223308;  // std dev = 33,798, 5.489,000 (wgt'ed) examples reached here.  /* #neg=3.868 #pos=1.621 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.32573
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 16.288 seconds
Total inference time: 3.905 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.583932
   AUC PR    = 0.186618
   CLL	      = -0.326325
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167864
   F1        = 0.287473


Total scoring time: 9.703 seconds
Parameter learned model CLL: -0.326325


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.798, 3868, 1621], 'true': [1.04e-06, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.839, 3900, 1621], 'true': [0.0, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.986, 4018, 1621], 'true': [0.0, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.971, 4006, 1621], 'true': [0.0, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.901, 3949, 1621], 'true': [0.0, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.804, 3873, 1621], 'true': [3.86e-07, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.761, 3840, 1621], 'true': [2.46e-07, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.665, 3767, 1621], 'true': [2.76e-07, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.771, 3847, 1621], 'true': [0.0, 0, 327]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.798, 3868, 1621], 'true': [0.0, 0, 327]}]]
[{'': [3.3028286188237073e-15, 0.20810524143728737]}, {'': [-5.041159470836185e-15, 0.20740161201690868]}, {'': [-4.3458271300311937e-16, 0.2048277328855993]}, {'': [-9.560819686068626e-16, 0.2050879431403616]}, {'': [-6.301449338545231e-16, 0.2063287552901575]}, {'': [4.563118486532754e-16, 0.20799514683857193]}, {'': [1.8469765302632573e-16, 0.20872279711025835]}, {'': [2.3358820823917666e-16, 0.2103407707413349]}, {'': [-2.281559243266377e-16, 0.20856824624107068]}, {'': [-2.091429306327512e-16, 0.20810524143730422]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1673957201576823;  // std dev = 0,462, 4.899,000 (wgt'ed) examples reached here.  /* #neg=3.384 #pos=1.515 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1020513741239026;  // std dev = 2,750, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.10814893509951236;  // std dev = 3,000, 48,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return -0.01566809960080302;  // std dev = 8,361, 634,000 (wgt'ed) examples reached here.  /* #neg=554 #pos=80 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3450006630111662;  // std dev = 3,840, 59,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
%   | | | else return -0.022848913260020077;  // std dev = 2,781, 64,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06674191407810927;  // std dev = 4,963, 139,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=32 */
%   | | | else return 0.15762904426723523;  // std dev = 31,310, 4.497,000 (wgt'ed) examples reached here.  /* #neg=3.053 #pos=1.444 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.0429929155141665;  // std dev = 6,488, 279,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=52 */
%   | | | else return 0.002790421981377612;  // std dev = 4,590, 171,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=25 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.03226802028108627;  // std dev = 5,074, 264,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=29 */
%   | | | else return -0.1433274768184526;  // std dev = 0,019, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12591349761618936;  // std dev = 0,463, 4.859,000 (wgt'ed) examples reached here.  /* #neg=3.344 #pos=1.515 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3411326961426326;  // std dev = 2,437, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return -0.05378070147456154;  // std dev = 1,345, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.09803962975241269;  // std dev = 2,956, 44,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.013772521034737998;  // std dev = 8,349, 633,000 (wgt'ed) examples reached here.  /* #neg=553 #pos=80 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11295763721072437;  // std dev = 0,466, 4.753,000 (wgt'ed) examples reached here.  /* #neg=3.238 #pos=1.515 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.31113617589361686;  // std dev = 2,385, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return -0.0020827122157995787;  // std dev = 7,437, 450,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=65 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02760183094663104;  // std dev = 5,074, 267,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=29 */
%   | | | else return -0.12209187654237738;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09073975935703762;  // std dev = 0,464, 4.803,000 (wgt'ed) examples reached here.  /* #neg=3.288 #pos=1.515 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.11322714110304796;  // std dev = 1,562, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.06798705766949191;  // std dev = 2,726, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06397404089158235;  // std dev = 2,844, 44,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.0065270827774209445;  // std dev = 8,328, 612,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=80 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,86e-07, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0715308901342013;  // std dev = 0,463, 4.847,000 (wgt'ed) examples reached here.  /* #neg=3.332 #pos=1.515 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.043014379728403815;  // std dev = 6,459, 263,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=52 */
%   | | | else return -0.018911604516948802;  // std dev = 4,465, 174,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.030653077264528646;  // std dev = 5,091, 283,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=29 */
%   | | | else return -0.11249771152222943;  // std dev = 0,020, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,46e-07, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.057267134863463354;  // std dev = 4,679, 107,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   | | | else return 0.7640681313948791;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0656854020196864;  // std dev = 0,466, 4.614,000 (wgt'ed) examples reached here.  /* #neg=3.138 #pos=1.476 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02325780365943611;  // std dev = 6,944, 337,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=62 */
%   | | | else return 0.08270716770943141;  // std dev = 3,429, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.006114711903045948;  // std dev = 5,031, 234,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=29 */
%   | | | else return -0.09851054311926354;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2,76e-07, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04769862003770386;  // std dev = 0,464, 4.814,000 (wgt'ed) examples reached here.  /* #neg=3.299 #pos=1.515 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.13081855130103817;  // std dev = 2,644, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return -6.584945035349943E-4;  // std dev = 7,374, 427,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=65 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.10851877604267234;  // std dev = 0,913, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.02939532340910653;  // std dev = 5,022, 289,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=28 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.027109463317732868;  // std dev = 0,459, 4.772,000 (wgt'ed) examples reached here.  /* #neg=3.324 #pos=1.448 */
%   | | else if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | | then return 0.03603217830868557;  // std dev = 8,395, 509,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=99 */
%   | | | else return 0.05809083345202632;  // std dev = 3,539, 77,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.4363726256432218;  // std dev = 0,448, 39,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.03167683637644366;  // std dev = 4,834, 156,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
%   | | | else return -0.09054159455126934;  // std dev = 0,018, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.027683703796189826;  // std dev = 0,461, 4.884,000 (wgt'ed) examples reached here.  /* #neg=3.369 #pos=1.515 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.028591514522082445;  // std dev = 6,456, 265,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=52 */
%   | | | else return -0.03139873061963523;  // std dev = 4,407, 181,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0277415216452091;  // std dev = 5,096, 284,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=29 */
%   | | | else return -0.08277873583682564;  // std dev = 0,017, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.623203
   AUC PR    = 0.196545
   CLL	      = -0.316166
   Precision = 0.942857 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.28863


Total learning time: 335.188 seconds
Total inference time: 8.561 seconds
AUC ROC: 0.623203


Results scoring model
   AUC ROC   = 0.647727
   AUC PR    = 0.206194
   CLL	      = -0.320089
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168378
   F1        = 0.288225


Total scoring time: 46.75 seconds
Refined model CLL: -0.320089


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.623203
   AUC PR    = 0.196545
   CLL	      = -0.316166
   Precision = 0.942857 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.28863


Total learning time: 407.929 seconds
Total inference time: 8.561 seconds
AUC ROC: 0.623203
Total revision time: 407.929
Best scored revision CLL: -0.320089


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 00:14:46
{'AUC PR': 0.196545, 'AUC ROC': 0.623203, 'parameter_0.8': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 16.288, 'F1': 0.291176, 'Inference time': 3.905, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.32573}, 'Learning time': 407.929, 'F1': 0.28863, 'Inference time': 8.561, 'Precision': [0.942857, 0.5], 'Recall': 0.170396, 'CLL': -0.316166}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21967984775897723;  // std dev = 0,480, 5.095,000 (wgt'ed) examples reached here.  /* #neg=3.253 #pos=1.842 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.31648226843284566;  // std dev = 2,441, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.062148935099512144;  // std dev = 6,371, 250,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=51 */
%   | | | else return -0.02985106490048766;  // std dev = 3,526, 125,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.003755826805250141;  // std dev = 5,000, 210,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=29 */
%   | | | else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1914917424689623;  // std dev = 0,481, 5.085,000 (wgt'ed) examples reached here.  /* #neg=3.243 #pos=1.842 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2933641949810296;  // std dev = 2,396, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.03255676217301096;  // std dev = 6,458, 280,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=51 */
%   | | | else return -0.04492268320312566;  // std dev = 3,563, 150,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.021062535076459374;  // std dev = 5,051, 241,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=29 */
%   | | | else return -0.12544463852839144;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1585618574434221;  // std dev = 0,479, 5.143,000 (wgt'ed) examples reached here.  /* #neg=3.301 #pos=1.842 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.43720666656144136;  // std dev = 1,114, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.20676852300024204;  // std dev = 2,482, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return -0.14382949538575204;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03795426034301148;  // std dev = 6,420, 266,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=51 */
%   | | | else return -0.04027509396939382;  // std dev = 3,564, 151,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=14 */
%   | | else return -0.03474338571659067;  // std dev = 0,300, 268,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13926891350020051;  // std dev = 0,482, 5.041,000 (wgt'ed) examples reached here.  /* #neg=3.199 #pos=1.842 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.818866733331725;  // std dev = 0,107, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1345356856244499;  // std dev = 0,028, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.15304997306685664;  // std dev = 2,592, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.17354215672113119;  // std dev = 0,116, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.23012685301546795;  // std dev = 2,226, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return -0.0036164884877108003;  // std dev = 6,780, 374,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0015984534913935451;  // std dev = 1,233, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.024402801408681642;  // std dev = 4,804, 241,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=26 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10307300115132548;  // std dev = 0,478, 5.196,000 (wgt'ed) examples reached here.  /* #neg=3.354 #pos=1.842 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8295120800790988;  // std dev = 0,238, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return -0.1584246206256663;  // std dev = 1,067, 218,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.058205940705081984;  // std dev = 2,625, 96,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=11 */
%   | | | else return 0.03843560178019948;  // std dev = 3,417, 84,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.0053998533332681444;  // std dev = 4,956, 209,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=29 */
%   | | | else return -0.10836428637663811;  // std dev = 0,030, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.10655324857087499;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09077727382774384;  // std dev = 0,481, 5.087,000 (wgt'ed) examples reached here.  /* #neg=3.245 #pos=1.842 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.07223691500303417;  // std dev = 0,473, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.2006558710462069;  // std dev = 1,093, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12341864580425597;  // std dev = 0,029, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.016320262490998213;  // std dev = 0,815, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.04532004729965644;  // std dev = 2,273, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0169913133325128;  // std dev = 6,584, 453,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=53 */
%   | | | else return 0.0026397628636921503;  // std dev = 3,981, 159,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=27 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.05308407484511025;  // std dev = 0,475, 5.042,000 (wgt'ed) examples reached here.  /* #neg=3.314 #pos=1.728 */
%   | | else return 0.04018236793942384;  // std dev = 0,373, 453,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=90 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.21036293244133233;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.47959370167210136;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0.08761064909037454;  // std dev = 0,374, 107,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6962529023777485;  // std dev = 0,296, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return -0.12703200646426885;  // std dev = 1,224, 118,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=2 */
%   | | else return -0.06751906096588159;  // std dev = 0,283, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else return 0.4600923847498858;  // std dev = 0,373, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05944306269945003;  // std dev = 0,479, 5.094,000 (wgt'ed) examples reached here.  /* #neg=3.252 #pos=1.842 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.06354505683761737;  // std dev = 0,653, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.12045814316766083;  // std dev = 2,414, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.0201179903400465;  // std dev = 4,715, 314,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=50 */
%   | | | else return 0.04800455314701781;  // std dev = 3,499, 82,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.02329688797341866;  // std dev = 5,016, 256,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=29 */
%   | | | else return -0.10192765683088506;  // std dev = 0,054, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.14331621908500272;  // std dev = 0,023, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04983260741679694;  // std dev = 0,480, 5.051,000 (wgt'ed) examples reached here.  /* #neg=3.209 #pos=1.842 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return 0.0055348187541677816;  // std dev = 0,344, 369,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=56 */
%   | | else if ( haswordtitle(E, G), haswordvenue(B, G) )
%   | | | then return 0.009550473926212066;  // std dev = 3,334, 105,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=21 */
%   | | | else return -0.0953948898024735;  // std dev = 0,097, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.010249768671056925;  // std dev = 3,231, 162,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=29 */
%   | | | else return -0.13783447436754465;  // std dev = 0,208, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.12743285541228117;  // std dev = 0,011, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.018304466990497537;  // std dev = 0,475, 5.046,000 (wgt'ed) examples reached here.  /* #neg=3.318 #pos=1.728 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.6666104577979217;  // std dev = 2,936, 100,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=90 */
%   | | | else return -0.1404142730257097;  // std dev = 0,959, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
%   | else if ( haswordtitle(D, G), haswordvenue(B, G) )
%   | | then if ( haswordauthor(H, C) )
%   | | | then return 0.13289416641712484;  // std dev = 2,369, 37,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.08524111688805452;  // std dev = 4,233, 118,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | | else return -0.04014178744690836;  // std dev = 0,215, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.5063375762855418;  // std dev = 0,216, 51,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then return -0.010151381347911135;  // std dev = 0,260, 159,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=29 */
%   | | else return -0.1130009521867635;  // std dev = 0,019, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.590197
   AUC PR    = 0.034913
   CLL	      = -0.37804
   Precision = 0.382353 at threshold = 0.5
   Recall    = 0.022375
   F1        = 0.042276


Total learning time: 3585.244 seconds
Total inference time: 25.47 seconds
AUC ROC: 0.590197


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 01:14:57
{'AUC PR': 0.034913, 'AUC ROC': 0.590197, 'Learning time': 3585.244, 'F1': 0.042276, 'Inference time': 25.47, 'Precision': [0.382353, 0.5], 'Recall': 0.022375, 'CLL': -0.37804}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21347300917358122;  // std dev = 0,479, 5.184,000 (wgt'ed) examples reached here.  /* #neg=3.342 #pos=1.842 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7854216623722396;  // std dev = 1,926, 55,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=51 */
%   | | | else return -0.13694910411617464;  // std dev = 0,998, 204,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.2510060779566552;  // std dev = 2,584, 28,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.04851773156715432;  // std dev = 3,563, 150,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=14 */
%   | else return -0.04387809192751509;  // std dev = 0,297, 296,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=29 */


Results
   AUC ROC   = 0.574181
   AUC PR    = 0.02066
   CLL	      = -0.197576
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 68.489 seconds
Total inference time: 3.735 seconds
AUC ROC: 0.574181


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 01:16:10
{'AUC PR': 0.02066, 'AUC ROC': 0.574181, 'Learning time': 68.489, 'F1': nan, 'Inference time': 3.735, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.197576}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,56e-06, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.15600263636976558;  // std dev = 37,847, 6.849,000 (wgt'ed) examples reached here.  /* #neg=4.809 #pos=2.040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13308897171896916;  // std dev = 37,923, 6.915,000 (wgt'ed) examples reached here.  /* #neg=4.875 #pos=2.040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.11229923973997326;  // std dev = 37,975, 6.960,000 (wgt'ed) examples reached here.  /* #neg=4.920 #pos=2.040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.10055793702405036;  // std dev = 37,827, 6.832,000 (wgt'ed) examples reached here.  /* #neg=4.792 #pos=2.040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.08141630956167477;  // std dev = 37,899, 6.894,000 (wgt'ed) examples reached here.  /* #neg=4.854 #pos=2.040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,50e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.0669516938628648;  // std dev = 37,911, 6.904,000 (wgt'ed) examples reached here.  /* #neg=4.864 #pos=2.040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.05382534389196664;  // std dev = 37,940, 6.930,000 (wgt'ed) examples reached here.  /* #neg=4.890 #pos=2.040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2,06e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04565043792884196;  // std dev = 37,892, 6.888,000 (wgt'ed) examples reached here.  /* #neg=4.848 #pos=2.040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.035953618316314676;  // std dev = 37,920, 6.912,000 (wgt'ed) examples reached here.  /* #neg=4.872 #pos=2.040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.031227894701983446;  // std dev = 37,860, 6.860,000 (wgt'ed) examples reached here.  /* #neg=4.820 #pos=2.040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.326747
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 22.862 seconds
Total inference time: 4.628 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.327418
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 11.875 seconds
Parameter learned model CLL: -0.327418


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.847, 4809, 2040], 'true': [1.56e-06, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.923, 4875, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.975, 4920, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.827, 4792, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.899, 4854, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.911, 4864, 2040], 'true': [4.5e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.94, 4890, 2040], 'true': [2.46e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.892, 4848, 2040], 'true': [2.06e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.92, 4872, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.86, 4820, 2040], 'true': [0.0, 0, 396]}]]
[{'': [6.172391441956426e-15, 0.20913687390980243]}, {'': [-5.311127519822971e-15, 0.20797944673705118]}, {'': [-1.2201238896890609e-15, 0.20719381688467686]}, {'': [-1.8301858345335913e-15, 0.2094359646572234]}, {'': [-1.5969268556224474e-15, 0.20834706230338199]}, {'': [5.113754537667388e-16, 0.20817192981986535]}, {'': [1.525154862111326e-16, 0.20771724667825214]}, {'': [1.0765799026668185e-16, 0.20845220896213723]}, {'': [-2.6017347647781446e-16, 0.20803192515439964]}, {'': [-3.1848822120560044e-16, 0.20894355243135102]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,56e-06, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1719971155704441;  // std dev = 0,464, 6.073,000 (wgt'ed) examples reached here.  /* #neg=4.167 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06723984419042221;  // std dev = 7,387, 330,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=69 */
%   | | | else return -0.0024279879774113176;  // std dev = 4,996, 208,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=29 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.033089735595352325;  // std dev = 5,664, 331,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3010121493275357;  // std dev = 4,626, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 4.528322830846142E-4;  // std dev = 3,296, 79,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   | | else return 0.15335346833891694;  // std dev = 0,465, 5.837,000 (wgt'ed) examples reached here.  /* #neg=3.984 #pos=1.853 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.20174046548994468;  // std dev = 3,117, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.032707339220469374;  // std dev = 1,278, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.18433336987729287;  // std dev = 3,180, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.00910417856899481;  // std dev = 9,379, 763,000 (wgt'ed) examples reached here.  /* #neg=661 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13531119397658922;  // std dev = 0,467, 5.927,000 (wgt'ed) examples reached here.  /* #neg=4.021 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.21725859550940663;  // std dev = 3,040, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return 0.018547371602515697;  // std dev = 8,289, 495,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=83 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03218527553143771;  // std dev = 5,672, 338,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=36 */
%   | | | else return -0.1275700097149805;  // std dev = 0,030, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10638179601663018;  // std dev = 0,464, 6.068,000 (wgt'ed) examples reached here.  /* #neg=4.162 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.19471032815155634;  // std dev = 3,016, 38,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.02520415737993998;  // std dev = 8,238, 472,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=83 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.034928961383846886;  // std dev = 5,692, 360,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=36 */
%   | | | else return -0.11241363749235136;  // std dev = 0,020, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08045260309702436;  // std dev = 0,461, 6.227,000 (wgt'ed) examples reached here.  /* #neg=4.321 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2373482840109893;  // std dev = 2,817, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | | else return -0.03634221685253308;  // std dev = 1,338, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -8.313923131692982E-4;  // std dev = 8,356, 540,000 (wgt'ed) examples reached here.  /* #neg=457 #pos=83 */
%   | | | else return -0.025881430206481017;  // std dev = 5,519, 329,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,50e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.0827064360389383;  // std dev = 5,442, 141,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=46 */
%   | | | else return 0.778924137350976;  // std dev = 0,051, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05693765020843916;  // std dev = 5,869, 165,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | | | else return 0.07875219073649556;  // std dev = 35,056, 5.659,000 (wgt'ed) examples reached here.  /* #neg=3.855 #pos=1.804 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.046882428950986696;  // std dev = 7,371, 333,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=69 */
%   | | | else return -0.019436301832155667;  // std dev = 4,780, 202,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=29 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.023375508540350462;  // std dev = 5,679, 343,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=36 */
%   | | | else return -0.09988185182394223;  // std dev = 0,017, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0603977677821621;  // std dev = 0,464, 6.047,000 (wgt'ed) examples reached here.  /* #neg=4.141 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.1771888477642294;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return -0.0030087997207240477;  // std dev = 8,339, 537,000 (wgt'ed) examples reached here.  /* #neg=454 #pos=83 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.07393933845932167;  // std dev = 0,961, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.02115864807584953;  // std dev = 5,598, 342,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=35 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2,06e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20730605949926748;  // std dev = 4,429, 79,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=40 */
%   | | | else return -0.08679664062292938;  // std dev = 3,087, 80,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | | else return 0.04638195013023034;  // std dev = 0,464, 5.928,000 (wgt'ed) examples reached here.  /* #neg=4.075 #pos=1.853 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.03825767213254659;  // std dev = 1,172, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.1855386942952385;  // std dev = 3,007, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.10260500742170672;  // std dev = 2,968, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.01920002729839716;  // std dev = 9,436, 836,000 (wgt'ed) examples reached here.  /* #neg=734 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03416094742586177;  // std dev = 35,206, 5.810,000 (wgt'ed) examples reached here.  /* #neg=4.010 #pos=1.800 */
%   | | | else return 0.04341428723813725;  // std dev = 9,019, 574,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=115 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.11773053813987691;  // std dev = 3,271, 50,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.06085720322956973;  // std dev = 5,097, 149,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=37 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.6490840431455576;  // std dev = 0,195, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6362802307160811;  // std dev = 1,654, 34,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.15083891319288967;  // std dev = 0,868, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.021937814377102332;  // std dev = 5,338, 199,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=35 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03473074517190617;  // std dev = 0,464, 5.986,000 (wgt'ed) examples reached here.  /* #neg=4.080 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.08833359299322562;  // std dev = 2,916, 35,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return -0.005457240885810698;  // std dev = 8,308, 519,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=83 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.028560650028294287;  // std dev = 5,703, 365,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=36 */
%   | | | else return -0.09087669234589013;  // std dev = 0,021, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.617042
   AUC PR    = 0.194923
   CLL	      = -0.319439
   Precision = 0.942857 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.28863


Total learning time: 1117.929 seconds
Total inference time: 13.81 seconds
AUC ROC: 0.617042


Results scoring model
   AUC ROC   = 0.64604
   AUC PR    = 0.199665
   CLL	      = -0.323067
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162972
   F1        = 0.280268


Total scoring time: 162.144 seconds
Refined model CLL: -0.323067


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.617042
   AUC PR    = 0.194923
   CLL	      = -0.319439
   Precision = 0.942857 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.28863


Total learning time: 1314.8100000000002 seconds
Total inference time: 13.81 seconds
AUC ROC: 0.617042
Total revision time: 1314.8100000000002
Best scored revision CLL: -0.323067


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 01:38:25
{'AUC PR': 0.194923, 'AUC ROC': 0.617042, 'Learning time': 1314.8100000000002, 'F1': 0.28863, 'Inference time': 13.81, 'Precision': [0.942857, 0.5], 'Recall': 0.170396, 'parameter_1.0': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 22.862, 'F1': 0.291176, 'Inference time': 4.628, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.326747}, 'CLL': -0.319439}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.36464244159301806;  // std dev = 4,387, 77,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=39 */
%   | | | else return 0.043334120284697554;  // std dev = 2,854, 54,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | else return 0.21437005984062552;  // std dev = 0,479, 6.277,000 (wgt'ed) examples reached here.  /* #neg=4.041 #pos=2.236 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then if ( author(K, J), title(K, I) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.26439893509951234;  // std dev = 2,778, 32,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else if ( title(L, I), venue(L, A) )
%   | | | then return 0.044778461561908324;  // std dev = 7,382, 359,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=67 */
%   | | | else return -0.05196342445104945;  // std dev = 3,816, 178,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=16 */
%   | else return -0.03719990210979058;  // std dev = 0,306, 344,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18103117134270333;  // std dev = 0,477, 6.552,000 (wgt'ed) examples reached here.  /* #neg=4.250 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.21155777649624402;  // std dev = 1,090, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2871100536243945;  // std dev = 2,639, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.056878473666645356;  // std dev = 7,302, 328,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=67 */
%   | | | else return -0.046753644372166815;  // std dev = 3,818, 180,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.014933812304588807;  // std dev = 5,621, 294,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=36 */
%   | | | else return -0.13738279189642627;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.13738279189642616;  // std dev = 1,05e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.6815317150801826;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.22122969909678677;  // std dev = 4,660, 88,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=39 */
%   | | | else return -0.0509326747937322;  // std dev = 2,966, 83,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=10 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.42196024876762417;  // std dev = 3,854, 63,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | | | else return -0.09607726926989388;  // std dev = 2,998, 99,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=10 */
%   | | else return 0.16014882704107603;  // std dev = 0,479, 6.122,000 (wgt'ed) examples reached here.  /* #neg=3.935 #pos=2.187 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( haswordtitle(L, J) )
%   | | then return 0.27672167508156514;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return -0.03164327397000747;  // std dev = 0,307, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else return -0.0031900467110202125;  // std dev = 0,343, 849,000 (wgt'ed) examples reached here.  /* #neg=732 #pos=117 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.23380857213448414;  // std dev = 4,516, 98,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=48 */
%   | | | else return 0.8176752832293716;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07414702016377808;  // std dev = 0,308, 81,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=13 */
%   | else return 0.13217793610163384;  // std dev = 0,478, 6.286,000 (wgt'ed) examples reached here.  /* #neg=4.050 #pos=2.236 */
%   else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then return -7.221355113192357E-4;  // std dev = 0,326, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordtitle(J, G) )
%   | | | then return 0.19712951304827958;  // std dev = 2,864, 37,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.07429578446925095;  // std dev = 1,237, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.09973205826010732;  // std dev = 0,453, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else return -0.007421184644971754;  // std dev = 0,338, 768,000 (wgt'ed) examples reached here.  /* #neg=666 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10932579969221408;  // std dev = 0,477, 6.450,000 (wgt'ed) examples reached here.  /* #neg=4.148 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7817712804957527;  // std dev = 1,938, 72,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=68 */
%   | | | else return -0.15497302996772722;  // std dev = 1,057, 286,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.13918431579632928;  // std dev = 2,719, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return -0.04332569350745944;  // std dev = 3,825, 186,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.025642199677545243;  // std dev = 5,662, 330,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=36 */
%   | | | else return -0.12311199815623412;  // std dev = 0,045, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.1218190984092901;  // std dev = 0,012, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08512801846165285;  // std dev = 0,476, 6.507,000 (wgt'ed) examples reached here.  /* #neg=4.205 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.039179332978687226;  // std dev = 6,432, 326,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=73 */
%   | | | else return -0.09163205466971873;  // std dev = 2,182, 148,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=7 */
%   | | else if ( title(I, E), venue(I, A) )
%   | | | then return 0.48267051271032924;  // std dev = 0,763, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.051334308288733164;  // std dev = 3,632, 91,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.008562039417933431;  // std dev = 5,617, 292,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=36 */
%   | | | else return -0.11103847644609031;  // std dev = 0,038, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.10841705871630666;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07159278519400213;  // std dev = 0,477, 6.439,000 (wgt'ed) examples reached here.  /* #neg=4.137 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.23904878245201314;  // std dev = 0,630, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09451668443349308;  // std dev = 2,717, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.02749976323272225;  // std dev = 6,197, 334,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=67 */
%   | | | else return -0.04635166936850392;  // std dev = 3,817, 208,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.3603559085770842;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13764873524704213;  // std dev = 0,036, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.02445566201253438;  // std dev = 0,302, 332,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6013509880854983;  // std dev = 0,439, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.35183987731484045;  // std dev = 0,225, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.11734919178983372;  // std dev = 0,289, 143,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=22 */
%   | else return 0.05697446550388993;  // std dev = 0,479, 6.265,000 (wgt'ed) examples reached here.  /* #neg=4.029 #pos=2.236 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.026789001020770357;  // std dev = 6,526, 363,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=77 */
%   | | | else return -0.12074448255565372;  // std dev = 1,630, 99,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=3 */
%   | | else if ( haswordtitle(I, M), haswordvenue(A, M) )
%   | | | then return 0.07336317615674064;  // std dev = 3,726, 89,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
%   | | | else return -0.12480749531523701;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.022036470685421587;  // std dev = 0,298, 358,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04903740286981662;  // std dev = 0,477, 6.370,000 (wgt'ed) examples reached here.  /* #neg=4.068 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return 0.019378866291676334;  // std dev = 6,508, 376,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=77 */
%   | | | else return -0.10034419398622617;  // std dev = 1,594, 84,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=3 */
%   | | else return 0.056656147736882344;  // std dev = 0,388, 93,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -3.4648794712956974E-4;  // std dev = 5,594, 287,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=36 */
%   | | | else return -0.09663649908721166;  // std dev = 0,039, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.09432602864150343;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.4007194292723258;  // std dev = 0,086, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1522865182830596;  // std dev = 3,019, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return -0.14592918162788557;  // std dev = 2,798, 116,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=10 */
%   | else return 0.03979620711346645;  // std dev = 0,480, 6.172,000 (wgt'ed) examples reached here.  /* #neg=3.936 #pos=2.236 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then if ( author(K, J), title(K, I) )
%   | | | then return 0.1226161289008428;  // std dev = 1,087, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.13620756653909397;  // std dev = 2,271, 35,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( title(L, I), venue(L, B) )
%   | | | then return 0.005799781429771511;  // std dev = 7,233, 472,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=67 */
%   | | | else return -0.028821885886011284;  // std dev = 3,109, 132,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=16 */
%   | else return -0.03139872899393769;  // std dev = 0,288, 266,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=36 */


Results
   AUC ROC   = 0.554179
   AUC PR    = 0.013233
   CLL	      = -0.360922
   Precision = 0.076923 at threshold = 0.5
   Recall    = 0.005164
   F1        = 0.009677


Total learning time: 1074.786 seconds
Total inference time: 15.441 seconds
AUC ROC: 0.554179


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 01:56:36
{'AUC PR': 0.013233, 'AUC ROC': 0.554179, 'Learning time': 1074.786, 'F1': 0.009677, 'Inference time': 15.441, 'Precision': [0.076923, 0.5], 'Recall': 0.005164, 'CLL': -0.360922}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2143853944000333;  // std dev = 0,479, 6.462,000 (wgt'ed) examples reached here.  /* #neg=4.160 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.24276431971489698;  // std dev = 0,487, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.0523518336502375;  // std dev = 7,348, 345,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=67 */
%   | | | else return -0.05393897698839974;  // std dev = 3,820, 182,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.022645766887243304;  // std dev = 5,631, 302,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=36 */
%   | | | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.550377
   AUC PR    = 0.012643
   CLL	      = -0.198668
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 44.573 seconds
Total inference time: 4.462 seconds
AUC ROC: 0.550377


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 01:57:26
{'AUC PR': 0.012643, 'AUC ROC': 0.550377, 'Learning time': 44.573, 'F1': nan, 'Inference time': 4.462, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.198668}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 182149

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 67804

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.15412367858806308;  // std dev = 16,248, 1.267,000 (wgt'ed) examples reached here.  /* #neg=892 #pos=375 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,23e-07, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.13130169433526376;  // std dev = 16,283, 1.280,000 (wgt'ed) examples reached here.  /* #neg=905 #pos=375 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,37e-07, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.10190521994742482;  // std dev = 16,407, 1.329,000 (wgt'ed) examples reached here.  /* #neg=954 #pos=375 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.09830428489302366;  // std dev = 16,270, 1.275,000 (wgt'ed) examples reached here.  /* #neg=900 #pos=375 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.0872857442456884;  // std dev = 16,213, 1.254,000 (wgt'ed) examples reached here.  /* #neg=879 #pos=375 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.06835026136040978;  // std dev = 16,259, 1.271,000 (wgt'ed) examples reached here.  /* #neg=896 #pos=375 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.04221115729757209;  // std dev = 16,419, 1.334,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=375 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 2,98e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.0453983373553613;  // std dev = 16,294, 1.284,000 (wgt'ed) examples reached here.  /* #neg=909 #pos=375 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8,30e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.043376657633495616;  // std dev = 16,218, 1.256,000 (wgt'ed) examples reached here.  /* #neg=881 #pos=375 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,37e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.021000091506580262;  // std dev = 16,380, 1.318,000 (wgt'ed) examples reached here.  /* #neg=943 #pos=375 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.320425
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 3.76 seconds
Total inference time: 5.602 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.587004
   AUC PR    = 0.193414
   CLL	      = -0.321293
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174009
   F1        = 0.296435


Total scoring time: 4.2 seconds
Parameter learned model CLL: -0.321293


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.248, 892, 375], 'true': [0.0, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.283, 905, 375], 'true': [2.23e-07, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.407, 954, 375], 'true': [3.37e-07, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.27, 900, 375], 'true': [0.0, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.213, 879, 375], 'true': [0.0, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.259, 896, 375], 'true': [0.0, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.419, 959, 375], 'true': [0.0, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.294, 909, 375], 'true': [2.98e-08, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.218, 881, 375], 'true': [8.3e-08, 0, 79]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.38, 943, 375], 'true': [5.37e-08, 0, 79]}]]
[{'': [-8.99421184506456e-16, 0.20837369470542108]}, {'': [6.295948291545192e-16, 0.20713806152342298]}, {'': [1.4390738952103295e-15, 0.20254880279646534]}, {'': [0.0, 0.20761245674740497]}, {'': [-3.822540034152438e-16, 0.20961630915043017]}, {'': [-2.2485529612661398e-17, 0.20799274006292712]}, {'': [-8.994211845064559e-17, 0.20208692505321305]}, {'': [1.1242764806330699e-17, 0.2067593239584231]}, {'': [8.713142724906291e-17, 0.20942469775650088]}, {'': [3.653898562057477e-17, 0.20356923282390754]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.05814893509951233;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.16584124279182005;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.17585228438180417;  // std dev = 15,051, 1.045,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=332 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.03247606490048766;  // std dev = 3,531, 128,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=14 */
%   | | | else return 0.10814893509951232;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.02481560176617901;  // std dev = 2,415, 42,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,23e-07, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1572382249860374;  // std dev = 0,467, 1.088,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=350 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.1425803774905724;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.19538976581013792;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03767958883425902;  // std dev = 3,534, 137,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=14 */
%   | | | else return 0.015518545522048384;  // std dev = 2,423, 44,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,37e-07, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5779924544321259;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.038190150211810985;  // std dev = 1,990, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else return 0.11756081634032924;  // std dev = 0,460, 1.115,000 (wgt'ed) examples reached here.  /* #neg=775 #pos=340 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.03483094456960248;  // std dev = 3,524, 139,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=14 */
%   | | | else return 0.0993523758766263;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03313501500693029;  // std dev = 2,395, 39,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return -0.12715707072329288;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11527998377039138;  // std dev = 0,466, 1.088,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=350 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.004817701889373256;  // std dev = 3,458, 101,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=14 */
%   | | | else return -0.04983760865950181;  // std dev = 1,875, 39,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.14060024472138907;  // std dev = 0,039, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04219317713896262;  // std dev = 2,372, 37,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2048447808236699;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.0859627410252172;  // std dev = 1,626, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else return 0.10980727058622713;  // std dev = 0,471, 1.016,000 (wgt'ed) examples reached here.  /* #neg=675 #pos=341 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.1552030616184011;  // std dev = 0,458, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.001174666886953502;  // std dev = 3,466, 107,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=14 */
%   | | | else return 0.03682940424389975;  // std dev = 2,371, 37,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07556228199949137;  // std dev = 0,465, 1.092,000 (wgt'ed) examples reached here.  /* #neg=742 #pos=350 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.22444813193321952;  // std dev = 1,537, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.18704490440555993;  // std dev = 0,032, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.00790977452185976;  // std dev = 3,418, 90,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
%   | | | else return -0.0193514065667265;  // std dev = 2,493, 64,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04857766658057533;  // std dev = 0,461, 1.135,000 (wgt'ed) examples reached here.  /* #neg=785 #pos=350 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.02734876260114025;  // std dev = 3,476, 128,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=14 */
%   | | | else return 0.06463416196847555;  // std dev = 1,763, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.0166863713001886;  // std dev = 2,445, 48,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | | else return -0.11985347805614553;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 2,98e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1794151358942236;  // std dev = 2,125, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.2610131953741723;  // std dev = 0,217, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.002986534753300756;  // std dev = 2,391, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.05062047800199192;  // std dev = 15,030, 1.039,000 (wgt'ed) examples reached here.  /* #neg=707 #pos=332 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then if ( haswordtitle(M, K) )
%   | | | then return 0.21051550570833658;  // std dev = 0,814, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08560136057482173;  // std dev = 0,959, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return 0.09691706823353627;  // std dev = 1,639, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.003516279911806185;  // std dev = 4,025, 142,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=19 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8,30e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03471772555825963;  // std dev = 0,462, 1.118,000 (wgt'ed) examples reached here.  /* #neg=768 #pos=350 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.4383569278076189;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1639162612258237;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.015893209208045888;  // std dev = 3,494, 121,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=14 */
%   | | | else return 0.011581265398364618;  // std dev = 2,403, 43,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,37e-08, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.13331882424656985;  // std dev = 2,316, 50,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
%   | | | else return 0.39438215195408327;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0498970785432054;  // std dev = 0,471, 1.015,000 (wgt'ed) examples reached here.  /* #neg=675 #pos=340 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.0384104731467067;  // std dev = 1,589, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.14266991405875204;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0025054552700882696;  // std dev = 3,435, 98,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=14 */
%   | | | else return -0.020234792377060037;  // std dev = 2,496, 69,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */


Results
   AUC ROC   = 0.605487
   AUC PR    = 0.172215
   CLL	      = -0.341375
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 67.832 seconds
Total inference time: 13.996 seconds
AUC ROC: 0.605487


Results scoring model
   AUC ROC   = 0.658688
   AUC PR    = 0.208564
   CLL	      = -0.321439
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174009
   F1        = 0.296435


Total scoring time: 12.145 seconds
Refined model CLL: -0.321439


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.320425
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 87.93699999999998 seconds
Total inference time: 5.602 seconds
AUC ROC: 0.576975
Total revision time: 87.93699999999998
Best scored revision CLL: -0.321293


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 01:59:15
{'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Learning time': 87.93699999999998, 'F1': 0.266821, 'Inference time': 5.602, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'parameter_0.2': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Learning time': 3.76, 'F1': 0.266821, 'Inference time': 5.602, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'CLL': -0.320425}, 'CLL': -0.320425}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.003920030417729115;  // std dev = 1,857, 29,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22194506866717004;  // std dev = 0,481, 1.138,000 (wgt'ed) examples reached here.  /* #neg=724 #pos=414 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then return 0.039967116917694;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.22178529873587596;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.007574222455834193;  // std dev = 3,325, 87,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=13 */
%   | | | else return -0.046612969662392464;  // std dev = 2,330, 63,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7890494302070507;  // std dev = 0,170, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.21856379086675506;  // std dev = 2,020, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.13682314800586423;  // std dev = 0,027, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.19923298689739316;  // std dev = 0,483, 1.118,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=414 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | then return 0.1622848608523529;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return -0.16700476398005784;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.03869781875846994;  // std dev = 0,301, 139,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=14 */
%   | | else if ( haswordvenue(B, P), haswordtitle(Q, P) )
%   | | | then return 0.01908241534476469;  // std dev = 2,422, 43,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | | else return -0.13977611638798185;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15776476012472962;  // std dev = 0,477, 1.194,000 (wgt'ed) examples reached here.  /* #neg=765 #pos=429 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return -0.07725526914296067;  // std dev = 1,677, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | | | else return 0.017186360403042684;  // std dev = 2,991, 70,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | | else return 0.12856219138404695;  // std dev = 0,442, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.17688716800427715;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.07776367627393199;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 6.225710078892557E-5;  // std dev = 2,262, 42,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13228678386227052;  // std dev = 0,477, 1.192,000 (wgt'ed) examples reached here.  /* #neg=763 #pos=429 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return 0.1177891901678428;  // std dev = 0,456, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.07034394771409408;  // std dev = 2,928, 51,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return -0.06586860846188002;  // std dev = 1,683, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | | else return -0.022321750852519178;  // std dev = 0,308, 65,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.569704303519288;  // std dev = 0,255, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.176721537857938;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.1407387796023796;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else return 0.1046731493035972;  // std dev = 0,477, 1.165,000 (wgt'ed) examples reached here.  /* #neg=750 #pos=415 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then return -0.01558695817779225;  // std dev = 0,322, 115,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=14 */
%   | | else return 0.14416548947563942;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.0034653385683652044;  // std dev = 2,428, 45,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | | else return -0.1356408825975124;  // std dev = 0,006, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1347056920016125;  // std dev = 0,062, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10740830064744014;  // std dev = 0,481, 1.129,000 (wgt'ed) examples reached here.  /* #neg=700 #pos=429 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( title(H, E), venue(H, B) )
%   | | | then return -0.08330966396797716;  // std dev = 0,975, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.028038586060867482;  // std dev = 3,228, 80,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | | else return 0.17942206718605733;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return 0.03206155590820909;  // std dev = 0,899, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.03927286289941872;  // std dev = 0,310, 55,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.055457561214291615;  // std dev = 0,472, 1.229,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=429 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.7458360607480278;  // std dev = 0,940, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.1667511893606199;  // std dev = 0,208, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.1252176072635393;  // std dev = 0,062, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -7.560427065949495E-4;  // std dev = 1,631, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.19161490559003544;  // std dev = 0,481, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.028656444159263203;  // std dev = 2,497, 72,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=7 */
%   | | | else return -0.10132146236010446;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.3824497618473244;  // std dev = 0,256, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return -0.10995360608306877;  // std dev = 1,639, 32,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | | else return 0.16831070242478305;  // std dev = 1,028, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.08340145578975441;  // std dev = 0,487, 1.066,000 (wgt'ed) examples reached here.  /* #neg=652 #pos=414 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( title(K, I), venue(K, B) )
%   | | | then return 0.6955354355648907;  // std dev = 0,147, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1359223308172406;  // std dev = 0,154, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.053265851138004784;  // std dev = 0,249, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.0478596039626324;  // std dev = 0,442, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return -0.016926238425777982;  // std dev = 0,306, 66,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.038022807164590486;  // std dev = 0,476, 1.188,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=429 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.5343371489867499;  // std dev = 0,169, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.12020395219018042;  // std dev = 0,144, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.10913983262158987;  // std dev = 0,047, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.02241337135780532;  // std dev = 1,652, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.1476778338893005;  // std dev = 0,481, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.021903682097482204;  // std dev = 2,496, 70,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=7 */
%   | | | else return -0.09333347009795123;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.36303332786166703;  // std dev = 0,255, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2569760120018935;  // std dev = 0,596, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.1091788096276326;  // std dev = 1,499, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.4113063350893631;  // std dev = 0,192, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.046104891281145734;  // std dev = 0,484, 1.097,000 (wgt'ed) examples reached here.  /* #neg=683 #pos=414 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.7030809694294244;  // std dev = 1,373, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.12412441066686244;  // std dev = 0,343, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.06230130355089312;  // std dev = 0,165, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | else return -0.01739425236907616;  // std dev = 0,200, 44,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */


Results
   AUC ROC   = 0.56204
   AUC PR    = 0.028511
   CLL	      = -0.394847
   Precision = 0.266667 at threshold = 0.5
   Recall    = 0.032129
   F1        = 0.057348


Total learning time: 484.867 seconds
Total inference time: 21.701 seconds
AUC ROC: 0.56204


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 02:07:42
{'AUC PR': 0.028511, 'AUC ROC': 0.56204, 'Learning time': 484.867, 'F1': 0.057348, 'Inference time': 21.701, 'Precision': [0.266667, 0.5], 'Recall': 0.032129, 'CLL': -0.394847}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.01685106490048774;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | else return 0.2162804229887808;  // std dev = 0,479, 1.156,000 (wgt'ed) examples reached here.  /* #neg=742 #pos=414 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.024815601766178884;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | then if ( haswordauthor(P, Q), haswordtitle(R, Q) )
%   | | | then return 0.14386322081379804;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, S), haswordtitle(T, S) )
%   | | | then return -0.03415875720818001;  // std dev = 2,499, 65,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.552719
   AUC PR    = 0.017117
   CLL	      = -0.199683
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 23.799 seconds
Total inference time: 6.529 seconds
AUC ROC: 0.552719


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 02:08:13
{'AUC PR': 0.017117, 'AUC ROC': 0.552719, 'Learning time': 23.799, 'F1': nan, 'Inference time': 6.529, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.199683}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1,01e-06, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.1484213086403633;  // std dev = 23,010, 2.570,000 (wgt'ed) examples reached here.  /* #neg=1.824 #pos=746 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.12383712536255082;  // std dev = 23,100, 2.620,000 (wgt'ed) examples reached here.  /* #neg=1.874 #pos=746 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.11770738406253971;  // std dev = 22,916, 2.520,000 (wgt'ed) examples reached here.  /* #neg=1.774 #pos=746 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4,42e-07, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.08948562068093967;  // std dev = 23,084, 2.611,000 (wgt'ed) examples reached here.  /* #neg=1.865 #pos=746 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3,15e-07, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.07697060585429247;  // std dev = 23,052, 2.593,000 (wgt'ed) examples reached here.  /* #neg=1.847 #pos=746 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.06988698248885722;  // std dev = 22,954, 2.540,000 (wgt'ed) examples reached here.  /* #neg=1.794 #pos=746 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,63e-07, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.058091607211596265;  // std dev = 22,945, 2.535,000 (wgt'ed) examples reached here.  /* #neg=1.789 #pos=746 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.04756774343769631;  // std dev = 22,943, 2.534,000 (wgt'ed) examples reached here.  /* #neg=1.788 #pos=746 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.035970546973025604;  // std dev = 22,986, 2.557,000 (wgt'ed) examples reached here.  /* #neg=1.811 #pos=746 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.036313279097756064;  // std dev = 22,868, 2.495,000 (wgt'ed) examples reached here.  /* #neg=1.749 #pos=746 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.323273
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 6.707 seconds
Total inference time: 5.568 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.589207
   AUC PR    = 0.197751
   CLL	      = -0.324065
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.178414
   F1        = 0.302804


Total scoring time: 6.306 seconds
Parameter learned model CLL: -0.324065


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.01, 1824, 746], 'true': [1.01e-06, 0, 162]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.1, 1874, 746], 'true': [0.0, 0, 162]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.916, 1774, 746], 'true': [5.53e-07, 0, 162]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.084, 1865, 746], 'true': [4.42e-07, 0, 162]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.052, 1847, 746], 'true': [3.15e-07, 0, 162]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.954, 1794, 746], 'true': [0.0, 0, 162]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.945, 1789, 746], 'true': [2.63e-07, 0, 162]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.943, 1788, 746], 'true': [0.0, 0, 162]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.986, 1811, 746], 'true': [0.0, 0, 162]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.868, 1749, 746], 'true': [9.42e-08, 0, 162]}]]
[{'': [6.315935428978668e-15, 0.20601432269983874]}, {'': [-2.807082412879408e-15, 0.2036600431210007]}, {'': [1.8860084961533524e-15, 0.20839695137314349]}, {'': [1.2061682242841207e-15, 0.20408163265305454]}, {'': [6.140492778173705e-16, 0.20492771112828398]}, {'': [-2.3026847918151394e-16, 0.20744063488127118]}, {'': [4.276414613370973e-16, 0.2076793140607396]}, {'': [-3.1798980458399544e-16, 0.20772708216402447]}, {'': [-2.412336448568241e-16, 0.20663116378713642]}, {'': [5.482582837655094e-17, 0.20959819438476748]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1,01e-06, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1733169641639941;  // std dev = 0,465, 2.202,000 (wgt'ed) examples reached here.  /* #neg=1.508 #pos=694 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.04419481490048794;  // std dev = 4,750, 256,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=25 */
%   | | | else return 0.12130682983635446;  // std dev = 2,714, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.04916017105456856;  // std dev = 3,708, 89,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=17 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1540633649730939;  // std dev = 0,466, 2.180,000 (wgt'ed) examples reached here.  /* #neg=1.486 #pos=694 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.08097564105131194;  // std dev = 4,548, 117,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=27 */
%   | | | else return -0.04047206698105158;  // std dev = 2,692, 82,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.042341630330041416;  // std dev = 3,925, 180,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=17 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12819446561341186;  // std dev = 0,464, 2.205,000 (wgt'ed) examples reached here.  /* #neg=1.511 #pos=694 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.18220715969604795;  // std dev = 2,199, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.13452946451701384;  // std dev = 0,041, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.021590937582686636;  // std dev = 5,349, 206,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=35 */
%   | | | else return -0.0572636619480926;  // std dev = 3,041, 136,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4,42e-07, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5826904071555555;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return -0.0488885402128655;  // std dev = 2,753, 57,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | else return 0.11564213199219016;  // std dev = 0,467, 2.078,000 (wgt'ed) examples reached here.  /* #neg=1.408 #pos=670 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.023764170261838517;  // std dev = 4,696, 235,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=25 */
%   | | | else return 0.07452096020804892;  // std dev = 2,743, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.11731117353836179;  // std dev = 1,898, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.0040219503005685525;  // std dev = 3,157, 75,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3,15e-07, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09662704579409297;  // std dev = 0,467, 2.148,000 (wgt'ed) examples reached here.  /* #neg=1.454 #pos=694 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.05574287619954491;  // std dev = 4,552, 121,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=27 */
%   | | | else return -0.04820725069829093;  // std dev = 2,715, 92,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.11019023098131811;  // std dev = 2,259, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return -0.04413078417554853;  // std dev = 3,035, 128,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07773012939643192;  // std dev = 0,466, 2.159,000 (wgt'ed) examples reached here.  /* #neg=1.465 #pos=694 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.16746422221866472;  // std dev = 2,162, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.13407251796274144;  // std dev = 0,049, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.0018610249336689683;  // std dev = 5,371, 230,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=35 */
%   | | | else return -0.04562993358007104;  // std dev = 3,046, 138,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,63e-07, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3570489389523146;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return -0.06740584123469293;  // std dev = 2,748, 56,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else return 0.04769972070111205;  // std dev = 0,461, 2.189,000 (wgt'ed) examples reached here.  /* #neg=1.519 #pos=670 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12353541698333116;  // std dev = 2,200, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.11217521239416363;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010255361562614557;  // std dev = 5,334, 212,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=35 */
%   | | | else return -0.033861724930896966;  // std dev = 3,033, 127,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04910457509492643;  // std dev = 0,464, 2.189,000 (wgt'ed) examples reached here.  /* #neg=1.495 #pos=694 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.019658578039142942;  // std dev = 4,642, 241,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=25 */
%   | | | else return 0.07365715677250606;  // std dev = 2,709, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.015011905681645238;  // std dev = 2,034, 29,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.023638280805352754;  // std dev = 3,104, 63,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.035644827840418364;  // std dev = 0,462, 2.217,000 (wgt'ed) examples reached here.  /* #neg=1.523 #pos=694 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.22616671804651942;  // std dev = 2,003, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.10353218438903829;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.002960871913075256;  // std dev = 5,334, 220,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=35 */
%   | | | else return -0.031248595984748107;  // std dev = 3,038, 131,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.25061639319565915;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return -0.05811147246027732;  // std dev = 2,728, 52,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | | else return 0.03740531170745233;  // std dev = 0,467, 2.081,000 (wgt'ed) examples reached here.  /* #neg=1.411 #pos=670 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.15774912882410808;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.0991499225335486;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00427311620422187;  // std dev = 5,363, 227,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=35 */
%   | | | else return -0.03131950137069256;  // std dev = 3,043, 136,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=10 */


Results
   AUC ROC   = 0.60248
   AUC PR    = 0.171726
   CLL	      = -0.337691
   Precision = 0.148599 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.155612


Total learning time: 119.471 seconds
Total inference time: 11.213 seconds
AUC ROC: 0.60248


Results scoring model
   AUC ROC   = 0.647852
   AUC PR    = 0.210351
   CLL	      = -0.318122
   Precision = 0.536364 at threshold = 0.5
   Recall    = 0.194934
   F1        = 0.285945


Total scoring time: 20.101 seconds
Refined model CLL: -0.318122


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.60248
   AUC PR    = 0.171726
   CLL	      = -0.337691
   Precision = 0.148599 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.155612


Total learning time: 152.585 seconds
Total inference time: 11.213 seconds
AUC ROC: 0.60248
Total revision time: 152.585
Best scored revision CLL: -0.318122


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:11:03
{'AUC PR': 0.171726, 'AUC ROC': 0.60248, 'parameter_0.4': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Learning time': 6.707, 'F1': 0.266821, 'Inference time': 5.568, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'CLL': -0.323273}, 'Learning time': 152.585, 'F1': 0.155612, 'Inference time': 11.213, 'Precision': [0.148599, 0.5], 'Recall': 0.16332, 'CLL': -0.337691}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.274815601766179;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.01501168019755156;  // std dev = 2,597, 51,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | else return 0.22769479440493914;  // std dev = 0,483, 2.246,000 (wgt'ed) examples reached here.  /* #neg=1.416 #pos=830 */
%   else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.17064893509951234;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.16249676118646889;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.018433343381500954;  // std dev = 0,329, 316,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=39 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7413433124639606;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3476164307906391;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.04235824172076411;  // std dev = 2,552, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.12144531861242357;  // std dev = 3,943, 75,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | | | else return 0.1906063773831517;  // std dev = 22,696, 2.229,000 (wgt'ed) examples reached here.  /* #neg=1.421 #pos=808 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( samebib(L, M), venue(M, B) )
%   | | | then return 0.7266430707145922;  // std dev = 1,870, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | else return -0.14388192161188956;  // std dev = 0,084, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return -0.036726570221789816;  // std dev = 0,306, 77,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=8 */
%   | else return -0.032072356898863556;  // std dev = 0,311, 154,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=17 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17192990266999011;  // std dev = 0,482, 2.298,000 (wgt'ed) examples reached here.  /* #neg=1.442 #pos=856 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(H, D) )
%   | | | then return -0.14473731328129397;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1597010470253419;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else return -0.12196809663913764;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05516996528580766;  // std dev = 4,020, 128,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=27 */
%   | | | else return -0.062402490643619545;  // std dev = 2,724, 109,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.04864672903613358;  // std dev = 3,021, 114,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=10 */
%   | | | else return -0.1500680203931915;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13600352947143454;  // std dev = 0,480, 2.341,000 (wgt'ed) examples reached here.  /* #neg=1.485 #pos=856 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.11032540886699152;  // std dev = 0,871, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return -0.1521208270259036;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.046272260309129;  // std dev = 1,663, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03990933411541917;  // std dev = 3,665, 111,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=22 */
%   | | | else return -0.05068556316294117;  // std dev = 2,717, 103,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.022047867517797134;  // std dev = 3,699, 141,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=16 */
%   | | | else return -0.11914269819040285;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1121189848566356;  // std dev = 0,480, 2.336,000 (wgt'ed) examples reached here.  /* #neg=1.480 #pos=856 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return -0.13227244578142774;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.2122074372052526;  // std dev = 2,065, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.10400716804270338;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.041214432513545535;  // std dev = 3,996, 128,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=27 */
%   | | | else return -0.031806303741830945;  // std dev = 2,699, 87,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0520501898282818;  // std dev = 3,035, 131,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=10 */
%   | | | else return -0.11693087517096046;  // std dev = 0,048, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09217950845626989;  // std dev = 0,481, 2.324,000 (wgt'ed) examples reached here.  /* #neg=1.468 #pos=856 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6792095262903387;  // std dev = 0,978, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.1381096627454377;  // std dev = 0,124, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.12460027554512544;  // std dev = 0,077, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0.06209444500723527;  // std dev = 2,560, 44,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.010323585273226785;  // std dev = 3,635, 131,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=16 */
%   | | | else return -0.07040497129292415;  // std dev = 0,977, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else return -0.1023547511068191;  // std dev = 0,047, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06416905431110441;  // std dev = 0,478, 2.384,000 (wgt'ed) examples reached here.  /* #neg=1.528 #pos=856 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.4913191072868993;  // std dev = 1,356, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return -0.12434491344863209;  // std dev = 0,119, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.11153467396965784;  // std dev = 0,063, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0.03596549085075838;  // std dev = 2,592, 49,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.048865811506352864;  // std dev = 0,429, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.04222093575198747;  // std dev = 3,031, 127,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=10 */
%   | | | else return -0.08794392767317297;  // std dev = 6,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05353874036504151;  // std dev = 0,479, 2.366,000 (wgt'ed) examples reached here.  /* #neg=1.510 #pos=856 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return -0.0030842629279228843;  // std dev = 2,652, 129,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=27 */
%   | | | else return -0.09779304430952492;  // std dev = 0,033, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.15202979687100013;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.05567601860413116;  // std dev = 2,553, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then if ( haswordauthor(L, M), haswordtitle(N, M) )
%   | | | then return 0.17153822765194926;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.09820828061760796;  // std dev = 0,015, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, P), haswordtitle(Q, P) )
%   | | | then return -0.04471645067649988;  // std dev = 3,042, 140,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=10 */
%   | | | else return -0.08454784909024601;  // std dev = 0,029, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.047544044408646784;  // std dev = 0,481, 2.330,000 (wgt'ed) examples reached here.  /* #neg=1.474 #pos=856 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return -0.046123643819237545;  // std dev = 2,511, 89,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=7 */
%   | | | else return 0.021539925634276015;  // std dev = 3,769, 122,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=18 */
%   | | else if ( haswordtitle(E, I), haswordvenue(B, I) )
%   | | | then return 0.0569086233603223;  // std dev = 1,480, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.1025964586599438;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return -0.11601383662896281;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.018040278929644445;  // std dev = 2,161, 89,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=17 */
%   | | | else return -0.07863419921701417;  // std dev = 0,027, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.021109954743237243;  // std dev = 0,476, 2.433,000 (wgt'ed) examples reached here.  /* #neg=1.577 #pos=856 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.0788777150097003;  // std dev = 0,460, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else return -0.09113842571619128;  // std dev = 0,016, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.037324707750015444;  // std dev = 4,039, 240,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=18 */
%   | | | else return 0.06904852006491627;  // std dev = 1,411, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.02097698006914509;  // std dev = 1,059, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return -0.04984879643007307;  // std dev = 1,977, 102,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=12 */


Results
   AUC ROC   = 0.556795
   AUC PR    = 0.021161
   CLL	      = -0.385917
   Precision = 0.197531 at threshold = 0.5
   Recall    = 0.021419
   F1        = 0.038647


Total learning time: 560.41 seconds
Total inference time: 16.214 seconds
AUC ROC: 0.556795


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 02:20:40
{'AUC PR': 0.021161, 'AUC ROC': 0.556795, 'Learning time': 560.41, 'F1': 0.038647, 'Inference time': 16.214, 'Precision': [0.197531, 0.5], 'Recall': 0.021419, 'CLL': -0.385917}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2929315437951645;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.04419544672741935;  // std dev = 2,552, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.6816783468642181;  // std dev = 1,572, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return 0.02141424122196133;  // std dev = 2,587, 49,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   | | else return 0.21425294567685413;  // std dev = 0,479, 2.269,000 (wgt'ed) examples reached here.  /* #neg=1.461 #pos=808 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, A) )
%   | | then if ( samebib(M, N), venue(N, B) )
%   | | | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( haswordtitle(L, P), haswordauthor(Q, P) )
%   | | | then return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0.02141424122196133;  // std dev = 2,587, 49,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   | else if ( haswordvenue(B, R), haswordauthor(S, R) )
%   | | then if ( haswordauthor(S, T), haswordtitle(U, T) )
%   | | | then return 0.17633075328133055;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, W), haswordtitle(X, W) )
%   | | | then return -0.06492798797741074;  // std dev = 3,038, 130,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=10 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.555462
   AUC PR    = 0.020659
   CLL	      = -0.19959
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 53.284 seconds
Total inference time: 7.306 seconds
AUC ROC: 0.555462


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 02:21:42
{'AUC PR': 0.020659, 'AUC ROC': 0.555462, 'Learning time': 53.284, 'F1': nan, 'Inference time': 7.306, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.19959}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1,07e-06, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.1482233131451599;  // std dev = 28,336, 3.899,000 (wgt'ed) examples reached here.  /* #neg=2.768 #pos=1.131 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.13466277827583759;  // std dev = 28,227, 3.827,000 (wgt'ed) examples reached here.  /* #neg=2.696 #pos=1.131 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,46e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.11449102389523805;  // std dev = 28,250, 3.842,000 (wgt'ed) examples reached here.  /* #neg=2.711 #pos=1.131 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831064;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.0912674584774029;  // std dev = 28,364, 3.918,000 (wgt'ed) examples reached here.  /* #neg=2.787 #pos=1.131 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3,15e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.08327162744423229;  // std dev = 28,227, 3.827,000 (wgt'ed) examples reached here.  /* #neg=2.696 #pos=1.131 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,89e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.07103629372913062;  // std dev = 28,186, 3.801,000 (wgt'ed) examples reached here.  /* #neg=2.670 #pos=1.131 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.06000216645356211;  // std dev = 28,153, 3.780,000 (wgt'ed) examples reached here.  /* #neg=2.649 #pos=1.131 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527753;  // std dev = 7,88e-08, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.04500634287629967;  // std dev = 28,231, 3.830,000 (wgt'ed) examples reached here.  /* #neg=2.699 #pos=1.131 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.03516157108771851;  // std dev = 28,258, 3.847,000 (wgt'ed) examples reached here.  /* #neg=2.716 #pos=1.131 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,88e-08, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.03199549247215292;  // std dev = 28,185, 3.800,000 (wgt'ed) examples reached here.  /* #neg=2.669 #pos=1.131 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.326111
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 10.15 seconds
Total inference time: 5.579 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.584802
   AUC PR    = 0.188746
   CLL	      = -0.327019
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169604
   F1        = 0.290019


Total scoring time: 8.228 seconds
Parameter learned model CLL: -0.327019


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.336, 2768, 1131], 'true': [1.07e-06, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.227, 2696, 1131], 'true': [0.0, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.25, 2711, 1131], 'true': [5.46e-07, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.364, 2787, 1131], 'true': [0.0, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.227, 2696, 1131], 'true': [3.15e-07, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.186, 2670, 1131], 'true': [2.89e-07, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.153, 2649, 1131], 'true': [2.92e-07, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.231, 2699, 1131], 'true': [7.88e-08, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.258, 2716, 1131], 'true': [0.0, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.185, 2669, 1131], 'true': [9.88e-08, 0, 231]}]]
[{'': [4.921508126476884e-15, 0.20593123324710652]}, {'': [-4.183281907505352e-15, 0.2081927339672554]}, {'': [1.2918958832001822e-15, 0.20771956357319762]}, {'': [-6.151885158096106e-17, 0.2053386537338653]}, {'': [4.306319610667274e-16, 0.20819273396727117]}, {'': [3.614232530381462e-16, 0.20901532372049475]}, {'': [3.6911310948576635e-16, 0.20968190980098642]}, {'': [2.6914497566670462e-17, 0.20809801689284818]}, {'': [-1.5764205717621271e-16, 0.20756207224222248]}, {'': [4.229421046191072e-17, 0.20904702216066498]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1,07e-06, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6795775065280832;  // std dev = 2,027, 28,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | | else return 0.003982268432845688;  // std dev = 3,458, 96,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=14 */
%   | | else return 0.17544453258378395;  // std dev = 0,465, 3.180,000 (wgt'ed) examples reached here.  /* #neg=2.171 #pos=1.009 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0360014827277863;  // std dev = 5,829, 359,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=38 */
%   | | | else return 0.05511863206920934;  // std dev = 3,231, 66,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.07892815587873193;  // std dev = 5,147, 154,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=34 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5754956476685188;  // std dev = 2,027, 28,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | | else return 0.011509638306387958;  // std dev = 3,442, 91,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | else return 0.1568623756615225;  // std dev = 0,467, 3.139,000 (wgt'ed) examples reached here.  /* #neg=2.130 #pos=1.009 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.16460744282655543;  // std dev = 2,638, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.13752487682029496;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.023137932550148378;  // std dev = 6,802, 331,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=56 */
%   | | | else return -0.04905013407458135;  // std dev = 4,161, 216,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=19 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,46e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13881106216901629;  // std dev = 0,467, 3.207,000 (wgt'ed) examples reached here.  /* #neg=2.161 #pos=1.046 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0313262041394938;  // std dev = 5,807, 363,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=38 */
%   | | | else return 0.13764461437863365;  // std dev = 3,039, 45,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0813851714507302;  // std dev = 5,093, 144,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=34 */
%   | | | else return -0.11951555530220116;  // std dev = 0,009, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831064;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.39325960023621925;  // std dev = 2,181, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.004975310164020012;  // std dev = 3,416, 84,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
%   | | else return 0.1085510493690572;  // std dev = 0,466, 3.174,000 (wgt'ed) examples reached here.  /* #neg=2.165 #pos=1.009 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0290445717127044;  // std dev = 5,816, 363,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=38 */
%   | | | else return 0.11260933020089509;  // std dev = 3,053, 46,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.027276839642050795;  // std dev = 5,235, 176,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=34 */
%   | | | else return -0.10958096475609816;  // std dev = 0,022, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3,15e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3076388348063708;  // std dev = 2,720, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return -0.021459947416171556;  // std dev = 3,407, 72,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | else return 0.09038268949752333;  // std dev = 0,463, 3.187,000 (wgt'ed) examples reached here.  /* #neg=2.172 #pos=1.015 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.2305508714510903;  // std dev = 2,481, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.12031331275996124;  // std dev = 0,030, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.02483602315366667;  // std dev = 6,051, 379,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=42 */
%   | | | else return 0.03528146352004576;  // std dev = 5,113, 165,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=33 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,89e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24688407625611067;  // std dev = 2,733, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return -0.028571604070552516;  // std dev = 3,430, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | else return 0.06943594297653996;  // std dev = 0,462, 3.234,000 (wgt'ed) examples reached here.  /* #neg=2.219 #pos=1.015 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.05146228504687608;  // std dev = 5,949, 204,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=46 */
%   | | | else return -0.0496652168783941;  // std dev = 3,174, 123,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.11549684365117951;  // std dev = 2,478, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.03343751186097015;  // std dev = 4,163, 213,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19389721456549597;  // std dev = 2,733, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return -0.028657394534345713;  // std dev = 3,441, 78,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=15 */
%   | | else return 0.05873177361153607;  // std dev = 0,463, 3.202,000 (wgt'ed) examples reached here.  /* #neg=2.187 #pos=1.015 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07694506113677531;  // std dev = 2,839, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return -0.20057148881895034;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.016282318253828653;  // std dev = 6,464, 413,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=49 */
%   | | | else return 0.02003003614089119;  // std dev = 4,460, 129,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=25 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527753;  // std dev = 7,88e-08, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.045277515953854264;  // std dev = 0,461, 3.333,000 (wgt'ed) examples reached here.  /* #neg=2.287 #pos=1.046 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13638481490912593;  // std dev = 2,686, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return -0.13591830968167798;  // std dev = 0,077, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.014542367908165441;  // std dev = 6,472, 409,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=49 */
%   | | | else return 0.023375235443999966;  // std dev = 4,443, 124,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=25 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.046070204412055026;  // std dev = 0,465, 3.228,000 (wgt'ed) examples reached here.  /* #neg=2.182 #pos=1.046 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.021777196723232826;  // std dev = 5,768, 367,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=38 */
%   | | | else return 0.11938583715703727;  // std dev = 2,998, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.04499054096584255;  // std dev = 5,063, 144,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=34 */
%   | | | else return -0.11566848086170435;  // std dev = 0,081, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,88e-08, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.010267759270549872;  // std dev = 4,310, 102,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | | else return 0.4689317721128262;  // std dev = 0,763, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.009700365541391658;  // std dev = 4,128, 115,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | | | else return 0.024892738762691748;  // std dev = 25,970, 3.143,000 (wgt'ed) examples reached here.  /* #neg=2.163 #pos=980 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.007166570506952512;  // std dev = 2,806, 48,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return -0.11953059271931794;  // std dev = 0,080, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.012914530275161344;  // std dev = 6,023, 358,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=42 */
%   | | | else return 0.012345872665919038;  // std dev = 5,070, 164,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=33 */


Results
   AUC ROC   = 0.606111
   AUC PR    = 0.172356
   CLL	      = -0.340257
   Precision = 0.148599 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.155612


Total learning time: 221.269 seconds
Total inference time: 16.309 seconds
AUC ROC: 0.606111


Results scoring model
   AUC ROC   = 0.64883
   AUC PR    = 0.205128
   CLL	      = -0.318464
   Precision = 0.521561 at threshold = 0.5
   Recall    = 0.18649
   F1        = 0.274743


Total scoring time: 39.487 seconds
Refined model CLL: -0.318464


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.606111
   AUC PR    = 0.172356
   CLL	      = -0.340257
   Precision = 0.148599 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.155612


Total learning time: 279.134 seconds
Total inference time: 16.309 seconds
AUC ROC: 0.606111
Total revision time: 279.134
Best scored revision CLL: -0.318464


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:26:44
{'AUC PR': 0.172356, 'AUC ROC': 0.606111, 'Learning time': 279.134, 'F1': 0.155612, 'Inference time': 16.309, 'Precision': [0.148599, 0.5], 'Recall': 0.16332, 'parameter_0.6': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Learning time': 10.15, 'F1': 0.266821, 'Inference time': 5.579, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'CLL': -0.326111}, 'CLL': -0.340257}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.7867203636709403;  // std dev = 0,258, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.06648226843284571;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21716819954784344;  // std dev = 0,480, 3.426,000 (wgt'ed) examples reached here.  /* #neg=2.196 #pos=1.230 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then return -0.022728807847196792;  // std dev = 0,324, 319,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=38 */
%   | | else return 0.08228686613399513;  // std dev = 0,417, 58,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, A) )
%   | | | then return 0.09875043885890963;  // std dev = 4,930, 133,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=32 */
%   | | | else return -0.0418510649004878;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7893969768355644;  // std dev = 0,061, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.32960519617947165;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.04660947330706353;  // std dev = 3,190, 60,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | else return 0.19221629929594264;  // std dev = 0,480, 3.405,000 (wgt'ed) examples reached here.  /* #neg=2.169 #pos=1.236 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then return -0.031762126951270654;  // std dev = 0,310, 354,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=38 */
%   | | else return 0.14328858443534873;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return 0.08402894715961558;  // std dev = 4,933, 135,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=32 */
%   | | | else return -0.04556732655624185;  // std dev = 1,355, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6348849661060701;  // std dev = 0,085, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2778579020361178;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.029264097896059476;  // std dev = 3,212, 63,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | else return 0.16194828244123272;  // std dev = 0,479, 3.416,000 (wgt'ed) examples reached here.  /* #neg=2.180 #pos=1.236 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then return -0.03123688252165197;  // std dev = 0,305, 365,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=38 */
%   | | else return 0.05648362372601371;  // std dev = 0,420, 57,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, A) )
%   | | | then return 0.0849470682067722;  // std dev = 4,896, 128,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=32 */
%   | | | else return -0.029052553631156403;  // std dev = 1,347, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13812155242430174;  // std dev = 0,479, 3.493,000 (wgt'ed) examples reached here.  /* #neg=2.216 #pos=1.277 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return -0.07708754008342601;  // std dev = 3,075, 183,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=10 */
%   | | | else return 0.045482841046822174;  // std dev = 4,800, 158,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=28 */
%   | | else return 0.09106840462410724;  // std dev = 0,444, 48,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.08025419518458696;  // std dev = 4,868, 125,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=32 */
%   | | | else return -0.02279032931352791;  // std dev = 1,353, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1084387964801866;  // std dev = 0,478, 3.538,000 (wgt'ed) examples reached here.  /* #neg=2.261 #pos=1.277 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return -0.06292172031547244;  // std dev = 3,066, 166,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=10 */
%   | | | else return 0.026720367818661786;  // std dev = 4,839, 171,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=28 */
%   | | else if ( haswordtitle(E, I), haswordvenue(B, I) )
%   | | | then return 0.16752466166575208;  // std dev = 2,882, 36,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return -0.19358644944535916;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.15892294042528524;  // std dev = 2,417, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.17352436313947392;  // std dev = 0,089, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.018526063338755255;  // std dev = 4,459, 125,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=25 */
%   | | | else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.4930698692394637;  // std dev = 0,263, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else if ( haswordauthor(E, C) )
%   | | | then return 0.4681018332329189;  // std dev = 0,233, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.09942610643062684;  // std dev = 3,160, 85,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=13 */
%   | else return 0.09043524118416735;  // std dev = 0,480, 3.394,000 (wgt'ed) examples reached here.  /* #neg=2.164 #pos=1.230 */
%   else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then return 0.3597873157629396;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordauthor(H, J), haswordtitle(K, J) )
%   | | | then return 0.03784088694337378;  // std dev = 2,574, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return -0.15645596331204412;  // std dev = 0,044, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return -0.004340852325918673;  // std dev = 0,361, 299,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=48 */
%   | | else return -0.01718091246651267;  // std dev = 0,310, 236,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=26 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07915715450920167;  // std dev = 0,480, 3.438,000 (wgt'ed) examples reached here.  /* #neg=2.161 #pos=1.277 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.01784350780289308;  // std dev = 1,241, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.020544196306197398;  // std dev = 5,646, 336,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=36 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.08198602675030683;  // std dev = 3,012, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return -0.1627864599767823;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.022402785675357962;  // std dev = 4,976, 147,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=32 */
%   | | | else return 0.0677175460120616;  // std dev = 1,273, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.08959021431636427;  // std dev = 0,041, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4241744724642466;  // std dev = 0,430, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.5398334850691684;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.09800088313155442;  // std dev = 3,083, 90,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=15 */
%   | | | else return 0.46564846738891924;  // std dev = 0,429, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.053247976062740385;  // std dev = 0,480, 3.414,000 (wgt'ed) examples reached here.  /* #neg=2.184 #pos=1.230 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, I) )
%   | | | then return 0.008372011560011171;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17550414060724287;  // std dev = 2,487, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return -0.14390126358323227;  // std dev = 0,102, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.019662189203855752;  // std dev = 0,331, 567,000 (wgt'ed) examples reached here.  /* #neg=492 #pos=75 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04924899935154982;  // std dev = 0,478, 3.456,000 (wgt'ed) examples reached here.  /* #neg=2.179 #pos=1.277 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.08550717329003472;  // std dev = 1,160, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07402864477593533;  // std dev = 2,497, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else return -0.15218182551321421;  // std dev = 0,035, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.024044992246888018;  // std dev = 5,641, 361,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=36 */
%   | | | else return 0.019152531627435077;  // std dev = 3,115, 53,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.003377379537794998;  // std dev = 4,500, 131,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=25 */
%   | | | else return -0.07465466853536838;  // std dev = 0,008, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6363229152603056;  // std dev = 0,184, 1.197,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1.159 */
%   | | else return -0.2783211193890732;  // std dev = 0,157, 2.299,000 (wgt'ed) examples reached here.  /* #neg=2.250 #pos=49 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.20850080377265523;  // std dev = 0,292, 210,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=20 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.41326216922813835;  // std dev = 3,657, 70,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=52 */
%   | | | else return 0.028146201179341815;  // std dev = 3,429, 64,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5459576130034245;  // std dev = 0,298, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06747209115851961;  // std dev = 4,813, 120,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | | else return -0.05878397153651163;  // std dev = 1,375, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.07597770196417424;  // std dev = 0,043, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.948663
   AUC PR    = 0.463781
   CLL	      = -0.310823
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.021419
   F1        = 0.04194


Total learning time: 1337.685 seconds
Total inference time: 40.268 seconds
AUC ROC: 0.948663


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 02:49:43
{'AUC PR': 0.463781, 'AUC ROC': 0.948663, 'Learning time': 1337.685, 'F1': 0.04194, 'Inference time': 40.268, 'Precision': [1.0, 0.5], 'Recall': 0.021419, 'CLL': -0.310823}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21898532956121955;  // std dev = 0,480, 3.539,000 (wgt'ed) examples reached here.  /* #neg=2.262 #pos=1.277 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.058148935099512175;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.043490409162783294;  // std dev = 5,697, 366,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=36 */
%   | | else return 0.15360348055405781;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.09875043885890963;  // std dev = 4,930, 133,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=32 */
%   | | | else return -0.030739953789376686;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.532424
   AUC PR    = 0.01166
   CLL	      = -0.20144
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 143.16 seconds
Total inference time: 4.455 seconds
AUC ROC: 0.532424


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 02:52:11
{'AUC PR': 0.01166, 'AUC ROC': 0.532424, 'Learning time': 143.16, 'F1': nan, 'Inference time': 4.455, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.20144}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.14864632236484487;  // std dev = 32,634, 5.167,000 (wgt'ed) examples reached here.  /* #neg=3.666 #pos=1.501 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.13258193711033672;  // std dev = 32,564, 5.114,000 (wgt'ed) examples reached here.  /* #neg=3.613 #pos=1.501 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.11735002313177384;  // std dev = 32,484, 5.054,000 (wgt'ed) examples reached here.  /* #neg=3.553 #pos=1.501 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.09534460358619773;  // std dev = 32,578, 5.124,000 (wgt'ed) examples reached here.  /* #neg=3.623 #pos=1.501 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.0791636669949536;  // std dev = 32,592, 5.135,000 (wgt'ed) examples reached here.  /* #neg=3.634 #pos=1.501 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,72e-07, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.06759162423651098;  // std dev = 32,546, 5.100,000 (wgt'ed) examples reached here.  /* #neg=3.599 #pos=1.501 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,49e-07, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.0496968757401691;  // std dev = 32,680, 5.203,000 (wgt'ed) examples reached here.  /* #neg=3.702 #pos=1.501 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2,63e-07, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.03829106738258799;  // std dev = 32,732, 5.244,000 (wgt'ed) examples reached here.  /* #neg=3.743 #pos=1.501 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.036760262781503295;  // std dev = 32,601, 5.142,000 (wgt'ed) examples reached here.  /* #neg=3.641 #pos=1.501 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.024252007214929157;  // std dev = 32,727, 5.240,000 (wgt'ed) examples reached here.  /* #neg=3.739 #pos=1.501 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.319503
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 13.89 seconds
Total inference time: 5.425 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.586729
   AUC PR    = 0.192663
   CLL	      = -0.320383
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.173458
   F1        = 0.295636


Total scoring time: 10.005 seconds
Parameter learned model CLL: -0.320383


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.634, 3666, 1501], 'true': [1.05e-06, 0, 315]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.564, 3613, 1501], 'true': [0.0, 0, 315]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.484, 3553, 1501], 'true': [0.0, 0, 315]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.578, 3623, 1501], 'true': [0.0, 0, 315]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.592, 3634, 1501], 'true': [0.0, 0, 315]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.546, 3599, 1501], 'true': [3.72e-07, 0, 315]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.68, 3702, 1501], 'true': [2.49e-07, 0, 315]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.732, 3743, 1501], 'true': [2.63e-07, 0, 315]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.601, 3641, 1501], 'true': [0.0, 0, 315]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.727, 3739, 1501], 'true': [0.0, 0, 315]}]]
[{'': [3.5188783104309725e-15, 0.20610865525729358]}, {'': [-4.962520694197525e-15, 0.20736106104247093]}, {'': [-3.1579677144893343e-16, 0.2087879473119185]}, {'': [-8.797195776077431e-16, 0.20712417144589457]}, {'': [-4.2858133268069536e-16, 0.20686390532548166]}, {'': [4.3985978880387156e-16, 0.20769315647828313]}, {'': [1.9737298215558337e-16, 0.20526242474062212]}, {'': [2.1992989440193578e-16, 0.20430319260658264]}, {'': [-2.1711028037114172e-16, 0.20669845315632548]}, {'': [-1.8327491200161313e-16, 0.20439656051512228]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17594651334945005;  // std dev = 0,466, 4.377,000 (wgt'ed) examples reached here.  /* #neg=2.986 #pos=1.391 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.03409244421083261;  // std dev = 6,679, 464,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=50 */
%   | | | else return 0.13507201202258928;  // std dev = 3,608, 65,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.04398964306411339;  // std dev = 5,848, 226,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=42 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15113092231397715;  // std dev = 0,465, 4.405,000 (wgt'ed) examples reached here.  /* #neg=3.014 #pos=1.391 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.029526359788986475;  // std dev = 6,677, 462,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=50 */
%   | | | else return 0.1266127038727013;  // std dev = 3,586, 63,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.11037799278365298;  // std dev = 5,584, 163,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=42 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12440866039693563;  // std dev = 0,463, 4.474,000 (wgt'ed) examples reached here.  /* #neg=3.083 #pos=1.391 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.17047716427162982;  // std dev = 3,009, 42,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return -0.09374730383420755;  // std dev = 0,985, 22,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.02886343314553821;  // std dev = 7,499, 384,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=70 */
%   | | | else return -0.035483872933658095;  // std dev = 4,840, 265,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=26 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5506433202370168;  // std dev = 2,610, 37,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=28 */
%   | | | else return -0.01142317103301444;  // std dev = 4,209, 113,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=22 */
%   | | else return 0.111583791625221;  // std dev = 0,466, 4.221,000 (wgt'ed) examples reached here.  /* #neg=2.880 #pos=1.341 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12055052535013021;  // std dev = 3,073, 46,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return -0.05423431216778783;  // std dev = 0,970, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.027319042531527678;  // std dev = 6,923, 494,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=55 */
%   | | | else return 0.03995846257676227;  // std dev = 5,697, 203,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=41 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.31313068680833617;  // std dev = 3,189, 41,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return -0.025434689554759922;  // std dev = 3,885, 95,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=19 */
%   | | else return 0.09805619350269308;  // std dev = 0,467, 4.177,000 (wgt'ed) examples reached here.  /* #neg=2.827 #pos=1.350 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.5196335905498483;  // std dev = 0,783, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05624761828683944;  // std dev = 3,045, 53,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02467808519000449;  // std dev = 6,935, 489,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=55 */
%   | | | else return 0.040323119795651036;  // std dev = 5,679, 196,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,72e-07, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08049838639954247;  // std dev = 0,467, 4.305,000 (wgt'ed) examples reached here.  /* #neg=2.914 #pos=1.391 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.031428939192857955;  // std dev = 6,652, 499,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=50 */
%   | | | else return 0.06881082271068835;  // std dev = 3,697, 74,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.015413023621785163;  // std dev = 5,810, 217,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=42 */
%   | | | else return -0.12258920813005482;  // std dev = 0,058, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,49e-07, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21137448545417759;  // std dev = 3,282, 43,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | | else return -0.05047950865307392;  // std dev = 3,922, 103,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=19 */
%   | | else return 0.07081338311964344;  // std dev = 0,469, 4.109,000 (wgt'ed) examples reached here.  /* #neg=2.759 #pos=1.350 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.11771380047562387;  // std dev = 3,013, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return -0.0793970502562036;  // std dev = 0,933, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0035358066960039375;  // std dev = 7,550, 432,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=70 */
%   | | | else return -0.040276902525045864;  // std dev = 4,888, 324,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=26 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2,63e-07, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04549535218034399;  // std dev = 0,464, 4.392,000 (wgt'ed) examples reached here.  /* #neg=3.001 #pos=1.391 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.1578355244729426;  // std dev = 0,884, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.08660546231727188;  // std dev = 3,035, 50,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03144180363901988;  // std dev = 6,969, 562,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=55 */
%   | | | else return 0.024710896991185997;  // std dev = 5,696, 207,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03704420781777068;  // std dev = 0,464, 4.379,000 (wgt'ed) examples reached here.  /* #neg=2.988 #pos=1.391 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09683068892414785;  // std dev = 2,887, 46,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return -0.14178796305027758;  // std dev = 0,078, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.03790675063225005;  // std dev = 2,995, 53,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return -0.010869097186065895;  // std dev = 8,542, 667,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=86 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.02621403019505409;  // std dev = 0,463, 4.429,000 (wgt'ed) examples reached here.  /* #neg=3.038 #pos=1.391 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.033450363568451366;  // std dev = 2,979, 58,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | | else return -0.15688985536992306;  // std dev = 0,060, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.00966123711542956;  // std dev = 7,140, 405,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=61 */
%   | | | else return 0.0021977869816371;  // std dev = 5,587, 291,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=37 */


Results
   AUC ROC   = 0.605414
   AUC PR    = 0.172093
   CLL	      = -0.337816
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 191.692 seconds
Total inference time: 10.777 seconds
AUC ROC: 0.605414


Results scoring model
   AUC ROC   = 0.649167
   AUC PR    = 0.207457
   CLL	      = -0.320659
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.173458
   F1        = 0.295636


Total scoring time: 28.219 seconds
Refined model CLL: -0.320659


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.319503
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 243.806 seconds
Total inference time: 5.425 seconds
AUC ROC: 0.576975
Total revision time: 243.806
Best scored revision CLL: -0.320383


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:56:33
{'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'parameter_0.8': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Learning time': 13.89, 'F1': 0.266821, 'Inference time': 5.425, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'CLL': -0.319503}, 'Learning time': 243.806, 'F1': 0.266821, 'Inference time': 5.425, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'CLL': -0.319503}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8025933795439567;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.38314893509951164;  // std dev = 3,158, 40,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | | | else return 0.058148935099512376;  // std dev = 3,688, 85,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.6763307532813297;  // std dev = 2,216, 33,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return 0.010820690824703095;  // std dev = 4,117, 131,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=20 */
%   | | else return 0.22112698443193532;  // std dev = 0,481, 4.419,000 (wgt'ed) examples reached here.  /* #neg=2.815 #pos=1.604 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, A) )
%   | | then return 0.08772091953531053;  // std dev = 0,421, 257,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=59 */
%   | | else return -0.07366924671866946;  // std dev = 0,252, 176,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=12 */
%   | else return -0.024381185382415974;  // std dev = 0,322, 332,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=39 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19647960569284148;  // std dev = 0,481, 4.641,000 (wgt'ed) examples reached here.  /* #neg=2.935 #pos=1.706 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return -0.023003693614364322;  // std dev = 6,649, 438,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=50 */
%   | | | else return -0.151705063281656;  // std dev = 0,013, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordtitle(E, I), haswordvenue(B, I) )
%   | | | then return 0.11608315948912824;  // std dev = 3,627, 67,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | | else return -0.1369785738749234;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.05655574159504865;  // std dev = 5,623, 191,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=40 */
%   | | | else return -0.008117730705882847;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.13890899545944363;  // std dev = 1,29e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7131070952033611;  // std dev = 0,049, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.27152417373203425;  // std dev = 0,102, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.6187441722156661;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.011987608733532829;  // std dev = 4,108, 127,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
%   | else return 0.1566114171460217;  // std dev = 0,479, 4.600,000 (wgt'ed) examples reached here.  /* #neg=2.958 #pos=1.642 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.013054478300404817;  // std dev = 0,328, 545,000 (wgt'ed) examples reached here.  /* #neg=477 #pos=68 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.08356551552139815;  // std dev = 5,499, 164,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=40 */
%   | | | else return -0.03218375243569746;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.12311141543520757;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.35878745857158334;  // std dev = 0,336, 41,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return -0.001394664456485307;  // std dev = 4,078, 128,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=24 */
%   | | | else return 0.5603210849698903;  // std dev = 1,152, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.13452266895920068;  // std dev = 0,480, 4.546,000 (wgt'ed) examples reached here.  /* #neg=2.904 #pos=1.642 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, H) )
%   | | | then return -0.03606560040553855;  // std dev = 0,925, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.20154319501892395;  // std dev = 2,817, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else return -0.04236310717431448;  // std dev = 0,303, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.027613077787606778;  // std dev = 0,309, 505,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=55 */
%   | | else return 0.02807005622470713;  // std dev = 0,393, 212,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=41 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11426659067890839;  // std dev = 0,478, 4.660,000 (wgt'ed) examples reached here.  /* #neg=2.954 #pos=1.706 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return -0.024614100422903337;  // std dev = 6,641, 467,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=50 */
%   | | | else return -0.12618000162597384;  // std dev = 0,028, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordtitle(E, I), haswordvenue(B, I) )
%   | | | then return 0.08094091913839138;  // std dev = 3,688, 74,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | | else return -0.11814511552794942;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.13870410630210667;  // std dev = 2,602, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.17594181925808802;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.019175875270937354;  // std dev = 5,078, 169,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=32 */
%   | | | else return -0.11786787741273416;  // std dev = 0,023, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6460177995045673;  // std dev = 0,541, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.30683226481505516;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.38857625337509705;  // std dev = 1,073, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.03994477303793988;  // std dev = 3,682, 84,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | else return 0.08139792526097066;  // std dev = 0,476, 4.661,000 (wgt'ed) examples reached here.  /* #neg=3.010 #pos=1.651 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.002068903681699402;  // std dev = 0,335, 514,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=68 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.06956951040461339;  // std dev = 5,455, 161,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=40 */
%   | | | else return -0.07850498299666546;  // std dev = 1,400, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else return -0.11166509767724078;  // std dev = 0,049, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07929766110001263;  // std dev = 0,478, 4.613,000 (wgt'ed) examples reached here.  /* #neg=2.907 #pos=1.706 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(H, D) )
%   | | | then return 0.01314733314176308;  // std dev = 0,882, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.16853709229239286;  // std dev = 2,846, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( author(I, E), venue(I, A) )
%   | | | then return 0.1892574337311452;  // std dev = 0,838, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14094051384607;  // std dev = 0,119, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.039940588337898944;  // std dev = 5,808, 429,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=37 */
%   | | | else return 0.0920559030291609;  // std dev = 3,625, 69,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.036793780063593205;  // std dev = 5,617, 185,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=41 */
%   | | | else return -0.09579814560763125;  // std dev = 0,031, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05604267151340392;  // std dev = 0,476, 4.696,000 (wgt'ed) examples reached here.  /* #neg=2.990 #pos=1.706 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.04761868913691323;  // std dev = 1,253, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.026366329790255667;  // std dev = 6,504, 483,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=48 */
%   | | else return 0.08046547021011048;  // std dev = 0,439, 68,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.028985940146723333;  // std dev = 5,546, 178,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=40 */
%   | | | else return -0.07872450858459763;  // std dev = 1,396, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return -0.09433755565309972;  // std dev = 0,048, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.3451820621121388;  // std dev = 0,180, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.031523190526926925;  // std dev = 4,322, 110,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
%   | | else return 0.3527693016802559;  // std dev = 0,296, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.045793971453147106;  // std dev = 0,478, 4.540,000 (wgt'ed) examples reached here.  /* #neg=2.889 #pos=1.651 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(L, H) )
%   | | | then return -0.051209881313367456;  // std dev = 0,915, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.18016543561354942;  // std dev = 2,770, 34,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else return -0.03149192423332015;  // std dev = 0,282, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return -1.6618456595725566E-4;  // std dev = 0,363, 426,000 (wgt'ed) examples reached here.  /* #neg=356 #pos=70 */
%   | | else return -0.024431129406636557;  // std dev = 0,293, 273,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=26 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02360992275183563;  // std dev = 0,472, 4.379,000 (wgt'ed) examples reached here.  /* #neg=2.838 #pos=1.541 */
%   | | else return 0.012866635846253917;  // std dev = 0,334, 471,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=71 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.18910666157965336;  // std dev = 0,304, 239,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=25 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4187544389394343;  // std dev = 4,235, 95,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=71 */
%   | | | else return 0.030461066235197055;  // std dev = 3,873, 96,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=20 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return 0.06860949830018975;  // std dev = 0,434, 200,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=57 */
%   | | else return -0.015256898206848384;  // std dev = 0,351, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then return 0.5745404382763735;  // std dev = 0,231, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.08050265643529911;  // std dev = 0,037, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.548586
   AUC PR    = 0.041581
   CLL	      = -0.388028
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.021419
   F1        = 0.04194


Total learning time: 2117.47 seconds
Total inference time: 28.668 seconds
AUC ROC: 0.548586


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 03:32:19
{'AUC PR': 0.041581, 'AUC ROC': 0.548586, 'Learning time': 2117.47, 'F1': 0.04194, 'Inference time': 28.668, 'Precision': [1.0, 0.5], 'Recall': 0.021419, 'CLL': -0.388028}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22058785585582755;  // std dev = 0,481, 4.707,000 (wgt'ed) examples reached here.  /* #neg=3.001 #pos=1.706 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.809761838325319;  // std dev = 1,690, 62,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=59 */
%   | | | else return -0.14185106490048827;  // std dev = 0,000, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.12057446915580683;  // std dev = 1,399, 94,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=2 */
%   | | | else return -0.004864763530624657;  // std dev = 2,938, 73,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=10 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.2010060779566552;  // std dev = 2,808, 35,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return -0.050941973991396876;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.050301769125840064;  // std dev = 4,860, 284,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.549734
   AUC PR    = 0.016157
   CLL	      = -0.199998
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 64.171 seconds
Total inference time: 5.119 seconds
AUC ROC: 0.549734


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 03:33:29
{'AUC PR': 0.016157, 'AUC ROC': 0.549734, 'Learning time': 64.171, 'F1': nan, 'Inference time': 5.119, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.199998}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1,41e-06, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.15396987734398984;  // std dev = 36,481, 6.389,000 (wgt'ed) examples reached here.  /* #neg=4.499 #pos=1.890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13256300350119485;  // std dev = 36,523, 6.424,000 (wgt'ed) examples reached here.  /* #neg=4.534 #pos=1.890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11772874843758807;  // std dev = 36,421, 6.339,000 (wgt'ed) examples reached here.  /* #neg=4.449 #pos=1.890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09612874111099992;  // std dev = 36,513, 6.415,000 (wgt'ed) examples reached here.  /* #neg=4.525 #pos=1.890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.0826590036866974;  // std dev = 36,454, 6.366,000 (wgt'ed) examples reached here.  /* #neg=4.476 #pos=1.890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,34e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06739372216970758;  // std dev = 36,480, 6.388,000 (wgt'ed) examples reached here.  /* #neg=4.498 #pos=1.890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2,53e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.0506472316222178;  // std dev = 36,601, 6.490,000 (wgt'ed) examples reached here.  /* #neg=4.600 #pos=1.890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2,63e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04064616115708906;  // std dev = 36,617, 6.504,000 (wgt'ed) examples reached here.  /* #neg=4.614 #pos=1.890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.03679694620963882;  // std dev = 36,517, 6.419,000 (wgt'ed) examples reached here.  /* #neg=4.529 #pos=1.890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.03426149230313272;  // std dev = 36,399, 6.321,000 (wgt'ed) examples reached here.  /* #neg=4.431 #pos=1.890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.325502
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 21.302 seconds
Total inference time: 5.086 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.326445
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 11.981 seconds
Parameter learned model CLL: -0.326445


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.481, 4499, 1890], 'true': [1.41e-06, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.523, 4534, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.421, 4449, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.513, 4525, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.454, 4476, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.48, 4498, 1890], 'true': [4.34e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.601, 4600, 1890], 'true': [2.53e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.617, 4614, 1890], 'true': [2.63e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.517, 4529, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.399, 4431, 1890], 'true': [0.0, 0, 380]}]]
[{'': [5.235578052969159e-15, 0.20831091237400703]}, {'': [-5.310372025154433e-15, 0.20765015299099]}, {'': [-1.009718624501195e-15, 0.20925830653269237]}, {'': [-1.495879443705474e-15, 0.20781986879198314]}, {'': [-1.402386978473882e-15, 0.20874621686904532]}, {'': [4.9551006572743825e-16, 0.20832982082485096]}, {'': [1.6828643741686584e-16, 0.2064097663586597]}, {'': [1.8231030720160465e-16, 0.20614762190060248]}, {'': [-2.5710427938687837e-16, 0.20774442286681413]}, {'': [-2.945012654795152e-16, 0.20960033553705915]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1,41e-06, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4474346493852255;  // std dev = 3,682, 56,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   | | | else return 0.0970869881968566;  // std dev = 4,533, 113,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.17633075328133166;  // std dev = 6,179, 176,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   | | | else return 0.17708581217591912;  // std dev = 33,339, 5.117,000 (wgt'ed) examples reached here.  /* #neg=3.485 #pos=1.632 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.2629108398614171;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return -0.07288554765910848;  // std dev = 1,365, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.029351064900487354;  // std dev = 7,994, 640,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=72 */
%   | | | else return 0.05659251486604912;  // std dev = 6,394, 257,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15188341639185468;  // std dev = 0,465, 5.516,000 (wgt'ed) examples reached here.  /* #neg=3.768 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.022641234507649738;  // std dev = 1,303, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.10872203255996263;  // std dev = 3,545, 66,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.10399371727021223;  // std dev = 3,498, 63,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.012672327163276768;  // std dev = 9,604, 826,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1318985833111269;  // std dev = 0,466, 5.481,000 (wgt'ed) examples reached here.  /* #neg=3.733 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.025103757824307644;  // std dev = 7,863, 612,000 (wgt'ed) examples reached here.  /* #neg=541 #pos=71 */
%   | | | else return 0.0634543286359712;  // std dev = 3,800, 89,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.07975975814197771;  // std dev = 6,366, 229,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=53 */
%   | | | else return -0.15616529937883716;  // std dev = 0,067, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.059314845947629834;  // std dev = 6,236, 199,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=53 */
%   | | | else return 0.7874178025070602;  // std dev = 0,048, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.10698661316380693;  // std dev = 0,464, 5.361,000 (wgt'ed) examples reached here.  /* #neg=3.673 #pos=1.688 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.018225738246298598;  // std dev = 7,847, 592,000 (wgt'ed) examples reached here.  /* #neg=521 #pos=71 */
%   | | | else return 0.06947449450287053;  // std dev = 3,762, 84,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06766726077869882;  // std dev = 6,374, 230,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=53 */
%   | | | else return -0.13255461325465662;  // std dev = 0,027, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5842625772082728;  // std dev = 2,531, 41,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=33 */
%   | | | else return -0.03252723876964429;  // std dev = 4,526, 141,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=27 */
%   | | else return 0.0971082741386357;  // std dev = 0,467, 5.222,000 (wgt'ed) examples reached here.  /* #neg=3.534 #pos=1.688 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.01777022549081304;  // std dev = 7,855, 601,000 (wgt'ed) examples reached here.  /* #neg=530 #pos=71 */
%   | | | else return 0.10271418515339403;  // std dev = 3,663, 70,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0420152283705974;  // std dev = 6,443, 247,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=53 */
%   | | | else return -0.12179497321026321;  // std dev = 0,051, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,34e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07883840063340612;  // std dev = 0,466, 5.422,000 (wgt'ed) examples reached here.  /* #neg=3.674 #pos=1.748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.17866404774600161;  // std dev = 3,296, 46,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return -0.05789538632125839;  // std dev = 1,364, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.019773060171513077;  // std dev = 7,947, 629,000 (wgt'ed) examples reached here.  /* #neg=557 #pos=72 */
%   | | | else return 0.02863821083300252;  // std dev = 6,342, 254,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2,53e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06335176635627479;  // std dev = 0,466, 5.432,000 (wgt'ed) examples reached here.  /* #neg=3.684 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5065166218796398;  // std dev = 1,098, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.04368232081221668;  // std dev = 3,341, 66,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.12116931235839;  // std dev = 3,380, 53,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return -0.014084350206591418;  // std dev = 9,549, 826,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=106 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2,63e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04961430336049072;  // std dev = 0,465, 5.457,000 (wgt'ed) examples reached here.  /* #neg=3.709 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.014407141697955395;  // std dev = 7,786, 592,000 (wgt'ed) examples reached here.  /* #neg=521 #pos=71 */
%   | | | else return 0.0765867426643069;  // std dev = 3,704, 75,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.12975238741749565;  // std dev = 3,309, 51,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.004704001016797426;  // std dev = 5,435, 199,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24908319657099343;  // std dev = 3,669, 56,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   | | | else return -0.015668334265419845;  // std dev = 4,480, 107,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=27 */
%   | | else return 0.041625352412302113;  // std dev = 0,466, 5.244,000 (wgt'ed) examples reached here.  /* #neg=3.556 #pos=1.688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.2817182517077962;  // std dev = 1,433, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.004445386620139617;  // std dev = 3,361, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 9.11292201997265E-4;  // std dev = 8,444, 530,000 (wgt'ed) examples reached here.  /* #neg=443 #pos=87 */
%   | | | else return -0.020240350591613276;  // std dev = 5,670, 344,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03418473559451057;  // std dev = 0,466, 5.402,000 (wgt'ed) examples reached here.  /* #neg=3.654 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.0024671868938275256;  // std dev = 7,701, 526,000 (wgt'ed) examples reached here.  /* #neg=455 #pos=71 */
%   | | | else return -0.04038659676186537;  // std dev = 3,943, 164,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.024446232067451168;  // std dev = 6,407, 243,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=53 */
%   | | | else return -0.12451775953259792;  // std dev = 0,092, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.605435
   AUC PR    = 0.173095
   CLL	      = -0.341525
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 273.175 seconds
Total inference time: 11.782 seconds
AUC ROC: 0.605435


Results scoring model
   AUC ROC   = 0.64778
   AUC PR    = 0.200523
   CLL	      = -0.325078
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168282
   F1        = 0.288084


Total scoring time: 50.0 seconds
Refined model CLL: -0.325078


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.605435
   AUC PR    = 0.173095
   CLL	      = -0.341525
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 356.458 seconds
Total inference time: 11.782 seconds
AUC ROC: 0.605435
Total revision time: 356.458
Best scored revision CLL: -0.325078


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 03:39:44
{'AUC PR': 0.173095, 'AUC ROC': 0.605435, 'Learning time': 356.458, 'F1': 0.266821, 'Inference time': 11.782, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'parameter_1.0': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Learning time': 21.302, 'F1': 0.266821, 'Inference time': 5.086, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'CLL': -0.325502}, 'CLL': -0.341525}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21839948529419143;  // std dev = 0,480, 5.907,000 (wgt'ed) examples reached here.  /* #neg=3.779 #pos=2.128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.1123862232351056;  // std dev = 3,345, 59,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.04053774407497184;  // std dev = 6,966, 533,000 (wgt'ed) examples reached here.  /* #neg=479 #pos=54 */
%   | | | else return 0.06991364098186532;  // std dev = 3,767, 85,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06976719236092296;  // std dev = 6,341, 241,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=51 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19425191737648353;  // std dev = 0,481, 5.833,000 (wgt'ed) examples reached here.  /* #neg=3.705 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.032729928132270845;  // std dev = 1,325, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return -0.015661368705329415;  // std dev = 7,754, 559,000 (wgt'ed) examples reached here.  /* #neg=490 #pos=69 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.07720177788575476;  // std dev = 3,728, 79,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
%   | | | else return -0.15057653381419714;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05907805135347922;  // std dev = 6,344, 243,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=51 */
%   | | | else return -0.07055780351940885;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7731415974198662;  // std dev = 0,986, 37,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return -0.1998313755531074;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordauthor(E, C) )
%   | | | then return 0.8001686244468929;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.04016862444689252;  // std dev = 4,271, 100,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
%   | else return 0.159965329669533;  // std dev = 0,480, 5.706,000 (wgt'ed) examples reached here.  /* #neg=3.653 #pos=2.053 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then return 0.4922638581753857;  // std dev = 0,804, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return -0.16070003266749533;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12436154093387365;  // std dev = 3,495, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else return 0.002368731946010066;  // std dev = 0,351, 845,000 (wgt'ed) examples reached here.  /* #neg=722 #pos=123 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1269884815745569;  // std dev = 0,477, 6.011,000 (wgt'ed) examples reached here.  /* #neg=3.883 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return -0.02263441235276684;  // std dev = 7,879, 609,000 (wgt'ed) examples reached here.  /* #neg=538 #pos=71 */
%   | | | else return -0.14190499209703944;  // std dev = 0,096, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordtitle(E, I), haswordvenue(B, I) )
%   | | | then return 0.0929952786787546;  // std dev = 3,674, 70,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | | else return -0.13660149930078092;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.11573648635312969;  // std dev = 3,266, 55,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.10292223440468207;  // std dev = 1,207, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.019409054812189512;  // std dev = 5,424, 204,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=36 */
%   | | | else return -0.12340139347971274;  // std dev = 0,075, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.614405152864576;  // std dev = 0,011, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.05017888322579296;  // std dev = 5,391, 168,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=51 */
%   | | | else return 0.772097246584382;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10657213975729499;  // std dev = 0,479, 5.763,000 (wgt'ed) examples reached here.  /* #neg=3.710 #pos=2.053 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.02004554539827951;  // std dev = 0,355, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordauthor(I, K), haswordtitle(L, K) )
%   | | | then return 0.07828366876554496;  // std dev = 3,303, 61,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.08338773265457583;  // std dev = 1,215, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | then return 0.1519674429411707;  // std dev = 0,470, 52,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | else return -0.009421545625856502;  // std dev = 0,337, 798,000 (wgt'ed) examples reached here.  /* #neg=692 #pos=106 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09607424323134725;  // std dev = 0,480, 5.797,000 (wgt'ed) examples reached here.  /* #neg=3.669 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.0827986393729605;  // std dev = 0,434, 65,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.48161294992826814;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.16546751295408677;  // std dev = 0,072, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.12084584013739601;  // std dev = 3,187, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.09987558386043016;  // std dev = 1,328, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.005427444658524989;  // std dev = 7,693, 462,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=71 */
%   | | | else return -0.03329377230839443;  // std dev = 5,614, 362,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=35 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07436988523747856;  // std dev = 0,479, 5.836,000 (wgt'ed) examples reached here.  /* #neg=3.708 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.1319893680307344;  // std dev = 0,110, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | | else return 0.024619026600730235;  // std dev = 5,442, 206,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=36 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return 0.014452291584003777;  // std dev = 6,476, 330,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=51 */
%   | | | else return -0.09055706517018075;  // std dev = 1,392, 51,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.052091513237005116;  // std dev = 6,227, 227,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=51 */
%   | | | else return -0.07949276728416095;  // std dev = 1,384, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else return -0.10961016839445865;  // std dev = 0,108, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5506880108957766;  // std dev = 0,264, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.22451110703170263;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordauthor(E, C) )
%   | | | then return 0.25287436336476815;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.051781198492827175;  // std dev = 4,187, 106,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=24 */
%   | else return 0.06459653485719455;  // std dev = 0,483, 5.554,000 (wgt'ed) examples reached here.  /* #neg=3.501 #pos=2.053 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.42001408847133703;  // std dev = 1,104, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(I, K), haswordtitle(L, K) )
%   | | | then return 0.11865552926634704;  // std dev = 3,169, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.19228011642211898;  // std dev = 0,137, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.012097903028099426;  // std dev = 0,333, 936,000 (wgt'ed) examples reached here.  /* #neg=813 #pos=123 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.038151931809350365;  // std dev = 0,476, 5.380,000 (wgt'ed) examples reached here.  /* #neg=3.455 #pos=1.925 */
%   | | else return 0.020267255146067698;  // std dev = 0,354, 582,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=99 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.19632687909998275;  // std dev = 0,282, 331,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=29 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3953749450076732;  // std dev = 4,928, 119,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=85 */
%   | | | else return 0.007817027711957397;  // std dev = 3,990, 118,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=20 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.6266814421820825;  // std dev = 0,165, 60,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.05230739514930835;  // std dev = 6,186, 219,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=51 */
%   | | | else return -0.08718394317235993;  // std dev = 1,389, 36,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | else return -0.1081180851639936;  // std dev = 0,127, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.031713041610030586;  // std dev = 0,477, 5.349,000 (wgt'ed) examples reached here.  /* #neg=3.424 #pos=1.925 */
%   | | else return 0.028292452309675815;  // std dev = 0,365, 542,000 (wgt'ed) examples reached here.  /* #neg=443 #pos=99 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.1488743638273157;  // std dev = 0,285, 318,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=29 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2865862424374166;  // std dev = 5,077, 122,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=85 */
%   | | | else return 0.007415318178378013;  // std dev = 3,990, 117,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=20 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.43292913584830833;  // std dev = 0,263, 63,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=59 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.07565038757075074;  // std dev = 1,022, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.044408042825799805;  // std dev = 6,235, 229,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=51 */
%   | | else return -0.10256822793134016;  // std dev = 0,127, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.540162
   AUC PR    = 0.031009
   CLL	      = -0.389022
   Precision = 0.139175 at threshold = 0.5
   Recall    = 0.036145
   F1        = 0.057386


Total learning time: 3624.589 seconds
Total inference time: 30.551 seconds
AUC ROC: 0.540162


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 04:40:40
{'AUC PR': 0.031009, 'AUC ROC': 0.540162, 'Learning time': 3624.589, 'F1': 0.057386, 'Inference time': 30.551, 'Precision': [0.139175, 0.5], 'Recall': 0.036145, 'CLL': -0.389022}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2215989777980554;  // std dev = 0,481, 5.855,000 (wgt'ed) examples reached here.  /* #neg=3.727 #pos=2.128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.15226658215833588;  // std dev = 3,254, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.042949965999388925;  // std dev = 6,976, 546,000 (wgt'ed) examples reached here.  /* #neg=492 #pos=54 */
%   | | | else return 0.051697322196286574;  // std dev = 3,810, 93,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0680254783093887;  // std dev = 6,348, 243,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=51 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.532028
   AUC PR    = 0.011649
   CLL	      = -0.201523
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 29.426 seconds
Total inference time: 4.035 seconds
AUC ROC: 0.532028


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 04:41:14
{'AUC PR': 0.011649, 'AUC ROC': 0.532028, 'Learning time': 29.426, 'F1': nan, 'Inference time': 4.035, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.201523}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 214413

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 35540

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099512;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.1496062215316682;  // std dev = 16,961, 1.393,000 (wgt'ed) examples reached here.  /* #neg=987 #pos=406 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.124056623156712;  // std dev = 17,037, 1.424,000 (wgt'ed) examples reached here.  /* #neg=1.018 #pos=406 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,86e-07, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.10900517485071674;  // std dev = 17,008, 1.412,000 (wgt'ed) examples reached here.  /* #neg=1.006 #pos=406 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583102;  // std dev = 1,52e-07, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.09245522511629435;  // std dev = 17,008, 1.412,000 (wgt'ed) examples reached here.  /* #neg=1.006 #pos=406 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.08082287285053334;  // std dev = 16,968, 1.396,000 (wgt'ed) examples reached here.  /* #neg=990 #pos=406 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.06400805490105102;  // std dev = 17,005, 1.411,000 (wgt'ed) examples reached here.  /* #neg=1.005 #pos=406 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 9,42e-08, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.05516333450898286;  // std dev = 16,976, 1.399,000 (wgt'ed) examples reached here.  /* #neg=993 #pos=406 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9,42e-08, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.05189397680965037;  // std dev = 16,894, 1.367,000 (wgt'ed) examples reached here.  /* #neg=961 #pos=406 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.03578759649026944;  // std dev = 16,971, 1.397,000 (wgt'ed) examples reached here.  /* #neg=991 #pos=406 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,96e-08, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.013937530829866884;  // std dev = 17,149, 1.473,000 (wgt'ed) examples reached here.  /* #neg=1.067 #pos=406 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.319918
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 3.94 seconds
Total inference time: 3.961 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.588235
   AUC PR    = 0.194564
   CLL	      = -0.316275
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.176471
   F1        = 0.3


Total scoring time: 4.582 seconds
Parameter learned model CLL: -0.316275


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.961, 987, 406], 'true': [0.0, 0, 87]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.037, 1018, 406], 'true': [2.8e-07, 0, 87]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.008, 1006, 406], 'true': [3.86e-07, 0, 87]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.008, 1006, 406], 'true': [1.52e-07, 0, 87]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.968, 990, 406], 'true': [0.0, 0, 87]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.005, 1005, 406], 'true': [0.0, 0, 87]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.976, 993, 406], 'true': [9.42e-08, 0, 87]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.894, 961, 406], 'true': [9.42e-08, 0, 87]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.971, 991, 406], 'true': [0.0, 0, 87]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.149, 1067, 406], 'true': [5.96e-08, 0, 87]}]]
[{'': [-1.6334315764600004e-16, 0.20650993661774425]}, {'': [8.983873670530003e-16, 0.20382330198208803]}, {'': [1.7151031552830005e-15, 0.20485879832114773]}, {'': [2.654326311747501e-16, 0.20485879832116122]}, {'': [-3.471042099977501e-16, 0.20624830666415678]}, {'': [-4.083578941150001e-17, 0.20494534941366896]}, {'': [1.0208947352875003e-16, 0.20598701921776388]}, {'': [1.0208947352875003e-16, 0.20879129700020357]}, {'': [-6.635815779368752e-17, 0.20616117265292797]}, {'': [4.083578941150001e-17, 0.19965719221155667]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099512;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16813283203992613;  // std dev = 0,462, 1.242,000 (wgt'ed) examples reached here.  /* #neg=857 #pos=385 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0018510649004876505;  // std dev = 3,470, 100,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=14 */
%   | | | else return 0.07243464938522651;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.030739953789376637;  // std dev = 1,886, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.009728584611852989;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.16975859487532668;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.14722493178106685;  // std dev = 0,463, 1.213,000 (wgt'ed) examples reached here.  /* #neg=836 #pos=377 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0012312575171744668;  // std dev = 3,338, 91,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=13 */
%   | | | else return -0.03721221370878103;  // std dev = 1,885, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | else return -0.04453593751004049;  // std dev = 0,290, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,86e-07, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13302016921745313;  // std dev = 0,465, 1.213,000 (wgt'ed) examples reached here.  /* #neg=828 #pos=385 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.007939773747233005;  // std dev = 2,607, 53,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
%   | | | else return -0.03293243735868554;  // std dev = 1,897, 40,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.1402377934794958;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.03286490903417865;  // std dev = 2,831, 83,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583102;  // std dev = 1,52e-07, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11488285613870704;  // std dev = 0,467, 1.202,000 (wgt'ed) examples reached here.  /* #neg=817 #pos=385 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.006705122806592185;  // std dev = 2,608, 53,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
%   | | | else return -0.017376336938711077;  // std dev = 2,813, 75,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */
%   | | else return -0.04382086871694385;  // std dev = 0,279, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0799508522886115;  // std dev = 0,460, 1.263,000 (wgt'ed) examples reached here.  /* #neg=878 #pos=385 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.10563344527981035;  // std dev = 2,449, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.003084243957625107;  // std dev = 2,783, 65,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | | else return -0.018458886338205537;  // std dev = 0,307, 38,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5107486531439843;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.021860042508189605;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else return 0.08564423252496492;  // std dev = 0,468, 1.161,000 (wgt'ed) examples reached here.  /* #neg=784 #pos=377 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.009008430686682714;  // std dev = 3,321, 86,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=13 */
%   | | | else return -0.02507764818340737;  // std dev = 1,856, 31,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | else return -0.03698686245077193;  // std dev = 0,279, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 9,42e-08, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06949812005003306;  // std dev = 0,468, 1.187,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=385 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.004919655082541818;  // std dev = 2,792, 68,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
%   | | | else return 0.009698171888151218;  // std dev = 1,579, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else return -0.03067759098232127;  // std dev = 0,307, 85,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9,42e-08, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.05729089318236587;  // std dev = 2,137, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.19539775743803767;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.08811965357794263;  // std dev = 2,269, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.046766695320105856;  // std dev = 15,894, 1.170,000 (wgt'ed) examples reached here.  /* #neg=801 #pos=369 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.018279971589021116;  // std dev = 3,305, 82,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=13 */
%   | | | else return 0.04448295427925285;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.020346722603002045;  // std dev = 1,900, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return -0.10440636656864645;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.043569768672527515;  // std dev = 0,467, 1.198,000 (wgt'ed) examples reached here.  /* #neg=813 #pos=385 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.04386440629911096;  // std dev = 2,521, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return -0.018246948861941538;  // std dev = 1,900, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.024286123457244353;  // std dev = 2,827, 81,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=9 */
%   | | | else return -0.09503917447944321;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,96e-08, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.042463139351567106;  // std dev = 0,469, 1.173,000 (wgt'ed) examples reached here.  /* #neg=788 #pos=385 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.03225750228461983;  // std dev = 2,531, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return -0.03061922657024348;  // std dev = 1,915, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | else return -0.027759724332004326;  // std dev = 0,304, 87,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=9 */


Results
   AUC ROC   = 0.635959
   AUC PR    = 0.183279
   CLL	      = -0.312594
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 71.872 seconds
Total inference time: 11.587 seconds
AUC ROC: 0.635959


Results scoring model
   AUC ROC   = 0.634208
   AUC PR    = 0.198059
   CLL	      = -0.32821
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.176471
   F1        = 0.3


Total scoring time: 25.761 seconds
Refined model CLL: -0.32821


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.319918
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 106.155 seconds
Total inference time: 3.961 seconds
AUC ROC: 0.574545
Total revision time: 106.155
Best scored revision CLL: -0.316275


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 04:43:17
{'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Learning time': 106.155, 'F1': 0.259494, 'Inference time': 3.961, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'parameter_0.2': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Learning time': 3.94, 'F1': 0.259494, 'Inference time': 3.961, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.319918}, 'CLL': -0.319918}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.274815601766179;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.024815601766178853;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return 0.22834124279181514;  // std dev = 0,483, 1.248,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=462 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | then if ( haswordauthor(K, J) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.013704490655067887;  // std dev = 2,431, 45,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( title(L, I), venue(L, B) )
%   | | | then return -0.015090501520205985;  // std dev = 2,803, 71,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.03928696233638519;  // std dev = 0,303, 39,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.1963006413169547;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3284435512657109;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return -0.027251723650731505;  // std dev = 0,322, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return 0.19266083264281011;  // std dev = 0,481, 1.267,000 (wgt'ed) examples reached here.  /* #neg=805 #pos=462 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | then return 0.009891689586814582;  // std dev = 0,361, 52,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   | | else return -0.022849929822538615;  // std dev = 0,318, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | else return -0.04089876293793564;  // std dev = 0,297, 92,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1558228462191322;  // std dev = 0,479, 1.324,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=472 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.18858557558185715;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordtitle(E, G), haswordvenue(B, G) )
%   | | | then return 0.013962058069135334;  // std dev = 2,425, 44,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | | else return -0.01441680984517153;  // std dev = 2,812, 75,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */
%   | else return -0.03434984254916293;  // std dev = 0,300, 40,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.3636978440093149;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1035569164545649;  // std dev = 1,799, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return -0.028233867220007484;  // std dev = 0,340, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return 0.12882845220775288;  // std dev = 0,479, 1.297,000 (wgt'ed) examples reached here.  /* #neg=835 #pos=462 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, H) )
%   | | | then return 0.16728240204606096;  // std dev = 0,812, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.00799417078193389;  // std dev = 3,330, 90,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | else return 0.05531414739828007;  // std dev = 0,399, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return -0.03743605475150366;  // std dev = 0,290, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return -0.08413399768455206;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.07756327686025401;  // std dev = 1,403, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.3150906318720957;  // std dev = 0,507, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.12469466749219596;  // std dev = 0,483, 1.233,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=462 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( title(L, I), venue(L, A) )
%   | | | then return 0.4451115493874371;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.03763680976820139;  // std dev = 2,071, 49,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=5 */
%   | | else return -0.04034424735502753;  // std dev = 0,309, 28,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | else return -0.015346635461827638;  // std dev = 0,321, 77,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.050388791633004346;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.21647208712253282;  // std dev = 1,758, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.028765972764859704;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1285928270272396;  // std dev = 1,976, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.09814117014824511;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return 0.08365991495913742;  // std dev = 0,480, 1.266,000 (wgt'ed) examples reached here.  /* #neg=812 #pos=454 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then if ( title(N, M), venue(N, B) )
%   | | then return 0.036369191139265164;  // std dev = 0,379, 75,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | | else return -0.014027383530417874;  // std dev = 0,343, 29,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | else return -0.04029530316122405;  // std dev = 0,291, 39,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0712391412752658;  // std dev = 0,480, 1.302,000 (wgt'ed) examples reached here.  /* #neg=830 #pos=472 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.0030469378560757186;  // std dev = 1,283, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.05303359525532922;  // std dev = 2,191, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return -0.022863431772098076;  // std dev = 1,792, 37,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return -0.1338933784536161;  // std dev = 0,051, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.16090529712371568;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.022795207879808467;  // std dev = 0,315, 80,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04575363562800379;  // std dev = 0,477, 1.342,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=472 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then return 0.012986584396287677;  // std dev = 0,376, 47,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.02307705027317514;  // std dev = 2,829, 81,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=9 */
%   | | | else return -0.11591055295155006;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.036814217619002554;  // std dev = 1,821, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return -0.14106500891067333;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11604698392216778;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.048314247884317534;  // std dev = 0,481, 1.295,000 (wgt'ed) examples reached here.  /* #neg=823 #pos=472 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.7283920377591985;  // std dev = 0,892, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1376860071087241;  // std dev = 0,166, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return -0.011434350445283884;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.06267980783850532;  // std dev = 1,646, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | else return -0.003870824343081015;  // std dev = 0,330, 72,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03727427439314951;  // std dev = 0,480, 1.300,000 (wgt'ed) examples reached here.  /* #neg=828 #pos=472 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return 0.006840516818704445;  // std dev = 0,350, 91,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=13 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11845200191249834;  // std dev = 0,042, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0022957780770051285;  // std dev = 1,561, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.0429522196352081;  // std dev = 1,595, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | | | else return -0.0928240250209255;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10430070964419172;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.576711
   AUC PR    = 0.018799
   CLL	      = -0.352583
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 266.181 seconds
Total inference time: 19.895 seconds
AUC ROC: 0.576711


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 04:48:04
{'AUC PR': 0.018799, 'AUC ROC': 0.576711, 'Learning time': 266.181, 'F1': nan, 'Inference time': 19.895, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.352583}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2176310371558669;  // std dev = 0,480, 1.313,000 (wgt'ed) examples reached here.  /* #neg=841 #pos=472 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.013704490655067887;  // std dev = 2,431, 45,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.02022944327886606;  // std dev = 2,812, 74,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07042249347191629;  // std dev = 0,258, 56,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=4 */


Results
   AUC ROC   = 0.571435
   AUC PR    = 0.017921
   CLL	      = -0.201854
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 14.849 seconds
Total inference time: 5.771 seconds
AUC ROC: 0.571435


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 04:48:25
{'AUC PR': 0.017921, 'AUC ROC': 0.571435, 'Learning time': 14.849, 'F1': nan, 'Inference time': 5.771, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.201854}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9,97e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.16415783717665858;  // std dev = 23,928, 2.696,000 (wgt'ed) examples reached here.  /* #neg=1.871 #pos=825 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.1325613629604162;  // std dev = 24,107, 2.791,000 (wgt'ed) examples reached here.  /* #neg=1.966 #pos=825 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.10958272075344555;  // std dev = 24,176, 2.830,000 (wgt'ed) examples reached here.  /* #neg=2.005 #pos=825 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4,42e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.09741176671378471;  // std dev = 24,096, 2.785,000 (wgt'ed) examples reached here.  /* #neg=1.960 #pos=825 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3,15e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.07776250355758033;  // std dev = 24,159, 2.820,000 (wgt'ed) examples reached here.  /* #neg=1.995 #pos=825 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.06634132799417534;  // std dev = 24,125, 2.801,000 (wgt'ed) examples reached here.  /* #neg=1.976 #pos=825 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,63e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.05019785938277702;  // std dev = 24,197, 2.842,000 (wgt'ed) examples reached here.  /* #neg=2.017 #pos=825 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.04256383860553606;  // std dev = 24,169, 2.826,000 (wgt'ed) examples reached here.  /* #neg=2.001 #pos=825 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.03912908574252547;  // std dev = 24,090, 2.782,000 (wgt'ed) examples reached here.  /* #neg=1.957 #pos=825 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.031898792107407516;  // std dev = 24,085, 2.779,000 (wgt'ed) examples reached here.  /* #neg=1.954 #pos=825 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.328783
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 7.27 seconds
Total inference time: 3.397 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.581643
   AUC PR    = 0.181002
   CLL	      = -0.325445
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.163286
   F1        = 0.280732


Total scoring time: 6.674 seconds
Parameter learned model CLL: -0.325445


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.928, 1871, 825], 'true': [9.97e-07, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.107, 1966, 825], 'true': [0.0, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.176, 2005, 825], 'true': [5.53e-07, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.096, 1960, 825], 'true': [4.42e-07, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.159, 1995, 825], 'true': [3.15e-07, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.125, 1976, 825], 'true': [0.0, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.197, 2017, 825], 'true': [2.63e-07, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.169, 2001, 825], 'true': [0.0, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.09, 1957, 825], 'true': [0.0, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.085, 1954, 825], 'true': [9.42e-08, 0, 161]}]]
[{'': [6.178632484870436e-15, 0.21236745392671286]}, {'': [-2.7362515290140504e-15, 0.20821776912303785]}, {'': [1.897722834638777e-15, 0.20653585386258158]}, {'': [1.2136599523852642e-15, 0.20847770661633813]}, {'': [6.178632484870436e-16, 0.20696582163874103]}, {'': [-2.3169871818264136e-16, 0.207785228945503]}, {'': [4.3029761948204827e-16, 0.2060210990169339]}, {'': [-3.1444826039072757e-16, 0.2067077321144371]}, {'': [-2.372153543298471e-16, 0.20860779034987612]}, {'': [5.516636147205747e-17, 0.20873795019215724]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9,97e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1753010386593778;  // std dev = 0,465, 2.472,000 (wgt'ed) examples reached here.  /* #neg=1.688 #pos=784 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.06991364098186532;  // std dev = 3,767, 85,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | | else return -0.05267909037819466;  // std dev = 3,571, 157,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=14 */
%   | | else return -0.03840278903841871;  // std dev = 0,305, 87,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.16877548825429178;  // std dev = 3,266, 48,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.8354421549209589;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14743236699274295;  // std dev = 0,463, 2.452,000 (wgt'ed) examples reached here.  /* #neg=1.687 #pos=765 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.019234786940519666;  // std dev = 3,866, 106,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return -0.044456796272732114;  // std dev = 2,857, 97,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.13555864786267507;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.04163277511565558;  // std dev = 3,562, 149,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13214891192064981;  // std dev = 0,466, 2.463,000 (wgt'ed) examples reached here.  /* #neg=1.679 #pos=784 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.015847133611292277;  // std dev = 3,854, 136,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=17 */
%   | | | else return 0.07056842896283066;  // std dev = 2,784, 45,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.027660817641957998;  // std dev = 3,543, 136,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=14 */
%   | | | else return -0.13238478862348255;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4,42e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11338400755843159;  // std dev = 0,466, 2.447,000 (wgt'ed) examples reached here.  /* #neg=1.663 #pos=784 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.00903959542188016;  // std dev = 3,843, 131,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=17 */
%   | | | else return 0.07119773866186412;  // std dev = 2,767, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.03540361649278692;  // std dev = 3,565, 152,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=14 */
%   | | | else return -0.11790501993895207;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3,15e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0901358138993859;  // std dev = 0,465, 2.478,000 (wgt'ed) examples reached here.  /* #neg=1.694 #pos=784 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.058959838242726666;  // std dev = 3,741, 82,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   | | | else return -0.027169955860353253;  // std dev = 2,843, 88,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02706395684932597;  // std dev = 3,556, 145,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=14 */
%   | | | else return -0.10618410690503857;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08297094948932227;  // std dev = 0,468, 2.409,000 (wgt'ed) examples reached here.  /* #neg=1.625 #pos=784 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.01453253770980039;  // std dev = 3,787, 111,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=17 */
%   | | | else return 0.0638398578527937;  // std dev = 2,747, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.02848764325171425;  // std dev = 3,564, 152,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=14 */
%   | | | else return -0.09651949886409761;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,63e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.053659605921079635;  // std dev = 0,463, 2.515,000 (wgt'ed) examples reached here.  /* #neg=1.731 #pos=784 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0011826137983066787;  // std dev = 3,822, 121,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=17 */
%   | | | else return 0.07258403733899724;  // std dev = 2,714, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.003801354361202268;  // std dev = 3,521, 123,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=14 */
%   | | | else return -0.08842420676819275;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.056695036565180816;  // std dev = 0,468, 2.411,000 (wgt'ed) examples reached here.  /* #neg=1.627 #pos=784 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.009439472647927999;  // std dev = 4,641, 178,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=26 */
%   | | | else return -0.04714861085226874;  // std dev = 2,305, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.030641163781969648;  // std dev = 2,852, 92,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=9 */
%   | | | else return -0.08155134462798902;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.049234153490454735;  // std dev = 0,470, 2.384,000 (wgt'ed) examples reached here.  /* #neg=1.600 #pos=784 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.14848464666227057;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09129987373220533;  // std dev = 1,222, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.01698841290658959;  // std dev = 4,618, 182,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=25 */
%   | | | else return -0.0065044171082919286;  // std dev = 3,522, 128,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.669012282731947;  // std dev = 5,748, 751,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=716 */
%   | | | else return -0.24867731570448445;  // std dev = 6,870, 1.743,000 (wgt'ed) examples reached here.  /* #neg=1.697 #pos=46 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.15079698580778933;  // std dev = 3,352, 105,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=13 */
%   | | | else return 0.1643857626640194;  // std dev = 3,712, 66,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5996406838527775;  // std dev = 0,314, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else return -0.004801469595922136;  // std dev = 0,323, 76,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=9 */


Results
   AUC ROC   = 0.916275
   AUC PR    = 0.694671
   CLL	      = -0.250729
   Precision = 0.810811 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.272315


Total learning time: 433.56 seconds
Total inference time: 24.358 seconds
AUC ROC: 0.916275


Results scoring model
   AUC ROC   = 0.945644
   AUC PR    = 0.532511
   CLL	      = -0.267586
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.166329
   F1        = 0.285217


Total scoring time: 220.108 seconds
Refined model CLL: -0.267586


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.916275
   AUC PR    = 0.694671
   CLL	      = -0.250729
   Precision = 0.810811 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.272315


Total learning time: 667.6120000000001 seconds
Total inference time: 24.358 seconds
AUC ROC: 0.916275
Total revision time: 667.6120000000001
Best scored revision CLL: -0.267586


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:00:02
{'AUC PR': 0.694671, 'AUC ROC': 0.916275, 'parameter_0.4': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Learning time': 7.27, 'F1': 0.259494, 'Inference time': 3.397, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.328783}, 'Learning time': 667.6120000000001, 'F1': 0.272315, 'Inference time': 24.358, 'Precision': [0.810811, 0.5], 'Recall': 0.163636, 'CLL': -0.250729}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21994066557423925;  // std dev = 0,481, 2.612,000 (wgt'ed) examples reached here.  /* #neg=1.667 #pos=945 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.00851773156715447;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.025571995133045797;  // std dev = 3,641, 129,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=15 */
%   | | else return 0.11455919150976876;  // std dev = 0,437, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.04325951560471301;  // std dev = 3,552, 142,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=14 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6292129210150632;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25026555259401073;  // std dev = 3,044, 38,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return -0.0740128854365497;  // std dev = 1,646, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else return 0.2006875382591985;  // std dev = 0,483, 2.482,000 (wgt'ed) examples reached here.  /* #neg=1.560 #pos=922 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, H) )
%   | | | then return 0.013028787123660391;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.016815400516384922;  // std dev = 3,629, 123,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=15 */
%   | | else return 0.12933792615098486;  // std dev = 0,452, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else return -0.03835303892409073;  // std dev = 0,296, 144,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7212853667353187;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.20106293209451914;  // std dev = 3,072, 39,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return -0.07947825559776382;  // std dev = 1,660, 37,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.3613900890106097;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.0930077360694332;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else return 0.1628562316949953;  // std dev = 0,481, 2.481,000 (wgt'ed) examples reached here.  /* #neg=1.578 #pos=903 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordauthor(N, M) )
%   | | then return -0.017645792851763487;  // std dev = 0,325, 142,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=17 */
%   | | else return 0.11150771626345723;  // std dev = 0,452, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else return -0.042644347138695075;  // std dev = 0,283, 159,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1342672559535528;  // std dev = 0,480, 2.608,000 (wgt'ed) examples reached here.  /* #neg=1.663 #pos=945 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.08196253122012792;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.020195366815073803;  // std dev = 3,645, 131,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=15 */
%   | | else return 0.11219553383101763;  // std dev = 0,460, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.01448439221990457;  // std dev = 3,524, 124,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=14 */
%   | | | else return -0.11682477604570841;  // std dev = 1,29e-08, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.11682477604570843;  // std dev = 9,13e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0935993097312095;  // std dev = 0,475, 2.726,000 (wgt'ed) examples reached here.  /* #neg=1.781 #pos=945 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.031380478673272476;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.023666971239405536;  // std dev = 3,656, 138,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=15 */
%   | | else return 0.023795424614406122;  // std dev = 0,422, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.1223718650295516;  // std dev = 0,019, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.023591271709953607;  // std dev = 0,299, 140,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.18731755706672087;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.0026114300508638475;  // std dev = 2,244, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return -0.031096357272565902;  // std dev = 0,336, 29,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | else return 0.07703557200155448;  // std dev = 0,476, 2.647,000 (wgt'ed) examples reached here.  /* #neg=1.725 #pos=922 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.7036651207361374;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.12966821259719613;  // std dev = 3,33e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( haswordtitle(I, L), haswordvenue(A, L) )
%   | | | then return 0.009943108077904233;  // std dev = 3,069, 58,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | | else return -0.14315278108094406;  // std dev = 0,078, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.02403065218770441;  // std dev = 0,296, 144,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06232340586315992;  // std dev = 0,476, 2.711,000 (wgt'ed) examples reached here.  /* #neg=1.766 #pos=945 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.06854784263168476;  // std dev = 0,415, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.004905913814457429;  // std dev = 3,187, 109,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=15 */
%   | | | else return -0.032855186933414784;  // std dev = 2,846, 60,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.02163235394731867;  // std dev = 3,550, 143,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=14 */
%   | | | else return -0.11406050020399297;  // std dev = 0,028, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10089720449754952;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07297418981190883;  // std dev = 0,482, 2.541,000 (wgt'ed) examples reached here.  /* #neg=1.596 #pos=945 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.029482755801110268;  // std dev = 1,498, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.009360418347849758;  // std dev = 3,342, 81,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=15 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return -0.01665683131130146;  // std dev = 2,498, 80,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=9 */
%   | | | else return -0.12033667317616666;  // std dev = 0,027, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.02354736278253874;  // std dev = 0,289, 151,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.6413465277056143;  // std dev = 0,213, 900,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=857 */
%   | | else return -0.27488615638697333;  // std dev = 0,156, 1.845,000 (wgt'ed) examples reached here.  /* #neg=1.803 #pos=42 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.05195655671587009;  // std dev = 3,325, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.1327064823844742;  // std dev = 0,090, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.38686392346179066;  // std dev = 2,899, 41,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   | | | else return 0.04336088795700931;  // std dev = 2,356, 45,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6464240100857492;  // std dev = 0,192, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return -0.004324098947721543;  // std dev = 0,296, 71,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=9 */
%   | | else return -0.09015533843754188;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.5092055439551113;  // std dev = 0,175, 881,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=855 */
%   | | else return -0.22069168519865384;  // std dev = 0,164, 1.704,000 (wgt'ed) examples reached here.  /* #neg=1.658 #pos=46 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.14943676819058183;  // std dev = 3,214, 108,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=12 */
%   | | | else return -0.057126198899575334;  // std dev = 0,633, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2501503392800809;  // std dev = 3,128, 44,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=29 */
%   | | | else return 0.0454567827032364;  // std dev = 2,312, 45,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.37453263864976477;  // std dev = 0,365, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | else return 0.5324273754918701;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.0216619128986492;  // std dev = 0,273, 85,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=9 */


Results
   AUC ROC   = 0.990605
   AUC PR    = 0.709373
   CLL	      = -0.219766
   Precision = 0.668056 at threshold = 0.5
   Recall    = 0.874545
   F1        = 0.75748


Total learning time: 1480.204 seconds
Total inference time: 55.176 seconds
AUC ROC: 0.990605


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 05:25:38
{'AUC PR': 0.709373, 'AUC ROC': 0.990605, 'Learning time': 1480.204, 'F1': 0.75748, 'Inference time': 55.176, 'Precision': [0.668056, 0.5], 'Recall': 0.874545, 'CLL': -0.219766}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2287371703936249;  // std dev = 0,483, 2.550,000 (wgt'ed) examples reached here.  /* #neg=1.605 #pos=945 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.015800644732420436;  // std dev = 3,621, 119,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=15 */
%   | | else return 0.12130682983635446;  // std dev = 0,440, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.024204006076958252;  // std dev = 3,515, 119,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=14 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.573539
   AUC PR    = 0.017962
   CLL	      = -0.203395
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 99.852 seconds
Total inference time: 5.515 seconds
AUC ROC: 0.573539


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 05:27:24
{'AUC PR': 0.017962, 'AUC ROC': 0.573539, 'Learning time': 99.852, 'F1': nan, 'Inference time': 5.515, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.203395}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.14721510121870005;  // std dev = 29,595, 4.262,000 (wgt'ed) examples reached here.  /* #neg=3.030 #pos=1.232 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.12901308419534133;  // std dev = 29,581, 4.252,000 (wgt'ed) examples reached here.  /* #neg=3.020 #pos=1.232 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,77e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.1122085400158958;  // std dev = 29,552, 4.232,000 (wgt'ed) examples reached here.  /* #neg=3.000 #pos=1.232 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.09581722782253024;  // std dev = 29,538, 4.222,000 (wgt'ed) examples reached here.  /* #neg=2.990 #pos=1.232 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2,38e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.08584214514759972;  // std dev = 29,422, 4.143,000 (wgt'ed) examples reached here.  /* #neg=2.911 #pos=1.232 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,10e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.07160209276875855;  // std dev = 29,413, 4.137,000 (wgt'ed) examples reached here.  /* #neg=2.905 #pos=1.232 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,89e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.0578914776079702;  // std dev = 29,432, 4.150,000 (wgt'ed) examples reached here.  /* #neg=2.918 #pos=1.232 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.04444058609049591;  // std dev = 29,490, 4.189,000 (wgt'ed) examples reached here.  /* #neg=2.957 #pos=1.232 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.032006725665064045;  // std dev = 29,574, 4.247,000 (wgt'ed) examples reached here.  /* #neg=3.015 #pos=1.232 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 4,21e-08, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.02977724132638604;  // std dev = 29,492, 4.190,000 (wgt'ed) examples reached here.  /* #neg=2.958 #pos=1.232 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.327294
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 16.054 seconds
Total inference time: 4.457 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583784
   AUC PR    = 0.185348
   CLL	      = -0.323883
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167568
   F1        = 0.287037


Total scoring time: 10.252 seconds
Parameter learned model CLL: -0.323883


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.595, 3030, 1232], 'true': [1.08e-06, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.581, 3020, 1232], 'true': [0.0, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.552, 3000, 1232], 'true': [4.77e-07, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.538, 2990, 1232], 'true': [0.0, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.422, 2911, 1232], 'true': [2.38e-07, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.413, 2905, 1232], 'true': [3.1e-07, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.432, 2918, 1232], 'true': [2.89e-07, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.49, 2957, 1232], 'true': [0.0, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.574, 3015, 1232], 'true': [0.0, 0, 248]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.492, 2958, 1232], 'true': [4.21e-08, 0, 248]}]]
[{'': [4.6987503493813075e-15, 0.2055069177243703]}, {'': [-4.354939348207066e-15, 0.20579325627519857]}, {'': [9.168293364646454e-16, 0.2063671870811909]}, {'': [-3.1516008440972187e-16, 0.20665477195201784]}, {'': [2.2920733411616134e-16, 0.20894070063074205]}, {'': [3.867873763210223e-16, 0.2091152968526432]}, {'': [3.36648271983112e-16, 0.20873717520688542]}, {'': [-3.223228136008519e-17, 0.20760667439379857]}, {'': [-1.7906822977825104e-16, 0.20593658294451067]}, {'': [7.162729191130042e-18, 0.20757776499333733]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1794495688829186;  // std dev = 0,467, 3.629,000 (wgt'ed) examples reached here.  /* #neg=2.463 #pos=1.166 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.010529887480463986;  // std dev = 5,208, 210,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=32 */
%   | | | else return 0.05814893509951237;  // std dev = 3,098, 60,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
%   | | else return -0.03758566205688594;  // std dev = 0,306, 211,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15301563818583552;  // std dev = 0,466, 3.665,000 (wgt'ed) examples reached here.  /* #neg=2.499 #pos=1.166 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.12958957120733874;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.008773985066126843;  // std dev = 5,891, 267,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=41 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.033563497452191816;  // std dev = 4,440, 212,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=22 */
%   | | | else return -0.13733708235785203;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,77e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.14601573082881092;  // std dev = 2,944, 39,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.07584029223231964;  // std dev = 3,325, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | else return 0.12480527187833827;  // std dev = 0,463, 3.646,000 (wgt'ed) examples reached here.  /* #neg=2.508 #pos=1.138 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.027434482651205398;  // std dev = 4,627, 148,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=26 */
%   | | | else return -0.001920303756103721;  // std dev = 3,931, 126,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.13340881119062684;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.02747302715024915;  // std dev = 4,435, 208,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20673155527714024;  // std dev = 3,751, 58,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
%   | | | else return -0.14690306475268508;  // std dev = 1,679, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | else return 0.10655006043609656;  // std dev = 0,464, 3.633,000 (wgt'ed) examples reached here.  /* #neg=2.494 #pos=1.139 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.004802736702997052;  // std dev = 4,879, 186,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=28 */
%   | | | else return 0.01635825128073818;  // std dev = 3,639, 94,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02522784510533958;  // std dev = 4,437, 210,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=22 */
%   | | | else return -0.11895161076787031;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2,38e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16372376418579065;  // std dev = 3,773, 59,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | | else return -0.09022688068313213;  // std dev = 1,649, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else return 0.09737933687036707;  // std dev = 0,467, 3.533,000 (wgt'ed) examples reached here.  /* #neg=2.394 #pos=1.139 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.005585743435454876;  // std dev = 5,204, 209,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=32 */
%   | | | else return 0.05848401128057691;  // std dev = 3,070, 56,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.023178618789219972;  // std dev = 4,438, 212,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=22 */
%   | | | else return -0.10703921702247368;  // std dev = 6,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,10e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07656685097281483;  // std dev = 0,465, 3.659,000 (wgt'ed) examples reached here.  /* #neg=2.493 #pos=1.166 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03162408443187962;  // std dev = 4,797, 157,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=28 */
%   | | | else return -0.013228929965703008;  // std dev = 3,685, 108,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=16 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01676191787362587;  // std dev = 4,429, 204,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=22 */
%   | | | else return -0.09723016758823075;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,89e-07, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06275458730116147;  // std dev = 0,466, 3.652,000 (wgt'ed) examples reached here.  /* #neg=2.486 #pos=1.166 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.012972717406849889;  // std dev = 5,171, 194,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=32 */
%   | | | else return 0.09348551914881821;  // std dev = 2,989, 47,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.016458861192144483;  // std dev = 4,433, 207,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=22 */
%   | | | else return -0.08902349629645809;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.045853771613167275;  // std dev = 0,464, 3.707,000 (wgt'ed) examples reached here.  /* #neg=2.541 #pos=1.166 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.02149865036390732;  // std dev = 4,600, 139,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=26 */
%   | | | else return -0.010469710073021658;  // std dev = 3,935, 128,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=18 */
%   | | else return -0.019494284320956973;  // std dev = 0,300, 219,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.13691970792158412;  // std dev = 2,747, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.009345255558337717;  // std dev = 3,291, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return 0.03804174556081539;  // std dev = 0,464, 3.605,000 (wgt'ed) examples reached here.  /* #neg=2.467 #pos=1.138 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0237424370596834;  // std dev = 4,801, 159,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=28 */
%   | | | else return -0.005820002383832148;  // std dev = 3,644, 96,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.10854602838025136;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0229885350678145;  // std dev = 4,458, 231,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 4,21e-08, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.15930699173286855;  // std dev = 3,530, 50,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=24 */
%   | | | else return -0.1275465865562228;  // std dev = 1,664, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else return 0.03501448730785193;  // std dev = 0,467, 3.550,000 (wgt'ed) examples reached here.  /* #neg=2.411 #pos=1.139 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return -0.032305494415421944;  // std dev = 1,309, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return -0.15101541444805816;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 7.981568174192725E-4;  // std dev = 6,263, 332,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=46 */
%   | | | else return -0.01594011287636019;  // std dev = 3,937, 138,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=18 */


Results
   AUC ROC   = 0.638543
   AUC PR    = 0.175343
   CLL	      = -0.310879
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 252.809 seconds
Total inference time: 11.071 seconds
AUC ROC: 0.638543


Results scoring model
   AUC ROC   = 0.631755
   AUC PR    = 0.190525
   CLL	      = -0.325776
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167568
   F1        = 0.287037


Total scoring time: 61.045 seconds
Refined model CLL: -0.325776


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.327294
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 340.16 seconds
Total inference time: 4.457 seconds
AUC ROC: 0.574545
Total revision time: 340.16
Best scored revision CLL: -0.323883


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:33:21
{'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Learning time': 340.16, 'F1': 0.259494, 'Inference time': 4.457, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'parameter_0.6': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Learning time': 16.054, 'F1': 0.259494, 'Inference time': 4.457, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.327294}, 'CLL': -0.327294}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21785384479169748;  // std dev = 0,480, 3.931,000 (wgt'ed) examples reached here.  /* #neg=2.517 #pos=1.414 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.002962176011598821;  // std dev = 2,075, 36,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | | else return 0.03763611458669163;  // std dev = 4,151, 117,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=21 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return 0.0010060779566552175;  // std dev = 3,817, 119,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=17 */
%   | | | else return -0.07518439823382113;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.03185106490048784;  // std dev = 4,425, 200,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=22 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19535559917327552;  // std dev = 0,482, 3.865,000 (wgt'ed) examples reached here.  /* #neg=2.451 #pos=1.414 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return -0.02241369083211955;  // std dev = 3,629, 124,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=15 */
%   | | | else return 0.07968014733634285;  // std dev = 3,636, 77,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | | else return 0.08906530721131647;  // std dev = 0,424, 51,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.019738336412387137;  // std dev = 4,404, 186,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=22 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16404334333248788;  // std dev = 0,481, 3.885,000 (wgt'ed) examples reached here.  /* #neg=2.471 #pos=1.414 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.10171580936793556;  // std dev = 1,502, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.031235516419659576;  // std dev = 4,331, 126,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=23 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return -0.14305762195942762;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.013787062147618425;  // std dev = 3,941, 139,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.014139429744266845;  // std dev = 4,396, 181,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=22 */
%   | | | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13353720045006184;  // std dev = 0,480, 3.917,000 (wgt'ed) examples reached here.  /* #neg=2.503 #pos=1.414 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.016983821812934778;  // std dev = 1,571, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.005305323445048406;  // std dev = 4,982, 208,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=29 */
%   | | else return 0.04189417661375488;  // std dev = 0,402, 59,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.023519856020986094;  // std dev = 4,421, 202,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=22 */
%   | | | else return -0.12245085747789083;  // std dev = 0,058, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.748232932575767;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | | then return 0.07255725690009178;  // std dev = 4,027, 74,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | | else return 0.24823293257576706;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.10828515189692291;  // std dev = 0,480, 3.830,000 (wgt'ed) examples reached here.  /* #neg=2.451 #pos=1.379 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.7285841051478856;  // std dev = 1,864, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | | else return -0.14291030638160684;  // std dev = 0,070, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( title(L, I), venue(L, A) )
%   | | | then return -0.1366119451788962;  // std dev = 0,024, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.007376621628379462;  // std dev = 3,670, 102,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=16 */
%   | else return -0.02078400419918299;  // std dev = 0,308, 206,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7143344526576316;  // std dev = 0,197, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.26567991581492917;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.26567991581492917;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.19688949460303715;  // std dev = 3,093, 41,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | else return 0.08482345073630869;  // std dev = 0,479, 3.857,000 (wgt'ed) examples reached here.  /* #neg=2.478 #pos=1.379 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then return 0.007304147803707123;  // std dev = 0,320, 205,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=32 */
%   | | else if ( haswordtitle(J, M), haswordvenue(A, M) )
%   | | | then return 0.06836445104175484;  // std dev = 3,029, 51,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return -0.14611673964056296;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.00863053749361113;  // std dev = 0,320, 188,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06837162657106086;  // std dev = 0,478, 3.941,000 (wgt'ed) examples reached here.  /* #neg=2.527 #pos=1.414 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6695519775634053;  // std dev = 1,357, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return -0.1268478248773482;  // std dev = 0,064, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13022763924509195;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.012522207579940783;  // std dev = 3,665, 102,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 1.437741591986271E-4;  // std dev = 4,379, 172,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=22 */
%   | | | else return -0.09464796102212239;  // std dev = 0,014, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.09024698568376575;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05644927247606617;  // std dev = 0,479, 3.917,000 (wgt'ed) examples reached here.  /* #neg=2.503 #pos=1.414 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.11429307199692952;  // std dev = 0,815, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.018920673671327864;  // std dev = 3,841, 215,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=30 */
%   | | else return 0.053364403046647794;  // std dev = 0,418, 53,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else return -0.027529185668190116;  // std dev = 0,294, 229,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5220863027659798;  // std dev = 0,219, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.23911970308563218;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.23911970308563213;  // std dev = 1,49e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.11244149261199012;  // std dev = 3,146, 42,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | else return 0.040312823599394296;  // std dev = 0,479, 3.868,000 (wgt'ed) examples reached here.  /* #neg=2.489 #pos=1.379 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then if ( haswordauthor(L, I) )
%   | | | then return 0.017670236946607333;  // std dev = 0,947, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.005366313906053929;  // std dev = 3,991, 134,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=24 */
%   | | else return -0.02002248447000064;  // std dev = 0,301, 217,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=22 */
%   | else return -0.02682545195364093;  // std dev = 0,252, 140,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6270047315967011;  // std dev = 0,219, 1.351,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=1.284 */
%   | | else return -0.28210490247545306;  // std dev = 0,164, 2.633,000 (wgt'ed) examples reached here.  /* #neg=2.566 #pos=67 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.21754895694342527;  // std dev = 3,660, 139,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=15 */
%   | | | else return -0.10249699127846829;  // std dev = 0,846, 21,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3986849624771562;  // std dev = 3,292, 55,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | | | else return 0.04362824325234893;  // std dev = 2,519, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.5268694407481153;  // std dev = 0,355, 27,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else return 0.6750175888962632;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.01988483539990435;  // std dev = 0,243, 145,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=18 */


Results
   AUC ROC   = 0.957413
   AUC PR    = 0.634054
   CLL	      = -0.268276
   Precision = 0.54902 at threshold = 0.5
   Recall    = 0.050909
   F1        = 0.093178


Total learning time: 1587.687 seconds
Total inference time: 41.759 seconds
AUC ROC: 0.957413


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 06:00:33
{'AUC PR': 0.634054, 'AUC ROC': 0.957413, 'Learning time': 1587.687, 'F1': 0.093178, 'Inference time': 41.759, 'Precision': [0.54902, 0.5], 'Recall': 0.050909, 'CLL': -0.268276}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21120761175368946;  // std dev = 0,478, 4.005,000 (wgt'ed) examples reached here.  /* #neg=2.591 #pos=1.414 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.046673525263446376;  // std dev = 4,320, 122,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=23 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.01852629359007842;  // std dev = 3,778, 106,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=17 */
%   | | | else return -0.050941973991396876;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.028449003044817747;  // std dev = 4,416, 194,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=22 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.572653
   AUC PR    = 0.017942
   CLL	      = -0.201946
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 41.693 seconds
Total inference time: 5.939 seconds
AUC ROC: 0.572653


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 06:01:22
{'AUC PR': 0.017942, 'AUC ROC': 0.572653, 'Learning time': 41.693, 'F1': nan, 'Inference time': 5.939, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.201946}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1,04e-06, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.15798449146713003;  // std dev = 33,896, 5.473,000 (wgt'ed) examples reached here.  /* #neg=3.832 #pos=1.641 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.1328998124654547;  // std dev = 34,011, 5.561,000 (wgt'ed) examples reached here.  /* #neg=3.920 #pos=1.641 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.11439284563845385;  // std dev = 34,002, 5.554,000 (wgt'ed) examples reached here.  /* #neg=3.913 #pos=1.641 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.09954613033685329;  // std dev = 33,936, 5.503,000 (wgt'ed) examples reached here.  /* #neg=3.862 #pos=1.641 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.07505392719785876;  // std dev = 34,133, 5.658,000 (wgt'ed) examples reached here.  /* #neg=4.017 #pos=1.641 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,91e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.06548762534330602;  // std dev = 34,052, 5.593,000 (wgt'ed) examples reached here.  /* #neg=3.952 #pos=1.641 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.05008110682061815;  // std dev = 34,140, 5.664,000 (wgt'ed) examples reached here.  /* #neg=4.023 #pos=1.641 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2,86e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.04305336231916701;  // std dev = 34,087, 5.621,000 (wgt'ed) examples reached here.  /* #neg=3.980 #pos=1.641 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.03854639051940135;  // std dev = 34,000, 5.552,000 (wgt'ed) examples reached here.  /* #neg=3.911 #pos=1.641 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.029423021379593756;  // std dev = 34,040, 5.584,000 (wgt'ed) examples reached here.  /* #neg=3.943 #pos=1.641 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.327462
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 21.096 seconds
Total inference time: 4.2 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.584136
   AUC PR    = 0.186052
   CLL	      = -0.324042
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168272
   F1        = 0.288069


Total scoring time: 12.362 seconds
Parameter learned model CLL: -0.324042


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.896, 3832, 1641], 'true': [1.04e-06, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.011, 3920, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.002, 3913, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.936, 3862, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.133, 4017, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.052, 3952, 1641], 'true': [3.91e-07, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.14, 4023, 1641], 'true': [2.49e-07, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.087, 3980, 1641], 'true': [2.86e-07, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.0, 3911, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.04, 3943, 1641], 'true': [0.0, 0, 332]}]]
[{'': [3.2530872239619043e-15, 0.20993419550528272]}, {'': [-5.1364535115187965e-15, 0.20801222426555283]}, {'': [-5.136453511518796e-16, 0.20816450500272107]}, {'': [-9.844869230411027e-16, 0.20927715604477976]}, {'': [-7.062623578338345e-16, 0.20591336059978663]}, {'': [4.601406270735589e-16, 0.20731745951110475]}, {'': [1.872665342741228e-16, 0.2057842461756293]}, {'': [2.4612173076027567e-16, 0.2067114257944905]}, {'': [-2.3274554974069545e-16, 0.20820803340073232]}, {'': [-2.1936936872111526e-16, 0.2075126320288747]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1,04e-06, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17032249877970002;  // std dev = 0,463, 4.978,000 (wgt'ed) examples reached here.  /* #neg=3.424 #pos=1.554 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.007402666442795232;  // std dev = 5,834, 268,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=40 */
%   | | | else return 0.04703782398840127;  // std dev = 3,713, 90,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.03276015580957905;  // std dev = 5,170, 275,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=30 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15191492857166;  // std dev = 0,465, 4.921,000 (wgt'ed) examples reached here.  /* #neg=3.367 #pos=1.554 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.0366598098216458;  // std dev = 5,116, 176,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=32 */
%   | | | else return -0.0016228127815548072;  // std dev = 4,634, 177,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.026798677176597348;  // std dev = 5,164, 270,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=30 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.28482262793268537;  // std dev = 4,116, 68,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=32 */
%   | | | else return -0.11169153328735826;  // std dev = 1,925, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | else return 0.12982690823109616;  // std dev = 0,465, 4.810,000 (wgt'ed) examples reached here.  /* #neg=3.292 #pos=1.518 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.009360139856346178;  // std dev = 5,883, 296,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=40 */
%   | | | else return 0.0628418178448633;  // std dev = 3,653, 79,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.014754481845927973;  // std dev = 5,138, 250,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=30 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2752029665444353;  // std dev = 3,968, 63,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   | | | else return -0.08946071426560247;  // std dev = 1,918, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.10735125170431009;  // std dev = 5,040, 118,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
%   | | | else return 0.10201253320837843;  // std dev = 32,008, 4.805,000 (wgt'ed) examples reached here.  /* #neg=3.324 #pos=1.481 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.0032919304418625663;  // std dev = 5,843, 273,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=40 */
%   | | | else return 0.04686168294240445;  // std dev = 3,670, 82,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.028513807756042914;  // std dev = 5,183, 287,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=30 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.23875194276021658;  // std dev = 3,012, 37,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.06050736697417037;  // std dev = 3,785, 70,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | else return 0.09281906181048188;  // std dev = 0,465, 4.793,000 (wgt'ed) examples reached here.  /* #neg=3.276 #pos=1.517 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.007766906172288074;  // std dev = 5,827, 264,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=40 */
%   | | | else return 0.02418626239897736;  // std dev = 3,707, 89,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.016152470728754902;  // std dev = 5,157, 264,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=30 */
%   | | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,91e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.18081505785276986;  // std dev = 3,055, 38,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.07854937095550421;  // std dev = 3,703, 64,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else return 0.07376010452188703;  // std dev = 0,464, 4.833,000 (wgt'ed) examples reached here.  /* #neg=3.316 #pos=1.517 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.006423116245588479;  // std dev = 5,828, 265,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=40 */
%   | | | else return 0.06256908232765981;  // std dev = 3,611, 73,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.018884489040286116;  // std dev = 5,170, 275,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=30 */
%   | | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.13021916312010456;  // std dev = 4,192, 71,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=32 */
%   | | | else return -0.11967741920797857;  // std dev = 1,939, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
%   | | else return 0.05483063941516704;  // std dev = 0,462, 4.915,000 (wgt'ed) examples reached here.  /* #neg=3.397 #pos=1.518 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.016821371184597506;  // std dev = 5,905, 311,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=40 */
%   | | | else return 0.028036249203526712;  // std dev = 3,670, 82,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.029108503574606127;  // std dev = 5,205, 310,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=30 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2,86e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return -0.34333641382634694;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04952931607381831;  // std dev = 4,938, 113,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
%   | | else return 0.05506272932734048;  // std dev = 0,465, 4.752,000 (wgt'ed) examples reached here.  /* #neg=3.235 #pos=1.517 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return -0.040675781190025836;  // std dev = 0,307, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.004290940881712128;  // std dev = 7,131, 420,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=60 */
%   | | | else return -0.005106159765700896;  // std dev = 4,643, 188,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=25 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1641268110048972;  // std dev = 3,078, 38,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | | else return -0.048164328438452184;  // std dev = 3,384, 78,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | else return 0.03658218811507561;  // std dev = 0,463, 4.867,000 (wgt'ed) examples reached here.  /* #neg=3.349 #pos=1.518 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.002068989898796122;  // std dev = 5,863, 284,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=40 */
%   | | | else return 0.034101406246122734;  // std dev = 3,644, 78,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.021648328150958452;  // std dev = 5,191, 296,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=30 */
%   | | | else return -0.07290036782958591;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.028854908568882922;  // std dev = 31,318, 4.591,000 (wgt'ed) examples reached here.  /* #neg=3.160 #pos=1.431 */
%   | | | else return 0.04489452678408123;  // std dev = 7,760, 419,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=84 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.15177112034264797;  // std dev = 4,476, 206,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=23 */
%   | | | else return 0.13194269448518167;  // std dev = 5,371, 144,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5747997179143671;  // std dev = 0,350, 35,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.005085201538112389;  // std dev = 4,623, 171,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=25 */
%   | | | else return -0.06812415639926322;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.650305
   AUC PR    = 0.190358
   CLL	      = -0.307532
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1044.201 seconds
Total inference time: 16.587 seconds
AUC ROC: 0.650305


Results scoring model
   AUC ROC   = 0.659089
   AUC PR    = 0.205382
   CLL	      = -0.319827
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168272
   F1        = 0.288069


Total scoring time: 191.628 seconds
Refined model CLL: -0.319827


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.650305
   AUC PR    = 0.190358
   CLL	      = -0.307532
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1269.287 seconds
Total inference time: 16.587 seconds
AUC ROC: 0.650305
Total revision time: 1269.287
Best scored revision CLL: -0.319827


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 06:22:54
{'AUC PR': 0.190358, 'AUC ROC': 0.650305, 'parameter_0.8': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Learning time': 21.096, 'F1': 0.259494, 'Inference time': 4.2, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.327462}, 'Learning time': 1269.287, 'F1': 0.259494, 'Inference time': 16.587, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.307532}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21711353350072526;  // std dev = 0,480, 5.254,000 (wgt'ed) examples reached here.  /* #neg=3.368 #pos=1.886 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.088918165868743;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 4.5662740720380814E-4;  // std dev = 5,633, 260,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=37 */
%   | | else return 0.07064893509951238;  // std dev = 0,409, 80,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.03457137141389804;  // std dev = 5,000, 261,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=28 */
%   | | | else return -0.07935106490048778;  // std dev = 1,369, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.704612923655322;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.19917814104662637;  // std dev = 3,274, 46,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return 0.08602318006557844;  // std dev = 3,856, 78,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | else return 0.18569256796228412;  // std dev = 0,479, 5.173,000 (wgt'ed) examples reached here.  /* #neg=3.331 #pos=1.842 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return -0.03351309347189818;  // std dev = 4,221, 184,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=20 */
%   | | | else return 0.07111500298699376;  // std dev = 3,967, 93,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
%   | | else if ( haswordtitle(I, M), haswordvenue(A, M) )
%   | | | then return 0.0957062071138193;  // std dev = 3,579, 69,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return -0.15067060448038305;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.028609175909164664;  // std dev = 0,311, 277,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=30 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15929609141961013;  // std dev = 0,479, 5.275,000 (wgt'ed) examples reached here.  /* #neg=3.389 #pos=1.886 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.007660806012278651;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.014527417689571212;  // std dev = 5,574, 236,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=37 */
%   | | else return 0.041860447947222136;  // std dev = 0,403, 83,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.02604665091884374;  // std dev = 4,996, 259,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=28 */
%   | | | else return -0.045594474459713485;  // std dev = 1,356, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else return -0.12233946101869052;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.3340278298243116;  // std dev = 3,071, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | | else return 0.13102070667044005;  // std dev = 3,039, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return -0.1612937547908337;  // std dev = 1,560, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | | else return 0.07519788521103395;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return 0.13183630003346658;  // std dev = 0,479, 5.171,000 (wgt'ed) examples reached here.  /* #neg=3.328 #pos=1.843 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then if ( haswordauthor(M, J) )
%   | | | then return 0.019060434240820785;  // std dev = 1,573, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.017286579995531046;  // std dev = 5,555, 231,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=37 */
%   | | else return 0.04113693590198028;  // std dev = 0,407, 81,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | else return -0.021084459945099013;  // std dev = 0,312, 274,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10787003632277224;  // std dev = 0,478, 5.294,000 (wgt'ed) examples reached here.  /* #neg=3.408 #pos=1.886 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.02325710335459337;  // std dev = 1,610, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return -0.0011929735109957652;  // std dev = 5,611, 256,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=37 */
%   | | else return 0.052548003238813173;  // std dev = 0,418, 75,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.025405772857104873;  // std dev = 5,009, 271,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=28 */
%   | | | else return -0.03430601248892985;  // std dev = 1,353, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.10775466014644393;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08866225264512556;  // std dev = 0,479, 5.275,000 (wgt'ed) examples reached here.  /* #neg=3.389 #pos=1.886 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.03188790284174093;  // std dev = 1,622, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 9.345335622795438E-4;  // std dev = 5,604, 253,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=37 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.02979084789007975;  // std dev = 3,659, 80,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | | | else return -0.14874525557658977;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.012404271275320613;  // std dev = 5,158, 265,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=30 */
%   | | | else return -0.11826692920782943;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09782407548863456;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07344179275863168;  // std dev = 0,480, 5.233,000 (wgt'ed) examples reached here.  /* #neg=3.347 #pos=1.886 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return -0.015106532804017383;  // std dev = 4,179, 158,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=20 */
%   | | | else return 0.04288867637529288;  // std dev = 4,005, 101,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=20 */
%   | | else return 0.028702982102426663;  // std dev = 0,411, 79,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.020543417209960807;  // std dev = 5,008, 269,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=28 */
%   | | | else return 7.72917080118476E-4;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return -0.0895238285458705;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.0480026458526912;  // std dev = 0,476, 4.907,000 (wgt'ed) examples reached here.  /* #neg=3.190 #pos=1.717 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7334262473723885;  // std dev = 2,148, 88,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=83 */
%   | | | else return -0.13974344320731621;  // std dev = 1,093, 306,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.17511214906592323;  // std dev = 0,316, 202,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=23 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.39464317324520054;  // std dev = 3,913, 73,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=51 */
%   | | | else return 0.05545373773712935;  // std dev = 3,823, 95,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5959456279922904;  // std dev = 0,302, 59,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=53 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.009367992749932613;  // std dev = 0,363, 159,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=25 */
%   | | else return -0.08248997572200849;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03623378360529955;  // std dev = 0,473, 5.378,000 (wgt'ed) examples reached here.  /* #neg=3.492 #pos=1.886 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7454079024009784;  // std dev = 1,886, 39,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | | else return -0.14757635418603388;  // std dev = 0,125, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.16299231985576057;  // std dev = 0,008, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.01475622693730173;  // std dev = 3,666, 127,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=22 */
%   | else return -0.017438096473031375;  // std dev = 0,273, 289,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=30 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03734485409129245;  // std dev = 0,475, 5.244,000 (wgt'ed) examples reached here.  /* #neg=3.358 #pos=1.886 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return -0.04567856585312683;  // std dev = 3,718, 206,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=20 */
%   | | | else return 0.01572530972618167;  // std dev = 3,528, 105,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=20 */
%   | | else return 0.01802680421344808;  // std dev = 0,352, 76,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.11382801834903358;  // std dev = 0,020, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.02380263948942437;  // std dev = 0,259, 322,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=30 */


Results
   AUC ROC   = 0.638575
   AUC PR    = 0.063085
   CLL	      = -0.344264
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.007273
   F1        = 0.01444


Total learning time: 3331.289 seconds
Total inference time: 24.572 seconds
AUC ROC: 0.638575


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 07:18:52
{'AUC PR': 0.063085, 'AUC ROC': 0.638575, 'Learning time': 3331.289, 'F1': 0.01444, 'Inference time': 24.572, 'Precision': [1.0, 0.5], 'Recall': 0.007273, 'CLL': -0.344264}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21413232505798205;  // std dev = 0,479, 5.298,000 (wgt'ed) examples reached here.  /* #neg=3.412 #pos=1.886 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.026466449515872396;  // std dev = 1,629, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return -0.011569374759643362;  // std dev = 5,673, 284,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=37 */
%   | | else return 0.0878786648292421;  // std dev = 0,421, 74,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.026148585561645135;  // std dev = 4,976, 242,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=28 */
%   | | | else return -0.04661296966239256;  // std dev = 1,345, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.5731
   AUC PR    = 0.017953
   CLL	      = -0.202037
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 189.481 seconds
Total inference time: 4.87 seconds
AUC ROC: 0.5731


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 07:22:07
{'AUC PR': 0.017953, 'AUC ROC': 0.5731, 'Learning time': 189.481, 'F1': nan, 'Inference time': 4.87, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.202037}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,72e-06, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.1538586961130401;  // std dev = 38,034, 6.946,000 (wgt'ed) examples reached here.  /* #neg=4.892 #pos=2.054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.1374805480145682;  // std dev = 37,942, 6.867,000 (wgt'ed) examples reached here.  /* #neg=4.813 #pos=2.054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.10992116957652487;  // std dev = 38,160, 7.057,000 (wgt'ed) examples reached here.  /* #neg=5.003 #pos=2.054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.10053031538591178;  // std dev = 37,958, 6.880,000 (wgt'ed) examples reached here.  /* #neg=4.826 #pos=2.054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07850164484986566;  // std dev = 38,108, 7.011,000 (wgt'ed) examples reached here.  /* #neg=4.957 #pos=2.054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4,42e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.06364917942028979;  // std dev = 38,144, 7.043,000 (wgt'ed) examples reached here.  /* #neg=4.989 #pos=2.054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.05167429994625847;  // std dev = 38,160, 7.057,000 (wgt'ed) examples reached here.  /* #neg=5.003 #pos=2.054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7,30e-08, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.046365307372636624;  // std dev = 38,046, 6.956,000 (wgt'ed) examples reached here.  /* #neg=4.902 #pos=2.054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.034280488713561486;  // std dev = 38,135, 7.035,000 (wgt'ed) examples reached here.  /* #neg=4.981 #pos=2.054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.03243519259026225;  // std dev = 38,007, 6.922,000 (wgt'ed) examples reached here.  /* #neg=4.868 #pos=2.054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.328034
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 28.774 seconds
Total inference time: 3.954 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.324637
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 15.284 seconds
Parameter learned model CLL: -0.324637


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.034, 4892, 2054], 'true': [1.72e-06, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.942, 4813, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.16, 5003, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.958, 4826, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.108, 4957, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.144, 4989, 2054], 'true': [4.42e-07, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.16, 5003, 2054], 'true': [2.46e-07, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.046, 4902, 2054], 'true': [7.3e-08, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.135, 4981, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.007, 4868, 2054], 'true': [0.0, 0, 413]}]]
[{'': [7.157040631385029e-15, 0.2082654982547882]}, {'': [-5.4365981719174735e-15, 0.20964388835453912]}, {'': [-1.3419451183846928e-15, 0.20634345937782814]}, {'': [-2.1677574989291194e-15, 0.20941649202271034]}, {'': [-1.4623760905474218e-15, 0.20713783082395998]}, {'': [4.731216763535776e-16, 0.20658489626483548]}, {'': [1.4623760905474217e-16, 0.2063434593779072]}, {'': [1.2903318446006663e-17, 0.20809162397925152]}, {'': [-3.5699181033951763e-16, 0.20672298978251155]}, {'': [-3.4193793881917656e-16, 0.20868335915589328]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,72e-06, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.175214116887912;  // std dev = 0,465, 6.106,000 (wgt'ed) examples reached here.  /* #neg=4.170 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05409488104545843;  // std dev = 6,829, 296,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=58 */
%   | | | else return 0.020311097261674106;  // std dev = 4,484, 148,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03869920243630486;  // std dev = 5,682, 349,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25034772147384665;  // std dev = 4,777, 94,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=39 */
%   | | | else return -0.08589421015417043;  // std dev = 2,540, 89,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.16402553302399958;  // std dev = 5,557, 140,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=46 */
%   | | | else return 0.15404429104549316;  // std dev = 35,447, 5.788,000 (wgt'ed) examples reached here.  /* #neg=3.944 #pos=1.844 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return -0.041766974832705805;  // std dev = 1,642, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.027503618797959577;  // std dev = 8,073, 452,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=79 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.03405334578963742;  // std dev = 5,682, 349,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12605079597376279;  // std dev = 0,463, 6.190,000 (wgt'ed) examples reached here.  /* #neg=4.254 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.054421602165348734;  // std dev = 6,784, 281,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=58 */
%   | | | else return 0.01025934715020002;  // std dev = 4,498, 153,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.036708805602740105;  // std dev = 5,703, 373,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=36 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1025592625831479;  // std dev = 0,462, 6.262,000 (wgt'ed) examples reached here.  /* #neg=4.326 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03288448872753014;  // std dev = 6,845, 302,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=58 */
%   | | | else return 1.9123846851919698E-4;  // std dev = 4,521, 162,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02986782461384215;  // std dev = 5,695, 363,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08772408485948352;  // std dev = 0,463, 6.214,000 (wgt'ed) examples reached here.  /* #neg=4.278 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0036712428791584556;  // std dev = 7,219, 395,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.027769326776810075;  // std dev = 4,054, 113,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=20 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.024026656543363608;  // std dev = 5,687, 354,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=36 */
%   | | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4,42e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07208924551630268;  // std dev = 0,463, 6.213,000 (wgt'ed) examples reached here.  /* #neg=4.277 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.05554800258761794;  // std dev = 1,658, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | | else return 0.021060893783032428;  // std dev = 8,040, 437,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=79 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.028367485812544113;  // std dev = 5,709, 380,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=36 */
%   | | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06285914010704999;  // std dev = 0,464, 6.133,000 (wgt'ed) examples reached here.  /* #neg=4.197 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.025016569589281768;  // std dev = 6,848, 304,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=58 */
%   | | | else return -0.006437744198877221;  // std dev = 4,527, 165,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=24 */
%   | | else return -0.013655057616048571;  // std dev = 0,307, 341,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7,30e-08, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.12001471973719209;  // std dev = 3,835, 62,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return -0.047082054456356506;  // std dev = 4,142, 100,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=22 */
%   | | else return 0.04745870394861513;  // std dev = 0,463, 6.052,000 (wgt'ed) examples reached here.  /* #neg=4.162 #pos=1.890 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.004660434711112875;  // std dev = 7,162, 364,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=62 */
%   | | | else return 0.03218253838920814;  // std dev = 4,029, 107,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.02081329535986651;  // std dev = 5,699, 368,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=36 */
%   | | | else return -0.07779147631137098;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03934447496148573;  // std dev = 0,463, 6.179,000 (wgt'ed) examples reached here.  /* #neg=4.243 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.008479567262294728;  // std dev = 7,143, 354,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=62 */
%   | | | else return 0.08786450043715954;  // std dev = 3,877, 81,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.11648027482983349;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.01135567441125146;  // std dev = 5,672, 350,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.02663124828974981;  // std dev = 35,090, 5.780,000 (wgt'ed) examples reached here.  /* #neg=3.996 #pos=1.784 */
%   | | | else return 0.04897658373573648;  // std dev = 8,401, 516,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=99 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.15186420785321847;  // std dev = 5,202, 274,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=31 */
%   | | | else return 0.1359147901246277;  // std dev = 6,519, 205,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=71 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5855107078327398;  // std dev = 0,338, 38,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.01048960267680866;  // std dev = 5,428, 200,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=36 */
%   | | | else return -0.0716319772154282;  // std dev = 5,27e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.657779
   AUC PR    = 0.190444
   CLL	      = -0.306133
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1250.204 seconds
Total inference time: 15.954 seconds
AUC ROC: 0.657779


Results scoring model
   AUC ROC   = 0.656346
   AUC PR    = 0.204574
   CLL	      = -0.32002
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 225.904 seconds
Refined model CLL: -0.32002


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.657779
   AUC PR    = 0.190444
   CLL	      = -0.306133
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1520.166 seconds
Total inference time: 15.954 seconds
AUC ROC: 0.657779
Total revision time: 1520.166
Best scored revision CLL: -0.32002


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 07:47:49
{'AUC PR': 0.190444, 'AUC ROC': 0.657779, 'Learning time': 1520.166, 'F1': 0.259494, 'Inference time': 15.954, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'parameter_1.0': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Learning time': 28.774, 'F1': 0.259494, 'Inference time': 3.954, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.328034}, 'CLL': -0.306133}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(E, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3169724645112762;  // std dev = 4,594, 85,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=39 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return -0.019044047356628045;  // std dev = 2,478, 57,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=7 */
%   | | | else return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.22329151913646747;  // std dev = 0,481, 6.277,000 (wgt'ed) examples reached here.  /* #neg=3.985 #pos=2.292 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.7936328060672545;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return -0.1418510649004885;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | | else return 0.01298764477693132;  // std dev = 0,362, 155,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=24 */
%   | else return -0.04402497794396648;  // std dev = 0,297, 368,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18806696105977724;  // std dev = 0,479, 6.537,000 (wgt'ed) examples reached here.  /* #neg=4.188 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6246162939956271;  // std dev = 2,499, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | | else return -0.12544463852839186;  // std dev = 0,000, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06147219508627299;  // std dev = 2,142, 61,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   | | | else return 0.02322725846563922;  // std dev = 3,979, 114,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.04265330863676287;  // std dev = 5,550, 362,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=34 */
%   | | | else return -0.056575960570464184;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return -0.1365759605704642;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15172660365652763;  // std dev = 0,477, 6.685,000 (wgt'ed) examples reached here.  /* #neg=4.336 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.0014883962477827224;  // std dev = 1,608, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.009933284652319688;  // std dev = 5,090, 328,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=59 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.040236034124998515;  // std dev = 3,983, 106,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=20 */
%   | | | else return -0.14631691667076485;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.0215298273292256;  // std dev = 5,500, 309,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=34 */
%   | | | else return -0.035782454883853274;  // std dev = 1,347, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.12125479207553358;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7284413938646789;  // std dev = 0,987, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return -0.22497344571805203;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.15354487428948058;  // std dev = 1,363, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.17234889528790603;  // std dev = 4,114, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   | else return 0.138171234511679;  // std dev = 0,481, 6.313,000 (wgt'ed) examples reached here.  /* #neg=4.021 #pos=2.292 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then return 0.00451871323369257;  // std dev = 0,287, 353,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=62 */
%   | | else if ( haswordtitle(J, M), haswordvenue(A, M) )
%   | | | then return 0.0678740027727026;  // std dev = 3,900, 90,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=20 */
%   | | | else return -0.1289693919026395;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.029491980364048785;  // std dev = 0,299, 363,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09969737187276509;  // std dev = 0,475, 6.719,000 (wgt'ed) examples reached here.  /* #neg=4.370 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return -0.053397615857374625;  // std dev = 0,272, 37,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordtitle(E, G), haswordvenue(A, G) )
%   | | | then return 0.02817231649257129;  // std dev = 5,007, 216,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=43 */
%   | | | else return -0.0025602345413112404;  // std dev = 4,042, 220,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=36 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.022495630432084746;  // std dev = 5,521, 329,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=34 */
%   | | | else return -0.05498509601039849;  // std dev = 1,366, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return -0.10608711681988477;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.3732221004344197;  // std dev = 2,810, 37,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | | else return 0.009720935384996483;  // std dev = 3,645, 65,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.7527399061487108;  // std dev = 0,076, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14404433931463784;  // std dev = 2,421, 80,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=7 */
%   | else return 0.08915037723346449;  // std dev = 0,479, 6.395,000 (wgt'ed) examples reached here.  /* #neg=4.103 #pos=2.292 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then return 0.0022760465269382503;  // std dev = 0,280, 363,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=62 */
%   | | else if ( haswordtitle(J, M), haswordvenue(A, M) )
%   | | | then return 0.04567016294115966;  // std dev = 3,923, 94,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=20 */
%   | | | else return -0.1149006923869499;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.020988699587215644;  // std dev = 0,301, 356,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07271412002401599;  // std dev = 0,478, 6.527,000 (wgt'ed) examples reached here.  /* #neg=4.178 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return -0.0042973310796865765;  // std dev = 1,165, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.012936315504076949;  // std dev = 5,156, 234,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.001306822817461866;  // std dev = 3,846, 200,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=34 */
%   | | | else return -0.062149063776307675;  // std dev = 1,357, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.017506479340720794;  // std dev = 5,520, 328,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=34 */
%   | | | else return -0.0552881370148877;  // std dev = 1,372, 33,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | | else return -0.0946253412625709;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.057549752722488814;  // std dev = 0,478, 6.530,000 (wgt'ed) examples reached here.  /* #neg=4.181 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.019252934560823207;  // std dev = 1,595, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 9.7185099862469E-5;  // std dev = 5,116, 339,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=59 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.062375655801063044;  // std dev = 3,858, 84,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return -0.09808539232871055;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.022947188723881896;  // std dev = 5,543, 353,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=34 */
%   | | | else return -0.03894403700236165;  // std dev = 1,364, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.0868237370365257;  // std dev = 5,27e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.032852234715116606;  // std dev = 0,474, 6.163,000 (wgt'ed) examples reached here.  /* #neg=4.024 #pos=2.139 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.681605514740691;  // std dev = 3,185, 110,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=98 */
%   | | | else return -0.13366547648440197;  // std dev = 1,148, 411,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.19809998768777917;  // std dev = 4,975, 241,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=28 */
%   | | | else return -0.061869062794735974;  // std dev = 1,404, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.36967683637642856;  // std dev = 4,600, 99,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=68 */
%   | | | else return 0.06971800758982448;  // std dev = 3,772, 128,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=33 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6694220986611205;  // std dev = 0,126, 62,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=61 */
%   | else return 0.004203027248305785;  // std dev = 0,269, 220,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.024276494078603855;  // std dev = 0,474, 6.188,000 (wgt'ed) examples reached here.  /* #neg=4.049 #pos=2.139 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.602563305581064;  // std dev = 2,509, 104,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=98 */
%   | | | else return -0.1171059769825007;  // std dev = 1,089, 418,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.14933790870028715;  // std dev = 4,953, 226,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=28 */
%   | | | else return -0.0788991990999833;  // std dev = 1,466, 34,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.30637153095823677;  // std dev = 4,439, 96,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=68 */
%   | | | else return 0.06426372246540626;  // std dev = 3,752, 122,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=33 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.42453120332118033;  // std dev = 0,304, 68,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=61 */
%   | else return -0.007108373479265714;  // std dev = 0,268, 231,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=36 */


Results
   AUC ROC   = 0.671043
   AUC PR    = 0.081266
   CLL	      = -0.335274
   Precision = 0.373333 at threshold = 0.5
   Recall    = 0.050909
   F1        = 0.0896


Total learning time: 4882.179 seconds
Total inference time: 35.535 seconds
AUC ROC: 0.671043


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 09:09:48
{'AUC PR': 0.081266, 'AUC ROC': 0.671043, 'Learning time': 4882.179, 'F1': 0.0896, 'Inference time': 35.535, 'Precision': [0.373333, 0.5], 'Recall': 0.050909, 'CLL': -0.335274}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21666541861599065;  // std dev = 0,480, 6.552,000 (wgt'ed) examples reached here.  /* #neg=4.203 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.01940208530865097;  // std dev = 2,295, 49,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | | else return 0.08286803622310678;  // std dev = 5,569, 178,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=40 */
%   | | else if ( title(I, E), venue(I, A) )
%   | | | then return 0.02400259363609683;  // std dev = 5,326, 205,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=34 */
%   | | | else return -0.00851773156715447;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.04155607964975072;  // std dev = 5,531, 339,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=34 */
%   | | | else return -0.09056901361843647;  // std dev = 1,377, 39,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.574687
   AUC PR    = 0.017986
   CLL	      = -0.202252
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 63.766 seconds
Total inference time: 5.63 seconds
AUC ROC: 0.574687


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 09:10:58
{'AUC PR': 0.017986, 'AUC ROC': 0.574687, 'Learning time': 63.766, 'F1': nan, 'Inference time': 5.63, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.202252}


