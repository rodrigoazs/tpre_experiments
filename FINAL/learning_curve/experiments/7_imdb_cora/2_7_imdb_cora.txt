Starting experiment #2 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048896;  // std dev = 0,000, 682,000 (wgt'ed) examples reached here.  /* #neg=682 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.12544463852839238;  // std dev = 0,000, 735,000 (wgt'ed) examples reached here.  /* #neg=735 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360626;  // std dev = 4,71e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.11231637819360649;  // std dev = 0,000, 689,000 (wgt'ed) examples reached here.  /* #neg=689 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1015963294878362;  // std dev = 4,34e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783512;  // std dev = 4,49e-07, 711,000 (wgt'ed) examples reached here.  /* #neg=711 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.09269127618926183;  // std dev = 0,000, 752,000 (wgt'ed) examples reached here.  /* #neg=752 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.08518475138839675;  // std dev = 1,43e-07, 768,000 (wgt'ed) examples reached here.  /* #neg=768 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109173;  // std dev = 2,24e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07877675473109283;  // std dev = 0,000, 719,000 (wgt'ed) examples reached here.  /* #neg=719 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07324622576333654;  // std dev = 2,34e-07, 696,000 (wgt'ed) examples reached here.  /* #neg=696 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06842697784420246;  // std dev = 1,93e-07, 673,000 (wgt'ed) examples reached here.  /* #neg=673 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202529;  // std dev = 2,54e-07, 717,000 (wgt'ed) examples reached here.  /* #neg=717 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 218007

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 31946

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.16428514548386342;  // std dev = 17,749, 1.483,000 (wgt'ed) examples reached here.  /* #neg=1.029 #pos=454 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2,06e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.13583185593515681;  // std dev = 17,841, 1.519,000 (wgt'ed) examples reached here.  /* #neg=1.065 #pos=454 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,21e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.11921815476681592;  // std dev = 17,806, 1.505,000 (wgt'ed) examples reached here.  /* #neg=1.051 #pos=454 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.10318348927680163;  // std dev = 17,775, 1.493,000 (wgt'ed) examples reached here.  /* #neg=1.039 #pos=454 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.0832815252717998;  // std dev = 17,811, 1.507,000 (wgt'ed) examples reached here.  /* #neg=1.053 #pos=454 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.07035993777212532;  // std dev = 17,790, 1.499,000 (wgt'ed) examples reached here.  /* #neg=1.045 #pos=454 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.06737245834469875;  // std dev = 17,665, 1.452,000 (wgt'ed) examples reached here.  /* #neg=998 #pos=454 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,11e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.036820083441284505;  // std dev = 17,893, 1.540,000 (wgt'ed) examples reached here.  /* #neg=1.086 #pos=454 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7,60e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.033784744432373885;  // std dev = 17,841, 1.519,000 (wgt'ed) examples reached here.  /* #neg=1.065 #pos=454 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,16e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.026561656698926142;  // std dev = 17,849, 1.522,000 (wgt'ed) examples reached here.  /* #neg=1.068 #pos=454 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.331859
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.26 seconds
Total inference time: 3.692 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.570888
   AUC PR    = 0.160023
   CLL	      = -0.333905
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.141777
   F1        = 0.248344


Total scoring time: 4.879 seconds
Parameter learned model CLL: -0.333905


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.749, 1029, 454], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.841, 1065, 454], 'true': [2.06e-07, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.806, 1051, 454], 'true': [3.21e-07, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.775, 1039, 454], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.811, 1053, 454], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.79, 1045, 454], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.665, 998, 454], 'true': [0.0, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.893, 1086, 454], 'true': [2.11e-08, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.841, 1065, 454], 'true': [7.6e-08, 0, 75]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.849, 1068, 454], 'true': [5.16e-08, 0, 75]}]]
[{'': [-1.4210854715202005e-15, 0.21241683107584458]}, {'': [5.684341886080802e-16, 0.2095510845507038]}, {'': [1.3737159558028603e-15, 0.21066169247579547]}, {'': [-1.1842378929335003e-16, 0.21161760015143896]}, {'': [-3.789561257387201e-16, 0.21050272363123493]}, {'': [-1.1842378929335004e-17, 0.21113920287528773]}, {'': [-1.0066022089934752e-16, 0.2149082864710302]}, {'': [5.921189464667502e-18, 0.20789509192107725]}, {'': [7.697546304067752e-17, 0.20955108455071444]}, {'': [3.552713678800501e-17, 0.20931377035196375]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17000078695135926;  // std dev = 0,463, 1.350,000 (wgt'ed) examples reached here.  /* #neg=929 #pos=421 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -3.416309382234952E-4;  // std dev = 3,589, 106,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=15 */
%   | | | else return 0.0702701472207245;  // std dev = 2,348, 33,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0826387310178797;  // std dev = 2,921, 49,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2,06e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1503486354497678;  // std dev = 0,464, 1.340,000 (wgt'ed) examples reached here.  /* #neg=919 #pos=421 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.05299571132534988;  // std dev = 3,475, 77,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | | | else return 0.0042338874291507145;  // std dev = 2,429, 46,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | else return 0.09900530802649486;  // std dev = 0,432, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,21e-07, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.133700994593663;  // std dev = 0,466, 1.319,000 (wgt'ed) examples reached here.  /* #neg=898 #pos=421 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.016378286147177106;  // std dev = 3,607, 114,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=15 */
%   | | | else return 0.09792628279399827;  // std dev = 2,294, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else return 0.08522092306946139;  // std dev = 0,433, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7664011151071036;  // std dev = 3,428, 410,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=398 */
%   | | | else return -0.1876891620064397;  // std dev = 3,728, 948,000 (wgt'ed) examples reached here.  /* #neg=934 #pos=14 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13073741785189363;  // std dev = 1,920, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
%   | | | else return 0.16326423106641175;  // std dev = 3,103, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.7165435687307848;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.06690898915334477;  // std dev = 0,430, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.5500273444304143;  // std dev = 0,772, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.1997440743278612;  // std dev = 2,253, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else return -0.06648467803302725;  // std dev = 0,268, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.07631527324800295;  // std dev = 0,386, 1.301,000 (wgt'ed) examples reached here.  /* #neg=899 #pos=402 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -8.1565808855398E-4;  // std dev = 3,526, 120,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=18 */
%   | | | else return 0.047880328371707775;  // std dev = 2,898, 47,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2263413542378217;  // std dev = 1,546, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.09908341424309189;  // std dev = 1,762, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.061685103671952395;  // std dev = 13,708, 1.319,000 (wgt'ed) examples reached here.  /* #neg=918 #pos=401 */
%   | | | else return 0.006487574808791223;  // std dev = 3,595, 82,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5579292918979053;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.03425159324278936;  // std dev = 0,420, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05419041318278975;  // std dev = 0,380, 1.338,000 (wgt'ed) examples reached here.  /* #neg=917 #pos=421 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2188716764669294;  // std dev = 1,243, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.15248394239482796;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14059484503292752;  // std dev = 1,355, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.0061470536018721645;  // std dev = 4,349, 160,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=26 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,11e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5697996669976465;  // std dev = 3,213, 409,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=398 */
%   | | | else return -0.18690987364032327;  // std dev = 3,746, 923,000 (wgt'ed) examples reached here.  /* #neg=909 #pos=14 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1243720936336444;  // std dev = 1,915, 56,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=4 */
%   | | | else return 0.07631541538689136;  // std dev = 3,190, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.2852470425276254;  // std dev = 0,400, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return 0.07028372944342054;  // std dev = 0,442, 41,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7,60e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.41965060421923484;  // std dev = 4,469, 420,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=401 */
%   | | | else return -0.16579726146276694;  // std dev = 3,830, 902,000 (wgt'ed) examples reached here.  /* #neg=887 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13175920706643376;  // std dev = 1,685, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | | | else return 0.0729804618410168;  // std dev = 2,563, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.09409047202356148;  // std dev = 2,250, 51,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.006158405860022234;  // std dev = 1,235, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return -0.17747052686825304;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,16e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.00940541212996059;  // std dev = 0,268, 1.308,000 (wgt'ed) examples reached here.  /* #neg=887 #pos=421 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.05804416746792375;  // std dev = 2,265, 83,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=10 */
%   | | | else return -0.01307317923087758;  // std dev = 2,329, 79,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.23318262244398902;  // std dev = 0,066, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.03597668394286446;  // std dev = 2,577, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */


Results
   AUC ROC   = 0.953917
   AUC PR    = 0.622163
   CLL	      = -0.183255
   Precision = 0.425208 at threshold = 0.5
   Recall    = 0.834239
   F1        = 0.563303


Total learning time: 722.979 seconds
Total inference time: 42.182 seconds
AUC ROC: 0.953917


Results scoring model
   AUC ROC   = 0.97873
   AUC PR    = 0.582379
   CLL	      = -0.188769
   Precision = 0.406034 at threshold = 0.5
   Recall    = 0.890359
   F1        = 0.557726


Total scoring time: 346.39 seconds
Refined model CLL: -0.188769


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.953917
   AUC PR    = 0.622163
   CLL	      = -0.183255
   Precision = 0.425208 at threshold = 0.5
   Recall    = 0.834239
   F1        = 0.563303


Total learning time: 1078.508 seconds
Total inference time: 42.182 seconds
AUC ROC: 0.953917
Total revision time: 1078.508
Best scored revision CLL: -0.188769


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 19:36:36
{'AUC PR': 0.622163, 'AUC ROC': 0.953917, 'Precision': [0.425208, 0.5], 'Inference time': 42.182, 'CLL': -0.183255, 'Recall': 0.834239, 'F1': 0.563303, 'Learning time': 1078.508, 'parameter_0.2': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.692, 'CLL': -0.331859, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 4.26}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0803711573217346;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.4581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.024815601766178884;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else return 0.22009789101598073;  // std dev = 0,481, 1.293,000 (wgt'ed) examples reached here.  /* #neg=825 #pos=468 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return 0.06185263880321571;  // std dev = 0,403, 108,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=22 */
%   | else return 0.10814893509951236;  // std dev = 0,433, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17571262241535657;  // std dev = 0,474, 1.431,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=496 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.7879515929969224;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.14954840700307764;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.14954840700307748;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.029938772484101844;  // std dev = 2,397, 39,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.1265187198870376;  // std dev = 2,810, 39,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.15553256216424446;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.15553256216424446;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16164221916818636;  // std dev = 0,478, 1.382,000 (wgt'ed) examples reached here.  /* #neg=886 #pos=496 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.23825892062801104;  // std dev = 0,432, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.14732346881644143;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.02843839084486699;  // std dev = 2,652, 91,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=11 */
%   | | | else return 0.12923044092724145;  // std dev = 2,237, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.17288282126983273;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.04784104295468589;  // std dev = 2,920, 51,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13981593766447975;  // std dev = 0,479, 1.362,000 (wgt'ed) examples reached here.  /* #neg=866 #pos=496 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return 0.17162055093663828;  // std dev = 1,289, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.06224263872303987;  // std dev = 2,251, 68,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=6 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.0011911212860482522;  // std dev = 2,506, 64,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=10 */
%   | | | else return 0.23385126989377084;  // std dev = 1,087, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.07438715838229093;  // std dev = 0,424, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7036375717517079;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2963624282482919;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.04950493639331506;  // std dev = 1,432, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.0029385196442326955;  // std dev = 1,189, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I), haswordtitle(K, C) )
%   | | | then return 0.24520959210537613;  // std dev = 2,432, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return -0.14150750899926384;  // std dev = 0,956, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return 0.10371270109457371;  // std dev = 0,478, 1.326,000 (wgt'ed) examples reached here.  /* #neg=858 #pos=468 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return 0.004140635673133669;  // std dev = 0,326, 136,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=22 */
%   | else return 0.06619783421493919;  // std dev = 0,436, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordvenue(B, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.6830299433121971;  // std dev = 4,304, 458,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=439 */
%   | | | else return -0.2518806211167169;  // std dev = 3,585, 877,000 (wgt'ed) examples reached here.  /* #neg=864 #pos=13 */
%   | | else if ( title(G, D), venue(G, B) )
%   | | | then return -0.15802330332543466;  // std dev = 1,886, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return 0.5308655855634539;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else if ( haswordtitle(D, H), haswordvenue(B, H) )
%   | | then return 0.012530737514024178;  // std dev = 0,341, 68,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=12 */
%   | | else if ( title(I, D), venue(I, A) )
%   | | | then return 0.05124711229824871;  // std dev = 3,133, 80,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | | | else return 0.19265208182727242;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then return 0.668365585563454;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.08049253790432824;  // std dev = 0,442, 40,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then return 0.045440461064522;  // std dev = 0,378, 1.460,000 (wgt'ed) examples reached here.  /* #neg=982 #pos=478 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.14215196391633494;  // std dev = 0,249, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3927242911794505;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.039840849219056784;  // std dev = 2,338, 31,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.6473614697211413;  // std dev = 0,998, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.188591662850406;  // std dev = 0,813, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else return -0.02616807329389601;  // std dev = 0,680, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | then return 0.3319182637933751;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.17101297772193613;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04988333351772213;  // std dev = 0,385, 1.402,000 (wgt'ed) examples reached here.  /* #neg=906 #pos=496 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.6488772995525894;  // std dev = 1,072, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.18022339898817163;  // std dev = 0,176, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.0566558938716104;  // std dev = 1,463, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return -0.08454375452003438;  // std dev = 0,833, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return -0.0027384878705280845;  // std dev = 2,453, 62,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=10 */
%   | | | else return 0.2595997790621151;  // std dev = 0,985, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.14811304563081265;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.5145063952378406;  // std dev = 0,179, 482,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=467 */
%   | | else return -0.2176215676367385;  // std dev = 0,127, 909,000 (wgt'ed) examples reached here.  /* #neg=894 #pos=15 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.14541478003145641;  // std dev = 0,233, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | | else if ( haswordvenue(A, C) )
%   | | | then return 0.18510573852073653;  // std dev = 2,187, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return -0.006269676021804286;  // std dev = 2,088, 47,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6458973215237299;  // std dev = 0,968, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.149182971072647;  // std dev = 0,318, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0.12144237554997095;  // std dev = 1,057, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.33281639639185034;  // std dev = 0,535, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.023903438531576057;  // std dev = 0,321, 1.359,000 (wgt'ed) examples reached here.  /* #neg=863 #pos=496 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.17776706725512317;  // std dev = 0,406, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.1076426079853331;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return 0.07289510678140936;  // std dev = 1,085, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.046831480026893024;  // std dev = 2,689, 132,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=15 */
%   | | else return 0.023009144376818367;  // std dev = 0,233, 36,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */


Results
   AUC ROC   = 0.959608
   AUC PR    = 0.348676
   CLL	      = -0.222131
   Precision = 0.406888 at threshold = 0.5
   Recall    = 0.866848
   F1        = 0.553819


Total learning time: 703.429 seconds
Total inference time: 36.268 seconds
AUC ROC: 0.959608


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 19:48:56
{'AUC PR': 0.348676, 'AUC ROC': 0.959608, 'Precision': [0.406888, 0.5], 'Inference time': 36.268, 'CLL': -0.222131, 'Recall': 0.866848, 'Learning time': 703.429, 'F1': 0.553819}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21218176878972866;  // std dev = 0,478, 1.401,000 (wgt'ed) examples reached here.  /* #neg=905 #pos=496 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return 0.3581489350995123;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return -0.01685106490048768;  // std dev = 3,102, 88,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
%   | | | else return 0.09952824544433996;  // std dev = 2,304, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.06968739663797391;  // std dev = 2,945, 52,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.588034
   AUC PR    = 0.013433
   CLL	      = -0.196943
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.703 seconds
Total inference time: 3.52 seconds
AUC ROC: 0.588034


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 19:49:08
{'AUC PR': 0.013433, 'AUC ROC': 0.588034, 'Precision': [nan, 0.5], 'Inference time': 3.52, 'CLL': -0.196943, 'Recall': 0.0, 'Learning time': 8.703, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1,00e-06, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.15184380605671075;  // std dev = 25,199, 3.061,000 (wgt'ed) examples reached here.  /* #neg=2.162 #pos=899 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.13731279537816998;  // std dev = 25,110, 3.010,000 (wgt'ed) examples reached here.  /* #neg=2.111 #pos=899 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.1204596232818915;  // std dev = 25,063, 2.984,000 (wgt'ed) examples reached here.  /* #neg=2.085 #pos=899 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4,50e-07, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.09873042669825437;  // std dev = 25,120, 3.016,000 (wgt'ed) examples reached here.  /* #neg=2.117 #pos=899 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3,10e-07, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.08379420347386725;  // std dev = 25,097, 3.003,000 (wgt'ed) examples reached here.  /* #neg=2.104 #pos=899 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.07068941838139663;  // std dev = 25,072, 2.989,000 (wgt'ed) examples reached here.  /* #neg=2.090 #pos=899 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,62e-07, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.05944610137023007;  // std dev = 25,045, 2.974,000 (wgt'ed) examples reached here.  /* #neg=2.075 #pos=899 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.04875656159687642;  // std dev = 25,038, 2.970,000 (wgt'ed) examples reached here.  /* #neg=2.071 #pos=899 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.041461353309680725;  // std dev = 25,001, 2.950,000 (wgt'ed) examples reached here.  /* #neg=2.051 #pos=899 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.027564044204087004;  // std dev = 25,104, 3.007,000 (wgt'ed) examples reached here.  /* #neg=2.108 #pos=899 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.331688
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 8.016 seconds
Total inference time: 3.878 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575543
   AUC PR    = 0.169428
   CLL	      = -0.333614
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.151086
   F1        = 0.26251


Total scoring time: 7.032 seconds
Parameter learned model CLL: -0.333614


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.199, 2162, 899], 'true': [1e-06, 0, 160]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.11, 2111, 899], 'true': [0.0, 0, 160]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.063, 2085, 899], 'true': [5.53e-07, 0, 160]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.12, 2117, 899], 'true': [4.5e-07, 0, 160]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.097, 2104, 899], 'true': [3.1e-07, 0, 160]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.072, 2090, 899], 'true': [0.0, 0, 160]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.045, 2075, 899], 'true': [2.62e-07, 0, 160]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.038, 2071, 899], 'true': [0.0, 0, 160]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.001, 2051, 899], 'true': [0.0, 0, 160]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.104, 2108, 899], 'true': [9.19e-08, 0, 160]}]]
[{'': [6.306066779870889e-15, 0.20743819373066058]}, {'': [-2.7533531010703883e-15, 0.20946667255326457]}, {'': [1.909583602355269e-15, 0.21050776168157423]}, {'': [1.2656542480726785e-15, 0.20922707100592663]}, {'': [5.995204332975846e-16, 0.20974651943682174]}, {'': [-2.220446049250313e-16, 0.2103072031372505]}, {'': [4.274358644806853e-16, 0.21090936513675362]}, {'': [-3.164135620181696e-16, 0.21107018558196072]}, {'': [-2.3869795029440865e-16, 0.21187578282101396]}, {'': [5.2735593669694933e-17, 0.20958656605380055]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1,00e-06, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2727830814409758;  // std dev = 3,155, 41,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.11396288858788445;  // std dev = 2,861, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else return 0.17191254318659902;  // std dev = 0,464, 2.572,000 (wgt'ed) examples reached here.  /* #neg=1.765 #pos=807 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.038329115279691676;  // std dev = 5,726, 222,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=40 */
%   | | | else return -0.03928696233638519;  // std dev = 1,895, 39,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.07320269854037242;  // std dev = 3,962, 93,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14341673619438527;  // std dev = 0,461, 2.715,000 (wgt'ed) examples reached here.  /* #neg=1.880 #pos=835 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.391540610779912;  // std dev = 1,799, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.14586276093737585;  // std dev = 0,010, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.22768271959110362;  // std dev = 2,373, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.0010682018741114544;  // std dev = 6,397, 330,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=48 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.31558303981420677;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return -0.08767238057301101;  // std dev = 1,651, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else return 0.13734364808103497;  // std dev = 0,467, 2.496,000 (wgt'ed) examples reached here.  /* #neg=1.692 #pos=804 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.19653958616491263;  // std dev = 2,365, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.009315430180004525;  // std dev = 5,448, 253,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=35 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05764103754634116;  // std dev = 3,977, 95,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | | else return -0.12236149882678037;  // std dev = 0,037, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4,50e-07, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11009218451231932;  // std dev = 0,465, 2.635,000 (wgt'ed) examples reached here.  /* #neg=1.800 #pos=835 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.08148047993115984;  // std dev = 2,519, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.008626487532925461;  // std dev = 5,455, 252,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=35 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.09764263361728283;  // std dev = 3,850, 78,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return -0.11251742731801744;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3,10e-07, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09146727771558612;  // std dev = 0,465, 2.636,000 (wgt'ed) examples reached here.  /* #neg=1.801 #pos=835 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.09624643959444872;  // std dev = 2,211, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.12723587927721292;  // std dev = 0,029, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11677888866150547;  // std dev = 2,438, 27,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.007616326003797751;  // std dev = 6,389, 337,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=48 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07821880312610949;  // std dev = 0,466, 2.610,000 (wgt'ed) examples reached here.  /* #neg=1.775 #pos=835 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4151020204057339;  // std dev = 0,806, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06940604229979365;  // std dev = 2,348, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01979581892701726;  // std dev = 5,475, 281,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=35 */
%   | | | else return 0.035504099307238066;  // std dev = 3,883, 93,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,62e-07, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7126842376866953;  // std dev = 5,188, 827,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=799 */
%   | | | else return -0.23464066090606844;  // std dev = 4,930, 1.915,000 (wgt'ed) examples reached here.  /* #neg=1.892 #pos=23 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.18628217551339615;  // std dev = 2,569, 129,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=7 */
%   | | | else return 0.08291903303559461;  // std dev = 4,407, 102,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5841304873167329;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.05697207545567723;  // std dev = 3,910, 85,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | | else return -0.10433959436389298;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5552105349883004;  // std dev = 5,385, 829,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=799 */
%   | | | else return -0.19337680115007705;  // std dev = 4,874, 1.840,000 (wgt'ed) examples reached here.  /* #neg=1.817 #pos=23 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13207054790850736;  // std dev = 2,529, 102,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=7 */
%   | | | else return 0.12240737782009903;  // std dev = 4,218, 86,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.4585547356811685;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.055314833919289805;  // std dev = 3,897, 82,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | | else return -0.13386581408426326;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.41215431969230576;  // std dev = 5,837, 834,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=799 */
%   | | | else return -0.16360221203299005;  // std dev = 4,846, 1.835,000 (wgt'ed) examples reached here.  /* #neg=1.812 #pos=23 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1336433316228372;  // std dev = 2,568, 136,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=7 */
%   | | | else return 0.05951768301058477;  // std dev = 4,368, 97,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.34621557584519635;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.0062416231520892465;  // std dev = 0,399, 100,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return -0.002482600734716905;  // std dev = 13,300, 2.583,000 (wgt'ed) examples reached here.  /* #neg=1.788 #pos=795 */
%   | | | else return -0.03265203671414718;  // std dev = 3,618, 178,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=27 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.04562215285992211;  // std dev = 2,995, 141,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=34 */
%   | | | else return 0.1642870155052006;  // std dev = 1,106, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.29534629250644145;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.01917551815980712;  // std dev = 3,958, 93,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
%   | | | else return -0.0845653629010975;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.951958
   AUC PR    = 0.575165
   CLL	      = -0.18101
   Precision = 0.426389 at threshold = 0.5
   Recall    = 0.834239
   F1        = 0.564338


Total learning time: 1437.812 seconds
Total inference time: 40.476 seconds
AUC ROC: 0.951958


Results scoring model
   AUC ROC   = 0.980131
   AUC PR    = 0.549706
   CLL	      = -0.189987
   Precision = 0.40985 at threshold = 0.5
   Recall    = 0.903683
   F1        = 0.563936


Total scoring time: 658.776 seconds
Refined model CLL: -0.189987


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.951958
   AUC PR    = 0.575165
   CLL	      = -0.18101
   Precision = 0.426389 at threshold = 0.5
   Recall    = 0.834239
   F1        = 0.564338


Total learning time: 2111.636 seconds
Total inference time: 40.476 seconds
AUC ROC: 0.951958
Total revision time: 2111.636
Best scored revision CLL: -0.189987


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 20:25:06
{'AUC PR': 0.575165, 'AUC ROC': 0.951958, 'Precision': [0.426389, 0.5], 'parameter_0.4': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.878, 'CLL': -0.331688, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 8.016}, 'Inference time': 40.476, 'CLL': -0.18101, 'Recall': 0.834239, 'F1': 0.564338, 'Learning time': 2111.636}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21878684738656776;  // std dev = 0,480, 2.759,000 (wgt'ed) examples reached here.  /* #neg=1.764 #pos=995 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.21814893509951236;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.026753586262302342;  // std dev = 4,910, 172,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=29 */
%   | | | else return -0.05229882609451755;  // std dev = 2,337, 67,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.10814893509951233;  // std dev = 3,775, 76,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.17094852363226948;  // std dev = 0,474, 2.913,000 (wgt'ed) examples reached here.  /* #neg=1.918 #pos=995 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.4354668836402711;  // std dev = 1,093, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.09095132050824949;  // std dev = 0,437, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.20652889340578076;  // std dev = 1,974, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.14120018378265706;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.004238662346499753;  // std dev = 4,997, 209,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=29 */
%   | | | else return 0.03928834416902778;  // std dev = 3,911, 98,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=19 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16841009768461898;  // std dev = 0,481, 2.729,000 (wgt'ed) examples reached here.  /* #neg=1.734 #pos=995 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.28753156709416294;  // std dev = 0,943, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14692509116522828;  // std dev = 2,169, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return 0.004856584359533811;  // std dev = 0,867, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.22591496048679455;  // std dev = 1,902, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.12651245405077927;  // std dev = 0,017, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.010419070415530016;  // std dev = 5,016, 220,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=29 */
%   | | | else return 0.047344596344965406;  // std dev = 3,877, 92,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=19 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.775886657307153;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1294580858785877;  // std dev = 0,478, 2.800,000 (wgt'ed) examples reached here.  /* #neg=1.810 #pos=990 */
%   else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | then if ( haswordauthor(G, E) )
%   | | then if ( author(H, G), title(H, F) )
%   | | | then return 0.3913217250604528;  // std dev = 0,762, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1431428118579964;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( haswordtitle(F, I), haswordvenue(B, I) )
%   | | | then return -0.03438111731325026;  // std dev = 3,576, 133,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=15 */
%   | | | else return 0.01897452731415598;  // std dev = 4,093, 125,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=20 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.05173860860643527;  // std dev = 3,844, 86,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   | | | else return -0.06949586078413074;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return -0.13526139272632035;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11719213907473168;  // std dev = 0,481, 2.727,000 (wgt'ed) examples reached here.  /* #neg=1.732 #pos=995 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return -0.06616671473350265;  // std dev = 1,143, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.11867273039863177;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.00836391255865029;  // std dev = 4,902, 186,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=29 */
%   | | | else return -0.03733855640717538;  // std dev = 2,330, 64,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.10315418290599279;  // std dev = 3,694, 68,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return -0.05625699458637425;  // std dev = 0,955, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return -0.1204008809960931;  // std dev = 0,000871, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5863206663749425;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.17748306492961208;  // std dev = 3,065, 38,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return -0.05559964183730544;  // std dev = 2,659, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | else return 0.08675541339231638;  // std dev = 0,479, 2.703,000 (wgt'ed) examples reached here.  /* #neg=1.739 #pos=964 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then return 0.17329338345746167;  // std dev = 1,221, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return 0.06582283072381477;  // std dev = 2,183, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.18202906990025558;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.005432176821360392;  // std dev = 0,342, 253,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=35 */
%   | | else return 0.011471682001222165;  // std dev = 0,393, 98,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7126826534362697;  // std dev = 5,96e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.2873173465637301;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.0089953345562175;  // std dev = 2,457, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.14906064266378555;  // std dev = 1,607, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | else return 0.06015235801817314;  // std dev = 0,476, 2.767,000 (wgt'ed) examples reached here.  /* #neg=1.806 #pos=961 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.6313330052463909;  // std dev = 0,103, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3655700548860679;  // std dev = 0,104, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.052546156145635646;  // std dev = 0,453, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else return -9.289356742138588E-4;  // std dev = 0,357, 352,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=54 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6698310840029467;  // std dev = 0,174, 966,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=937 */
%   | | else return -0.2723453429178796;  // std dev = 0,117, 1.874,000 (wgt'ed) examples reached here.  /* #neg=1.851 #pos=23 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.21240135156819706;  // std dev = 0,250, 105,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=7 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3252096797567674;  // std dev = 3,354, 48,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=30 */
%   | | | else return 0.03689146785161003;  // std dev = 3,176, 70,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6034354862083803;  // std dev = 0,296, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.05651812696599534;  // std dev = 3,836, 81,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | | else return -0.14548908201383143;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10906400756170134;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.5096183101620166;  // std dev = 0,190, 972,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=937 */
%   | | else return -0.2214008757337457;  // std dev = 0,114, 1.909,000 (wgt'ed) examples reached here.  /* #neg=1.886 #pos=23 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.17883141354248155;  // std dev = 0,227, 130,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=7 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.28004320557589013;  // std dev = 3,230, 46,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=30 */
%   | | | else return 0.029642175376339817;  // std dev = 3,223, 65,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.4641370347810469;  // std dev = 0,296, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.00483080057412376;  // std dev = 3,844, 92,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=19 */
%   | | | else return -0.07545762420328961;  // std dev = 0,972, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return -0.0989093882830744;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then return 0.006643901439191445;  // std dev = 0,304, 2.881,000 (wgt'ed) examples reached here.  /* #neg=1.923 #pos=958 */
%   | else if ( title(F, D), venue(F, B) )
%   | | then return -0.07052457219065156;  // std dev = 0,326, 73,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=9 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2921708890629568;  // std dev = 2,837, 41,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=30 */
%   | | | else return 0.05596541502797557;  // std dev = 3,137, 58,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then return 0.2853996028682703;  // std dev = 0,367, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.3203996028682702;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.030420917699736236;  // std dev = 3,767, 82,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | | | else return -0.0144107573268308;  // std dev = 0,954, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.08202905152199418;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.936412
   AUC PR    = 0.358671
   CLL	      = -0.223594
   Precision = 0.421265 at threshold = 0.5
   Recall    = 0.850543
   F1        = 0.563456


Total learning time: 1109.702 seconds
Total inference time: 32.618 seconds
AUC ROC: 0.936412


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 20:44:09
{'AUC PR': 0.358671, 'AUC ROC': 0.936412, 'Precision': [0.421265, 0.5], 'Inference time': 32.618, 'CLL': -0.223594, 'Recall': 0.850543, 'Learning time': 1109.702, 'F1': 0.563456}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08731560176617903;  // std dev = 2,912, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | else return 0.2038323883369173;  // std dev = 0,476, 2.780,000 (wgt'ed) examples reached here.  /* #neg=1.819 #pos=961 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.11740819435877163;  // std dev = 0,438, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( haswordtitle(M, N), haswordvenue(B, N) )
%   | | | then return -0.02280344585286861;  // std dev = 3,635, 126,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=15 */
%   | | | else return 0.013187694789434738;  // std dev = 4,111, 129,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=20 */
%   | | else if ( haswordvenue(B, P), haswordtitle(Q, P) )
%   | | | then return 0.08985625217268306;  // std dev = 3,821, 82,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.604233
   AUC PR    = 0.020546
   CLL	      = -0.195714
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 32.593 seconds
Total inference time: 4.895 seconds
AUC ROC: 0.604233


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 20:44:47
{'AUC PR': 0.020546, 'AUC ROC': 0.604233, 'Precision': [nan, 0.5], 'Inference time': 4.895, 'CLL': -0.195714, 'Recall': 0.0, 'Learning time': 32.593, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.15109571138682867;  // std dev = 30,941, 4.622,000 (wgt'ed) examples reached here.  /* #neg=3.268 #pos=1.354 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.13226122470289775;  // std dev = 30,929, 4.613,000 (wgt'ed) examples reached here.  /* #neg=3.259 #pos=1.354 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.12261345507831044;  // std dev = 30,730, 4.475,000 (wgt'ed) examples reached here.  /* #neg=3.121 #pos=1.354 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.09335990294962171;  // std dev = 30,959, 4.635,000 (wgt'ed) examples reached here.  /* #neg=3.281 #pos=1.354 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.08398861397892815;  // std dev = 30,829, 4.543,000 (wgt'ed) examples reached here.  /* #neg=3.189 #pos=1.354 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.07136821395467897;  // std dev = 30,789, 4.515,000 (wgt'ed) examples reached here.  /* #neg=3.161 #pos=1.354 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.06088589677243108;  // std dev = 30,737, 4.480,000 (wgt'ed) examples reached here.  /* #neg=3.126 #pos=1.354 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9,88e-08, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.04868850135040781;  // std dev = 30,756, 4.493,000 (wgt'ed) examples reached here.  /* #neg=3.139 #pos=1.354 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.034047894527976755;  // std dev = 30,874, 4.574,000 (wgt'ed) examples reached here.  /* #neg=3.220 #pos=1.354 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.03015518045972173;  // std dev = 30,814, 4.532,000 (wgt'ed) examples reached here.  /* #neg=3.178 #pos=1.354 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.328598
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 12.823 seconds
Total inference time: 3.908 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.573946
   AUC PR    = 0.166142
   CLL	      = -0.330589
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147892
   F1        = 0.257675


Total scoring time: 9.262 seconds
Parameter learned model CLL: -0.330589


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.941, 3268, 1354], 'true': [1.08e-06, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.929, 3259, 1354], 'true': [0.0, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.73, 3121, 1354], 'true': [5.33e-07, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.959, 3281, 1354], 'true': [0.0, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.829, 3189, 1354], 'true': [2.92e-07, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.789, 3161, 1354], 'true': [2.95e-07, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.737, 3126, 1354], 'true': [2.92e-07, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.756, 3139, 1354], 'true': [9.88e-08, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.874, 3220, 1354], 'true': [0.0, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.814, 3178, 1354], 'true': [1.03e-07, 0, 235]}]]
[{'': [4.958681219772614e-15, 0.20712896255016638]}, {'': [-4.1725488312720774e-15, 0.2073653149148564]}, {'': [1.209434443846979e-15, 0.21102132892234068]}, {'': [-1.209434443846979e-16, 0.2067880404362019]}, {'': [3.628303331540937e-16, 0.2092125389357051]}, {'': [3.703892984281373e-16, 0.20995569094776226]}, {'': [3.628303331540937e-16, 0.21088787468110456]}, {'': [4.15743090072399e-17, 0.2105412237321217]}, {'': [-1.662972360289596e-16, 0.2083925627426993]}, {'': [4.535379164426171e-17, 0.20950421013187767]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4395442839367207;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.06867525088898606;  // std dev = 3,554, 76,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.21737223607038472;  // std dev = 4,869, 103,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=37 */
%   | | | else return 0.17558799215817314;  // std dev = 28,440, 3.733,000 (wgt'ed) examples reached here.  /* #neg=2.548 #pos=1.185 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.21529179224236947;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.04185106490048778;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.10814893509951236;  // std dev = 2,872, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.004335375777478844;  // std dev = 7,675, 472,000 (wgt'ed) examples reached here.  /* #neg=403 #pos=69 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.37722910237100493;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.02349483523962775;  // std dev = 3,636, 92,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | else return 0.15229143633992426;  // std dev = 0,465, 3.854,000 (wgt'ed) examples reached here.  /* #neg=2.632 #pos=1.222 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.26465289056360225;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return -0.06540394601150354;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0031231271990012585;  // std dev = 6,716, 361,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=53 */
%   | | | else return 0.0379456791689152;  // std dev = 4,704, 149,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12591663140400705;  // std dev = 0,463, 4.037,000 (wgt'ed) examples reached here.  /* #neg=2.774 #pos=1.263 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21495044056534143;  // std dev = 1,336, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.11717006425011052;  // std dev = 2,557, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0047958381286412445;  // std dev = 6,694, 373,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=53 */
%   | | | else return 0.051046292571895364;  // std dev = 4,568, 131,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=26 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2967819526034625;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | | | else return 0.009708828591979145;  // std dev = 3,411, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.11449743194425156;  // std dev = 4,818, 115,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
%   | | | else return 0.10363656458404986;  // std dev = 28,592, 3.821,000 (wgt'ed) examples reached here.  /* #neg=2.636 #pos=1.185 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.31277630373176674;  // std dev = 2,175, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.019771162028358158;  // std dev = 0,945, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.008833366048600619;  // std dev = 6,745, 389,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=53 */
%   | | | else return 0.06794722379923596;  // std dev = 4,582, 121,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=27 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09317825466408343;  // std dev = 0,465, 3.973,000 (wgt'ed) examples reached here.  /* #neg=2.710 #pos=1.263 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.10960107967477367;  // std dev = 2,782, 38,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.013612656467632754;  // std dev = 6,686, 394,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=53 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.017679548724549392;  // std dev = 4,706, 148,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=27 */
%   | | | else return -0.1675362320736629;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07023760053821798;  // std dev = 0,462, 4.054,000 (wgt'ed) examples reached here.  /* #neg=2.791 #pos=1.263 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.162552546435548;  // std dev = 2,384, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return -0.03682908872864978;  // std dev = 0,956, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.05138063185851055;  // std dev = 2,885, 46,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return -0.005142364910150994;  // std dev = 7,679, 487,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=69 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.053431683263523676;  // std dev = 28,311, 3.779,000 (wgt'ed) examples reached here.  /* #neg=2.616 #pos=1.163 */
%   | | | else return 0.0652397650596021;  // std dev = 7,078, 315,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=72 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.14420645737675;  // std dev = 3,657, 170,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=15 */
%   | | | else return 0.17394045953477838;  // std dev = 5,484, 144,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=52 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5039091404303379;  // std dev = 0,429, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.0010549186498016838;  // std dev = 0,880, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.038027776953794;  // std dev = 4,562, 128,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=26 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9,88e-08, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16800851196629948;  // std dev = 4,306, 83,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=37 */
%   | | | else return -0.16672285733298584;  // std dev = 1,812, 40,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | else return 0.04559529562519054;  // std dev = 0,460, 3.947,000 (wgt'ed) examples reached here.  /* #neg=2.725 #pos=1.222 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.10783049091720197;  // std dev = 2,668, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return -0.03691146343827798;  // std dev = 0,902, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.019052351360431815;  // std dev = 6,645, 387,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=53 */
%   | | | else return 0.023710147062006727;  // std dev = 4,594, 133,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=26 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.040076851644595145;  // std dev = 0,461, 4.028,000 (wgt'ed) examples reached here.  /* #neg=2.765 #pos=1.263 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.021270815078888762;  // std dev = 6,068, 227,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=46 */
%   | | | else return -0.0699586572043542;  // std dev = 3,667, 158,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=17 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.015397873322458337;  // std dev = 4,841, 173,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=28 */
%   | | | else return -0.14573737883262142;  // std dev = 0,035, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22205090568079652;  // std dev = 3,004, 40,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | | else return -0.07378838570480974;  // std dev = 3,586, 100,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=16 */
%   | | else return 0.04533977286701564;  // std dev = 0,467, 3.743,000 (wgt'ed) examples reached here.  /* #neg=2.521 #pos=1.222 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.045346268080117096;  // std dev = 2,551, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.11591602760700372;  // std dev = 0,873, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.006117127443972293;  // std dev = 6,645, 359,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=53 */
%   | | | else return 0.01878319791796635;  // std dev = 4,650, 141,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=27 */


Results
   AUC ROC   = 0.723393
   AUC PR    = 0.301908
   CLL	      = -0.302927
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 753.813 seconds
Total inference time: 11.931 seconds
AUC ROC: 0.723393


Results scoring model
   AUC ROC   = 0.651724
   AUC PR    = 0.182962
   CLL	      = -0.326253
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147892
   F1        = 0.257675


Total scoring time: 132.846 seconds
Refined model CLL: -0.326253


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.723393
   AUC PR    = 0.301908
   CLL	      = -0.302927
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 908.744 seconds
Total inference time: 11.931 seconds
AUC ROC: 0.723393
Total revision time: 908.744
Best scored revision CLL: -0.326253


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 21:00:13
{'AUC PR': 0.301908, 'AUC ROC': 0.723393, 'Precision': [1.0, 0.5], 'Inference time': 11.931, 'parameter_0.6': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.908, 'CLL': -0.328598, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 12.823}, 'CLL': -0.302927, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 908.744}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2076589677639962;  // std dev = 0,477, 4.286,000 (wgt'ed) examples reached here.  /* #neg=2.788 #pos=1.498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.5248156017661789;  // std dev = 0,471, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.02524329104889815;  // std dev = 5,399, 283,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=33 */
%   | | | else return 0.05232369238106563;  // std dev = 4,015, 103,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=20 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.05814893509951163;  // std dev = 4,648, 135,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=27 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18483134778560695;  // std dev = 0,478, 4.233,000 (wgt'ed) examples reached here.  /* #neg=2.735 #pos=1.498 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.3413028036952977;  // std dev = 0,962, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19506926984078407;  // std dev = 2,438, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return 0.019300709050511622;  // std dev = 0,911, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.007265646156494212;  // std dev = 5,967, 284,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=43 */
%   | | | else return -0.04743605944076949;  // std dev = 2,997, 101,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.028883178522048646;  // std dev = 4,628, 145,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=26 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1512595281054191;  // std dev = 0,476, 4.306,000 (wgt'ed) examples reached here.  /* #neg=2.808 #pos=1.498 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8030463672929007;  // std dev = 1,368, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | | else return -0.14544480833313847;  // std dev = 1,022, 139,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.21245043175090525;  // std dev = 2,363, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return -0.0754040076952541;  // std dev = 2,560, 104,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.030125062885824658;  // std dev = 4,641, 152,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=26 */
%   | | | else return -0.08562690793576112;  // std dev = 1,374, 37,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=2 */
%   | | else return -0.11449652964282939;  // std dev = 0,014, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13496168396867253;  // std dev = 0,479, 4.201,000 (wgt'ed) examples reached here.  /* #neg=2.703 #pos=1.498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.27080867803222425;  // std dev = 0,490, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.19202435773785362;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1323344477903401;  // std dev = 0,028, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.04551048081601866;  // std dev = 0,916, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.08153252993358723;  // std dev = 2,254, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.00502144892643186;  // std dev = 5,312, 272,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=43 */
%   | | | else return 0.031279002820254365;  // std dev = 4,628, 152,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=26 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10333040986946908;  // std dev = 0,477, 4.291,000 (wgt'ed) examples reached here.  /* #neg=2.793 #pos=1.498 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6429359616704314;  // std dev = 1,673, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return -0.13271969948743884;  // std dev = 1,058, 164,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.06854835418444095;  // std dev = 2,462, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.06276672384853077;  // std dev = 2,553, 98,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0062723537935314684;  // std dev = 4,716, 184,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=26 */
%   | | | else return -0.06815738000376505;  // std dev = 1,365, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else return -0.10428327343068242;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6975376269682874;  // std dev = 0,981, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return -0.2654253359946758;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.7345746640053245;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.08360715417649403;  // std dev = 3,133, 66,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | else return 0.09449539722305812;  // std dev = 0,480, 4.037,000 (wgt'ed) examples reached here.  /* #neg=2.584 #pos=1.453 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then return -0.0012397201118814671;  // std dev = 0,301, 342,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=63 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.008243608534046678;  // std dev = 4,724, 188,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=26 */
%   | | | else return -0.05054880066955763;  // std dev = 1,360, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else return -0.0949365306100311;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7049128135406436;  // std dev = 0,191, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.2842528780528719;  // std dev = 6,32e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.4275183703758381;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.12175988587147159;  // std dev = 3,422, 87,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2158520883384303;  // std dev = 2,690, 46,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | | | else return -0.01867750406799451;  // std dev = 3,038, 52,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else return 0.06896729169253499;  // std dev = 0,478, 4.006,000 (wgt'ed) examples reached here.  /* #neg=2.591 #pos=1.415 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.09391605243489456;  // std dev = 0,336, 34,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else return -0.008656453542070102;  // std dev = 0,307, 533,000 (wgt'ed) examples reached here.  /* #neg=454 #pos=79 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0611145586108851;  // std dev = 0,476, 4.162,000 (wgt'ed) examples reached here.  /* #neg=2.664 #pos=1.498 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7437643969728143;  // std dev = 1,712, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return -0.14478158750266423;  // std dev = 0,606, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.11582579513671583;  // std dev = 0,030, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.0021734011889664754;  // std dev = 2,803, 100,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.2687336133140483;  // std dev = 0,133, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.015664908853042437;  // std dev = 3,310, 133,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=27 */
%   | | | else return -0.08640123733509959;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.042707166123346595;  // std dev = 0,475, 3.852,000 (wgt'ed) examples reached here.  /* #neg=2.486 #pos=1.366 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6236522879154828;  // std dev = 1,993, 75,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=71 */
%   | | | else return -0.1296702133886443;  // std dev = 1,105, 223,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.19140953555259943;  // std dev = 0,272, 186,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=15 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3900493330527462;  // std dev = 3,746, 67,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=47 */
%   | | | else return 0.05673904902459457;  // std dev = 3,038, 89,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.46980679573931405;  // std dev = 0,413, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | else return 0.67143609602239;  // std dev = 0,062, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.0032894181666720634;  // std dev = 0,274, 147,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.030696033430632333;  // std dev = 0,470, 4.241,000 (wgt'ed) examples reached here.  /* #neg=2.743 #pos=1.498 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return -0.02833538078507186;  // std dev = 0,233, 325,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=44 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.05006368083025646;  // std dev = 1,552, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.015649345766236805;  // std dev = 2,294, 73,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.21039813718918174;  // std dev = 0,079, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 6.3499590528492E-4;  // std dev = 3,334, 146,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=27 */
%   | | | else return -0.08254602219065758;  // std dev = 0,024, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.699126
   AUC PR    = 0.050837
   CLL	      = -0.333826
   Precision = 0.142857 at threshold = 0.5
   Recall    = 0.005435
   F1        = 0.010471


Total learning time: 1640.756 seconds
Total inference time: 22.024 seconds
AUC ROC: 0.699126


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 21:27:56
{'AUC PR': 0.050837, 'AUC ROC': 0.699126, 'Precision': [0.142857, 0.5], 'Inference time': 22.024, 'CLL': -0.333826, 'Recall': 0.005435, 'Learning time': 1640.756, 'F1': 0.010471}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20962711435807124;  // std dev = 0,477, 4.262,000 (wgt'ed) examples reached here.  /* #neg=2.764 #pos=1.498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.1914822684328457;  // std dev = 0,471, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else return -0.06492798797741087;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.023571495008015145;  // std dev = 5,394, 279,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=33 */
%   | | | else return 0.05422736647206124;  // std dev = 4,010, 102,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=20 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.08696249442154541;  // std dev = 4,563, 118,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=27 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.597821
   AUC PR    = 0.014206
   CLL	      = -0.195808
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 25.718 seconds
Total inference time: 3.92 seconds
AUC ROC: 0.597821


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 21:28:27
{'AUC PR': 0.014206, 'AUC ROC': 0.597821, 'Precision': [nan, 0.5], 'Inference time': 3.92, 'CLL': -0.195808, 'Recall': 0.0, 'Learning time': 25.718, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.15869811133515369;  // std dev = 35,542, 6.009,000 (wgt'ed) examples reached here.  /* #neg=4.203 #pos=1.806 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.1430890791466188;  // std dev = 35,419, 5.914,000 (wgt'ed) examples reached here.  /* #neg=4.108 #pos=1.806 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.11695933971693197;  // std dev = 35,564, 6.027,000 (wgt'ed) examples reached here.  /* #neg=4.221 #pos=1.806 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.0980504205683912;  // std dev = 35,585, 6.043,000 (wgt'ed) examples reached here.  /* #neg=4.237 #pos=1.806 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.07993630843900308;  // std dev = 35,633, 6.082,000 (wgt'ed) examples reached here.  /* #neg=4.276 #pos=1.806 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.07020577547295634;  // std dev = 35,528, 5.998,000 (wgt'ed) examples reached here.  /* #neg=4.192 #pos=1.806 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,53e-07, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.059830766289037975;  // std dev = 35,468, 5.952,000 (wgt'ed) examples reached here.  /* #neg=4.146 #pos=1.806 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2,60e-07, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.04064668102111162;  // std dev = 35,671, 6.113,000 (wgt'ed) examples reached here.  /* #neg=4.307 #pos=1.806 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.04069101722081386;  // std dev = 35,472, 5.955,000 (wgt'ed) examples reached here.  /* #neg=4.149 #pos=1.806 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.028715914213631528;  // std dev = 35,575, 6.035,000 (wgt'ed) examples reached here.  /* #neg=4.229 #pos=1.806 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.330823
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 23.551 seconds
Total inference time: 3.953 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.573856
   AUC PR    = 0.165951
   CLL	      = -0.332805
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147711
   F1        = 0.257401


Total scoring time: 12.826 seconds
Parameter learned model CLL: -0.332805


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.542, 4203, 1806], 'true': [1.05e-06, 0, 313]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.419, 4108, 1806], 'true': [0.0, 0, 313]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.564, 4221, 1806], 'true': [0.0, 0, 313]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.585, 4237, 1806], 'true': [0.0, 0, 313]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.633, 4276, 1806], 'true': [0.0, 0, 313]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.528, 4192, 1806], 'true': [3.67e-07, 0, 313]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.468, 4146, 1806], 'true': [2.53e-07, 0, 313]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.671, 4307, 1806], 'true': [2.6e-07, 0, 313]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.472, 4149, 1806], 'true': [0.0, 0, 313]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.575, 4229, 1806], 'true': [0.0, 0, 313]}]]
[{'': [3.541363155865036e-15, 0.2102193688996602]}, {'': [-4.994230091604538e-15, 0.21212191564605862]}, {'': [-2.724125504511566e-16, 0.2098605057727395]}, {'': [-8.626397430953293e-16, 0.20954196946262263]}, {'': [-3.859177798058052e-16, 0.2087673655698192]}, {'': [4.3131987154766463e-16, 0.2104389359084434]}, {'': [2.0430941283836746e-16, 0.21135922053845543]}, {'': [2.1565993577383232e-16, 0.20815355196745594]}, {'': [-2.1565993577383232e-16, 0.21129910093970483]}, {'': [-1.7877073623357154e-16, 0.20970118385642328]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17681157204699488;  // std dev = 0,466, 5.294,000 (wgt'ed) examples reached here.  /* #neg=3.607 #pos=1.687 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.2265699877310913;  // std dev = 2,974, 38,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.016519975823494695;  // std dev = 7,676, 442,000 (wgt'ed) examples reached here.  /* #neg=372 #pos=70 */
%   | | else return -0.009775593202375185;  // std dev = 0,339, 265,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=35 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1525782512971334;  // std dev = 0,465, 5.316,000 (wgt'ed) examples reached here.  /* #neg=3.629 #pos=1.687 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.10505082295549045;  // std dev = 1,207, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2044380837229684;  // std dev = 3,016, 40,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1529748833067957;  // std dev = 3,066, 45,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.0014629714026280472;  // std dev = 8,727, 618,000 (wgt'ed) examples reached here.  /* #neg=529 #pos=89 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13157215821697135;  // std dev = 0,466, 5.298,000 (wgt'ed) examples reached here.  /* #neg=3.611 #pos=1.687 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06263284006811634;  // std dev = 6,866, 283,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=60 */
%   | | | else return -0.029607238760335396;  // std dev = 4,498, 195,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.008315587875302084;  // std dev = 5,506, 261,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=35 */
%   | | | else return -0.14500077599754568;  // std dev = 0,030, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3888229274824062;  // std dev = 3,704, 57,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   | | | else return -0.02748812040758827;  // std dev = 4,049, 111,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=20 */
%   | | else return 0.11499520464833678;  // std dev = 0,467, 5.061,000 (wgt'ed) examples reached here.  /* #neg=3.428 #pos=1.633 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.24564408448733555;  // std dev = 2,810, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.00472710598147807;  // std dev = 1,296, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.011734624442391714;  // std dev = 7,644, 511,000 (wgt'ed) examples reached here.  /* #neg=443 #pos=68 */
%   | | | else return 0.025509285122320834;  // std dev = 5,356, 198,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=35 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3128384188561674;  // std dev = 3,953, 63,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=34 */
%   | | | else return 0.03212199838228062;  // std dev = 4,035, 85,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | else return 0.08382821853150044;  // std dev = 0,463, 5.242,000 (wgt'ed) examples reached here.  /* #neg=3.611 #pos=1.631 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.17573292549735128;  // std dev = 2,968, 40,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.005581508578870273;  // std dev = 1,268, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.008130804261236422;  // std dev = 7,519, 425,000 (wgt'ed) examples reached here.  /* #neg=356 #pos=69 */
%   | | | else return -0.009189324276984667;  // std dev = 5,434, 263,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07647852976168754;  // std dev = 0,466, 5.284,000 (wgt'ed) examples reached here.  /* #neg=3.597 #pos=1.687 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19589124498123534;  // std dev = 2,826, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return -0.043686078959683676;  // std dev = 1,333, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.008294347004395632;  // std dev = 7,614, 493,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=68 */
%   | | | else return 0.050918854978200256;  // std dev = 5,256, 170,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=35 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,53e-07, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06241352673300882;  // std dev = 0,465, 5.282,000 (wgt'ed) examples reached here.  /* #neg=3.595 #pos=1.687 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.206638185593633;  // std dev = 2,697, 29,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return -0.04412011013032559;  // std dev = 1,337, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.10181332089803846;  // std dev = 3,104, 48,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return -8.927056318955618E-4;  // std dev = 8,695, 617,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=89 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2,60e-07, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.046319399163273586;  // std dev = 32,547, 4.923,000 (wgt'ed) examples reached here.  /* #neg=3.370 #pos=1.553 */
%   | | | else return 0.060105758272310114;  // std dev = 8,118, 423,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=95 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.14459701275955097;  // std dev = 4,588, 221,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=24 */
%   | | | else return 0.14653427140140163;  // std dev = 6,484, 199,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=71 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.4880752828163642;  // std dev = 0,429, 37,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=28 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05434569839089193;  // std dev = 5,227, 160,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=35 */
%   | | | else return -0.1342782148298759;  // std dev = 0,040, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03629840916137949;  // std dev = 32,563, 4.938,000 (wgt'ed) examples reached here.  /* #neg=3.385 #pos=1.553 */
%   | | | else return 0.04270004491270254;  // std dev = 8,161, 441,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=95 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.1168952998776535;  // std dev = 4,583, 227,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=24 */
%   | | | else return 0.163199472536186;  // std dev = 6,239, 177,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=71 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.4033451757894934;  // std dev = 0,416, 36,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.04886287883193958;  // std dev = 5,239, 156,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=35 */
%   | | | else return -0.11699026467096874;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.17708404034778602;  // std dev = 4,977, 107,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=50 */
%   | | | else return -0.21552644995862233;  // std dev = 1,869, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
%   | | else return 0.032603174933615656;  // std dev = 0,463, 5.140,000 (wgt'ed) examples reached here.  /* #neg=3.507 #pos=1.633 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.0014060724608074334;  // std dev = 6,853, 360,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=59 */
%   | | | else return -0.03777978677437717;  // std dev = 4,420, 160,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=25 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.015987877741416235;  // std dev = 5,339, 174,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=35 */
%   | | | else return -0.10543567439778448;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.724799
   AUC PR    = 0.305903
   CLL	      = -0.304762
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 1716.351 seconds
Total inference time: 15.9 seconds
AUC ROC: 0.724799


Results scoring model
   AUC ROC   = 0.649793
   AUC PR    = 0.187092
   CLL	      = -0.328869
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147711
   F1        = 0.257401


Total scoring time: 297.568 seconds
Refined model CLL: -0.328869


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.724799
   AUC PR    = 0.305903
   CLL	      = -0.304762
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 2050.2960000000003 seconds
Total inference time: 15.9 seconds
AUC ROC: 0.724799
Total revision time: 2050.2960000000003
Best scored revision CLL: -0.328869


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 22:02:59
{'AUC PR': 0.305903, 'AUC ROC': 0.724799, 'Precision': [1.0, 0.5], 'Inference time': 15.9, 'parameter_0.8': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.953, 'CLL': -0.330823, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 23.551}, 'CLL': -0.304762, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 2050.2960000000003}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21269600122253499;  // std dev = 0,478, 5.641,000 (wgt'ed) examples reached here.  /* #neg=3.641 #pos=2.000 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8414822684328459;  // std dev = 0,992, 60,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | | | else return -0.13722143527085878;  // std dev = 0,998, 216,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.35814893509951234;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return -0.0722308117359307;  // std dev = 3,199, 158,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.022328039577123447;  // std dev = 5,252, 201,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=33 */
%   | | | else return -0.09056901361843647;  // std dev = 1,377, 39,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8302364564216608;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.3992019736630412;  // std dev = 3,771, 58,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | | else return -0.026906400721196457;  // std dev = 3,928, 126,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.34538797157317713;  // std dev = 4,060, 66,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=34 */
%   | | | else return 0.056426932612136875;  // std dev = 3,834, 84,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | else return 0.19006829284442067;  // std dev = 0,480, 5.233,000 (wgt'ed) examples reached here.  /* #neg=3.350 #pos=1.883 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then return 0.02002038704314938;  // std dev = 0,338, 486,000 (wgt'ed) examples reached here.  /* #neg=402 #pos=84 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.0030409900174397466;  // std dev = 0,345, 252,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=35 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16149541418185723;  // std dev = 0,479, 5.557,000 (wgt'ed) examples reached here.  /* #neg=3.557 #pos=2.000 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1320824218690143;  // std dev = 0,720, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24557865590654177;  // std dev = 2,684, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.06951726813145459;  // std dev = 5,728, 252,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=59 */
%   | | | else return -0.06324515560802065;  // std dev = 3,194, 152,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.522451545187634;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14421512147903262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.01509673980210867;  // std dev = 0,332, 261,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=33 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6446426268194665;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2882828531161953;  // std dev = 3,940, 63,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=34 */
%   | | | else return 0.01750089754211171;  // std dev = 3,851, 86,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   | else return 0.13281590157814308;  // std dev = 0,479, 5.406,000 (wgt'ed) examples reached here.  /* #neg=3.472 #pos=1.934 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.7577445453545495;  // std dev = 0,125, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13987517954836368;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(L, H) )
%   | | | then return 0.0623973571237633;  // std dev = 2,540, 51,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return -0.13614507718780813;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.0026392900269293935;  // std dev = 0,333, 671,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=103 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1001920333244835;  // std dev = 0,476, 5.716,000 (wgt'ed) examples reached here.  /* #neg=3.716 #pos=2.000 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.21517675008940457;  // std dev = 0,483, 31,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.32090788878597504;  // std dev = 0,915, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12546702150264472;  // std dev = 0,037, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.05284946011425696;  // std dev = 2,539, 52,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return -0.03223364485753189;  // std dev = 6,813, 517,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=56 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.024178152851816626;  // std dev = 4,459, 181,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=35 */
%   | | | else return -0.10922573590461641;  // std dev = 0,012, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.24053127130619334;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.06983716809962634;  // std dev = 5,638, 156,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=54 */
%   | | else return 0.6516566274039738;  // std dev = 0,345, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.2886035133235843;  // std dev = 3,633, 55,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=33 */
%   | | | else return -0.06285039368873875;  // std dev = 3,877, 109,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | else return 0.07716344743813752;  // std dev = 0,476, 5.449,000 (wgt'ed) examples reached here.  /* #neg=3.566 #pos=1.883 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, B) )
%   | | then return -0.06496090396311012;  // std dev = 0,284, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.16551531403742012;  // std dev = 0,465, 36,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | else return 0.007205467884997165;  // std dev = 0,329, 658,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=103 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06947049110810873;  // std dev = 0,476, 5.653,000 (wgt'ed) examples reached here.  /* #neg=3.653 #pos=2.000 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3592046157171106;  // std dev = 0,956, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.13289163430492507;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06310071234323254;  // std dev = 2,471, 46,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return -0.12415412658705435;  // std dev = 0,085, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.38741022775260087;  // std dev = 0,725, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.031148800595508286;  // std dev = 2,761, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01894976244405838;  // std dev = 6,775, 471,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=56 */
%   | | | else return 0.024585975542777187;  // std dev = 4,377, 165,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=33 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06080668571808016;  // std dev = 0,478, 5.558,000 (wgt'ed) examples reached here.  /* #neg=3.558 #pos=2.000 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.48287725760147415;  // std dev = 0,193, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11168274846698771;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08651616346237896;  // std dev = 2,383, 40,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return -0.1371282631642157;  // std dev = 0,134, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.007827422186993194;  // std dev = 6,715, 358,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=57 */
%   | | | else return -0.046181391785775926;  // std dev = 2,988, 135,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01931693676768707;  // std dev = 4,375, 165,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=33 */
%   | | | else return -0.1038442048724485;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03940551493144659;  // std dev = 0,475, 5.201,000 (wgt'ed) examples reached here.  /* #neg=3.376 #pos=1.825 */
%   | | else return 0.03306042536303478;  // std dev = 0,370, 468,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=95 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.16613833954820376;  // std dev = 0,315, 209,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=24 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3315067414467731;  // std dev = 4,673, 96,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=62 */
%   | | | else return 0.06471959547958438;  // std dev = 4,171, 131,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=33 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.5808407498818912;  // std dev = 0,303, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.023667712945466136;  // std dev = 4,248, 163,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=34 */
%   | | | else return -0.06943735965441898;  // std dev = 0,989, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return -0.08637353712987399;  // std dev = 0,034, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.025361519923601552;  // std dev = 0,474, 5.285,000 (wgt'ed) examples reached here.  /* #neg=3.460 #pos=1.825 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7035550840847341;  // std dev = 2,227, 99,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=94 */
%   | | | else return -0.14660473648695546;  // std dev = 1,216, 362,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1493414005710485;  // std dev = 0,302, 233,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=24 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2632294889146329;  // std dev = 4,628, 95,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=62 */
%   | | | else return 0.06834709909698632;  // std dev = 4,090, 125,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=33 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.3534082188463675;  // std dev = 0,400, 35,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | else return 0.5314805055789281;  // std dev = 0,088, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.002224102598351028;  // std dev = 0,314, 195,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */


Results
   AUC ROC   = 0.661342
   AUC PR    = 0.05236
   CLL	      = -0.333257
   Precision = 0.275362 at threshold = 0.5
   Recall    = 0.05163
   F1        = 0.086957


Total learning time: 3531.333 seconds
Total inference time: 20.245 seconds
AUC ROC: 0.661342


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 23:02:11
{'AUC PR': 0.05236, 'AUC ROC': 0.661342, 'Precision': [0.275362, 0.5], 'Inference time': 20.245, 'CLL': -0.333257, 'Recall': 0.05163, 'Learning time': 3531.333, 'F1': 0.086957}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2188992958498679;  // std dev = 0,480, 5.544,000 (wgt'ed) examples reached here.  /* #neg=3.544 #pos=2.000 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.136560059609483;  // std dev = 0,997, 189,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return -0.00412651400228436;  // std dev = 4,453, 167,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=23 */
%   | | | else return -0.10018439823382112;  // std dev = 0,979, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | else return -0.02360782165724507;  // std dev = 0,323, 296,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=35 */


Results
   AUC ROC   = 0.62059
   AUC PR    = 0.019371
   CLL	      = -0.19511
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 72.596 seconds
Total inference time: 3.665 seconds
AUC ROC: 0.62059


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 23:03:28
{'AUC PR': 0.019371, 'AUC ROC': 0.62059, 'Precision': [nan, 0.5], 'Inference time': 3.665, 'CLL': -0.19511, 'Recall': 0.0, 'Learning time': 72.596, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,58e-06, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1538513927154882;  // std dev = 39,808, 7.609,000 (wgt'ed) examples reached here.  /* #neg=5.359 #pos=2.250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1380901051526302;  // std dev = 39,694, 7.507,000 (wgt'ed) examples reached here.  /* #neg=5.257 #pos=2.250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.11674707701941264;  // std dev = 39,744, 7.551,000 (wgt'ed) examples reached here.  /* #neg=5.301 #pos=2.250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.10064160745904906;  // std dev = 39,691, 7.504,000 (wgt'ed) examples reached here.  /* #neg=5.254 #pos=2.250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.07795588122043096;  // std dev = 39,865, 7.661,000 (wgt'ed) examples reached here.  /* #neg=5.411 #pos=2.250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,58e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06524287191337422;  // std dev = 39,843, 7.641,000 (wgt'ed) examples reached here.  /* #neg=5.391 #pos=2.250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.0566283786777153;  // std dev = 39,755, 7.561,000 (wgt'ed) examples reached here.  /* #neg=5.311 #pos=2.250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1,93e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.051081718947105365;  // std dev = 39,614, 7.437,000 (wgt'ed) examples reached here.  /* #neg=5.187 #pos=2.250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.039124223549984946;  // std dev = 39,677, 7.492,000 (wgt'ed) examples reached here.  /* #neg=5.242 #pos=2.250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.023277740904487882;  // std dev = 39,910, 7.703,000 (wgt'ed) examples reached here.  /* #neg=5.453 #pos=2.250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.327056
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 29.421 seconds
Total inference time: 3.719 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.329019
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 13.584 seconds
Parameter learned model CLL: -0.329019


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.808, 5359, 2250], 'true': [1.58e-06, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.694, 5257, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.744, 5301, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.691, 5254, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.865, 5411, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.843, 5391, 2250], 'true': [4.58e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.755, 5311, 2250], 'true': [2.46e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.614, 5187, 2250], 'true': [1.93e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.677, 5242, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.91, 5453, 2250], 'true': [0.0, 0, 399]}]]
[{'': [6.268447192670558e-15, 0.20826251417578412]}, {'': [-5.342426584662407e-15, 0.20988802618200966]}, {'': [-1.2109500258568123e-15, 0.20918540574864156]}, {'': [-1.887657393247384e-15, 0.2099360085423985]}, {'': [-1.6383441526298048e-15, 0.20743838727622652]}, {'': [5.2533861415847e-16, 0.20775498369179024]}, {'': [1.5136875323210153e-16, 0.2090260161671716]}, {'': [9.349246523159212e-17, 0.21101008048082576]}, {'': [-2.62669307079235e-16, 0.21012803406031155]}, {'': [-3.227716061566871e-16, 0.20677509073766456]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,58e-06, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17644087937570338;  // std dev = 0,466, 6.604,000 (wgt'ed) examples reached here.  /* #neg=4.502 #pos=2.102 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.10376297018723167;  // std dev = 3,250, 57,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14386322081379807;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return -0.0021451825475479586;  // std dev = 9,903, 816,000 (wgt'ed) examples reached here.  /* #neg=702 #pos=114 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.43230031671130215;  // std dev = 4,015, 67,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | | else return 0.023255316150197974;  // std dev = 4,506, 133,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.17417428022705678;  // std dev = 6,350, 180,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=61 */
%   | | | else return 0.15139481383057596;  // std dev = 36,761, 6.251,000 (wgt'ed) examples reached here.  /* #neg=4.275 #pos=1.976 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.07659027333839553;  // std dev = 7,586, 334,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=74 */
%   | | | else return -0.006950911810355582;  // std dev = 5,135, 225,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=31 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.01759513252487834;  // std dev = 6,129, 344,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=43 */
%   | | | else return -0.1426183827448297;  // std dev = 0,013, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3657670353178301;  // std dev = 4,219, 72,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=40 */
%   | | | else return 0.020930314358726283;  // std dev = 4,439, 119,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=25 */
%   | | else return 0.13264360583537163;  // std dev = 0,466, 6.378,000 (wgt'ed) examples reached here.  /* #neg=4.341 #pos=2.037 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.19980816024202158;  // std dev = 3,174, 44,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.0422947068322872;  // std dev = 1,224, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.10597080636204874;  // std dev = 3,429, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.0013690832448814824;  // std dev = 9,854, 785,000 (wgt'ed) examples reached here.  /* #neg=671 #pos=114 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.32243710251945634;  // std dev = 4,102, 69,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=40 */
%   | | | else return -0.03361404725272311;  // std dev = 4,601, 162,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.08371167360915875;  // std dev = 6,408, 203,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | | else return 0.10736169957385168;  // std dev = 36,792, 6.274,000 (wgt'ed) examples reached here.  /* #neg=4.298 #pos=1.976 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.27795914639165265;  // std dev = 2,951, 35,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return 0.013597850240464969;  // std dev = 8,574, 538,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=89 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.1222866332303899;  // std dev = 0,943, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.014625129209764312;  // std dev = 6,055, 334,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=42 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.35681177742049974;  // std dev = 3,878, 64,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   | | | else return 0.03904414867363478;  // std dev = 4,339, 102,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | else return 0.08888943830482503;  // std dev = 0,464, 6.472,000 (wgt'ed) examples reached here.  /* #neg=4.435 #pos=2.037 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.06383108410565096;  // std dev = 3,406, 62,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.003974544758768158;  // std dev = 8,628, 590,000 (wgt'ed) examples reached here.  /* #neg=501 #pos=89 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05591758708236606;  // std dev = 5,814, 204,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=43 */
%   | | | else return -0.12368153091504397;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,58e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07061606945741847;  // std dev = 0,463, 6.711,000 (wgt'ed) examples reached here.  /* #neg=4.609 #pos=2.102 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07407671807890889;  // std dev = 3,350, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.09548506831416088;  // std dev = 1,158, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0030487659445608177;  // std dev = 8,662, 617,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=89 */
%   | | | else return 0.037406445492287284;  // std dev = 5,726, 208,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05674117531449129;  // std dev = 0,463, 6.721,000 (wgt'ed) examples reached here.  /* #neg=4.619 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return -0.02355303959521727;  // std dev = 1,227, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.10152714799842144;  // std dev = 3,298, 51,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.013886274973455669;  // std dev = 8,684, 651,000 (wgt'ed) examples reached here.  /* #neg=563 #pos=88 */
%   | | | else return 0.009117414187477347;  // std dev = 5,866, 243,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1,93e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.049735632517969516;  // std dev = 0,464, 6.639,000 (wgt'ed) examples reached here.  /* #neg=4.537 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.14858861001076024;  // std dev = 3,119, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.0023998037736190424;  // std dev = 8,566, 550,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=89 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.12594295953678797;  // std dev = 0,943, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return -0.006107462622631989;  // std dev = 6,034, 320,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04167745583814434;  // std dev = 0,465, 6.606,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1434912193378794;  // std dev = 1,611, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.021334140789712196;  // std dev = 3,127, 51,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.00783266812497103;  // std dev = 8,661, 633,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=88 */
%   | | | else return 0.016928813072815848;  // std dev = 5,836, 229,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.02530228005956412;  // std dev = 36,433, 6.229,000 (wgt'ed) examples reached here.  /* #neg=4.294 #pos=1.935 */
%   | | | else return 0.05612675542917139;  // std dev = 9,157, 548,000 (wgt'ed) examples reached here.  /* #neg=428 #pos=120 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.16215321419123277;  // std dev = 4,976, 287,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=28 */
%   | | | else return 0.15211995302886505;  // std dev = 7,253, 241,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=90 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5067023638224838;  // std dev = 0,407, 43,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=34 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.04151480946865974;  // std dev = 5,805, 200,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=43 */
%   | | | else return -0.11645956156767295;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.724633
   AUC PR    = 0.303125
   CLL	      = -0.30265
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 1279.356 seconds
Total inference time: 11.755 seconds
AUC ROC: 0.724633


Results scoring model
   AUC ROC   = 0.649084
   AUC PR    = 0.181598
   CLL	      = -0.325738
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 218.143 seconds
Refined model CLL: -0.325738


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.724633
   AUC PR    = 0.303125
   CLL	      = -0.30265
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 1540.504 seconds
Total inference time: 11.755 seconds
AUC ROC: 0.724633
Total revision time: 1540.504
Best scored revision CLL: -0.325738


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 23:29:26
{'AUC PR': 0.303125, 'AUC ROC': 0.724633, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Precision': [1.0, 0.5], 'Inference time': 3.719, 'CLL': -0.327056, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 29.421}, 'Inference time': 11.755, 'CLL': -0.30265, 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 1540.504}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21335416162982954;  // std dev = 0,479, 7.041,000 (wgt'ed) examples reached here.  /* #neg=4.540 #pos=2.501 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1273797043302816;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06782635445435108;  // std dev = 3,205, 62,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.014264858003935496;  // std dev = 8,035, 580,000 (wgt'ed) examples reached here.  /* #neg=506 #pos=74 */
%   | | | else return 0.05422736647206044;  // std dev = 5,671, 204,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=40 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.777512093627864;  // std dev = 0,223, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.4210527634843233;  // std dev = 3,994, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.00900546119311861;  // std dev = 4,250, 123,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=22 */
%   | else return 0.1887459823176864;  // std dev = 0,480, 6.754,000 (wgt'ed) examples reached here.  /* #neg=4.332 #pos=2.422 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then return 0.22424750628052847;  // std dev = 0,482, 42,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else return -0.03988901184922916;  // std dev = 0,310, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -7.833451068598081E-4;  // std dev = 0,347, 625,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=88 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.07739459133247197;  // std dev = 5,662, 185,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=42 */
%   | | | else return -0.14395387664936393;  // std dev = 0,021, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15621453928736848;  // std dev = 0,478, 7.055,000 (wgt'ed) examples reached here.  /* #neg=4.554 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.13488199020292557;  // std dev = 1,137, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.22679441900463165;  // std dev = 2,840, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.061743990997878855;  // std dev = 7,484, 335,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=72 */
%   | | | else return -0.06719713423804595;  // std dev = 3,966, 227,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.007521310628103751;  // std dev = 5,878, 276,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=41 */
%   | | | else return -0.09058724437193745;  // std dev = 1,381, 39,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | | else return -0.13052219728940787;  // std dev = 0,025, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7624266369502439;  // std dev = 0,249, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.22414276819795026;  // std dev = 4,21e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.5243346637728251;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.0103908215413558;  // std dev = 4,159, 103,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.32380760095287275;  // std dev = 3,994, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return -0.017018799665491538;  // std dev = 4,254, 124,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=22 */
%   | | else return 0.13764086649408824;  // std dev = 0,481, 6.526,000 (wgt'ed) examples reached here.  /* #neg=4.165 #pos=2.361 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.08261453038750594;  // std dev = 0,414, 72,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | else return 0.004351365347446533;  // std dev = 0,357, 850,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=130 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.515587625202686;  // std dev = 0,113, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.23179046889704163;  // std dev = 3,478, 75,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=39 */
%   | | | else return -0.010234702976335806;  // std dev = 4,162, 104,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=22 */
%   | else return 0.09867086808641722;  // std dev = 0,475, 6.972,000 (wgt'ed) examples reached here.  /* #neg=4.550 #pos=2.422 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.08118355766895118;  // std dev = 1,176, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2155631275715161;  // std dev = 2,766, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | else if ( title(K, H), venue(K, A) )
%   | | | then return 0.05660722121394685;  // std dev = 7,448, 327,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=72 */
%   | | | else return -0.04944079083063416;  // std dev = 3,946, 198,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=17 */
%   | else return -0.01011458534304751;  // std dev = 0,335, 329,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=43 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08470105552167846;  // std dev = 0,475, 7.076,000 (wgt'ed) examples reached here.  /* #neg=4.575 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8072085465385931;  // std dev = 1,027, 74,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=73 */
%   | | | else return -0.1676019611264195;  // std dev = 1,056, 250,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.08659826281098734;  // std dev = 2,988, 40,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.05221871305718005;  // std dev = 3,964, 219,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.009207429217143709;  // std dev = 5,934, 310,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=41 */
%   | | | else return -0.09317395029622984;  // std dev = 1,393, 51,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=2 */
%   | | else return -0.11734329272607709;  // std dev = 0,012, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06920788900683679;  // std dev = 0,475, 7.051,000 (wgt'ed) examples reached here.  /* #neg=4.550 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return 0.032054418484715644;  // std dev = 0,344, 335,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=74 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.13193461799927453;  // std dev = 2,835, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return -0.038352768274036435;  // std dev = 3,947, 198,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=17 */
%   | else return -0.016783398909135237;  // std dev = 0,324, 356,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=43 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06092855370851473;  // std dev = 0,477, 6.933,000 (wgt'ed) examples reached here.  /* #neg=4.432 #pos=2.501 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.35690776244915384;  // std dev = 0,617, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1499191168117208;  // std dev = 0,050, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08623513939350173;  // std dev = 2,523, 46,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.05199891410513932;  // std dev = 0,701, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0075413320896144205;  // std dev = 7,634, 477,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=72 */
%   | | | else return -0.03593052042517466;  // std dev = 3,333, 154,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.010598257220543401;  // std dev = 4,870, 231,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=41 */
%   | | | else return -0.10442645318701978;  // std dev = 0,011, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.037591150948875586;  // std dev = 0,474, 6.515,000 (wgt'ed) examples reached here.  /* #neg=4.234 #pos=2.281 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7109964134849303;  // std dev = 2,757, 126,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=118 */
%   | | | else return -0.14066256482089612;  // std dev = 1,538, 405,000 (wgt'ed) examples reached here.  /* #neg=403 #pos=2 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.18507384346977837;  // std dev = 0,293, 291,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=28 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.351776533118825;  // std dev = 5,088, 118,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=79 */
%   | | | else return 0.08847384164387205;  // std dev = 4,671, 154,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=43 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6090741489046424;  // std dev = 0,257, 59,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 1.2442966373090754E-5;  // std dev = 0,325, 227,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=43 */
%   | | else return -0.09410049491763618;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04511101150069814;  // std dev = 0,476, 6.791,000 (wgt'ed) examples reached here.  /* #neg=4.290 #pos=2.501 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.008988610902805156;  // std dev = 0,595, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.03982589007229503;  // std dev = 2,519, 49,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.14743823482499174;  // std dev = 0,592, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1394212122492262;  // std dev = 0,065, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.007458978275552191;  // std dev = 6,695, 509,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=72 */
%   | | | else return -0.048220053683489035;  // std dev = 3,323, 177,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -8.582074319944734E-5;  // std dev = 4,849, 217,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=41 */
%   | | | else return -0.08916488221563314;  // std dev = 0,012, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.660413
   AUC PR    = 0.053777
   CLL	      = -0.33993
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.005435
   F1        = 0.010811


Total learning time: 2461.976 seconds
Total inference time: 15.291 seconds
AUC ROC: 0.660413


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:10:44
{'AUC PR': 0.053777, 'AUC ROC': 0.660413, 'Precision': [1.0, 0.5], 'Inference time': 15.291, 'CLL': -0.33993, 'Recall': 0.005435, 'Learning time': 2461.976, 'F1': 0.010811}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21650973177524865;  // std dev = 0,480, 6.979,000 (wgt'ed) examples reached here.  /* #neg=4.478 #pos=2.501 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.15602127552504427;  // std dev = 3,135, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.17633075328133055;  // std dev = 3,090, 44,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.03658790700575096;  // std dev = 1,338, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.00656770109792778;  // std dev = 7,999, 547,000 (wgt'ed) examples reached here.  /* #neg=473 #pos=74 */
%   | | | else return 0.0407973369259955;  // std dev = 5,718, 219,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=40 */


Results
   AUC ROC   = 0.597451
   AUC PR    = 0.0142
   CLL	      = -0.196793
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 24.512 seconds
Total inference time: 3.316 seconds
AUC ROC: 0.597451


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 00:11:13
{'AUC PR': 0.0142, 'AUC ROC': 0.597451, 'Precision': [nan, 0.5], 'Inference time': 3.316, 'CLL': -0.196793, 'Recall': 0.0, 'Learning time': 24.512, 'F1': nan}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 185871

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 64082

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.1344228204498259;  // std dev = 15,847, 1.256,000 (wgt'ed) examples reached here.  /* #neg=909 #pos=347 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.11992415990689868;  // std dev = 15,818, 1.244,000 (wgt'ed) examples reached here.  /* #neg=897 #pos=347 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.09141356623791554;  // std dev = 15,947, 1.299,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=347 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,60e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.08981334721903013;  // std dev = 15,816, 1.243,000 (wgt'ed) examples reached here.  /* #neg=896 #pos=347 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.07165654413209041;  // std dev = 15,859, 1.261,000 (wgt'ed) examples reached here.  /* #neg=914 #pos=347 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.06288344019236677;  // std dev = 15,825, 1.247,000 (wgt'ed) examples reached here.  /* #neg=900 #pos=347 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.05775936244129459;  // std dev = 15,763, 1.222,000 (wgt'ed) examples reached here.  /* #neg=875 #pos=347 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 5,58e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.0426925368863658;  // std dev = 15,816, 1.243,000 (wgt'ed) examples reached here.  /* #neg=896 #pos=347 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.03534768690385276;  // std dev = 15,811, 1.241,000 (wgt'ed) examples reached here.  /* #neg=894 #pos=347 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else return 0.03126428269337843;  // std dev = 15,783, 1.230,000 (wgt'ed) examples reached here.  /* #neg=883 #pos=347 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.307428
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 4.009 seconds
Total inference time: 5.45 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.613586
   AUC PR    = 0.2468
   CLL	      = -0.306092
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.227171
   F1        = 0.370236


Total scoring time: 4.225 seconds
Parameter learned model CLL: -0.306092


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.847, 909, 347], 'true': [4.3e-07, 0, 102]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.818, 897, 347], 'true': [0.0, 0, 102]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.947, 952, 347], 'true': [4.3e-07, 0, 102]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.816, 896, 347], 'true': [2.6e-07, 0, 102]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.859, 914, 347], 'true': [0.0, 0, 102]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.825, 900, 347], 'true': [0.0, 0, 102]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.763, 875, 347], 'true': [1.46e-07, 0, 102]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.816, 896, 347], 'true': [5.58e-08, 0, 102]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.811, 894, 347], 'true': [0.0, 0, 102]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.783, 883, 347], 'true': [6.66e-08, 0, 102]}]]
[{'': [1.8111873656630004e-15, 0.19994662562373863]}, {'': [-2.7864421010200007e-16, 0.20113199305218254]}, {'': [1.8111873656630004e-15, 0.19577089263311062]}, {'': [6.617799989922502e-16, 0.20123115836455266]}, {'': [-2.612289469706251e-16, 0.19945526158072083]}, {'': [-4.353815782843751e-17, 0.2008348504735368]}, {'': [2.0898315757650005e-16, 0.20332702955364956]}, {'': [3.047671047990626e-17, 0.20123115836455222]}, {'': [-1.2190684191962504e-16, 0.20142966506308096]}, {'': [4.353815782843751e-17, 0.20252561306100042]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995113;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1590085339533757;  // std dev = 0,459, 1.047,000 (wgt'ed) examples reached here.  /* #neg=732 #pos=315 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.011416282291792;  // std dev = 3,956, 138,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=18 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10814893509951236;  // std dev = 2,872, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13069305703900222;  // std dev = 0,455, 1.075,000 (wgt'ed) examples reached here.  /* #neg=760 #pos=315 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.026337808133204806;  // std dev = 2,878, 59,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | | else return -0.014386389857182493;  // std dev = 2,957, 79,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=10 */
%   | | else return 0.11113410450242217;  // std dev = 0,442, 45,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10889383529987728;  // std dev = 0,454, 1.087,000 (wgt'ed) examples reached here.  /* #neg=772 #pos=315 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.5667489954450127;  // std dev = 1,189, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.04674547480577454;  // std dev = 3,653, 83,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else return -0.016787834500665053;  // std dev = 0,327, 82,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830975;  // std dev = 2,60e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09707459253415748;  // std dev = 0,456, 1.069,000 (wgt'ed) examples reached here.  /* #neg=754 #pos=315 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.17894273500118532;  // std dev = 1,714, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.16027417755367354;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0045517079075508265;  // std dev = 3,711, 115,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   | | | else return 0.003510103412915013;  // std dev = 3,001, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0766180584630308;  // std dev = 0,454, 1.086,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=315 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.1453730256006504;  // std dev = 1,387, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.006212760998652347;  // std dev = 3,744, 108,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   | | else return 0.0859703127639539;  // std dev = 0,438, 45,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.055929067109511454;  // std dev = 0,450, 1.115,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=315 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.003119767327252905;  // std dev = 3,512, 92,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=15 */
%   | | | else return -0.060197879285211246;  // std dev = 2,121, 50,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.053725138482943115;  // std dev = 2,984, 48,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return -0.1812317646970378;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.21801257860056236;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.10609809333619664;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else return 0.061236280214171705;  // std dev = 0,457, 1.031,000 (wgt'ed) examples reached here.  /* #neg=724 #pos=307 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.03809941222723211;  // std dev = 2,859, 75,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=10 */
%   | | | else return 0.00229990581248699;  // std dev = 2,935, 72,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=10 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1992855084901033;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.042818766971671945;  // std dev = 2,984, 49,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 5,58e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06326072890417823;  // std dev = 0,462, 1.014,000 (wgt'ed) examples reached here.  /* #neg=699 #pos=315 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.14207592669414645;  // std dev = 0,704, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.01572766138770734;  // std dev = 1,301, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.025051055651070124;  // std dev = 3,922, 114,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | | | else return 0.007093522439109897;  // std dev = 2,925, 70,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6973472319454115;  // std dev = 3,641, 304,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=289 */
%   | | | else return -0.22024619001326096;  // std dev = 4,678, 802,000 (wgt'ed) examples reached here.  /* #neg=780 #pos=22 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.11810163548501827;  // std dev = 1,850, 31,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return 0.3040598644470815;  // std dev = 2,922, 37,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.07358670004095443;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.06675758270578952;  // std dev = 0,442, 44,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,66e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4089634464870686;  // std dev = 0,739, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0329749217186693;  // std dev = 1,783, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.0159874977945904;  // std dev = 12,294, 1.056,000 (wgt'ed) examples reached here.  /* #neg=754 #pos=302 */
%   | | | else return -0.018044769624082822;  // std dev = 3,640, 95,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.024722252169667256;  // std dev = 0,217, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.06195326790574231;  // std dev = 0,353, 63,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */


Results
   AUC ROC   = 0.972917
   AUC PR    = 0.519363
   CLL	      = -0.253547
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 230.125 seconds
Total inference time: 53.545 seconds
AUC ROC: 0.972917


Results scoring model
   AUC ROC   = 0.939395
   AUC PR    = 0.624703
   CLL	      = -0.249793
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.233853
   F1        = 0.379061


Total scoring time: 106.126 seconds
Refined model CLL: -0.249793


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.972917
   AUC PR    = 0.519363
   CLL	      = -0.253547
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 344.485 seconds
Total inference time: 53.545 seconds
AUC ROC: 0.972917
Total revision time: 344.485
Best scored revision CLL: -0.249793


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:17:58
{'AUC PR': 0.519363, 'AUC ROC': 0.972917, 'Precision': [1.0, 0.5], 'Inference time': 53.545, 'CLL': -0.253547, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 344.485, 'parameter_0.2': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 5.45, 'CLL': -0.307428, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 4.009}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23416336251159045;  // std dev = 0,484, 1.109,000 (wgt'ed) examples reached here.  /* #neg=692 #pos=417 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.028449003044817574;  // std dev = 3,123, 97,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=11 */
%   | | | else return 0.01943925768015746;  // std dev = 2,048, 31,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.07383520960931629;  // std dev = 2,937, 51,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20118030920048444;  // std dev = 0,484, 1.115,000 (wgt'ed) examples reached here.  /* #neg=698 #pos=417 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.32894772518710425;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.023839811399814313;  // std dev = 3,121, 96,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=11 */
%   | | | else return 0.048073784723463284;  // std dev = 2,010, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else return 0.08860889646044855;  // std dev = 0,426, 46,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.08222971665174218;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.05348456906254351;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else return 0.29651543093745647;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.15490703932906913;  // std dev = 0,480, 1.144,000 (wgt'ed) examples reached here.  /* #neg=734 #pos=410 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.7225412068635026;  // std dev = 1,325, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.16257019885178856;  // std dev = 0,194, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.15510978585062193;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.0732765200304328;  // std dev = 1,376, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | else return -0.013052343111248695;  // std dev = 0,327, 82,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1170572949256333;  // std dev = 0,476, 1.204,000 (wgt'ed) examples reached here.  /* #neg=787 #pos=417 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.2941747360812727;  // std dev = 0,463, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.08044957583103851;  // std dev = 2,877, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return -0.07054732465232308;  // std dev = 1,377, 33,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.1110216113243437;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.01887035144053301;  // std dev = 2,907, 65,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=10 */
%   | | | else return -0.13397106092700933;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09149527142898611;  // std dev = 0,474, 1.219,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=417 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.07482154040172732;  // std dev = 3,065, 62,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return -0.08262869071857139;  // std dev = 1,115, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else return 0.16610261328265544;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.026191834759147214;  // std dev = 2,744, 56,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | | else return -0.08849675096917017;  // std dev = 0,962, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else return -0.11917504143514261;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0883507185921093;  // std dev = 0,479, 1.169,000 (wgt'ed) examples reached here.  /* #neg=752 #pos=417 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(B, F) )
%   | | | then return 0.11591860047845007;  // std dev = 1,375, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.017809766230739568;  // std dev = 3,423, 116,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=14 */
%   | | else return 0.2784346477648825;  // std dev = 0,846, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.11042217494780382;  // std dev = 2,348, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return -0.16924244444975636;  // std dev = 0,216, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.10722160603024583;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06233696627608766;  // std dev = 0,476, 1.197,000 (wgt'ed) examples reached here.  /* #neg=780 #pos=417 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6335368958749321;  // std dev = 1,528, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.1456878227321011;  // std dev = 0,643, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.2045783552384307;  // std dev = 0,224, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0838459818716509;  // std dev = 1,684, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.08461422651348297;  // std dev = 2,340, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return -0.12781263661489625;  // std dev = 0,028, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0973816326715121;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05173744899113795;  // std dev = 0,477, 1.190,000 (wgt'ed) examples reached here.  /* #neg=773 #pos=417 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.6287718970081332;  // std dev = 0,245, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.167658923641906;  // std dev = 0,871, 54,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.08753032156237137;  // std dev = 1,212, 34,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | | else return 0.02786802578513825;  // std dev = 1,151, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return 0.007012269023252419;  // std dev = 0,315, 70,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.041674552021259054;  // std dev = 0,477, 1.187,000 (wgt'ed) examples reached here.  /* #neg=770 #pos=417 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( title(H, E), venue(H, A) )
%   | | | then return 0.1184422600404459;  // std dev = 0,868, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.03763700434715387;  // std dev = 2,438, 91,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=17 */
%   | | else return 0.3216206248650574;  // std dev = 0,889, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.028313695203327497;  // std dev = 2,439, 53,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | | else return -0.06120675997338328;  // std dev = 0,953, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else return -0.08491140203000375;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.6075260872415686;  // std dev = 0,367, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.31927686250065473;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(G, C) )
%   | | then if ( author(H, D), title(H, G) )
%   | | | then return -0.06927686250065468;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09365905021842094;  // std dev = 2,018, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else return -0.2689354762529291;  // std dev = 0,094, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.03819669286496812;  // std dev = 0,479, 1.143,000 (wgt'ed) examples reached here.  /* #neg=735 #pos=408 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return -0.03559408653747809;  // std dev = 1,659, 45,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | | else return -0.0204650988225308;  // std dev = 2,673, 86,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=10 */
%   | | else return -5.845556641825592E-4;  // std dev = 0,298, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */


Results
   AUC ROC   = 0.582891
   AUC PR    = 0.039328
   CLL	      = -0.371984
   Precision = 0.714286 at threshold = 0.5
   Recall    = 0.006485
   F1        = 0.012853


Total learning time: 255.60399999999998 seconds
Total inference time: 28.147 seconds
AUC ROC: 0.582891


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:22:42
{'AUC PR': 0.039328, 'AUC ROC': 0.582891, 'Precision': [0.714286, 0.5], 'Inference time': 28.147, 'CLL': -0.371984, 'Recall': 0.006485, 'Learning time': 255.60399999999998, 'F1': 0.012853}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else return 0.2328045824824276;  // std dev = 0,484, 1.089,000 (wgt'ed) examples reached here.  /* #neg=681 #pos=408 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | then if ( haswordauthor(K, J) )
%   | | | then return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.02864351773067639;  // std dev = 2,307, 53,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=6 */
%   | | else if ( title(L, I), venue(L, B) )
%   | | | then return 0.008148935099512346;  // std dev = 2,766, 60,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | else return -0.08629550934493224;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.11396288858788445;  // std dev = 0,436, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */


Results
   AUC ROC   = 0.562583
   AUC PR    = 0.018883
   CLL	      = -0.203676
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 22.189 seconds
Total inference time: 7.371 seconds
AUC ROC: 0.562583


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 00:23:12
{'AUC PR': 0.018883, 'AUC ROC': 0.562583, 'Precision': [nan, 0.5], 'Inference time': 7.371, 'CLL': -0.203676, 'Recall': 0.0, 'Learning time': 22.189, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1,09e-06, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else return 0.1416258340814963;  // std dev = 22,776, 2.554,000 (wgt'ed) examples reached here.  /* #neg=1.830 #pos=724 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else return 0.11891023435320862;  // std dev = 22,849, 2.596,000 (wgt'ed) examples reached here.  /* #neg=1.872 #pos=724 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,78e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else return 0.11148865340747816;  // std dev = 22,703, 2.513,000 (wgt'ed) examples reached here.  /* #neg=1.789 #pos=724 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830947;  // std dev = 3,95e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else return 0.09377326856440883;  // std dev = 22,717, 2.521,000 (wgt'ed) examples reached here.  /* #neg=1.797 #pos=724 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014917;  // std dev = 3,91e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else return 0.08009602676707385;  // std dev = 22,695, 2.509,000 (wgt'ed) examples reached here.  /* #neg=1.785 #pos=724 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694908;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else return 0.06749402342963005;  // std dev = 22,681, 2.501,000 (wgt'ed) examples reached here.  /* #neg=1.777 #pos=724 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325351;  // std dev = 2,83e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else return 0.06346516381574611;  // std dev = 22,555, 2.435,000 (wgt'ed) examples reached here.  /* #neg=1.711 #pos=724 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else return 0.04290329018293389;  // std dev = 22,699, 2.511,000 (wgt'ed) examples reached here.  /* #neg=1.787 #pos=724 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else return 0.036720422429048556;  // std dev = 22,670, 2.495,000 (wgt'ed) examples reached here.  /* #neg=1.771 #pos=724 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,88e-08, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else return 0.02947715259579295;  // std dev = 22,673, 2.497,000 (wgt'ed) examples reached here.  /* #neg=1.773 #pos=724 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.319658
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 6.399 seconds
Total inference time: 5.487 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.596882
   AUC PR    = 0.212825
   CLL	      = -0.318838
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.193764
   F1        = 0.324627


Total scoring time: 6.704 seconds
Parameter learned model CLL: -0.318838


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.776, 1830, 724], 'true': [1.09e-06, 0, 174]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.849, 1872, 724], 'true': [0.0, 0, 174]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.703, 1789, 724], 'true': [5.78e-07, 0, 174]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.717, 1797, 724], 'true': [3.95e-07, 0, 174]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.695, 1785, 724], 'true': [3.91e-07, 0, 174]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.681, 1777, 724], 'true': [0.0, 0, 174]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.555, 1711, 724], 'true': [2.83e-07, 0, 174]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.699, 1787, 724], 'true': [0.0, 0, 174]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.67, 1771, 724], 'true': [0.0, 0, 174]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.673, 1773, 724], 'true': [9.88e-08, 0, 174]}]]
[{'': [6.860412621132002e-15, 0.20311774672556918]}, {'': [-3.103519995274001e-15, 0.20111063364044124]}, {'': [1.9192821023405005e-15, 0.2050991826188629]}, {'': [8.983873670530003e-16, 0.20471089260368056]}, {'': [8.779694723472502e-16, 0.20529362529252498]}, {'': [-2.8585052588050007e-16, 0.20568310061022382]}, {'': [4.594026308793752e-16, 0.20892511247254653]}, {'': [-3.266863152920001e-16, 0.2051963792606065]}, {'': [-2.5522368382187505e-16, 0.20597571897300185]}, {'': [5.614921044081252e-17, 0.20587813105002264]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1,09e-06, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16019904899472368;  // std dev = 0,459, 2.195,000 (wgt'ed) examples reached here.  /* #neg=1.532 #pos=663 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.03073776758682107;  // std dev = 5,304, 197,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=34 */
%   | | | else return 0.24276431971489695;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0010060779566549612;  // std dev = 4,342, 154,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=22 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1468872256781661;  // std dev = 0,462, 2.143,000 (wgt'ed) examples reached here.  /* #neg=1.480 #pos=663 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1768403336943258;  // std dev = 2,469, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.14511116963293375;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02133586851833047;  // std dev = 5,364, 266,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=33 */
%   | | | else return 0.05606606377391358;  // std dev = 3,891, 95,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=19 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,78e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17365806123619215;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.02132263374450284;  // std dev = 2,242, 37,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | else return 0.1274355665158302;  // std dev = 0,463, 2.097,000 (wgt'ed) examples reached here.  /* #neg=1.445 #pos=652 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.19161823003994324;  // std dev = 0,480, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.013445182476104737;  // std dev = 5,350, 254,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=33 */
%   | | | else return 0.03599366404159491;  // std dev = 3,925, 101,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=19 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830947;  // std dev = 3,95e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10668335684076764;  // std dev = 0,462, 2.141,000 (wgt'ed) examples reached here.  /* #neg=1.478 #pos=663 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5211283232695266;  // std dev = 0,811, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09094721220452932;  // std dev = 1,939, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.08265195078068686;  // std dev = 2,395, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.0052173510503167216;  // std dev = 6,227, 305,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=46 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014917;  // std dev = 3,91e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08110473373670479;  // std dev = 0,459, 2.196,000 (wgt'ed) examples reached here.  /* #neg=1.533 #pos=663 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.45671551561632523;  // std dev = 0,818, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10965170545835924;  // std dev = 2,177, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.005717279297675503;  // std dev = 5,311, 240,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=33 */
%   | | | else return 0.04865002504533705;  // std dev = 3,862, 92,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=19 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694908;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07353581607600844;  // std dev = 0,462, 2.148,000 (wgt'ed) examples reached here.  /* #neg=1.485 #pos=663 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1423558807234331;  // std dev = 2,364, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.17715496143146134;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.015345045314228797;  // std dev = 5,342, 260,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=33 */
%   | | | else return 0.04386541100445802;  // std dev = 3,858, 91,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325351;  // std dev = 2,83e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.07639979069522287;  // std dev = 2,584, 50,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
%   | | | else return 3.785725895149199E-4;  // std dev = 1,513, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.018643311608126167;  // std dev = 3,730, 71,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | | else return 0.06627672163000223;  // std dev = 20,820, 2.008,000 (wgt'ed) examples reached here.  /* #neg=1.375 #pos=633 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.007832133957566332;  // std dev = 4,980, 196,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=30 */
%   | | | else return -0.020572499065979508;  // std dev = 3,116, 74,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.04697983590902548;  // std dev = 3,843, 86,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   | | | else return -0.14450173088181326;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0476497526589505;  // std dev = 0,461, 2.153,000 (wgt'ed) examples reached here.  /* #neg=1.490 #pos=663 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19437136694275708;  // std dev = 1,888, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.07623021671395197;  // std dev = 0,825, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.012885020450995203;  // std dev = 5,484, 262,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=36 */
%   | | | else return 0.025543437426408577;  // std dev = 3,782, 90,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6949980471076086;  // std dev = 5,020, 643,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=617 */
%   | | | else return -0.23348479337928466;  // std dev = 6,195, 1.561,000 (wgt'ed) examples reached here.  /* #neg=1.523 #pos=38 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1516686018114113;  // std dev = 3,254, 119,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=12 */
%   | | | else return 0.16301477860837282;  // std dev = 4,235, 81,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.1495502191219348;  // std dev = 4,049, 75,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | | else return -0.19602713442452635;  // std dev = 0,097, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.1510399217251195;  // std dev = 0,130, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,88e-08, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.029669407232842417;  // std dev = 0,385, 2.100,000 (wgt'ed) examples reached here.  /* #neg=1.437 #pos=663 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.09546178094087489;  // std dev = 1,693, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.03136516835762837;  // std dev = 5,056, 221,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=33 */
%   | | else return 0.011098551680628906;  // std dev = 0,315, 146,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=22 */


Results
   AUC ROC   = 0.973145
   AUC PR    = 0.489618
   CLL	      = -0.262366
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 378.412 seconds
Total inference time: 39.147 seconds
AUC ROC: 0.973145


Results scoring model
   AUC ROC   = 0.95247
   AUC PR    = 0.592198
   CLL	      = -0.258108
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.194878
   F1        = 0.326188


Total scoring time: 157.96 seconds
Refined model CLL: -0.258108


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.973145
   AUC PR    = 0.489618
   CLL	      = -0.262366
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 549.475 seconds
Total inference time: 39.147 seconds
AUC ROC: 0.973145
Total revision time: 549.475
Best scored revision CLL: -0.258108


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:33:08
{'AUC PR': 0.489618, 'AUC ROC': 0.973145, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 5.487, 'CLL': -0.319658, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 6.399}, 'Inference time': 39.147, 'CLL': -0.262366, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 549.475}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20835814012042778;  // std dev = 0,477, 2.390,000 (wgt'ed) examples reached here.  /* #neg=1.553 #pos=837 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.15226658215833588;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.11269438964496588;  // std dev = 4,569, 110,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=28 */
%   | | | else return -0.061205903610165126;  // std dev = 2,144, 62,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0010060779566551093;  // std dev = 4,140, 140,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.8308469758700631;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.2708469758700631;  // std dev = 2,482, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return -0.0091530241299371;  // std dev = 2,592, 50,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
%   | else return 0.1849496524826055;  // std dev = 0,478, 2.279,000 (wgt'ed) examples reached here.  /* #neg=1.472 #pos=807 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.35146649726695056;  // std dev = 0,987, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1836813934540769;  // std dev = 2,140, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return -0.007157242704287014;  // std dev = 0,342, 242,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=33 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.020678473478790305;  // std dev = 0,882, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.05282684347220794;  // std dev = 0,404, 87,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6815262868272107;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.2761025686555612;  // std dev = 3,080, 39,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | | else return -0.11707227348213214;  // std dev = 0,934, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else return 0.1656145961878581;  // std dev = 0,481, 2.227,000 (wgt'ed) examples reached here.  /* #neg=1.420 #pos=807 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.2081163291587786;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return 0.16900893903492994;  // std dev = 1,807, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.16044905785691232;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.06362482311894328;  // std dev = 0,426, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else return 0.0016007218491497443;  // std dev = 0,354, 311,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=46 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12939523321531224;  // std dev = 0,477, 2.361,000 (wgt'ed) examples reached here.  /* #neg=1.524 #pos=837 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.4681204725386814;  // std dev = 0,747, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14500717066324048;  // std dev = 0,469, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.014350657503862507;  // std dev = 4,826, 178,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=28 */
%   | | | else return -0.04916247700220972;  // std dev = 2,122, 50,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.09657166021160817;  // std dev = 3,734, 73,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return -0.14873385070380576;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10499519025917627;  // std dev = 0,476, 2.368,000 (wgt'ed) examples reached here.  /* #neg=1.531 #pos=837 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.10005098242905212;  // std dev = 2,299, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 8.347501554468929E-4;  // std dev = 4,594, 156,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=26 */
%   | | else return 0.17691002345884374;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.02113459562934688;  // std dev = 0,787, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.20969138314541916;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01185950057111525;  // std dev = 4,196, 136,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=21 */
%   | | | else return -0.13086863961894865;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08983979048386691;  // std dev = 0,478, 2.336,000 (wgt'ed) examples reached here.  /* #neg=1.499 #pos=837 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.18251484736294304;  // std dev = 0,970, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08667727447539464;  // std dev = 2,163, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.0016705367139466067;  // std dev = 4,838, 187,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=28 */
%   | | | else return -0.05615241569979937;  // std dev = 2,134, 58,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07375042693635843;  // std dev = 3,762, 75,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | | else return -0.1652198638547428;  // std dev = 0,034, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11668861078393675;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07921262302649101;  // std dev = 0,480, 2.288,000 (wgt'ed) examples reached here.  /* #neg=1.451 #pos=837 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7412948006844841;  // std dev = 1,631, 33,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | | else return -0.14659528701232438;  // std dev = 0,266, 151,000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1433279473421896;  // std dev = 2,060, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.014817728555398249;  // std dev = 2,098, 40,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.01537093584474259;  // std dev = 3,888, 91,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=19 */
%   | | | else return -0.15501089870719428;  // std dev = 0,046, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10419528162353343;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06691627091080475;  // std dev = 0,481, 2.264,000 (wgt'ed) examples reached here.  /* #neg=1.427 #pos=837 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.38317146530289875;  // std dev = 0,722, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.11154075320812529;  // std dev = 1,442, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.12630250794280104;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.027457628652247424;  // std dev = 4,733, 254,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=33 */
%   | | | else return 0.09190757245541256;  // std dev = 1,516, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01584310374937962;  // std dev = 3,764, 91,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=18 */
%   | | | else return -0.10996069055445314;  // std dev = 0,043, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordvenue(B, C), haswordauthor(E, C) )
%   | then return 0.40345481003661837;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( title(F, D), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6545380139180764;  // std dev = 4,656, 782,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=760 */
%   | | | else return -0.27109521496849953;  // std dev = 6,389, 1.568,000 (wgt'ed) examples reached here.  /* #neg=1.530 #pos=38 */
%   | | else if ( title(H, D), venue(H, A) )
%   | | | then return -0.18760668755116353;  // std dev = 3,281, 125,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=12 */
%   | | | else return 0.15791505078323706;  // std dev = 4,904, 108,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=45 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.7679573806030272;  // std dev = 0,300, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.1930910342594972;  // std dev = 0,062, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.13668009107995882;  // std dev = 0,045, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.3817972704207986;  // std dev = 0,383, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.025351994683600932;  // std dev = 0,389, 2.335,000 (wgt'ed) examples reached here.  /* #neg=1.498 #pos=837 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return -0.02788762075072961;  // std dev = 0,577, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0727711108937567;  // std dev = 2,306, 34,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else return -0.17689596644725866;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.0018765225190948923;  // std dev = 3,324, 187,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=28 */
%   | | | else return -0.0631274196233214;  // std dev = 2,117, 70,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.025024612899845946;  // std dev = 3,115, 83,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | | | else return -0.12080170430505666;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.97861
   AUC PR    = 0.361501
   CLL	      = -0.298083
   Precision = 0.3875 at threshold = 0.5
   Recall    = 0.040208
   F1        = 0.072855


Total learning time: 556.237 seconds
Total inference time: 47.728 seconds
AUC ROC: 0.97861


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:43:12
{'AUC PR': 0.361501, 'AUC ROC': 0.97861, 'Precision': [0.3875, 0.5], 'Inference time': 47.728, 'CLL': -0.298083, 'Recall': 0.040208, 'Learning time': 556.237, 'F1': 0.072855}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.15226658215833588;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.024204006076958332;  // std dev = 1,879, 34,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.2812258581764354;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.06327714022771751;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else return 0.2262301159113154;  // std dev = 0,482, 2.168,000 (wgt'ed) examples reached here.  /* #neg=1.370 #pos=798 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, A) )
%   | | then if ( title(N, L), venue(N, B) )
%   | | | then return 0.8236661764788221;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return -0.1315417865499722;  // std dev = 0,995, 97,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=1 */
%   | | else if ( haswordauthor(P, K) )
%   | | | then return 0.1914822684328457;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.0733579142155562;  // std dev = 2,158, 73,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=5 */
%   | else if ( haswordvenue(A, Q), haswordtitle(R, Q) )
%   | | then if ( title(S, R), venue(S, B) )
%   | | | then return 0.011995088945666102;  // std dev = 4,114, 130,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=20 */
%   | | | else return -0.07935106490048778;  // std dev = 1,369, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.582585
   AUC PR    = 0.027948
   CLL	      = -0.200386
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 55.409 seconds
Total inference time: 7.227 seconds
AUC ROC: 0.582585


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 00:44:15
{'AUC PR': 0.027948, 'AUC ROC': 0.582585, 'Precision': [nan, 0.5], 'Inference time': 7.227, 'CLL': -0.200386, 'Recall': 0.0, 'Learning time': 55.409, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.14721754976165172;  // std dev = 28,066, 3.833,000 (wgt'ed) examples reached here.  /* #neg=2.725 #pos=1.108 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.1339476030742444;  // std dev = 27,955, 3.760,000 (wgt'ed) examples reached here.  /* #neg=2.652 #pos=1.108 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,06e-07, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.11256093465918506;  // std dev = 28,004, 3.792,000 (wgt'ed) examples reached here.  /* #neg=2.684 #pos=1.108 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.09239710148158366;  // std dev = 28,063, 3.831,000 (wgt'ed) examples reached here.  /* #neg=2.723 #pos=1.108 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,73e-07, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.079663399795374;  // std dev = 28,018, 3.801,000 (wgt'ed) examples reached here.  /* #neg=2.693 #pos=1.108 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2,98e-07, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.06544516624741699;  // std dev = 28,030, 3.809,000 (wgt'ed) examples reached here.  /* #neg=2.701 #pos=1.108 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.057289991998241564;  // std dev = 27,961, 3.764,000 (wgt'ed) examples reached here.  /* #neg=2.656 #pos=1.108 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1,15e-07, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.042305176376881935;  // std dev = 28,050, 3.822,000 (wgt'ed) examples reached here.  /* #neg=2.714 #pos=1.108 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.03335748785756947;  // std dev = 28,069, 3.835,000 (wgt'ed) examples reached here.  /* #neg=2.727 #pos=1.108 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,88e-08, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.024272762620692955;  // std dev = 28,122, 3.871,000 (wgt'ed) examples reached here.  /* #neg=2.763 #pos=1.108 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.320299
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 10.992 seconds
Total inference time: 5.421 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.588716
   AUC PR    = 0.196191
   CLL	      = -0.319712
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.177431
   F1        = 0.301387


Total scoring time: 8.55 seconds
Parameter learned model CLL: -0.319712


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.066, 2725, 1108], 'true': [1.08e-06, 0, 239]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.955, 2652, 1108], 'true': [0.0, 0, 239]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.004, 2684, 1108], 'true': [5.06e-07, 0, 239]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.063, 2723, 1108], 'true': [0.0, 0, 239]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.018, 2693, 1108], 'true': [2.73e-07, 0, 239]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.03, 2701, 1108], 'true': [2.98e-07, 0, 239]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.961, 2656, 1108], 'true': [2.92e-07, 0, 239]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.05, 2714, 1108], 'true': [1.15e-07, 0, 239]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.069, 2727, 1108], 'true': [0.0, 0, 239]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.122, 2763, 1108], 'true': [9.88e-08, 0, 239]}]]
[{'': [4.875690739106964e-15, 0.20550795067947916]}, {'': [-4.221634664348712e-15, 0.20784404708012247]}, {'': [1.0702735768771384e-15, 0.20681670494402468]}, {'': [-1.7837892947952306e-16, 0.20557159132847985]}, {'': [3.1216312658916533e-16, 0.2065286825127567]}, {'': [3.7162276974900636e-16, 0.2062730068019971]}, {'': [3.567578589590461e-16, 0.20771535470550173]}, {'': [5.574341546235095e-17, 0.20585823187304467]}, {'': [-1.7094647408454293e-16, 0.20544433093256986]}, {'': [4.08785046723907e-17, 0.20430279243928026]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17729787126972;  // std dev = 0,466, 3.196,000 (wgt'ed) examples reached here.  /* #neg=2.176 #pos=1.020 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0019845515378679535;  // std dev = 5,997, 292,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=42 */
%   | | | else return 0.022854817452453553;  // std dev = 3,420, 85,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.08350104777556756;  // std dev = 4,979, 142,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=32 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10543771960547602;  // std dev = 3,820, 74,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | | else return 0.6351674493352057;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.14419630443917147;  // std dev = 0,462, 3.223,000 (wgt'ed) examples reached here.  /* #neg=2.227 #pos=996 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.020705531560991752;  // std dev = 6,075, 346,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=42 */
%   | | | else return 0.02201066237831275;  // std dev = 3,416, 84,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.09767732944415698;  // std dev = 4,899, 128,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=32 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,06e-07, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.1030309616480881;  // std dev = 4,621, 104,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=30 */
%   | | | else return 0.7714737443267965;  // std dev = 0,086, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1311231464990685;  // std dev = 0,465, 3.113,000 (wgt'ed) examples reached here.  /* #neg=2.127 #pos=986 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.4536939100934953;  // std dev = 1,091, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05079181290203443;  // std dev = 2,372, 35,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0058995242039799915;  // std dev = 6,378, 348,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=47 */
%   | | | else return 0.04238988738192881;  // std dev = 4,950, 151,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=31 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11466913241565259;  // std dev = 0,466, 3.178,000 (wgt'ed) examples reached here.  /* #neg=2.158 #pos=1.020 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.27562545908673536;  // std dev = 1,317, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08692513693799545;  // std dev = 2,134, 26,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.011895570341006667;  // std dev = 6,454, 368,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=48 */
%   | | | else return 0.04577214446381271;  // std dev = 4,906, 145,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=31 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,73e-07, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08033334294250119;  // std dev = 0,460, 3.333,000 (wgt'ed) examples reached here.  /* #neg=2.313 #pos=1.020 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.0573774799692918;  // std dev = 2,634, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | | else return -0.009180278478203309;  // std dev = 6,383, 358,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=47 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04630063899357904;  // std dev = 4,966, 142,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=32 */
%   | | | else return -0.12151111846931258;  // std dev = 0,000848, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2,98e-07, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06837704319763895;  // std dev = 0,461, 3.307,000 (wgt'ed) examples reached here.  /* #neg=2.287 #pos=1.020 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.06541746754436288;  // std dev = 2,619, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return -0.012992049840206178;  // std dev = 6,400, 373,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=47 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04393566427686246;  // std dev = 4,952, 139,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=32 */
%   | | | else return -0.10961454237468167;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,92e-07, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06039943134217855;  // std dev = 0,463, 3.257,000 (wgt'ed) examples reached here.  /* #neg=2.237 #pos=1.020 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.029479342771226484;  // std dev = 4,574, 207,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=24 */
%   | | | else return 0.012563989678942166;  // std dev = 5,203, 212,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=32 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.10181417927353498;  // std dev = 0,893, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.051730184561636146;  // std dev = 4,831, 129,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=31 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1,15e-07, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04342111985947706;  // std dev = 0,461, 3.315,000 (wgt'ed) examples reached here.  /* #neg=2.295 #pos=1.020 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.30494918354733597;  // std dev = 1,226, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.006924503044063653;  // std dev = 2,234, 38,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.007945361314228289;  // std dev = 6,437, 367,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=48 */
%   | | | else return 0.02834155740382351;  // std dev = 4,877, 138,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=31 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2867325312072978;  // std dev = 2,777, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return -0.040036633705921136;  // std dev = 3,391, 68,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | else return 0.045712948648458686;  // std dev = 0,466, 3.096,000 (wgt'ed) examples reached here.  /* #neg=2.110 #pos=986 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12216956682165254;  // std dev = 2,513, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.018087473176247513;  // std dev = 0,806, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.012204231896951736;  // std dev = 6,392, 378,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=47 */
%   | | | else return -0.0042780057163481315;  // std dev = 4,957, 158,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=31 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,88e-08, 239,000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6804710408423397;  // std dev = 6,191, 978,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=938 */
%   | | | else return -0.24716727700274427;  // std dev = 7,810, 2.246,000 (wgt'ed) examples reached here.  /* #neg=2.184 #pos=62 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1638386761655732;  // std dev = 3,982, 160,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=18 */
%   | | | else return 0.05963381976156886;  // std dev = 5,324, 173,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.09232937128345126;  // std dev = 5,377, 174,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=42 */
%   | | | else return -0.011274447195415717;  // std dev = 1,864, 34,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else return -0.14103720157351107;  // std dev = 0,070, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.970917
   AUC PR    = 0.503867
   CLL	      = -0.26599
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 570.66 seconds
Total inference time: 39.37 seconds
AUC ROC: 0.970917


Results scoring model
   AUC ROC   = 0.945842
   AUC PR    = 0.601324
   CLL	      = -0.260733
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.179659
   F1        = 0.304594


Total scoring time: 250.216 seconds
Refined model CLL: -0.260733


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.970917
   AUC PR    = 0.503867
   CLL	      = -0.26599
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 840.418 seconds
Total inference time: 39.37 seconds
AUC ROC: 0.970917
Total revision time: 840.418
Best scored revision CLL: -0.260733


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:59:02
{'AUC PR': 0.503867, 'AUC ROC': 0.970917, 'Precision': [1.0, 0.5], 'Inference time': 39.37, 'parameter_0.6': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 5.421, 'CLL': -0.320299, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 10.992}, 'CLL': -0.26599, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 840.418}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3733004502510275;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.07126368919787303;  // std dev = 3,198, 61,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | else return 0.22722548430971376;  // std dev = 0,483, 3.292,000 (wgt'ed) examples reached here.  /* #neg=2.077 #pos=1.215 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return -0.0027782172183689912;  // std dev = 0,346, 302,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=42 */
%   | | else return -0.023206997103877493;  // std dev = 0,323, 118,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=14 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.09070707463439502;  // std dev = 4,798, 129,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=30 */
%   | | | else return -0.04661296966239256;  // std dev = 1,345, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20150646380095472;  // std dev = 0,483, 3.369,000 (wgt'ed) examples reached here.  /* #neg=2.110 #pos=1.259 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.35910271606190824;  // std dev = 0,999, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.060809713195223075;  // std dev = 2,367, 35,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.022114280336043127;  // std dev = 6,081, 353,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=42 */
%   | | | else return 0.0990457345591883;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.10098183905080461;  // std dev = 4,730, 118,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=30 */
%   | | | else return -0.025159952733139326;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15906254414449827;  // std dev = 0,480, 3.479,000 (wgt'ed) examples reached here.  /* #neg=2.220 #pos=1.259 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.475689845318777;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09453410140927744;  // std dev = 2,306, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return -0.029354089333185236;  // std dev = 3,764, 143,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=16 */
%   | | | else return 0.011652278341792676;  // std dev = 5,133, 206,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07127200901124993;  // std dev = 4,781, 126,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=30 */
%   | | | else return -0.046380192151164935;  // std dev = 1,351, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11580340346663091;  // std dev = 0,475, 3.644,000 (wgt'ed) examples reached here.  /* #neg=2.385 #pos=1.259 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return -0.024775083778236853;  // std dev = 1,224, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.053078996431020715;  // std dev = 2,349, 33,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -5.015737093976565E-4;  // std dev = 5,869, 290,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=40 */
%   | | | else return -0.05970225984125025;  // std dev = 2,528, 85,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.08852060753274323;  // std dev = 4,694, 113,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=30 */
%   | | | else return -0.022804501725108034;  // std dev = 1,338, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6143130575599179;  // std dev = 2,98e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.1114542269517003;  // std dev = 0,480, 3.442,000 (wgt'ed) examples reached here.  /* #neg=2.197 #pos=1.245 */
%   else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | then if ( haswordauthor(G, E) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.07502811713920642;  // std dev = 1,099, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.03072623483590075;  // std dev = 2,391, 34,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( haswordtitle(F, I), haswordvenue(B, I) )
%   | | | then return -0.02831975706409101;  // std dev = 3,774, 149,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=16 */
%   | | | else return 0.019235534160451758;  // std dev = 5,105, 196,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=31 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.0800405905897207;  // std dev = 4,679, 111,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=30 */
%   | | | else return 0.007790643285531281;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.46285993325593383;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.14075145065813094;  // std dev = 4,077, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   | | | else return -0.2200852634795026;  // std dev = 0,950, 21,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | else return 0.09306334618538492;  // std dev = 0,481, 3.329,000 (wgt'ed) examples reached here.  /* #neg=2.114 #pos=1.215 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return -0.006672369316682826;  // std dev = 0,342, 309,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=42 */
%   | | else return -0.02469495830873947;  // std dev = 0,324, 116,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=14 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.05137140886808277;  // std dev = 4,730, 118,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=30 */
%   | | | else return -0.0014004582885270445;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07285520707493956;  // std dev = 0,480, 3.453,000 (wgt'ed) examples reached here.  /* #neg=2.194 #pos=1.259 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.2159388022879074;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.14756071120960937;  // std dev = 0,785, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11080725150031956;  // std dev = 2,253, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.018461470551596144;  // std dev = 6,074, 356,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=42 */
%   | | | else return 0.05751305318166565;  // std dev = 2,012, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0030102754615740418;  // std dev = 4,952, 151,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=31 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05279149909808822;  // std dev = 0,478, 3.500,000 (wgt'ed) examples reached here.  /* #neg=2.241 #pos=1.259 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.701062403392914;  // std dev = 0,076, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.258644433076781;  // std dev = 0,134, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.028852064586507943;  // std dev = 2,350, 33,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return -0.20621034435852448;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.32436036318204364;  // std dev = 1,257, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03807670679328762;  // std dev = 2,048, 29,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.020362899253700446;  // std dev = 5,822, 276,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=41 */
%   | | | else return 0.003102956545887846;  // std dev = 4,984, 208,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=29 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.657386688379597;  // std dev = 0,168, 1.168,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1.134 */
%   | | else return -0.2730206021638757;  // std dev = 0,167, 2.308,000 (wgt'ed) examples reached here.  /* #neg=2.246 #pos=62 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.18328940657548995;  // std dev = 0,307, 177,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=19 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3639643248399251;  // std dev = 3,695, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | | | else return 0.08007967384038835;  // std dev = 3,838, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6056989499110355;  // std dev = 0,242, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.032108436264276244;  // std dev = 4,716, 128,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=30 */
%   | | | else return 0.14935891214672795;  // std dev = 1,218, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.07345713734696725;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.502211414276322;  // std dev = 0,174, 1.171,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1.134 */
%   | | else return -0.2178348350363332;  // std dev = 0,167, 2.288,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=62 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.15025692741157487;  // std dev = 0,291, 199,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=19 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.20609025285380192;  // std dev = 4,118, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | | | else return 0.10240734727562478;  // std dev = 3,727, 77,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.35523064760668377;  // std dev = 0,718, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( title(K, I), venue(K, B) )
%   | | | then return 0.07997115473330808;  // std dev = 5,007, 132,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=43 */
%   | | | else return -0.06129408172468728;  // std dev = 1,391, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else return 0.39645696588046825;  // std dev = 0,284, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */


Results
   AUC ROC   = 0.979032
   AUC PR    = 0.386298
   CLL	      = -0.253245
   Precision = 0.357534 at threshold = 0.5
   Recall    = 0.932555
   F1        = 0.516894


Total learning time: 1237.723 seconds
Total inference time: 73.133 seconds
AUC ROC: 0.979032


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 01:20:53
{'AUC PR': 0.386298, 'AUC ROC': 0.979032, 'Precision': [0.357534, 0.5], 'Inference time': 73.133, 'CLL': -0.253245, 'Recall': 0.932555, 'Learning time': 1237.723, 'F1': 0.516894}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.206463541841084;  // std dev = 4,495, 89,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21529179224236436;  // std dev = 0,479, 3.402,000 (wgt'ed) examples reached here.  /* #neg=2.187 #pos=1.215 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( haswordvenue(B, J) )
%   | | | then return 0.15814893509951236;  // std dev = 2,049, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.024357592315631584;  // std dev = 6,302, 383,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=45 */
%   | | else return 0.09624417319475045;  // std dev = 0,426, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, A) )
%   | | | then return 0.138522766875212;  // std dev = 4,646, 107,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   | | | else return -0.00851773156715447;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.544891
   AUC PR    = 0.015081
   CLL	      = -0.201824
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 141.013 seconds
Total inference time: 7.168 seconds
AUC ROC: 0.544891


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 01:23:22
{'AUC PR': 0.015081, 'AUC ROC': 0.544891, 'Precision': [nan, 0.5], 'Inference time': 7.168, 'CLL': -0.201824, 'Recall': 0.0, 'Learning time': 141.013, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.15184549505178396;  // std dev = 32,299, 5.029,000 (wgt'ed) examples reached here.  /* #neg=3.552 #pos=1.477 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.12830611060013294;  // std dev = 32,391, 5.099,000 (wgt'ed) examples reached here.  /* #neg=3.622 #pos=1.477 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.10708968992336536;  // std dev = 32,461, 5.154,000 (wgt'ed) examples reached here.  /* #neg=3.677 #pos=1.477 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.09609793234261922;  // std dev = 32,340, 5.060,000 (wgt'ed) examples reached here.  /* #neg=3.583 #pos=1.477 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.07653983955966322;  // std dev = 32,431, 5.130,000 (wgt'ed) examples reached here.  /* #neg=3.653 #pos=1.477 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,77e-07, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.06440008122223269;  // std dev = 32,410, 5.114,000 (wgt'ed) examples reached here.  /* #neg=3.637 #pos=1.477 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.0515316149185707;  // std dev = 32,443, 5.140,000 (wgt'ed) examples reached here.  /* #neg=3.663 #pos=1.477 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2,67e-07, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.04420253545419344;  // std dev = 32,396, 5.103,000 (wgt'ed) examples reached here.  /* #neg=3.626 #pos=1.477 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.03833102400312517;  // std dev = 32,341, 5.061,000 (wgt'ed) examples reached here.  /* #neg=3.584 #pos=1.477 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.03392089030346081;  // std dev = 32,275, 5.011,000 (wgt'ed) examples reached here.  /* #neg=3.534 #pos=1.477 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.321275
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 17.323 seconds
Total inference time: 5.577 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.588808
   AUC PR    = 0.196369
   CLL	      = -0.320687
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.177617
   F1        = 0.301655


Total scoring time: 10.302 seconds
Parameter learned model CLL: -0.320687


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.299, 3552, 1477], 'true': [1.04e-06, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.391, 3622, 1477], 'true': [0.0, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.461, 3677, 1477], 'true': [0.0, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.34, 3583, 1477], 'true': [0.0, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.431, 3653, 1477], 'true': [0.0, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.41, 3637, 1477], 'true': [3.77e-07, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.443, 3663, 1477], 'true': [2.49e-07, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.396, 3626, 1477], 'true': [2.67e-07, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.341, 3584, 1477], 'true': [0.0, 0, 319]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.275, 3534, 1477], 'true': [0.0, 0, 319]}]]
[{'': [3.3856581766625463e-15, 0.20743889062441975]}, {'': [-4.9893909971869104e-15, 0.20575903638642123]}, {'': [-3.5638507122763644e-16, 0.204449144088173]}, {'': [-8.90962678069091e-16, 0.20669323845086215]}, {'': [-4.900294729380001e-16, 0.2050196261717895]}, {'': [4.454813390345455e-16, 0.20540090320821194]}, {'': [1.948980858276137e-16, 0.20478171509028245]}, {'': [2.2274066951727276e-16, 0.20566346969841112]}, {'': [-2.2274066951727276e-16, 0.2066692301364667]}, {'': [-1.9211382745864777e-16, 0.2078730723758879]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17259261167172557;  // std dev = 0,464, 4.341,000 (wgt'ed) examples reached here.  /* #neg=2.976 #pos=1.365 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.05217878584578103;  // std dev = 3,237, 67,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | | else return -0.0036022169742202167;  // std dev = 7,191, 434,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=60 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.06341209299424812;  // std dev = 5,567, 190,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=39 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15127522582667569;  // std dev = 0,465, 4.327,000 (wgt'ed) examples reached here.  /* #neg=2.962 #pos=1.365 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.07581571364798076;  // std dev = 3,176, 58,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return -0.0177017946587599;  // std dev = 7,251, 485,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=60 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.06691981412638483;  // std dev = 5,527, 180,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=39 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.07972192148227311;  // std dev = 5,282, 143,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=38 */
%   | | | else return 0.8139876557480065;  // std dev = 3,65e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1372199789803306;  // std dev = 4,654, 99,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | | | else return 0.1278562688866459;  // std dev = 29,751, 4.110,000 (wgt'ed) examples reached here.  /* #neg=2.820 #pos=1.290 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.0680586594172368;  // std dev = 6,528, 247,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=55 */
%   | | | else return -0.022673451111449923;  // std dev = 4,091, 159,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=19 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.008316338377998821;  // std dev = 5,747, 288,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=38 */
%   | | | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.07111717613655733;  // std dev = 5,269, 141,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=38 */
%   | | | else return 0.659741957489191;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07802527921351055;  // std dev = 4,781, 112,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=32 */
%   | | | else return 0.10725869368014337;  // std dev = 29,761, 4.116,000 (wgt'ed) examples reached here.  /* #neg=2.826 #pos=1.290 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.002186554320717885;  // std dev = 7,525, 473,000 (wgt'ed) examples reached here.  /* #neg=407 #pos=66 */
%   | | | else return 0.06538489314990953;  // std dev = 2,346, 33,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.04920646583613599;  // std dev = 5,526, 181,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=39 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09215672947289587;  // std dev = 0,465, 4.316,000 (wgt'ed) examples reached here.  /* #neg=2.951 #pos=1.365 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.10178233790886103;  // std dev = 2,889, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.10663231425916157;  // std dev = 1,234, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.06644447430605396;  // std dev = 3,266, 61,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | | else return -0.01144627494628058;  // std dev = 8,515, 620,000 (wgt'ed) examples reached here.  /* #neg=535 #pos=85 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,77e-07, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07244389820580766;  // std dev = 0,463, 4.362,000 (wgt'ed) examples reached here.  /* #neg=2.997 #pos=1.365 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5006029853493362;  // std dev = 0,814, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09757519816672805;  // std dev = 3,061, 48,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0620816875689587;  // std dev = 3,079, 55,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | else return -0.0048339081200265335;  // std dev = 8,488, 598,000 (wgt'ed) examples reached here.  /* #neg=513 #pos=85 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06294523361799464;  // std dev = 0,465, 4.307,000 (wgt'ed) examples reached here.  /* #neg=2.942 #pos=1.365 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.1074203562993605;  // std dev = 2,992, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return -0.011735479008896613;  // std dev = 7,220, 467,000 (wgt'ed) examples reached here.  /* #neg=407 #pos=60 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04255918350121291;  // std dev = 5,526, 181,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=39 */
%   | | | else return -0.09133116824713526;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2,67e-07, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.11039121127014102;  // std dev = 4,825, 102,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=38 */
%   | | | else return -0.1376436246886987;  // std dev = 1,863, 39,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | else return 0.05105093491298975;  // std dev = 0,465, 4.167,000 (wgt'ed) examples reached here.  /* #neg=2.845 #pos=1.322 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.013370308477544928;  // std dev = 7,513, 499,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=66 */
%   | | | else return 0.03664936398628989;  // std dev = 2,383, 37,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.028302020132461695;  // std dev = 5,555, 188,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=39 */
%   | | | else return -0.08402922821100611;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7012703267601625;  // std dev = 5,998, 1.286,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1.250 */
%   | | | else return -0.23723559374628214;  // std dev = 8,908, 3.138,000 (wgt'ed) examples reached here.  /* #neg=3.060 #pos=78 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1441235579219821;  // std dev = 4,665, 238,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=25 */
%   | | | else return 0.1486309999896255;  // std dev = 6,081, 178,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=64 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.43730940860970957;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5807490056135475;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.049403099128243595;  // std dev = 5,462, 168,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=39 */
%   | | | else return -0.07933454373928132;  // std dev = 0,019, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.020302734145408674;  // std dev = 0,382, 4.369,000 (wgt'ed) examples reached here.  /* #neg=3.004 #pos=1.365 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.007840857031532596;  // std dev = 5,853, 375,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=53 */
%   | | | else return -0.04138453709956875;  // std dev = 4,044, 154,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=20 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.010101654568703057;  // std dev = 5,577, 194,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=39 */
%   | | | else return -0.07414593853536118;  // std dev = 0,017, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.973208
   AUC PR    = 0.489702
   CLL	      = -0.264804
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 816.165 seconds
Total inference time: 41.42 seconds
AUC ROC: 0.973208


Results scoring model
   AUC ROC   = 0.946587
   AUC PR    = 0.576878
   CLL	      = -0.26024
   Precision = 0.967164 at threshold = 0.5
   Recall    = 0.180401
   F1        = 0.304083


Total scoring time: 331.948 seconds
Refined model CLL: -0.26024


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.973208
   AUC PR    = 0.489702
   CLL	      = -0.264804
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1175.7379999999998 seconds
Total inference time: 41.42 seconds
AUC ROC: 0.973208
Total revision time: 1175.7379999999998
Best scored revision CLL: -0.26024


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:43:47
{'AUC PR': 0.489702, 'AUC ROC': 0.973208, 'Precision': [1.0, 0.5], 'Inference time': 41.42, 'parameter_0.8': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 5.577, 'CLL': -0.321275, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 17.323}, 'CLL': -0.264804, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1175.7379999999998}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21274990372448085;  // std dev = 0,478, 4.749,000 (wgt'ed) examples reached here.  /* #neg=3.065 #pos=1.684 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.0803711573217344;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.08731560176617903;  // std dev = 2,912, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.002886487243812037;  // std dev = 6,627, 367,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=51 */
%   | | | else return -0.05694540452312918;  // std dev = 2,870, 106,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.10481560176617753;  // std dev = 5,280, 150,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=37 */
%   | | | else return -0.0168510649004878;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19028872649487213;  // std dev = 0,480, 4.677,000 (wgt'ed) examples reached here.  /* #neg=2.993 #pos=1.684 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7564518432120695;  // std dev = 2,321, 59,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=53 */
%   | | | else return -0.14127628363375416;  // std dev = 0,053, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.10310238123980693;  // std dev = 2,861, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return -0.033957772902504756;  // std dev = 2,846, 88,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.09044391835029837;  // std dev = 5,282, 151,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=37 */
%   | | | else return 0.008155885993037851;  // std dev = 1,310, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7392012610443538;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.07721146512598638;  // std dev = 4,423, 98,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | | | else return 0.6350345943776872;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.26323972258281525;  // std dev = 3,113, 39,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | | else return 0.015986975330068015;  // std dev = 4,062, 98,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=21 */
%   | | else return 0.1749785327098906;  // std dev = 0,484, 4.281,000 (wgt'ed) examples reached here.  /* #neg=2.683 #pos=1.598 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then return -0.006464233803981811;  // std dev = 0,311, 531,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=73 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.06346434797960405;  // std dev = 0,419, 171,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=39 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6587570486053204;  // std dev = 4,21e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.18105891355219553;  // std dev = 4,628, 91,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   | | | else return -0.11645260054947254;  // std dev = 1,620, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, C) )
%   | | | then return 0.023922702860458386;  // std dev = 4,545, 115,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=27 */
%   | | | else return 0.6817719113306839;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1324844082193984;  // std dev = 0,480, 4.438,000 (wgt'ed) examples reached here.  /* #neg=2.840 #pos=1.598 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, A) )
%   | | then return 0.056324703582191375;  // std dev = 0,415, 247,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=55 */
%   | | else return -0.033337023475318785;  // std dev = 0,277, 172,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=19 */
%   | else return -0.01629099809802154;  // std dev = 0,291, 302,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=38 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1061458041513181;  // std dev = 0,478, 4.709,000 (wgt'ed) examples reached here.  /* #neg=3.025 #pos=1.684 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.19307868300955527;  // std dev = 0,426, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.3108612564929245;  // std dev = 0,867, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1227203091193178;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.030462964834645705;  // std dev = 5,267, 379,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=41 */
%   | | | else return 0.010246800770462885;  // std dev = 4,065, 127,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05143225591063583;  // std dev = 5,393, 163,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=38 */
%   | | | else return -0.10011899767015132;  // std dev = 1,05e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7203507877679365;  // std dev = 0,466, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.23170485998922627;  // std dev = 0,023, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordauthor(E, C) )
%   | | | then return 0.3303827657644063;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.07168584087713459;  // std dev = 3,375, 89,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.32658589468472976;  // std dev = 2,618, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | | else return -0.006660088912433892;  // std dev = 3,973, 90,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=21 */
%   | | else return 0.09361543445433235;  // std dev = 0,482, 4.368,000 (wgt'ed) examples reached here.  /* #neg=2.770 #pos=1.598 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then return 0.08967566519069053;  // std dev = 0,425, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else return -0.005378809174704237;  // std dev = 0,325, 667,000 (wgt'ed) examples reached here.  /* #neg=570 #pos=97 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.05003514010424662;  // std dev = 4,038, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.035476851470654054;  // std dev = 1,344, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.45574318707027395;  // std dev = 0,076, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.06272367278658207;  // std dev = 0,478, 4.633,000 (wgt'ed) examples reached here.  /* #neg=2.996 #pos=1.637 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then return 0.054417736043790826;  // std dev = 0,412, 55,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | else return -0.01935039502674375;  // std dev = 0,285, 510,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=60 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.061277901754838944;  // std dev = 5,249, 146,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=37 */
%   | | | else return -0.06306681009280768;  // std dev = 1,358, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.0906701912498057;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05907252013421924;  // std dev = 0,478, 4.635,000 (wgt'ed) examples reached here.  /* #neg=2.951 #pos=1.684 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5428892864084729;  // std dev = 0,856, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1623148977490041;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05205399505377531;  // std dev = 2,858, 46,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return -0.2171138172489834;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.22030484932615796;  // std dev = 1,138, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.020766146451820112;  // std dev = 2,333, 46,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.023629309246724593;  // std dev = 6,360, 354,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=50 */
%   | | | else return -0.0052576838259920785;  // std dev = 4,871, 273,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=35 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.042989521204414564;  // std dev = 0,478, 4.226,000 (wgt'ed) examples reached here.  /* #neg=2.708 #pos=1.518 */
%   | | else return 0.03349331719495659;  // std dev = 0,336, 410,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=79 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.18567360914673023;  // std dev = 0,308, 232,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=25 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.31067899006161037;  // std dev = 4,616, 93,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=59 */
%   | | | else return 0.06949947933446769;  // std dev = 4,361, 122,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.7162512242271124;  // std dev = 1,484, 56,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=54 */
%   | | | else return -0.1933295758041985;  // std dev = 0,906, 138,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=1 */
%   | | else return 0.03763208182870655;  // std dev = 0,379, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else return 0.4620381872517855;  // std dev = 0,340, 33,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02515579314467767;  // std dev = 0,475, 4.330,000 (wgt'ed) examples reached here.  /* #neg=2.812 #pos=1.518 */
%   | | else return 0.03223164334587242;  // std dev = 0,333, 410,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=79 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.14906184341807321;  // std dev = 0,283, 278,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=25 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3329949850630374;  // std dev = 3,984, 81,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=59 */
%   | | | else return 0.04300246280877769;  // std dev = 4,441, 126,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=31 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.45940071566377283;  // std dev = 0,279, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.04153235529571812;  // std dev = 4,350, 142,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=37 */
%   | | | else return -0.054052817754322205;  // std dev = 1,357, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.12531277788638562;  // std dev = 0,012, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.59573
   AUC PR    = 0.040456
   CLL	      = -0.374995
   Precision = 0.30303 at threshold = 0.5
   Recall    = 0.02594
   F1        = 0.04779


Total learning time: 2787.137 seconds
Total inference time: 37.174 seconds
AUC ROC: 0.59573


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 02:30:52
{'AUC PR': 0.040456, 'AUC ROC': 0.59573, 'Precision': [0.30303, 0.5], 'Inference time': 37.174, 'CLL': -0.374995, 'Recall': 0.02594, 'Learning time': 2787.137, 'F1': 0.04779}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then return 0.6763307532813305;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.3465210281227675;  // std dev = 3,278, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0.06504548682365031;  // std dev = 3,778, 87,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
%   | | else return 0.21073383667856838;  // std dev = 0,478, 4.623,000 (wgt'ed) examples reached here.  /* #neg=2.993 #pos=1.630 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(M, I) )
%   | | | then return 0.08731560176617903;  // std dev = 2,912, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | then if ( title(Q, P), venue(Q, B) )
%   | | | then return 6.070356581714314E-4;  // std dev = 6,613, 358,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=51 */
%   | | | else return -0.048101064900487676;  // std dev = 2,856, 96,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=9 */
%   | | else if ( haswordvenue(B, R), haswordtitle(S, R) )
%   | | | then return 0.06370449065506667;  // std dev = 5,422, 180,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=37 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.557904
   AUC PR    = 0.016275
   CLL	      = -0.200397
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 51.452 seconds
Total inference time: 5.983 seconds
AUC ROC: 0.557904


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 02:31:50
{'AUC PR': 0.016275, 'AUC ROC': 0.557904, 'Precision': [nan, 0.5], 'Inference time': 5.983, 'CLL': -0.200397, 'Recall': 0.0, 'Learning time': 51.452, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,53e-06, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.1556457258568884;  // std dev = 36,089, 6.232,000 (wgt'ed) examples reached here.  /* #neg=4.378 #pos=1.854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.13581441505154826;  // std dev = 36,084, 6.228,000 (wgt'ed) examples reached here.  /* #neg=4.374 #pos=1.854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.10668821578503485;  // std dev = 36,336, 6.441,000 (wgt'ed) examples reached here.  /* #neg=4.587 #pos=1.854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.0923915472963525;  // std dev = 36,284, 6.395,000 (wgt'ed) examples reached here.  /* #neg=4.541 #pos=1.854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.07879479072142896;  // std dev = 36,246, 6.363,000 (wgt'ed) examples reached here.  /* #neg=4.509 #pos=1.854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06544443100429755;  // std dev = 36,243, 6.360,000 (wgt'ed) examples reached here.  /* #neg=4.506 #pos=1.854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.053469023176436814;  // std dev = 36,251, 6.367,000 (wgt'ed) examples reached here.  /* #neg=4.513 #pos=1.854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2,19e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.04182656682989186;  // std dev = 36,297, 6.407,000 (wgt'ed) examples reached here.  /* #neg=4.553 #pos=1.854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03613798269029224;  // std dev = 36,242, 6.359,000 (wgt'ed) examples reached here.  /* #neg=4.505 #pos=1.854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.025671854807385902;  // std dev = 36,332, 6.437,000 (wgt'ed) examples reached here.  /* #neg=4.583 #pos=1.854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.321177
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 19.826 seconds
Total inference time: 5.522 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.320637
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 12.206 seconds
Parameter learned model CLL: -0.320637


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.089, 4378, 1854], 'true': [1.53e-06, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.084, 4374, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.336, 4587, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.284, 4541, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.246, 4509, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.243, 4506, 1854], 'true': [4.46e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.251, 4513, 1854], 'true': [2.46e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.297, 4553, 1854], 'true': [2.19e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.242, 4505, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.332, 4583, 1854], 'true': [0.0, 0, 392]}]]
[{'': [5.945357584931451e-15, 0.2089924502463787]}, {'': [-5.3653226985966745e-15, 0.20906979852319627]}, {'': [-1.1600697726695512e-15, 0.20498962059478784]}, {'': [-1.740104659004327e-15, 0.20586387063286798]}, {'': [-1.5407176668267478e-15, 0.20647435525526955]}, {'': [5.075305255429287e-16, 0.20653168387320978]}, {'': [1.5407176668267478e-16, 0.2063979424692867]}, {'': [1.2235110883624173e-16, 0.20563542455621342]}, {'': [-2.628283078704452e-16, 0.20655079703100027]}, {'': [-3.149408171895852e-16, 0.20506548466341873]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,53e-06, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.16220298915356618;  // std dev = 5,596, 148,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   | | | else return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.17594878231111907;  // std dev = 0,466, 5.236,000 (wgt'ed) examples reached here.  /* #neg=3.572 #pos=1.664 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.16723984419042145;  // std dev = 3,427, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return 0.03739421811838075;  // std dev = 7,898, 424,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=76 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.021530209285514728;  // std dev = 6,292, 374,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.11493801067296609;  // std dev = 5,694, 161,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=45 */
%   | | | else return 0.8092515217455951;  // std dev = 0,109, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.15608005602669744;  // std dev = 0,467, 5.187,000 (wgt'ed) examples reached here.  /* #neg=3.523 #pos=1.664 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06647868858178663;  // std dev = 7,259, 314,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=67 */
%   | | | else return -0.023093830319656783;  // std dev = 4,733, 204,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=26 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.011771607730729673;  // std dev = 6,266, 353,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.08687144610237445;  // std dev = 5,740, 168,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=45 */
%   | | | else return 0.6562498516188638;  // std dev = 0,154, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11991747284039488;  // std dev = 5,712, 155,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
%   | | | else return 0.12586642958656524;  // std dev = 33,317, 5.161,000 (wgt'ed) examples reached here.  /* #neg=3.545 #pos=1.616 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.12032130602754344;  // std dev = 3,497, 60,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | | else return -0.03528640724136842;  // std dev = 1,342, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.019693065704638725;  // std dev = 8,099, 612,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=75 */
%   | | | else return 0.04926299987070508;  // std dev = 5,913, 218,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=44 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.29796057414957416;  // std dev = 3,571, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.024392196603496345;  // std dev = 4,213, 111,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=26 */
%   | | else return 0.11294786232379316;  // std dev = 0,466, 5.198,000 (wgt'ed) examples reached here.  /* #neg=3.534 #pos=1.664 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.20612381295989274;  // std dev = 3,238, 44,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return -0.02537766775586355;  // std dev = 1,338, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.11358586349832776;  // std dev = 3,522, 65,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | | else return -0.017014707650341868;  // std dev = 9,405, 796,000 (wgt'ed) examples reached here.  /* #neg=694 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08685209168930763;  // std dev = 0,463, 5.477,000 (wgt'ed) examples reached here.  /* #neg=3.761 #pos=1.716 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.08828958662350543;  // std dev = 3,530, 67,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | | else return 0.23206716029667418;  // std dev = 1,079, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.012032132781599874;  // std dev = 8,065, 588,000 (wgt'ed) examples reached here.  /* #neg=512 #pos=76 */
%   | | | else return 0.026881735915776517;  // std dev = 5,904, 234,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07197128959602181;  // std dev = 0,463, 5.466,000 (wgt'ed) examples reached here.  /* #neg=3.750 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05915397954094908;  // std dev = 7,184, 299,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=67 */
%   | | | else return -0.024081290467985548;  // std dev = 4,625, 203,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=26 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.013189087430187466;  // std dev = 6,298, 375,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=45 */
%   | | | else return -0.11834824084639163;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2837590125101991;  // std dev = 3,095, 41,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.00892431108507521;  // std dev = 4,431, 111,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=29 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.0664590562041901;  // std dev = 5,638, 149,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
%   | | | else return 0.0665726815366523;  // std dev = 33,103, 5.020,000 (wgt'ed) examples reached here.  /* #neg=3.404 #pos=1.616 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.1110976957720984;  // std dev = 3,415, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return 0.007154613249255059;  // std dev = 1,235, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.11258568272474588;  // std dev = 3,422, 56,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return -0.008715821152319485;  // std dev = 9,351, 747,000 (wgt'ed) examples reached here.  /* #neg=645 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2,19e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17050284935227839;  // std dev = 3,529, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return -0.0477953077558891;  // std dev = 4,345, 129,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=26 */
%   | | else return 0.06067872272832458;  // std dev = 0,470, 5.059,000 (wgt'ed) examples reached here.  /* #neg=3.395 #pos=1.664 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1241696716167311;  // std dev = 3,323, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return -0.04683155506375924;  // std dev = 1,348, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.013729597153944235;  // std dev = 8,045, 586,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=75 */
%   | | | else return 0.025353105837249614;  // std dev = 5,928, 231,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.09408502989240375;  // std dev = 5,140, 126,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=47 */
%   | | | else return -0.16322627433052764;  // std dev = 1,716, 40,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | else return 0.030982893652324962;  // std dev = 0,463, 5.346,000 (wgt'ed) examples reached here.  /* #neg=3.682 #pos=1.664 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.06190392631279679;  // std dev = 3,490, 65,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | | else return -0.008887648531144703;  // std dev = 1,250, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.017554449880333063;  // std dev = 8,079, 618,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=76 */
%   | | | else return 0.02178998976682604;  // std dev = 5,862, 226,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=43 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.02575371424248419;  // std dev = 32,833, 5.038,000 (wgt'ed) examples reached here.  /* #neg=3.467 #pos=1.571 */
%   | | | else return 0.04262788144764954;  // std dev = 8,462, 507,000 (wgt'ed) examples reached here.  /* #neg=407 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.1662272627733347;  // std dev = 5,170, 321,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=30 */
%   | | | else return 0.1341225101372563;  // std dev = 6,889, 234,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=83 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.11761097734169655;  // std dev = 6,401, 205,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=64 */
%   | | | else return 0.012415778046807597;  // std dev = 1,893, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else return -0.12272793763303878;  // std dev = 0,172, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.629279
   AUC PR    = 0.174912
   CLL	      = -0.330029
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 907.378 seconds
Total inference time: 25.796 seconds
AUC ROC: 0.629279


Results scoring model
   AUC ROC   = 0.660966
   AUC PR    = 0.210961
   CLL	      = -0.321689
   Precision = 0.966102 at threshold = 0.5
   Recall    = 0.177649
   F1        = 0.300113


Total scoring time: 178.56900000000002 seconds
Refined model CLL: -0.321689


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.321177
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1117.979 seconds
Total inference time: 5.522 seconds
AUC ROC: 0.566796
Total revision time: 1117.979
Best scored revision CLL: -0.320637


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 02:51:01
{'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Precision': [1.0, 0.5], 'Inference time': 5.522, 'CLL': -0.321177, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 19.826}, 'Inference time': 5.522, 'CLL': -0.321177, 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1117.979}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21781452117696834;  // std dev = 0,480, 5.861,000 (wgt'ed) examples reached here.  /* #neg=3.753 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.23592671287729014;  // std dev = 0,485, 45,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.06941654073331519;  // std dev = 3,440, 71,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | | else return -0.033547815803014656;  // std dev = 7,314, 554,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=60 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05634713329770992;  // std dev = 5,940, 222,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=44 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8295138124215904;  // std dev = 1,12e-07, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3184027013104796;  // std dev = 3,353, 45,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | | else return 0.06804592251333379;  // std dev = 4,450, 109,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=26 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, C) )
%   | | | then return 0.08097580072568444;  // std dev = 5,673, 171,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=43 */
%   | | | else return 0.8295138124215906;  // std dev = 2,98e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.19041878979709614;  // std dev = 0,480, 5.525,000 (wgt'ed) examples reached here.  /* #neg=3.531 #pos=1.994 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, A) )
%   | | then return 0.48147311265927656;  // std dev = 1,165, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.06574280068067946;  // std dev = 0,409, 67,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | else return -0.0011507845119866418;  // std dev = 0,346, 849,000 (wgt'ed) examples reached here.  /* #neg=730 #pos=119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1612094700168425;  // std dev = 0,479, 5.850,000 (wgt'ed) examples reached here.  /* #neg=3.742 #pos=2.108 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8423879597682932;  // std dev = 0,029, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15036588535314624;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11134693775351703;  // std dev = 3,302, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.14480624777091253;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.008371489338401794;  // std dev = 7,432, 484,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=65 */
%   | | | else return -0.05596433793643595;  // std dev = 3,185, 131,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.052404654311651616;  // std dev = 5,853, 212,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=43 */
%   | | | else return -0.1262582028274748;  // std dev = 0,007, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13998064391600942;  // std dev = 0,481, 5.760,000 (wgt'ed) examples reached here.  /* #neg=3.652 #pos=2.108 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.05527525933813583;  // std dev = 1,027, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.03783232817897793;  // std dev = 3,428, 74,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.019832045042229712;  // std dev = 7,601, 556,000 (wgt'ed) examples reached here.  /* #neg=489 #pos=67 */
%   | | | else return 0.050624659931332895;  // std dev = 2,717, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.08478465151141377;  // std dev = 5,666, 177,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=43 */
%   | | | else return -0.06615009858319035;  // std dev = 1,351, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.11212067894550339;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.6109914285278143;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.10350477975631246;  // std dev = 5,361, 132,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | | else return -0.16165098874553657;  // std dev = 1,670, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | else return 0.10709598977148958;  // std dev = 0,480, 5.696,000 (wgt'ed) examples reached here.  /* #neg=3.654 #pos=2.042 */
%   else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then if ( author(J, H), venue(J, A) )
%   | | | then return 0.2578731770896501;  // std dev = 0,828, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07580166634578124;  // std dev = 3,332, 61,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else return 0.01666513171906556;  // std dev = 0,319, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.052530574488224825;  // std dev = 0,412, 74,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else return -0.008663380991181958;  // std dev = 0,338, 765,000 (wgt'ed) examples reached here.  /* #neg=663 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0883915164444236;  // std dev = 0,479, 5.847,000 (wgt'ed) examples reached here.  /* #neg=3.739 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.5133102046410382;  // std dev = 0,889, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.15590869255327336;  // std dev = 3,092, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.13495211582438738;  // std dev = 0,045, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.06835670221762215;  // std dev = 3,307, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return -0.007062037265374134;  // std dev = 1,073, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.017556507714530312;  // std dev = 7,279, 521,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=60 */
%   | | | else return 0.026472124370178166;  // std dev = 5,812, 227,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.06358139228952155;  // std dev = 5,400, 138,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=52 */
%   | | | else return -0.007350907465256608;  // std dev = 1,739, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else return 0.6234262398427208;  // std dev = 0,143, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07073030021421098;  // std dev = 0,480, 5.671,000 (wgt'ed) examples reached here.  /* #neg=3.629 #pos=2.042 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.7906698813168657;  // std dev = 1,436, 69,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=67 */
%   | | | else return -0.16528356097387553;  // std dev = 0,383, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | | else return -0.03497179758945413;  // std dev = 0,315, 217,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=26 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return -0.1250863149933614;  // std dev = 0,210, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else return -0.011468219420451724;  // std dev = 0,321, 367,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=44 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.04944497802308301;  // std dev = 0,477, 5.370,000 (wgt'ed) examples reached here.  /* #neg=3.471 #pos=1.899 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7320370650212772;  // std dev = 2,416, 104,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=98 */
%   | | | else return -0.13809513859321873;  // std dev = 1,477, 422,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=2 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.18293109583881403;  // std dev = 0,288, 324,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.36056228176573424;  // std dev = 5,089, 119,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=80 */
%   | | | else return 0.09271585766811019;  // std dev = 4,338, 133,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=38 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.562430651773612;  // std dev = 0,321, 61,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.030336411471059584;  // std dev = 0,345, 208,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=45 */
%   | | else return -0.10100106737584037;  // std dev = 0,012, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.613384161334521;  // std dev = 0,584, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.3413195282696831;  // std dev = 0,015, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.3646641289866722;  // std dev = 0,306, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.057492628023436354;  // std dev = 4,337, 112,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=26 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.1618853482258767;  // std dev = 3,459, 50,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   | | | else return -0.0653174154643652;  // std dev = 4,203, 113,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=26 */
%   | | else return 0.043991065051853684;  // std dev = 0,476, 5.532,000 (wgt'ed) examples reached here.  /* #neg=3.538 #pos=1.994 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then return 0.05603445920081894;  // std dev = 0,355, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else return -0.0082165541557135;  // std dev = 0,300, 823,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.036284370668345854;  // std dev = 0,474, 5.815,000 (wgt'ed) examples reached here.  /* #neg=3.707 #pos=2.108 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.014482523893839487;  // std dev = 0,683, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.17720967749277478;  // std dev = 0,048, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.10627313184458682;  // std dev = 0,717, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04453658519147772;  // std dev = 2,640, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.008456402382020637;  // std dev = 6,424, 490,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=65 */
%   | | | else return -0.051258908528324855;  // std dev = 2,824, 135,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0015226871900079727;  // std dev = 5,008, 229,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=43 */
%   | | | else return -0.0924351397080526;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.608276
   AUC PR    = 0.05702
   CLL	      = -0.374792
   Precision = 0.333333 at threshold = 0.5
   Recall    = 0.003891
   F1        = 0.007692


Total learning time: 1869.815 seconds
Total inference time: 25.964 seconds
AUC ROC: 0.608276


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 03:22:37
{'AUC PR': 0.05702, 'AUC ROC': 0.608276, 'Precision': [0.333333, 0.5], 'Inference time': 25.964, 'CLL': -0.374792, 'Recall': 0.003891, 'Learning time': 1869.815, 'F1': 0.007692}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then if ( author(F, D), title(F, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7581489350995123;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2137725525914248;  // std dev = 0,479, 5.877,000 (wgt'ed) examples reached here.  /* #neg=3.787 #pos=2.090 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.8152917922423699;  // std dev = 1,695, 70,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=67 */
%   | | | else return -0.14185106490048832;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | | else if ( haswordauthor(K, G) )
%   | | | then return 0.23314893509951234;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.0803985509340072;  // std dev = 3,213, 179,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=11 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return 0.01508324166885487;  // std dev = 6,021, 274,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=43 */
%   | | | else return -0.1067633456022421;  // std dev = 1,389, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.563399
   AUC PR    = 0.024195
   CLL	      = -0.199968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 108.827 seconds
Total inference time: 6.245 seconds
AUC ROC: 0.563399


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 03:24:33
{'AUC PR': 0.024195, 'AUC ROC': 0.563399, 'Precision': [nan, 0.5], 'Inference time': 6.245, 'CLL': -0.199968, 'Recall': 0.0, 'Learning time': 108.827, 'F1': nan}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 199372

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 50581

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else return 0.17027911261430032;  // std dev = 17,038, 1.352,000 (wgt'ed) examples reached here.  /* #neg=930 #pos=422 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else return 0.14438559970526935;  // std dev = 17,086, 1.369,000 (wgt'ed) examples reached here.  /* #neg=947 #pos=422 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else return 0.11193366286443128;  // std dev = 17,229, 1.423,000 (wgt'ed) examples reached here.  /* #neg=1.001 #pos=422 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else return 0.10174487606470665;  // std dev = 17,140, 1.389,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=422 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else return 0.08074213315331912;  // std dev = 17,191, 1.408,000 (wgt'ed) examples reached here.  /* #neg=986 #pos=422 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else return 0.07225916120238557;  // std dev = 17,121, 1.382,000 (wgt'ed) examples reached here.  /* #neg=960 #pos=422 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else return 0.042582489926424015;  // std dev = 17,324, 1.461,000 (wgt'ed) examples reached here.  /* #neg=1.039 #pos=422 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else return 0.041475407041763;  // std dev = 17,240, 1.427,000 (wgt'ed) examples reached here.  /* #neg=1.005 #pos=422 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936707;  // std dev = 4,94e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else return 0.03373893567961133;  // std dev = 17,237, 1.426,000 (wgt'ed) examples reached here.  /* #neg=1.004 #pos=422 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else return 0.046623474018840025;  // std dev = 16,997, 1.338,000 (wgt'ed) examples reached here.  /* #neg=916 #pos=422 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.334382
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.469 seconds
Total inference time: 4.477 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.566735
   AUC PR    = 0.151657
   CLL	      = -0.335434
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.13347
   F1        = 0.235507


Total scoring time: 4.326 seconds
Parameter learned model CLL: -0.335434


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.038, 930, 422], 'true': [0.0, 0, 65]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.086, 947, 422], 'true': [1.19e-07, 0, 65]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.229, 1001, 422], 'true': [1.69e-07, 0, 65]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.14, 967, 422], 'true': [0.0, 0, 65]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.191, 986, 422], 'true': [0.0, 0, 65]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.121, 960, 422], 'true': [0.0, 0, 65]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.324, 1039, 422], 'true': [0.0, 0, 65]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.24, 1005, 422], 'true': [0.0, 0, 65]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.237, 1004, 422], 'true': [4.94e-08, 0, 65]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.997, 916, 422], 'true': [4.71e-08, 0, 65]}]]
[{'': [-8.745141363201234e-16, 0.21470492979935984]}, {'': [2.1862853408003084e-16, 0.21323354823836224]}, {'': [4.372570681600617e-16, 0.2086107710443386]}, {'': [-3.006142343600424e-16, 0.21151171837137614]}, {'': [-2.7328566760003855e-16, 0.2098862829287045]}, {'': [-4.099285014000578e-17, 0.21211315214636448]}, {'': [-6.148927521000867e-17, 0.20541283032587537]}, {'': [-1.3664283380001927e-17, 0.2082718460523779]}, {'': [3.75767792950053e-17, 0.208356528427194]}, {'': [3.416070845000482e-17, 0.21592140512690464]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.174707376657949;  // std dev = 0,465, 1.232,000 (wgt'ed) examples reached here.  /* #neg=842 #pos=390 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.023616560998792578;  // std dev = 4,381, 139,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=23 */
%   | | | else return 0.011995088945666163;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16971398582886113;  // std dev = 0,472, 1.167,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=390 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.10524971917724535;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2120834558441246;  // std dev = 1,794, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.07955370064375313;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.015279219359721501;  // std dev = 4,476, 178,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.27752217396239937;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.10914449270426718;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return 0.14389746533769807;  // std dev = 0,471, 1.144,000 (wgt'ed) examples reached here.  /* #neg=763 #pos=381 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.37510721785980344;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.05833393367636497;  // std dev = 3,426, 73,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | | else return 0.023316571201966414;  // std dev = 3,024, 66,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10598564649128697;  // std dev = 0,465, 1.227,000 (wgt'ed) examples reached here.  /* #neg=837 #pos=390 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.043317955854140416;  // std dev = 3,541, 75,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return -0.08591523996719828;  // std dev = 1,879, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.08494468282741545;  // std dev = 0,940, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.030607004660767073;  // std dev = 3,007, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07891695856242649;  // std dev = 0,462, 1.261,000 (wgt'ed) examples reached here.  /* #neg=871 #pos=390 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.22603039826013996;  // std dev = 0,500, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.00482219277016053;  // std dev = 3,532, 92,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=15 */
%   | | | else return 0.026755921286122558;  // std dev = 3,006, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.04329881915692099;  // std dev = 2,187, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.42919695004967773;  // std dev = 1,168, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.0876660699915898;  // std dev = 0,471, 1.144,000 (wgt'ed) examples reached here.  /* #neg=764 #pos=380 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0029042815360808736;  // std dev = 3,636, 99,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=16 */
%   | | | else return 0.1265401986076579;  // std dev = 2,528, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.017194665411975594;  // std dev = 2,288, 42,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | | else return -0.17799231540971863;  // std dev = 0,092, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06558631643707077;  // std dev = 0,468, 1.195,000 (wgt'ed) examples reached here.  /* #neg=805 #pos=390 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19526944606410793;  // std dev = 1,757, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.3005586890192213;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.12165061839746555;  // std dev = 1,422, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.011131352628225287;  // std dev = 4,371, 139,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=23 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04865655383306816;  // std dev = 0,467, 1.209,000 (wgt'ed) examples reached here.  /* #neg=819 #pos=390 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.010356192483666838;  // std dev = 0,457, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.0010490192199021774;  // std dev = 4,063, 125,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=20 */
%   | | | else return 0.01798920977547683;  // std dev = 2,228, 35,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936707;  // std dev = 4,94e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1900552603567827;  // std dev = 1,864, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.11460726219979232;  // std dev = 1,280, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return 0.03868032626448185;  // std dev = 0,468, 1.180,000 (wgt'ed) examples reached here.  /* #neg=799 #pos=381 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1181411034770316;  // std dev = 1,818, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.015587608143998684;  // std dev = 4,101, 137,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.03256986534086021;  // std dev = 2,295, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | | else return -0.14734178986590082;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6599131908700383;  // std dev = 4,398, 403,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=383 */
%   | | | else return -0.2662945554786859;  // std dev = 4,056, 899,000 (wgt'ed) examples reached here.  /* #neg=883 #pos=16 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.03840953082414121;  // std dev = 1,194, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.0974191125255136;  // std dev = 1,668, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5652460095939166;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.06798679967080865;  // std dev = 0,888, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.02655815443296652;  // std dev = 2,996, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */


Results
   AUC ROC   = 0.911372
   AUC PR    = 0.465167
   CLL	      = -0.280832
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.192771
   F1        = 0.323232


Total learning time: 234.512 seconds
Total inference time: 18.565 seconds
AUC ROC: 0.911372


Results scoring model
   AUC ROC   = 0.954568
   AUC PR    = 0.541065
   CLL	      = -0.269043
   Precision = 0.930233 at threshold = 0.5
   Recall    = 0.164271
   F1        = 0.279232


Total scoring time: 94.794 seconds
Refined model CLL: -0.269043


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.911372
   AUC PR    = 0.465167
   CLL	      = -0.280832
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.192771
   F1        = 0.323232


Total learning time: 337.101 seconds
Total inference time: 18.565 seconds
AUC ROC: 0.911372
Total revision time: 337.101
Best scored revision CLL: -0.269043


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 03:30:35
{'AUC PR': 0.465167, 'AUC ROC': 0.911372, 'Precision': [1.0, 0.5], 'Inference time': 18.565, 'CLL': -0.280832, 'Recall': 0.192771, 'F1': 0.323232, 'Learning time': 337.101, 'parameter_0.2': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 4.477, 'CLL': -0.334382, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.469}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22273226843284077;  // std dev = 0,481, 1.248,000 (wgt'ed) examples reached here.  /* #neg=793 #pos=455 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.09344305274657119;  // std dev = 3,498, 68,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return -0.09185106490048775;  // std dev = 1,378, 40,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.00883386660636166;  // std dev = 3,057, 73,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8288172140108977;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17118278598910222;  // std dev = 1,83e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.4954838806775644;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.32881721401089775;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.18147805594893765;  // std dev = 0,478, 1.259,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=444 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.4485253744704069;  // std dev = 0,489, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.14945354273681177;  // std dev = 0,022, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.09893259794132843;  // std dev = 0,449, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.004810854458699666;  // std dev = 0,354, 155,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16031800850523087;  // std dev = 0,479, 1.266,000 (wgt'ed) examples reached here.  /* #neg=811 #pos=455 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.03731109710869473;  // std dev = 0,873, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.07663442270862199;  // std dev = 0,454, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return -0.0023002453927302175;  // std dev = 3,564, 107,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=15 */
%   | | | else return 0.09743125890783066;  // std dev = 1,932, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else return 0.05441502688810792;  // std dev = 0,404, 29,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.41113844529265964;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.03711201545299976;  // std dev = 0,841, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.10915136231426062;  // std dev = 0,318, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return 0.14048351438436762;  // std dev = 0,480, 1.216,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=445 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then return 0.17085385059005614;  // std dev = 0,488, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return -0.12876872633621517;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.055591384492997394;  // std dev = 2,931, 50,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return -0.026780497216560686;  // std dev = 1,834, 37,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | else return -0.00116159932391513;  // std dev = 0,350, 77,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.47293316563394644;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.030484835602134153;  // std dev = 0,842, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.11271311303440246;  // std dev = 0,290, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else return 0.1218534743364189;  // std dev = 0,482, 1.194,000 (wgt'ed) examples reached here.  /* #neg=749 #pos=445 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), venue(K, B) )
%   | | | then return 0.0846923942861819;  // std dev = 0,823, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1908225508368419;  // std dev = 1,642, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return -0.1357518307715819;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return 0.00815163394254337;  // std dev = 0,361, 128,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=20 */
%   | | else return -0.018338954600945166;  // std dev = 0,357, 40,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09491038912982387;  // std dev = 0,480, 1.232,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=455 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.7868223934452306;  // std dev = 0,250, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.19163086075095676;  // std dev = 0,427, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1546867294534878;  // std dev = 1,140, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.08489362291992728;  // std dev = 1,392, 42,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.01865218137151535;  // std dev = 0,945, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.029409958189924316;  // std dev = 0,384, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6690416684240826;  // std dev = 0,175, 457,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=443 */
%   | | else return -0.26616235382936704;  // std dev = 0,134, 933,000 (wgt'ed) examples reached here.  /* #neg=917 #pos=16 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.2935458848910277;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.28737270119821523;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.046476475889403145;  // std dev = 1,802, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.6155450241998812;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return 0.04877396994678509;  // std dev = 0,841, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.08981885101956;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.024703615047347017;  // std dev = 2,877, 58,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4127262542274314;  // std dev = 0,113, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.21175163490702784;  // std dev = 0,123, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.14904002266900948;  // std dev = 0,558, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.04933144323791149;  // std dev = 1,285, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return 0.04351721381678545;  // std dev = 0,385, 1.244,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=444 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then return -0.005540412924412171;  // std dev = 0,267, 111,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=20 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.018482702923670574;  // std dev = 3,124, 69,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | | | else return -0.1529360885932004;  // std dev = 0,017, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.12395767822630814;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( haswordvenue(A, C) )
%   | then return 0.026499122684725644;  // std dev = 0,382, 1.251,000 (wgt'ed) examples reached here.  /* #neg=813 #pos=438 */
%   | else if ( title(E, D), venue(E, B) )
%   | | then if ( title(F, D), venue(F, A) )
%   | | | then return 0.367358234239257;  // std dev = 1,694, 25,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return -0.11775682920802787;  // std dev = 0,942, 72,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=1 */
%   | | else if ( haswordtitle(D, G), haswordvenue(A, G) )
%   | | | then return -0.039899870755669746;  // std dev = 1,790, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | | else return -0.12014297742746842;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( title(K, I), venue(K, A) )
%   | | | then return 0.6940923271877886;  // std dev = 1,042, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.15493501252094743;  // std dev = 0,037, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.1323328303302022;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3289890140522626;  // std dev = 0,781, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.017833541679593626;  // std dev = 0,379, 1.312,000 (wgt'ed) examples reached here.  /* #neg=857 #pos=455 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6386783931138345;  // std dev = 1,276, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.13390884985977747;  // std dev = 0,300, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return -0.007635740225618907;  // std dev = 1,388, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.1438121391603856;  // std dev = 0,164, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return -0.033774002834961035;  // std dev = 0,206, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | else return -0.1450863688447053;  // std dev = 0,046, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.966416
   AUC PR    = 0.301746
   CLL	      = -0.283413
   Precision = 0.392157 at threshold = 0.5
   Recall    = 0.068847
   F1        = 0.11713


Total learning time: 393.963 seconds
Total inference time: 24.011 seconds
AUC ROC: 0.966416


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 03:37:33
{'AUC PR': 0.301746, 'AUC ROC': 0.966416, 'Precision': [0.392157, 0.5], 'Inference time': 24.011, 'CLL': -0.283413, 'Recall': 0.068847, 'Learning time': 393.963, 'F1': 0.11713}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.024204006076958388;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return 0.2199375529856863;  // std dev = 0,481, 1.230,000 (wgt'ed) examples reached here.  /* #neg=785 #pos=445 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.17064893509951234;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then if ( haswordtitle(N, L) )
%   | | | then return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(A, P), haswordtitle(Q, P) )
%   | | | then return 0.0264657667826807;  // std dev = 3,760, 101,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=17 */
%   | | | else return 0.011995088945666163;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */


Results
   AUC ROC   = 0.543121
   AUC PR    = 0.01251
   CLL	      = -0.200201
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 15.174 seconds
Total inference time: 4.797 seconds
AUC ROC: 0.543121


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 03:37:54
{'AUC PR': 0.01251, 'AUC ROC': 0.543121, 'Precision': [nan, 0.5], 'Inference time': 4.797, 'CLL': -0.200201, 'Recall': 0.0, 'Learning time': 15.174, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1,05e-06, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.1482280148982132;  // std dev = 23,935, 2.782,000 (wgt'ed) examples reached here.  /* #neg=1.975 #pos=807 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.1324782689794626;  // std dev = 23,880, 2.751,000 (wgt'ed) examples reached here.  /* #neg=1.944 #pos=807 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,65e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.11932334204437085;  // std dev = 23,786, 2.700,000 (wgt'ed) examples reached here.  /* #neg=1.893 #pos=807 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4,21e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.0978919026104119;  // std dev = 23,840, 2.729,000 (wgt'ed) examples reached here.  /* #neg=1.922 #pos=807 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3,72e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.0841904869859645;  // std dev = 23,801, 2.708,000 (wgt'ed) examples reached here.  /* #neg=1.901 #pos=807 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.06323790315051678;  // std dev = 23,911, 2.768,000 (wgt'ed) examples reached here.  /* #neg=1.961 #pos=807 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2,73e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.04174000118364107;  // std dev = 24,082, 2.868,000 (wgt'ed) examples reached here.  /* #neg=2.061 #pos=807 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.04538070899222972;  // std dev = 23,891, 2.757,000 (wgt'ed) examples reached here.  /* #neg=1.950 #pos=807 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.033893393495628324;  // std dev = 23,941, 2.785,000 (wgt'ed) examples reached here.  /* #neg=1.978 #pos=807 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.030754960543840748;  // std dev = 23,884, 2.753,000 (wgt'ed) examples reached here.  /* #neg=1.946 #pos=807 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.321577
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 6.14 seconds
Total inference time: 4.363 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.585729
   AUC PR    = 0.190317
   CLL	      = -0.32213
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.171458
   F1        = 0.292726


Total scoring time: 6.948 seconds
Parameter learned model CLL: -0.32213


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.935, 1975, 807], 'true': [1.05e-06, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.88, 1944, 807], 'true': [0.0, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.786, 1893, 807], 'true': [5.65e-07, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.84, 1922, 807], 'true': [4.21e-07, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.801, 1901, 807], 'true': [3.72e-07, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.911, 1961, 807], 'true': [0.0, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.082, 2061, 807], 'true': [2.73e-07, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.891, 1950, 807], 'true': [0.0, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.941, 1978, 807], 'true': [0.0, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.884, 1946, 807], 'true': [9.42e-08, 0, 167]}]]
[{'': [6.552310257907511e-15, 0.20593320726186717]}, {'': [-2.9783228445034138e-15, 0.20729489861324926]}, {'': [1.9146361143236234e-15, 0.20955432098763263]}, {'': [1.0636867301797906e-15, 0.20826670530189245]}, {'': [8.296756495402368e-16, 0.2091983869665493]}, {'': [-2.6592168254494765e-16, 0.2065470310985874]}, {'': [4.467484266755121e-16, 0.20220562490153351]}, {'': [-3.191060190539372e-16, 0.2070306348505424]}, {'': [-2.473071647668013e-16, 0.205801920392953]}, {'': [5.3184336508989535e-17, 0.20720677333937426]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1,05e-06, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17268527595163757;  // std dev = 0,464, 2.394,000 (wgt'ed) examples reached here.  /* #neg=1.641 #pos=753 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.24703782398840124;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.010322848142990022;  // std dev = 4,872, 184,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=28 */
%   | | | else return -0.025722032642423134;  // std dev = 3,989, 155,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2840773128177762;  // std dev = 2,678, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return -0.03919854925118975;  // std dev = 2,291, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.12612403139397196;  // std dev = 3,574, 62,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.14336158820586178;  // std dev = 22,266, 2.328,000 (wgt'ed) examples reached here.  /* #neg=1.612 #pos=716 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.2920078170619877;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 3.064711405789021E-5;  // std dev = 5,406, 241,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=34 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.023248425355786227;  // std dev = 3,291, 78,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=13 */
%   | | | else return -0.13874868995085657;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,65e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20353105718915732;  // std dev = 2,977, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.05559556220011427;  // std dev = 1,858, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.12283674239384978;  // std dev = 3,537, 59,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.136101253491964;  // std dev = 22,050, 2.231,000 (wgt'ed) examples reached here.  /* #neg=1.515 #pos=716 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.04842112083997119;  // std dev = 2,262, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.015605221539563827;  // std dev = 0,912, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0020512770810280833;  // std dev = 5,399, 238,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=34 */
%   | | | else return 0.024970984841009184;  // std dev = 3,151, 71,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4,21e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11410130055735221;  // std dev = 0,466, 2.356,000 (wgt'ed) examples reached here.  /* #neg=1.603 #pos=753 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.25798703245618315;  // std dev = 1,101, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08188302844337121;  // std dev = 1,532, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.06999317487238306;  // std dev = 2,382, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.015681369427335497;  // std dev = 5,980, 322,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=41 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3,72e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2039997332408242;  // std dev = 2,839, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return -0.026123783624073738;  // std dev = 2,206, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.038815806632396935;  // std dev = 3,431, 70,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | | else return 0.09787090687642122;  // std dev = 22,010, 2.214,000 (wgt'ed) examples reached here.  /* #neg=1.498 #pos=716 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.041774804945728786;  // std dev = 4,594, 138,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=27 */
%   | | | else return -0.04622077286588936;  // std dev = 2,698, 77,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=8 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.03100787825093002;  // std dev = 4,106, 168,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=19 */
%   | | | else return -0.12767234721439646;  // std dev = 0,019, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4094055416671488;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return -0.021227855743892406;  // std dev = 2,205, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else return 0.07597955568020531;  // std dev = 0,465, 2.305,000 (wgt'ed) examples reached here.  /* #neg=1.572 #pos=733 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.018630439238273535;  // std dev = 4,678, 145,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=27 */
%   | | | else return -0.05379339554870739;  // std dev = 2,703, 94,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004870984092579055;  // std dev = 4,019, 133,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=19 */
%   | | | else return -0.11077457893346539;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2,73e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21720139123317864;  // std dev = 2,482, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return -0.045073861609058935;  // std dev = 2,243, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.034536880369863576;  // std dev = 3,403, 64,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.06961209676574694;  // std dev = 21,952, 2.190,000 (wgt'ed) examples reached here.  /* #neg=1.474 #pos=716 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.03694978159879716;  // std dev = 4,611, 131,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=27 */
%   | | | else return -0.049598249277802965;  // std dev = 2,708, 96,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=8 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.00646504572428993;  // std dev = 4,010, 132,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=19 */
%   | | | else return -0.10432201964571841;  // std dev = 0,020, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04149254618089519;  // std dev = 0,462, 2.419,000 (wgt'ed) examples reached here.  /* #neg=1.666 #pos=753 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.23906513029475282;  // std dev = 1,371, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.004831873132713522;  // std dev = 5,143, 210,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=32 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020397084518725933;  // std dev = 4,076, 160,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=19 */
%   | | | else return -0.09269670966979944;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.035301594410631854;  // std dev = 0,463, 2.397,000 (wgt'ed) examples reached here.  /* #neg=1.644 #pos=753 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.14009211821336132;  // std dev = 2,046, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.001978840352442253;  // std dev = 5,400, 253,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=34 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.001878239724712465;  // std dev = 3,297, 81,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=13 */
%   | | | else return -0.08562399955743866;  // std dev = 0,010, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6785053195063451;  // std dev = 5,236, 760,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=732 */
%   | | | else return -0.26223780229952615;  // std dev = 5,202, 1.717,000 (wgt'ed) examples reached here.  /* #neg=1.691 #pos=26 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.2121462173431003;  // std dev = 1,099, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.01629345802121186;  // std dev = 3,219, 88,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5548755273773367;  // std dev = 0,377, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.2423215819716181;  // std dev = 1,079, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.0037222691628816494;  // std dev = 3,819, 122,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=17 */


Results
   AUC ROC   = 0.939747
   AUC PR    = 0.469288
   CLL	      = -0.263542
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 462.788 seconds
Total inference time: 22.665 seconds
AUC ROC: 0.939747


Results scoring model
   AUC ROC   = 0.95779
   AUC PR    = 0.586271
   CLL	      = -0.259793
   Precision = 0.937824 at threshold = 0.5
   Recall    = 0.185832
   F1        = 0.310197


Total scoring time: 193.367 seconds
Refined model CLL: -0.259793


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.939747
   AUC PR    = 0.469288
   CLL	      = -0.263542
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 669.243 seconds
Total inference time: 22.665 seconds
AUC ROC: 0.939747
Total revision time: 669.243
Best scored revision CLL: -0.259793


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 03:49:31
{'AUC PR': 0.469288, 'AUC ROC': 0.939747, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 4.363, 'CLL': -0.321577, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 6.14}, 'Inference time': 22.665, 'CLL': -0.263542, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 669.243}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22035365950895608;  // std dev = 0,481, 2.540,000 (wgt'ed) examples reached here.  /* #neg=1.620 #pos=920 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.15814893509951236;  // std dev = 2,049, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.025471754555660493;  // std dev = 4,884, 232,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=27 */
%   | | | else return 0.028880642416585518;  // std dev = 2,409, 41,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.032061978577773244;  // std dev = 3,148, 69,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18951478569580954;  // std dev = 0,480, 2.553,000 (wgt'ed) examples reached here.  /* #neg=1.633 #pos=920 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.022677310037631414;  // std dev = 0,851, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.03162893957529534;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.24514039612070507;  // std dev = 1,875, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.5278880664082596;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02749804733586732;  // std dev = 1,582, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.006547427717695969;  // std dev = 4,642, 183,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=25 */
%   | | | else return -0.012845842627358038;  // std dev = 3,740, 127,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15706423228363045;  // std dev = 0,479, 2.581,000 (wgt'ed) examples reached here.  /* #neg=1.661 #pos=920 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.28296420802407135;  // std dev = 1,005, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.0706825287966693;  // std dev = 0,411, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.05187459110367051;  // std dev = 4,590, 134,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=27 */
%   | | | else return -0.07302762308970356;  // std dev = 2,163, 76,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.007383406706840083;  // std dev = 3,831, 129,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=17 */
%   | | | else return -0.12918431879300854;  // std dev = 0,028, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7743549765093328;  // std dev = 5,96e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.225645023490667;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.774354976509333;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11200865985430332;  // std dev = 2,105, 44,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | else return 0.13648658732889374;  // std dev = 0,481, 2.477,000 (wgt'ed) examples reached here.  /* #neg=1.580 #pos=897 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.09290502341787864;  // std dev = 0,437, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.09024647960616895;  // std dev = 0,408, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.001705338540298567;  // std dev = 0,357, 209,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=32 */
%   | | else return -0.01448726741512369;  // std dev = 0,327, 138,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11541427434319614;  // std dev = 0,480, 2.515,000 (wgt'ed) examples reached here.  /* #neg=1.595 #pos=920 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7624445670704182;  // std dev = 1,343, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.14756791653181048;  // std dev = 1,025, 96,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.06753884318754952;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.06406691093265462;  // std dev = 2,163, 75,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0013736790209464805;  // std dev = 3,978, 134,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=19 */
%   | | | else return -0.13661272668449773;  // std dev = 0,028, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.11388059514305678;  // std dev = 0,025, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5849914408586775;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.1391043122262057;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return -0.08873222304555793;  // std dev = 1,805, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else return 0.07997456109352985;  // std dev = 0,476, 2.544,000 (wgt'ed) examples reached here.  /* #neg=1.648 #pos=896 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then return 0.25187202553548277;  // std dev = 0,498, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.028330903950105367;  // std dev = 0,317, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, A) )
%   | | | then return -0.01494351214582248;  // std dev = 0,890, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.018075930189286105;  // std dev = 1,880, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else return -0.01912163628548388;  // std dev = 0,305, 341,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07274383749493604;  // std dev = 0,478, 2.544,000 (wgt'ed) examples reached here.  /* #neg=1.624 #pos=920 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.631697884892315;  // std dev = 1,345, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.13007662505516862;  // std dev = 1,031, 118,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1216778437030526;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.060879754656892306;  // std dev = 2,174, 80,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.003162773097559615;  // std dev = 3,982, 134,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=19 */
%   | | | else return -0.12593487117854701;  // std dev = 0,094, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.10112551984860262;  // std dev = 0,027, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05741818487880505;  // std dev = 0,478, 2.546,000 (wgt'ed) examples reached here.  /* #neg=1.626 #pos=920 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return 0.020893569789116915;  // std dev = 0,354, 181,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=28 */
%   | | else if ( haswordtitle(E, G), haswordvenue(B, G) )
%   | | | then return 0.005293919102487599;  // std dev = 2,225, 59,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return -0.11363727084645665;  // std dev = 0,080, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.019456549217009938;  // std dev = 0,276, 78,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5153629103314069;  // std dev = 0,164, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.24357813146801557;  // std dev = 1,83e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordtitle(H, D), haswordtitle(H, C) )
%   | | | then return -0.152520911988527;  // std dev = 1,590, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return -0.08401885411934669;  // std dev = 1,766, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else return 0.04665485146413355;  // std dev = 0,481, 2.473,000 (wgt'ed) examples reached here.  /* #neg=1.576 #pos=897 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.07261041814940114;  // std dev = 0,453, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.08866877696491218;  // std dev = 0,397, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return -0.016791444841492646;  // std dev = 0,266, 225,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=32 */
%   | | else return -0.00957670486829384;  // std dev = 0,322, 141,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=17 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.6402946267660794;  // std dev = 0,186, 923,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=892 */
%   | | else return -0.2886408364003307;  // std dev = 0,129, 1.835,000 (wgt'ed) examples reached here.  /* #neg=1.810 #pos=25 */
%   | else if ( haswordauthor(G, C) )
%   | | then return 0.1394627602834302;  // std dev = 0,366, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( haswordtitle(D, H), haswordvenue(B, H) )
%   | | | then return 0.04449593303070204;  // std dev = 2,716, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return -0.13430066667280388;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( title(L, J), venue(L, B) )
%   | | | then return 0.5792165404024875;  // std dev = 1,038, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.09685254560210663;  // std dev = 1,095, 64,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=2 */
%   | | else return -0.11648723644731969;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.38356486981196564;  // std dev = 0,375, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */


Results
   AUC ROC   = 0.925359
   AUC PR    = 0.251557
   CLL	      = -0.308726
   Precision = 0.292308 at threshold = 0.5
   Recall    = 0.032702
   F1        = 0.058824


Total learning time: 642.4639999999999 seconds
Total inference time: 23.836 seconds
AUC ROC: 0.925359


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 04:00:38
{'AUC PR': 0.251557, 'AUC ROC': 0.925359, 'Precision': [0.292308, 0.5], 'Inference time': 23.836, 'CLL': -0.308726, 'Recall': 0.032702, 'Learning time': 642.4639999999999, 'F1': 0.058824}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2152917922423644;  // std dev = 0,479, 2.576,000 (wgt'ed) examples reached here.  /* #neg=1.656 #pos=920 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15814893509951236;  // std dev = 2,049, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.058148935099512224;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.027677836554031443;  // std dev = 5,068, 254,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=29 */
%   | | | else return -0.014191490432402564;  // std dev = 3,235, 94,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=12 */


Results
   AUC ROC   = 0.549583
   AUC PR    = 0.01263
   CLL	      = -0.199169
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.442 seconds
Total inference time: 3.641 seconds
AUC ROC: 0.549583


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 04:00:53
{'AUC PR': 0.01263, 'AUC ROC': 0.549583, 'Precision': [nan, 0.5], 'Inference time': 3.641, 'CLL': -0.199169, 'Recall': 0.0, 'Learning time': 10.442, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.1529035068030683;  // std dev = 29,393, 4.156,000 (wgt'ed) examples reached here.  /* #neg=2.931 #pos=1.225 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.13226323496452538;  // std dev = 29,413, 4.170,000 (wgt'ed) examples reached here.  /* #neg=2.945 #pos=1.225 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.1181929563409941;  // std dev = 29,316, 4.105,000 (wgt'ed) examples reached here.  /* #neg=2.880 #pos=1.225 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.09179706373336939;  // std dev = 29,488, 4.222,000 (wgt'ed) examples reached here.  /* #neg=2.997 #pos=1.225 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.0790815251251882;  // std dev = 29,441, 4.189,000 (wgt'ed) examples reached here.  /* #neg=2.964 #pos=1.225 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.06599796102959082;  // std dev = 29,431, 4.182,000 (wgt'ed) examples reached here.  /* #neg=2.957 #pos=1.225 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,89e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.06293962464114226;  // std dev = 29,249, 4.061,000 (wgt'ed) examples reached here.  /* #neg=2.836 #pos=1.225 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527747;  // std dev = 9,88e-08, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.04449008132573941;  // std dev = 29,391, 4.155,000 (wgt'ed) examples reached here.  /* #neg=2.930 #pos=1.225 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.034004874912917725;  // std dev = 29,434, 4.184,000 (wgt'ed) examples reached here.  /* #neg=2.959 #pos=1.225 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.03204929661473731;  // std dev = 29,337, 4.119,000 (wgt'ed) examples reached here.  /* #neg=2.894 #pos=1.225 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.325894
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 10.106 seconds
Total inference time: 4.892 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.580767
   AUC PR    = 0.18017
   CLL	      = -0.326578
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.161533
   F1        = 0.278138


Total scoring time: 8.544 seconds
Parameter learned model CLL: -0.326578


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.393, 2931, 1225], 'true': [1.08e-06, 0, 236]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.413, 2945, 1225], 'true': [0.0, 0, 236]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.316, 2880, 1225], 'true': [5.33e-07, 0, 236]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.488, 2997, 1225], 'true': [0.0, 0, 236]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.441, 2964, 1225], 'true': [2.92e-07, 0, 236]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.431, 2957, 1225], 'true': [2.95e-07, 0, 236]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.249, 2836, 1225], 'true': [2.89e-07, 0, 236]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.391, 2930, 1225], 'true': [9.88e-08, 0, 236]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.434, 2959, 1225], 'true': [0.0, 0, 236]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.337, 2894, 1225], 'true': [1.03e-07, 0, 236]}]]
[{'': [4.937669858671883e-15, 0.20787431416343755]}, {'': [-4.215084025695509e-15, 0.20746711982933122]}, {'': [1.2043097216272884e-15, 0.2093641187998665]}, {'': [-1.5053871520341105e-16, 0.20596165536547434]}, {'': [3.6129291648818656e-16, 0.20691575846234758]}, {'': [3.688198522483571e-16, 0.20711872132648676]}, {'': [3.53765980728016e-16, 0.21065721400453344]}, {'': [4.139814668093804e-17, 0.20790342924089514]}, {'': [-1.6559258672375216e-16, 0.20706071156992714]}, {'': [4.516161456102332e-17, 0.20895416470468609]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.17633075328132924;  // std dev = 4,369, 88,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17347449665765335;  // std dev = 0,465, 3.517,000 (wgt'ed) examples reached here.  /* #neg=2.408 #pos=1.109 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.1637044906550679;  // std dev = 2,764, 36,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.027266582158335467;  // std dev = 6,182, 272,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=46 */
%   | | | else return -0.022035396697723076;  // std dev = 4,784, 217,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=26 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15346970174586366;  // std dev = 0,465, 3.589,000 (wgt'ed) examples reached here.  /* #neg=2.448 #pos=1.141 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.060187850621443426;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17036356959554175;  // std dev = 2,708, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.016200777778746848;  // std dev = 6,211, 285,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=46 */
%   | | | else return -0.01937415249287748;  // std dev = 4,784, 217,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=26 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.36557591587930893;  // std dev = 2,965, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return -0.05746731860168877;  // std dev = 2,640, 62,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11536514128343733;  // std dev = 4,510, 98,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | | | else return 0.12963349261775126;  // std dev = 27,215, 3.426,000 (wgt'ed) examples reached here.  /* #neg=2.343 #pos=1.083 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.26958154027532133;  // std dev = 2,169, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.061047234801258066;  // std dev = 1,268, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.010111231624998458;  // std dev = 6,375, 304,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=49 */
%   | | | else return -0.009015226736970626;  // std dev = 4,671, 194,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=25 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11343582380178524;  // std dev = 0,466, 3.562,000 (wgt'ed) examples reached here.  /* #neg=2.421 #pos=1.141 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2805913489091166;  // std dev = 2,081, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.026981156239594916;  // std dev = 1,297, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1263956191176104;  // std dev = 2,866, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 5.875176865776697E-4;  // std dev = 7,284, 431,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=62 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.14695036277380732;  // std dev = 3,690, 60,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return -0.12064879350508345;  // std dev = 2,016, 53,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
%   | | else return 0.0916240609241272;  // std dev = 0,466, 3.501,000 (wgt'ed) examples reached here.  /* #neg=2.388 #pos=1.113 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03481999719312323;  // std dev = 5,638, 208,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=40 */
%   | | | else return -0.03621170483069077;  // std dev = 3,751, 138,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.25237875752960826;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0285556929422623;  // std dev = 4,729, 227,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=25 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07477948180152137;  // std dev = 0,464, 3.600,000 (wgt'ed) examples reached here.  /* #neg=2.459 #pos=1.141 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.13593936009848873;  // std dev = 2,270, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.006952021921717139;  // std dev = 6,346, 299,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=49 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0027264897355747187;  // std dev = 4,815, 196,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=27 */
%   | | | else return -0.14819884948724552;  // std dev = 0,095, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,89e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06334605277099778;  // std dev = 0,466, 3.567,000 (wgt'ed) examples reached here.  /* #neg=2.426 #pos=1.141 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.15762104557862353;  // std dev = 2,637, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return -0.005584726238610442;  // std dev = 6,739, 382,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=54 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.22291127749134826;  // std dev = 0,107, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0027279946002228034;  // std dev = 3,999, 127,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527747;  // std dev = 9,88e-08, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04798582688853479;  // std dev = 0,464, 3.605,000 (wgt'ed) examples reached here.  /* #neg=2.464 #pos=1.141 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03760118911436028;  // std dev = 5,589, 194,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=40 */
%   | | | else return -0.028610324871510964;  // std dev = 3,712, 131,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=17 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -7.654816558560906E-4;  // std dev = 4,829, 199,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=27 */
%   | | | else return -0.12503341867995776;  // std dev = 0,058, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04286673481072456;  // std dev = 0,466, 3.552,000 (wgt'ed) examples reached here.  /* #neg=2.411 #pos=1.141 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.00472795924370169;  // std dev = 6,109, 303,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=45 */
%   | | | else return 0.031974342212134105;  // std dev = 3,887, 91,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=20 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.006398481280570368;  // std dev = 4,008, 123,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=19 */
%   | | | else return -0.10392513184024918;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.02815823948508983;  // std dev = 0,463, 3.626,000 (wgt'ed) examples reached here.  /* #neg=2.485 #pos=1.141 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.29545325971520664;  // std dev = 1,044, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07381942184956357;  // std dev = 2,334, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.006535067683393087;  // std dev = 6,340, 315,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=49 */
%   | | | else return -0.010792121203112924;  // std dev = 4,687, 202,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=25 */


Results
   AUC ROC   = 0.618437
   AUC PR    = 0.189211
   CLL	      = -0.323058
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 174.034 seconds
Total inference time: 8.856 seconds
AUC ROC: 0.618437


Results scoring model
   AUC ROC   = 0.628714
   AUC PR    = 0.18901
   CLL	      = -0.326022
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.161533
   F1        = 0.278138


Total scoring time: 34.903 seconds
Refined model CLL: -0.326022


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.618437
   AUC PR    = 0.189211
   CLL	      = -0.323058
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 227.587 seconds
Total inference time: 8.856 seconds
AUC ROC: 0.618437
Total revision time: 227.587
Best scored revision CLL: -0.326022


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 04:04:56
{'AUC PR': 0.189211, 'AUC ROC': 0.618437, 'Precision': [1.0, 0.5], 'Inference time': 8.856, 'parameter_0.6': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 4.892, 'CLL': -0.325894, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 10.106}, 'CLL': -0.323058, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 227.587}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.001851064900487679;  // std dev = 2,454, 50,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
%   | else return 0.2186454272743588;  // std dev = 0,480, 3.706,000 (wgt'ed) examples reached here.  /* #neg=2.370 #pos=1.336 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordauthor(K, I) )
%   | | then return 0.27920156667845974;  // std dev = 0,494, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( title(L, J), venue(L, A) )
%   | | | then return 0.052323692381064824;  // std dev = 5,677, 206,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=40 */
%   | | | else return -0.052742154009398565;  // std dev = 2,863, 101,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=9 */
%   | else return -0.015682840601422696;  // std dev = 0,332, 214,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=27 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1936190887187316;  // std dev = 0,480, 3.776,000 (wgt'ed) examples reached here.  /* #neg=2.399 #pos=1.377 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.060047295335359706;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.13819212603018402;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.19765831631485226;  // std dev = 2,555, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.10375643135169613;  // std dev = 0,864, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.008939709514564118;  // std dev = 5,526, 257,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=36 */
%   | | | else return 0.05288668031336793;  // std dev = 2,845, 53,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.06004729533535973;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.01934968958926356;  // std dev = 4,594, 199,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=24 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6787933336561371;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.3002304799770424;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return -0.09682751469759876;  // std dev = 2,505, 69,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
%   | else return 0.15647852864649056;  // std dev = 0,478, 3.760,000 (wgt'ed) examples reached here.  /* #neg=2.420 #pos=1.340 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.26641244259964186;  // std dev = 0,497, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( title(K, I), venue(K, A) )
%   | | | then return 0.04640008491239171;  // std dev = 5,640, 203,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=40 */
%   | | | else return -0.0637235032154226;  // std dev = 2,876, 120,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=9 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.027458746152786928;  // std dev = 0,314, 243,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=27 */
%   | | else return -0.13763984638112506;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13009355091535824;  // std dev = 0,476, 3.865,000 (wgt'ed) examples reached here.  /* #neg=2.488 #pos=1.377 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.1257922783911521;  // std dev = 0,478, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.5196737817360589;  // std dev = 0,824, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14328217689395478;  // std dev = 0,016, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.0028074736316694437;  // std dev = 0,919, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.1900517990399935;  // std dev = 2,623, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0013118664035010618;  // std dev = 5,670, 261,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=38 */
%   | | | else return -0.014642465920826851;  // std dev = 4,595, 201,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.4848409201614711;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.22229722782518996;  // std dev = 2,683, 45,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | | | else return -0.07054226249757146;  // std dev = 2,454, 50,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
%   | else return 0.1135539565237389;  // std dev = 0,480, 3.684,000 (wgt'ed) examples reached here.  /* #neg=2.348 #pos=1.336 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.15522841119777211;  // std dev = 0,492, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( title(K, I), venue(K, A) )
%   | | | then return 0.049354935385011796;  // std dev = 5,573, 189,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=40 */
%   | | | else return -0.05581306906005299;  // std dev = 2,876, 119,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=9 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.007200197749798237;  // std dev = 0,334, 210,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=27 */
%   | | else return -0.1254519735517916;  // std dev = 0,037, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07713750903796471;  // std dev = 0,473, 3.949,000 (wgt'ed) examples reached here.  /* #neg=2.572 #pos=1.377 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7989525333222863;  // std dev = 0,985, 40,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return -0.16249014110687157;  // std dev = 1,039, 150,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.19563527032592626;  // std dev = 2,068, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.04383376649385033;  // std dev = 2,866, 111,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.014114736951728825;  // std dev = 4,767, 184,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=27 */
%   | | | else return -0.13661484504104268;  // std dev = 0,076, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.10719815641101446;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06443866009504812;  // std dev = 0,474, 3.916,000 (wgt'ed) examples reached here.  /* #neg=2.539 #pos=1.377 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7684292082375169;  // std dev = 1,780, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return -0.1327954159448035;  // std dev = 0,473, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.03752761726261495;  // std dev = 3,195, 84,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return -0.13353682519589002;  // std dev = 0,221, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.030270867899383956;  // std dev = 3,461, 133,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=19 */
%   | | | else return -0.14451535006275268;  // std dev = 0,180, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10116740405611499;  // std dev = 0,032, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05855086087946051;  // std dev = 0,477, 3.834,000 (wgt'ed) examples reached here.  /* #neg=2.457 #pos=1.377 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.09141465785306699;  // std dev = 0,741, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10188483211011347;  // std dev = 0,019, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.05907730866415035;  // std dev = 0,769, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.061089672104599355;  // std dev = 2,078, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.20683746043434703;  // std dev = 0,101, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.04780533414390299;  // std dev = 1,883, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01708253436448174;  // std dev = 5,381, 368,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=44 */
%   | | | else return -0.0101732177112873;  // std dev = 3,307, 124,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04814345149197198;  // std dev = 0,477, 3.813,000 (wgt'ed) examples reached here.  /* #neg=2.436 #pos=1.377 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5451478404185691;  // std dev = 2,833, 53,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | | else return -0.11818914386961478;  // std dev = 0,559, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1146406482256656;  // std dev = 1,944, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.0026515897711176803;  // std dev = 2,425, 61,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
%   | else return -0.013602144948071911;  // std dev = 0,298, 131,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=19 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( haswordtitle(D, E), haswordvenue(A, E) )
%   | then if ( venue(F, A), title(F, D) )
%   | | then return 0.02405062991313615;  // std dev = 0,473, 3.741,000 (wgt'ed) examples reached here.  /* #neg=2.441 #pos=1.300 */
%   | | else if ( title(G, D), venue(G, B) )
%   | | | then return -0.3193802280050311;  // std dev = 0,051, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.06140936996082951;  // std dev = 5,366, 230,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=63 */
%   | else if ( title(H, D), venue(H, A) )
%   | | then if ( samebib(H, I), venue(I, B) )
%   | | | then return 0.667667321671951;  // std dev = 0,974, 34,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.13325866650422627;  // std dev = 0,892, 97,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=1 */
%   | | else return -0.008873805184715158;  // std dev = 0,261, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return 0.512084317620725;  // std dev = 0,363, 26,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | else return 0.6768512894851391;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.00925345498761515;  // std dev = 0,271, 169,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=27 */


Results
   AUC ROC   = 0.724517
   AUC PR    = 0.048572
   CLL	      = -0.344658
   Precision = 0.113636 at threshold = 0.5
   Recall    = 0.008606
   F1        = 0.016


Total learning time: 1437.13 seconds
Total inference time: 22.141 seconds
AUC ROC: 0.724517


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 04:29:15
{'AUC PR': 0.048572, 'AUC ROC': 0.724517, 'Precision': [0.113636, 0.5], 'Inference time': 22.141, 'CLL': -0.344658, 'Recall': 0.008606, 'Learning time': 1437.13, 'F1': 0.016}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20924531449777337;  // std dev = 0,477, 3.922,000 (wgt'ed) examples reached here.  /* #neg=2.545 #pos=1.377 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2285193054698827;  // std dev = 2,509, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17814893509951235;  // std dev = 2,332, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.026365500596026072;  // std dev = 6,238, 381,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=44 */
%   | | | else return 0.0021489350995123634;  // std dev = 3,925, 125,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=18 */


Results
   AUC ROC   = 0.54968
   AUC PR    = 0.012633
   CLL	      = -0.198543
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 14.485 seconds
Total inference time: 3.336 seconds
AUC ROC: 0.54968


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 04:29:34
{'AUC PR': 0.012633, 'AUC ROC': 0.54968, 'Precision': [nan, 0.5], 'Inference time': 3.336, 'CLL': -0.198543, 'Recall': 0.0, 'Learning time': 14.485, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else return 0.15513523646937016;  // std dev = 33,810, 5.475,000 (wgt'ed) examples reached here.  /* #neg=3.849 #pos=1.626 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else return 0.12829392681494964;  // std dev = 33,975, 5.605,000 (wgt'ed) examples reached here.  /* #neg=3.979 #pos=1.626 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else return 0.11242641812710001;  // std dev = 33,920, 5.561,000 (wgt'ed) examples reached here.  /* #neg=3.935 #pos=1.626 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else return 0.09858462853022798;  // std dev = 33,840, 5.498,000 (wgt'ed) examples reached here.  /* #neg=3.872 #pos=1.626 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else return 0.08181547065221445;  // std dev = 33,856, 5.511,000 (wgt'ed) examples reached here.  /* #neg=3.885 #pos=1.626 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,82e-07, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else return 0.06900460759248156;  // std dev = 33,827, 5.488,000 (wgt'ed) examples reached here.  /* #neg=3.862 #pos=1.626 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else return 0.05083645839441522;  // std dev = 33,966, 5.598,000 (wgt'ed) examples reached here.  /* #neg=3.972 #pos=1.626 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2,70e-07, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else return 0.04338419749754182;  // std dev = 33,920, 5.561,000 (wgt'ed) examples reached here.  /* #neg=3.935 #pos=1.626 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else return 0.03988455422913593;  // std dev = 33,807, 5.473,000 (wgt'ed) examples reached here.  /* #neg=3.847 #pos=1.626 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801178;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else return 0.029075563175432844;  // std dev = 33,882, 5.531,000 (wgt'ed) examples reached here.  /* #neg=3.905 #pos=1.626 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.324515
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 16.977 seconds
Total inference time: 4.671 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.582649
   AUC PR    = 0.184001
   CLL	      = -0.325149
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165298
   F1        = 0.2837


Total scoring time: 10.771 seconds
Parameter learned model CLL: -0.325149


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.81, 3849, 1626], 'true': [1.05e-06, 0, 322]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.975, 3979, 1626], 'true': [0.0, 0, 322]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.92, 3935, 1626], 'true': [0.0, 0, 322]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.84, 3872, 1626], 'true': [0.0, 0, 322]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.856, 3885, 1626], 'true': [0.0, 0, 322]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.827, 3862, 1626], 'true': [3.82e-07, 0, 322]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.966, 3972, 1626], 'true': [2.49e-07, 0, 322]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.92, 3935, 1626], 'true': [2.7e-07, 0, 322]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.807, 3847, 1626], 'true': [0.0, 0, 322]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.882, 3905, 1626], 'true': [0.0, 0, 322]}]]
[{'': [3.442380955856386e-15, 0.20878543816845374]}, {'': [-5.031172166251641e-15, 0.20594120357361848]}, {'': [-3.971978025988138e-16, 0.20689952223009453]}, {'': [-9.267948727305654e-16, 0.2082794484214851]}, {'': [-5.516636147205746e-16, 0.20799396900764835]}, {'': [4.523641640708712e-16, 0.2084993019489701]}, {'': [1.9308226515220113e-16, 0.20609335672248102]}, {'': [2.261820820354356e-16, 0.20689952223011338]}, {'': [-2.234237639618327e-16, 0.2088294916469336]}, {'': [-1.985989012994069e-16, 0.20755550780152646]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17048165076761504;  // std dev = 0,463, 4.857,000 (wgt'ed) examples reached here.  /* #neg=3.340 #pos=1.517 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.21529179224236947;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.02196311602860809;  // std dev = 7,485, 409,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=67 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.032262023804597785;  // std dev = 5,338, 292,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1456323143854203;  // std dev = 0,462, 4.901,000 (wgt'ed) examples reached here.  /* #neg=3.384 #pos=1.517 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21855847782147464;  // std dev = 1,585, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.08856347031622162;  // std dev = 2,907, 47,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.13607855809750277;  // std dev = 2,754, 38,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.0074340341080352;  // std dev = 8,471, 619,000 (wgt'ed) examples reached here.  /* #neg=536 #pos=83 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.365158825922527;  // std dev = 3,854, 60,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=33 */
%   | | | else return -0.041984031220330155;  // std dev = 2,928, 70,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=10 */
%   | | else return 0.12410873160263887;  // std dev = 0,462, 4.771,000 (wgt'ed) examples reached here.  /* #neg=3.297 #pos=1.474 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06805923843968892;  // std dev = 6,566, 257,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=55 */
%   | | | else return -0.032885297516600236;  // std dev = 4,337, 187,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=22 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.032165012179772384;  // std dev = 5,345, 301,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=32 */
%   | | | else return -0.12571693437181644;  // std dev = 0,010, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11293132707484983;  // std dev = 0,465, 4.778,000 (wgt'ed) examples reached here.  /* #neg=3.261 #pos=1.517 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06059643282928975;  // std dev = 6,566, 254,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=55 */
%   | | | else return -0.018845838581328503;  // std dev = 4,314, 172,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.012664691351247486;  // std dev = 5,298, 262,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=32 */
%   | | | else return -0.11466410510026682;  // std dev = 0,016, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.07921900772455635;  // std dev = 4,888, 117,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | | | else return 0.7922236369776859;  // std dev = 0,066, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.09030371551493012;  // std dev = 0,464, 4.701,000 (wgt'ed) examples reached here.  /* #neg=3.227 #pos=1.474 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.27159999395053963;  // std dev = 2,333, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return -0.022104068926665433;  // std dev = 1,327, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.1096015396191262;  // std dev = 3,142, 51,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.007573207924085438;  // std dev = 8,436, 615,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=83 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,82e-07, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07427986735658103;  // std dev = 0,464, 4.831,000 (wgt'ed) examples reached here.  /* #neg=3.314 #pos=1.517 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.02771569628088378;  // std dev = 1,253, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.12254134550137229;  // std dev = 2,971, 42,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0027996111533366776;  // std dev = 7,464, 476,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=66 */
%   | | | else return 0.0071787347278291815;  // std dev = 4,830, 171,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1508257306394788;  // std dev = 4,234, 73,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=33 */
%   | | | else return -0.06638777481645929;  // std dev = 2,694, 59,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | else return 0.06248600049110023;  // std dev = 0,465, 4.671,000 (wgt'ed) examples reached here.  /* #neg=3.197 #pos=1.474 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1414250226320103;  // std dev = 2,518, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.05108874337428995;  // std dev = 1,356, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 2.0361875888464984E-4;  // std dev = 7,449, 426,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=67 */
%   | | | else return -0.024246491782895587;  // std dev = 5,176, 279,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=30 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2,70e-07, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.046937990586007276;  // std dev = 0,463, 4.857,000 (wgt'ed) examples reached here.  /* #neg=3.340 #pos=1.517 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.007944229665362653;  // std dev = 7,217, 397,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=64 */
%   | | | else return 0.061321986437611074;  // std dev = 3,229, 65,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.016790902312446145;  // std dev = 5,328, 283,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=32 */
%   | | | else return -0.09847304349059384;  // std dev = 6,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04388839249092727;  // std dev = 0,465, 4.761,000 (wgt'ed) examples reached here.  /* #neg=3.244 #pos=1.517 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.08273255151237169;  // std dev = 3,022, 46,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return -0.011941581988318373;  // std dev = 1,241, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08386881276294093;  // std dev = 2,710, 39,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.006007549949096507;  // std dev = 8,437, 618,000 (wgt'ed) examples reached here.  /* #neg=535 #pos=83 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801178;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03791868065508436;  // std dev = 0,466, 4.719,000 (wgt'ed) examples reached here.  /* #neg=3.202 #pos=1.517 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16255677779840333;  // std dev = 2,399, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return -0.046187345924769536;  // std dev = 1,349, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.03214153810909331;  // std dev = 3,219, 58,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return -9.92047624130284E-4;  // std dev = 8,418, 598,000 (wgt'ed) examples reached here.  /* #neg=515 #pos=83 */


Results
   AUC ROC   = 0.62031
   AUC PR    = 0.188808
   CLL	      = -0.31961
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 223.849 seconds
Total inference time: 8.014 seconds
AUC ROC: 0.62031


Results scoring model
   AUC ROC   = 0.631703
   AUC PR    = 0.193105
   CLL	      = -0.323961
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165811
   F1        = 0.284456


Total scoring time: 38.669 seconds
Refined model CLL: -0.323961


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.62031
   AUC PR    = 0.188808
   CLL	      = -0.31961
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 290.26599999999996 seconds
Total inference time: 8.014 seconds
AUC ROC: 0.62031
Total revision time: 290.26599999999996
Best scored revision CLL: -0.323961


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 04:34:38
{'AUC PR': 0.188808, 'AUC ROC': 0.62031, 'Precision': [1.0, 0.5], 'Inference time': 8.014, 'parameter_0.8': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 4.671, 'CLL': -0.324515, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 16.977}, 'CLL': -0.31961, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 290.26599999999996}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995115;  // std dev = 2,38e-07, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.003237203514349038;  // std dev = 3,473, 101,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=14 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21484955423272067;  // std dev = 0,479, 5.007,000 (wgt'ed) examples reached here.  /* #neg=3.221 #pos=1.786 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.3126943896449669;  // std dev = 0,498, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( author(L, J), venue(L, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.0014747986197359557;  // std dev = 0,347, 691,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=97 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19341502789816098;  // std dev = 0,480, 5.058,000 (wgt'ed) examples reached here.  /* #neg=3.219 #pos=1.839 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7735826038429064;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return -0.1377685463302569;  // std dev = 1,005, 197,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.291863991173331;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.05408039256931691;  // std dev = 3,309, 137,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.009988725641252277;  // std dev = 5,246, 242,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=32 */
%   | | | else return -0.14127585308140403;  // std dev = 0,016, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.14167163344522946;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7715671474360339;  // std dev = 0,076, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.15885538176663924;  // std dev = 0,478, 5.095,000 (wgt'ed) examples reached here.  /* #neg=3.271 #pos=1.824 */
%   else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, B) )
%   | | then if ( samebib(G, H), venue(H, A) )
%   | | | then return 0.7750664103794076;  // std dev = 0,101, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13686004365123036;  // std dev = 0,013, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(I, E) )
%   | | | then return 0.11096534342989653;  // std dev = 2,437, 40,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.12907498645110363;  // std dev = 0,015, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.30941139978134313;  // std dev = 0,948, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06946359071344342;  // std dev = 2,470, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else return -0.011778890019276294;  // std dev = 0,317, 632,000 (wgt'ed) examples reached here.  /* #neg=549 #pos=83 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1298972029772774;  // std dev = 0,477, 5.165,000 (wgt'ed) examples reached here.  /* #neg=3.326 #pos=1.839 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6752793350918609;  // std dev = 1,685, 57,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=54 */
%   | | | else return -0.12105768396305208;  // std dev = 1,012, 197,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.010267236441948938;  // std dev = 4,096, 141,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=22 */
%   | | | else return -0.13499513789839931;  // std dev = 0,014, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -9.123594496300955E-6;  // std dev = 5,186, 227,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=32 */
%   | | | else return -0.1256563465341789;  // std dev = 0,026, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.12278571541723832;  // std dev = 0,013, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11203956448007826;  // std dev = 0,478, 5.085,000 (wgt'ed) examples reached here.  /* #neg=3.246 #pos=1.839 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5248721629426946;  // std dev = 1,686, 57,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=54 */
%   | | | else return -0.10833780641964497;  // std dev = 1,006, 202,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.16352230938136178;  // std dev = 2,383, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.057107847938921666;  // std dev = 3,324, 157,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.005691426432965508;  // std dev = 5,208, 235,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=32 */
%   | | | else return -0.11239903482039823;  // std dev = 0,021, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.1087475958296273;  // std dev = 0,014, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08182689329923025;  // std dev = 0,476, 5.207,000 (wgt'ed) examples reached here.  /* #neg=3.368 #pos=1.839 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.1857342801547268;  // std dev = 0,477, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.22739826711332464;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1226178870239667;  // std dev = 0,053, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.026059141002070678;  // std dev = 4,011, 324,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=54 */
%   | | | else return 0.03676622914081127;  // std dev = 3,301, 79,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01926507973144954;  // std dev = 5,113, 258,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=30 */
%   | | | else return -0.10097311616701363;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06844091879479947;  // std dev = 0,476, 5.166,000 (wgt'ed) examples reached here.  /* #neg=3.327 #pos=1.839 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.15376602350047527;  // std dev = 0,490, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.34673024704989913;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10844281580962449;  // std dev = 0,047, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.01110226672235277;  // std dev = 3,887, 263,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=55 */
%   | | | else return -0.051709945494066746;  // std dev = 3,313, 157,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.016478601820077345;  // std dev = 5,109, 260,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=30 */
%   | | | else return -0.09216922089948108;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5248732362647339;  // std dev = 0,104, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.23035719293553497;  // std dev = 2,687, 49,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=29 */
%   | | | else return -0.16303250842500264;  // std dev = 2,623, 85,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=9 */
%   | else return 0.06021911816566103;  // std dev = 0,480, 4.939,000 (wgt'ed) examples reached here.  /* #neg=3.153 #pos=1.786 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | then if ( haswordtitle(I, K), haswordauthor(L, K) )
%   | | | then return -0.02425173912182187;  // std dev = 2,898, 125,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=21 */
%   | | | else return 0.04662751343406154;  // std dev = 3,752, 123,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | else if ( title(M, I), venue(M, B) )
%   | | | then return -0.005198006432841562;  // std dev = 5,197, 240,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=32 */
%   | | | else return -0.09945565278370024;  // std dev = 0,032, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.021649579510109047;  // std dev = 0,220, 183,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=30 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.026288240748342278;  // std dev = 0,471, 5.063,000 (wgt'ed) examples reached here.  /* #neg=3.340 #pos=1.723 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7357405936460251;  // std dev = 1,655, 96,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=94 */
%   | | | else return -0.13564122443679313;  // std dev = 1,222, 375,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=1 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( haswordtitle(D, G), haswordauthor(H, G) )
%   | | | then return 0.3034626426518191;  // std dev = 2,207, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return 0.519111790307043;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( haswordauthor(I, C) )
%   | | | then return 0.14452393411729708;  // std dev = 1,878, 36,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021436409447002376;  // std dev = 2,558, 89,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=19 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then return 0.6267284898320343;  // std dev = 0,215, 44,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | else return -0.01688132708223518;  // std dev = 0,243, 163,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=30 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D), haswordtitle(F, C) )
%   | | then return 0.402284110043517;  // std dev = 0,088, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.16337739385453;  // std dev = 2,673, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return -0.13451751320284558;  // std dev = 2,467, 82,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=10 */
%   | else return 0.035333360933895615;  // std dev = 0,477, 4.985,000 (wgt'ed) examples reached here.  /* #neg=3.199 #pos=1.786 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then return -0.02074687005626998;  // std dev = 0,232, 359,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=64 */
%   | | else return 0.04481760495750589;  // std dev = 0,346, 69,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return -0.013179863980903433;  // std dev = 4,572, 244,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=32 */
%   | | | else return -0.08231137383593579;  // std dev = 0,049, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.08022754181249762;  // std dev = 0,013, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.593498
   AUC PR    = 0.025639
   CLL	      = -0.377728
   Precision = 0.161905 at threshold = 0.5
   Recall    = 0.02926
   F1        = 0.049563


Total learning time: 1984.199 seconds
Total inference time: 23.168 seconds
AUC ROC: 0.593498


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 05:08:06
{'AUC PR': 0.025639, 'AUC ROC': 0.593498, 'Precision': [0.161905, 0.5], 'Inference time': 23.168, 'CLL': -0.377728, 'Recall': 0.02926, 'Learning time': 1984.199, 'F1': 0.049563}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995115;  // std dev = 2,38e-07, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.014578337627760393;  // std dev = 3,495, 110,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=14 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.21728828760302615;  // std dev = 0,480, 4.973,000 (wgt'ed) examples reached here.  /* #neg=3.187 #pos=1.786 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.8224346493852267;  // std dev = 1,389, 56,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=54 */
%   | | | else return -0.13699669596844954;  // std dev = 0,998, 206,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=1 */
%   | | else if ( haswordauthor(M, I) )
%   | | | then return 0.2581489350995123;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.05674468192176426;  // std dev = 3,313, 141,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=12 */
%   | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | then if ( title(Q, P), venue(Q, B) )
%   | | | then return -0.011238820002529121;  // std dev = 5,275, 245,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=32 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.571486
   AUC PR    = 0.020886
   CLL	      = -0.197501
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 92.53 seconds
Total inference time: 5.338 seconds
AUC ROC: 0.571486


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 05:09:45
{'AUC PR': 0.020886, 'AUC ROC': 0.571486, 'Precision': [nan, 0.5], 'Inference time': 5.338, 'CLL': -0.197501, 'Recall': 0.0, 'Learning time': 92.53, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,56e-06, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.15487620782677985;  // std dev = 37,877, 6.875,000 (wgt'ed) examples reached here.  /* #neg=4.835 #pos=2.040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13366901580387436;  // std dev = 37,912, 6.905,000 (wgt'ed) examples reached here.  /* #neg=4.865 #pos=2.040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.11540096062404792;  // std dev = 37,893, 6.889,000 (wgt'ed) examples reached here.  /* #neg=4.849 #pos=2.040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.09382055222622114;  // std dev = 37,997, 6.980,000 (wgt'ed) examples reached here.  /* #neg=4.940 #pos=2.040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.07897753226600034;  // std dev = 37,984, 6.968,000 (wgt'ed) examples reached here.  /* #neg=4.928 #pos=2.040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,50e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06914761800528872;  // std dev = 37,883, 6.880,000 (wgt'ed) examples reached here.  /* #neg=4.840 #pos=2.040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.058288237934469155;  // std dev = 37,842, 6.845,000 (wgt'ed) examples reached here.  /* #neg=4.805 #pos=2.040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2,06e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.044060894615207895;  // std dev = 37,935, 6.925,000 (wgt'ed) examples reached here.  /* #neg=4.885 #pos=2.040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.040628018326259764;  // std dev = 37,802, 6.811,000 (wgt'ed) examples reached here.  /* #neg=4.771 #pos=2.040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.02757124459523806;  // std dev = 37,942, 6.931,000 (wgt'ed) examples reached here.  /* #neg=4.891 #pos=2.040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.326607
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 22.978 seconds
Total inference time: 4.39 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.327278
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 12.599 seconds
Parameter learned model CLL: -0.327278


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.877, 4835, 2040], 'true': [1.56e-06, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.912, 4865, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.893, 4849, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.997, 4940, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.984, 4928, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.883, 4840, 2040], 'true': [4.5e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.842, 4805, 2040], 'true': [2.46e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.935, 4885, 2040], 'true': [2.06e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.802, 4771, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.942, 4891, 2040], 'true': [0.0, 0, 396]}]]
[{'': [6.172391441956426e-15, 0.20868019834704368]}, {'': [-5.311127519822971e-15, 0.208154424298726]}, {'': [-1.2201238896890609e-15, 0.2084346810331005]}, {'': [-1.8301858345335913e-15, 0.20684559240065417]}, {'': [-1.5969268556224474e-15, 0.20705445658755708]}, {'': [5.113754537667388e-16, 0.20859248242293676]}, {'': [1.525154862111326e-16, 0.20920721325443736]}, {'': [1.0765799026668185e-16, 0.20780461103358697]}, {'': [-2.6017347647781446e-16, 0.20980596110936045]}, {'': [-3.1848822120560044e-16, 0.20769977810213724]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,56e-06, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.42957750652808346;  // std dev = 4,140, 70,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=40 */
%   | | | else return -0.0214806945301173;  // std dev = 3,382, 108,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=13 */
%   | | else return 0.1731242878107089;  // std dev = 0,465, 5.883,000 (wgt'ed) examples reached here.  /* #neg=4.030 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.43507201202258927;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | | else return -0.0418510649004878;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.15226658215833588;  // std dev = 3,254, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.01158286566677215;  // std dev = 9,419, 783,000 (wgt'ed) examples reached here.  /* #neg=681 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15300025143832197;  // std dev = 0,465, 6.009,000 (wgt'ed) examples reached here.  /* #neg=4.103 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.18117484222810049;  // std dev = 3,038, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return 0.02662408883059174;  // std dev = 8,292, 490,000 (wgt'ed) examples reached here.  /* #neg=407 #pos=83 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.032314755997694525;  // std dev = 5,666, 331,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=36 */
%   | | | else return -0.14236306913481425;  // std dev = 0,029, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1304911216456821;  // std dev = 0,465, 6.018,000 (wgt'ed) examples reached here.  /* #neg=4.112 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05104386223188342;  // std dev = 7,410, 348,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=69 */
%   | | | else return -0.011689151801024684;  // std dev = 4,838, 199,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=29 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04135076116871199;  // std dev = 5,708, 375,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=36 */
%   | | | else return -0.12365895892368613;  // std dev = 0,004, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11188023165832767;  // std dev = 0,465, 5.980,000 (wgt'ed) examples reached here.  /* #neg=4.074 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6024581805447479;  // std dev = 0,953, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10067119552716516;  // std dev = 2,894, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.0832600392082921;  // std dev = 3,336, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return -0.015472398062076167;  // std dev = 9,425, 814,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3143603956061787;  // std dev = 4,058, 68,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=40 */
%   | | | else return -0.0913434524219286;  // std dev = 3,416, 127,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=13 */
%   | | else return 0.09143058093089877;  // std dev = 0,465, 5.839,000 (wgt'ed) examples reached here.  /* #neg=3.986 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.17644349713754862;  // std dev = 2,893, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.0013416388234470695;  // std dev = 8,365, 552,000 (wgt'ed) examples reached here.  /* #neg=469 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.029483755110775115;  // std dev = 5,666, 350,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=36 */
%   | | | else return -0.10977149482248436;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,50e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25229153225319795;  // std dev = 4,507, 81,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=40 */
%   | | | else return -0.08070205537999536;  // std dev = 3,315, 80,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.04315374150650291;  // std dev = 5,458, 170,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=49 */
%   | | | else return 0.0754106444689629;  // std dev = 35,083, 5.678,000 (wgt'ed) examples reached here.  /* #neg=3.874 #pos=1.804 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.046541541831525306;  // std dev = 7,397, 335,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=69 */
%   | | | else return -0.013875108663552746;  // std dev = 4,751, 199,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=29 */
%   | | else return -0.0199842630454009;  // std dev = 0,310, 332,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06173849347920288;  // std dev = 0,465, 5.989,000 (wgt'ed) examples reached here.  /* #neg=4.083 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.15000697893578144;  // std dev = 2,891, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.008259603133772504;  // std dev = 8,303, 515,000 (wgt'ed) examples reached here.  /* #neg=432 #pos=83 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.023868780632348572;  // std dev = 5,665, 351,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=36 */
%   | | | else return -0.09771873009504338;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2,06e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.027949888777496566;  // std dev = 5,541, 152,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=46 */
%   | | | else return 0.7483690108627137;  // std dev = 0,092, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.05264637813358648;  // std dev = 0,466, 5.776,000 (wgt'ed) examples reached here.  /* #neg=3.923 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03531746466413966;  // std dev = 7,410, 341,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=69 */
%   | | | else return -0.026349416828395707;  // std dev = 4,762, 210,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.019727604422783603;  // std dev = 5,660, 346,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=36 */
%   | | | else return -0.09326542792961899;  // std dev = 0,023, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.22285773587021207;  // std dev = 4,304, 75,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=40 */
%   | | | else return -0.0416069454240768;  // std dev = 2,984, 60,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | else return 0.0399624789284908;  // std dev = 0,465, 5.818,000 (wgt'ed) examples reached here.  /* #neg=3.965 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.15238131103846134;  // std dev = 2,806, 31,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return -0.0027351990293280996;  // std dev = 8,334, 541,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.011787511836754114;  // std dev = 5,642, 327,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=36 */
%   | | | else return -0.08367357780167756;  // std dev = 0,010, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.01809980729262568;  // std dev = 35,236, 5.896,000 (wgt'ed) examples reached here.  /* #neg=4.096 #pos=1.800 */
%   | | | else return 0.03192449343803273;  // std dev = 9,005, 625,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=115 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.1381927829059429;  // std dev = 1,485, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.09615365147084773;  // std dev = 5,794, 180,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=53 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5422584481792433;  // std dev = 0,377, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.1352124301853844;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0025660499366161366;  // std dev = 5,335, 208,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=34 */


Results
   AUC ROC   = 0.7111
   AUC PR    = 0.212839
   CLL	      = -0.311788
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 1201.738 seconds
Total inference time: 16.783 seconds
AUC ROC: 0.7111


Results scoring model
   AUC ROC   = 0.657205
   AUC PR    = 0.201936
   CLL	      = -0.323168
   Precision = 0.867679 at threshold = 0.5
   Recall    = 0.164204
   F1        = 0.276148


Total scoring time: 174.871 seconds
Refined model CLL: -0.323168


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.7111
   AUC PR    = 0.212839
   CLL	      = -0.311788
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 1412.1860000000001 seconds
Total inference time: 16.783 seconds
AUC ROC: 0.7111
Total revision time: 1412.1860000000001
Best scored revision CLL: -0.323168


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 05:33:40
{'AUC PR': 0.212839, 'AUC ROC': 0.7111, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Precision': [1.0, 0.5], 'Inference time': 4.39, 'CLL': -0.326607, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 22.978}, 'Inference time': 16.783, 'CLL': -0.311788, 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 1412.1860000000001}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.16827551737799368;  // std dev = 5,814, 158,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
%   | | else return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.20977654950428776;  // std dev = 0,477, 6.359,000 (wgt'ed) examples reached here.  /* #neg=4.123 #pos=2.236 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.8158954139727522;  // std dev = 1,695, 71,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=68 */
%   | | | else return -0.13825394259832977;  // std dev = 0,998, 278,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=1 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.2914822684328457;  // std dev = 2,714, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return -0.06708470976030073;  // std dev = 3,848, 214,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=16 */
%   | else return -0.04072746939487025;  // std dev = 0,301, 356,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19062995434259028;  // std dev = 0,480, 6.392,000 (wgt'ed) examples reached here.  /* #neg=4.090 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.276258241559355;  // std dev = 0,485, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.043166406614061834;  // std dev = 6,297, 335,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=67 */
%   | | | else return -0.04831790909408522;  // std dev = 3,825, 187,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.02083624650984991;  // std dev = 5,641, 310,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=36 */
%   | | | else return -0.13696527876791478;  // std dev = 2,58e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.13696527876791478;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15681281205395323;  // std dev = 0,478, 6.487,000 (wgt'ed) examples reached here.  /* #neg=4.185 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6623623479874898;  // std dev = 1,942, 72,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=68 */
%   | | | else return -0.12749679273440864;  // std dev = 1,001, 261,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1353249042914903;  // std dev = 2,882, 36,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return -0.05182008779668343;  // std dev = 3,844, 209,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.3654791077744035;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13322530372724167;  // std dev = 0,012, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.024507684680025888;  // std dev = 0,310, 314,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.6443759735940383;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.24924260872941836;  // std dev = 4,814, 93,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=44 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.7405149704683601;  // std dev = 0,156, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.16623520926470992;  // std dev = 2,170, 87,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=5 */
%   | else return 0.1420369757369753;  // std dev = 0,482, 6.110,000 (wgt'ed) examples reached here.  /* #neg=3.874 #pos=2.236 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.18607460431587158;  // std dev = 0,465, 35,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | else return -0.04859239632588758;  // std dev = 0,256, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0018678347736881494;  // std dev = 0,285, 506,000 (wgt'ed) examples reached here.  /* #neg=423 #pos=83 */
%   | | else return -0.0340667197434631;  // std dev = 0,294, 354,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5308701905648422;  // std dev = 0,066, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2865236035514972;  // std dev = 4,283, 74,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=39 */
%   | | | else return -0.07012994646428529;  // std dev = 2,692, 55,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | else return 0.10719657840136629;  // std dev = 0,479, 6.272,000 (wgt'ed) examples reached here.  /* #neg=4.036 #pos=2.236 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.6807019667860963;  // std dev = 0,251, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12439346818818904;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.05223785239888629;  // std dev = 0,294, 52,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.007214136877816521;  // std dev = 0,308, 461,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=82 */
%   | | else return -0.02704052194532491;  // std dev = 0,298, 353,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=35 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08676246999012191;  // std dev = 0,478, 6.439,000 (wgt'ed) examples reached here.  /* #neg=4.137 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.019135694563081413;  // std dev = 0,766, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.24468793427240826;  // std dev = 2,381, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.3576895966303505;  // std dev = 0,941, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11148761223224672;  // std dev = 0,013, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.021249317251010334;  // std dev = 5,133, 434,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=65 */
%   | | | else return 0.06070825002756105;  // std dev = 3,772, 96,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.013879101593188793;  // std dev = 5,478, 309,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=34 */
%   | | | else return -0.1127146054641187;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06624039098888543;  // std dev = 0,477, 6.492,000 (wgt'ed) examples reached here.  /* #neg=4.190 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return 0.030525185076801492;  // std dev = 5,470, 348,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=77 */
%   | | | else return -0.12594456786441535;  // std dev = 1,466, 87,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=3 */
%   | | else if ( haswordtitle(E, I), haswordvenue(A, I) )
%   | | | then return 0.07786853021752374;  // std dev = 3,714, 85,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | | else return -0.13039934245776474;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.1838208849656058;  // std dev = 0,728, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1208406929161366;  // std dev = 0,012, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.020205826692266934;  // std dev = 5,565, 343,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=35 */
%   | | | else return -0.10192445582210127;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then return 0.32435247290240016;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.41350994424557674;  // std dev = 0,067, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.05506783728119067;  // std dev = 0,478, 6.417,000 (wgt'ed) examples reached here.  /* #neg=4.132 #pos=2.285 */
%   else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | then if ( haswordtitle(G, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.013266504451937156;  // std dev = 5,522, 378,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=77 */
%   | | | else return -0.1127177321845019;  // std dev = 1,479, 94,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=3 */
%   | | else return 0.06897896164140435;  // std dev = 0,403, 85,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | else return -0.01804091519780041;  // std dev = 0,299, 353,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02747593951694613;  // std dev = 0,472, 6.315,000 (wgt'ed) examples reached here.  /* #neg=4.163 #pos=2.152 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7248013653705995;  // std dev = 2,326, 117,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=113 */
%   | | | else return -0.12674344225231912;  // std dev = 1,491, 439,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=2 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( title(G, D), venue(G, B) )
%   | | | then return -0.3131407915719448;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.5699377344620875;  // std dev = 1,708, 33,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | else return 0.042410693015919855;  // std dev = 0,305, 180,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=43 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.09142012416195046;  // std dev = 0,338, 232,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=68 */
%   | | else return -0.03885534717440611;  // std dev = 0,263, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return 0.37980737386950164;  // std dev = 0,376, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.027288177341149744;  // std dev = 0,474, 6.207,000 (wgt'ed) examples reached here.  /* #neg=4.055 #pos=2.152 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.5594392642903702;  // std dev = 2,852, 121,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=113 */
%   | | | else return -0.11384556660673197;  // std dev = 1,506, 470,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=2 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( title(G, D), venue(G, B) )
%   | | | then return -0.24407974889642514;  // std dev = 0,050, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.496284096053445;  // std dev = 1,096, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.1265027371431024;  // std dev = 2,341, 46,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.01208436369625137;  // std dev = 3,247, 125,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=25 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.5771392059028579;  // std dev = 0,224, 63,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=60 */
%   | else return -0.019393240146531914;  // std dev = 0,255, 208,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=36 */


Results
   AUC ROC   = 0.724743
   AUC PR    = 0.033017
   CLL	      = -0.353276
   Precision = 0.048355 at threshold = 0.5
   Recall    = 0.253012
   F1        = 0.081193


Total learning time: 4464.71 seconds
Total inference time: 29.82 seconds
AUC ROC: 0.724743


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 06:48:36
{'AUC PR': 0.033017, 'AUC ROC': 0.724743, 'Precision': [0.048355, 0.5], 'Inference time': 29.82, 'CLL': -0.353276, 'Recall': 0.253012, 'Learning time': 4464.71, 'F1': 0.081193}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3713068298363537;  // std dev = 4,357, 76,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return 0.04682818038253123;  // std dev = 2,848, 53,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | else return 0.2161953722492269;  // std dev = 0,479, 6.245,000 (wgt'ed) examples reached here.  /* #neg=4.009 #pos=2.236 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), venue(K, A) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.30642479716847787;  // std dev = 2,678, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else if ( author(L, I), venue(L, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then if ( title(P, N), venue(P, A) )
%   | | | then return 0.043231808027689576;  // std dev = 7,389, 362,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=67 */
%   | | | else return -0.05582955952414356;  // std dev = 3,824, 186,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=16 */
%   | | else if ( haswordvenue(A, Q), haswordtitle(R, Q) )
%   | | | then return -0.04243586022212561;  // std dev = 5,534, 342,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=34 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.552416
   AUC PR    = 0.01321
   CLL	      = -0.198299
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 49.006 seconds
Total inference time: 4.401 seconds
AUC ROC: 0.552416


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 06:49:30
{'AUC PR': 0.01321, 'AUC ROC': 0.552416, 'Precision': [nan, 0.5], 'Inference time': 4.401, 'CLL': -0.198299, 'Recall': 0.0, 'Learning time': 49.006, 'F1': nan}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 182149

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 67804

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.13283341913811172;  // std dev = 16,382, 1.347,000 (wgt'ed) examples reached here.  /* #neg=977 #pos=370 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.1304861937631766;  // std dev = 16,216, 1.279,000 (wgt'ed) examples reached here.  /* #neg=909 #pos=370 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,53e-07, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.11204413290602266;  // std dev = 16,219, 1.280,000 (wgt'ed) examples reached here.  /* #neg=910 #pos=370 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583103;  // std dev = 1,26e-07, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.08573162857624637;  // std dev = 16,326, 1.323,000 (wgt'ed) examples reached here.  /* #neg=953 #pos=370 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.08047174358033428;  // std dev = 16,229, 1.284,000 (wgt'ed) examples reached here.  /* #neg=914 #pos=370 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.07642315402631994;  // std dev = 16,120, 1.243,000 (wgt'ed) examples reached here.  /* #neg=873 #pos=370 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253584;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.053022807146372156;  // std dev = 16,234, 1.286,000 (wgt'ed) examples reached here.  /* #neg=916 #pos=370 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.05917937201716683;  // std dev = 16,053, 1.219,000 (wgt'ed) examples reached here.  /* #neg=849 #pos=370 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.032498058407412114;  // std dev = 16,232, 1.285,000 (wgt'ed) examples reached here.  /* #neg=915 #pos=370 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.026492530706718007;  // std dev = 16,229, 1.284,000 (wgt'ed) examples reached here.  /* #neg=914 #pos=370 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.319375
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 3.098 seconds
Total inference time: 5.686 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.592511
   AUC PR    = 0.204617
   CLL	      = -0.320087
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.185022
   F1        = 0.312268


Total scoring time: 4.591 seconds
Parameter learned model CLL: -0.320087


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.382, 977, 370], 'true': [0.0, 0, 84]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.216, 909, 370], 'true': [2.67e-07, 0, 84]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.219, 910, 370], 'true': [3.53e-07, 0, 84]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.326, 953, 370], 'true': [1.26e-07, 0, 84]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.229, 914, 370], 'true': [0.0, 0, 84]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.12, 873, 370], 'true': [0.0, 0, 84]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.234, 916, 370], 'true': [0.0, 0, 84]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.053, 849, 370], 'true': [4.21e-08, 0, 84]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.232, 915, 370], 'true': [0.0, 0, 84]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.229, 914, 370], 'true': [5.77e-08, 0, 84]}]]
[{'': [-4.2294210461910723e-16, 0.199232918267031]}, {'': [8.458842092382145e-16, 0.20560066656845863]}, {'': [1.4802973661668755e-15, 0.20550537109376682]}, {'': [1.9032394707859825e-16, 0.201453555303029]}, {'': [-3.383536836952858e-16, 0.20512465911626804]}, {'': [-5.2867763077388404e-17, 0.20906133074097186]}, {'': [-1.2688263138573217e-16, 0.2049345868535181]}, {'': [2.114710523095536e-17, 0.21139854949087072]}, {'': [-5.551115123125783e-17, 0.20502959923692451]}, {'': [3.9650822308041306e-17, 0.20512465911627606]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.31968739663797385;  // std dev = 2,542, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return -0.07042249347191636;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else return 0.1845992792489667;  // std dev = 0,469, 1.017,000 (wgt'ed) examples reached here.  /* #neg=685 #pos=332 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.09344305274657114;  // std dev = 0,424, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.056136779186201954;  // std dev = 2,869, 105,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=9 */
%   | | | else return 0.022532496743347983;  // std dev = 3,167, 73,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16132137260625376;  // std dev = 0,469, 1.054,000 (wgt'ed) examples reached here.  /* #neg=709 #pos=345 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.1540814786856692;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.0486155160407491;  // std dev = 2,867, 104,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=9 */
%   | | | else return -0.006685093424029546;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,53e-07, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4873336686137883;  // std dev = 1,823, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return -0.09141331238278597;  // std dev = 1,309, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else return 0.12265553101684004;  // std dev = 0,463, 1.064,000 (wgt'ed) examples reached here.  /* #neg=732 #pos=332 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.006984353274138767;  // std dev = 3,483, 105,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=14 */
%   | | | else return -0.08418724447958603;  // std dev = 1,377, 39,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.048466647855406164;  // std dev = 2,679, 47,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | | else return -0.15539283887828031;  // std dev = 0,042, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583103;  // std dev = 1,26e-07, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3936639410214178;  // std dev = 1,841, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return -0.037181630686104465;  // std dev = 1,275, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.023738761507930993;  // std dev = 2,018, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.1073236355119102;  // std dev = 14,953, 1.034,000 (wgt'ed) examples reached here.  /* #neg=707 #pos=327 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return -0.057402585512745775;  // std dev = 1,930, 58,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | | else return 0.006062134516670323;  // std dev = 3,201, 80,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.08483828322795442;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 2.5365942389288845E-4;  // std dev = 2,079, 37,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0906281893645988;  // std dev = 0,464, 1.083,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=345 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.13473465486571876;  // std dev = 0,457, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.02935653218993024;  // std dev = 3,534, 134,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=14 */
%   | | | else return 0.03086689327253656;  // std dev = 2,688, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06410152002441293;  // std dev = 0,460, 1.118,000 (wgt'ed) examples reached here.  /* #neg=773 #pos=345 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.12129837725075762;  // std dev = 0,455, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.0747940748525843;  // std dev = 1,695, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.014373295401454572;  // std dev = 4,084, 162,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253584;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3159344950350657;  // std dev = 1,692, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return -0.09778242446625733;  // std dev = 1,318, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return 0.04865632599633489;  // std dev = 0,460, 1.094,000 (wgt'ed) examples reached here.  /* #neg=762 #pos=332 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.17893431250117087;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.010629507231663848;  // std dev = 3,735, 131,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.040122539863808815;  // std dev = 2,659, 45,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return -0.12754985789339154;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6665856009360158;  // std dev = 4,703, 342,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=319 */
%   | | | else return -0.22882163413561465;  // std dev = 4,371, 801,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=18 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12337913436187965;  // std dev = 2,779, 74,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=9 */
%   | | | else return 0.21565945840515846;  // std dev = 2,344, 28,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.4017783498168644;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.1449583637888563;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.03241608578176515;  // std dev = 2,030, 29,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.12924128669236368;  // std dev = 1,358, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return -0.06021656835057474;  // std dev = 1,098, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return 0.03533221993763702;  // std dev = 0,390, 1.051,000 (wgt'ed) examples reached here.  /* #neg=719 #pos=332 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return -0.04191674894282681;  // std dev = 1,780, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return -0.21242547046238444;  // std dev = 0,078, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.028103435526439177;  // std dev = 2,749, 87,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=9 */
%   | | | else return -0.007329234334773036;  // std dev = 2,850, 96,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return -0.05977056568579466;  // std dev = 1,791, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.12146203652981553;  // std dev = 0,791, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.01786769275376228;  // std dev = 1,614, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.03298489232202823;  // std dev = 12,471, 1.015,000 (wgt'ed) examples reached here.  /* #neg=688 #pos=327 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.004380610427126232;  // std dev = 2,843, 61,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
%   | | | else return -0.05707654028298959;  // std dev = 1,552, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.015872339293321196;  // std dev = 2,811, 79,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=12 */
%   | | | else return -0.1382531808319098;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.957154
   AUC PR    = 0.413887
   CLL	      = -0.264706
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.280783


Total learning time: 213.421 seconds
Total inference time: 37.708 seconds
AUC ROC: 0.957154


Results scoring model
   AUC ROC   = 0.951565
   AUC PR    = 0.445843
   CLL	      = -0.255538
   Precision = 0.940594 at threshold = 0.5
   Recall    = 0.209251
   F1        = 0.342342


Total scoring time: 88.348 seconds
Refined model CLL: -0.255538


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.957154
   AUC PR    = 0.413887
   CLL	      = -0.264706
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.280783


Total learning time: 309.45799999999997 seconds
Total inference time: 37.708 seconds
AUC ROC: 0.957154
Total revision time: 309.45799999999997
Best scored revision CLL: -0.255538


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 06:55:24
{'AUC PR': 0.413887, 'AUC ROC': 0.957154, 'Precision': [1.0, 0.5], 'Inference time': 37.708, 'CLL': -0.264706, 'Recall': 0.16332, 'F1': 0.280783, 'Learning time': 309.45799999999997, 'parameter_0.2': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.686, 'CLL': -0.319375, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 3.098}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09837280403092258;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | else return 0.2322431379980582;  // std dev = 0,484, 1.104,000 (wgt'ed) examples reached here.  /* #neg=691 #pos=413 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then return 0.14386322081379804;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return -0.048101064900487676;  // std dev = 0,291, 96,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=9 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.039967116917694;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.011995088945666189;  // std dev = 2,909, 65,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1944659327820179;  // std dev = 0,480, 1.166,000 (wgt'ed) examples reached here.  /* #neg=737 #pos=429 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.17305206306823115;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, H), haswordvenue(A, H) )
%   | | | then return -0.08671329189249044;  // std dev = 1,950, 81,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=4 */
%   | | | else return 0.020153992058126846;  // std dev = 2,054, 32,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.008098246407787295;  // std dev = 3,190, 79,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=12 */
%   | | | else return -0.14331750143463115;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.678608665802508;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.20604865334016756;  // std dev = 0,141, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.47860866580250805;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.0825271223660738;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else return 0.15120474554633095;  // std dev = 0,478, 1.169,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=413 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then return -0.006185728268154178;  // std dev = 0,340, 105,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=14 */
%   | | else return -0.06937366020561077;  // std dev = 0,241, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.10075234251298516;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return -0.010277888681756867;  // std dev = 0,334, 39,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5171873421459069;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.278194784580365;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.5667925046072902;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08795492743606426;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else return 0.13889009794362897;  // std dev = 0,482, 1.127,000 (wgt'ed) examples reached here.  /* #neg=714 #pos=413 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then return 0.05305970463820527;  // std dev = 0,431, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return -0.04476136885661211;  // std dev = 0,277, 107,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.014821819394989149;  // std dev = 3,177, 76,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=12 */
%   | | | else return -0.12609247817117905;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10847198331595362;  // std dev = 0,476, 1.179,000 (wgt'ed) examples reached here.  /* #neg=750 #pos=429 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return -0.19213282316256663;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.15435666389238412;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return -0.03930221691036753;  // std dev = 2,333, 70,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=6 */
%   | | | else return 0.02192291137219991;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.13681984328871546;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.028791386975418685;  // std dev = 2,874, 58,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08538808551862168;  // std dev = 0,475, 1.187,000 (wgt'ed) examples reached here.  /* #neg=758 #pos=429 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.12226655417596005;  // std dev = 0,091, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.026241613117764635;  // std dev = 1,907, 42,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | else if ( haswordtitle(E, I), haswordauthor(J, I) )
%   | | | then return 0.005927366421610477;  // std dev = 3,183, 76,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=12 */
%   | | | else return -0.14116260948790765;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return 0.049746742666055575;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0.015344317580743607;  // std dev = 0,350, 35,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6719671223689505;  // std dev = 0,183, 403,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=391 */
%   | | else return -0.24891539340900387;  // std dev = 0,156, 788,000 (wgt'ed) examples reached here.  /* #neg=770 #pos=18 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.11637058937627494;  // std dev = 2,723, 53,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | | else return -0.15198307678071168;  // std dev = 0,148, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3929636570751085;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.048848737736020525;  // std dev = 1,469, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6788166374591891;  // std dev = 0,095, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return 0.5549463021677944;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.012255026789409247;  // std dev = 0,320, 43,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.5118906626271171;  // std dev = 0,203, 400,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=385 */
%   | | else return -0.2085396475207503;  // std dev = 0,157, 768,000 (wgt'ed) examples reached here.  /* #neg=749 #pos=19 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.11433527724299314;  // std dev = 0,353, 61,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   | | else if ( haswordvenue(A, C) )
%   | | | then return 0.24390524545131;  // std dev = 2,181, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return -0.029609600016503083;  // std dev = 1,492, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.40094647187120935;  // std dev = 0,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.039424429427318816;  // std dev = 2,577, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | | else return -0.027916852361118814;  // std dev = 0,928, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return -0.12037250468992378;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return -0.04468585873975641;  // std dev = 0,985, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.15390341587809328;  // std dev = 0,694, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else return 0.26639244211461877;  // std dev = 0,230, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.034215295750547936;  // std dev = 0,332, 1.111,000 (wgt'ed) examples reached here.  /* #neg=691 #pos=420 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then return -0.0016808999678319058;  // std dev = 0,331, 58,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else return -0.05179720025168106;  // std dev = 0,207, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return -0.019088412523015536;  // std dev = 2,670, 86,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=11 */
%   | | | else return 0.11472709551506399;  // std dev = 0,856, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.10375470765053181;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.02661609884243501;  // std dev = 0,332, 1.132,000 (wgt'ed) examples reached here.  /* #neg=703 #pos=429 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.41639595494021064;  // std dev = 1,702, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.1333043669051327;  // std dev = 0,523, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.09230537989846604;  // std dev = 0,108, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.0028954742109797414;  // std dev = 1,471, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.22252226120216317;  // std dev = 0,177, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.1093034124723986;  // std dev = 1,010, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.004869571483335854;  // std dev = 2,553, 68,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=10 */


Results
   AUC ROC   = 0.979672
   AUC PR    = 0.481481
   CLL	      = -0.241107
   Precision = 0.463151 at threshold = 0.5
   Recall    = 0.917001
   F1        = 0.615454


Total learning time: 492.123 seconds
Total inference time: 61.936 seconds
AUC ROC: 0.979672


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 07:04:39
{'AUC PR': 0.481481, 'AUC ROC': 0.979672, 'Precision': [0.463151, 0.5], 'Inference time': 61.936, 'CLL': -0.241107, 'Recall': 0.917001, 'Learning time': 492.123, 'F1': 0.615454}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2282956132703444;  // std dev = 0,483, 1.159,000 (wgt'ed) examples reached here.  /* #neg=730 #pos=429 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.02063894368836653;  // std dev = 1,875, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return 0.019913640981865297;  // std dev = 3,037, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | | else return -0.06492798797741087;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return 0.30259337954395676;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.01943925768015746;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */


Results
   AUC ROC   = 0.532304
   AUC PR    = 0.011658
   CLL	      = -0.202462
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 18.701 seconds
Total inference time: 5.368 seconds
AUC ROC: 0.532304


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 07:05:03
{'AUC PR': 0.011658, 'AUC ROC': 0.532304, 'Precision': [nan, 0.5], 'Inference time': 5.368, 'CLL': -0.202462, 'Recall': 0.0, 'Learning time': 18.701, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,68e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.1517842338109481;  // std dev = 23,047, 2.561,000 (wgt'ed) examples reached here.  /* #neg=1.809 #pos=752 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.13706245870619338;  // std dev = 22,969, 2.520,000 (wgt'ed) examples reached here.  /* #neg=1.768 #pos=752 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.11344176672504244;  // std dev = 23,038, 2.556,000 (wgt'ed) examples reached here.  /* #neg=1.804 #pos=752 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,58e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.09928884792670009;  // std dev = 22,985, 2.528,000 (wgt'ed) examples reached here.  /* #neg=1.776 #pos=752 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,98e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.08517099877379312;  // std dev = 22,950, 2.510,000 (wgt'ed) examples reached here.  /* #neg=1.758 #pos=752 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.06257278455686595;  // std dev = 23,079, 2.578,000 (wgt'ed) examples reached here.  /* #neg=1.826 #pos=752 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,53e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.05361457231171021;  // std dev = 23,042, 2.558,000 (wgt'ed) examples reached here.  /* #neg=1.806 #pos=752 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.04231665068348862;  // std dev = 23,064, 2.570,000 (wgt'ed) examples reached here.  /* #neg=1.818 #pos=752 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.0319209729524316;  // std dev = 23,103, 2.591,000 (wgt'ed) examples reached here.  /* #neg=1.839 #pos=752 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.030193689556381794;  // std dev = 23,031, 2.552,000 (wgt'ed) examples reached here.  /* #neg=1.800 #pos=752 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.324084
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 5.942 seconds
Total inference time: 5.493 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.585903
   AUC PR    = 0.191021
   CLL	      = -0.324969
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.171806
   F1        = 0.293233


Total scoring time: 6.3 seconds
Parameter learned model CLL: -0.324969


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.047, 1809, 752], 'true': [9.68e-07, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.969, 1768, 752], 'true': [0.0, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.038, 1804, 752], 'true': [5.4e-07, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.985, 1776, 752], 'true': [4.58e-07, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.95, 1758, 752], 'true': [2.98e-07, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.079, 1826, 752], 'true': [0.0, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.042, 1806, 752], 'true': [2.53e-07, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.064, 1818, 752], 'true': [0.0, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.103, 1839, 752], 'true': [0.0, 0, 156]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.031, 1800, 752], 'true': [9.19e-08, 0, 156]}]]
[{'': [6.012284687200848e-15, 0.2074136100621087]}, {'': [-2.6417614534670392e-15, 0.20936255983876295]}, {'': [1.8674520619335967e-15, 0.20765035352088893]}, {'': [1.343654532366856e-15, 0.20898093254287234]}, {'': [5.693451408334137e-16, 0.20984047872255518]}, {'': [-2.1635115351669717e-16, 0.20661068984383113]}, {'': [4.099285014000578e-16, 0.20755562429355986]}, {'': [-3.0744637605004334e-16, 0.20698814516495032]}, {'': [-2.3627823344586665e-16, 0.20599882531358893]}, {'': [5.408778837917429e-17, 0.2078399386798535]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,68e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.04015614964625042;  // std dev = 2,322, 59,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.13507201202258928;  // std dev = 3,608, 65,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return 0.17441687768323935;  // std dev = 21,259, 2.090,000 (wgt'ed) examples reached here.  /* #neg=1.429 #pos=661 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.21814893509951236;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.15814893509951236;  // std dev = 2,510, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.025909035914980956;  // std dev = 5,947, 345,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=40 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14636906325657137;  // std dev = 0,462, 2.234,000 (wgt'ed) examples reached here.  /* #neg=1.541 #pos=693 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.20446651417661507;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.030532562164244395;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.014411382543764518;  // std dev = 5,123, 240,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=30 */
%   | | | else return 0.0565762549257483;  // std dev = 3,874, 95,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=19 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12638894382454993;  // std dev = 0,462, 2.227,000 (wgt'ed) examples reached here.  /* #neg=1.534 #pos=693 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12311376036894152;  // std dev = 2,521, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.1667879437229611;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.026810833776637753;  // std dev = 4,313, 183,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=21 */
%   | | | else return 0.031839646513061794;  // std dev = 4,831, 161,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=29 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,58e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11013113502405673;  // std dev = 0,463, 2.203,000 (wgt'ed) examples reached here.  /* #neg=1.510 #pos=693 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.16082725332582534;  // std dev = 2,420, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.1390682526346912;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.14389140853264032;  // std dev = 2,539, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return -0.02823950425446106;  // std dev = 5,960, 362,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=40 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,98e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.49708234751817026;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return -0.08286415831675074;  // std dev = 2,056, 37,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | else return 0.09412501508420745;  // std dev = 0,465, 2.120,000 (wgt'ed) examples reached here.  /* #neg=1.447 #pos=673 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.04729997776041635;  // std dev = 3,028, 120,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=10 */
%   | | | else return 0.03463397478651134;  // std dev = 3,873, 98,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=19 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.12842814863519636;  // std dev = 2,527, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.0017783402060840392;  // std dev = 4,142, 141,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07271728886947545;  // std dev = 0,463, 2.212,000 (wgt'ed) examples reached here.  /* #neg=1.519 #pos=693 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07379262157107264;  // std dev = 2,523, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.13551504015620733;  // std dev = 0,031, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.00225975638671181;  // std dev = 4,268, 160,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=21 */
%   | | | else return 0.018430357982518606;  // std dev = 4,794, 168,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=29 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,53e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06630221488056441;  // std dev = 0,465, 2.164,000 (wgt'ed) examples reached here.  /* #neg=1.471 #pos=693 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.24166179730516113;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12646457342699355;  // std dev = 2,480, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.021919995769063626;  // std dev = 5,148, 266,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=30 */
%   | | | else return 0.014733047345201486;  // std dev = 3,891, 106,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.056992600625909204;  // std dev = 0,466, 2.143,000 (wgt'ed) examples reached here.  /* #neg=1.450 #pos=693 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.015989303912044037;  // std dev = 4,281, 159,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=22 */
%   | | | else return 0.07701249067542394;  // std dev = 2,367, 35,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.028315031520862437;  // std dev = 4,812, 160,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=30 */
%   | | | else return -0.15982423433908713;  // std dev = 0,083, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6986222837610406;  // std dev = 4,201, 659,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=642 */
%   | | | else return -0.23751225349733718;  // std dev = 6,344, 1.557,000 (wgt'ed) examples reached here.  /* #neg=1.518 #pos=39 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.17936531365671846;  // std dev = 3,296, 139,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=12 */
%   | | | else return 0.14333495736090077;  // std dev = 3,687, 75,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.13822550041944207;  // std dev = 4,393, 101,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | | | else return -0.043848671980188846;  // std dev = 0,950, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0971103361871898;  // std dev = 0,815, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14543585940978457;  // std dev = 0,064, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0220137727420646;  // std dev = 0,384, 2.188,000 (wgt'ed) examples reached here.  /* #neg=1.495 #pos=693 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.038609946817753364;  // std dev = 4,292, 181,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=22 */
%   | | | else return 0.019439386275607887;  // std dev = 2,145, 47,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.005561393839241396;  // std dev = 4,156, 178,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=30 */
%   | | | else return -0.1262259650346523;  // std dev = 0,059, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.962615
   AUC PR    = 0.592156
   CLL	      = -0.268448
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.172691
   F1        = 0.294521


Total learning time: 386.318 seconds
Total inference time: 32.932 seconds
AUC ROC: 0.962615


Results scoring model
   AUC ROC   = 0.953111
   AUC PR    = 0.553345
   CLL	      = -0.260062
   Precision = 0.937173 at threshold = 0.5
   Recall    = 0.197137
   F1        = 0.325751


Total scoring time: 170.14 seconds
Refined model CLL: -0.260062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.962615
   AUC PR    = 0.592156
   CLL	      = -0.268448
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.172691
   F1        = 0.294521


Total learning time: 568.7 seconds
Total inference time: 32.932 seconds
AUC ROC: 0.962615
Total revision time: 568.7
Best scored revision CLL: -0.260062


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 07:15:11
{'AUC PR': 0.592156, 'AUC ROC': 0.962615, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.493, 'CLL': -0.324084, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 5.942}, 'Inference time': 32.932, 'CLL': -0.268448, 'Recall': 0.172691, 'F1': 0.294521, 'Learning time': 568.7}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.055644168348763574;  // std dev = 2,138, 58,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
%   | else return 0.23440007249714148;  // std dev = 0,484, 2.198,000 (wgt'ed) examples reached here.  /* #neg=1.371 #pos=827 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.16584124279182005;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return -0.02453262914629786;  // std dev = 0,322, 179,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=21 */
%   | | else return 0.036063045528959455;  // std dev = 0,382, 163,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=29 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.7369693324133595;  // std dev = 0,028, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.35583704857459064;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.021575204282337723;  // std dev = 2,105, 44,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | else return 0.1895568404442956;  // std dev = 0,481, 2.282,000 (wgt'ed) examples reached here.  /* #neg=1.455 #pos=827 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | then return 0.2004256711834989;  // std dev = 0,475, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return 0.02160322853585285;  // std dev = 0,912, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then if ( haswordauthor(L, M), haswordtitle(N, M) )
%   | | | then return 0.1386296815498261;  // std dev = 2,509, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.02117785901348205;  // std dev = 0,326, 331,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=40 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7828977045342284;  // std dev = 0,239, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1891113109429333;  // std dev = 0,088, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.5753134396069443;  // std dev = 0,026, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.13550349796904737;  // std dev = 1,684, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | else return 0.16297260532791225;  // std dev = 0,480, 2.255,000 (wgt'ed) examples reached here.  /* #neg=1.434 #pos=821 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | then return 0.25623796766118545;  // std dev = 0,494, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else return -0.0234293239296659;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.020684576523134036;  // std dev = 0,326, 248,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=30 */
%   | | else return 0.023841187059497306;  // std dev = 0,371, 112,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=19 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.46015123822085224;  // std dev = 0,298, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.018357465338379342;  // std dev = 0,327, 57,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.24336471653842795;  // std dev = 2,241, 29,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return -0.10378662550274213;  // std dev = 1,664, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else return 0.13657415335647488;  // std dev = 0,482, 2.212,000 (wgt'ed) examples reached here.  /* #neg=1.403 #pos=809 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.01115792169569755;  // std dev = 0,334, 303,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=40 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then if ( haswordauthor(M, N), haswordtitle(P, N) )
%   | | | then return 0.23436643280958194;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.11471543863636273;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0025482275648765805;  // std dev = 0,347, 79,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10231346008140776;  // std dev = 0,473, 2.388,000 (wgt'ed) examples reached here.  /* #neg=1.539 #pos=849 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.1496582289616744;  // std dev = 0,479, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else return 0.10531625173137094;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07936688562253093;  // std dev = 2,506, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.10450529853524264;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.024132033189024838;  // std dev = 4,317, 189,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=21 */
%   | | | else return 0.0027639532877030914;  // std dev = 4,037, 133,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=19 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then return -0.04958338620598005;  // std dev = 0,324, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | else return 0.3670129204235266;  // std dev = 0,442, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.3103224758208661;  // std dev = 1,725, 22,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | | else return -0.06938058629659818;  // std dev = 1,633, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else return 0.08202639027162521;  // std dev = 0,479, 2.272,000 (wgt'ed) examples reached here.  /* #neg=1.463 #pos=809 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then return -0.010497226809169743;  // std dev = 0,333, 219,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=29 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then if ( haswordauthor(M, N), haswordtitle(P, N) )
%   | | | then return 0.2364430784587951;  // std dev = 2,177, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.09178965470901645;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.006906228996263139;  // std dev = 0,342, 148,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06513402498765576;  // std dev = 0,474, 2.384,000 (wgt'ed) examples reached here.  /* #neg=1.535 #pos=849 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.12031166282836014;  // std dev = 0,479, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return -0.09074630191732398;  // std dev = 0,278, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.0033616922155770544;  // std dev = 4,834, 203,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=27 */
%   | | | else return -0.0791267443441058;  // std dev = 1,686, 56,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.012621339577305862;  // std dev = 3,907, 110,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=19 */
%   | | | else return -0.17645885297748046;  // std dev = 0,106, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.3377035246059972;  // std dev = 0,072, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.06577162012661135;  // std dev = 0,316, 73,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=12 */
%   | else return 0.06908061036902385;  // std dev = 0,481, 2.217,000 (wgt'ed) examples reached here.  /* #neg=1.390 #pos=827 */
%   else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | then if ( haswordtitle(G, H), haswordvenue(A, H) )
%   | | then return -0.03997706631048097;  // std dev = 0,282, 115,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=10 */
%   | | else if ( title(I, G), venue(I, A) )
%   | | | then return 0.03350408894557252;  // std dev = 3,744, 91,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=18 */
%   | | | else return -0.05812585288603463;  // std dev = 0,960, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.027281577886188894;  // std dev = 4,725, 151,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
%   | | | else return -0.09155703671170526;  // std dev = 1,038, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return -0.15253954170811754;  // std dev = 0,095, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6505997149062308;  // std dev = 0,177, 792,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=770 */
%   | | else return -0.2681207911300248;  // std dev = 0,165, 1.561,000 (wgt'ed) examples reached here.  /* #neg=1.522 #pos=39 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.20865866436353625;  // std dev = 0,267, 155,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=12 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3830343784374719;  // std dev = 3,135, 47,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=33 */
%   | | | else return -0.015310166784379402;  // std dev = 1,951, 45,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.7016280779644977;  // std dev = 1,428, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | | else return -0.15590598628398508;  // std dev = 0,932, 60,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
%   | | else return -0.029301099219554053;  // std dev = 0,321, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else return 0.3648681346523254;  // std dev = 0,368, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.47997153360050093;  // std dev = 0,215, 797,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=761 */
%   | | else return -0.22524715117377492;  // std dev = 0,158, 1.564,000 (wgt'ed) examples reached here.  /* #neg=1.526 #pos=38 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.16445475607938298;  // std dev = 0,297, 111,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=11 */
%   | | else if ( haswordvenue(A, C) )
%   | | | then return 0.33989833772773986;  // std dev = 2,787, 43,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=32 */
%   | | | else return -0.018215055382156634;  // std dev = 2,446, 80,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=8 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then return 0.06477163884592005;  // std dev = 0,349, 168,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=42 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return 0.0719433761144976;  // std dev = 0,375, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.5331742204930348;  // std dev = 0,977, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.15031988034526997;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.97579
   AUC PR    = 0.490539
   CLL	      = -0.250442
   Precision = 0.465877 at threshold = 0.5
   Recall    = 0.895582
   F1        = 0.612918


Total learning time: 804.8 seconds
Total inference time: 61.572 seconds
AUC ROC: 0.97579


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 07:29:38
{'AUC PR': 0.490539, 'AUC ROC': 0.97579, 'Precision': [0.465877, 0.5], 'Inference time': 61.572, 'CLL': -0.250442, 'Recall': 0.895582, 'Learning time': 804.8, 'F1': 0.612918}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2055302771617004;  // std dev = 0,476, 2.444,000 (wgt'ed) examples reached here.  /* #neg=1.595 #pos=849 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.16584124279182005;  // std dev = 0,462, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13939893509951237;  // std dev = 2,543, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return -0.050941973991396876;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.019044047356628162;  // std dev = 4,292, 171,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=21 */
%   | | | else return 0.002088329038906278;  // std dev = 4,033, 132,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=19 */


Results
   AUC ROC   = 0.532245
   AUC PR    = 0.011657
   CLL	      = -0.198945
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.988 seconds
Total inference time: 4.315 seconds
AUC ROC: 0.532245


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 07:29:54
{'AUC PR': 0.011657, 'AUC ROC': 0.532245, 'Precision': [nan, 0.5], 'Inference time': 4.315, 'CLL': -0.198945, 'Recall': 0.0, 'Learning time': 10.988, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,07e-06, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else return 0.1488286467369943;  // std dev = 28,299, 3.884,000 (wgt'ed) examples reached here.  /* #neg=2.755 #pos=1.129 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else return 0.134367112561124;  // std dev = 28,206, 3.823,000 (wgt'ed) examples reached here.  /* #neg=2.694 #pos=1.129 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else return 0.11149745310709422;  // std dev = 28,284, 3.874,000 (wgt'ed) examples reached here.  /* #neg=2.745 #pos=1.129 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831064;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else return 0.10020811470574571;  // std dev = 28,169, 3.799,000 (wgt'ed) examples reached here.  /* #neg=2.670 #pos=1.129 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 3,04e-07, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else return 0.08170097627720056;  // std dev = 28,212, 3.827,000 (wgt'ed) examples reached here.  /* #neg=2.698 #pos=1.129 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,89e-07, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else return 0.06883091764010933;  // std dev = 28,189, 3.812,000 (wgt'ed) examples reached here.  /* #neg=2.683 #pos=1.129 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,89e-07, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else return 0.056048626298243975;  // std dev = 28,198, 3.818,000 (wgt'ed) examples reached here.  /* #neg=2.689 #pos=1.129 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 8,94e-08, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else return 0.04028834034299681;  // std dev = 28,306, 3.889,000 (wgt'ed) examples reached here.  /* #neg=2.760 #pos=1.129 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else return 0.037979242355464855;  // std dev = 28,200, 3.819,000 (wgt'ed) examples reached here.  /* #neg=2.690 #pos=1.129 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else return 0.026978994449315914;  // std dev = 28,273, 3.867,000 (wgt'ed) examples reached here.  /* #neg=2.738 #pos=1.129 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.323917
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 9.776 seconds
Total inference time: 5.528 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.585536
   AUC PR    = 0.190243
   CLL	      = -0.324814
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.171072
   F1        = 0.292163


Total scoring time: 7.968 seconds
Parameter learned model CLL: -0.324814


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.299, 2755, 1129], 'true': [1.07e-06, 0, 233]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.206, 2694, 1129], 'true': [0.0, 0, 233]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.284, 2745, 1129], 'true': [5.33e-07, 0, 233]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.169, 2670, 1129], 'true': [0.0, 0, 233]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.212, 2698, 1129], 'true': [3.04e-07, 0, 233]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.189, 2683, 1129], 'true': [2.89e-07, 0, 233]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.198, 2689, 1129], 'true': [2.89e-07, 0, 233]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.306, 2760, 1129], 'true': [8.94e-08, 0, 233]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.2, 2690, 1129], 'true': [0.0, 0, 233]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.273, 2738, 1129], 'true': [1.03e-07, 0, 233]}]]
[{'': [4.879263421528585e-15, 0.2061850168798605]}, {'': [-4.08638311553019e-15, 0.20810520242137767]}, {'': [1.2198158553821462e-15, 0.20649857448186604]}, {'': [-1.2198158553821462e-16, 0.20886545488866481]}, {'': [3.9644015299919755e-16, 0.20797874958969775]}, {'': [3.5832090751850545e-16, 0.20845332682234358]}, {'': [3.5832090751850545e-16, 0.208263372116511]}, {'': [3.4307320932622866e-17, 0.20602842269746907]}, {'': [-1.601008310189067e-16, 0.20823172899442005]}, {'': [4.5743094576830484e-17, 0.20671835558434756]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,07e-06, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.48314893509951234;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return -0.003920030417729039;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | else return 0.18045246675715915;  // std dev = 0,467, 3.143,000 (wgt'ed) examples reached here.  /* #neg=2.130 #pos=1.013 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.14762261931003867;  // std dev = 2,796, 38,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.050941973991396876;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.007397283387882858;  // std dev = 6,446, 357,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=48 */
%   | | | else return 0.0638226939647597;  // std dev = 4,800, 141,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=29 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15138196867118692;  // std dev = 0,465, 3.287,000 (wgt'ed) examples reached here.  /* #neg=2.247 #pos=1.040 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.04095298188652828;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.13138390476915532;  // std dev = 2,544, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.0031493424747802198;  // std dev = 6,072, 303,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=43 */
%   | | | else return 0.007748182906613449;  // std dev = 5,508, 239,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12035552438146765;  // std dev = 0,461, 3.385,000 (wgt'ed) examples reached here.  /* #neg=2.345 #pos=1.040 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.03606671114280825;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.10574050188235791;  // std dev = 2,557, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.011194695780173812;  // std dev = 7,082, 441,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=58 */
%   | | | else return -0.00301621587814379;  // std dev = 4,233, 143,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=21 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831064;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3884136801693061;  // std dev = 2,772, 32,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return 0.08421896879437216;  // std dev = 3,364, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.10908393415047778;  // std dev = 0,464, 3.190,000 (wgt'ed) examples reached here.  /* #neg=2.185 #pos=1.005 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1633135134514628;  // std dev = 2,728, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.05779060766556609;  // std dev = 0,960, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.015077958787246548;  // std dev = 6,483, 384,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=48 */
%   | | | else return 0.05379623052165205;  // std dev = 4,775, 137,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=29 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 3,04e-07, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09309276062128721;  // std dev = 0,465, 3.272,000 (wgt'ed) examples reached here.  /* #neg=2.232 #pos=1.040 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.18297868675965426;  // std dev = 1,139, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.004463025683229835;  // std dev = 2,534, 42,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.006169682912810652;  // std dev = 6,996, 395,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=58 */
%   | | | else return -0.008695460560500612;  // std dev = 4,228, 142,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=21 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,89e-07, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.44960386608501457;  // std dev = 1,935, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return -0.054505247882144996;  // std dev = 3,189, 77,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=12 */
%   | | else return 0.07664438159745053;  // std dev = 0,466, 3.181,000 (wgt'ed) examples reached here.  /* #neg=2.168 #pos=1.013 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0018776339933330877;  // std dev = 6,384, 340,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=48 */
%   | | | else return 0.1236818218484609;  // std dev = 2,850, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03458274623253614;  // std dev = 4,881, 152,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=30 */
%   | | | else return -0.16797893946409792;  // std dev = 0,041, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,89e-07, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3868725412433214;  // std dev = 1,778, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return -0.0703347353147762;  // std dev = 3,234, 92,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | | else return 0.07179802934958314;  // std dev = 0,469, 3.089,000 (wgt'ed) examples reached here.  /* #neg=2.076 #pos=1.013 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.018728527662425786;  // std dev = 6,444, 390,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=48 */
%   | | | else return 0.06892423686809061;  // std dev = 2,929, 49,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0444036885151903;  // std dev = 4,849, 139,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=30 */
%   | | | else return -0.14032634932102606;  // std dev = 0,054, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 8,94e-08, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.047958902815617;  // std dev = 0,463, 3.279,000 (wgt'ed) examples reached here.  /* #neg=2.239 #pos=1.040 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.07846767049721516;  // std dev = 5,535, 164,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=41 */
%   | | | else return -0.05131465152131582;  // std dev = 3,179, 121,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 7.88847587547566E-4;  // std dev = 5,588, 260,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=37 */
%   | | | else return -0.13475629804312517;  // std dev = 0,067, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.037733798448995694;  // std dev = 0,463, 3.283,000 (wgt'ed) examples reached here.  /* #neg=2.243 #pos=1.040 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12892437518738634;  // std dev = 2,755, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return -0.044935345992909666;  // std dev = 0,960, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.007941698375308935;  // std dev = 6,424, 365,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=48 */
%   | | | else return 0.0024639075130580804;  // std dev = 4,823, 159,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=29 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 233,000 (wgt'ed) examples reached here.  /* #pos=233 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6755537183210578;  // std dev = 6,370, 1.005,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=964 */
%   | | | else return -0.24586860122181994;  // std dev = 7,421, 2.366,000 (wgt'ed) examples reached here.  /* #neg=2.314 #pos=52 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1650122161676591;  // std dev = 4,107, 203,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=19 */
%   | | | else return 0.18314955223148968;  // std dev = 4,922, 106,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.5640653206003823;  // std dev = 1,598, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return 0.7709503475769391;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.023169008159305067;  // std dev = 4,843, 144,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=30 */
%   | | | else return -0.11165032826518333;  // std dev = 0,033, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.942521
   AUC PR    = 0.3721
   CLL	      = -0.274775
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.172691
   F1        = 0.294521


Total learning time: 584.397 seconds
Total inference time: 34.487 seconds
AUC ROC: 0.942521


Results scoring model
   AUC ROC   = 0.930345
   AUC PR    = 0.477878
   CLL	      = -0.263341
   Precision = 0.950178 at threshold = 0.5
   Recall    = 0.196035
   F1        = 0.325015


Total scoring time: 234.728 seconds
Refined model CLL: -0.263341


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.942521
   AUC PR    = 0.3721
   CLL	      = -0.274775
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.172691
   F1        = 0.294521


Total learning time: 836.8690000000001 seconds
Total inference time: 34.487 seconds
AUC ROC: 0.942521
Total revision time: 836.8690000000001
Best scored revision CLL: -0.263341


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 07:44:33
{'AUC PR': 0.3721, 'AUC ROC': 0.942521, 'Precision': [1.0, 0.5], 'Inference time': 34.487, 'parameter_0.6': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.528, 'CLL': -0.323917, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 9.776}, 'CLL': -0.274775, 'Recall': 0.172691, 'F1': 0.294521, 'Learning time': 836.8690000000001}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22082699777756987;  // std dev = 0,481, 3.510,000 (wgt'ed) examples reached here.  /* #neg=2.237 #pos=1.273 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.23745927992709853;  // std dev = 0,485, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.03460468808889409;  // std dev = 5,747, 345,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=37 */
%   | | | else return 0.13314893509951237;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.20430278125335852;  // std dev = 2,426, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.03832911527969242;  // std dev = 4,049, 111,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.7238242051420402;  // std dev = 0,307, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return -0.03261476462279748;  // std dev = 3,347, 94,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=13 */
%   | | | else return 0.829087363036777;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1979324838962546;  // std dev = 0,482, 3.351,000 (wgt'ed) examples reached here.  /* #neg=2.115 #pos=1.236 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then return -0.006615705806908373;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordauthor(I, K), haswordtitle(L, K) )
%   | | | then return 0.12974793055672798;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.006024625417067886;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | then return 0.11605908830796813;  // std dev = 0,446, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else return -0.009988831047773424;  // std dev = 0,337, 509,000 (wgt'ed) examples reached here.  /* #neg=442 #pos=67 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7620510554259322;  // std dev = 0,072, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.34204730189116933;  // std dev = 2,947, 35,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return -0.011620651776783958;  // std dev = 3,369, 74,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | else return 0.15741118029953563;  // std dev = 0,478, 3.431,000 (wgt'ed) examples reached here.  /* #neg=2.203 #pos=1.228 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then return -0.007393665034778295;  // std dev = 0,338, 358,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=48 */
%   | | else return 0.14804118322607843;  // std dev = 0,461, 36,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, A) )
%   | | | then return 0.08578425024445127;  // std dev = 4,676, 120,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=29 */
%   | | | else return -0.08785430289638281;  // std dev = 0,975, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else return -0.16058749990297314;  // std dev = 0,067, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13295169476452354;  // std dev = 0,478, 3.532,000 (wgt'ed) examples reached here.  /* #neg=2.259 #pos=1.273 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.06029728971454922;  // std dev = 0,872, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20788978762573948;  // std dev = 2,452, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.1966624319339387;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13940619040313956;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.028801049096857642;  // std dev = 5,749, 344,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=37 */
%   | | | else return 0.09012316648211074;  // std dev = 2,837, 41,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03671400924919452;  // std dev = 4,789, 145,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=29 */
%   | | | else return -0.1324907738152913;  // std dev = 0,046, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11204418427453891;  // std dev = 0,480, 3.496,000 (wgt'ed) examples reached here.  /* #neg=2.223 #pos=1.273 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.3302739525923309;  // std dev = 0,984, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.08412698106715841;  // std dev = 2,616, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.12557278229117502;  // std dev = 0,023, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.027316935500164116;  // std dev = 5,754, 351,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=37 */
%   | | | else return 0.058249468393087984;  // std dev = 2,872, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.032209605954647384;  // std dev = 4,790, 144,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=29 */
%   | | | else return -0.11909827962646764;  // std dev = 0,041, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.478612143784259;  // std dev = 0,258, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( haswordtitle(F, C) )
%   | | | then return -0.06775440189952263;  // std dev = 3,771, 109,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=21 */
%   | | | else return 0.5860545276143573;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.0837209249023594;  // std dev = 0,479, 3.466,000 (wgt'ed) examples reached here.  /* #neg=2.230 #pos=1.236 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return 0.003981019518504524;  // std dev = 0,345, 327,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=47 */
%   | | else return -0.04126869127730784;  // std dev = 0,318, 99,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=12 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.04535565567609637;  // std dev = 4,720, 131,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=29 */
%   | | | else return -0.08884020330779335;  // std dev = 0,976, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else return -0.10539071179720687;  // std dev = 0,041, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08100579653484083;  // std dev = 0,481, 3.430,000 (wgt'ed) examples reached here.  /* #neg=2.157 #pos=1.273 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return -0.005865522060357781;  // std dev = 6,361, 361,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=48 */
%   | | | else return -0.12306467305633392;  // std dev = 0,019, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordtitle(E, I), haswordvenue(B, I) )
%   | | | then return 0.14912944928809263;  // std dev = 2,685, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.21703358086618138;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.05098760944091269;  // std dev = 4,678, 125,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=29 */
%   | | | else return -0.10503466173160426;  // std dev = 1,012, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else return -0.115485630961479;  // std dev = 0,132, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5589716297880724;  // std dev = 0,438, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.39181475676558286;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.05524190509659231;  // std dev = 0,337, 89,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=20 */
%   | else return 0.060087336235513315;  // std dev = 0,482, 3.370,000 (wgt'ed) examples reached here.  /* #neg=2.134 #pos=1.236 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | then if ( author(L, I), venue(L, B) )
%   | | | then return -0.20577589453161282;  // std dev = 0,072, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.013296041213130168;  // std dev = 2,598, 45,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | else return -0.13321503334959559;  // std dev = 0,288, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | then return 0.08871720578125407;  // std dev = 0,435, 41,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else return -0.011622205029822547;  // std dev = 0,339, 497,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=67 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6482838652671798;  // std dev = 0,186, 1.192,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1.152 */
%   | | else return -0.2694253578935016;  // std dev = 0,158, 2.309,000 (wgt'ed) examples reached here.  /* #neg=2.257 #pos=52 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.18802879143047718;  // std dev = 0,295, 195,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=19 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4439427640165313;  // std dev = 3,604, 72,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=55 */
%   | | | else return 0.04069795668360094;  // std dev = 3,208, 58,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5769359530818252;  // std dev = 0,267, 43,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07565642960411313;  // std dev = 0,326, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.07342663949330587;  // std dev = 2,499, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.0285656412687493;  // std dev = 3,984, 101,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.48930447235618185;  // std dev = 0,204, 1.203,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1.152 */
%   | | else return -0.22201101312238103;  // std dev = 0,152, 2.383,000 (wgt'ed) examples reached here.  /* #neg=2.331 #pos=52 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.14541876227564285;  // std dev = 0,291, 198,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=19 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3102373006503454;  // std dev = 3,830, 75,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=55 */
%   | | | else return 0.013007852213526981;  // std dev = 3,242, 65,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.46490077499554366;  // std dev = 0,229, 42,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.07256349849989112;  // std dev = 4,567, 109,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | | | else return -0.10526003604927993;  // std dev = 1,010, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else return -0.08770936263259593;  // std dev = 0,031, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.969253
   AUC PR    = 0.472435
   CLL	      = -0.254703
   Precision = 0.417119 at threshold = 0.5
   Recall    = 0.926372
   F1        = 0.575229


Total learning time: 1350.394 seconds
Total inference time: 59.075 seconds
AUC ROC: 0.969253


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 08:08:02
{'AUC PR': 0.472435, 'AUC ROC': 0.969253, 'Precision': [0.417119, 0.5], 'Inference time': 59.075, 'CLL': -0.254703, 'Recall': 0.926372, 'Learning time': 1350.394, 'F1': 0.575229}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8025933795439567;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.01685106490048767;  // std dev = 3,373, 104,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=13 */
%   | | | else return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.35814893509951223;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.0671041589801094;  // std dev = 3,328, 67,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | else return 0.2223632856898796;  // std dev = 0,481, 3.303,000 (wgt'ed) examples reached here.  /* #neg=2.100 #pos=1.203 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then if ( haswordauthor(M, N), haswordtitle(P, N) )
%   | | then return 0.23745927992709853;  // std dev = 0,485, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else return -0.016851064900487787;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(A, Q), haswordtitle(R, Q) )
%   | | then if ( haswordtitle(R, S), haswordauthor(T, S) )
%   | | | then return -0.03140330370645846;  // std dev = 5,737, 335,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=37 */
%   | | | else return 0.07814893509951236;  // std dev = 2,929, 50,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(A, U), haswordauthor(W, U) )
%   | | | then return 0.14847151574467365;  // std dev = 2,527, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.03514008554199012;  // std dev = 4,057, 113,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=20 */


Results
   AUC ROC   = 0.545901
   AUC PR    = 0.023985
   CLL	      = -0.200643
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 41.698 seconds
Total inference time: 7.235 seconds
AUC ROC: 0.545901


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 08:08:52
{'AUC PR': 0.023985, 'AUC ROC': 0.545901, 'Precision': [nan, 0.5], 'Inference time': 7.235, 'CLL': -0.200643, 'Recall': 0.0, 'Learning time': 41.698, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.14552720510141665;  // std dev = 32,749, 5.237,000 (wgt'ed) examples reached here.  /* #neg=3.732 #pos=1.505 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.13133098445499253;  // std dev = 32,646, 5.157,000 (wgt'ed) examples reached here.  /* #neg=3.652 #pos=1.505 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.11662038339492675;  // std dev = 32,559, 5.091,000 (wgt'ed) examples reached here.  /* #neg=3.586 #pos=1.505 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.0969325485417083;  // std dev = 32,603, 5.124,000 (wgt'ed) examples reached here.  /* #neg=3.619 #pos=1.505 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.08411299013019809;  // std dev = 32,535, 5.073,000 (wgt'ed) examples reached here.  /* #neg=3.568 #pos=1.505 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.06356630869951573;  // std dev = 32,676, 5.180,000 (wgt'ed) examples reached here.  /* #neg=3.675 #pos=1.505 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,53e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.057067157184853674;  // std dev = 32,564, 5.095,000 (wgt'ed) examples reached here.  /* #neg=3.590 #pos=1.505 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2,53e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.039535749150962474;  // std dev = 32,726, 5.219,000 (wgt'ed) examples reached here.  /* #neg=3.714 #pos=1.505 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.040957942863738536;  // std dev = 32,521, 5.063,000 (wgt'ed) examples reached here.  /* #neg=3.558 #pos=1.505 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080117;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.02518624276405496;  // std dev = 32,703, 5.201,000 (wgt'ed) examples reached here.  /* #neg=3.696 #pos=1.505 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.322386
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 16.891 seconds
Total inference time: 5.127 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.585628
   AUC PR    = 0.190419
   CLL	      = -0.323286
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.171256
   F1        = 0.292431


Total scoring time: 9.994 seconds
Parameter learned model CLL: -0.323286


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.749, 3732, 1505], 'true': [1.05e-06, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.646, 3652, 1505], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.559, 3586, 1505], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.603, 3619, 1505], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.535, 3568, 1505], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.676, 3675, 1505], 'true': [3.67e-07, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.564, 3590, 1505], 'true': [2.53e-07, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.726, 3714, 1505], 'true': [2.53e-07, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.521, 3558, 1505], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.703, 3696, 1505], 'true': [0.0, 0, 311]}]]
[{'': [3.5641371954525925e-15, 0.20479199993256217]}, {'': [-4.93495919370359e-15, 0.20666789022101295]}, {'': [-2.2847033304183284e-16, 0.20822870158708434]}, {'': [-8.453402322547816e-16, 0.2074468482187872]}, {'': [-3.6555253286693257e-16, 0.2086563571812146]}, {'': [4.3409363277948243e-16, 0.20612673484297436]}, {'': [2.0562329973764956e-16, 0.20813378006298988]}, {'': [2.0562329973764956e-16, 0.20521249736720582]}, {'': [-2.1704681638974121e-16, 0.2088942995912803]}, {'': [-1.7420862894439756e-16, 0.2056339201773792]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6081489350995116;  // std dev = 2,449, 32,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | | | else return 0.018148935099512258;  // std dev = 4,099, 125,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=20 */
%   | | else return 0.17281622657092235;  // std dev = 0,464, 4.268,000 (wgt'ed) examples reached here.  /* #neg=2.925 #pos=1.343 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.11814893509951237;  // std dev = 3,102, 50,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.005657035049740941;  // std dev = 7,941, 536,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=73 */
%   | | | else return 0.019998646082170682;  // std dev = 4,844, 173,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.43667867000782357;  // std dev = 3,285, 45,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | | | else return 0.022987354630038717;  // std dev = 3,814, 96,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=18 */
%   | | else return 0.1557621845030524;  // std dev = 0,466, 4.195,000 (wgt'ed) examples reached here.  /* #neg=2.853 #pos=1.342 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.028181486078959535;  // std dev = 7,163, 510,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=58 */
%   | | | else return 0.15193961631131964;  // std dev = 3,467, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.063164926720944;  // std dev = 5,811, 203,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=43 */
%   | | | else return -0.14788798005949913;  // std dev = 0,021, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.34242746870812696;  // std dev = 3,389, 47,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=27 */
%   | | | else return 0.014545372103695397;  // std dev = 3,825, 99,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=18 */
%   | | else return 0.13243582706956558;  // std dev = 0,466, 4.205,000 (wgt'ed) examples reached here.  /* #neg=2.863 #pos=1.342 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.019638083954890282;  // std dev = 7,143, 487,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=58 */
%   | | | else return 0.10501783745351978;  // std dev = 3,533, 64,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.05592453470012267;  // std dev = 5,807, 202,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=43 */
%   | | | else return -0.12980562808583032;  // std dev = 0,014, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.047266491246223535;  // std dev = 5,083, 153,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=39 */
%   | | | else return 0.8023607874697003;  // std dev = 0,100, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.10463697985371646;  // std dev = 0,463, 4.297,000 (wgt'ed) examples reached here.  /* #neg=2.955 #pos=1.342 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.01707850306809947;  // std dev = 7,141, 487,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=58 */
%   | | | else return 0.08626429314617275;  // std dev = 3,543, 65,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.08988835844645653;  // std dev = 3,296, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return -0.002023514429517033;  // std dev = 4,852, 180,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=28 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3926265653377583;  // std dev = 2,647, 34,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | | | else return -0.03986571803664048;  // std dev = 4,062, 124,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=20 */
%   | | else return 0.09478488958425191;  // std dev = 0,466, 4.196,000 (wgt'ed) examples reached here.  /* #neg=2.853 #pos=1.343 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.016760047821170725;  // std dev = 7,148, 494,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=58 */
%   | | | else return 0.041634592934004136;  // std dev = 3,619, 74,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06588839068404695;  // std dev = 5,723, 184,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=43 */
%   | | | else return -0.12239562155672976;  // std dev = 0,034, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2540932244245018;  // std dev = 3,328, 46,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=27 */
%   | | | else return 0.016257723390324188;  // std dev = 3,609, 82,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   | | else return 0.06987807385108223;  // std dev = 0,462, 4.299,000 (wgt'ed) examples reached here.  /* #neg=2.957 #pos=1.342 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.18185072805961547;  // std dev = 2,966, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return -0.0028067547394857967;  // std dev = 1,325, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.014337735064104427;  // std dev = 7,295, 494,000 (wgt'ed) examples reached here.  /* #neg=432 #pos=62 */
%   | | | else return 0.024640953318001545;  // std dev = 5,687, 209,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,53e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.061810020057463194;  // std dev = 0,463, 4.367,000 (wgt'ed) examples reached here.  /* #neg=2.980 #pos=1.387 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0760405916769225;  // std dev = 3,268, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.292754355505363;  // std dev = 0,932, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.059766053997871355;  // std dev = 3,194, 62,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | | else return -0.011656970865263988;  // std dev = 8,651, 663,000 (wgt'ed) examples reached here.  /* #neg=575 #pos=88 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2,53e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0503171230560519;  // std dev = 0,463, 4.366,000 (wgt'ed) examples reached here.  /* #neg=2.979 #pos=1.387 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.010802074457874379;  // std dev = 7,104, 476,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=58 */
%   | | | else return 0.05153582234297403;  // std dev = 3,592, 70,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.04549576206114247;  // std dev = 5,719, 187,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=43 */
%   | | | else return -0.11109784121633051;  // std dev = 0,046, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3800679246690149;  // std dev = 2,028, 29,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   | | | else return -0.04902078862398247;  // std dev = 4,018, 114,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=20 */
%   | | else return 0.04146762052432148;  // std dev = 0,465, 4.208,000 (wgt'ed) examples reached here.  /* #neg=2.865 #pos=1.343 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.024448892698345184;  // std dev = 6,828, 279,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=60 */
%   | | | else return -0.05762365423162756;  // std dev = 3,605, 181,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=14 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.1205757475547131;  // std dev = 3,047, 47,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.009660313789711958;  // std dev = 5,219, 265,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=31 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080117;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.030655237177036648;  // std dev = 29,392, 4.028,000 (wgt'ed) examples reached here.  /* #neg=2.750 #pos=1.278 */
%   | | | else return 0.031182380973679893;  // std dev = 7,709, 452,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=78 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.17499974854406825;  // std dev = 4,652, 270,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=24 */
%   | | | else return 0.16795553007155908;  // std dev = 5,747, 151,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.436601917270339;  // std dev = 0,896, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5713348365615161;  // std dev = 1,613, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.06871572864270864;  // std dev = 3,213, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.0021792976120822605;  // std dev = 4,787, 161,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */


Results
   AUC ROC   = 0.626992
   AUC PR    = 0.177293
   CLL	      = -0.341161
   Precision = 0.148599 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.155612


Total learning time: 832.815 seconds
Total inference time: 22.122 seconds
AUC ROC: 0.626992


Results scoring model
   AUC ROC   = 0.675234
   AUC PR    = 0.213249
   CLL	      = -0.318163
   Precision = 0.505263 at threshold = 0.5
   Recall    = 0.185022
   F1        = 0.270859


Total scoring time: 141.119 seconds
Refined model CLL: -0.318163


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.626992
   AUC PR    = 0.177293
   CLL	      = -0.341161
   Precision = 0.148599 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.155612


Total learning time: 1000.8190000000001 seconds
Total inference time: 22.122 seconds
AUC ROC: 0.626992
Total revision time: 1000.8190000000001
Best scored revision CLL: -0.318163


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:26:02
{'AUC PR': 0.177293, 'AUC ROC': 0.626992, 'Precision': [0.148599, 0.5], 'Inference time': 22.122, 'parameter_0.8': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.127, 'CLL': -0.322386, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 16.891}, 'CLL': -0.341161, 'Recall': 0.16332, 'F1': 0.155612, 'Learning time': 1000.8190000000001}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21896491470001717;  // std dev = 0,480, 4.706,000 (wgt'ed) examples reached here.  /* #neg=3.008 #pos=1.698 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then return -0.025150863693244103;  // std dev = 0,321, 497,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=58 */
%   | | else return 0.11188027838309446;  // std dev = 0,435, 67,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.08719921442912029;  // std dev = 5,622, 179,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=41 */
%   | | | else return -0.024204006076958388;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19640683307367426;  // std dev = 0,482, 4.626,000 (wgt'ed) examples reached here.  /* #neg=2.928 #pos=1.698 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.027849709375331072;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.02792586818242424;  // std dev = 7,056, 505,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=56 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.1096017249017509;  // std dev = 3,533, 64,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return -0.15602327509824868;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.10114183607542117;  // std dev = 5,528, 162,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=41 */
%   | | | else return -0.05029714409336202;  // std dev = 1,355, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16270891993942507;  // std dev = 0,481, 4.678,000 (wgt'ed) examples reached here.  /* #neg=2.980 #pos=1.698 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.8490647621877858;  // std dev = 0,031, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.12513359124596338;  // std dev = 2,852, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return -0.14298791441586703;  // std dev = 0,049, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.027271128445970766;  // std dev = 6,334, 415,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=45 */
%   | | | else return 0.07431191548950274;  // std dev = 3,577, 70,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.1286546375359238;  // std dev = 3,135, 48,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.016035109482433835;  // std dev = 4,699, 153,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7724011398710855;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.22759886012891478;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.6954780629480083;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.0824375698063341;  // std dev = 3,923, 124,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=18 */
%   | else return 0.14448362344239377;  // std dev = 0,483, 4.413,000 (wgt'ed) examples reached here.  /* #neg=2.771 #pos=1.642 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, H) )
%   | | | then return -0.016665998422500296;  // std dev = 1,313, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.08921937007479849;  // std dev = 3,016, 49,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else return -0.04907098780959485;  // std dev = 0,316, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return -0.002187076216325136;  // std dev = 0,347, 704,000 (wgt'ed) examples reached here.  /* #neg=603 #pos=101 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11682828212875193;  // std dev = 0,481, 4.579,000 (wgt'ed) examples reached here.  /* #neg=2.881 #pos=1.698 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7363255707148881;  // std dev = 2,637, 65,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=57 */
%   | | | else return -0.13116798970886737;  // std dev = 0,975, 354,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=1 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13241084431544503;  // std dev = 0,012, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 8.868621569036022E-4;  // std dev = 3,729, 101,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.1451808636740186;  // std dev = 2,873, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.07945864258627022;  // std dev = 1,214, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02395628032055957;  // std dev = 4,737, 147,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=28 */
%   | | | else return -0.11182094121111356;  // std dev = 0,014, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09024779540820774;  // std dev = 0,480, 4.628,000 (wgt'ed) examples reached here.  /* #neg=2.930 #pos=1.698 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7734000924249325;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17357403301854785;  // std dev = 0,109, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return 0.05910001402055442;  // std dev = 2,968, 51,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return -0.12690205566197196;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.015582667338715127;  // std dev = 6,140, 460,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=56 */
%   | | | else return 0.07342994995216241;  // std dev = 3,526, 67,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.009151445563584616;  // std dev = 4,769, 157,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=28 */
%   | | | else return -0.09981363814820843;  // std dev = 0,030, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6269282251845304;  // std dev = 1,367, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.29268337887869394;  // std dev = 0,044, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.2353248028870038;  // std dev = 1,273, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | | else return 0.10088880182282231;  // std dev = 3,729, 61,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | else return 0.07096542795487332;  // std dev = 0,480, 4.487,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=1.641 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then return 0.22452645671657828;  // std dev = 0,392, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordtitle(L, I) )
%   | | | then return -0.1286098668255242;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.11085297347363232;  // std dev = 2,840, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else return 0.0012576634260810173;  // std dev = 0,326, 684,000 (wgt'ed) examples reached here.  /* #neg=583 #pos=101 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03894287222956698;  // std dev = 0,473, 4.388,000 (wgt'ed) examples reached here.  /* #neg=2.857 #pos=1.531 */
%   | | else return 0.027087653990287106;  // std dev = 0,327, 442,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=78 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.186502342352016;  // std dev = 0,290, 257,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=24 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.35948773758223657;  // std dev = 4,978, 112,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=75 */
%   | | | else return 0.03145533344290431;  // std dev = 3,788, 91,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=19 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.6162631870023221;  // std dev = 0,242, 49,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=46 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.04258987745270189;  // std dev = 5,464, 172,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=41 */
%   | | | else return -0.07467922066600294;  // std dev = 1,380, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else return -0.11912470262843852;  // std dev = 0,121, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04464022762227792;  // std dev = 0,474, 4.666,000 (wgt'ed) examples reached here.  /* #neg=2.968 #pos=1.698 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.02261677831911607;  // std dev = 1,014, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.24691539408879193;  // std dev = 0,114, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return 0.192696813391829;  // std dev = 2,194, 28,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.02495010088246591;  // std dev = 0,910, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.03406077919946059;  // std dev = 6,541, 255,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=58 */
%   | | | else return -0.0496167808241051;  // std dev = 3,233, 164,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.030442915177800102;  // std dev = 4,635, 306,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=31 */
%   | | | else return -0.1130444586429335;  // std dev = 0,104, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02636247091480011;  // std dev = 0,475, 4.319,000 (wgt'ed) examples reached here.  /* #neg=2.788 #pos=1.531 */
%   | | else return 0.023662908134963034;  // std dev = 0,329, 433,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=78 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.15689320193480236;  // std dev = 0,284, 267,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=24 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2984843729536624;  // std dev = 4,736, 107,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=75 */
%   | | | else return 0.03165569919699541;  // std dev = 3,764, 86,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.6050740281133407;  // std dev = 2,506, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | | else return -0.18904942388994375;  // std dev = 1,134, 127,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=2 */
%   | | else return -0.07729531697083517;  // std dev = 0,271, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | else return 0.26197562174699945;  // std dev = 0,326, 45,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */


Results
   AUC ROC   = 0.55369
   AUC PR    = 0.044324
   CLL	      = -0.386694
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.025435
   F1        = 0.048408


Total learning time: 2937.542 seconds
Total inference time: 29.262 seconds
AUC ROC: 0.55369


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 09:15:29
{'AUC PR': 0.044324, 'AUC ROC': 0.55369, 'Precision': [0.5, 0.5], 'Inference time': 29.262, 'CLL': -0.386694, 'Recall': 0.025435, 'Learning time': 2937.542, 'F1': 0.048408}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22631892642648027;  // std dev = 0,482, 4.612,000 (wgt'ed) examples reached here.  /* #neg=2.914 #pos=1.698 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.058148935099512175;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.17522210583121967;  // std dev = 2,980, 41,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.018230755849714984;  // std dev = 7,006, 453,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=56 */
%   | | | else return 0.10814893509951237;  // std dev = 3,571, 68,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.04992975701731982;  // std dev = 4,757, 146,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.532404
   AUC PR    = 0.011659
   CLL	      = -0.20233
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 27.369 seconds
Total inference time: 3.967 seconds
AUC ROC: 0.532404


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 09:16:01
{'AUC PR': 0.011659, 'AUC ROC': 0.532404, 'Precision': [nan, 0.5], 'Inference time': 3.967, 'CLL': -0.20233, 'Recall': 0.0, 'Learning time': 27.369, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1,41e-06, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.15309275532422625;  // std dev = 36,504, 6.408,000 (wgt'ed) examples reached here.  /* #neg=4.518 #pos=1.890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13559571133271686;  // std dev = 36,448, 6.361,000 (wgt'ed) examples reached here.  /* #neg=4.471 #pos=1.890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11484510995377518;  // std dev = 36,487, 6.394,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=1.890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09319923839031405;  // std dev = 36,591, 6.482,000 (wgt'ed) examples reached here.  /* #neg=4.592 #pos=1.890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.08132815164071666;  // std dev = 36,504, 6.408,000 (wgt'ed) examples reached here.  /* #neg=4.518 #pos=1.890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,34e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.061793670778071054;  // std dev = 36,648, 6.531,000 (wgt'ed) examples reached here.  /* #neg=4.641 #pos=1.890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2,53e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.05575165034247435;  // std dev = 36,518, 6.420,000 (wgt'ed) examples reached here.  /* #neg=4.530 #pos=1.890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2,63e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04501713056163294;  // std dev = 36,530, 6.430,000 (wgt'ed) examples reached here.  /* #neg=4.540 #pos=1.890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.03737719375402309;  // std dev = 36,508, 6.411,000 (wgt'ed) examples reached here.  /* #neg=4.521 #pos=1.890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.02998385272025242;  // std dev = 36,513, 6.415,000 (wgt'ed) examples reached here.  /* #neg=4.525 #pos=1.890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.324245
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 21.6 seconds
Total inference time: 5.62 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.325194
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 11.348 seconds
Parameter learned model CLL: -0.325194


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.504, 4518, 1890], 'true': [1.41e-06, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.448, 4471, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.487, 4504, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.591, 4592, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.504, 4518, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.648, 4641, 1890], 'true': [4.34e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.518, 4530, 1890], 'true': [2.53e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.53, 4540, 1890], 'true': [2.63e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.508, 4521, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.513, 4525, 1890], 'true': [0.0, 0, 380]}]]
[{'': [5.235578052969159e-15, 0.20795196313590553]}, {'': [-5.310372025154433e-15, 0.20884096095228055]}, {'': [-1.009718624501195e-15, 0.20821639461219263]}, {'': [-1.495879443705474e-15, 0.20655971712327098]}, {'': [-1.402386978473882e-15, 0.20795196313594827]}, {'': [4.9551006572743825e-16, 0.2056430351215814]}, {'': [1.6828643741686584e-16, 0.2077255655516572]}, {'': [1.8231030720160465e-16, 0.20753708438048712]}, {'': [-2.5710427938687837e-16, 0.20789534132342996]}, {'': [-2.945012654795152e-16, 0.20781986879205244]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1,41e-06, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3991325416568882;  // std dev = 3,892, 61,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.08314893509951153;  // std dev = 4,574, 120,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.15288577720477642;  // std dev = 6,284, 190,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=56 */
%   | | | else return 0.17966193746357337;  // std dev = 33,276, 5.076,000 (wgt'ed) examples reached here.  /* #neg=3.444 #pos=1.632 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.021918632468054866;  // std dev = 7,905, 592,000 (wgt'ed) examples reached here.  /* #neg=521 #pos=71 */
%   | | | else return 0.0803711573217346;  // std dev = 3,742, 81,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.06599207235441426;  // std dev = 6,480, 255,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=53 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3616435389128482;  // std dev = 3,813, 59,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   | | | else return 0.09317733428886425;  // std dev = 4,514, 110,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | else return 0.15232326927210546;  // std dev = 0,465, 5.319,000 (wgt'ed) examples reached here.  /* #neg=3.631 #pos=1.688 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.023190739614268253;  // std dev = 7,922, 612,000 (wgt'ed) examples reached here.  /* #neg=541 #pos=71 */
%   | | | else return 0.05262647730505519;  // std dev = 3,784, 88,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.14989846584313862;  // std dev = 3,446, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return 0.019084662905170777;  // std dev = 5,464, 215,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.13218131285703985;  // std dev = 5,776, 159,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
%   | | | else return 0.8215010268934032;  // std dev = 0,089, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0982033149891631;  // std dev = 6,344, 199,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
%   | | | else return 0.12702466539424556;  // std dev = 33,453, 5.193,000 (wgt'ed) examples reached here.  /* #neg=3.561 #pos=1.632 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.24666879744125678;  // std dev = 1,550, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.03139519474826289;  // std dev = 3,443, 78,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.1450379421399532;  // std dev = 3,495, 60,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | | else return -0.009445908152934989;  // std dev = 9,557, 795,000 (wgt'ed) examples reached here.  /* #neg=689 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.36923104984607213;  // std dev = 3,337, 50,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   | | | else return 0.044311776335454536;  // std dev = 4,437, 114,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.10110708055757794;  // std dev = 6,263, 187,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=56 */
%   | | | else return 0.11397581554930543;  // std dev = 33,281, 5.079,000 (wgt'ed) examples reached here.  /* #neg=3.447 #pos=1.632 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.19142307354210564;  // std dev = 3,322, 49,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return -0.06740987237458938;  // std dev = 1,355, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.025914665755828827;  // std dev = 7,971, 639,000 (wgt'ed) examples reached here.  /* #neg=567 #pos=72 */
%   | | | else return 0.0496459970456555;  // std dev = 6,337, 248,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09101383377931274;  // std dev = 0,464, 5.499,000 (wgt'ed) examples reached here.  /* #neg=3.751 #pos=1.748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1561483991538169;  // std dev = 3,346, 50,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return -0.06230653756416014;  // std dev = 1,357, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.026341829425394935;  // std dev = 7,985, 661,000 (wgt'ed) examples reached here.  /* #neg=589 #pos=72 */
%   | | | else return 0.036338533814438925;  // std dev = 6,368, 255,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,34e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5530635770241454;  // std dev = 2,645, 42,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=33 */
%   | | | else return -0.051763748645402764;  // std dev = 4,675, 148,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=27 */
%   | | else return 0.077751635994165;  // std dev = 0,466, 5.251,000 (wgt'ed) examples reached here.  /* #neg=3.563 #pos=1.688 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.020147915959171137;  // std dev = 7,839, 619,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=71 */
%   | | | else return 0.040851556637297524;  // std dev = 3,821, 93,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.043779890761989224;  // std dev = 6,435, 246,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=53 */
%   | | | else return -0.14626659598506025;  // std dev = 0,078, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2,53e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05779518434844039;  // std dev = 0,463, 5.531,000 (wgt'ed) examples reached here.  /* #neg=3.783 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2068909145766548;  // std dev = 1,511, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.050885850978494386;  // std dev = 3,329, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.005874113798403268;  // std dev = 7,752, 463,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=72 */
%   | | | else return -0.0012652333599937223;  // std dev = 6,556, 384,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2,63e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05082257166295525;  // std dev = 0,465, 5.457,000 (wgt'ed) examples reached here.  /* #neg=3.709 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.02482805752894952;  // std dev = 7,876, 648,000 (wgt'ed) examples reached here.  /* #neg=577 #pos=71 */
%   | | | else return 0.06043361832940059;  // std dev = 3,761, 82,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.04394629750962364;  // std dev = 6,386, 236,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=53 */
%   | | | else return -0.13915185729880633;  // std dev = 0,080, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03450282429271;  // std dev = 0,462, 5.565,000 (wgt'ed) examples reached here.  /* #neg=3.817 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.15421536482168274;  // std dev = 1,550, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.012044346165807414;  // std dev = 3,381, 73,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.0077929250974333175;  // std dev = 7,793, 493,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=72 */
%   | | | else return 0.005819920755053761;  // std dev = 6,543, 372,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.029643534630697115;  // std dev = 5,570, 154,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=53 */
%   | | | else return 0.35645369582026193;  // std dev = 1,189, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.03975452438675129;  // std dev = 0,468, 5.185,000 (wgt'ed) examples reached here.  /* #neg=3.497 #pos=1.688 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 8.229208854789054E-4;  // std dev = 7,755, 534,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=71 */
%   | | | else return -0.04261173279830907;  // std dev = 3,969, 173,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=18 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.022585843962891136;  // std dev = 6,439, 253,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=53 */
%   | | | else return -0.11940768401682539;  // std dev = 0,067, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.606092
   AUC PR    = 0.173197
   CLL	      = -0.33951
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 326.536 seconds
Total inference time: 14.617 seconds
AUC ROC: 0.606092


Results scoring model
   AUC ROC   = 0.647466
   AUC PR    = 0.200068
   CLL	      = -0.322574
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168282
   F1        = 0.288084


Total scoring time: 58.275 seconds
Refined model CLL: -0.322574


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.606092
   AUC PR    = 0.173197
   CLL	      = -0.33951
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 417.75899999999996 seconds
Total inference time: 14.617 seconds
AUC ROC: 0.606092
Total revision time: 417.75899999999996
Best scored revision CLL: -0.322574


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 09:23:21
{'AUC PR': 0.173197, 'AUC ROC': 0.606092, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Precision': [1.0, 0.5], 'Inference time': 5.62, 'CLL': -0.324245, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 21.6}, 'Inference time': 14.617, 'CLL': -0.33951, 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 417.75899999999996}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22073199865377532;  // std dev = 0,481, 5.869,000 (wgt'ed) examples reached here.  /* #neg=3.741 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return -0.024495692999660857;  // std dev = 7,916, 605,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=71 */
%   | | | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.09191516886574615;  // std dev = 0,423, 77,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.2152917922423695;  // std dev = 3,105, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.060396126110747135;  // std dev = 5,359, 178,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1905138676131917;  // std dev = 0,480, 5.888,000 (wgt'ed) examples reached here.  /* #neg=3.760 #pos=2.128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.34544512779370673;  // std dev = 0,990, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.23584300166905248;  // std dev = 3,063, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.361104700606662;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1429567576575708;  // std dev = 0,033, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.037747518471996463;  // std dev = 6,966, 536,000 (wgt'ed) examples reached here.  /* #neg=482 #pos=54 */
%   | | | else return 0.05589003858260675;  // std dev = 3,773, 86,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.06605525849890861;  // std dev = 6,295, 232,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=51 */
%   | | | else return -0.13485202370810895;  // std dev = 0,079, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15840134858117233;  // std dev = 0,479, 5.944,000 (wgt'ed) examples reached here.  /* #neg=3.816 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then return -0.02186876358722478;  // std dev = 0,317, 617,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=71 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.09668834644116422;  // std dev = 3,655, 70,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | | else return -0.16367804528043658;  // std dev = 0,024, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05336744695476704;  // std dev = 6,303, 234,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=51 */
%   | | | else return -0.07552281022785655;  // std dev = 1,356, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else return -0.13665797727188767;  // std dev = 0,072, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7738803139574637;  // std dev = 1,98e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.22611968604253588;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.02473079715364722;  // std dev = 4,812, 144,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=29 */
%   | | | else return 0.7738803139574643;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1327963978735744;  // std dev = 0,480, 5.720,000 (wgt'ed) examples reached here.  /* #neg=3.667 #pos=2.053 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return 0.5958783812873062;  // std dev = 0,902, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(J, L), haswordtitle(M, L) )
%   | | | then return 0.13782359091560806;  // std dev = 3,235, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.1224902590517746;  // std dev = 0,039, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.007028608677176735;  // std dev = 0,342, 892,000 (wgt'ed) examples reached here.  /* #neg=769 #pos=123 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7078965661397387;  // std dev = 1,005, 37,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return -0.24896426651923667;  // std dev = 0,028, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.20909473603180337;  // std dev = 1,291, 46,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
%   | | | else return 0.15520633744162005;  // std dev = 4,669, 90,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.4363072558844629;  // std dev = 2,123, 41,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   | | | else return -0.0449512190101205;  // std dev = 4,287, 131,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=24 */
%   | | else return 0.12112959732143654;  // std dev = 0,483, 5.378,000 (wgt'ed) examples reached here.  /* #neg=3.381 #pos=1.997 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return -0.011948412022594985;  // std dev = 0,329, 700,000 (wgt'ed) examples reached here.  /* #neg=611 #pos=89 */
%   | else return 0.032652425894478594;  // std dev = 0,392, 270,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=53 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.589326649310703;  // std dev = 0,263, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.36682947992816106;  // std dev = 1,845, 39,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   | | | else return -0.05297099964609811;  // std dev = 4,331, 144,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=24 */
%   | else return 0.0887578097093;  // std dev = 0,479, 5.662,000 (wgt'ed) examples reached here.  /* #neg=3.609 #pos=2.053 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, H) )
%   | | | then return -0.0736699718456973;  // std dev = 1,138, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.18026359298384043;  // std dev = 3,090, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | else return -0.01653914077813509;  // std dev = 0,266, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.022689985907888864;  // std dev = 0,313, 645,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=72 */
%   | | else return 0.019575743467864275;  // std dev = 0,387, 273,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5442978601779838;  // std dev = 0,515, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.22135924653911862;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.5654880864930072;  // std dev = 0,336, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.054131978635271326;  // std dev = 4,211, 111,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=24 */
%   | else return 0.07918290456113122;  // std dev = 0,480, 5.540,000 (wgt'ed) examples reached here.  /* #neg=3.487 #pos=2.053 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return 0.4937385113634116;  // std dev = 0,889, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(J, L), haswordtitle(M, L) )
%   | | | then return 0.12494239096125984;  // std dev = 3,157, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.10712294053553972;  // std dev = 0,042, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.006062832603190278;  // std dev = 0,341, 893,000 (wgt'ed) examples reached here.  /* #neg=770 #pos=123 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.4147516593138188;  // std dev = 0,350, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.001925684970698611;  // std dev = 4,978, 186,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.1533878828097667;  // std dev = 0,932, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6166165719219234;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.055780291220952;  // std dev = 0,479, 5.640,000 (wgt'ed) examples reached here.  /* #neg=3.587 #pos=2.053 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, I) )
%   | | | then return 0.10987739213535963;  // std dev = 1,161, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.08051195254255387;  // std dev = 3,218, 56,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else return 0.0048937432651872574;  // std dev = 0,364, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return -0.00422236231943103;  // std dev = 0,344, 867,000 (wgt'ed) examples reached here.  /* #neg=744 #pos=123 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.04241383228212381;  // std dev = 0,475, 5.307,000 (wgt'ed) examples reached here.  /* #neg=3.382 #pos=1.925 */
%   | | else return 0.024452558595719025;  // std dev = 0,359, 560,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=99 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.19715614927263503;  // std dev = 0,285, 323,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=29 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3822473288487045;  // std dev = 5,029, 121,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=85 */
%   | | | else return 0.01802552377320237;  // std dev = 3,966, 116,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=20 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.6063934828965866;  // std dev = 0,210, 61,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.05698229794546489;  // std dev = 6,174, 213,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=51 */
%   | | | else return -0.0964309641168751;  // std dev = 1,380, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else return -0.11295775275460682;  // std dev = 0,110, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03468492960919802;  // std dev = 0,472, 5.824,000 (wgt'ed) examples reached here.  /* #neg=3.696 #pos=2.128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.2401217632045383;  // std dev = 1,127, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.06994091169095538;  // std dev = 3,223, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.10704021882558949;  // std dev = 0,058, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return -0.03716536253627769;  // std dev = 0,944, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.03921837115877053;  // std dev = 3,442, 66,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005010453829263239;  // std dev = 7,708, 481,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=71 */
%   | | | else return -0.015112591611186065;  // std dev = 5,561, 318,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=35 */


Results
   AUC ROC   = 0.542193
   AUC PR    = 0.036885
   CLL	      = -0.391207
   Precision = 0.235294 at threshold = 0.5
   Recall    = 0.021419
   F1        = 0.039264


Total learning time: 2129.423 seconds
Total inference time: 26.767 seconds
AUC ROC: 0.542193


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 09:59:18
{'AUC PR': 0.036885, 'AUC ROC': 0.542193, 'Precision': [0.235294, 0.5], 'Inference time': 26.767, 'CLL': -0.391207, 'Recall': 0.021419, 'Learning time': 2129.423, 'F1': 0.039264}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.7956489350995123;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.030810805603109035;  // std dev = 4,456, 139,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=24 */
%   | else return 0.2177565721637916;  // std dev = 0,480, 5.709,000 (wgt'ed) examples reached here.  /* #neg=3.656 #pos=2.053 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then return -0.025266500040060376;  // std dev = 0,321, 609,000 (wgt'ed) examples reached here.  /* #neg=538 #pos=71 */
%   | | else return 0.10139217834275562;  // std dev = 0,429, 74,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then if ( title(P, N), venue(P, B) )
%   | | | then return 0.0680254783093887;  // std dev = 6,348, 243,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=51 */
%   | | | else return -0.08302753548872306;  // std dev = 1,372, 34,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.54562
   AUC PR    = 0.025263
   CLL	      = -0.20025
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 276.35699999999997 seconds
Total inference time: 6.294 seconds
AUC ROC: 0.54562


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 10:04:01
{'AUC PR': 0.025263, 'AUC ROC': 0.54562, 'Precision': [nan, 0.5], 'Inference time': 6.294, 'CLL': -0.20025, 'Recall': 0.0, 'Learning time': 276.35699999999997, 'F1': nan}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 214413

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 35540

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.15536917743735487;  // std dev = 17,119, 1.403,000 (wgt'ed) examples reached here.  /* #neg=986 #pos=417 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,06e-07, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.14276596891212362;  // std dev = 17,029, 1.369,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=417 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,26e-07, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.11828472445264837;  // std dev = 17,080, 1.388,000 (wgt'ed) examples reached here.  /* #neg=971 #pos=417 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.0963625222776291;  // std dev = 17,124, 1.405,000 (wgt'ed) examples reached here.  /* #neg=988 #pos=417 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.08497644598959625;  // std dev = 17,069, 1.384,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=417 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.06784796479502671;  // std dev = 17,098, 1.395,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=417 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.05992146363291096;  // std dev = 17,045, 1.375,000 (wgt'ed) examples reached here.  /* #neg=958 #pos=417 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,98e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.03973008311273004;  // std dev = 17,155, 1.417,000 (wgt'ed) examples reached here.  /* #neg=1.000 #pos=417 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7,60e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.031083075378776942;  // std dev = 17,167, 1.422,000 (wgt'ed) examples reached here.  /* #neg=1.005 #pos=417 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,37e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.031993272300316115;  // std dev = 17,082, 1.389,000 (wgt'ed) examples reached here.  /* #neg=972 #pos=417 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.333121
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 4.322 seconds
Total inference time: 4.234 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.577079
   AUC PR    = 0.171839
   CLL	      = -0.329963
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.154158
   F1        = 0.267135


Total scoring time: 4.338 seconds
Parameter learned model CLL: -0.329963


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.119, 986, 417], 'true': [0.0, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.029, 952, 417], 'true': [2.06e-07, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.08, 971, 417], 'true': [3.26e-07, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.124, 988, 417], 'true': [0.0, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.069, 967, 417], 'true': [0.0, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.098, 978, 417], 'true': [0.0, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.045, 958, 417], 'true': [0.0, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.155, 1000, 417], 'true': [2.98e-08, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.167, 1005, 417], 'true': [7.6e-08, 0, 76]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.082, 972, 417], 'true': [5.37e-08, 0, 76]}]]
[{'': [-1.3088945132422897e-15, 0.20888036988246114]}, {'': [5.609547913895527e-16, 0.21181958220238906]}, {'': [1.402386978473882e-15, 0.21017272379972712]}, {'': [-9.349246523159212e-17, 0.2087086029812283]}, {'': [-3.8565641908031755e-16, 0.21051853971065465]}, {'': [-1.1686558153949016e-17, 0.20956873627008127]}, {'': [-9.933574430856664e-17, 0.21129838016529742]}, {'': [1.1686558153949016e-17, 0.20768080307227174]}, {'': [7.596262800066861e-17, 0.20725400131745758]}, {'': [3.7981314000334304e-17, 0.21008634644002297]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17342783566539263;  // std dev = 0,465, 1.237,000 (wgt'ed) examples reached here.  /* #neg=847 #pos=390 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.034619523334806494;  // std dev = 3,515, 85,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | | else return -0.05489454316135737;  // std dev = 1,351, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.022803445852868642;  // std dev = 2,968, 84,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2,06e-07, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2523661850492338;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.02144333876029001;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return 0.16303456551196038;  // std dev = 0,469, 1.167,000 (wgt'ed) examples reached here.  /* #neg=785 #pos=382 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.10388224706183419;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.026426731527947445;  // std dev = 3,525, 88,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=15 */
%   | | | else return 0.002131845522722378;  // std dev = 2,930, 71,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3,26e-07, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1352211737930386;  // std dev = 0,467, 1.208,000 (wgt'ed) examples reached here.  /* #neg=818 #pos=390 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.03703899926380346;  // std dev = 2,702, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return 0.01691126305307724;  // std dev = 2,905, 64,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.017010058251725562;  // std dev = 2,583, 48,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return -0.12567870644967993;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.4155620153859134;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return -0.1469379846140866;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else return 0.09679810193695165;  // std dev = 0,461, 1.239,000 (wgt'ed) examples reached here.  /* #neg=860 #pos=379 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.23595629928803513;  // std dev = 1,094, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.00216884943152359;  // std dev = 3,563, 98,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.011523807834001353;  // std dev = 2,950, 77,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=10 */
%   | | | else return -0.11250572855045442;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10096950895125498;  // std dev = 0,468, 1.192,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=390 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.052717304827119706;  // std dev = 2,651, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.029918302780715868;  // std dev = 2,558, 44,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.015000700913341223;  // std dev = 2,958, 80,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=10 */
%   | | | else return -0.10175237152762485;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08306465595193915;  // std dev = 0,469, 1.191,000 (wgt'ed) examples reached here.  /* #neg=801 #pos=390 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.13212077399972888;  // std dev = 1,143, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.013535932800363545;  // std dev = 3,838, 129,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=17 */
%   | | | else return 0.036180834582161564;  // std dev = 2,541, 42,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7058947851952774;  // std dev = 3,649, 374,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=360 */
%   | | | else return -0.22926228374232427;  // std dev = 4,261, 834,000 (wgt'ed) examples reached here.  /* #neg=816 #pos=18 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.06457133482288749;  // std dev = 2,824, 56,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | | else return 0.1245250617183499;  // std dev = 2,896, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.7402914959325981;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.18538509365207037;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0360871892134286;  // std dev = 2,533, 41,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,98e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5364556340422425;  // std dev = 4,348, 380,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=360 */
%   | | | else return -0.18754258420561923;  // std dev = 4,249, 848,000 (wgt'ed) examples reached here.  /* #neg=830 #pos=18 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.0988562721487032;  // std dev = 2,913, 73,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=10 */
%   | | | else return 0.15588600306646416;  // std dev = 2,784, 34,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.13297317368249362;  // std dev = 2,712, 40,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.03686184942966057;  // std dev = 0,892, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.013459143098544695;  // std dev = 0,616, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7,60e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.40380302747044106;  // std dev = 4,378, 380,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=360 */
%   | | | else return -0.15878356691195009;  // std dev = 4,233, 855,000 (wgt'ed) examples reached here.  /* #neg=837 #pos=18 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.07011334955155717;  // std dev = 2,890, 69,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=10 */
%   | | | else return 0.07260650573619741;  // std dev = 2,851, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5471281484502547;  // std dev = 0,028, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.07514465186172589;  // std dev = 2,436, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.10029700591954145;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,37e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3309402186238014;  // std dev = 4,176, 378,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=363 */
%   | | | else return -0.1484207783950987;  // std dev = 4,116, 899,000 (wgt'ed) examples reached here.  /* #neg=882 #pos=17 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.00964208962700418;  // std dev = 2,514, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.08244523795639548;  // std dev = 2,302, 42,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02300872117202329;  // std dev = 2,122, 75,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | | else return 0.14277127185387875;  // std dev = 0,778, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.040545308516878695;  // std dev = 0,458, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.991887
   AUC PR    = 0.793078
   CLL	      = -0.164052
   Precision = 0.671543 at threshold = 0.5
   Recall    = 0.918182
   F1        = 0.77573


Total learning time: 749.451 seconds
Total inference time: 65.107 seconds
AUC ROC: 0.991887


Results scoring model
   AUC ROC   = 0.973958
   AUC PR    = 0.543925
   CLL	      = -0.181158
   Precision = 0.375542 at threshold = 0.5
   Recall    = 0.878296
   F1        = 0.526124


Total scoring time: 335.47 seconds
Refined model CLL: -0.181158


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991887
   AUC PR    = 0.793078
   CLL	      = -0.164052
   Precision = 0.671543 at threshold = 0.5
   Recall    = 0.918182
   F1        = 0.77573


Total learning time: 1093.5810000000001 seconds
Total inference time: 65.107 seconds
AUC ROC: 0.991887
Total revision time: 1093.5810000000001
Best scored revision CLL: -0.181158


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 10:23:26
{'AUC PR': 0.793078, 'AUC ROC': 0.991887, 'Precision': [0.671543, 0.5], 'Inference time': 65.107, 'CLL': -0.164052, 'Recall': 0.918182, 'F1': 0.77573, 'Learning time': 1093.5810000000001, 'parameter_0.2': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 4.234, 'CLL': -0.333121, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 4.322}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20359000255688325;  // std dev = 0,476, 1.349,000 (wgt'ed) examples reached here.  /* #neg=883 #pos=466 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.058148935099512175;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.03148226843284571;  // std dev = 3,278, 75,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | | else return -0.04661296966239256;  // std dev = 0,294, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0010059944779524568;  // std dev = 2,931, 71,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=10 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.8315160345278313;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.18865889167068817;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.010589228630063566;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | else return 0.1906320566272914;  // std dev = 0,480, 1.267,000 (wgt'ed) examples reached here.  /* #neg=812 #pos=455 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, G) )
%   | | | then return 0.25092203251355427;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.07093990631723317;  // std dev = 3,191, 60,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | else return -0.025159952733139326;  // std dev = 0,314, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.014527991309842985;  // std dev = 0,332, 79,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=10 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1574060978361194;  // std dev = 0,478, 1.316,000 (wgt'ed) examples reached here.  /* #neg=850 #pos=466 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.7023609772822859;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.15556567569377294;  // std dev = 0,029, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.15478187986057115;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.026226290030719124;  // std dev = 2,016, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 6.543773247527675E-4;  // std dev = 2,781, 64,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=9 */
%   | | | else return 0.06325161159808086;  // std dev = 0,891, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1380630196483523;  // std dev = 0,480, 1.291,000 (wgt'ed) examples reached here.  /* #neg=825 #pos=466 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6671730226773765;  // std dev = 1,550, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return -0.14005034901103228;  // std dev = 0,057, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.0032420651786229998;  // std dev = 1,775, 31,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.1855737782048222;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.004324638923866127;  // std dev = 2,108, 42,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return 0.18965422971871146;  // std dev = 0,799, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09911062666950739;  // std dev = 0,476, 1.343,000 (wgt'ed) examples reached here.  /* #neg=877 #pos=466 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return -0.021374905164357322;  // std dev = 1,976, 45,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | | else return 0.13743996210284176;  // std dev = 2,161, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else return -0.0026729654401722387;  // std dev = 0,301, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return -0.01979941708473142;  // std dev = 0,292, 83,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0855224739221812;  // std dev = 0,477, 1.324,000 (wgt'ed) examples reached here.  /* #neg=858 #pos=466 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.057827747115685814;  // std dev = 1,007, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.011342109211887028;  // std dev = 2,112, 42,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.010158846444379763;  // std dev = 2,088, 44,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | | else return 0.0047418650962547885;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.12188181193643925;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.004682747079266065;  // std dev = 2,636, 74,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=10 */
%   | | | else return -0.09103952750829936;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.68885282041552;  // std dev = 0,164, 436,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=424 */
%   | | else return -0.2509239964705704;  // std dev = 0,144, 908,000 (wgt'ed) examples reached here.  /* #neg=890 #pos=18 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.11974021427259779;  // std dev = 2,585, 49,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   | | | else return 0.13069695466598963;  // std dev = 1,024, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.5161971604632439;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.03007585121226019;  // std dev = 1,940, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.4939749382410217;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.7161971604632439;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0041254839487495296;  // std dev = 0,331, 46,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.5254556634404057;  // std dev = 0,181, 439,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=424 */
%   | | else return -0.20291704016499015;  // std dev = 0,142, 918,000 (wgt'ed) examples reached here.  /* #neg=900 #pos=18 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.13253771016506846;  // std dev = 2,641, 63,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=8 */
%   | | | else return 0.04716256682207979;  // std dev = 1,029, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.26762950794267637;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.054342005712683134;  // std dev = 1,908, 26,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.3840575046272071;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.5521789733444061;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.008842121644169075;  // std dev = 0,309, 53,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.3959167888887716;  // std dev = 0,183, 440,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=425 */
%   | | else return -0.16562905644132248;  // std dev = 0,164, 837,000 (wgt'ed) examples reached here.  /* #neg=814 #pos=23 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then return 0.01351395788205475;  // std dev = 0,394, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.24128527411932305;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.04585305384469929;  // std dev = 1,901, 26,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.3487297895654891;  // std dev = 0,309, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -8.882415887929784E-4;  // std dev = 2,071, 43,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | | else return 0.1467184974050226;  // std dev = 0,792, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08341979125383102;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.29171035315386545;  // std dev = 0,206, 444,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=424 */
%   | | else return -0.1461677569004148;  // std dev = 0,145, 854,000 (wgt'ed) examples reached here.  /* #neg=836 #pos=18 */
%   | else if ( haswordtitle(D, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.14969106070031318;  // std dev = 2,509, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.10688788514299624;  // std dev = 2,409, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return -0.02483859222528151;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06526209406740092;  // std dev = 1,654, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then return 0.31700344596084556;  // std dev = 0,234, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.002023794952349145;  // std dev = 0,322, 48,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | else return -0.07725909908677389;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.991796
   AUC PR    = 0.709503
   CLL	      = -0.166158
   Precision = 0.666667 at threshold = 0.5
   Recall    = 0.934545
   F1        = 0.778198


Total learning time: 1094.342 seconds
Total inference time: 77.97800000000001 seconds
AUC ROC: 0.991796


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 10:42:58
{'AUC PR': 0.709503, 'AUC ROC': 0.991796, 'Precision': [0.666667, 0.5], 'Inference time': 77.97800000000001, 'CLL': -0.166158, 'Recall': 0.934545, 'Learning time': 1094.342, 'F1': 0.778198}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21910943083924406;  // std dev = 0,480, 1.291,000 (wgt'ed) examples reached here.  /* #neg=825 #pos=466 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return -0.0023161811795574592;  // std dev = 2,272, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.1308762078267851;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else return -0.030739953789376686;  // std dev = 0,314, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else return -0.011980935030357808;  // std dev = 0,336, 77,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=10 */


Results
   AUC ROC   = 0.572826
   AUC PR    = 0.017951
   CLL	      = -0.205179
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 65.005 seconds
Total inference time: 4.269 seconds
AUC ROC: 0.572826


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 10:44:08
{'AUC PR': 0.017951, 'AUC ROC': 0.572826, 'Precision': [nan, 0.5], 'Inference time': 4.269, 'CLL': -0.205179, 'Recall': 0.0, 'Learning time': 65.005, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1,08e-06, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.14886322081379294;  // std dev = 24,028, 2.800,000 (wgt'ed) examples reached here.  /* #neg=1.986 #pos=814 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.12944776968813498;  // std dev = 24,034, 2.803,000 (wgt'ed) examples reached here.  /* #neg=1.989 #pos=814 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,72e-07, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.1172182338015319;  // std dev = 23,931, 2.746,000 (wgt'ed) examples reached here.  /* #neg=1.932 #pos=814 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 4,04e-07, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.093295514292684;  // std dev = 24,034, 2.803,000 (wgt'ed) examples reached here.  /* #neg=1.989 #pos=814 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3,86e-07, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.07800932522386902;  // std dev = 24,035, 2.804,000 (wgt'ed) examples reached here.  /* #neg=1.990 #pos=814 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694908;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.06633777345951025;  // std dev = 24,007, 2.788,000 (wgt'ed) examples reached here.  /* #neg=1.974 #pos=814 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325351;  // std dev = 2,78e-07, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.05474637430524656;  // std dev = 24,004, 2.786,000 (wgt'ed) examples reached here.  /* #neg=1.972 #pos=814 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.05057633633751077;  // std dev = 23,904, 2.731,000 (wgt'ed) examples reached here.  /* #neg=1.917 #pos=814 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.027295283866031746;  // std dev = 24,136, 2.863,000 (wgt'ed) examples reached here.  /* #neg=2.049 #pos=814 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,66e-08, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.02546549190360568;  // std dev = 24,079, 2.829,000 (wgt'ed) examples reached here.  /* #neg=2.015 #pos=814 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.32358
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 7.26 seconds
Total inference time: 3.706 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.587221
   AUC PR    = 0.192365
   CLL	      = -0.320018
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174442
   F1        = 0.297064


Total scoring time: 7.201 seconds
Parameter learned model CLL: -0.320018


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.028, 1986, 814], 'true': [1.08e-06, 0, 172]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.034, 1989, 814], 'true': [0.0, 0, 172]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.931, 1932, 814], 'true': [5.72e-07, 0, 172]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.034, 1989, 814], 'true': [4.04e-07, 0, 172]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.035, 1990, 814], 'true': [3.86e-07, 0, 172]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.007, 1974, 814], 'true': [0.0, 0, 172]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.004, 1972, 814], 'true': [2.78e-07, 0, 172]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.904, 1917, 814], 'true': [0.0, 0, 172]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.136, 2049, 814], 'true': [0.0, 0, 172]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.079, 2015, 814], 'true': [9.66e-08, 0, 172]}]]
[{'': [6.774942364224211e-15, 0.2061994897959436]}, {'': [-3.0569861887353147e-15, 0.20606915606575812]}, {'': [1.900288711916547e-15, 0.20855973251695645]}, {'': [9.501443559582734e-16, 0.20606915606578668]}, {'': [8.675231076140758e-16, 0.20602573051339745]}, {'': [-2.7884671316166723e-16, 0.20672167456756052]}, {'': [4.49253037871575e-16, 0.20680883651157375]}, {'': [-3.304849933767908e-16, 0.20921996132929047]}, {'': [-2.5302757305410545e-16, 0.20348090814808478]}, {'': [5.4220194225879736e-17, 0.20494322237704451]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1,08e-06, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16571737310272786;  // std dev = 0,461, 2.484,000 (wgt'ed) examples reached here.  /* #neg=1.720 #pos=764 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.014611520133525631;  // std dev = 4,405, 147,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=23 */
%   | | | else return 0.10139217834275562;  // std dev = 2,610, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else return -0.03341732996072861;  // std dev = 0,311, 166,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.33675547141152845;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return -0.038244528588472215;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else return 0.1404439960016921;  // std dev = 0,460, 2.440,000 (wgt'ed) examples reached here.  /* #neg=1.699 #pos=741 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03193347863193852;  // std dev = 4,355, 131,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=23 */
%   | | | else return 0.13567540158965863;  // std dev = 2,527, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else return -0.009260246425866496;  // std dev = 0,335, 140,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,72e-07, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.18029009478509322;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.031172355807792193;  // std dev = 2,436, 46,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | else return 0.13517153806954424;  // std dev = 0,466, 2.351,000 (wgt'ed) examples reached here.  /* #neg=1.602 #pos=749 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.05160907394093797;  // std dev = 3,866, 91,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=19 */
%   | | | else return -0.0024079392527413318;  // std dev = 3,335, 89,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.019851811096305;  // std dev = 3,987, 154,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=18 */
%   | | | else return -0.13673492797942188;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 4,04e-07, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1517427121818228;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.015719633444359615;  // std dev = 2,375, 36,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.15448675406015214;  // std dev = 3,743, 62,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | | | else return 0.11438355968408996;  // std dev = 22,238, 2.277,000 (wgt'ed) examples reached here.  /* #neg=1.551 #pos=726 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.04163238985795199;  // std dev = 3,876, 92,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=19 */
%   | | | else return -0.0037172050145707534;  // std dev = 3,339, 90,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | else return -0.029069164241675372;  // std dev = 0,307, 171,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3,86e-07, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08779195309967196;  // std dev = 0,462, 2.455,000 (wgt'ed) examples reached here.  /* #neg=1.691 #pos=764 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03561552745010372;  // std dev = 4,030, 107,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
%   | | | else return 0.012796003094202209;  // std dev = 3,108, 64,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=12 */
%   | | else return -0.006660648166921799;  // std dev = 0,330, 145,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694908;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07300387185051661;  // std dev = 0,463, 2.448,000 (wgt'ed) examples reached here.  /* #neg=1.684 #pos=764 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03845280149393179;  // std dev = 4,010, 103,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=20 */
%   | | | else return -5.988155285917676E-4;  // std dev = 3,131, 68,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.007017954234955326;  // std dev = 3,973, 146,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=18 */
%   | | | else return -0.11762222065688711;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325351;  // std dev = 2,78e-07, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05225506230431279;  // std dev = 0,460, 2.503,000 (wgt'ed) examples reached here.  /* #neg=1.739 #pos=764 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.03541951204176089;  // std dev = 3,862, 90,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | | | else return -0.008707000527904183;  // std dev = 3,978, 149,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=18 */
%   | | else return -0.016590146213773572;  // std dev = 0,345, 94,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6980060661788059;  // std dev = 5,547, 747,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=715 */
%   | | | else return -0.23095023033049625;  // std dev = 5,837, 1.726,000 (wgt'ed) examples reached here.  /* #neg=1.693 #pos=33 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.11604232614689544;  // std dev = 3,323, 101,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=13 */
%   | | | else return 0.10541584438687568;  // std dev = 4,018, 82,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5678053615944287;  // std dev = 0,372, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.15221656064735783;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.059446463282070004;  // std dev = 3,194, 62,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.01543681594825164;  // std dev = 18,185, 2.373,000 (wgt'ed) examples reached here.  /* #neg=1.674 #pos=699 */
%   | | | else return -0.037626778055537304;  // std dev = 4,543, 131,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=28 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return 0.0612711590436636;  // std dev = 4,811, 203,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=46 */
%   | | | else return 0.02919229432493912;  // std dev = 3,097, 61,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.4928083056263162;  // std dev = 0,321, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0020001369774976254;  // std dev = 3,297, 80,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | | | else return -0.11008156510567275;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,66e-08, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.028005757447254247;  // std dev = 0,381, 2.444,000 (wgt'ed) examples reached here.  /* #neg=1.680 #pos=764 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.05154531238142059;  // std dev = 0,266, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.01295849784845913;  // std dev = 4,882, 252,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=35 */
%   | | | else return 0.005642239272761456;  // std dev = 3,287, 79,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */


Results
   AUC ROC   = 0.951914
   AUC PR    = 0.683787
   CLL	      = -0.242724
   Precision = 0.803738 at threshold = 0.5
   Recall    = 0.156364
   F1        = 0.261796


Total learning time: 529.902 seconds
Total inference time: 28.472 seconds
AUC ROC: 0.951914


Results scoring model
   AUC ROC   = 0.956564
   AUC PR    = 0.511168
   CLL	      = -0.255743
   Precision = 0.609121 at threshold = 0.5
   Recall    = 0.189655
   F1        = 0.28925


Total scoring time: 247.535 seconds
Refined model CLL: -0.255743


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.951914
   AUC PR    = 0.683787
   CLL	      = -0.242724
   Precision = 0.803738 at threshold = 0.5
   Recall    = 0.156364
   F1        = 0.261796


Total learning time: 791.898 seconds
Total inference time: 28.472 seconds
AUC ROC: 0.951914
Total revision time: 791.898
Best scored revision CLL: -0.255743


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 10:57:53
{'AUC PR': 0.683787, 'AUC ROC': 0.951914, 'Precision': [0.803738, 0.5], 'parameter_0.4': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.706, 'CLL': -0.32358, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 7.26}, 'Inference time': 28.472, 'CLL': -0.242724, 'Recall': 0.156364, 'F1': 0.261796, 'Learning time': 791.898}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20976426192144562;  // std dev = 0,477, 2.662,000 (wgt'ed) examples reached here.  /* #neg=1.726 #pos=936 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.001006077956655051;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.009228071790159656;  // std dev = 4,222, 139,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | else return 0.13939893509951237;  // std dev = 0,450, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else return -0.03209496733951204;  // std dev = 0,313, 164,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19037255695387525;  // std dev = 0,480, 2.602,000 (wgt'ed) examples reached here.  /* #neg=1.666 #pos=936 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return -0.035817313710836844;  // std dev = 3,273, 112,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=12 */
%   | | | else return 0.06867626002115225;  // std dev = 2,945, 52,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | else return 0.06531867236760035;  // std dev = 0,418, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.022046863060667166;  // std dev = 3,761, 138,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=16 */
%   | | | else return 0.1120111079538253;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.13798889204617465;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1587336051431814;  // std dev = 0,479, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.689 #pos=936 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.03244221517546782;  // std dev = 1,277, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.002340270482937826;  // std dev = 4,230, 145,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=21 */
%   | | else return 0.08135800126959922;  // std dev = 0,433, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.021912154380116785;  // std dev = 3,766, 141,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=16 */
%   | | | else return 0.1338539233605948;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.12237987978446983;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(E, C) )
%   | | | then return 0.5757605721146241;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.31861771497176694;  // std dev = 2,947, 35,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.775760572114624;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10302730667325471;  // std dev = 1,875, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | else return 0.14196914123348175;  // std dev = 0,482, 2.474,000 (wgt'ed) examples reached here.  /* #neg=1.568 #pos=906 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then return -0.05770416653634233;  // std dev = 0,286, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.03814930712360227;  // std dev = 3,688, 86,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=17 */
%   | | | else return -0.010307424535950243;  // std dev = 3,346, 97,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
%   | | else return -0.011791193234162407;  // std dev = 0,326, 148,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then return 0.460465427407904;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.6142870776726219;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.10421615823497397;  // std dev = 0,478, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.696 #pos=929 */
%   else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | then if ( haswordtitle(G, H), haswordvenue(A, H) )
%   | | then if ( haswordtitle(G, I), haswordauthor(J, I) )
%   | | | then return 0.0186395810806938;  // std dev = 1,577, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.07906445441541138;  // std dev = 3,475, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else if ( title(K, G), venue(K, A) )
%   | | | then return 0.04034711482597722;  // std dev = 3,119, 66,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return -0.06451450883320123;  // std dev = 0,959, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.01769889018817873;  // std dev = 0,319, 156,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08020965944544384;  // std dev = 0,476, 2.670,000 (wgt'ed) examples reached here.  /* #neg=1.734 #pos=936 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.015918706433014438;  // std dev = 1,577, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.05696814566228321;  // std dev = 3,501, 68,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | else if ( title(I, E), venue(I, A) )
%   | | | then return -0.002504797309361708;  // std dev = 3,192, 83,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=12 */
%   | | | else return 0.05207797278347863;  // std dev = 0,901, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.026338793977818117;  // std dev = 0,305, 172,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=18 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordtitle(D, E), haswordvenue(B, E) )
%   | then if ( title(F, D), venue(F, B) )
%   | | then return 0.06056341327817698;  // std dev = 0,475, 2.439,000 (wgt'ed) examples reached here.  /* #neg=1.592 #pos=847 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.1636343937769168;  // std dev = 3,107, 91,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=11 */
%   | | | else return 0.16284675602324775;  // std dev = 5,547, 142,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=55 */
%   | else if ( title(H, D), venue(H, A) )
%   | | then if ( samebib(H, I), venue(I, B) )
%   | | | then return 0.6845832834551608;  // std dev = 1,870, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return -0.1250529708566855;  // std dev = 0,899, 136,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=1 */
%   | | else return -0.05910827318363173;  // std dev = 0,330, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then return 0.712632646501619;  // std dev = 0,037, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.015204368355693193;  // std dev = 0,368, 80,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | | else return -0.10449087946327644;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.14266939782922738;  // std dev = 3,321, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return -0.12348229658843723;  // std dev = 1,413, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else return 0.5001041161095235;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.046110765242077405;  // std dev = 0,472, 2.619,000 (wgt'ed) examples reached here.  /* #neg=1.713 #pos=906 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return -0.08977815264868447;  // std dev = 0,265, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return -0.015609351232714078;  // std dev = 0,334, 249,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=36 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.00135754001742904;  // std dev = 3,182, 80,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | | else return 0.18239942602660483;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09510963653676931;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.4673818353154153;  // std dev = 0,030, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.14054758813891327;  // std dev = 3,014, 37,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return -0.09797145141431204;  // std dev = 1,707, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | else return 0.049524499751959265;  // std dev = 0,476, 2.523,000 (wgt'ed) examples reached here.  /* #neg=1.617 #pos=906 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then return -0.05620144506719171;  // std dev = 0,315, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.015300940036315337;  // std dev = 3,953, 108,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=19 */
%   | | | else return -0.0271874902544869;  // std dev = 3,104, 67,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.013829006194739974;  // std dev = 3,548, 126,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
%   | | | else return -0.08723338323893395;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.6412423161667713;  // std dev = 0,191, 896,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=863 */
%   | | else return -0.27851215620732644;  // std dev = 0,152, 1.763,000 (wgt'ed) examples reached here.  /* #neg=1.727 #pos=36 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then return -0.16639321452511052;  // std dev = 0,365, 60,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.5043100942511859;  // std dev = 1,853, 28,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return 0.07448182804498307;  // std dev = 2,955, 49,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6862575759265909;  // std dev = 0,783, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.15640411363755236;  // std dev = 0,323, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0.08093342309997545;  // std dev = 0,377, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0.27193952552171125;  // std dev = 0,327, 23,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */


Results
   AUC ROC   = 0.971356
   AUC PR    = 0.70681
   CLL	      = -0.273693
   Precision = 0.957447 at threshold = 0.5
   Recall    = 0.081818
   F1        = 0.150754


Total learning time: 2291.351 seconds
Total inference time: 42.084 seconds
AUC ROC: 0.971356


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 11:36:47
{'AUC PR': 0.70681, 'AUC ROC': 0.971356, 'Precision': [0.957447, 0.5], 'Inference time': 42.084, 'CLL': -0.273693, 'Recall': 0.081818, 'Learning time': 2291.351, 'F1': 0.150754}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21175679305190617;  // std dev = 0,478, 2.647,000 (wgt'ed) examples reached here.  /* #neg=1.711 #pos=936 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.0803711573217344;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.016043671941617436;  // std dev = 4,205, 133,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=21 */
%   | | else return 0.10139217834275562;  // std dev = 0,429, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.030739953789376544;  // std dev = 3,771, 144,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=16 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.570797
   AUC PR    = 0.017911
   CLL	      = -0.203212
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 84.451 seconds
Total inference time: 4.476 seconds
AUC ROC: 0.570797


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 11:38:17
{'AUC PR': 0.017911, 'AUC ROC': 0.570797, 'Precision': [nan, 0.5], 'Inference time': 4.476, 'CLL': -0.203212, 'Recall': 0.0, 'Learning time': 84.451, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,07e-06, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.15011279625024423;  // std dev = 29,487, 4.206,000 (wgt'ed) examples reached here.  /* #neg=2.978 #pos=1.228 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.13890023706231666;  // std dev = 29,318, 4.093,000 (wgt'ed) examples reached here.  /* #neg=2.865 #pos=1.228 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,46e-07, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.10512128251803048;  // std dev = 29,612, 4.295,000 (wgt'ed) examples reached here.  /* #neg=3.067 #pos=1.228 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.10167855840890873;  // std dev = 29,349, 4.113,000 (wgt'ed) examples reached here.  /* #neg=2.885 #pos=1.228 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 1,88e-07, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.08244244050270613;  // std dev = 29,405, 4.150,000 (wgt'ed) examples reached here.  /* #neg=2.922 #pos=1.228 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,15e-07, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.06884556866465678;  // std dev = 29,393, 4.142,000 (wgt'ed) examples reached here.  /* #neg=2.914 #pos=1.228 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,89e-07, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.05551647360095196;  // std dev = 29,414, 4.156,000 (wgt'ed) examples reached here.  /* #neg=2.928 #pos=1.228 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.046890106109885255;  // std dev = 29,379, 4.133,000 (wgt'ed) examples reached here.  /* #neg=2.905 #pos=1.228 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.036844402284701726;  // std dev = 29,403, 4.149,000 (wgt'ed) examples reached here.  /* #neg=2.921 #pos=1.228 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080111;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.026393163742713728;  // std dev = 29,472, 4.196,000 (wgt'ed) examples reached here.  /* #neg=2.968 #pos=1.228 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.329076
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 9.487 seconds
Total inference time: 3.77 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.585135
   AUC PR    = 0.188101
   CLL	      = -0.325654
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.17027
   F1        = 0.290993


Total scoring time: 9.009 seconds
Parameter learned model CLL: -0.325654


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.487, 2978, 1228], 'true': [1.07e-06, 0, 252]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.318, 2865, 1228], 'true': [0.0, 0, 252]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.612, 3067, 1228], 'true': [4.46e-07, 0, 252]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.349, 2885, 1228], 'true': [0.0, 0, 252]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.405, 2922, 1228], 'true': [1.88e-07, 0, 252]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.393, 2914, 1228], 'true': [3.15e-07, 0, 252]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.414, 2928, 1228], 'true': [2.89e-07, 0, 252]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.379, 2905, 1228], 'true': [0.0, 0, 252]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.403, 2921, 1228], 'true': [0.0, 0, 252]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.472, 2968, 1228], 'true': [0.0, 0, 252]}]]
[{'': [4.511382449270477e-15, 0.20672096493271638]}, {'': [-4.3985978880387156e-15, 0.21000977218583722]}, {'': [7.894919286223335e-16, 0.20416712179875546]}, {'': [-3.101575433873453e-16, 0.2094241518578313]}, {'': [1.409807015397024e-16, 0.2083446654086362]}, {'': [3.9474596431116675e-16, 0.20857762842558167]}, {'': [3.313046486183007e-16, 0.20817010507439077]}, {'': [-2.114710523095536e-17, 0.2088400040534526]}, {'': [-1.6212780677065777e-16, 0.20837377232900675]}, {'': [-7.04903507698512e-18, 0.20700998999454184]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,07e-06, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17625570449961728;  // std dev = 0,466, 3.634,000 (wgt'ed) examples reached here.  /* #neg=2.478 #pos=1.156 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.01991364098186446;  // std dev = 5,259, 204,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=33 */
%   | | | else return 0.0969549052487661;  // std dev = 3,490, 67,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | | else return -0.039172493471916446;  // std dev = 0,304, 224,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=23 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3737724052637289;  // std dev = 2,542, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return -0.005958974467651274;  // std dev = 2,900, 63,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=10 */
%   | | else return 0.14587328106828562;  // std dev = 0,463, 3.645,000 (wgt'ed) examples reached here.  /* #neg=2.513 #pos=1.132 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.08113731190368102;  // std dev = 4,882, 135,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=31 */
%   | | | else return -0.0026371598503317213;  // std dev = 3,931, 127,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=18 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03537927820528297;  // std dev = 4,545, 226,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=23 */
%   | | | else return -0.13714918970970788;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,46e-07, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3606283285354988;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.0322074170549225;  // std dev = 2,835, 51,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | else return 0.13213902827322818;  // std dev = 0,466, 3.561,000 (wgt'ed) examples reached here.  /* #neg=2.429 #pos=1.132 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.005914703604111696;  // std dev = 5,280, 214,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=33 */
%   | | | else return 0.13694486080910023;  // std dev = 3,342, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.027511335434169202;  // std dev = 4,536, 218,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=23 */
%   | | | else return -0.1217114950817979;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10519327869470949;  // std dev = 0,463, 3.705,000 (wgt'ed) examples reached here.  /* #neg=2.549 #pos=1.156 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.04626710975340047;  // std dev = 4,926, 144,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=31 */
%   | | | else return 0.007375272939696882;  // std dev = 3,908, 118,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.023393668022755245;  // std dev = 4,533, 216,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=23 */
%   | | | else return -0.1092881328794988;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 1,88e-07, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.18616212845386587;  // std dev = 3,837, 61,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | | | else return -0.08545334093080904;  // std dev = 2,075, 36,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else return 0.08909336712904782;  // std dev = 0,464, 3.589,000 (wgt'ed) examples reached here.  /* #neg=2.463 #pos=1.126 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.04400250834409066;  // std dev = 4,908, 142,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=31 */
%   | | | else return -4.029701752613068E-4;  // std dev = 3,926, 123,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=18 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.017730490173620217;  // std dev = 4,526, 210,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=23 */
%   | | | else return -0.09909495683798585;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948795;  // std dev = 3,15e-07, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06883385182014676;  // std dev = 0,462, 3.740,000 (wgt'ed) examples reached here.  /* #neg=2.584 #pos=1.156 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.00398142820816254;  // std dev = 5,266, 208,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=33 */
%   | | | else return 0.05611079597234756;  // std dev = 3,451, 63,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | else return -0.01817395002092817;  // std dev = 0,308, 216,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=23 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2,89e-07, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.03405259244329588;  // std dev = 3,069, 53,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.039991776476127415;  // std dev = 2,730, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.11026947565835779;  // std dev = 4,298, 83,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   | | | else return 0.057497867911852595;  // std dev = 27,565, 3.549,000 (wgt'ed) examples reached here.  /* #neg=2.447 #pos=1.102 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.016236582375257262;  // std dev = 4,982, 176,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=30 */
%   | | | else return -0.013730136430652183;  // std dev = 3,913, 108,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=19 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.019716204731677036;  // std dev = 4,541, 222,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=23 */
%   | | | else return -0.0891067828144849;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04846190285315707;  // std dev = 0,463, 3.695,000 (wgt'ed) examples reached here.  /* #neg=2.539 #pos=1.156 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.15619220476423817;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.060609512680273245;  // std dev = 1,334, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.025459602814097863;  // std dev = 6,133, 240,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=47 */
%   | | | else return -0.009312257210694374;  // std dev = 4,517, 208,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=23 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.047234102930809825;  // std dev = 0,466, 3.604,000 (wgt'ed) examples reached here.  /* #neg=2.448 #pos=1.156 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.05585463052029153;  // std dev = 1,339, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return -0.14022794948301573;  // std dev = 0,014, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0036427695592127544;  // std dev = 6,202, 265,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=47 */
%   | | | else return -0.008520043379109738;  // std dev = 4,518, 208,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080111;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.673789918825814;  // std dev = 7,082, 1.121,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=1.068 */
%   | | | else return -0.24571705357471615;  // std dev = 7,801, 2.500,000 (wgt'ed) examples reached here.  /* #neg=2.441 #pos=59 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.15024795121630366;  // std dev = 4,058, 158,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=19 */
%   | | | else return 0.1536008196840483;  // std dev = 4,942, 114,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=42 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.5557023922834388;  // std dev = 1,831, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return -0.03304288277002232;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1268916307607564;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.0165338109921542;  // std dev = 3,867, 109,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */


Results
   AUC ROC   = 0.918541
   AUC PR    = 0.725797
   CLL	      = -0.246918
   Precision = 0.960396 at threshold = 0.5
   Recall    = 0.176364
   F1        = 0.298003


Total learning time: 677.608 seconds
Total inference time: 25.1 seconds
AUC ROC: 0.918541


Results scoring model
   AUC ROC   = 0.943863
   AUC PR    = 0.541375
   CLL	      = -0.263579
   Precision = 0.970803 at threshold = 0.5
   Recall    = 0.17973
   F1        = 0.303307


Total scoring time: 289.636 seconds
Refined model CLL: -0.263579


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.918541
   AUC PR    = 0.725797
   CLL	      = -0.246918
   Precision = 0.960396 at threshold = 0.5
   Recall    = 0.176364
   F1        = 0.298003


Total learning time: 985.74 seconds
Total inference time: 25.1 seconds
AUC ROC: 0.918541
Total revision time: 985.74
Best scored revision CLL: -0.263579


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 11:55:13
{'AUC PR': 0.725797, 'AUC ROC': 0.918541, 'Precision': [0.960396, 0.5], 'Inference time': 25.1, 'parameter_0.6': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.77, 'CLL': -0.329076, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 9.487}, 'CLL': -0.246918, 'Recall': 0.176364, 'F1': 0.298003, 'Learning time': 985.74}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20909609362393392;  // std dev = 0,477, 4.012,000 (wgt'ed) examples reached here.  /* #neg=2.604 #pos=1.408 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.06185106490048781;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.01631220040563406;  // std dev = 5,109, 196,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=31 */
%   | | else return 0.10430278125335853;  // std dev = 0,431, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.025099795864954918;  // std dev = 4,507, 197,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1940980770660166;  // std dev = 0,481, 3.875,000 (wgt'ed) examples reached here.  /* #neg=2.467 #pos=1.408 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.01684038230224274;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.005910091492530956;  // std dev = 5,134, 207,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=31 */
%   | | else return 0.08377790121994165;  // std dev = 0,426, 67,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.03537478653782115;  // std dev = 4,339, 203,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=21 */
%   | | | else return 0.0069008855725737695;  // std dev = 1,305, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8016765326278288;  // std dev = 4,21e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.28244576339706023;  // std dev = 3,603, 52,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | | | else return -0.019752038800742465;  // std dev = 2,027, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | else return 0.15377110985737488;  // std dev = 0,478, 3.891,000 (wgt'ed) examples reached here.  /* #neg=2.521 #pos=1.370 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | then if ( haswordtitle(I, K), haswordauthor(L, K) )
%   | | | then return -0.005225170671439244;  // std dev = 1,862, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.059767160513311865;  // std dev = 4,595, 125,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=27 */
%   | | else if ( title(M, I), venue(M, A) )
%   | | | then return -0.009466036699613664;  // std dev = 3,834, 126,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=17 */
%   | | | else return -0.03588270941548027;  // std dev = 0,946, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else return -0.03456228116339643;  // std dev = 0,299, 231,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=23 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12914152694575726;  // std dev = 0,477, 3.985,000 (wgt'ed) examples reached here.  /* #neg=2.577 #pos=1.408 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.0720570403254361;  // std dev = 0,420, 134,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=31 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return 0.0020255433079191163;  // std dev = 3,811, 117,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=17 */
%   | | | else return -0.09619823659695222;  // std dev = 0,982, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.03521668995075342;  // std dev = 4,358, 220,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=21 */
%   | | | else return 0.08812961314042668;  // std dev = 1,245, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return -0.10891636604670117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1057324862176098;  // std dev = 0,477, 3.987,000 (wgt'ed) examples reached here.  /* #neg=2.579 #pos=1.408 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return -0.038875933117904826;  // std dev = 3,870, 153,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=17 */
%   | | | else return 0.05455513178143787;  // std dev = 3,582, 80,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | | else return 0.11785515515538061;  // std dev = 0,458, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | else return -0.02306607840265543;  // std dev = 0,304, 222,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=23 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09068203261907423;  // std dev = 0,479, 3.929,000 (wgt'ed) examples reached here.  /* #neg=2.521 #pos=1.408 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.011526587583027464;  // std dev = 1,313, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.06618619744969735;  // std dev = 4,660, 118,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=29 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.01100599615128978;  // std dev = 3,778, 111,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=17 */
%   | | | else return -0.06818209505369874;  // std dev = 0,969, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.013790481201220447;  // std dev = 4,324, 189,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=21 */
%   | | | else return 0.002587542344439268;  // std dev = 1,298, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return -0.096752500159922;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5669881356853593;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.18119475632629545;  // std dev = 2,733, 30,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return -0.08547191034037102;  // std dev = 2,828, 50,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | else return 0.07919145155893192;  // std dev = 0,481, 3.774,000 (wgt'ed) examples reached here.  /* #neg=2.398 #pos=1.376 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, G) )
%   | | | then return -0.0386485787820483;  // std dev = 1,335, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.00393733040482343;  // std dev = 5,104, 198,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=31 */
%   | | else return 0.062060128416194134;  // std dev = 0,446, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.02278525394446391;  // std dev = 0,301, 228,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=23 */
%   | | else return -0.08862076238654659;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05866499822658543;  // std dev = 0,479, 3.903,000 (wgt'ed) examples reached here.  /* #neg=2.495 #pos=1.408 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return -0.0051794152878737705;  // std dev = 0,345, 274,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=39 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.06285751221387324;  // std dev = 1,775, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.022405826779187593;  // std dev = 2,981, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.012113228166695777;  // std dev = 3,826, 129,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=17 */
%   | | | else return 0.03557180237694265;  // std dev = 0,917, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.0817192415905713;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6515338941227671;  // std dev = 0,189, 1.338,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1.287 */
%   | | else return -0.2771694023811486;  // std dev = 0,154, 2.649,000 (wgt'ed) examples reached here.  /* #neg=2.590 #pos=59 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.15983767808105526;  // std dev = 0,335, 143,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=19 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3842340621037217;  // std dev = 3,342, 54,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | | | else return 0.08198000542379637;  // std dev = 3,631, 72,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.6700715757680799;  // std dev = 1,885, 41,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.1452182105328103;  // std dev = 0,248, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return 0.08732009596702762;  // std dev = 0,394, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.4714314212937589;  // std dev = 0,355, 26,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.4930846597971156;  // std dev = 6,749, 1.268,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1.221 */
%   | | | else return -0.2334886885620721;  // std dev = 7,676, 2.422,000 (wgt'ed) examples reached here.  /* #neg=2.361 #pos=61 */
%   | | else return 0.03341499499229632;  // std dev = 0,320, 332,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=67 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.06830893544735843;  // std dev = 3,438, 78,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=15 */
%   | | | else return -0.06458328968237066;  // std dev = 0,815, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.33729198409965716;  // std dev = 3,102, 51,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=38 */
%   | | | else return 0.03063662845206206;  // std dev = 3,733, 84,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.4400961499740548;  // std dev = 0,295, 46,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | else return -0.002711711485194874;  // std dev = 0,309, 127,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=18 */


Results
   AUC ROC   = 0.958613
   AUC PR    = 0.697457
   CLL	      = -0.22579
   Precision = 0.703976 at threshold = 0.5
   Recall    = 0.869091
   F1        = 0.777868


Total learning time: 2428.5 seconds
Total inference time: 53.021 seconds
AUC ROC: 0.958613


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 12:36:35
{'AUC PR': 0.697457, 'AUC ROC': 0.958613, 'Precision': [0.703976, 0.5], 'Inference time': 53.021, 'CLL': -0.22579, 'Recall': 0.869091, 'Learning time': 2428.5, 'F1': 0.777868}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2131665851247215;  // std dev = 0,479, 3.966,000 (wgt'ed) examples reached here.  /* #neg=2.558 #pos=1.408 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.0010060779566551223;  // std dev = 1,852, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.0970869881968566;  // std dev = 4,533, 113,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=27 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return -0.01208007253407544;  // std dev = 3,846, 131,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=17 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.02253288308230599;  // std dev = 4,301, 176,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=21 */
%   | | | else return -0.04661296966239256;  // std dev = 1,345, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.572163
   AUC PR    = 0.017933
   CLL	      = -0.202138
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 38.657 seconds
Total inference time: 5.033 seconds
AUC ROC: 0.572163


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 12:37:19
{'AUC PR': 0.017933, 'AUC ROC': 0.572163, 'Precision': [nan, 0.5], 'Inference time': 5.033, 'CLL': -0.202138, 'Recall': 0.0, 'Learning time': 38.657, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1,04e-06, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.15102775002008542;  // std dev = 34,064, 5.603,000 (wgt'ed) examples reached here.  /* #neg=3.962 #pos=1.641 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.13421482825326184;  // std dev = 34,002, 5.554,000 (wgt'ed) examples reached here.  /* #neg=3.913 #pos=1.641 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.11683252909284625;  // std dev = 33,963, 5.524,000 (wgt'ed) examples reached here.  /* #neg=3.883 #pos=1.641 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.10027228802544276;  // std dev = 33,931, 5.499,000 (wgt'ed) examples reached here.  /* #neg=3.858 #pos=1.641 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.0843467589964751;  // std dev = 33,919, 5.490,000 (wgt'ed) examples reached here.  /* #neg=3.849 #pos=1.641 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,91e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.0641809447293503;  // std dev = 34,054, 5.595,000 (wgt'ed) examples reached here.  /* #neg=3.954 #pos=1.641 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.05836707520935684;  // std dev = 33,916, 5.488,000 (wgt'ed) examples reached here.  /* #neg=3.847 #pos=1.641 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2,86e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.041037767243728054;  // std dev = 34,073, 5.610,000 (wgt'ed) examples reached here.  /* #neg=3.969 #pos=1.641 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.037949901998827834;  // std dev = 33,959, 5.521,000 (wgt'ed) examples reached here.  /* #neg=3.880 #pos=1.641 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.03265513933772865;  // std dev = 33,910, 5.483,000 (wgt'ed) examples reached here.  /* #neg=3.842 #pos=1.641 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.331182
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 15.615 seconds
Total inference time: 3.564 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.584136
   AUC PR    = 0.186052
   CLL	      = -0.327815
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168272
   F1        = 0.288069


Total scoring time: 10.9 seconds
Parameter learned model CLL: -0.327815


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.064, 3962, 1641], 'true': [1.04e-06, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.002, 3913, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.963, 3883, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.931, 3858, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.919, 3849, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.054, 3954, 1641], 'true': [3.91e-07, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.916, 3847, 1641], 'true': [2.49e-07, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.073, 3969, 1641], 'true': [2.86e-07, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.959, 3880, 1641], 'true': [0.0, 0, 332]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.91, 3842, 1641], 'true': [0.0, 0, 332]}]]
[{'': [3.2530872239619043e-15, 0.20710081469123712]}, {'': [-5.1364535115187965e-15, 0.20816450500267894]}, {'': [-5.136453511518796e-16, 0.2088183365222245]}, {'': [-9.844869230411027e-16, 0.20936465460613474]}, {'': [-7.062623578338345e-16, 0.2095616471080436]}, {'': [4.601406270735589e-16, 0.20727411251427533]}, {'': [1.872665342741228e-16, 0.20960544580699214]}, {'': [2.4612173076027567e-16, 0.20694929794958594]}, {'': [-2.3274554974069545e-16, 0.208883825407072]}, {'': [-2.1936936872111526e-16, 0.20971497829132352]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1,04e-06, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4036034805540578;  // std dev = 2,860, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return 0.048022352821031365;  // std dev = 3,486, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else return 0.17108962361049845;  // std dev = 0,464, 4.822,000 (wgt'ed) examples reached here.  /* #neg=3.313 #pos=1.509 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.06449814144871763;  // std dev = 5,563, 189,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=39 */
%   | | | else return 0.013589349607283684;  // std dev = 5,034, 193,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=30 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03911133887309085;  // std dev = 5,188, 292,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=30 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14721932643281171;  // std dev = 0,463, 4.955,000 (wgt'ed) examples reached here.  /* #neg=3.413 #pos=1.542 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.023874196811218502;  // std dev = 6,506, 300,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=51 */
%   | | | else return 0.06462809589441201;  // std dev = 3,760, 84,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.03189326896733372;  // std dev = 5,181, 285,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=30 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22962371103065818;  // std dev = 4,118, 70,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=29 */
%   | | | else return -0.08426880554575239;  // std dev = 2,510, 69,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
%   | | else return 0.12536973370636695;  // std dev = 0,463, 4.848,000 (wgt'ed) examples reached here.  /* #neg=3.342 #pos=1.506 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0501858021947479;  // std dev = 6,133, 236,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=47 */
%   | | | else return 0.010845360868099103;  // std dev = 4,278, 132,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=22 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02190136025600052;  // std dev = 5,163, 269,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=30 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10372266813660179;  // std dev = 0,462, 4.998,000 (wgt'ed) examples reached here.  /* #neg=3.456 #pos=1.542 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.06527116749081283;  // std dev = 5,497, 174,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=39 */
%   | | | else return 0.014958159226610375;  // std dev = 4,998, 179,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=30 */
%   | | else return -0.035210040773804525;  // std dev = 0,293, 315,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.14616544668867565;  // std dev = 4,215, 75,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return -0.04723219873754604;  // std dev = 2,456, 49,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
%   | | else return 0.0962374390241032;  // std dev = 0,466, 4.728,000 (wgt'ed) examples reached here.  /* #neg=3.222 #pos=1.506 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03037949487263762;  // std dev = 6,424, 269,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=51 */
%   | | | else return 0.0920729160601049;  // std dev = 3,646, 69,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.011574640730804319;  // std dev = 5,152, 260,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=30 */
%   | | | else return -0.09842733157029682;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,91e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08233413323468979;  // std dev = 0,467, 4.797,000 (wgt'ed) examples reached here.  /* #neg=3.255 #pos=1.542 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.054159155141354845;  // std dev = 6,054, 216,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=47 */
%   | | | else return -0.0064375650962640064;  // std dev = 4,267, 130,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01247429866248063;  // std dev = 5,158, 265,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=30 */
%   | | | else return -0.09003157540996974;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05568330255332133;  // std dev = 0,462, 4.975,000 (wgt'ed) examples reached here.  /* #neg=3.433 #pos=1.542 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.027035006584151165;  // std dev = 6,131, 237,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=47 */
%   | | | else return -0.0055766713441660785;  // std dev = 4,268, 130,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.012793320867150598;  // std dev = 5,163, 269,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=30 */
%   | | | else return -0.08292284353063224;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2,86e-07, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.043136525013001914;  // std dev = 0,461, 5.004,000 (wgt'ed) examples reached here.  /* #neg=3.462 #pos=1.542 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.001580894972166563;  // std dev = 6,494, 297,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=51 */
%   | | | else return 0.037178302327585636;  // std dev = 3,747, 83,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.031188330889486866;  // std dev = 5,220, 327,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=30 */
%   | | | else return -0.07683101694348142;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03298473518402704;  // std dev = 31,355, 4.636,000 (wgt'ed) examples reached here.  /* #neg=3.215 #pos=1.421 */
%   | | | else return 0.04667404145911881;  // std dev = 7,734, 420,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=83 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.14074826558453016;  // std dev = 4,749, 225,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=26 */
%   | | | else return 0.1281406634165721;  // std dev = 5,646, 153,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.5689154994792174;  // std dev = 2,052, 32,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | | else return 0.3928228618807443;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023427103540440756;  // std dev = 4,925, 156,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=30 */
%   | | | else return -0.07155565565519796;  // std dev = 4,56e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03091237294649586;  // std dev = 0,461, 4.956,000 (wgt'ed) examples reached here.  /* #neg=3.414 #pos=1.542 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.007493461575290789;  // std dev = 6,485, 292,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=51 */
%   | | | else return 0.055730905053918256;  // std dev = 3,667, 73,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | else return -0.029323912596649064;  // std dev = 0,290, 322,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=30 */


Results
   AUC ROC   = 0.658572
   AUC PR    = 0.195797
   CLL	      = -0.30635
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 911.641 seconds
Total inference time: 14.118 seconds
AUC ROC: 0.658572


Results scoring model
   AUC ROC   = 0.654212
   AUC PR    = 0.204181
   CLL	      = -0.319691
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168272
   F1        = 0.288069


Total scoring time: 165.628 seconds
Refined model CLL: -0.319691


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.658572
   AUC PR    = 0.195797
   CLL	      = -0.30635
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1103.7839999999999 seconds
Total inference time: 14.118 seconds
AUC ROC: 0.658572
Total revision time: 1103.7839999999999
Best scored revision CLL: -0.319691


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 12:56:03
{'AUC PR': 0.195797, 'AUC ROC': 0.658572, 'Precision': [1.0, 0.5], 'Inference time': 14.118, 'parameter_0.8': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.564, 'CLL': -0.331182, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 15.615}, 'CLL': -0.30635, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1103.7839999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21007381772861514;  // std dev = 0,478, 5.325,000 (wgt'ed) examples reached here.  /* #neg=3.451 #pos=1.874 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.07243464938522651;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.07633075328132927;  // std dev = 5,305, 165,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=36 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.028880642416584855;  // std dev = 4,819, 164,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=28 */
%   | | | else return 0.001006077956655051;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.03698215104281016;  // std dev = 5,006, 267,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=28 */
%   | | | else return 0.001006077956655051;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8306057171753845;  // std dev = 5,96e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.16939428282461572;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.13093274436307725;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | | else return 0.21522110179076892;  // std dev = 3,508, 52,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | else return 0.18854361992870625;  // std dev = 0,479, 5.121,000 (wgt'ed) examples reached here.  /* #neg=3.288 #pos=1.833 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, A) )
%   | | | then return -0.0072315182881472935;  // std dev = 4,989, 206,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=29 */
%   | | | else return 0.10271279018077317;  // std dev = 4,065, 88,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | | else return 0.06558188593808353;  // std dev = 0,412, 83,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | else return -0.03947386680722637;  // std dev = 0,297, 307,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=30 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16668221845596196;  // std dev = 0,480, 5.144,000 (wgt'ed) examples reached here.  /* #neg=3.270 #pos=1.874 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.768957096854673;  // std dev = 1,922, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return -0.1499973187043118;  // std dev = 0,089, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.15607619615964477;  // std dev = 0,010, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.02360471385270211;  // std dev = 4,240, 120,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.023847056886174046;  // std dev = 4,995, 257,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=28 */
%   | | | else return 0.044585576538166805;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return -0.12117767025481439;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(E, C) )
%   | | | then return 0.4482407367308043;  // std dev = 1,143, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.20747600631831503;  // std dev = 4,056, 67,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=29 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return -0.0793616137310879;  // std dev = 2,258, 41,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | | else return 0.2746401854227921;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.12979402891508385;  // std dev = 0,478, 5.151,000 (wgt'ed) examples reached here.  /* #neg=3.321 #pos=1.830 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then if ( haswordauthor(L, I) )
%   | | | then return -0.03167091622520837;  // std dev = 1,610, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.010732071500055371;  // std dev = 5,447, 282,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=48 */
%   | | else return 0.025119474250943415;  // std dev = 0,389, 95,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=18 */
%   | else return -0.02878039503623845;  // std dev = 0,302, 296,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10620614327921572;  // std dev = 0,477, 5.278,000 (wgt'ed) examples reached here.  /* #neg=3.404 #pos=1.874 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.13370237633867624;  // std dev = 0,027, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.04877712333650592;  // std dev = 1,633, 28,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.031960358651897794;  // std dev = 5,248, 241,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=47 */
%   | | | else return -0.0025537395179753316;  // std dev = 3,982, 118,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.011928504324658484;  // std dev = 4,979, 243,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=28 */
%   | | | else return -0.07606530467836527;  // std dev = 1,364, 36,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | else return -0.10609325397157975;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08914301748466054;  // std dev = 0,478, 5.228,000 (wgt'ed) examples reached here.  /* #neg=3.354 #pos=1.874 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.06856674275558174;  // std dev = 1,262, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.001245909187640744;  // std dev = 5,513, 292,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=48 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.07507074566888271;  // std dev = 3,665, 74,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | | else return -0.15613894273822546;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.020623115924393903;  // std dev = 5,005, 268,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=28 */
%   | | | else return -0.04441597074349207;  // std dev = 1,356, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.09644393981125399;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.3246451059201571;  // std dev = 2,492, 28,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return 0.05634625783834985;  // std dev = 3,157, 44,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return -0.12299565626355187;  // std dev = 2,287, 49,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | | else return -0.009932024915897012;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0.06525706533866776;  // std dev = 0,477, 5.194,000 (wgt'ed) examples reached here.  /* #neg=3.364 #pos=1.830 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then if ( haswordtitle(K, M), haswordauthor(N, M) )
%   | | | then return -0.02590556563648694;  // std dev = 2,102, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.04428032186669555;  // std dev = 4,730, 149,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=33 */
%   | | else return -0.007238784256810181;  // std dev = 0,309, 198,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=30 */
%   | else return -0.03563045317471242;  // std dev = 0,281, 346,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=30 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.04601011487537619;  // std dev = 0,474, 4.928,000 (wgt'ed) examples reached here.  /* #neg=3.220 #pos=1.708 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7470820972875657;  // std dev = 1,976, 86,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=82 */
%   | | | else return -0.13352404704118617;  // std dev = 1,053, 322,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.6993700907881473;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1831137298055591;  // std dev = 4,432, 222,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=22 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.38294116953310314;  // std dev = 3,893, 70,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=48 */
%   | | | else return 0.04996184120271118;  // std dev = 3,855, 115,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=26 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.6802256682178665;  // std dev = 0,136, 53,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | else return -0.005898597189242506;  // std dev = 0,308, 199,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=30 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03233326369397059;  // std dev = 0,473, 4.987,000 (wgt'ed) examples reached here.  /* #neg=3.279 #pos=1.708 */
%   | | else return 0.04252529624842493;  // std dev = 0,331, 376,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=83 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.12884734661817768;  // std dev = 0,316, 213,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=26 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.27772286435256494;  // std dev = 4,008, 72,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=48 */
%   | | | else return 0.04927185350012753;  // std dev = 3,834, 110,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=26 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.5035727761473251;  // std dev = 0,189, 54,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.02759536237931867;  // std dev = 4,074, 143,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=28 */
%   | | | else return -0.009503157428676388;  // std dev = 1,294, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return -0.08507185800984494;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03423390694605786;  // std dev = 0,471, 5.287,000 (wgt'ed) examples reached here.  /* #neg=3.413 #pos=1.874 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return -0.010031439655619668;  // std dev = 4,170, 184,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=29 */
%   | | | else return 0.05449684812212752;  // std dev = 3,543, 89,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   | | else return 0.040611239371760886;  // std dev = 0,357, 72,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.022339335464269392;  // std dev = 4,439, 272,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=28 */
%   | | | else return -0.03193527266506265;  // std dev = 1,338, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.07867980657358552;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.626878
   AUC PR    = 0.060856
   CLL	      = -0.34057
   Precision = 0.365079 at threshold = 0.5
   Recall    = 0.041818
   F1        = 0.075041


Total learning time: 3838.699 seconds
Total inference time: 29.086 seconds
AUC ROC: 0.626878


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 14:00:31
{'AUC PR': 0.060856, 'AUC ROC': 0.626878, 'Precision': [0.365079, 0.5], 'Inference time': 29.086, 'CLL': -0.34057, 'Recall': 0.041818, 'Learning time': 3838.699, 'F1': 0.075041}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.47883859027192616;  // std dev = 2,613, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | | else return 0.2391013160518933;  // std dev = 3,147, 42,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return -0.024204006076958298;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | | else return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.21536150585882788;  // std dev = 0,479, 5.123,000 (wgt'ed) examples reached here.  /* #neg=3.293 #pos=1.830 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( samebib(L, M), venue(M, B) )
%   | | | then return 0.7797175625504926;  // std dev = 1,920, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return -0.14185106490048832;  // std dev = 0,000, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else if ( haswordtitle(K, N), haswordauthor(P, N) )
%   | | | then return -0.043811849214213223;  // std dev = 2,124, 51,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
%   | | | else return 0.04703782398840127;  // std dev = 3,713, 90,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | else return -0.04691435603972858;  // std dev = 0,293, 316,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=30 */


Results
   AUC ROC   = 0.612678
   AUC PR    = 0.052491
   CLL	      = -0.201014
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 80.236 seconds
Total inference time: 4.996 seconds
AUC ROC: 0.612678


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 14:01:57
{'AUC PR': 0.052491, 'AUC ROC': 0.612678, 'Precision': [nan, 0.5], 'Inference time': 4.996, 'CLL': -0.201014, 'Recall': 0.0, 'Learning time': 80.236, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,72e-06, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.15501264372792165;  // std dev = 38,003, 6.919,000 (wgt'ed) examples reached here.  /* #neg=4.865 #pos=2.054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.13563495705448617;  // std dev = 37,988, 6.906,000 (wgt'ed) examples reached here.  /* #neg=4.852 #pos=2.054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.11027141031773048;  // std dev = 38,153, 7.051,000 (wgt'ed) examples reached here.  /* #neg=4.997 #pos=2.054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.09937443641620859;  // std dev = 37,990, 6.908,000 (wgt'ed) examples reached here.  /* #neg=4.854 #pos=2.054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07954989422312073;  // std dev = 38,087, 6.992,000 (wgt'ed) examples reached here.  /* #neg=4.938 #pos=2.054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4,42e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.06925546904756491;  // std dev = 37,995, 6.912,000 (wgt'ed) examples reached here.  /* #neg=4.858 #pos=2.054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.049297593760088874;  // std dev = 38,198, 7.092,000 (wgt'ed) examples reached here.  /* #neg=5.038 #pos=2.054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7,30e-08, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.0447454977488262;  // std dev = 38,076, 6.982,000 (wgt'ed) examples reached here.  /* #neg=4.928 #pos=2.054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.03673892723486487;  // std dev = 38,063, 6.971,000 (wgt'ed) examples reached here.  /* #neg=4.917 #pos=2.054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.027838697436542954;  // std dev = 38,112, 7.014,000 (wgt'ed) examples reached here.  /* #neg=4.960 #pos=2.054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.327783
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 23.244 seconds
Total inference time: 3.486 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.324382
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 13.481 seconds
Parameter learned model CLL: -0.324382


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.003, 4865, 2054], 'true': [1.72e-06, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.988, 4852, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.153, 4997, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.99, 4854, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.087, 4938, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.995, 4858, 2054], 'true': [4.42e-07, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.198, 5038, 2054], 'true': [2.46e-07, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.076, 4928, 2054], 'true': [7.3e-08, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.063, 4917, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.112, 4960, 2054], 'true': [0.0, 0, 413]}]]
[{'': [7.157040631385029e-15, 0.20873564712773443]}, {'': [-5.4365981719174735e-15, 0.2089623691072236]}, {'': [-1.3419451183846928e-15, 0.2064468968826531]}, {'': [-2.1677574989291194e-15, 0.20892747396592937]}, {'': [-1.4623760905474218e-15, 0.20746683689494425]}, {'': [4.731216763535776e-16, 0.2088576998402739]}, {'': [1.4623760905474217e-16, 0.2057411431546699]}, {'': [1.2903318446006663e-17, 0.2076402052303587]}, {'': [-3.5699181033951763e-16, 0.2078310740845461]}, {'': [-3.4193793881917656e-16, 0.2070859299771981]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,72e-06, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2452457092930597;  // std dev = 3,835, 62,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.08495305881085216;  // std dev = 4,124, 97,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   | | else return 0.17446692673130632;  // std dev = 0,465, 5.975,000 (wgt'ed) examples reached here.  /* #neg=4.085 #pos=1.890 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.04626774698070056;  // std dev = 6,803, 303,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=57 */
%   | | | else return 0.01538163950202762;  // std dev = 4,590, 159,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=25 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.044290089290732124;  // std dev = 5,700, 369,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15651034231944128;  // std dev = 0,467, 6.034,000 (wgt'ed) examples reached here.  /* #neg=4.098 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.033829063041567894;  // std dev = 6,890, 320,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=58 */
%   | | | else return 0.006992056019530513;  // std dev = 4,515, 159,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03845205781393488;  // std dev = 5,698, 367,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2827883185768619;  // std dev = 4,547, 83,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=39 */
%   | | | else return -0.09583835628388326;  // std dev = 2,522, 77,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=7 */
%   | | else return 0.12838074608207845;  // std dev = 0,465, 5.993,000 (wgt'ed) examples reached here.  /* #neg=4.103 #pos=1.890 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.014361625359358246;  // std dev = 7,189, 376,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=62 */
%   | | | else return 0.05530297944345115;  // std dev = 4,000, 100,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=20 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.028625946394980162;  // std dev = 5,681, 348,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09714360399479535;  // std dev = 0,460, 6.360,000 (wgt'ed) examples reached here.  /* #neg=4.424 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03263336405191911;  // std dev = 6,810, 306,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=57 */
%   | | | else return 0.006984064051023633;  // std dev = 4,588, 159,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.018058001197308538;  // std dev = 5,658, 325,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=36 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.23497078156781762;  // std dev = 3,560, 51,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | | | else return -0.0043167765432666465;  // std dev = 4,182, 108,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06955112215320534;  // std dev = 5,566, 157,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=46 */
%   | | | else return 0.09154777719351269;  // std dev = 35,531, 5.847,000 (wgt'ed) examples reached here.  /* #neg=4.003 #pos=1.844 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.04066807451240114;  // std dev = 6,758, 287,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=57 */
%   | | | else return -0.0026950627500617777;  // std dev = 4,610, 169,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=25 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.031069435513602122;  // std dev = 5,706, 376,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4,42e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06961202071383749;  // std dev = 0,462, 6.260,000 (wgt'ed) examples reached here.  /* #neg=4.324 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.055297577330723165;  // std dev = 6,015, 217,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=46 */
%   | | | else return 0.007136131342011582;  // std dev = 5,465, 213,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=36 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02228983433075414;  // std dev = 5,689, 356,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=36 */
%   | | | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0682368638314068;  // std dev = 0,466, 6.032,000 (wgt'ed) examples reached here.  /* #neg=4.096 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.051052338086886556;  // std dev = 6,001, 214,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=46 */
%   | | | else return -0.014517698216788439;  // std dev = 5,534, 242,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.12102222946715704;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.026172086895905635;  // std dev = 5,706, 384,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7,30e-08, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.048876328982389035;  // std dev = 0,464, 6.150,000 (wgt'ed) examples reached here.  /* #neg=4.214 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.025381327027106132;  // std dev = 6,773, 295,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=57 */
%   | | | else return -0.003654067918529944;  // std dev = 4,578, 157,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=25 */
%   | | else return -0.011578575171577786;  // std dev = 0,307, 340,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03630946785734567;  // std dev = 34,999, 5.721,000 (wgt'ed) examples reached here.  /* #neg=3.937 #pos=1.784 */
%   | | | else return 0.05077236540637708;  // std dev = 8,442, 499,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=99 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.144020034479611;  // std dev = 5,191, 261,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=31 */
%   | | | else return 0.12702158215860906;  // std dev = 6,595, 207,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=71 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.5392400290752939;  // std dev = 2,388, 38,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | | else return 0.39083346122538537;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.028719051950139428;  // std dev = 5,385, 187,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=36 */
%   | | | else return -0.07608034926779901;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033045385323793856;  // std dev = 0,463, 6.136,000 (wgt'ed) examples reached here.  /* #neg=4.200 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.021482755429627454;  // std dev = 7,215, 395,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.017550208368489167;  // std dev = 4,019, 106,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=20 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.11493782846923231;  // std dev = 0,011, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.03047960762251388;  // std dev = 5,711, 400,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=36 */


Results
   AUC ROC   = 0.657057
   AUC PR    = 0.194602
   CLL	      = -0.307999
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1084.541 seconds
Total inference time: 15.145 seconds
AUC ROC: 0.657057


Results scoring model
   AUC ROC   = 0.655811
   AUC PR    = 0.202826
   CLL	      = -0.322178
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 214.422 seconds
Refined model CLL: -0.322178


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.657057
   AUC PR    = 0.194602
   CLL	      = -0.307999
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1335.6879999999999 seconds
Total inference time: 15.145 seconds
AUC ROC: 0.657057
Total revision time: 1335.6879999999999
Best scored revision CLL: -0.322178


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:24:33
{'AUC PR': 0.194602, 'AUC ROC': 0.657057, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Precision': [1.0, 0.5], 'Inference time': 3.486, 'CLL': -0.327783, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 23.244}, 'Inference time': 15.145, 'CLL': -0.307999, 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1335.6879999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2148687528671609;  // std dev = 0,479, 6.585,000 (wgt'ed) examples reached here.  /* #neg=4.236 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return 0.088918165868743;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.050113220813797384;  // std dev = 5,895, 224,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=43 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.022400142828980073;  // std dev = 5,331, 207,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=34 */
%   | | | else return -0.06185106490048781;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.046076417013164235;  // std dev = 5,545, 355,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=34 */
%   | | | else return -0.07935106490048778;  // std dev = 1,369, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1780331422717664;  // std dev = 0,476, 6.748,000 (wgt'ed) examples reached here.  /* #neg=4.399 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7461474902219934;  // std dev = 2,496, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | | else return -0.14621727052361122;  // std dev = 0,036, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.044260748434289926;  // std dev = 2,126, 50,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | | else return 0.03666811391521655;  // std dev = 3,935, 103,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.03764886794286601;  // std dev = 5,535, 345,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=34 */
%   | | | else return -0.07106891301355714;  // std dev = 1,372, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15878604332445648;  // std dev = 0,479, 6.608,000 (wgt'ed) examples reached here.  /* #neg=4.259 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.04010617913549565;  // std dev = 0,372, 233,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=46 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return 2.0930065814104692E-4;  // std dev = 4,666, 227,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=34 */
%   | | | else return -0.03855255211822903;  // std dev = 1,349, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.027882404120702586;  // std dev = 5,519, 327,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=34 */
%   | | | else return -0.03101836457702042;  // std dev = 1,348, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7770075341878768;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.2229924658121236;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.6770075341878765;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.027007534187876884;  // std dev = 4,062, 88,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | else return 0.13246659125991106;  // std dev = 0,479, 6.448,000 (wgt'ed) examples reached here.  /* #neg=4.156 #pos=2.292 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordauthor(K, I) )
%   | | then return -0.03680990414683274;  // std dev = 0,308, 28,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else if ( title(L, J), venue(L, A) )
%   | | | then return 0.0426273818762335;  // std dev = 5,876, 287,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=58 */
%   | | | else return 0.011091496911588223;  // std dev = 4,182, 128,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=21 */
%   | else return -0.032673408055001144;  // std dev = 0,293, 380,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11250189918091448;  // std dev = 0,479, 6.532,000 (wgt'ed) examples reached here.  /* #neg=4.183 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5498357860183418;  // std dev = 3,134, 69,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=57 */
%   | | | else return -0.13547801001701626;  // std dev = 0,067, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.07953693546269407;  // std dev = 0,821, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.01019450445520084;  // std dev = 4,480, 145,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.031136342287041464;  // std dev = 5,550, 362,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=34 */
%   | | | else return -0.059350694263404946;  // std dev = 1,374, 33,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | | else return -0.09865266022390574;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08910027565771893;  // std dev = 0,478, 6.569,000 (wgt'ed) examples reached here.  /* #neg=4.220 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return -0.13264682992173635;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.05432549176604795;  // std dev = 1,650, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | else return -0.12308046509408992;  // std dev = 0,009, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.019047407020876397;  // std dev = 4,993, 294,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=58 */
%   | | | else return 0.00288867373300828;  // std dev = 4,192, 134,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=21 */
%   | | else return -0.02060692236126714;  // std dev = 0,300, 360,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07005895492129742;  // std dev = 0,478, 6.590,000 (wgt'ed) examples reached here.  /* #neg=4.241 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.007221344074248355;  // std dev = 1,600, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return -0.005584397211144201;  // std dev = 5,197, 353,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=59 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.05523455182179799;  // std dev = 3,934, 92,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=20 */
%   | | | else return -0.13710324095224088;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0188961741557112;  // std dev = 5,529, 338,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=34 */
%   | | | else return -0.04275212107628265;  // std dev = 1,368, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return -0.0885438906467937;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5497457307381955;  // std dev = 9,88e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.23153866016193067;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.3925371582567896;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.028956543257156186;  // std dev = 4,062, 88,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14252757213593775;  // std dev = 4,660, 88,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=39 */
%   | | | else return -0.20206269675010613;  // std dev = 2,512, 71,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=7 */
%   | | else return 0.06113699106750647;  // std dev = 0,481, 6.208,000 (wgt'ed) examples reached here.  /* #neg=3.962 #pos=2.246 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 2.778938486072705E-5;  // std dev = 0,306, 487,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=82 */
%   | else return -0.016187090832870652;  // std dev = 0,299, 362,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03815751101936115;  // std dev = 0,475, 6.078,000 (wgt'ed) examples reached here.  /* #neg=3.939 #pos=2.139 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.695572434426645;  // std dev = 3,010, 109,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=98 */
%   | | | else return -0.13113378541103807;  // std dev = 1,134, 400,000 (wgt'ed) examples reached here.  /* #neg=399 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.18556558382344326;  // std dev = 0,305, 294,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=31 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3488944906897412;  // std dev = 4,741, 102,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=68 */
%   | | | else return 0.06818394919710188;  // std dev = 3,854, 124,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.5016580545681636;  // std dev = 0,387, 38,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | else return 0.654078451077233;  // std dev = 0,177, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else return -0.010047743988064703;  // std dev = 0,269, 239,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04154979780124547;  // std dev = 0,476, 6.426,000 (wgt'ed) examples reached here.  /* #neg=4.077 #pos=2.349 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(B, F) )
%   | | | then return 0.05237570205949232;  // std dev = 1,363, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.018854966938361386;  // std dev = 6,355, 520,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=59 */
%   | | else return 0.009991139419593932;  // std dev = 0,288, 95,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.006853250271708325;  // std dev = 3,888, 192,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=34 */
%   | | | else return 0.032571127430166553;  // std dev = 1,294, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return -0.07970779872162408;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.673327
   AUC PR    = 0.121844
   CLL	      = -0.3409
   Precision = 0.806452 at threshold = 0.5
   Recall    = 0.045455
   F1        = 0.086059


Total learning time: 2456.892 seconds
Total inference time: 23.52 seconds
AUC ROC: 0.673327


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 15:05:54
{'AUC PR': 0.121844, 'AUC ROC': 0.673327, 'Precision': [0.806452, 0.5], 'Inference time': 23.52, 'CLL': -0.3409, 'Recall': 0.045455, 'Learning time': 2456.892, 'F1': 0.086059}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2123941469830843;  // std dev = 0,478, 6.631,000 (wgt'ed) examples reached here.  /* #neg=4.282 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8242506300147667;  // std dev = 1,390, 59,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   | | | else return -0.1418510649004884;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.05710530218862331;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=5 */
%   | | | else return 0.07091489254632072;  // std dev = 3,968, 94,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=20 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.036587907005751374;  // std dev = 5,516, 323,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=34 */
%   | | | else return -0.05094197399139689;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.617429
   AUC PR    = 0.056116
   CLL	      = -0.199787
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 81.711 seconds
Total inference time: 5.191 seconds
AUC ROC: 0.617429


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 15:07:22
{'AUC PR': 0.056116, 'AUC ROC': 0.617429, 'Precision': [nan, 0.5], 'Inference time': 5.191, 'CLL': -0.199787, 'Recall': 0.0, 'Learning time': 81.711, 'F1': nan}


