Starting experiment #4 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.14185106490048904;  // std dev = 0,000, 696,000 (wgt'ed) examples reached here.  /* #neg=696 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.12544463852839233;  // std dev = 0,000, 662,000 (wgt'ed) examples reached here.  /* #neg=662 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360629;  // std dev = 0,000, 662,000 (wgt'ed) examples reached here.  /* #neg=662 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783624;  // std dev = 3,16e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.10159632948783508;  // std dev = 4,72e-07, 726,000 (wgt'ed) examples reached here.  /* #neg=726 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.092691276189262;  // std dev = 0,000, 683,000 (wgt'ed) examples reached here.  /* #neg=683 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839675;  // std dev = 1,33e-07, 709,000 (wgt'ed) examples reached here.  /* #neg=709 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109279;  // std dev = 0,000, 707,000 (wgt'ed) examples reached here.  /* #neg=707 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333649;  // std dev = 2,52e-07, 735,000 (wgt'ed) examples reached here.  /* #neg=735 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420272;  // std dev = 1,67e-07, 783,000 (wgt'ed) examples reached here.  /* #neg=783 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06419184008202537;  // std dev = 2,50e-07, 655,000 (wgt'ed) examples reached here.  /* #neg=655 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 218007

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 31946

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995118;  // std dev = 1,19e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.15187390172167026;  // std dev = 17,628, 1.498,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=440 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109536;  // std dev = 3,04e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.13633722043758179;  // std dev = 17,579, 1.478,000 (wgt'ed) examples reached here.  /* #neg=1.038 #pos=440 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,91e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.11722731812968211;  // std dev = 17,576, 1.477,000 (wgt'ed) examples reached here.  /* #neg=1.037 #pos=440 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831014;  // std dev = 1,74e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.10248305834350253;  // std dev = 17,535, 1.461,000 (wgt'ed) examples reached here.  /* #neg=1.021 #pos=440 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.08019771404760878;  // std dev = 17,604, 1.488,000 (wgt'ed) examples reached here.  /* #neg=1.048 #pos=440 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.0651429423505743;  // std dev = 17,619, 1.494,000 (wgt'ed) examples reached here.  /* #neg=1.054 #pos=440 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253578;  // std dev = 1,01e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.04315229278805035;  // std dev = 17,746, 1.548,000 (wgt'ed) examples reached here.  /* #neg=1.108 #pos=440 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9,42e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.03701715280317218;  // std dev = 17,723, 1.538,000 (wgt'ed) examples reached here.  /* #neg=1.098 #pos=440 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.03669161035463498;  // std dev = 17,641, 1.503,000 (wgt'ed) examples reached here.  /* #neg=1.063 #pos=440 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,96e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.026747080582156958;  // std dev = 17,677, 1.518,000 (wgt'ed) examples reached here.  /* #neg=1.078 #pos=440 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.320314
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.964 seconds
Total inference time: 5.065 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.584121
   AUC PR    = 0.187039
   CLL	      = -0.322049
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168242
   F1        = 0.288026


Total scoring time: 4.977 seconds
Parameter learned model CLL: -0.322049


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.628, 1058, 440], 'true': [1.19e-07, 0, 89]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.579, 1038, 440], 'true': [3.04e-07, 0, 89]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.576, 1037, 440], 'true': [3.91e-07, 0, 89]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.535, 1021, 440], 'true': [1.74e-07, 0, 89]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.604, 1048, 440], 'true': [0.0, 0, 89]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.619, 1054, 440], 'true': [0.0, 0, 89]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.746, 1108, 440], 'true': [1.01e-07, 0, 89]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.723, 1098, 440], 'true': [9.42e-08, 0, 89]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.641, 1063, 440], 'true': [0.0, 0, 89]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.677, 1078, 440], 'true': [5.96e-08, 0, 89]}]]
[{'': [1.5967252488991015e-16, 0.2074506106049548]}, {'': [1.037871411784416e-15, 0.2090745457508336]}, {'': [1.7164796425665342e-15, 0.2091560552254782]}, {'': [3.3930411539105907e-16, 0.21046408070008407]}, {'': [-3.3930411539105907e-16, 0.20826107064400282]}, {'': [-3.991813122247754e-17, 0.20777442657733305]}, {'': [1.1476462726462293e-16, 0.2034466411607094]}, {'': [9.979532805619384e-17, 0.20424072605396057]}, {'': [-7.484649604214538e-17, 0.20704654120457763]}, {'': [3.991813122247754e-17, 0.20583910943079178]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995118;  // std dev = 1,19e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17228103955419252;  // std dev = 0,464, 1.302,000 (wgt'ed) examples reached here.  /* #neg=893 #pos=409 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.274815601766179;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.05045662740720454;  // std dev = 4,019, 104,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=20 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.061205903610165126;  // std dev = 2,144, 62,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109536;  // std dev = 3,04e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14360710767629375;  // std dev = 0,462, 1.329,000 (wgt'ed) examples reached here.  /* #neg=920 #pos=409 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.44630064131695474;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.007369875867828446;  // std dev = 0,920, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0559768313037989;  // std dev = 3,990, 98,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=20 */
%   | | | else return -0.04981679326596494;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,91e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13151148742163316;  // std dev = 0,465, 1.293,000 (wgt'ed) examples reached here.  /* #neg=884 #pos=409 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.1344026214569115;  // std dev = 3,486, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return -0.025956278922538344;  // std dev = 2,487, 55,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.17876629124450313;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.04950092170252208;  // std dev = 2,146, 63,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831014;  // std dev = 1,74e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.11273624914407142;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.14662203962598191;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else return 0.0951541311121757;  // std dev = 0,459, 1.334,000 (wgt'ed) examples reached here.  /* #neg=933 #pos=401 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.48466294686853645;  // std dev = 0,747, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1146790569141461;  // std dev = 1,447, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.22597081768326718;  // std dev = 1,636, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.00971241559845259;  // std dev = 4,211, 151,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=21 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09116652146263421;  // std dev = 0,463, 1.310,000 (wgt'ed) examples reached here.  /* #neg=901 #pos=409 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.29669810312738515;  // std dev = 1,345, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.040490611120181;  // std dev = 0,815, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.11604697066227211;  // std dev = 1,735, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.0214973865466458;  // std dev = 4,244, 167,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=21 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08278228906278925;  // std dev = 0,466, 1.279,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=409 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.36920899526114254;  // std dev = 1,227, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.019133387336869097;  // std dev = 0,861, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.042444094514305704;  // std dev = 3,921, 94,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=20 */
%   | | | else return -0.04549683604981892;  // std dev = 2,162, 63,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253578;  // std dev = 1,01e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.17899626027215496;  // std dev = 1,295, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.12939171163844507;  // std dev = 2,096, 46,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | else return 0.06465328812813757;  // std dev = 0,466, 1.263,000 (wgt'ed) examples reached here.  /* #neg=862 #pos=401 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.06639935395738521;  // std dev = 3,585, 64,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return -0.07492912978375801;  // std dev = 2,408, 57,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1994145272029539;  // std dev = 0,155, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.009128960416554276;  // std dev = 2,281, 53,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9,42e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.048865428793305354;  // std dev = 0,463, 1.307,000 (wgt'ed) examples reached here.  /* #neg=898 #pos=409 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05607943917182373;  // std dev = 3,558, 66,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return -0.021642780076670712;  // std dev = 2,313, 44,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else return -0.043724365752354236;  // std dev = 0,258, 81,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.006652884016749068;  // std dev = 2,278, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return -0.13773035680084975;  // std dev = 0,973, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else return 0.04954891053876314;  // std dev = 0,468, 1.236,000 (wgt'ed) examples reached here.  /* #neg=835 #pos=401 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.3433286767327748;  // std dev = 0,664, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07885981195368004;  // std dev = 1,370, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.050066582083661354;  // std dev = 1,728, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.01643960340464006;  // std dev = 4,205, 160,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,96e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.028696623052957223;  // std dev = 0,463, 1.311,000 (wgt'ed) examples reached here.  /* #neg=902 #pos=409 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.04095324149395687;  // std dev = 3,684, 126,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=17 */
%   | | | else return 0.15874722585928341;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.4071654974791903;  // std dev = 0,190, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0562144841644365;  // std dev = 2,389, 55,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=7 */


Results
   AUC ROC   = 0.697669
   AUC PR    = 0.283774
   CLL	      = -0.300703
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 69.07 seconds
Total inference time: 6.732 seconds
AUC ROC: 0.697669


Results scoring model
   AUC ROC   = 0.62882
   AUC PR    = 0.192573
   CLL	      = -0.325879
   Precision = 0.957447 at threshold = 0.5
   Recall    = 0.170132
   F1        = 0.288925


Total scoring time: 13.593 seconds
Refined model CLL: -0.325879


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.320314
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 92.604 seconds
Total inference time: 5.065 seconds
AUC ROC: 0.630435
Total revision time: 92.604
Best scored revision CLL: -0.322049


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:57
{'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Learning time': 92.604, 'F1': 0.413793, 'Inference time': 5.065, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'parameter_0.2': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Learning time': 4.964, 'F1': 0.413793, 'Inference time': 5.065, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.320314}, 'CLL': -0.320314}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21642231639447143;  // std dev = 0,479, 1.390,000 (wgt'ed) examples reached here.  /* #neg=892 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return 0.40360348055405776;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.09758555481782223;  // std dev = 3,596, 71,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | | else return -0.07935106490048774;  // std dev = 1,677, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.05256535061477343;  // std dev = 2,134, 56,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18746922930074988;  // std dev = 0,479, 1.392,000 (wgt'ed) examples reached here.  /* #neg=894 #pos=498 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.3016114478971489;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return 0.14940579718036825;  // std dev = 3,441, 56,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return -0.056652493877251846;  // std dev = 1,666, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | else return -0.042006555683214965;  // std dev = 0,291, 63,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1493309958920092;  // std dev = 0,476, 1.432,000 (wgt'ed) examples reached here.  /* #neg=934 #pos=498 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.08414818825974767;  // std dev = 2,289, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.08707046828820805;  // std dev = 2,734, 42,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( haswordauthor(I, D) )
%   | | | then return -0.2507182895956636;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.003344515463278782;  // std dev = 2,390, 41,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return -0.04771568402788467;  // std dev = 2,116, 59,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=5 */
%   | | | else return 0.07123910776013728;  // std dev = 0,892, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.13072406188424038;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7767415253481769;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3152030638097153;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.08689483828818677;  // std dev = 1,610, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else return 0.12951120464847782;  // std dev = 0,478, 1.372,000 (wgt'ed) examples reached here.  /* #neg=888 #pos=484 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( title(K, I), venue(K, B) )
%   | | | then return 0.7624804812856133;  // std dev = 0,965, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.18015747621791708;  // std dev = 0,040, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.45603744705470783;  // std dev = 1,160, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.06937070786519589;  // std dev = 1,674, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | else return -0.041871661024439115;  // std dev = 0,277, 70,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11306222767781612;  // std dev = 0,479, 1.384,000 (wgt'ed) examples reached here.  /* #neg=886 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return 0.24202854809435304;  // std dev = 0,471, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then return 0.09719312497846014;  // std dev = 0,365, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.008224624122424796;  // std dev = 3,179, 100,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=16 */
%   | | | else return -0.04242473044696546;  // std dev = 2,142, 63,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5883076565741183;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.27725375653667267;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.08497196471984428;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else return 0.08210141368841928;  // std dev = 0,477, 1.382,000 (wgt'ed) examples reached here.  /* #neg=898 #pos=484 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | then if ( haswordauthor(K, H) )
%   | | | then return 0.20251266140481736;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.020888952242399873;  // std dev = 2,838, 64,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | else return -0.004098972123816007;  // std dev = 0,329, 38,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.035855691465892334;  // std dev = 0,286, 66,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=6 */
%   | | else return -0.10816798459646444;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07491177237147897;  // std dev = 0,479, 1.383,000 (wgt'ed) examples reached here.  /* #neg=885 #pos=498 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.24177253134556217;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return 0.06422720895885563;  // std dev = 2,955, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return -0.07491395140904372;  // std dev = 1,685, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   | else return -0.04018826594008481;  // std dev = 0,273, 73,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.42403137867115204;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.004325351330195172;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.2539623452382776;  // std dev = 0,988, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else return 0.05945231128818473;  // std dev = 0,479, 1.352,000 (wgt'ed) examples reached here.  /* #neg=866 #pos=486 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( title(K, I), venue(K, A) )
%   | | | then return 0.6561474094802481;  // std dev = 0,070, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1685059156518943;  // std dev = 0,179, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.05365129827580825;  // std dev = 1,387, 32,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | | else return 0.028740144812541592;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else return -0.017368225672776683;  // std dev = 0,289, 63,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04688457162673292;  // std dev = 0,478, 1.386,000 (wgt'ed) examples reached here.  /* #neg=888 #pos=498 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.0941517970276572;  // std dev = 0,307, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.021046208004051027;  // std dev = 3,172, 101,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=13 */
%   | | | else return 0.022498907547514126;  // std dev = 1,568, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return -0.01793884288920391;  // std dev = 0,250, 39,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | else return -0.09318794574792748;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03260027390870519;  // std dev = 0,477, 1.402,000 (wgt'ed) examples reached here.  /* #neg=904 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return -0.2171245814488804;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.13162545191176686;  // std dev = 1,282, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.014193634599705207;  // std dev = 0,914, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.008317597246154836;  // std dev = 2,335, 69,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return -0.05903680713887569;  // std dev = 1,673, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12512474197181464;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.007528153282880742;  // std dev = 2,119, 51,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */


Results
   AUC ROC   = 0.620803
   AUC PR    = 0.026217
   CLL	      = -0.340136
   Precision = 0.166667 at threshold = 0.5
   Recall    = 0.008152
   F1        = 0.015544


Total learning time: 134.476 seconds
Total inference time: 12.614 seconds
AUC ROC: 0.620803


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:04:24
{'AUC PR': 0.026217, 'AUC ROC': 0.620803, 'Learning time': 134.476, 'F1': 0.015544, 'Inference time': 12.614, 'Precision': [0.166667, 0.5], 'Recall': 0.008152, 'CLL': -0.340136}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21209349799929417;  // std dev = 0,478, 1.407,000 (wgt'ed) examples reached here.  /* #neg=909 #pos=498 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.23314893509951226;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.0339731109236882;  // std dev = 3,631, 91,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   | | | else return -0.05710530218862331;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=5 */


Results
   AUC ROC   = 0.590708
   AUC PR    = 0.013635
   CLL	      = -0.195909
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.08 seconds
Total inference time: 2.78 seconds
AUC ROC: 0.590708


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 00:04:36
{'AUC PR': 0.013635, 'AUC ROC': 0.590708, 'Learning time': 8.08, 'F1': nan, 'Inference time': 2.78, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.195909}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9,97e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.14829433089918412;  // std dev = 25,248, 3.095,000 (wgt'ed) examples reached here.  /* #neg=2.197 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.13248962357569338;  // std dev = 25,190, 3.061,000 (wgt'ed) examples reached here.  /* #neg=2.163 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.12206896260248254;  // std dev = 25,042, 2.977,000 (wgt'ed) examples reached here.  /* #neg=2.079 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4,42e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.08890699061477768;  // std dev = 25,301, 3.127,000 (wgt'ed) examples reached here.  /* #neg=2.229 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3,15e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.08300243684319615;  // std dev = 25,147, 3.036,000 (wgt'ed) examples reached here.  /* #neg=2.138 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.07003987055528738;  // std dev = 25,125, 3.023,000 (wgt'ed) examples reached here.  /* #neg=2.125 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,63e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.06019200986294924;  // std dev = 25,077, 2.996,000 (wgt'ed) examples reached here.  /* #neg=2.098 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.044136038516496286;  // std dev = 25,165, 3.046,000 (wgt'ed) examples reached here.  /* #neg=2.148 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.03858854636714898;  // std dev = 25,114, 3.017,000 (wgt'ed) examples reached here.  /* #neg=2.119 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.03470753868217202;  // std dev = 25,050, 2.981,000 (wgt'ed) examples reached here.  /* #neg=2.083 #pos=898 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.327
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 8.182 seconds
Total inference time: 3.64 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.576015
   AUC PR    = 0.170393
   CLL	      = -0.328938
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.15203
   F1        = 0.263934


Total scoring time: 6.881 seconds
Parameter learned model CLL: -0.328938


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.248, 2197, 898], 'true': [9.97e-07, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.19, 2163, 898], 'true': [0.0, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.042, 2079, 898], 'true': [5.53e-07, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.301, 2229, 898], 'true': [4.42e-07, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.147, 2138, 898], 'true': [3.15e-07, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.125, 2125, 898], 'true': [0.0, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.077, 2098, 898], 'true': [2.63e-07, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.165, 2148, 898], 'true': [0.0, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.114, 2119, 898], 'true': [0.0, 0, 161]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [25.05, 2083, 898], 'true': [9.42e-08, 0, 161]}]]
[{'': [6.178632484870436e-15, 0.20596104509595123]}, {'': [-2.7362515290140504e-15, 0.20730329110121384]}, {'': [1.897722834638777e-15, 0.21065567176138933]}, {'': [1.2136599523852642e-15, 0.20470603322990416]}, {'': [6.178632484870436e-16, 0.2082957952093897]}, {'': [-2.3169871818264136e-16, 0.20881369419517262]}, {'': [4.3029761948204827e-16, 0.20989311962007948]}, {'': [-3.1444826039072757e-16, 0.20789824141023286]}, {'': [-2.372153543298471e-16, 0.20905312938318374]}, {'': [5.516636147205747e-17, 0.21049493712894443]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9,97e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4098730730305468;  // std dev = 2,678, 29,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return 0.12345505754849195;  // std dev = 3,090, 49,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else return 0.1811770762013701;  // std dev = 0,468, 2.523,000 (wgt'ed) examples reached here.  /* #neg=1.708 #pos=815 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.07952298090103813;  // std dev = 4,752, 131,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=29 */
%   | | | else return -0.016851064900487673;  // std dev = 3,240, 96,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=12 */
%   | | else return -0.049652483340203966;  // std dev = 0,289, 141,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14954194728388648;  // std dev = 0,465, 2.677,000 (wgt'ed) examples reached here.  /* #neg=1.833 #pos=844 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.13816781635108344;  // std dev = 2,388, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.019505870476769365;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.020552757355822047;  // std dev = 5,234, 198,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=33 */
%   | | | else return -0.03755304887070425;  // std dev = 3,289, 122,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24625405733023384;  // std dev = 2,910, 34,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.0668504122556487;  // std dev = 3,132, 53,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else return 0.13255591654098292;  // std dev = 0,466, 2.550,000 (wgt'ed) examples reached here.  /* #neg=1.735 #pos=815 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.3627086447053286;  // std dev = 1,012, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12118487548816174;  // std dev = 2,091, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.09278641301837508;  // std dev = 2,433, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.023710471595959508;  // std dev = 5,764, 319,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=38 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4,42e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10930977911062183;  // std dev = 0,465, 2.655,000 (wgt'ed) examples reached here.  /* #neg=1.811 #pos=844 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.038432915697459324;  // std dev = 4,829, 147,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=29 */
%   | | | else return -0.02679923223707364;  // std dev = 3,233, 103,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.023657974390679876;  // std dev = 0,927, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.03811833787015385;  // std dev = 3,277, 130,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3,15e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19271012857854028;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.054267382149712474;  // std dev = 3,102, 50,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else return 0.08999368444762684;  // std dev = 0,465, 2.574,000 (wgt'ed) examples reached here.  /* #neg=1.759 #pos=815 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.20612975396565286;  // std dev = 1,371, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.06843210318128262;  // std dev = 2,099, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.13141682536217272;  // std dev = 2,231, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.019801392156196855;  // std dev = 5,754, 317,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=38 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07669505629108345;  // std dev = 0,466, 2.637,000 (wgt'ed) examples reached here.  /* #neg=1.793 #pos=844 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.28528341910222665;  // std dev = 1,795, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.03626788568932144;  // std dev = 5,285, 186,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=35 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.011815257633515514;  // std dev = 0,898, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.016318849920678825;  // std dev = 3,239, 110,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,63e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0638147555152173;  // std dev = 0,467, 2.623,000 (wgt'ed) examples reached here.  /* #neg=1.779 #pos=844 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.002005592501715497;  // std dev = 5,120, 226,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=32 */
%   | | | else return 0.05714678652777196;  // std dev = 2,352, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else return -0.033622282699536925;  // std dev = 0,333, 118,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7057090418183555;  // std dev = 4,661, 820,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=798 */
%   | | | else return -0.24214682819275485;  // std dev = 5,586, 1.911,000 (wgt'ed) examples reached here.  /* #neg=1.882 #pos=29 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.17149613221000318;  // std dev = 2,866, 114,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=9 */
%   | | | else return 0.10426142267106489;  // std dev = 4,622, 105,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.6054509655470834;  // std dev = 0,331, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.04202790019032201;  // std dev = 0,398, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.017464818330048964;  // std dev = 18,838, 2.557,000 (wgt'ed) examples reached here.  /* #neg=1.777 #pos=780 */
%   | | | else return -0.0479745544111131;  // std dev = 4,377, 127,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=26 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.19196674417194493;  // std dev = 2,285, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.037791049697821016;  // std dev = 5,378, 280,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=53 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.1085966381954789;  // std dev = 3,998, 90,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return -0.07350738934876182;  // std dev = 0,710, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return -0.12166582683973816;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03319278672065998;  // std dev = 0,383, 2.577,000 (wgt'ed) examples reached here.  /* #neg=1.733 #pos=844 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20290548500609568;  // std dev = 1,961, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.1450921985909098;  // std dev = 0,768, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.023947383427164723;  // std dev = 1,890, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.025183388797603526;  // std dev = 5,442, 325,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=38 */


Results
   AUC ROC   = 0.917276
   AUC PR    = 0.603173
   CLL	      = -0.243388
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 606.152 seconds
Total inference time: 20.629 seconds
AUC ROC: 0.917276


Results scoring model
   AUC ROC   = 0.955472
   AUC PR    = 0.555534
   CLL	      = -0.261906
   Precision = 0.956989 at threshold = 0.5
   Recall    = 0.168083
   F1        = 0.285944


Total scoring time: 287.203 seconds
Refined model CLL: -0.261906


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.917276
   AUC PR    = 0.603173
   CLL	      = -0.243388
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 908.418 seconds
Total inference time: 20.629 seconds
AUC ROC: 0.917276
Total revision time: 908.418
Best scored revision CLL: -0.261906


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:20:10
{'AUC PR': 0.603173, 'AUC ROC': 0.917276, 'parameter_0.4': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Learning time': 8.182, 'F1': 0.413793, 'Inference time': 3.64, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.327}, 'Learning time': 908.418, 'F1': 0.413793, 'Inference time': 20.629, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.243388}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.25814893509951237;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return -0.038402789038418816;  // std dev = 0,305, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.42957750652808374;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return 0.17393840878372288;  // std dev = 2,865, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else return 0.21701685962780912;  // std dev = 0,480, 2.650,000 (wgt'ed) examples reached here.  /* #neg=1.699 #pos=951 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, B) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.051697322196286546;  // std dev = 0,395, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | else return -0.008714970225931814;  // std dev = 0,340, 338,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=45 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18608279017287693;  // std dev = 0,479, 2.814,000 (wgt'ed) examples reached here.  /* #neg=1.809 #pos=1.005 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7893640691674503;  // std dev = 1,363, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return -0.13257944855205547;  // std dev = 0,999, 104,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.28417325511688213;  // std dev = 1,837, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.061092221052293096;  // std dev = 2,350, 75,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.10196483728754985;  // std dev = 0,437, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.05475310389605453;  // std dev = 3,156, 127,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=11 */
%   | | | else return -0.14079350493456058;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15113675374278407;  // std dev = 0,476, 2.872,000 (wgt'ed) examples reached here.  /* #neg=1.867 #pos=1.005 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.15368165481721946;  // std dev = 0,415, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return -0.008598174290980249;  // std dev = 0,731, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.34713228761092074;  // std dev = 0,999, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11346718121069278;  // std dev = 1,864, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.0042168012056486405;  // std dev = 4,394, 188,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=28 */
%   | | | else return -0.05072368902687009;  // std dev = 3,027, 120,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1311802520557699;  // std dev = 0,478, 2.830,000 (wgt'ed) examples reached here.  /* #neg=1.825 #pos=1.005 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.2967694333964523;  // std dev = 0,999, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.20187725001791154;  // std dev = 1,868, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.14863904628480062;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0531984077136588;  // std dev = 4,107, 135,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=29 */
%   | | | else return -0.07178412988483894;  // std dev = 2,374, 95,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=6 */
%   | | else return -0.04054002332095254;  // std dev = 0,285, 122,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10943232411561898;  // std dev = 0,478, 2.816,000 (wgt'ed) examples reached here.  /* #neg=1.811 #pos=1.005 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.14084451546870216;  // std dev = 0,478, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.07577602428818173;  // std dev = 0,386, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.05100135670333123;  // std dev = 4,067, 132,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=29 */
%   | | | else return -0.0649505395165448;  // std dev = 2,380, 94,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=6 */
%   | | else return -0.0399769890811093;  // std dev = 0,278, 129,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0858476811416176;  // std dev = 0,478, 2.834,000 (wgt'ed) examples reached here.  /* #neg=1.829 #pos=1.005 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.6719098693327002;  // std dev = 0,832, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return -0.13224665199000582;  // std dev = 1,014, 102,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return -0.007283220503136678;  // std dev = 3,049, 92,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | | | else return -0.1417519294985764;  // std dev = 0,216, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.11811862289859527;  // std dev = 1,062, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.04309686394853011;  // std dev = 0,268, 140,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07058996234351245;  // std dev = 0,478, 2.821,000 (wgt'ed) examples reached here.  /* #neg=1.816 #pos=1.005 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.3007106326757057;  // std dev = 0,473, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.4012721400394062;  // std dev = 0,743, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1753713626250546;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.05439932414597671;  // std dev = 1,587, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.02171570873085811;  // std dev = 0,519, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.02187688972329614;  // std dev = 3,833, 214,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=28 */
%   | | | else return -0.03552101196270785;  // std dev = 3,033, 126,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04984628737667655;  // std dev = 0,477, 2.868,000 (wgt'ed) examples reached here.  /* #neg=1.863 #pos=1.005 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.17900762849268212;  // std dev = 0,959, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return -0.012883389131752477;  // std dev = 1,409, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return -0.015810051309336208;  // std dev = 0,540, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.01807372336031159;  // std dev = 4,401, 204,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=24 */
%   | | | else return -0.05169621307411793;  // std dev = 1,884, 71,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.2022138205234454;  // std dev = 0,159, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0031668377945132742;  // std dev = 2,348, 76,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04462595470488511;  // std dev = 0,478, 2.827,000 (wgt'ed) examples reached here.  /* #neg=1.822 #pos=1.005 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return 0.013793936925169012;  // std dev = 3,287, 140,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=28 */
%   | | | else return -0.07177372636305457;  // std dev = 1,809, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | | else return 0.045118719324349736;  // std dev = 0,365, 44,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0020977590204479643;  // std dev = 3,130, 99,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=12 */
%   | | | else return -0.07564344097800883;  // std dev = 0,989, 28,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | else return -0.10375325623575017;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordvenue(B, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.030007766643108873;  // std dev = 0,477, 2.613,000 (wgt'ed) examples reached here.  /* #neg=1.696 #pos=917 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.23347812882473834;  // std dev = 2,529, 81,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=7 */
%   | | | else return 0.42459117480891156;  // std dev = 2,989, 47,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | else if ( haswordtitle(D, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.07891288623610068;  // std dev = 4,991, 178,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=45 */
%   | | | else return -0.020943612229917027;  // std dev = 2,635, 86,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | else return 0.08330295756130936;  // std dev = 0,327, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then return 0.6389217546394976;  // std dev = 0,205, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return -0.0027123669052990865;  // std dev = 0,278, 79,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else return -0.09882628323957962;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.667444
   AUC PR    = 0.044934
   CLL	      = -0.332173
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1073.877 seconds
Total inference time: 14.519 seconds
AUC ROC: 0.667444


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:38:19
{'AUC PR': 0.044934, 'AUC ROC': 0.667444, 'Learning time': 1073.877, 'F1': nan, 'Inference time': 14.519, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.332173}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20795749757775298;  // std dev = 0,477, 2.873,000 (wgt'ed) examples reached here.  /* #neg=1.868 #pos=1.005 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.35814893509951234;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.082955136649899;  // std dev = 4,741, 129,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=29 */
%   | | | else return -0.07869317016364558;  // std dev = 2,371, 95,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.05988385178573357;  // std dev = 3,030, 122,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=10 */


Results
   AUC ROC   = 0.598008
   AUC PR    = 0.014208
   CLL	      = -0.19468
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 16.528 seconds
Total inference time: 4.725 seconds
AUC ROC: 0.598008


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 00:38:41
{'AUC PR': 0.014208, 'AUC ROC': 0.598008, 'Learning time': 16.528, 'F1': nan, 'Inference time': 4.725, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.19468}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.16160030219946234;  // std dev = 30,710, 4.462,000 (wgt'ed) examples reached here.  /* #neg=3.108 #pos=1.354 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.13562065749441898;  // std dev = 30,824, 4.539,000 (wgt'ed) examples reached here.  /* #neg=3.185 #pos=1.354 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.11921217620543546;  // std dev = 30,759, 4.495,000 (wgt'ed) examples reached here.  /* #neg=3.141 #pos=1.354 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.09694958204974574;  // std dev = 30,844, 4.553,000 (wgt'ed) examples reached here.  /* #neg=3.199 #pos=1.354 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.08050390330934784;  // std dev = 30,854, 4.560,000 (wgt'ed) examples reached here.  /* #neg=3.206 #pos=1.354 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.07258659113180933;  // std dev = 30,721, 4.469,000 (wgt'ed) examples reached here.  /* #neg=3.115 #pos=1.354 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.05367968584888718;  // std dev = 30,848, 4.556,000 (wgt'ed) examples reached here.  /* #neg=3.202 #pos=1.354 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9,88e-08, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.04896728181250597;  // std dev = 30,731, 4.476,000 (wgt'ed) examples reached here.  /* #neg=3.122 #pos=1.354 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.040673875670091314;  // std dev = 30,707, 4.460,000 (wgt'ed) examples reached here.  /* #neg=3.106 #pos=1.354 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.029416910545495705;  // std dev = 30,780, 4.509,000 (wgt'ed) examples reached here.  /* #neg=3.155 #pos=1.354 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.331461
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 19.408 seconds
Total inference time: 4.393 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.573946
   AUC PR    = 0.166142
   CLL	      = -0.333436
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147892
   F1        = 0.257675


Total scoring time: 10.32 seconds
Parameter learned model CLL: -0.333436


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.71, 3108, 1354], 'true': [1.08e-06, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.824, 3185, 1354], 'true': [0.0, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.759, 3141, 1354], 'true': [5.33e-07, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.844, 3199, 1354], 'true': [0.0, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.854, 3206, 1354], 'true': [2.92e-07, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.721, 3115, 1354], 'true': [2.95e-07, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.848, 3202, 1354], 'true': [2.92e-07, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.731, 3122, 1354], 'true': [9.88e-08, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.707, 3106, 1354], 'true': [0.0, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [30.78, 3155, 1354], 'true': [1.03e-07, 0, 235]}]]
[{'': [4.958681219772614e-15, 0.21136863490510457]}, {'': [-4.1725488312720774e-15, 0.2093185586365833]}, {'': [1.209434443846979e-15, 0.2104879355506864]}, {'': [-1.209434443846979e-16, 0.20894770424560052]}, {'': [3.628303331540937e-16, 0.20876250384735662]}, {'': [3.703892984281373e-16, 0.21118156599642404]}, {'': [3.628303331540937e-16, 0.2088683140101634]}, {'': [4.15743090072399e-17, 0.21099463247937394]}, {'': [-1.662972360289596e-16, 0.21142210782444512]}, {'': [4.535379164426171e-17, 0.21011524178175828]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.35814893509951196;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.030562728202960656;  // std dev = 3,523, 87,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=15 */
%   | | else return 0.18616170445305866;  // std dev = 0,469, 3.759,000 (wgt'ed) examples reached here.  /* #neg=2.526 #pos=1.233 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.024815601766178853;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.2029765213064089;  // std dev = 2,560, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.08891816586874314;  // std dev = 2,631, 39,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 6.927947486354468E-4;  // std dev = 7,466, 456,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=65 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2710772149822149;  // std dev = 4,134, 71,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=31 */
%   | | | else return -0.06788147800295216;  // std dev = 1,889, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | else return 0.15403705947574928;  // std dev = 0,467, 3.852,000 (wgt'ed) examples reached here.  /* #neg=2.619 #pos=1.233 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.44390163315705494;  // std dev = 1,090, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.19515588379650842;  // std dev = 2,286, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.05643521439579942;  // std dev = 2,788, 45,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return -0.012967165306886613;  // std dev = 7,524, 504,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=65 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12508489157752847;  // std dev = 0,464, 4.045,000 (wgt'ed) examples reached here.  /* #neg=2.777 #pos=1.268 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.22492575309951424;  // std dev = 2,301, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.021218251611521265;  // std dev = 6,637, 320,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=53 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.030473659757499594;  // std dev = 4,595, 213,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=24 */
%   | | | else return -0.14036347208318212;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11325276338236351;  // std dev = 0,467, 3.945,000 (wgt'ed) examples reached here.  /* #neg=2.677 #pos=1.268 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06890785415084459;  // std dev = 5,847, 200,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=44 */
%   | | | else return -0.021278167768631367;  // std dev = 3,867, 136,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.012122336058762352;  // std dev = 0,934, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.02960419155918931;  // std dev = 4,509, 209,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=23 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.41937983348246144;  // std dev = 2,787, 34,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | | | else return 0.01549355758986268;  // std dev = 3,592, 70,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else return 0.08875472499801533;  // std dev = 0,464, 3.888,000 (wgt'ed) examples reached here.  /* #neg=2.659 #pos=1.229 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.05688900712709942;  // std dev = 5,856, 203,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=44 */
%   | | | else return -0.030854597645017478;  // std dev = 3,900, 149,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=18 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.00923664603474994;  // std dev = 4,559, 189,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=24 */
%   | | | else return -0.1254846129578372;  // std dev = 0,033, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5268434403796509;  // std dev = 0,867, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.07381697854188594;  // std dev = 0,465, 3.982,000 (wgt'ed) examples reached here.  /* #neg=2.717 #pos=1.265 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.04133705463335763;  // std dev = 5,879, 212,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=44 */
%   | | | else return -0.04122016404856908;  // std dev = 3,930, 171,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=18 */
%   | | else return -0.005798294809540783;  // std dev = 0,335, 185,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05750136879238422;  // std dev = 0,464, 4.021,000 (wgt'ed) examples reached here.  /* #neg=2.753 #pos=1.268 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5728185667037602;  // std dev = 0,857, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06139857819895991;  // std dev = 2,526, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08542153969530085;  // std dev = 2,523, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return -0.005894698498169076;  // std dev = 7,443, 476,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=65 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9,88e-08, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05154411924241774;  // std dev = 0,466, 3.957,000 (wgt'ed) examples reached here.  /* #neg=2.689 #pos=1.268 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.2227713259103472;  // std dev = 2,192, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.005796089906984019;  // std dev = 6,591, 325,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=53 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.10423005269761311;  // std dev = 0,923, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -8.756525922803572E-5;  // std dev = 4,443, 172,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=23 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.043081370171119904;  // std dev = 0,467, 3.932,000 (wgt'ed) examples reached here.  /* #neg=2.664 #pos=1.268 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.16335205242766118;  // std dev = 1,258, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.029509854271530706;  // std dev = 2,547, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.042124090540861386;  // std dev = 2,540, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.008096740445946713;  // std dev = 7,455, 484,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=65 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.01867671042070727;  // std dev = 0,460, 4.136,000 (wgt'ed) examples reached here.  /* #neg=2.868 #pos=1.268 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.008646442598312412;  // std dev = 5,986, 232,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=44 */
%   | | | else return -0.038066737536053004;  // std dev = 3,850, 155,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.012641295322449592;  // std dev = 4,556, 196,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=24 */
%   | | | else return -0.11085458612602492;  // std dev = 0,029, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.697917
   AUC PR    = 0.28358
   CLL	      = -0.303355
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 247.583 seconds
Total inference time: 9.037 seconds
AUC ROC: 0.697917


Results scoring model
   AUC ROC   = 0.624961
   AUC PR    = 0.174242
   CLL	      = -0.327411
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147892
   F1        = 0.257675


Total scoring time: 56.186 seconds
Refined model CLL: -0.327411


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.697917
   AUC PR    = 0.28358
   CLL	      = -0.303355
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 333.49699999999996 seconds
Total inference time: 9.037 seconds
AUC ROC: 0.697917
Total revision time: 333.49699999999996
Best scored revision CLL: -0.327411


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:44:30
{'AUC PR': 0.28358, 'AUC ROC': 0.697917, 'Learning time': 333.49699999999996, 'F1': 0.413793, 'Inference time': 9.037, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'parameter_0.6': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Learning time': 19.408, 'F1': 0.413793, 'Inference time': 4.393, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.331461}, 'CLL': -0.303355}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20687283301134013;  // std dev = 0,477, 4.310,000 (wgt'ed) examples reached here.  /* #neg=2.807 #pos=1.503 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.26723984419042146;  // std dev = 0,492, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0.024815601766178853;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.049260046210622785;  // std dev = 5,898, 225,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=43 */
%   | | | else return -0.04925847230789508;  // std dev = 3,012, 108,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=10 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.050941973991396876;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.03247606490048779;  // std dev = 4,325, 192,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=21 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8310556187774805;  // std dev = 1,46e-07, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.16894438122251906;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0678977240406392;  // std dev = 3,706, 76,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | | else return -0.08070908710487201;  // std dev = 1,654, 34,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2991407251604594;  // std dev = 3,421, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | | else return 0.07243492912230878;  // std dev = 3,259, 58,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | else return 0.18974579509989867;  // std dev = 0,480, 3.970,000 (wgt'ed) examples reached here.  /* #neg=2.546 #pos=1.424 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.10966908099640368;  // std dev = 0,443, 40,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | else return 0.0010901694191898733;  // std dev = 0,349, 527,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=75 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7851497590888314;  // std dev = 0,064, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.16312390874682736;  // std dev = 3,888, 79,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
%   | | | else return -0.08435944304459513;  // std dev = 1,578, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | else return 0.16390463447123374;  // std dev = 0,480, 4.043,000 (wgt'ed) examples reached here.  /* #neg=2.583 #pos=1.460 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.8292588341626118;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return 0.205822542105374;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.15902301980876926;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.04126181781955923;  // std dev = 0,387, 287,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=53 */
%   | | else return -0.025174380912224747;  // std dev = 0,316, 195,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.6300367374112663;  // std dev = 0,084, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.3521129864187852;  // std dev = 2,133, 30,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return -0.024956011641822047;  // std dev = 3,257, 86,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=13 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.2674819030135046;  // std dev = 3,278, 43,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | | else return 0.054496362291739694;  // std dev = 3,220, 54,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | else return 0.13634468858969925;  // std dev = 0,480, 3.946,000 (wgt'ed) examples reached here.  /* #neg=2.522 #pos=1.424 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( haswordtitle(L, J) )
%   | | then return 0.2935037665632278;  // std dev = 0,493, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else return -0.049139158595835855;  // std dev = 0,298, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return 0.001812260747131786;  // std dev = 0,352, 515,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=75 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.48632854764756583;  // std dev = 0,231, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.22281188105832508;  // std dev = 3,328, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else return -0.07607126613655617;  // std dev = 0,253, 50,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | else return 0.10566315869832785;  // std dev = 0,478, 4.114,000 (wgt'ed) examples reached here.  /* #neg=2.654 #pos=1.460 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.7752640273228251;  // std dev = 1,686, 46,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | | else return -0.15642270094469538;  // std dev = 1,160, 163,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=1 */
%   | | else if ( haswordauthor(K, G) )
%   | | | then return 0.0967609622738993;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.05273650378607091;  // std dev = 3,019, 113,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=10 */
%   | else return -0.011767794116323062;  // std dev = 0,327, 192,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09041102178502076;  // std dev = 0,477, 4.176,000 (wgt'ed) examples reached here.  /* #neg=2.673 #pos=1.503 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return 0.04295952753360286;  // std dev = 0,350, 207,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=44 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.07274976149243986;  // std dev = 2,353, 80,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=8 */
%   | | | else return 0.009971437561353734;  // std dev = 2,924, 69,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.21036623919011466;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13176466739120685;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.012316140182941833;  // std dev = 0,327, 181,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07148388488729791;  // std dev = 0,477, 4.182,000 (wgt'ed) examples reached here.  /* #neg=2.679 #pos=1.503 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6523951369353219;  // std dev = 1,546, 45,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | | else return -0.135787612952703;  // std dev = 1,047, 152,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.13195148917779284;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.04479167875390066;  // std dev = 3,006, 116,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -7.107470878185688E-4;  // std dev = 4,399, 171,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=23 */
%   | | | else return -0.09235441686554748;  // std dev = 0,980, 25,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else return -0.13252309579533594;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.055688351256594805;  // std dev = 0,476, 4.199,000 (wgt'ed) examples reached here.  /* #neg=2.696 #pos=1.503 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.0275444523977158;  // std dev = 2,292, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.02290265738433951;  // std dev = 4,085, 268,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=41 */
%   | | else return 0.06080639305636035;  // std dev = 0,389, 61,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.12291593839071124;  // std dev = 0,862, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1253896433084635;  // std dev = 0,018, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.10816168868763108;  // std dev = 0,933, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.019317822510065717;  // std dev = 4,315, 188,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(A, C) )
%   | | then return 0.03368417979855362;  // std dev = 0,473, 3.940,000 (wgt'ed) examples reached here.  /* #neg=2.571 #pos=1.369 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6016116613076457;  // std dev = 1,133, 75,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=74 */
%   | | | else return -0.13067686490834318;  // std dev = 1,056, 184,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.21542898007725717;  // std dev = 0,284, 148,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=13 */
%   | | else if ( haswordvenue(A, C) )
%   | | | then return 0.3221525627318412;  // std dev = 4,220, 77,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=50 */
%   | | | else return 0.02049592806823983;  // std dev = 4,021, 122,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=23 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5927374675204773;  // std dev = 0,273, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return 0.1312246256383457;  // std dev = 0,836, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.0033633960406030524;  // std dev = 0,328, 180,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.02854011703426607;  // std dev = 0,471, 4.269,000 (wgt'ed) examples reached here.  /* #neg=2.766 #pos=1.503 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.3418768661986916;  // std dev = 0,875, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.03594407755117463;  // std dev = 1,295, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return -0.11634811127927067;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0021615130782860407;  // std dev = 5,726, 285,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=42 */
%   | | | else return -0.05347709764712694;  // std dev = 1,806, 89,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=10 */
%   | | else return -0.035136671473277634;  // std dev = 0,220, 129,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=22 */


Results
   AUC ROC   = 0.674368
   AUC PR    = 0.042529
   CLL	      = -0.335277
   Precision = 0.139535 at threshold = 0.5
   Recall    = 0.032609
   F1        = 0.052863


Total learning time: 2028.858 seconds
Total inference time: 16.314 seconds
AUC ROC: 0.674368


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 01:18:36
{'AUC PR': 0.042529, 'AUC ROC': 0.674368, 'Learning time': 2028.858, 'F1': 0.052863, 'Inference time': 16.314, 'Precision': [0.139535, 0.5], 'Recall': 0.032609, 'CLL': -0.335277}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21996886769459625;  // std dev = 0,481, 4.154,000 (wgt'ed) examples reached here.  /* #neg=2.651 #pos=1.503 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7730425521207887;  // std dev = 1,913, 47,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   | | | else return -0.13539945199726225;  // std dev = 0,997, 155,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.27920156667845974;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.05988385178573357;  // std dev = 3,030, 122,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.058148935099512175;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.02726773156715452;  // std dev = 0,319, 192,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=22 */


Results
   AUC ROC   = 0.621216
   AUC PR    = 0.019381
   CLL	      = -0.195135
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 64.19 seconds
Total inference time: 4.19 seconds
AUC ROC: 0.621216


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 01:19:45
{'AUC PR': 0.019381, 'AUC ROC': 0.621216, 'Learning time': 64.19, 'F1': nan, 'Inference time': 4.19, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.195135}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.15352550755498828;  // std dev = 35,693, 6.121,000 (wgt'ed) examples reached here.  /* #neg=4.313 #pos=1.808 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.13974733187228147;  // std dev = 35,541, 6.000,000 (wgt'ed) examples reached here.  /* #neg=4.192 #pos=1.808 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.11836011265793753;  // std dev = 35,581, 6.031,000 (wgt'ed) examples reached here.  /* #neg=4.223 #pos=1.808 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.09838615497648599;  // std dev = 35,625, 6.066,000 (wgt'ed) examples reached here.  /* #neg=4.258 #pos=1.808 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.08151237614409633;  // std dev = 35,642, 6.080,000 (wgt'ed) examples reached here.  /* #neg=4.272 #pos=1.808 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.06622707220208139;  // std dev = 35,672, 6.104,000 (wgt'ed) examples reached here.  /* #neg=4.296 #pos=1.808 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,53e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.04979793546223969;  // std dev = 35,785, 6.198,000 (wgt'ed) examples reached here.  /* #neg=4.390 #pos=1.808 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2,53e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.049273608208504224;  // std dev = 35,564, 6.018,000 (wgt'ed) examples reached here.  /* #neg=4.210 #pos=1.808 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.036049103866229136;  // std dev = 35,662, 6.096,000 (wgt'ed) examples reached here.  /* #neg=4.288 #pos=1.808 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080117;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else return 0.034393514436315074;  // std dev = 35,526, 5.988,000 (wgt'ed) examples reached here.  /* #neg=4.180 #pos=1.808 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.328282
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 23.948 seconds
Total inference time: 4.626 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.573384
   AUC PR    = 0.164985
   CLL	      = -0.330291
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.146767
   F1        = 0.255967


Total scoring time: 13.232 seconds
Parameter learned model CLL: -0.330291


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.693, 4313, 1808], 'true': [1.05e-06, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.541, 4192, 1808], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.581, 4223, 1808], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.625, 4258, 1808], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.642, 4272, 1808], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.672, 4296, 1808], 'true': [3.67e-07, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.785, 4390, 1808], 'true': [2.53e-07, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.564, 4210, 1808], 'true': [2.53e-07, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.662, 4288, 1808], 'true': [0.0, 0, 311]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [35.526, 4180, 1808], 'true': [0.0, 0, 311]}]]
[{'': [3.5641371954525925e-15, 0.20812925289987194]}, {'': [-4.93495919370359e-15, 0.21053155555555994]}, {'': [-2.2847033304183284e-16, 0.20991373234637986]}, {'': [-8.453402322547816e-16, 0.20921810844525837]}, {'': [-3.6555253286693257e-16, 0.20894044321332314]}, {'': [4.3409363277948243e-16, 0.20846523947505846]}, {'': [2.0562329973764956e-16, 0.20661402709191615]}, {'': [2.0562329973764956e-16, 0.210172628232566]}, {'': [-2.1704681638974121e-16, 0.20862352835813386]}, {'': [-1.7420862894439756e-16, 0.21077113032572484]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,05e-06, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1721326146247297;  // std dev = 0,464, 5.392,000 (wgt'ed) examples reached here.  /* #neg=3.699 #pos=1.693 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2002541982574071;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.039967116917694;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.13474467978036342;  // std dev = 3,067, 47,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.004627090137081045;  // std dev = 8,664, 634,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=87 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15262190361056133;  // std dev = 0,465, 5.345,000 (wgt'ed) examples reached here.  /* #neg=3.652 #pos=1.693 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.07674313795029619;  // std dev = 6,827, 272,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=60 */
%   | | | else return -0.023144761061652756;  // std dev = 4,545, 195,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02195997254218726;  // std dev = 5,224, 257,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=31 */
%   | | | else return -0.1451664992603811;  // std dev = 0,023, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3138533644853326;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | | else return 0.04641150402021628;  // std dev = 3,918, 86,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
%   | | else return 0.1326714049207983;  // std dev = 0,466, 5.144,000 (wgt'ed) examples reached here.  /* #neg=3.504 #pos=1.640 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.18385576026886602;  // std dev = 2,911, 37,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return -0.027665481958206884;  // std dev = 1,331, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0243387909128199;  // std dev = 7,631, 412,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=71 */
%   | | | else return -0.022167208341432414;  // std dev = 5,060, 248,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=29 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11445206933020216;  // std dev = 0,467, 5.263,000 (wgt'ed) examples reached here.  /* #neg=3.570 #pos=1.693 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20079403219835096;  // std dev = 2,808, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return -0.041726950743553926;  // std dev = 1,344, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.06889343898081403;  // std dev = 3,135, 55,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return -0.008039103902231459;  // std dev = 8,646, 641,000 (wgt'ed) examples reached here.  /* #neg=554 #pos=87 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08965136034711256;  // std dev = 0,465, 5.352,000 (wgt'ed) examples reached here.  /* #neg=3.659 #pos=1.693 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06753607809739563;  // std dev = 6,808, 264,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=60 */
%   | | | else return -0.038824248468145424;  // std dev = 4,483, 206,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01187516427821415;  // std dev = 5,211, 250,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=31 */
%   | | | else return -0.12643623553383304;  // std dev = 0,031, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07346504095894983;  // std dev = 0,465, 5.353,000 (wgt'ed) examples reached here.  /* #neg=3.660 #pos=1.693 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.015903988953311132;  // std dev = 7,586, 520,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=68 */
%   | | | else return 0.05561512224776321;  // std dev = 3,315, 64,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.17882202232409417;  // std dev = 0,171, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.04681933455981609;  // std dev = 5,085, 162,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=33 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,53e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.07026930536317245;  // std dev = 5,563, 144,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
%   | | | else return 0.7493163823671077;  // std dev = 0,047, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.05710161799871898;  // std dev = 0,464, 5.232,000 (wgt'ed) examples reached here.  /* #neg=3.592 #pos=1.640 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.05356922648764956;  // std dev = 6,801, 265,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=60 */
%   | | | else return -0.031865455841888615;  // std dev = 4,492, 203,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0224398539293621;  // std dev = 5,252, 281,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=31 */
%   | | | else return -0.1117779790352933;  // std dev = 0,037, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2,53e-07, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.047082464928654144;  // std dev = 0,464, 5.377,000 (wgt'ed) examples reached here.  /* #neg=3.684 #pos=1.693 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05478770300113045;  // std dev = 6,759, 255,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=60 */
%   | | | else return -0.018479189352933568;  // std dev = 4,458, 192,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.011604521437549562;  // std dev = 5,228, 261,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=31 */
%   | | | else return -0.10628527983914515;  // std dev = 0,028, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.16568491801638102;  // std dev = 4,104, 68,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=33 */
%   | | | else return -0.06232096478997238;  // std dev = 3,874, 97,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=20 */
%   | | else return 0.04316142828349009;  // std dev = 0,466, 5.127,000 (wgt'ed) examples reached here.  /* #neg=3.487 #pos=1.640 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.24599213491597935;  // std dev = 1,489, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.07918595059973096;  // std dev = 2,774, 39,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 1.8629666354783166E-4;  // std dev = 7,601, 491,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=69 */
%   | | | else return -0.015036425786937781;  // std dev = 5,059, 193,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=31 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080117;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #pos=311 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.031565717672052795;  // std dev = 0,465, 5.336,000 (wgt'ed) examples reached here.  /* #neg=3.643 #pos=1.693 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.025600209178718393;  // std dev = 6,868, 360,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=58 */
%   | | | else return -0.019177387034849898;  // std dev = 4,388, 151,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=24 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.006530034021808898;  // std dev = 5,190, 190,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=33 */
%   | | | else return -0.09906738252840075;  // std dev = 0,036, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.697107
   AUC PR    = 0.286151
   CLL	      = -0.305354
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 278.59000000000003 seconds
Total inference time: 9.915 seconds
AUC ROC: 0.697107


Results scoring model
   AUC ROC   = 0.616658
   AUC PR    = 0.172288
   CLL	      = -0.328613
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147239
   F1        = 0.256684


Total scoring time: 65.583 seconds
Refined model CLL: -0.328613


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.697107
   AUC PR    = 0.286151
   CLL	      = -0.305354
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 381.35300000000007 seconds
Total inference time: 9.915 seconds
AUC ROC: 0.697107
Total revision time: 381.35300000000007
Best scored revision CLL: -0.328613


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 01:26:23
{'AUC PR': 0.286151, 'AUC ROC': 0.697107, 'parameter_0.8': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Learning time': 23.948, 'F1': 0.413793, 'Inference time': 4.626, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.328282}, 'Learning time': 381.35300000000007, 'F1': 0.413793, 'Inference time': 9.915, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.305354}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21034577165486743;  // std dev = 0,478, 5.690,000 (wgt'ed) examples reached here.  /* #neg=3.686 #pos=2.004 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.25208832903890627;  // std dev = 0,489, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.07829818883085606;  // std dev = 6,783, 268,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=59 */
%   | | | else return -0.07042249347191623;  // std dev = 3,338, 168,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.005487428536851904;  // std dev = 5,090, 220,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=30 */
%   | | | else return -0.1180415410909639;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.7472341165224025;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.2701278894161748;  // std dev = 4,735, 91,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=40 */
%   | | else return -0.0641693922495272;  // std dev = 0,307, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | else return 0.1899251464228089;  // std dev = 0,480, 5.418,000 (wgt'ed) examples reached here.  /* #neg=3.471 #pos=1.947 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), venue(K, B) )
%   | | | then return 0.10157620097980807;  // std dev = 1,209, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.13354664867342458;  // std dev = 2,790, 39,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else return -0.012241897419767837;  // std dev = 0,338, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.015280011750650645;  // std dev = 0,368, 429,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=70 */
%   | | else return -0.025741624345880742;  // std dev = 0,316, 266,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=30 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15847662249491817;  // std dev = 0,478, 5.624,000 (wgt'ed) examples reached here.  /* #neg=3.620 #pos=2.004 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8388277575281127;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16518754773891164;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11615165243342368;  // std dev = 2,787, 39,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.16185422153080486;  // std dev = 0,029, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.01795097686067445;  // std dev = 6,906, 452,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=55 */
%   | | | else return 0.04262470724927315;  // std dev = 3,351, 72,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
%   | | else return 0.04022450359600565;  // std dev = 0,394, 161,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1207016495176897;  // std dev = 0,475, 5.809,000 (wgt'ed) examples reached here.  /* #neg=3.805 #pos=2.004 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.13947091325347297;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.15288713285658462;  // std dev = 2,794, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.06150502648110383;  // std dev = 6,721, 264,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=59 */
%   | | | else return -0.055800213172182596;  // std dev = 3,331, 152,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.002922062160283565;  // std dev = 5,055, 215,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=30 */
%   | | | else return -0.10573725844159784;  // std dev = 0,997, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | else return -0.12704216841840688;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10924045393797509;  // std dev = 0,478, 5.641,000 (wgt'ed) examples reached here.  /* #neg=3.637 #pos=2.004 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.17505441288716536;  // std dev = 0,480, 34,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.1449708646553852;  // std dev = 1,203, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.14828962153331682;  // std dev = 0,076, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0540562092854444;  // std dev = 6,715, 263,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=59 */
%   | | | else return -0.06009743115025583;  // std dev = 3,349, 177,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02215026607124223;  // std dev = 5,041, 258,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=29 */
%   | | | else return -0.11360749752906384;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09008929460909999;  // std dev = 0,479, 5.614,000 (wgt'ed) examples reached here.  /* #neg=3.610 #pos=2.004 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7971577371899833;  // std dev = 1,005, 60,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | | | else return -0.17315541594093073;  // std dev = 1,037, 214,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.054958649111491356;  // std dev = 3,005, 118,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=12 */
%   | | | else return 0.019970278924359656;  // std dev = 3,214, 85,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=12 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.003612950580567259;  // std dev = 5,075, 229,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=30 */
%   | | | else return -0.08966741662573244;  // std dev = 0,996, 37,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
%   | | else return -0.10265948622058119;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07565634090570841;  // std dev = 0,480, 5.560,000 (wgt'ed) examples reached here.  /* #neg=3.556 #pos=2.004 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return -0.020813844186862163;  // std dev = 0,655, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1643390939059204;  // std dev = 2,667, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.5128402937204181;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11352232532869709;  // std dev = 0,048, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02870884672330328;  // std dev = 5,616, 262,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=59 */
%   | | | else return -0.046692898612434905;  // std dev = 3,327, 163,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.013211494215609805;  // std dev = 5,020, 251,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=29 */
%   | | | else return -0.09172868464971412;  // std dev = 0,014, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03879783891713405;  // std dev = 0,473, 5.396,000 (wgt'ed) examples reached here.  /* #neg=3.566 #pos=1.830 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7335824970676582;  // std dev = 2,129, 99,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=94 */
%   | | | else return -0.13425747317079378;  // std dev = 1,208, 348,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=1 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.13544441890665673;  // std dev = 3,984, 115,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=19 */
%   | | | else return -0.038629374235611254;  // std dev = 1,103, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.39250402632340003;  // std dev = 4,399, 92,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=64 */
%   | | | else return 0.06573011601678867;  // std dev = 4,188, 123,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5763859459838859;  // std dev = 0,332, 48,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=42 */
%   | else return -0.0032325958887988973;  // std dev = 0,316, 181,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=33 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04655163679431068;  // std dev = 0,475, 5.601,000 (wgt'ed) examples reached here.  /* #neg=3.597 #pos=2.004 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return -0.07568039234862273;  // std dev = 0,685, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17541769837531487;  // std dev = 1,969, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return -0.011197904786486742;  // std dev = 0,236, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.01186705574853252;  // std dev = 5,846, 420,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=53 */
%   | | | else return 0.03459807028849637;  // std dev = 2,689, 59,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008569567514935374;  // std dev = 4,215, 167,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=33 */
%   | | | else return -0.08387543538020821;  // std dev = 0,013, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03314487010990126;  // std dev = 0,476, 5.216,000 (wgt'ed) examples reached here.  /* #neg=3.386 #pos=1.830 */
%   | | else return 0.04272136173376153;  // std dev = 0,325, 421,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=94 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.17792643824600826;  // std dev = 0,294, 217,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=22 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.30829765011647925;  // std dev = 4,286, 90,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=64 */
%   | | | else return 0.035889168709745824;  // std dev = 4,155, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.3908128892194868;  // std dev = 2,047, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | | else return 0.21546737231850618;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5595310694118496;  // std dev = 0,059, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.009767527725555667;  // std dev = 0,323, 169,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=33 */


Results
   AUC ROC   = 0.684785
   AUC PR    = 0.053903
   CLL	      = -0.334323
   Precision = 0.283582 at threshold = 0.5
   Recall    = 0.05163
   F1        = 0.087356


Total learning time: 3639.16 seconds
Total inference time: 19.376 seconds
AUC ROC: 0.684785


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 02:27:22
{'AUC PR': 0.053903, 'AUC ROC': 0.684785, 'Learning time': 3639.16, 'F1': 0.087356, 'Inference time': 19.376, 'Precision': [0.283582, 0.5], 'Recall': 0.05163, 'CLL': -0.334323}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.05133075328133056;  // std dev = 3,703, 88,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */
%   | else return 0.20794169055093983;  // std dev = 0,477, 5.549,000 (wgt'ed) examples reached here.  /* #neg=3.608 #pos=1.941 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.7800239350995126;  // std dev = 2,147, 64,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=59 */
%   | | | else return -0.1369005698509834;  // std dev = 0,998, 202,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=1 */
%   | | else if ( haswordauthor(M, I) )
%   | | | then return 0.30259337954395676;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return -0.06492798797741073;  // std dev = 3,328, 156,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=12 */
%   | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | then if ( title(Q, P), venue(Q, B) )
%   | | | then return -0.013095700093621283;  // std dev = 5,112, 233,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=30 */
%   | | | else return -0.12057446915580684;  // std dev = 0,989, 47,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.623685
   AUC PR    = 0.027763
   CLL	      = -0.193444
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 112.571 seconds
Total inference time: 4.906 seconds
AUC ROC: 0.623685


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 02:29:20
{'AUC PR': 0.027763, 'AUC ROC': 0.623685, 'Learning time': 112.571, 'F1': nan, 'Inference time': 4.906, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.193444}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,58e-06, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1528058235227654;  // std dev = 39,837, 7.636,000 (wgt'ed) examples reached here.  /* #neg=5.386 #pos=2.250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.13359344189651992;  // std dev = 39,825, 7.625,000 (wgt'ed) examples reached here.  /* #neg=5.375 #pos=2.250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.11804229262153251;  // std dev = 39,730, 7.539,000 (wgt'ed) examples reached here.  /* #neg=5.289 #pos=2.250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.09675372484725825;  // std dev = 39,820, 7.620,000 (wgt'ed) examples reached here.  /* #neg=5.370 #pos=2.250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.0824675232489068;  // std dev = 39,776, 7.580,000 (wgt'ed) examples reached here.  /* #neg=5.330 #pos=2.250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,58e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06911612497604613;  // std dev = 39,751, 7.558,000 (wgt'ed) examples reached here.  /* #neg=5.308 #pos=2.250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.0573323234535781;  // std dev = 39,734, 7.542,000 (wgt'ed) examples reached here.  /* #neg=5.292 #pos=2.250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1,93e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.04688803655808513;  // std dev = 39,728, 7.537,000 (wgt'ed) examples reached here.  /* #neg=5.287 #pos=2.250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03779749636618784;  // std dev = 39,732, 7.541,000 (wgt'ed) examples reached here.  /* #neg=5.291 #pos=2.250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.027860564004967524;  // std dev = 39,806, 7.607,000 (wgt'ed) examples reached here.  /* #neg=5.357 #pos=2.250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.327061
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 32.424 seconds
Total inference time: 4.292 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.329024
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 14.874 seconds
Parameter learned model CLL: -0.329024


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.837, 5386, 2250], 'true': [1.58e-06, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.825, 5375, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.73, 5289, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.82, 5370, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.776, 5330, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.751, 5308, 2250], 'true': [4.58e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.734, 5292, 2250], 'true': [2.46e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.728, 5287, 2250], 'true': [1.93e-07, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.732, 5291, 2250], 'true': [0.0, 0, 399]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [39.806, 5357, 2250], 'true': [0.0, 0, 399]}]]
[{'': [6.268447192670558e-15, 0.20783420652791587]}, {'': [-5.342426584662407e-15, 0.2080085998386964]}, {'': [-1.2109500258568123e-15, 0.20937681952769424]}, {'': [-1.887657393247384e-15, 0.20808791617585892]}, {'': [-1.6383441526298048e-15, 0.20872348424195417]}, {'': [5.2533861415847e-16, 0.20907382135273567]}, {'': [1.5136875323210153e-16, 0.20932895119076847]}, {'': [9.349246523159212e-17, 0.20940873724909778]}, {'': [-2.62669307079235e-16, 0.20934490620261587]}, {'': [-3.227716061566871e-16, 0.20829427428658992]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,58e-06, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17745624179858052;  // std dev = 0,466, 6.583,000 (wgt'ed) examples reached here.  /* #neg=4.481 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.07140541924936927;  // std dev = 7,630, 347,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=74 */
%   | | | else return -0.020757314900488228;  // std dev = 5,220, 256,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.050941973991396876;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.008939672495424884;  // std dev = 6,035, 316,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=42 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15867958519140588;  // std dev = 0,468, 6.497,000 (wgt'ed) examples reached here.  /* #neg=4.395 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.07553225762471147;  // std dev = 7,567, 327,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=74 */
%   | | | else return -0.024528211176980484;  // std dev = 5,238, 270,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.004357831843395933;  // std dev = 6,093, 316,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=43 */
%   | | | else return -0.14026592590559134;  // std dev = 0,005, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.33843876809425544;  // std dev = 4,353, 76,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=40 */
%   | | | else return 0.04148077678570801;  // std dev = 4,389, 109,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=25 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.12176764867133294;  // std dev = 6,489, 197,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=61 */
%   | | | else return 0.13088406911908887;  // std dev = 36,690, 6.199,000 (wgt'ed) examples reached here.  /* #neg=4.223 #pos=1.976 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.2514489002683557;  // std dev = 3,120, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return -0.05904194906317806;  // std dev = 1,361, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.12421678697671366;  // std dev = 3,370, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return -0.0032723703170472063;  // std dev = 9,846, 798,000 (wgt'ed) examples reached here.  /* #neg=684 #pos=114 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2608879853426771;  // std dev = 5,558, 124,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=58 */
%   | | | else return -0.1322950648820796;  // std dev = 2,536, 93,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=7 */
%   | | else return 0.10652352563399782;  // std dev = 0,464, 6.459,000 (wgt'ed) examples reached here.  /* #neg=4.422 #pos=2.037 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.398556114380141;  // std dev = 1,322, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.055495299850536216;  // std dev = 3,255, 62,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.16613588252089626;  // std dev = 3,257, 49,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return -0.0014773273413089443;  // std dev = 9,837, 791,000 (wgt'ed) examples reached here.  /* #neg=677 #pos=114 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08980939280532908;  // std dev = 0,465, 6.631,000 (wgt'ed) examples reached here.  /* #neg=4.529 #pos=2.102 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06327471309274171;  // std dev = 7,536, 322,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=74 */
%   | | | else return -0.016556203576147014;  // std dev = 5,108, 237,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.10588482411018614;  // std dev = 0,925, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.015679275557041503;  // std dev = 6,062, 338,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,58e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2871893444670184;  // std dev = 4,201, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return -0.04768788263804766;  // std dev = 4,393, 128,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.08751887851282324;  // std dev = 6,260, 179,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=61 */
%   | | | else return 0.0664419514281973;  // std dev = 36,941, 6.387,000 (wgt'ed) examples reached here.  /* #neg=4.411 #pos=1.976 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.15918079871897003;  // std dev = 3,206, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return -0.04362970472114667;  // std dev = 1,339, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.05630758929308209;  // std dev = 3,425, 64,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return 0.001841902594809547;  // std dev = 9,802, 759,000 (wgt'ed) examples reached here.  /* #neg=645 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24128860104773261;  // std dev = 4,172, 79,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=42 */
%   | | | else return -0.07485429837059333;  // std dev = 4,345, 137,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=23 */
%   | | else return 0.07020292035456648;  // std dev = 0,468, 6.250,000 (wgt'ed) examples reached here.  /* #neg=4.213 #pos=2.037 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.11026861395711193;  // std dev = 3,270, 52,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return -0.03801255198120552;  // std dev = 1,199, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0023159233645672897;  // std dev = 8,637, 626,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=89 */
%   | | | else return 0.00831425928344261;  // std dev = 5,802, 235,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1,93e-07, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03880031214186982;  // std dev = 36,478, 6.280,000 (wgt'ed) examples reached here.  /* #neg=4.345 #pos=1.935 */
%   | | | else return 0.07459966204556752;  // std dev = 9,133, 517,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=120 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.14845065913818892;  // std dev = 4,968, 281,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=28 */
%   | | | else return 0.13801055646368;  // std dev = 7,353, 254,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=90 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.5607352020298119;  // std dev = 0,376, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.03486004048765434;  // std dev = 5,817, 210,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=43 */
%   | | | else return -0.1235235066816689;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.010646266354571911;  // std dev = 6,099, 217,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=59 */
%   | | | else return 0.7029281687869107;  // std dev = 0,150, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.039592329790029926;  // std dev = 0,463, 6.440,000 (wgt'ed) examples reached here.  /* #neg=4.403 #pos=2.037 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.16244721782798807;  // std dev = 3,087, 40,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return -0.08798668317074297;  // std dev = 1,378, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.021355949488659952;  // std dev = 8,611, 652,000 (wgt'ed) examples reached here.  /* #neg=564 #pos=88 */
%   | | | else return 0.014543316475277415;  // std dev = 5,803, 228,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.14649705266973126;  // std dev = 4,222, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return -0.0720412400386929;  // std dev = 4,312, 143,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.05382800085937331;  // std dev = 6,148, 175,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=61 */
%   | | | else return 0.031385732041743594;  // std dev = 36,655, 6.258,000 (wgt'ed) examples reached here.  /* #neg=4.282 #pos=1.976 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.01247388140513726;  // std dev = 8,493, 601,000 (wgt'ed) examples reached here.  /* #neg=513 #pos=88 */
%   | | | else return 0.015137028049442442;  // std dev = 3,696, 85,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return -0.14430406008553426;  // std dev = 0,910, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.017029961082608226;  // std dev = 5,789, 221,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=42 */


Results
   AUC ROC   = 0.725866
   AUC PR    = 0.307283
   CLL	      = -0.303303
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 1294.551 seconds
Total inference time: 12.125 seconds
AUC ROC: 0.725866


Results scoring model
   AUC ROC   = 0.651749
   AUC PR    = 0.188576
   CLL	      = -0.326608
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.151378
   F1        = 0.262951


Total scoring time: 239.429 seconds
Refined model CLL: -0.326608


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.725866
   AUC PR    = 0.307283
   CLL	      = -0.303303
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 1581.278 seconds
Total inference time: 12.125 seconds
AUC ROC: 0.725866
Total revision time: 1581.278
Best scored revision CLL: -0.326608


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 02:56:00
{'AUC PR': 0.307283, 'AUC ROC': 0.725866, 'Learning time': 1581.278, 'F1': 0.413793, 'Inference time': 12.125, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'parameter_1.0': {'AUC PR': 0.280066, 'AUC ROC': 0.630435, 'Learning time': 32.424, 'F1': 0.413793, 'Inference time': 4.292, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'CLL': -0.327061}, 'CLL': -0.303303}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21733319475770044;  // std dev = 0,480, 6.963,000 (wgt'ed) examples reached here.  /* #neg=4.462 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.20814893509951235;  // std dev = 3,017, 40,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.009775593202374403;  // std dev = 6,972, 424,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=56 */
%   | | | else return 0.050920019436860794;  // std dev = 5,082, 166,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=32 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06302698387999935;  // std dev = 5,779, 205,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=42 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1858496773875002;  // std dev = 0,479, 7.020,000 (wgt'ed) examples reached here.  /* #neg=4.519 #pos=2.501 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.039949499220760624;  // std dev = 1,259, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.13640147302560207;  // std dev = 3,139, 49,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else return -0.012751462076996367;  // std dev = 0,339, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.021608623097874015;  // std dev = 7,704, 438,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=72 */
%   | | | else return -0.03827104412229922;  // std dev = 3,885, 158,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04310261244773841;  // std dev = 5,740, 212,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=41 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.701678328991681;  // std dev = 0,300, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.30817183548518745;  // std dev = 4,387, 77,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=39 */
%   | | | else return -0.0018930995797476183;  // std dev = 4,205, 112,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=22 */
%   | else return 0.15340647305217558;  // std dev = 0,478, 6.886,000 (wgt'ed) examples reached here.  /* #neg=4.464 #pos=2.422 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), venue(K, B) )
%   | | | then return 0.17256818046453526;  // std dev = 1,156, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.22202708420275977;  // std dev = 2,895, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else if ( author(L, I), venue(L, B) )
%   | | | then return 0.5185847139134736;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1433704360596932;  // std dev = 0,022, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.004072683870955505;  // std dev = 0,357, 856,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=130 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13466301029648192;  // std dev = 0,479, 6.971,000 (wgt'ed) examples reached here.  /* #neg=4.470 #pos=2.501 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7946386760566488;  // std dev = 0,047, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1760862269630102;  // std dev = 0,027, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11219962535041902;  // std dev = 3,070, 45,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return -0.12927963742660656;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.21136414672505144;  // std dev = 2,923, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return -0.0053015160851813655;  // std dev = 7,951, 513,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=74 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01199163001184766;  // std dev = 6,009, 318,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=42 */
%   | | | else return -0.11272307208757672;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7122161687475549;  // std dev = 0,180, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.2780846585189583;  // std dev = 7,30e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.1570510781716769;  // std dev = 1,868, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | | | else return 0.10507855055831183;  // std dev = 4,276, 90,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | else return 0.10444286708162177;  // std dev = 0,478, 6.870,000 (wgt'ed) examples reached here.  /* #neg=4.448 #pos=2.422 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then return 0.24330256235408218;  // std dev = 0,394, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( author(L, J), venue(L, A) )
%   | | | then return -0.17569548004878405;  // std dev = 0,074, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07605709716782623;  // std dev = 3,088, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else return 0.0014308071457154617;  // std dev = 0,354, 867,000 (wgt'ed) examples reached here.  /* #neg=737 #pos=130 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08851251480604061;  // std dev = 0,477, 7.004,000 (wgt'ed) examples reached here.  /* #neg=4.503 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.14522710861471014;  // std dev = 0,472, 44,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.2552350348011243;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12740018587943497;  // std dev = 0,003, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.026573626947724773;  // std dev = 7,013, 478,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=56 */
%   | | | else return 0.025868103083385822;  // std dev = 5,013, 169,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=32 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.025395466393383265;  // std dev = 5,787, 230,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=42 */
%   | | | else return -0.10206248272848696;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6662338012148858;  // std dev = 1,096, 45,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | | else return -0.28581602499897035;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.09332417518420516;  // std dev = 4,596, 144,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=29 */
%   | | | else return 0.6479443222473816;  // std dev = 0,253, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.13777701685555752;  // std dev = 3,528, 79,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=39 */
%   | | | else return -0.03011730894752144;  // std dev = 4,117, 107,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
%   | | else return 0.06863525859210648;  // std dev = 0,478, 6.661,000 (wgt'ed) examples reached here.  /* #neg=4.300 #pos=2.361 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.022749849179891556;  // std dev = 0,379, 569,000 (wgt'ed) examples reached here.  /* #neg=464 #pos=105 */
%   | else return -0.015458150333668623;  // std dev = 0,327, 344,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=43 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.042145243787541586;  // std dev = 0,471, 6.666,000 (wgt'ed) examples reached here.  /* #neg=4.385 #pos=2.281 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7146662113677186;  // std dev = 2,849, 126,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=118 */
%   | | | else return -0.1469458268453134;  // std dev = 1,509, 410,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=2 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1663043928512834;  // std dev = 0,299, 274,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=28 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.34608670313655937;  // std dev = 5,267, 122,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=79 */
%   | | | else return 0.05819428157963206;  // std dev = 5,515, 172,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=43 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5336370233670785;  // std dev = 0,361, 65,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.037023522269729985;  // std dev = 0,398, 211,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=43 */
%   | | else return -0.09178469419814571;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05415175066877471;  // std dev = 0,474, 6.846,000 (wgt'ed) examples reached here.  /* #neg=4.345 #pos=2.501 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return -0.004453975185371422;  // std dev = 0,697, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.049154652165205266;  // std dev = 3,070, 48,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.009717784158544514;  // std dev = 6,642, 445,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=72 */
%   | | | else return -0.03549557019601002;  // std dev = 3,857, 153,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.030285871517655095;  // std dev = 5,642, 203,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=41 */
%   | | | else return -0.06527149249927519;  // std dev = 1,340, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.08474569930079692;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03266071569439242;  // std dev = 0,474, 6.456,000 (wgt'ed) examples reached here.  /* #neg=4.175 #pos=2.281 */
%   | | else return 0.0442276553934537;  // std dev = 0,336, 508,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=120 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.1568261148846301;  // std dev = 0,294, 287,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=28 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3464499269880197;  // std dev = 4,538, 107,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=79 */
%   | | | else return 0.06339883755794579;  // std dev = 5,414, 164,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=43 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.46796057716092576;  // std dev = 0,279, 60,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=55 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.04148727809219425;  // std dev = 5,583, 188,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=41 */
%   | | | else return -0.07422431516380713;  // std dev = 1,358, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else return -0.07830332201777004;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.659707
   AUC PR    = 0.050107
   CLL	      = -0.338761
   Precision = 0.268657 at threshold = 0.5
   Recall    = 0.048913
   F1        = 0.082759


Total learning time: 4252.385 seconds
Total inference time: 19.378 seconds
AUC ROC: 0.659707


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 04:07:13
{'AUC PR': 0.050107, 'AUC ROC': 0.659707, 'Learning time': 4252.385, 'F1': 0.082759, 'Inference time': 19.378, 'Precision': [0.268657, 0.5], 'Recall': 0.048913, 'CLL': -0.338761}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21330372067178774;  // std dev = 0,479, 7.042,000 (wgt'ed) examples reached here.  /* #neg=4.541 #pos=2.501 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.15602127552504427;  // std dev = 3,135, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.06504548682365113;  // std dev = 7,557, 348,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=72 */
%   | | | else return -0.059725461035753345;  // std dev = 3,950, 207,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.004577506528083151;  // std dev = 5,916, 280,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=41 */
%   | | | else return -0.09307057709560969;  // std dev = 1,379, 41,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.598446
   AUC PR    = 0.014214
   CLL	      = -0.196296
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 51.263 seconds
Total inference time: 4.259 seconds
AUC ROC: 0.598446


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 04:08:09
{'AUC PR': 0.014214, 'AUC ROC': 0.598446, 'Learning time': 51.263, 'F1': nan, 'Inference time': 4.259, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.196296}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 185871

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 64082

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099512;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.13930158307458532;  // std dev = 16,109, 1.284,000 (wgt'ed) examples reached here.  /* #neg=923 #pos=361 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109536;  // std dev = 2,92e-07, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.11909621370565204;  // std dev = 16,136, 1.295,000 (wgt'ed) examples reached here.  /* #neg=934 #pos=361 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,86e-07, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.11342464452847718;  // std dev = 16,013, 1.246,000 (wgt'ed) examples reached here.  /* #neg=885 #pos=361 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831014;  // std dev = 1,63e-07, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.08516658218837742;  // std dev = 16,138, 1.296,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=361 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.06961301185303796;  // std dev = 16,160, 1.305,000 (wgt'ed) examples reached here.  /* #neg=944 #pos=361 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.07268787173302449;  // std dev = 15,994, 1.239,000 (wgt'ed) examples reached here.  /* #neg=878 #pos=361 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 9,66e-08, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.0684849680370547;  // std dev = 15,898, 1.204,000 (wgt'ed) examples reached here.  /* #neg=843 #pos=361 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9,42e-08, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.04389870659768222;  // std dev = 16,036, 1.255,000 (wgt'ed) examples reached here.  /* #neg=894 #pos=361 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.03571584666451843;  // std dev = 16,036, 1.255,000 (wgt'ed) examples reached here.  /* #neg=894 #pos=361 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,96e-08, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.022867149053564125;  // std dev = 16,104, 1.282,000 (wgt'ed) examples reached here.  /* #neg=921 #pos=361 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.315672
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 4.761 seconds
Total inference time: 5.672 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.597996
   AUC PR    = 0.21523
   CLL	      = -0.314812
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.195991
   F1        = 0.327747


Total scoring time: 5.418 seconds
Parameter learned model CLL: -0.314812


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.109, 923, 361], 'true': [0.0, 0, 88]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.136, 934, 361], 'true': [2.92e-07, 0, 88]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.013, 885, 361], 'true': [3.86e-07, 0, 88]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.138, 935, 361], 'true': [1.63e-07, 0, 88]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.16, 944, 361], 'true': [0.0, 0, 88]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.994, 878, 361], 'true': [0.0, 0, 88]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.898, 843, 361], 'true': [9.66e-08, 0, 88]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.036, 894, 361], 'true': [9.42e-08, 0, 88]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.036, 894, 361], 'true': [0.0, 0, 88]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.104, 921, 361], 'true': [5.96e-08, 0, 88]}]]
[{'': [0.0, 0.2021058365116608]}, {'': [9.689219124001365e-16, 0.20105484414362904]}, {'': [1.6956133467002392e-15, 0.2057853187986438]}, {'': [3.0278809762504267e-16, 0.20095962410455215]}, {'': [-3.431598439750484e-16, 0.2001051070888628]}, {'': [-4.0371746350005693e-17, 0.20647102085112215]}, {'': [1.0597583416876495e-16, 0.20993352722375969]}, {'': [1.0092936587501423e-16, 0.20490722369485886]}, {'': [-7.065055611250996e-17, 0.2049072236948568]}, {'': [4.0371746350005693e-17, 0.20229762388622718]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099512;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.14386322081379807;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.15675358626229818;  // std dev = 0,458, 1.075,000 (wgt'ed) examples reached here.  /* #neg=754 #pos=321 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.08672036367094095;  // std dev = 3,513, 70,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | | else return -0.014578337627760417;  // std dev = 2,472, 55,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.06076998381940661;  // std dev = 2,348, 74,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109536;  // std dev = 2,92e-07, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1339420267116762;  // std dev = 0,456, 1.121,000 (wgt'ed) examples reached here.  /* #neg=789 #pos=332 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.2586489865658562;  // std dev = 1,544, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06050183971702751;  // std dev = 3,869, 91,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=19 */
%   | | else return -0.0486370810032836;  // std dev = 0,280, 70,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,86e-07, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11424083063657361;  // std dev = 0,456, 1.123,000 (wgt'ed) examples reached here.  /* #neg=791 #pos=332 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.10048774966361063;  // std dev = 0,890, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09938774083837987;  // std dev = 1,480, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.26836634005977733;  // std dev = 1,486, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.013259411402496547;  // std dev = 4,249, 158,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=21 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831014;  // std dev = 1,63e-07, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10441350843328012;  // std dev = 2,506, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.41573850612284396;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1133527336120943;  // std dev = 0,463, 1.029,000 (wgt'ed) examples reached here.  /* #neg=708 #pos=321 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03027644396096969;  // std dev = 3,986, 101,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=20 */
%   | | | else return 0.2291260524323575;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.05673021015707726;  // std dev = 2,360, 82,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=6 */
%   | | | else return -0.1188100137071637;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.07214451154333022;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.20705261478880402;  // std dev = 1,172, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09348625732550173;  // std dev = 0,463, 1.033,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=321 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.10363498358794478;  // std dev = 1,704, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.04749502703986693;  // std dev = 3,373, 133,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=13 */
%   | | else return 0.06177443050566377;  // std dev = 0,412, 54,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.28642337880526564;  // std dev = 2,498, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return -0.23262169400090343;  // std dev = 0,007, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.06779799287177857;  // std dev = 0,459, 1.057,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=319 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.019161607014913616;  // std dev = 3,564, 118,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=15 */
%   | | | else return 0.09836724265984928;  // std dev = 1,217, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.07621278365780933;  // std dev = 2,989, 48,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return -0.11591468634070744;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 9,66e-08, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2950110760100552;  // std dev = 1,711, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.011436747118970404;  // std dev = 2,066, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return 0.052695485316483166;  // std dev = 0,458, 1.066,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=319 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.15348523747017445;  // std dev = 0,472, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.16431123061350136;  // std dev = 1,537, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.010442588873611708;  // std dev = 4,202, 152,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=21 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9,42e-08, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.38807957475510174;  // std dev = 1,186, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.09196179379257936;  // std dev = 2,054, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return 0.03933458068485863;  // std dev = 0,456, 1.084,000 (wgt'ed) examples reached here.  /* #neg=763 #pos=321 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.07875956474683499;  // std dev = 3,416, 59,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return -0.03662968425178501;  // std dev = 2,405, 51,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=7 */
%   | | else return -0.029244336195351807;  // std dev = 0,285, 67,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7064814265583836;  // std dev = 3,114, 325,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=315 */
%   | | | else return -0.22797493016330705;  // std dev = 4,125, 804,000 (wgt'ed) examples reached here.  /* #neg=788 #pos=16 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.24528798245823247;  // std dev = 0,288, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0.14870767374282334;  // std dev = 2,807, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.7288429940734593;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.10068360749749483;  // std dev = 2,897, 40,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return -0.09828875176503167;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,96e-08, 88,000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5482778351451097;  // std dev = 3,227, 325,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=314 */
%   | | | else return -0.20069050569756805;  // std dev = 3,118, 753,000 (wgt'ed) examples reached here.  /* #neg=744 #pos=9 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.0964593032265397;  // std dev = 2,584, 76,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=8 */
%   | | | else return 0.0761410961401608;  // std dev = 2,900, 42,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | else return 0.0876125772759467;  // std dev = 0,431, 52,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */


Results
   AUC ROC   = 0.990038
   AUC PR    = 0.524035
   CLL	      = -0.219406
   Precision = 0.359562 at threshold = 0.5
   Recall    = 0.936446
   F1        = 0.519611


Total learning time: 412.702 seconds
Total inference time: 77.314 seconds
AUC ROC: 0.990038


Results scoring model
   AUC ROC   = 0.979526
   AUC PR    = 0.643126
   CLL	      = -0.215887
   Precision = 0.481028 at threshold = 0.5
   Recall    = 0.875278
   F1        = 0.620853


Total scoring time: 163.325 seconds
Refined model CLL: -0.215887


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990038
   AUC PR    = 0.524035
   CLL	      = -0.219406
   Precision = 0.359562 at threshold = 0.5
   Recall    = 0.936446
   F1        = 0.519611


Total learning time: 586.2059999999999 seconds
Total inference time: 77.314 seconds
AUC ROC: 0.990038
Total revision time: 586.2059999999999
Best scored revision CLL: -0.215887


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 04:19:20
{'AUC PR': 0.524035, 'AUC ROC': 0.990038, 'Learning time': 586.2059999999999, 'F1': 0.519611, 'Inference time': 77.314, 'Precision': [0.359562, 0.5], 'Recall': 0.936446, 'parameter_0.2': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Learning time': 4.761, 'F1': 0.235698, 'Inference time': 5.672, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.315672}, 'CLL': -0.219406}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.3966104735610508;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else return 0.20420491474327335;  // std dev = 0,476, 1.179,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=408 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( title(K, I), venue(K, B) )
%   | | | then return 0.7993254056877476;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.04429008929073166;  // std dev = 1,900, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | else return -0.061851064900487696;  // std dev = 0,271, 75,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18562687838637543;  // std dev = 0,478, 1.184,000 (wgt'ed) examples reached here.  /* #neg=764 #pos=420 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.6200800801353151;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.12622359027136074;  // std dev = 0,021, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.25590566778953655;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.05377938838230708;  // std dev = 1,914, 49,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return 0.11551255887422784;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.053842279835449494;  // std dev = 2,144, 62,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=5 */
%   | | | else return -0.13448744112577213;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16456302475527368;  // std dev = 0,480, 1.162,000 (wgt'ed) examples reached here.  /* #neg=742 #pos=420 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.07021124841996698;  // std dev = 2,537, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return -0.039742139193909114;  // std dev = 1,701, 38,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else return 0.29824430112222544;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.010254297830992113;  // std dev = 2,266, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return -0.1341045931469166;  // std dev = 0,034, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.12440817891135614;  // std dev = 0,026, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.05819010514433154;  // std dev = 2,308, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.01170860519234522;  // std dev = 0,733, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.40805550784699735;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.13569309970482954;  // std dev = 0,480, 1.136,000 (wgt'ed) examples reached here.  /* #neg=728 #pos=408 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( title(J, H), venue(J, B) )
%   | | | then return 0.5836250582116155;  // std dev = 0,046, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1171079284998163;  // std dev = 0,031, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( haswordauthor(K, G) )
%   | | | then return 0.20956327236996755;  // std dev = 1,297, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.03183518060380027;  // std dev = 1,852, 38,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | else return -0.03170957830448433;  // std dev = 0,292, 63,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.632445150954777;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1774863962892088;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.2585224819275633;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else return 0.11000745736198911;  // std dev = 0,479, 1.140,000 (wgt'ed) examples reached here.  /* #neg=732 #pos=408 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then return 0.10805193257081172;  // std dev = 0,350, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.014618456684918749;  // std dev = 2,544, 97,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=17 */
%   | | | else return 0.16973029745683907;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.03704166038971658;  // std dev = 0,280, 58,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08423376780355395;  // std dev = 0,476, 1.186,000 (wgt'ed) examples reached here.  /* #neg=766 #pos=420 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.18196314273466194;  // std dev = 0,806, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.013217155283248105;  // std dev = 0,805, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.03299603044498414;  // std dev = 3,030, 103,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=11 */
%   | | | else return 0.03330821405910598;  // std dev = 0,680, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.12504177603757863;  // std dev = 1,379, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.0010094021364798439;  // std dev = 0,957, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.11115656046550348;  // std dev = 0,036, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07269202978830298;  // std dev = 0,478, 1.168,000 (wgt'ed) examples reached here.  /* #neg=748 #pos=420 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.15642169406690398;  // std dev = 0,339, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.030032940827073182;  // std dev = 3,030, 102,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=11 */
%   | | | else return -0.07546825681367636;  // std dev = 0,751, 38,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.13217335430101165;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.03441094531353203;  // std dev = 0,259, 45,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.06640268091128455;  // std dev = 1,595, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.13681133667523626;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.17307295456225982;  // std dev = 0,956, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.05480276960857111;  // std dev = 0,479, 1.147,000 (wgt'ed) examples reached here.  /* #neg=739 #pos=408 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return -0.0097123461604082;  // std dev = 0,321, 95,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=12 */
%   | | else return -0.044665635838449194;  // std dev = 0,181, 37,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.009798083978248379;  // std dev = 1,502, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.21486184435685937;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10107088930517046;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03715057777341485;  // std dev = 0,475, 1.197,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=420 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.2775473808041243;  // std dev = 1,221, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.03255780513323464;  // std dev = 2,203, 93,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
%   | | else return 0.15658224578991142;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return -0.02790854784159843;  // std dev = 0,275, 70,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6502923026729954;  // std dev = 0,172, 405,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=393 */
%   | | else return -0.29084152141126723;  // std dev = 0,120, 778,000 (wgt'ed) examples reached here.  /* #neg=769 #pos=9 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.18068932010075592;  // std dev = 0,303, 78,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=8 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.40162432730291864;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.08006882535004697;  // std dev = 1,206, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.22067651136065683;  // std dev = 0,739, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( title(K, I), venue(K, B) )
%   | | | then return 0.07245305287582401;  // std dev = 1,871, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return -0.04081974837140944;  // std dev = 0,956, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else return 0.48866715517360676;  // std dev = 0,661, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.981391
   AUC PR    = 0.359361
   CLL	      = -0.290253
   Precision = 0.395604 at threshold = 0.5
   Recall    = 0.046693
   F1        = 0.083527


Total learning time: 382.285 seconds
Total inference time: 51.877 seconds
AUC ROC: 0.981391


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 04:26:35
{'AUC PR': 0.359361, 'AUC ROC': 0.981391, 'Learning time': 382.285, 'F1': 0.083527, 'Inference time': 51.877, 'Precision': [0.395604, 0.5], 'Recall': 0.046693, 'CLL': -0.290253}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3966104735610508;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else return 0.2101765451081356;  // std dev = 0,478, 1.159,000 (wgt'ed) examples reached here.  /* #neg=751 #pos=408 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | then if ( haswordauthor(K, J) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.035184398233821024;  // std dev = 2,673, 75,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=8 */
%   | | else if ( title(L, I), venue(L, B) )
%   | | | then return -0.032760155809578625;  // std dev = 2,312, 55,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.0650454868236503;  // std dev = 0,405, 58,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */


Results
   AUC ROC   = 0.552718
   AUC PR    = 0.014389
   CLL	      = -0.200904
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 23.33 seconds
Total inference time: 7.969 seconds
AUC ROC: 0.552718


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 04:27:06
{'AUC PR': 0.014389, 'AUC ROC': 0.552718, 'Learning time': 23.33, 'F1': nan, 'Inference time': 7.969, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.200904}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9,83e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.14715049516190976;  // std dev = 22,953, 2.564,000 (wgt'ed) examples reached here.  /* #neg=1.823 #pos=741 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.1285029636170963;  // std dev = 22,950, 2.562,000 (wgt'ed) examples reached here.  /* #neg=1.821 #pos=741 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.12190815885525685;  // std dev = 22,763, 2.464,000 (wgt'ed) examples reached here.  /* #neg=1.723 #pos=741 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,58e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.09213677473536538;  // std dev = 22,944, 2.559,000 (wgt'ed) examples reached here.  /* #neg=1.818 #pos=741 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 2,98e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.08021764980721058;  // std dev = 22,894, 2.532,000 (wgt'ed) examples reached here.  /* #neg=1.791 #pos=741 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0,000, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.0713041637371384;  // std dev = 22,816, 2.491,000 (wgt'ed) examples reached here.  /* #neg=1.750 #pos=741 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,56e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.04622058393271214;  // std dev = 23,016, 2.599,000 (wgt'ed) examples reached here.  /* #neg=1.858 #pos=741 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.04410867313628858;  // std dev = 22,913, 2.542,000 (wgt'ed) examples reached here.  /* #neg=1.801 #pos=741 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.04022865672497721;  // std dev = 22,841, 2.504,000 (wgt'ed) examples reached here.  /* #neg=1.763 #pos=741 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.03536134762906337;  // std dev = 22,795, 2.480,000 (wgt'ed) examples reached here.  /* #neg=1.739 #pos=741 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.325114
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 6.844 seconds
Total inference time: 5.257 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587416
   AUC PR    = 0.193577
   CLL	      = -0.324571
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174833
   F1        = 0.29763


Total scoring time: 6.523 seconds
Parameter learned model CLL: -0.324571


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.953, 1823, 741], 'true': [9.83e-07, 0, 157]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.95, 1821, 741], 'true': [0.0, 0, 157]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.763, 1723, 741], 'true': [5.4e-07, 0, 157]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.944, 1818, 741], 'true': [4.58e-07, 0, 157]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.894, 1791, 741], 'true': [2.98e-07, 0, 157]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.816, 1750, 741], 'true': [0.0, 0, 157]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.016, 1858, 741], 'true': [2.56e-07, 0, 157]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.913, 1801, 741], 'true': [0.0, 0, 157]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.841, 1763, 741], 'true': [0.0, 0, 157]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.795, 1739, 741], 'true': [9.19e-08, 0, 157]}]]
[{'': [6.155019876648002e-15, 0.20547965834392504]}, {'': [-2.715449945580001e-15, 0.20557481256407203]}, {'': [1.8555574628130005e-15, 0.21029167413353186]}, {'': [1.3350962232435004e-15, 0.2057176313102002]}, {'': [5.657187386625001e-16, 0.20700764807619446]}, {'': [-2.1497312069175006e-16, 0.20898196171814676]}, {'': [4.186318666102501e-16, 0.2038221407262693]}, {'': [-3.1114530626437506e-16, 0.20652889830082463]}, {'': [-2.3194468285162506e-16, 0.20835401376966023]}, {'': [5.3743280172937514e-17, 0.209514665712797]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9,83e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17134081701832646;  // std dev = 0,464, 2.168,000 (wgt'ed) examples reached here.  /* #neg=1.489 #pos=679 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.221785298735876;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.039467616418192734;  // std dev = 5,198, 182,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=33 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.015345040804102277;  // std dev = 4,283, 166,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=21 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14142897240357447;  // std dev = 0,461, 2.223,000 (wgt'ed) examples reached here.  /* #neg=1.544 #pos=679 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.07023358954322922;  // std dev = 4,595, 124,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=27 */
%   | | | else return 0.009163148465296578;  // std dev = 3,399, 87,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.011085767488747728;  // std dev = 4,222, 139,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,40e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12899858812219592;  // std dev = 0,464, 2.167,000 (wgt'ed) examples reached here.  /* #neg=1.488 #pos=679 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.2463624253133733;  // std dev = 2,157, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.040004491969043494;  // std dev = 5,154, 171,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=33 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0015237659954089437;  // std dev = 4,243, 147,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=21 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4,58e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10982399156105634;  // std dev = 0,464, 2.160,000 (wgt'ed) examples reached here.  /* #neg=1.481 #pos=679 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.3208972667603898;  // std dev = 1,935, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.013963006475754188;  // std dev = 5,219, 192,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=33 */
%   | | else return -0.01249591001202056;  // std dev = 0,334, 164,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=21 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 2,98e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7583042134214751;  // std dev = 3,718, 650,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=636 */
%   | | | else return -0.1970606108926094;  // std dev = 5,639, 1.663,000 (wgt'ed) examples reached here.  /* #neg=1.631 #pos=32 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.09940229420718259;  // std dev = 3,361, 124,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=13 */
%   | | | else return 0.20517814913048182;  // std dev = 4,086, 74,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5627383784631512;  // std dev = 0,410, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.09939472295271129;  // std dev = 3,818, 76,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return -0.10046143609741137;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0,000, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.12635941703931167;  // std dev = 2,832, 51,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.2544960237496879;  // std dev = 1,095, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09866134214997974;  // std dev = 2,990, 59,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | | | else return 0.07091244496735276;  // std dev = 17,368, 1.988,000 (wgt'ed) examples reached here.  /* #neg=1.353 #pos=635 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.019186781232508443;  // std dev = 5,066, 177,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=36 */
%   | | | else return 0.15248143367560865;  // std dev = 1,551, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.0012486849268546214;  // std dev = 3,684, 148,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=21 */
%   | | | else return -0.09174023033417845;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2,56e-07, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05823149784733011;  // std dev = 0,387, 2.118,000 (wgt'ed) examples reached here.  /* #neg=1.439 #pos=679 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4555415312382934;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05882277798410543;  // std dev = 2,099, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.00867934440816558;  // std dev = 4,633, 224,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=35 */
%   | | | else return 0.04152671234433134;  // std dev = 3,828, 86,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.041388451864918276;  // std dev = 0,384, 2.161,000 (wgt'ed) examples reached here.  /* #neg=1.482 #pos=679 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.10467854398419361;  // std dev = 2,129, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.020956510388080482;  // std dev = 4,669, 254,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=35 */
%   | | else return 0.024602925721461614;  // std dev = 0,409, 93,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0,000, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.027010299017566675;  // std dev = 0,379, 2.223,000 (wgt'ed) examples reached here.  /* #neg=1.544 #pos=679 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.13419081953595816;  // std dev = 1,733, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.026042953298359407;  // std dev = 0,832, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.020938184415242138;  // std dev = 5,076, 206,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=33 */
%   | | | else return 2.925567124282507E-5;  // std dev = 3,573, 147,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,19e-08, 157,000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.029064913443901223;  // std dev = 0,382, 2.158,000 (wgt'ed) examples reached here.  /* #neg=1.479 #pos=679 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.0024405375290567793;  // std dev = 4,405, 209,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=33 */
%   | | | else return -0.053252643313816725;  // std dev = 2,727, 73,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.015257495339435927;  // std dev = 3,960, 97,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=20 */
%   | | | else return -0.08963083723076322;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.973638
   AUC PR    = 0.518394
   CLL	      = -0.260182
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 444.389 seconds
Total inference time: 42.78 seconds
AUC ROC: 0.973638


Results scoring model
   AUC ROC   = 0.950717
   AUC PR    = 0.609596
   CLL	      = -0.256514
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174833
   F1        = 0.29763


Total scoring time: 159.89600000000002 seconds
Refined model CLL: -0.256514


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.973638
   AUC PR    = 0.518394
   CLL	      = -0.260182
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 617.652 seconds
Total inference time: 42.78 seconds
AUC ROC: 0.973638
Total revision time: 617.652
Best scored revision CLL: -0.256514


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 04:38:13
{'AUC PR': 0.518394, 'AUC ROC': 0.973638, 'parameter_0.4': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Learning time': 6.844, 'F1': 0.235698, 'Inference time': 5.257, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.325114}, 'Learning time': 617.652, 'F1': 0.235698, 'Inference time': 42.78, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.260182}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2929315437951642;  // std dev = 3,362, 46,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | | else return 0.0010060779566550774;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else return 0.21403645706787283;  // std dev = 0,479, 2.276,000 (wgt'ed) examples reached here.  /* #neg=1.466 #pos=810 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then return 0.2391013160518933;  // std dev = 0,486, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.004754290706940005;  // std dev = 0,344, 248,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=34 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.12203782398840121;  // std dev = 3,740, 72,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18308466263650586;  // std dev = 0,478, 2.367,000 (wgt'ed) examples reached here.  /* #neg=1.531 #pos=836 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.5094421118282105;  // std dev = 0,807, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.1598156037908566;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.14907796748644578;  // std dev = 9,13e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1630745130059678;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.010838530472293535;  // std dev = 4,845, 207,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=27 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.08013450103203931;  // std dev = 3,806, 80,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15380609420388308;  // std dev = 0,477, 2.379,000 (wgt'ed) examples reached here.  /* #neg=1.543 #pos=836 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.2365536111269312;  // std dev = 1,092, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.05189517446759221;  // std dev = 2,172, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return -0.15429317924919222;  // std dev = 0,048, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.007822238863957331;  // std dev = 5,151, 209,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=32 */
%   | | | else return -0.08049000029768917;  // std dev = 1,683, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.041492121467941234;  // std dev = 3,856, 90,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.16581346289982113;  // std dev = 3,477, 51,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | | else return -0.09723677141333965;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return 0.7794028020394048;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.15895749655918645;  // std dev = 3,603, 55,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return -0.11174957414788474;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.13353913382740384;  // std dev = 0,479, 2.211,000 (wgt'ed) examples reached here.  /* #neg=1.423 #pos=788 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( haswordtitle(L, J) )
%   | | then return 0.19381640402709227;  // std dev = 0,489, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.07286761460486235;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.012490976778559497;  // std dev = 0,367, 325,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=53 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.1743686599065675;  // std dev = 3,491, 50,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   | | | else return 0.13428753654181805;  // std dev = 1,172, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.7203826617549473;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.10561204112801864;  // std dev = 0,477, 2.295,000 (wgt'ed) examples reached here.  /* #neg=1.486 #pos=809 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then return 0.16104644235133544;  // std dev = 0,489, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( title(J, H), venue(J, A) )
%   | | | then return 0.065532239788914;  // std dev = 4,441, 113,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=26 */
%   | | | else return -0.037041573023627705;  // std dev = 2,486, 63,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return -0.031801574512914314;  // std dev = 0,299, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.014120661724164993;  // std dev = 0,331, 158,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09564307195076388;  // std dev = 0,480, 2.299,000 (wgt'ed) examples reached here.  /* #neg=1.463 #pos=836 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.014654527635533765;  // std dev = 0,788, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2385407798665163;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.0983725884974614;  // std dev = 0,817, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1393204526644058;  // std dev = 0,016, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.4643691110211052;  // std dev = 0,805, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.012575606364244448;  // std dev = 2,187, 33,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.021311037996304433;  // std dev = 4,874, 230,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=27 */
%   | | | else return 0.01704901432771621;  // std dev = 3,781, 93,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=18 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6930763180698333;  // std dev = 0,153, 789,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=770 */
%   | | else return -0.25437464359869283;  // std dev = 0,143, 1.633,000 (wgt'ed) examples reached here.  /* #neg=1.601 #pos=32 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.14751377913198419;  // std dev = 0,299, 126,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=13 */
%   | | else return 0.21277569873798766;  // std dev = 0,464, 87,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=38 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.7733436303365044;  // std dev = 0,262, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.1684022070679506;  // std dev = 1,288, 74,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=2 */
%   | | else if ( title(L, I), venue(L, B) )
%   | | | then return -0.025268129364992672;  // std dev = 0,810, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2802924960999503;  // std dev = 1,134, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.5186134382632027;  // std dev = 0,337, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05281421221618535;  // std dev = 0,392, 2.298,000 (wgt'ed) examples reached here.  /* #neg=1.462 #pos=836 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.03448545899609252;  // std dev = 0,609, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.02667889781532313;  // std dev = 2,167, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return -0.02702441994511322;  // std dev = 0,616, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.27268892936753886;  // std dev = 0,641, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05612344994396201;  // std dev = 1,596, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.016149701096254934;  // std dev = 4,344, 231,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=27 */
%   | | | else return 0.0063154554207616505;  // std dev = 3,215, 87,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.5156869478810255;  // std dev = 0,177, 795,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=770 */
%   | | else return -0.21523213562219784;  // std dev = 0,145, 1.569,000 (wgt'ed) examples reached here.  /* #neg=1.537 #pos=32 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.13702777961909235;  // std dev = 0,304, 123,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=13 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.28171488722607807;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | | else return 0.00814935979403567;  // std dev = 3,006, 60,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.45455408410939485;  // std dev = 0,297, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.17220613987443262;  // std dev = 0,648, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.026829739406493597;  // std dev = 3,205, 82,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | | else return -0.16139056631039325;  // std dev = 0,010, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.01482737300985068;  // std dev = 0,322, 2.357,000 (wgt'ed) examples reached here.  /* #neg=1.521 #pos=836 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4614334879118632;  // std dev = 2,049, 38,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | | | else return -0.09732370725826268;  // std dev = 0,524, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return -0.0210735366245249;  // std dev = 2,720, 52,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | | | else return -0.11487782494485274;  // std dev = 0,164, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.12108554044433298;  // std dev = 0,659, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.008195068096942405;  // std dev = 3,306, 93,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return -0.1417714208631212;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.978975
   AUC PR    = 0.373916
   CLL	      = -0.239919
   Precision = 0.353712 at threshold = 0.5
   Recall    = 0.945525
   F1        = 0.514831


Total learning time: 842.788 seconds
Total inference time: 67.475 seconds
AUC ROC: 0.978975


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 04:53:24
{'AUC PR': 0.373916, 'AUC ROC': 0.978975, 'Learning time': 842.788, 'F1': 0.514831, 'Inference time': 67.475, 'Precision': [0.353712, 0.5], 'Recall': 0.945525, 'CLL': -0.239919}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21617891368623104;  // std dev = 0,479, 2.335,000 (wgt'ed) examples reached here.  /* #neg=1.499 #pos=836 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.221785298735876;  // std dev = 0,481, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.13814893509951237;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.004795227337036377;  // std dev = 4,827, 197,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=27 */
%   | | | else return 0.06745126068090773;  // std dev = 3,773, 86,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=18 */


Results
   AUC ROC   = 0.540856
   AUC PR    = 0.012961
   CLL	      = -0.201698
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.768 seconds
Total inference time: 3.935 seconds
AUC ROC: 0.540856


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 04:53:38
{'AUC PR': 0.012961, 'AUC ROC': 0.540856, 'Learning time': 9.768, 'F1': nan, 'Inference time': 3.935, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.201698}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.14683013966856223;  // std dev = 28,124, 3.852,000 (wgt'ed) examples reached here.  /* #neg=2.740 #pos=1.112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.1347493992146326;  // std dev = 27,991, 3.764,000 (wgt'ed) examples reached here.  /* #neg=2.652 #pos=1.112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.11471932342138211;  // std dev = 28,011, 3.777,000 (wgt'ed) examples reached here.  /* #neg=2.665 #pos=1.112 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.0977307586139671;  // std dev = 28,000, 3.770,000 (wgt'ed) examples reached here.  /* #neg=2.658 #pos=1.112 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.08000970522245864;  // std dev = 28,036, 3.793,000 (wgt'ed) examples reached here.  /* #neg=2.681 #pos=1.112 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.05993052183110084;  // std dev = 28,161, 3.877,000 (wgt'ed) examples reached here.  /* #neg=2.765 #pos=1.112 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.04880321060569382;  // std dev = 28,170, 3.883,000 (wgt'ed) examples reached here.  /* #neg=2.771 #pos=1.112 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9,88e-08, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.044725944724040456;  // std dev = 28,074, 3.818,000 (wgt'ed) examples reached here.  /* #neg=2.706 #pos=1.112 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.03816660473496233;  // std dev = 28,037, 3.794,000 (wgt'ed) examples reached here.  /* #neg=2.682 #pos=1.112 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.02938922887142879;  // std dev = 28,066, 3.813,000 (wgt'ed) examples reached here.  /* #neg=2.701 #pos=1.112 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.321991
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 9.866 seconds
Total inference time: 5.34 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587231
   AUC PR    = 0.193168
   CLL	      = -0.32145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174462
   F1        = 0.297092


Total scoring time: 7.978 seconds
Parameter learned model CLL: -0.32145


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.124, 2740, 1112], 'true': [1.08e-06, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [27.991, 2652, 1112], 'true': [0.0, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.011, 2665, 1112], 'true': [5.33e-07, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.0, 2658, 1112], 'true': [0.0, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.036, 2681, 1112], 'true': [2.92e-07, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.161, 2765, 1112], 'true': [2.95e-07, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.17, 2771, 1112], 'true': [2.92e-07, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.074, 2706, 1112], 'true': [9.88e-08, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.037, 2682, 1112], 'true': [0.0, 0, 235]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.066, 2701, 1112], 'true': [1.03e-07, 0, 235]}]]
[{'': [4.958681219772614e-15, 0.20534436669764045]}, {'': [-4.1725488312720774e-15, 0.20815127597314867]}, {'': [1.209434443846979e-15, 0.20773421393330638]}, {'': [-1.209434443846979e-16, 0.2079586854196058]}, {'': [3.628303331540937e-16, 0.2072220261712735]}, {'': [3.703892984281373e-16, 0.20455416223226075]}, {'': [3.628303331540937e-16, 0.2043650058042957]}, {'': [4.15743090072399e-17, 0.20642425762445335]}, {'': [-1.662972360289596e-16, 0.20719005593550227]}, {'': [4.535379164426171e-17, 0.20658356173670672]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.2043027812533572;  // std dev = 4,202, 78,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.16949043682743684;  // std dev = 0,463, 3.183,000 (wgt'ed) examples reached here.  /* #neg=2.192 #pos=991 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08672036367094095;  // std dev = 2,484, 35,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0088723414962325;  // std dev = 6,584, 376,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=50 */
%   | | | else return 0.07188939311477868;  // std dev = 4,692, 131,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.09823487033591737;  // std dev = 4,463, 103,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.8070479269517443;  // std dev = 0,101, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15050095264577876;  // std dev = 0,464, 3.154,000 (wgt'ed) examples reached here.  /* #neg=2.162 #pos=992 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.017633285221749624;  // std dev = 6,503, 308,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=51 */
%   | | | else return 0.14398220323285327;  // std dev = 2,073, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0014261242711679856;  // std dev = 5,239, 228,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=32 */
%   | | | else return -0.1508294134152402;  // std dev = 1,05e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11797166245084079;  // std dev = 0,459, 3.369,000 (wgt'ed) examples reached here.  /* #neg=2.346 #pos=1.023 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.02608125541115693;  // std dev = 6,229, 277,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=47 */
%   | | | else return -0.048215393793742775;  // std dev = 3,414, 131,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0542860105839236;  // std dev = 4,787, 139,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=29 */
%   | | | else return -0.1327963649114964;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.15808236162137657;  // std dev = 4,181, 78,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return -0.1111886171614869;  // std dev = 1,504, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else return 0.10562770611406656;  // std dev = 0,462, 3.201,000 (wgt'ed) examples reached here.  /* #neg=2.209 #pos=992 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.05700837974021575;  // std dev = 5,604, 189,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=40 */
%   | | | else return -0.020027274420044445;  // std dev = 3,819, 129,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=17 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -1.909935099105834E-4;  // std dev = 5,221, 224,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=32 */
%   | | | else return -0.11797617350173137;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2,92e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0908280628131122;  // std dev = 0,463, 3.271,000 (wgt'ed) examples reached here.  /* #neg=2.248 #pos=1.023 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1754513292003122;  // std dev = 2,582, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.07058061390551501;  // std dev = 0,965, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.08394578854639997;  // std dev = 2,733, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.005744633217797645;  // std dev = 7,541, 437,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=68 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,95e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07045083280881784;  // std dev = 0,461, 3.318,000 (wgt'ed) examples reached here.  /* #neg=2.295 #pos=1.023 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3673490751985454;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.056836868310103296;  // std dev = 2,488, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05929669825319081;  // std dev = 2,787, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return -0.003364814935373552;  // std dev = 7,580, 460,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=68 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.040508544026597176;  // std dev = 4,352, 91,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   | | | else return 0.41548233864236855;  // std dev = 0,898, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.06435238211312447;  // std dev = 0,464, 3.147,000 (wgt'ed) examples reached here.  /* #neg=2.156 #pos=991 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.011632672403891466;  // std dev = 6,227, 290,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=47 */
%   | | | else return -0.04336332582321512;  // std dev = 3,370, 120,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06015613991303628;  // std dev = 4,711, 125,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=29 */
%   | | | else return -0.1064684696917677;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9,88e-08, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04715953979972372;  // std dev = 0,462, 3.295,000 (wgt'ed) examples reached here.  /* #neg=2.272 #pos=1.023 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.43842020788909974;  // std dev = 0,851, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0969614942356344;  // std dev = 2,423, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -5.521006536064264E-4;  // std dev = 6,499, 342,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=50 */
%   | | | else return 0.024066604780803105;  // std dev = 4,720, 142,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=28 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.042754525722317784;  // std dev = 0,464, 3.247,000 (wgt'ed) examples reached here.  /* #neg=2.224 #pos=1.023 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.008857209820161513;  // std dev = 6,208, 293,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=47 */
%   | | | else return -0.02422840422395949;  // std dev = 3,362, 95,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.016406605297106667;  // std dev = 4,787, 145,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=29 */
%   | | | else return -0.09867791498904066;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1,03e-07, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03299662124707036;  // std dev = 0,463, 3.257,000 (wgt'ed) examples reached here.  /* #neg=2.234 #pos=1.023 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3091530514156066;  // std dev = 1,018, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04784716634707553;  // std dev = 2,570, 39,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.015419181626516414;  // std dev = 6,614, 351,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=50 */
%   | | | else return 0.009171964586930783;  // std dev = 4,720, 145,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=28 */


Results
   AUC ROC   = 0.613537
   AUC PR    = 0.153751
   CLL	      = -0.32604
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 170.29399999999998 seconds
Total inference time: 13.339 seconds
AUC ROC: 0.613537


Results scoring model
   AUC ROC   = 0.632063
   AUC PR    = 0.201743
   CLL	      = -0.319748
   Precision = 0.933852 at threshold = 0.5
   Recall    = 0.178174
   F1        = 0.299252


Total scoring time: 42.491 seconds
Refined model CLL: -0.319748


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.613537
   AUC PR    = 0.153751
   CLL	      = -0.32604
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 230.62899999999996 seconds
Total inference time: 13.339 seconds
AUC ROC: 0.613537
Total revision time: 230.62899999999996
Best scored revision CLL: -0.319748


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 04:57:50
{'AUC PR': 0.153751, 'AUC ROC': 0.613537, 'Learning time': 230.62899999999996, 'F1': 0.235698, 'Inference time': 13.339, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'parameter_0.6': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Learning time': 9.866, 'F1': 0.235698, 'Inference time': 5.34, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.321991}, 'CLL': -0.32604}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22320987532005276;  // std dev = 0,481, 3.446,000 (wgt'ed) examples reached here.  /* #neg=2.188 #pos=1.258 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.1914822684328457;  // std dev = 0,471, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.07602603007157825;  // std dev = 5,523, 179,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=39 */
%   | | | else return -0.05937683809636396;  // std dev = 2,709, 97,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=8 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.04312003336540739;  // std dev = 5,107, 173,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=32 */
%   | | | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.828749440866661;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11446372658094718;  // std dev = 4,309, 91,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | | else return 0.828749440866661;  // std dev = 2,98e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18451867163588972;  // std dev = 0,479, 3.432,000 (wgt'ed) examples reached here.  /* #neg=2.211 #pos=1.221 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then return 0.21782087584693302;  // std dev = 0,487, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else return -0.08830832317434253;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.10902138209606271;  // std dev = 0,859, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09477150839372105;  // std dev = 2,600, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else return -3.928508050818068E-4;  // std dev = 0,350, 473,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=68 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.10381963360766606;  // std dev = 4,399, 93,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | | else return 0.06257252957212618;  // std dev = 1,420, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.6231823355619908;  // std dev = 0,340, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.1577815377132888;  // std dev = 0,479, 3.421,000 (wgt'ed) examples reached here.  /* #neg=2.201 #pos=1.220 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then return 0.1853188535098177;  // std dev = 0,487, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else return 0.005297254409541184;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.17321682521574322;  // std dev = 1,150, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.12719212155110116;  // std dev = 2,373, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else return -0.004873192219167676;  // std dev = 0,345, 488,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=68 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12841985110265308;  // std dev = 0,477, 3.556,000 (wgt'ed) examples reached here.  /* #neg=2.298 #pos=1.258 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3187441800557655;  // std dev = 0,947, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07795583551312636;  // std dev = 2,431, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.012961232618178246;  // std dev = 6,082, 276,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=45 */
%   | | | else return -0.08213979745062831;  // std dev = 2,148, 90,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.10406501603116808;  // std dev = 4,468, 105,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=27 */
%   | | | else return 0.008694339243564405;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return -0.12486804861213681;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11170351271726532;  // std dev = 0,479, 3.492,000 (wgt'ed) examples reached here.  /* #neg=2.234 #pos=1.258 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.4291674603957916;  // std dev = 0,749, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.02580812792107523;  // std dev = 0,888, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03943589850599968;  // std dev = 2,469, 35,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.008828445672447982;  // std dev = 6,107, 275,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=45 */
%   | | | else return -0.06591091845099346;  // std dev = 2,142, 81,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02034742260869213;  // std dev = 4,772, 153,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=28 */
%   | | | else return -0.11184968242893881;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5687902417549163;  // std dev = 0,056, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.1069503144264182;  // std dev = 4,061, 73,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | | | else return -0.18239133396891455;  // std dev = 1,361, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.30108162767263685;  // std dev = 2,485, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return -0.0011008064141947735;  // std dev = 3,341, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else return 0.0919556137978788;  // std dev = 0,481, 3.290,000 (wgt'ed) examples reached here.  /* #neg=2.099 #pos=1.191 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.0012464328693747504;  // std dev = 0,351, 398,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=60 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.05442120183793537;  // std dev = 0,414, 131,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=29 */
%   | | else return -0.1012115472727624;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07722191933229011;  // std dev = 0,480, 3.439,000 (wgt'ed) examples reached here.  /* #neg=2.181 #pos=1.258 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.752892217535211;  // std dev = 1,906, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return -0.15228757081318117;  // std dev = 0,426, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.024801099987329715;  // std dev = 3,214, 70,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=13 */
%   | | | else return -0.11907585953547367;  // std dev = 0,162, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06048549893951622;  // std dev = 4,527, 113,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=27 */
%   | | | else return -0.021227872142235503;  // std dev = 1,326, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.09236900818077166;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6680090913493182;  // std dev = 0,161, 1.182,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=1.151 */
%   | | else return -0.26337574738658676;  // std dev = 0,154, 2.397,000 (wgt'ed) examples reached here.  /* #neg=2.344 #pos=53 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1753627916363294;  // std dev = 0,300, 188,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=19 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2945202116756543;  // std dev = 4,018, 68,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=41 */
%   | | | else return 0.06431208550995332;  // std dev = 3,681, 88,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5278775215881557;  // std dev = 0,361, 39,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04423782302142242;  // std dev = 4,553, 116,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
%   | | | else return -0.036012972679367886;  // std dev = 1,345, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return -0.08873420764665886;  // std dev = 0,032, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.034749322373654495;  // std dev = 0,390, 3.507,000 (wgt'ed) examples reached here.  /* #neg=2.249 #pos=1.258 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return -0.04272325853111917;  // std dev = 0,611, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.06426208160983667;  // std dev = 2,397, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.016207371911685062;  // std dev = 4,262, 314,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=45 */
%   | | | else return -0.06198085109641542;  // std dev = 2,136, 85,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.027041754926607563;  // std dev = 4,579, 122,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=27 */
%   | | | else return -0.025353810450067345;  // std dev = 1,340, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return -0.07826555238779877;  // std dev = 6,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.5105593306272618;  // std dev = 0,141, 1.174,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1.151 */
%   | | else return -0.21886211933538277;  // std dev = 0,153, 2.374,000 (wgt'ed) examples reached here.  /* #neg=2.321 #pos=53 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.15327294622373702;  // std dev = 0,291, 201,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=19 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.300490979272142;  // std dev = 3,590, 60,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | | | else return 0.031522025618483225;  // std dev = 3,738, 95,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( title(K, I), venue(K, B) )
%   | | | then return 0.6844098103561911;  // std dev = 1,469, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | | else return -0.17817001096873214;  // std dev = 1,341, 97,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=3 */
%   | | else return -0.036256044594518796;  // std dev = 0,312, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | else return 0.3835950982790401;  // std dev = 0,280, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */


Results
   AUC ROC   = 0.978309
   AUC PR    = 0.35136
   CLL	      = -0.247146
   Precision = 0.357895 at threshold = 0.5
   Recall    = 0.970169
   F1        = 0.522894


Total learning time: 1279.197 seconds
Total inference time: 75.672 seconds
AUC ROC: 0.978309


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 05:20:25
{'AUC PR': 0.35136, 'AUC ROC': 0.978309, 'Learning time': 1279.197, 'F1': 0.522894, 'Inference time': 75.672, 'Precision': [0.357895, 0.5], 'Recall': 0.970169, 'CLL': -0.247146}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21191721406463657;  // std dev = 0,478, 3.556,000 (wgt'ed) examples reached here.  /* #neg=2.298 #pos=1.258 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.2929315437951645;  // std dev = 0,496, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else return -0.050941973991396876;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.010178467035719759;  // std dev = 5,668, 281,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=37 */
%   | | | else return 0.018642762260006194;  // std dev = 3,304, 81,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=13 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.061047485824149234;  // std dev = 4,724, 138,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.541232
   AUC PR    = 0.012965
   CLL	      = -0.201017
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 22.43 seconds
Total inference time: 4.784 seconds
AUC ROC: 0.541232


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 05:20:53
{'AUC PR': 0.012965, 'AUC ROC': 0.541232, 'Learning time': 22.43, 'F1': nan, 'Inference time': 4.784, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.201017}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.1488900398763894;  // std dev = 32,388, 5.087,000 (wgt'ed) examples reached here.  /* #neg=3.608 #pos=1.479 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.1337212234635118;  // std dev = 32,298, 5.019,000 (wgt'ed) examples reached here.  /* #neg=3.540 #pos=1.479 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.10919018174520567;  // std dev = 32,427, 5.117,000 (wgt'ed) examples reached here.  /* #neg=3.638 #pos=1.479 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.0967594637885337;  // std dev = 32,330, 5.043,000 (wgt'ed) examples reached here.  /* #neg=3.564 #pos=1.479 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.08114803608243215;  // std dev = 32,328, 5.041,000 (wgt'ed) examples reached here.  /* #neg=3.562 #pos=1.479 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,77e-07, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.06044188134534712;  // std dev = 32,483, 5.161,000 (wgt'ed) examples reached here.  /* #neg=3.682 #pos=1.479 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,49e-07, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.05035799290530418;  // std dev = 32,468, 5.149,000 (wgt'ed) examples reached here.  /* #neg=3.670 #pos=1.479 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2,63e-07, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.04636021238084713;  // std dev = 32,349, 5.057,000 (wgt'ed) examples reached here.  /* #neg=3.578 #pos=1.479 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.042239483236911846;  // std dev = 32,244, 4.979,000 (wgt'ed) examples reached here.  /* #neg=3.500 #pos=1.479 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.03001798525154771;  // std dev = 32,338, 5.049,000 (wgt'ed) examples reached here.  /* #neg=3.570 #pos=1.479 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.32304
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 15.534 seconds
Total inference time: 4.993 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.588252
   AUC PR    = 0.195235
   CLL	      = -0.322471
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.176503
   F1        = 0.300047


Total scoring time: 9.853 seconds
Parameter learned model CLL: -0.322471


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.388, 3608, 1479], 'true': [1.04e-06, 0, 317]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.298, 3540, 1479], 'true': [0.0, 0, 317]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.427, 3638, 1479], 'true': [0.0, 0, 317]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.33, 3564, 1479], 'true': [0.0, 0, 317]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.328, 3562, 1479], 'true': [0.0, 0, 317]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.483, 3682, 1479], 'true': [3.77e-07, 0, 317]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.468, 3670, 1479], 'true': [2.49e-07, 0, 317]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.349, 3578, 1479], 'true': [2.63e-07, 0, 317]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.244, 3500, 1479], 'true': [0.0, 0, 317]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.338, 3570, 1479], 'true': [0.0, 0, 317]}]]
[{'': [3.4070187960736666e-15, 0.20621071476994413]}, {'': [-5.0208698047401405e-15, 0.2078437859624557]}, {'': [-3.5863355748143857e-16, 0.20549442059134845]}, {'': [-8.965838937035964e-16, 0.2072659365034746]}, {'': [-4.707065441943882e-16, 0.2073140301107923]}, {'': [4.482919468517982e-16, 0.204448646622716]}, {'': [1.961277267476617e-16, 0.20473328487514814]}, {'': [2.1854232409025163e-16, 0.2069295927162242]}, {'': [-2.2134414875807538e-16, 0.20881032330162275]}, {'': [-1.8492042807636678e-16, 0.2071217222732738]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.18833761434479396;  // std dev = 4,842, 106,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.1659483779964431;  // std dev = 0,462, 4.308,000 (wgt'ed) examples reached here.  /* #neg=2.982 #pos=1.326 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.015387364666295632;  // std dev = 6,868, 427,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=54 */
%   | | | else return 0.015173728487942104;  // std dev = 4,002, 121,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=19 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.07126368919787189;  // std dev = 5,540, 183,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=39 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15465278719857822;  // std dev = 0,466, 4.297,000 (wgt'ed) examples reached here.  /* #neg=2.930 #pos=1.367 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.13739766198049239;  // std dev = 2,945, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.024044856423400644;  // std dev = 1,331, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020903377971072695;  // std dev = 7,264, 500,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=60 */
%   | | | else return 0.05005838002229277;  // std dev = 5,505, 191,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=38 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.2082835030410792;  // std dev = 4,861, 99,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=39 */
%   | | | else return 0.7820166837186426;  // std dev = 0,112, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.13270090419809058;  // std dev = 0,466, 4.152,000 (wgt'ed) examples reached here.  /* #neg=2.830 #pos=1.322 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.1890579202248112;  // std dev = 1,613, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.10785937509335358;  // std dev = 3,004, 48,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01617691274543383;  // std dev = 7,176, 480,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=59 */
%   | | | else return 0.05294153739670897;  // std dev = 5,400, 177,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=37 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10427955328812795;  // std dev = 0,463, 4.389,000 (wgt'ed) examples reached here.  /* #neg=3.022 #pos=1.367 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1848577477794596;  // std dev = 3,033, 41,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.05299303792016494;  // std dev = 1,224, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.12442195515492137;  // std dev = 3,061, 47,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.009680638670054253;  // std dev = 8,437, 620,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=83 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.14721195447629926;  // std dev = 4,957, 105,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=41 */
%   | | | else return -0.13458238134591738;  // std dev = 1,661, 34,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.10764966629736555;  // std dev = 4,891, 109,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
%   | | | else return 0.08894133610268729;  // std dev = 29,713, 4.106,000 (wgt'ed) examples reached here.  /* #neg=2.821 #pos=1.285 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.15458660652738632;  // std dev = 2,834, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.027778803073836233;  // std dev = 1,327, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.01326239066684462;  // std dev = 7,210, 469,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=60 */
%   | | | else return 0.026535252029816363;  // std dev = 5,538, 201,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=38 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3,77e-07, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07041138569122997;  // std dev = 0,462, 4.393,000 (wgt'ed) examples reached here.  /* #neg=3.026 #pos=1.367 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.46640963148955605;  // std dev = 0,785, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09957465598566184;  // std dev = 3,172, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.008696477469480548;  // std dev = 7,123, 456,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=59 */
%   | | | else return 0.018133465167401483;  // std dev = 5,484, 200,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=37 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,49e-07, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05533200871523463;  // std dev = 0,462, 4.419,000 (wgt'ed) examples reached here.  /* #neg=3.052 #pos=1.367 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2248061200507227;  // std dev = 2,602, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.054166734128411685;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.019480894427630572;  // std dev = 7,221, 500,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=60 */
%   | | | else return 0.018759680272628868;  // std dev = 5,541, 202,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=38 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2,63e-07, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 9.695810850570287E-5;  // std dev = 5,236, 141,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=39 */
%   | | | else return 0.5572889289023727;  // std dev = 0,076, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04696659121266349;  // std dev = 0,463, 4.253,000 (wgt'ed) examples reached here.  /* #neg=2.931 #pos=1.322 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordvenue(B, J) )
%   | | | then return -0.19937719981013888;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07972910552295628;  // std dev = 3,370, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01296040816704752;  // std dev = 7,121, 473,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=59 */
%   | | | else return 0.018822965273905694;  // std dev = 5,464, 193,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=37 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.22380277173296087;  // std dev = 2,833, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return -4.6772259162911257E-4;  // std dev = 4,007, 82,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.016458337794883624;  // std dev = 5,163, 136,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=41 */
%   | | | else return 0.04596078724643934;  // std dev = 29,588, 4.032,000 (wgt'ed) examples reached here.  /* #neg=2.747 #pos=1.285 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.045092875420140344;  // std dev = 6,581, 256,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=56 */
%   | | | else return -0.03956387611473182;  // std dev = 3,921, 165,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=19 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.018535145565629085;  // std dev = 5,749, 315,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=37 */
%   | | | else return -0.14600550471910553;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.02591464309202087;  // std dev = 29,374, 4.053,000 (wgt'ed) examples reached here.  /* #neg=2.804 #pos=1.249 */
%   | | | else return 0.04562725703132582;  // std dev = 7,572, 401,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=80 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.14755680891072326;  // std dev = 4,847, 245,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=27 */
%   | | | else return 0.1519161925629484;  // std dev = 5,908, 173,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=63 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.489020607171468;  // std dev = 0,390, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.04368656409142313;  // std dev = 5,475, 172,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=39 */
%   | | | else return -0.13193103067524517;  // std dev = 0,030, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.641952
   AUC PR    = 0.176542
   CLL	      = -0.325837
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 777.024 seconds
Total inference time: 22.756 seconds
AUC ROC: 0.641952


Results scoring model
   AUC ROC   = 0.662748
   AUC PR    = 0.21572
   CLL	      = -0.317826
   Precision = 0.96997 at threshold = 0.5
   Recall    = 0.179844
   F1        = 0.303429


Total scoring time: 142.605 seconds
Refined model CLL: -0.317826


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.641952
   AUC PR    = 0.176542
   CLL	      = -0.325837
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 945.0160000000001 seconds
Total inference time: 22.756 seconds
AUC ROC: 0.641952
Total revision time: 945.0160000000001
Best scored revision CLL: -0.317826


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 05:37:07
{'AUC PR': 0.176542, 'AUC ROC': 0.641952, 'parameter_0.8': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Learning time': 15.534, 'F1': 0.235698, 'Inference time': 4.993, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.32304}, 'Learning time': 945.0160000000001, 'F1': 0.235698, 'Inference time': 22.756, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.325837}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2134231967028827;  // std dev = 0,479, 4.740,000 (wgt'ed) examples reached here.  /* #neg=3.056 #pos=1.684 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10814893509951236;  // std dev = 3,000, 48,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07554023944733845;  // std dev = 2,798, 46,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.030212110031129218;  // std dev = 6,462, 421,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=47 */
%   | | | else return 0.04762261931003758;  // std dev = 5,402, 190,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.730133938052164;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.0853063518452674;  // std dev = 5,250, 145,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=37 */
%   | | else return 0.830133938052164;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, C) )
%   | | | then return 0.14744163035985627;  // std dev = 4,746, 104,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | | | else return 0.49680060471883064;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.19690798315107938;  // std dev = 0,482, 4.346,000 (wgt'ed) examples reached here.  /* #neg=2.752 #pos=1.594 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( author(L, K), venue(L, A) )
%   | | then return 0.31954674027598445;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09625668660729132;  // std dev = 0,428, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | else return 0.004386028444454652;  // std dev = 0,352, 667,000 (wgt'ed) examples reached here.  /* #neg=569 #pos=98 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.1788387857327272;  // std dev = 4,761, 100,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=38 */
%   | | | else return 0.003000504252711435;  // std dev = 1,744, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else return 0.7193001621223318;  // std dev = 0,089, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.26487165333403606;  // std dev = 4,559, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | | else return -0.12509325978106453;  // std dev = 1,373, 35,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | else return 0.16866869716496524;  // std dev = 0,482, 4.330,000 (wgt'ed) examples reached here.  /* #neg=2.736 #pos=1.594 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.0026547650323567626;  // std dev = 0,344, 520,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=73 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.07674246789491805;  // std dev = 0,415, 172,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=39 */
%   | | else return -0.1483007263630471;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1261689733094171;  // std dev = 0,477, 4.757,000 (wgt'ed) examples reached here.  /* #neg=3.073 #pos=1.684 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7062366956389652;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1256346956574579;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07904515437418824;  // std dev = 3,031, 51,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return -0.13461885293287545;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0809220595773837;  // std dev = 2,880, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return -0.02170849336656201;  // std dev = 1,226, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.02322326861149442;  // std dev = 6,449, 408,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=47 */
%   | | | else return 0.020311526060926833;  // std dev = 5,435, 203,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10507884169539154;  // std dev = 0,478, 4.735,000 (wgt'ed) examples reached here.  /* #neg=3.051 #pos=1.684 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.07644267663034299;  // std dev = 0,810, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1588734766050555;  // std dev = 2,634, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.04357923376108851;  // std dev = 6,542, 274,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=55 */
%   | | | else return -0.07861692067483213;  // std dev = 2,737, 130,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02270931442983755;  // std dev = 5,513, 229,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=37 */
%   | | | else return -0.13980575567316186;  // std dev = 0,086, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.1335602829240483;  // std dev = 0,009, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09347288108683419;  // std dev = 0,480, 4.621,000 (wgt'ed) examples reached here.  /* #neg=2.937 #pos=1.684 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return -5.56819050520907E-5;  // std dev = 0,832, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.17661900880392278;  // std dev = 2,782, 35,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else return 0.033266255476412515;  // std dev = 0,286, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0013051758008522766;  // std dev = 6,599, 366,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=52 */
%   | | | else return -0.06216624444059653;  // std dev = 2,540, 95,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.036722126561162194;  // std dev = 5,415, 182,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=37 */
%   | | | else return -0.11820482926238264;  // std dev = 6,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordvenue(B, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.05896521259041909;  // std dev = 0,476, 4.366,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=1.520 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.15690435977372572;  // std dev = 4,059, 143,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=19 */
%   | | | else return 0.37029083691885484;  // std dev = 4,892, 107,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=71 */
%   | else if ( haswordtitle(D, G), haswordauthor(H, G) )
%   | | then return 0.0237865365240053;  // std dev = 0,358, 520,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=94 */
%   | | else return 0.09606844107221328;  // std dev = 0,410, 48,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.7069862394305124;  // std dev = 1,933, 58,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=54 */
%   | | | else return -0.15936388047738226;  // std dev = 1,259, 113,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=2 */
%   | | else return -0.001019550127741868;  // std dev = 0,334, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else return 0.4467796849316432;  // std dev = 0,375, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.5536283823384407;  // std dev = 0,095, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.08392403955464647;  // std dev = 4,798, 101,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=39 */
%   | | else return -0.10158537104321436;  // std dev = 0,290, 37,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | else return 0.05630787072225286;  // std dev = 0,477, 4.538,000 (wgt'ed) examples reached here.  /* #neg=2.907 #pos=1.631 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6471378063614982;  // std dev = 2,211, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return -0.1547201629492881;  // std dev = 0,291, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else return -0.038284548970164145;  // std dev = 0,306, 167,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=19 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.012285322725826437;  // std dev = 0,331, 287,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=37 */
%   | | else return -0.15828854510790438;  // std dev = 0,010, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6704028368609127;  // std dev = 0,403, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.2832838068205918;  // std dev = 0,243, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.08147727965437558;  // std dev = 3,986, 106,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=25 */
%   | | | else return 0.47768977089848114;  // std dev = 0,157, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, C) )
%   | | | then return 0.04044466783643264;  // std dev = 4,649, 97,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | | | else return 0.49141607675608445;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04809033590866626;  // std dev = 0,479, 4.384,000 (wgt'ed) examples reached here.  /* #neg=2.790 #pos=1.594 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.09667380659811622;  // std dev = 0,436, 46,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else return -0.008936217770316533;  // std dev = 0,311, 645,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=98 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4088783113056415;  // std dev = 0,117, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.031373115654709544;  // std dev = 0,474, 4.697,000 (wgt'ed) examples reached here.  /* #neg=3.025 #pos=1.672 */
%   else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | then if ( title(G, F), venue(G, A) )
%   | | then if ( title(H, F), venue(H, B) )
%   | | | then return 0.5178404491914648;  // std dev = 2,073, 60,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=55 */
%   | | | else return -0.13353758838094074;  // std dev = 0,862, 200,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=1 */
%   | | else if ( haswordauthor(I, E) )
%   | | | then return 0.07235575496622766;  // std dev = 2,733, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.06550603381616296;  // std dev = 2,732, 129,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=8 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.12035390591306526;  // std dev = 0,147, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005566179690921321;  // std dev = 5,542, 276,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=36 */
%   | | | else return -0.13937568941989478;  // std dev = 0,021, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.59113
   AUC PR    = 0.037287
   CLL	      = -0.373476
   Precision = 0.170732 at threshold = 0.5
   Recall    = 0.009079
   F1        = 0.017241


Total learning time: 1335.155 seconds
Total inference time: 27.662 seconds
AUC ROC: 0.59113


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 05:59:51
{'AUC PR': 0.037287, 'AUC ROC': 0.59113, 'Learning time': 1335.155, 'F1': 0.017241, 'Inference time': 27.662, 'Precision': [0.170732, 0.5], 'Recall': 0.009079, 'CLL': -0.373476}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21462649648816085;  // std dev = 0,479, 4.724,000 (wgt'ed) examples reached here.  /* #neg=3.040 #pos=1.684 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return -0.030739953789376676;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.15544623239680966;  // std dev = 2,780, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.025373792173215427;  // std dev = 6,019, 352,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=41 */
%   | | | else return 0.004302781253358494;  // std dev = 4,028, 130,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=19 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04261495451698703;  // std dev = 5,567, 206,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=38 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.541491
   AUC PR    = 0.012973
   CLL	      = -0.201106
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 25.64 seconds
Total inference time: 4.368 seconds
AUC ROC: 0.541491


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 06:00:22
{'AUC PR': 0.012973, 'AUC ROC': 0.541491, 'Learning time': 25.64, 'F1': nan, 'Inference time': 4.368, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.201106}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,53e-06, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.1537484248954255;  // std dev = 36,138, 6.272,000 (wgt'ed) examples reached here.  /* #neg=4.418 #pos=1.854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.1337948861847665;  // std dev = 36,143, 6.276,000 (wgt'ed) examples reached here.  /* #neg=4.422 #pos=1.854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11352398744681046;  // std dev = 36,177, 6.304,000 (wgt'ed) examples reached here.  /* #neg=4.450 #pos=1.854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09416700680753498;  // std dev = 36,226, 6.346,000 (wgt'ed) examples reached here.  /* #neg=4.492 #pos=1.854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08134267294841051;  // std dev = 36,161, 6.291,000 (wgt'ed) examples reached here.  /* #neg=4.437 #pos=1.854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.0668110215406527;  // std dev = 36,175, 6.303,000 (wgt'ed) examples reached here.  /* #neg=4.449 #pos=1.854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.05472226150726561;  // std dev = 36,179, 6.306,000 (wgt'ed) examples reached here.  /* #neg=4.452 #pos=1.854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2,19e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.043505013482722434;  // std dev = 36,207, 6.330,000 (wgt'ed) examples reached here.  /* #neg=4.476 #pos=1.854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03807552310453276;  // std dev = 36,136, 6.270,000 (wgt'ed) examples reached here.  /* #neg=4.416 #pos=1.854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.027507977717475766;  // std dev = 36,218, 6.339,000 (wgt'ed) examples reached here.  /* #neg=4.485 #pos=1.854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.32513
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 20.125 seconds
Total inference time: 5.394 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.324595
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 12.083 seconds
Parameter learned model CLL: -0.324595


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.138, 4418, 1854], 'true': [1.53e-06, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.143, 4422, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.177, 4450, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.226, 4492, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.161, 4437, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.175, 4449, 1854], 'true': [4.46e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.179, 4452, 1854], 'true': [2.46e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.207, 4476, 1854], 'true': [2.19e-07, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.136, 4416, 1854], 'true': [0.0, 0, 392]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.218, 4485, 1854], 'true': [0.0, 0, 392]}]]
[{'': [5.945357584931451e-15, 0.20822043142824948]}, {'': [-5.3653226985966745e-15, 0.20814337785019588]}, {'': [-1.1600697726695512e-15, 0.2076047719278351]}, {'': [-1.740104659004327e-15, 0.20679943213734525]}, {'': [-1.5407176668267478e-15, 0.20785467078452766]}, {'': [5.075305255429287e-16, 0.20762398449917857]}, {'': [1.5407176668267478e-16, 0.20756635201308973]}, {'': [1.2235110883624173e-16, 0.20710586015591653]}, {'': [-2.628283078704452e-16, 0.20825896843013966]}, {'': [-3.149408171895852e-16, 0.20693343821369686]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,53e-06, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17026243091616775;  // std dev = 0,463, 5.498,000 (wgt'ed) examples reached here.  /* #neg=3.782 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20508771060971645;  // std dev = 3,332, 49,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return -0.024204006076958388;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014947511600994856;  // std dev = 8,092, 591,000 (wgt'ed) examples reached here.  /* #neg=516 #pos=75 */
%   | | | else return 0.061852638803215405;  // std dev = 5,919, 216,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=44 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14109192227185727;  // std dev = 0,460, 5.627,000 (wgt'ed) examples reached here.  /* #neg=3.911 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2459402520928281;  // std dev = 3,155, 41,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return -0.021283130990843033;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.009151184313874893;  // std dev = 8,074, 573,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=75 */
%   | | | else return 0.04776101003728175;  // std dev = 5,943, 223,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=44 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10999255161303723;  // std dev = 5,636, 153,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   | | | else return 0.6908749045542136;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.13300850470668857;  // std dev = 0,465, 5.247,000 (wgt'ed) examples reached here.  /* #neg=3.583 #pos=1.664 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.08390795267125943;  // std dev = 7,155, 286,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=67 */
%   | | | else return -0.024305578921870137;  // std dev = 4,637, 199,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=26 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.020088685891604455;  // std dev = 6,297, 379,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=45 */
%   | | | else return -0.15572503794482734;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10777372706884447;  // std dev = 0,463, 5.487,000 (wgt'ed) examples reached here.  /* #neg=3.771 #pos=1.716 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3444381382286309;  // std dev = 1,379, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.06092312992000568;  // std dev = 3,426, 71,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0724022579790881;  // std dev = 3,506, 67,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | | else return -0.014163459201549078;  // std dev = 9,374, 775,000 (wgt'ed) examples reached here.  /* #neg=673 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16048699908890415;  // std dev = 5,325, 122,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=47 */
%   | | | else return -0.1217568367984687;  // std dev = 2,025, 49,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=5 */
%   | | else return 0.09497260242771334;  // std dev = 0,466, 5.232,000 (wgt'ed) examples reached here.  /* #neg=3.568 #pos=1.664 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.13257724575534144;  // std dev = 3,442, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return -0.020388635999738895;  // std dev = 1,242, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.020696790556929374;  // std dev = 8,098, 630,000 (wgt'ed) examples reached here.  /* #neg=554 #pos=76 */
%   | | | else return 0.0387628830645536;  // std dev = 5,835, 214,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=43 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07660735765451168;  // std dev = 0,465, 5.420,000 (wgt'ed) examples reached here.  /* #neg=3.704 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.04917850362081632;  // std dev = 7,216, 308,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=67 */
%   | | | else return -0.02564792922002107;  // std dev = 4,614, 209,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=26 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.004890209093930131;  // std dev = 6,256, 350,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=45 */
%   | | | else return -0.13942718438613017;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06298367782690584;  // std dev = 0,465, 5.409,000 (wgt'ed) examples reached here.  /* #neg=3.693 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19090064660368067;  // std dev = 3,167, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return -0.05859337150374867;  // std dev = 1,363, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.013731261705836374;  // std dev = 8,055, 604,000 (wgt'ed) examples reached here.  /* #neg=529 #pos=75 */
%   | | | else return 0.052005698261949576;  // std dev = 5,799, 196,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=44 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2,19e-07, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05039219621370456;  // std dev = 0,465, 5.417,000 (wgt'ed) examples reached here.  /* #neg=3.701 #pos=1.716 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0016419681490728497;  // std dev = 8,156, 493,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=84 */
%   | | | else return 0.1605443752583232;  // std dev = 2,536, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.00275724484295305;  // std dev = 6,260, 349,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=45 */
%   | | | else return -0.12922945311031353;  // std dev = 0,002, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.041934975943789816;  // std dev = 0,465, 5.392,000 (wgt'ed) examples reached here.  /* #neg=3.676 #pos=1.716 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.13679360432528123;  // std dev = 1,545, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.021058742702202937;  // std dev = 3,422, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.009841820790251686;  // std dev = 8,016, 587,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=76 */
%   | | | else return 0.012280669768067628;  // std dev = 5,862, 222,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=43 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.041345683917998546;  // std dev = 5,504, 138,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | | | else return 0.6940371957871518;  // std dev = 0,089, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.04160961539526777;  // std dev = 5,540, 147,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
%   | | | else return 0.027873243661707296;  // std dev = 33,328, 5.169,000 (wgt'ed) examples reached here.  /* #neg=3.553 #pos=1.616 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.2941879893131095;  // std dev = 1,406, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.031383208843710826;  // std dev = 3,272, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.04348958290736574;  // std dev = 3,577, 75,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | | else return -0.012444731593733131;  // std dev = 9,329, 758,000 (wgt'ed) examples reached here.  /* #neg=656 #pos=102 */


Results
   AUC ROC   = 0.614566
   AUC PR    = 0.159023
   CLL	      = -0.328753
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 237.378 seconds
Total inference time: 11.2 seconds
AUC ROC: 0.614566


Results scoring model
   AUC ROC   = 0.634552
   AUC PR    = 0.201762
   CLL	      = -0.321868
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.175423
   F1        = 0.298485


Total scoring time: 45.153 seconds
Refined model CLL: -0.321868


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.614566
   AUC PR    = 0.159023
   CLL	      = -0.328753
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 314.73900000000003 seconds
Total inference time: 11.2 seconds
AUC ROC: 0.614566
Total revision time: 314.73900000000003
Best scored revision CLL: -0.321868


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:05:55
{'AUC PR': 0.159023, 'AUC ROC': 0.614566, 'Learning time': 314.73900000000003, 'F1': 0.235698, 'Inference time': 11.2, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'parameter_1.0': {'AUC PR': 0.151416, 'AUC ROC': 0.566796, 'Learning time': 20.125, 'F1': 0.235698, 'Inference time': 5.394, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'CLL': -0.32513}, 'CLL': -0.328753}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.13863673997756093;  // std dev = 5,753, 164,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=46 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2199490768429515;  // std dev = 0,481, 5.644,000 (wgt'ed) examples reached here.  /* #neg=3.602 #pos=2.042 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.8152917922423699;  // std dev = 1,695, 70,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=67 */
%   | | | else return -0.14185106490048846;  // std dev = 0,000, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.17729787126972513;  // std dev = 3,196, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.07518439823382099;  // std dev = 3,204, 165,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=11 */
%   | else return -0.024967948017371094;  // std dev = 0,321, 385,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=45 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6963800907632108;  // std dev = 0,230, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.21349035208395514;  // std dev = 5,225, 119,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   | | | else return -0.10600765180632657;  // std dev = 1,685, 56,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=3 */
%   | else return 0.19707337636778977;  // std dev = 0,482, 5.551,000 (wgt'ed) examples reached here.  /* #neg=3.509 #pos=2.042 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.20807220569203339;  // std dev = 0,950, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.16211066481643163;  // std dev = 3,176, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else return 0.012637380178945666;  // std dev = 0,325, 467,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=76 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return 0.0022270049994812624;  // std dev = 0,348, 319,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=45 */
%   | | else return -0.1388388257215226;  // std dev = 9,13e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16181811996527723;  // std dev = 0,480, 5.814,000 (wgt'ed) examples reached here.  /* #neg=3.706 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.26742489135809405;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10281725159514142;  // std dev = 3,244, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.2633482270527755;  // std dev = 1,091, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.13627430625208098;  // std dev = 0,019, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08926318608598334;  // std dev = 2,897, 59,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return -0.02508101165947676;  // std dev = 7,139, 527,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=60 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.05390362303883928;  // std dev = 5,076, 207,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=44 */
%   | | | else return -0.12305565750887658;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.5081794583681204;  // std dev = 0,235, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( haswordtitle(F, C) )
%   | | | then return 0.05530977462031376;  // std dev = 5,552, 152,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=43 */
%   | | | else return 0.7722675226478272;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13345380838179566;  // std dev = 0,480, 5.662,000 (wgt'ed) examples reached here.  /* #neg=3.620 #pos=2.042 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.6563680347519402;  // std dev = 1,944, 71,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=67 */
%   | | | else return -0.13257448079007708;  // std dev = 0,076, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | | else return -0.016346193080533;  // std dev = 0,325, 201,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=26 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.009432438861373628;  // std dev = 0,333, 354,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=45 */
%   | | else return -0.11030433408599323;  // std dev = 0,001, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11062957958499253;  // std dev = 0,479, 5.808,000 (wgt'ed) examples reached here.  /* #neg=3.700 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.04640306665199627;  // std dev = 5,293, 281,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=65 */
%   | | | else return -0.06343541089605143;  // std dev = 3,118, 204,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=19 */
%   | | else return 0.1199668139738781;  // std dev = 0,433, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.017256724070531845;  // std dev = 6,024, 282,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=43 */
%   | | | else return -0.11054540583339312;  // std dev = 1,397, 80,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=2 */
%   | | else return -0.10000520320054253;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.692659881525809;  // std dev = 0,605, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.25471771431368756;  // std dev = 0,065, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.40747133172499017;  // std dev = 0,213, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.0033307338557111432;  // std dev = 4,256, 99,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | else return 0.08674775168137398;  // std dev = 0,480, 5.677,000 (wgt'ed) examples reached here.  /* #neg=3.635 #pos=2.042 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.6866504986379123;  // std dev = 0,269, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1379655218339716;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.053055692383968865;  // std dev = 0,324, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else return -0.009435508427073896;  // std dev = 0,306, 837,000 (wgt'ed) examples reached here.  /* #neg=718 #pos=119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06954280991677989;  // std dev = 0,478, 5.840,000 (wgt'ed) examples reached here.  /* #neg=3.732 #pos=2.108 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1073398790350387;  // std dev = 0,988, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.02514911569261846;  // std dev = 2,253, 62,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.00219167550474651;  // std dev = 7,385, 473,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=65 */
%   | | | else return -0.05993401699701568;  // std dev = 2,460, 141,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.03795192547642141;  // std dev = 0,510, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.15667047193574382;  // std dev = 0,076, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008350858492779105;  // std dev = 4,225, 223,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=44 */
%   | | | else return -0.09116398499396104;  // std dev = 0,005, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.053627170605796755;  // std dev = 0,478, 5.860,000 (wgt'ed) examples reached here.  /* #neg=3.752 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.037566901632946646;  // std dev = 0,697, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.18834406083543967;  // std dev = 2,970, 38,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.34103451282112807;  // std dev = 0,972, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12212069277118352;  // std dev = 0,011, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.01537978214065368;  // std dev = 4,951, 312,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=65 */
%   | | | else return -0.06536708092983479;  // std dev = 3,169, 172,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 7.59418844421969E-4;  // std dev = 6,073, 320,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=43 */
%   | | | else return -0.0837882568460304;  // std dev = 0,005, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.042617885753748565;  // std dev = 0,477, 5.855,000 (wgt'ed) examples reached here.  /* #neg=3.747 #pos=2.108 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.0393273552880728;  // std dev = 0,714, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.14073202733478155;  // std dev = 2,995, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else return -0.04622738026137298;  // std dev = 0,244, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.003945483404822303;  // std dev = 5,042, 326,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=65 */
%   | | | else return -0.06105196335687604;  // std dev = 3,178, 177,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.005961002147027821;  // std dev = 6,095, 337,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=43 */
%   | | | else return -0.07716106559946201;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.029595659995011462;  // std dev = 0,477, 5.342,000 (wgt'ed) examples reached here.  /* #neg=3.443 #pos=1.899 */
%   | | else return 0.024913079557614574;  // std dev = 0,361, 541,000 (wgt'ed) examples reached here.  /* #neg=441 #pos=100 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.19580513818865014;  // std dev = 0,297, 305,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.38967485024569715;  // std dev = 4,652, 110,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=80 */
%   | | | else return 0.05293814605613221;  // std dev = 3,894, 150,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=38 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.33571015979802676;  // std dev = 2,586, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | | | else return 0.4111531495181701;  // std dev = 0,839, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.6260914095058331;  // std dev = 0,193, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0.007389492983949346;  // std dev = 0,277, 231,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=45 */


Results
   AUC ROC   = 0.590113
   AUC PR    = 0.049578
   CLL	      = -0.376168
   Precision = 0.333333 at threshold = 0.5
   Recall    = 0.003891
   F1        = 0.007692


Total learning time: 2117.257 seconds
Total inference time: 29.016 seconds
AUC ROC: 0.590113


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 06:41:42
{'AUC PR': 0.049578, 'AUC ROC': 0.590113, 'Learning time': 2117.257, 'F1': 0.007692, 'Inference time': 29.016, 'Precision': [0.333333, 0.5], 'Recall': 0.003891, 'CLL': -0.376168}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordtitle(G, C) )
%   | | | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return 0.16096583650796256;  // std dev = 5,475, 142,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=43 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.21854427572781637;  // std dev = 0,480, 5.666,000 (wgt'ed) examples reached here.  /* #neg=3.624 #pos=2.042 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordauthor(K, I) )
%   | | then return 0.21985106275908683;  // std dev = 0,480, 47,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | else if ( title(L, J), venue(L, A) )
%   | | | then return 0.06648226843284628;  // std dev = 7,173, 312,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=65 */
%   | | | else return -0.08073995378937654;  // std dev = 3,214, 180,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=11 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then if ( title(P, N), venue(P, B) )
%   | | | then return -0.004030552079975319;  // std dev = 6,089, 312,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=43 */
%   | | | else return -0.11482403787346067;  // std dev = 1,395, 74,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.543975
   AUC PR    = 0.014571
   CLL	      = -0.201682
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 62.435 seconds
Total inference time: 6.577 seconds
AUC ROC: 0.543975


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 06:42:52
{'AUC PR': 0.014571, 'AUC ROC': 0.543975, 'Learning time': 62.435, 'F1': nan, 'Inference time': 6.577, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.201682}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 199372

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 50581

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995121;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.15526645172921916;  // std dev = 16,809, 1.353,000 (wgt'ed) examples reached here.  /* #neg=951 #pos=402 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.12948235129271177;  // std dev = 16,879, 1.380,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=402 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,72e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.11717540857993386;  // std dev = 16,807, 1.352,000 (wgt'ed) examples reached here.  /* #neg=950 #pos=402 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 1,33e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.08943201575079962;  // std dev = 16,923, 1.398,000 (wgt'ed) examples reached here.  /* #neg=996 #pos=402 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.08136073741988945;  // std dev = 16,846, 1.367,000 (wgt'ed) examples reached here.  /* #neg=965 #pos=402 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.06613220016100188;  // std dev = 16,861, 1.373,000 (wgt'ed) examples reached here.  /* #neg=971 #pos=402 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.05756532874262024;  // std dev = 16,823, 1.358,000 (wgt'ed) examples reached here.  /* #neg=956 #pos=402 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.03972442192683071;  // std dev = 16,909, 1.392,000 (wgt'ed) examples reached here.  /* #neg=990 #pos=402 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.031187196480472433;  // std dev = 16,921, 1.397,000 (wgt'ed) examples reached here.  /* #neg=995 #pos=402 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.01679462341575498;  // std dev = 17,020, 1.439,000 (wgt'ed) examples reached here.  /* #neg=1.037 #pos=402 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.318234
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.738 seconds
Total inference time: 4.404 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.587269
   AUC PR    = 0.193587
   CLL	      = -0.318751
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174538
   F1        = 0.297203


Total scoring time: 4.728 seconds
Parameter learned model CLL: -0.318751


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.809, 951, 402], 'true': [0.0, 0, 85]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.879, 978, 402], 'true': [2.8e-07, 0, 85]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.807, 950, 402], 'true': [3.72e-07, 0, 85]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.923, 996, 402], 'true': [1.33e-07, 0, 85]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.846, 965, 402], 'true': [0.0, 0, 85]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.861, 971, 402], 'true': [0.0, 0, 85]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.823, 956, 402], 'true': [0.0, 0, 85]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.909, 990, 402], 'true': [4.21e-08, 0, 85]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.921, 995, 402], 'true': [0.0, 0, 85]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.02, 1037, 402], 'true': [5.77e-08, 0, 85]}]]
[{'': [-3.343730521224001e-16, 0.20883869794148693]}, {'': [9.195258933366003e-16, 0.20644612476369617]}, {'': [1.6300686290967004e-15, 0.20892782115473907]}, {'': [2.0898315757650005e-16, 0.20486654755106487]}, {'': [-3.343730521224001e-16, 0.20759473620275806]}, {'': [-5.224578939412501e-17, 0.20706381367003365]}, {'': [-1.2016531560648752e-16, 0.20839361358316416]}, {'': [2.0898315757650005e-17, 0.205391646848983]}, {'': [-5.747036833353752e-17, 0.2049539636269426]}, {'': [3.918434204559376e-17, 0.2013182847906528]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995121;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18856085446848206;  // std dev = 0,470, 1.141,000 (wgt'ed) examples reached here.  /* #neg=764 #pos=377 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.006663786584660875;  // std dev = 3,574, 101,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=15 */
%   | | | else return -0.06777699082641366;  // std dev = 1,925, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5002777636586636;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.016388903008003032;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else return 0.14885657502817673;  // std dev = 0,465, 1.161,000 (wgt'ed) examples reached here.  /* #neg=795 #pos=366 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.13998681966992202;  // std dev = 3,332, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.04722252325069778;  // std dev = 2,131, 51,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
%   | | else return -0.07226069128277421;  // std dev = 0,240, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,72e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3677301808989343;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.10859915864443598;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.044485493984702355;  // std dev = 2,770, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.12893536869736563;  // std dev = 15,593, 1.123,000 (wgt'ed) examples reached here.  /* #neg=767 #pos=356 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.015096924493009492;  // std dev = 3,678, 97,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=17 */
%   | | | else return 0.17070708251689673;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.056743787689950934;  // std dev = 1,934, 56,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=4 */
%   | | | else return -0.12564371679941602;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 1,33e-07, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10781961417988796;  // std dev = 0,464, 1.190,000 (wgt'ed) examples reached here.  /* #neg=813 #pos=377 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.17042803801124257;  // std dev = 0,036, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3971099949780938;  // std dev = 1,519, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.0254381532683816;  // std dev = 3,598, 114,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=15 */
%   | | | else return -0.061467872527524364;  // std dev = 1,941, 69,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2875595816628917;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.08782297487691997;  // std dev = 1,631, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else return 0.07710396992485131;  // std dev = 0,459, 1.204,000 (wgt'ed) examples reached here.  /* #neg=837 #pos=367 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.023472482528726826;  // std dev = 3,462, 80,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | | | else return -0.026801838474876927;  // std dev = 2,087, 42,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.21673689430991877;  // std dev = 0,105, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.04709561600569693;  // std dev = 1,932, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08431534371436909;  // std dev = 0,468, 1.157,000 (wgt'ed) examples reached here.  /* #neg=780 #pos=377 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.13026599552982768;  // std dev = 0,044, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.22097961032866728;  // std dev = 1,697, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 6.618385291815625E-4;  // std dev = 3,548, 97,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=15 */
%   | | | else return -0.04056175520403552;  // std dev = 1,931, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2572384028780601;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.14019393826377255;  // std dev = 1,677, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | else return 0.06260156018156561;  // std dev = 0,466, 1.147,000 (wgt'ed) examples reached here.  /* #neg=780 #pos=367 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.14166286508259762;  // std dev = 1,463, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.3265774570657982;  // std dev = 0,712, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.005035805813380626;  // std dev = 3,536, 95,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=15 */
%   | | | else return -0.04298247938078734;  // std dev = 1,937, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.31492239489374707;  // std dev = 1,688, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.07460211469815085;  // std dev = 1,359, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return 0.04774764241589941;  // std dev = 0,464, 1.157,000 (wgt'ed) examples reached here.  /* #neg=790 #pos=367 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.07208006669644247;  // std dev = 3,267, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return -0.052802403183114015;  // std dev = 2,131, 53,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.10075268982334026;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.046512672903085424;  // std dev = 1,952, 71,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04177250668188025;  // std dev = 0,465, 1.174,000 (wgt'ed) examples reached here.  /* #neg=797 #pos=377 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.01338038620198321;  // std dev = 1,579, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.24270312575471084;  // std dev = 0,679, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02740898257522071;  // std dev = 3,394, 134,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=13 */
%   | | | else return -0.04751946883927893;  // std dev = 2,284, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.15299169736729565;  // std dev = 1,844, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.06263953267379385;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return 0.03467584143568197;  // std dev = 0,465, 1.143,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=366 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.018292348108759262;  // std dev = 3,378, 70,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | | else return -0.03453571589756469;  // std dev = 2,159, 45,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.04281553478408696;  // std dev = 1,948, 78,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=4 */
%   | | | else return -0.13204841718268592;  // std dev = 0,256, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.615216
   AUC PR    = 0.188503
   CLL	      = -0.319664
   Precision = 0.379699 at threshold = 0.5
   Recall    = 0.173838
   F1        = 0.238489


Total learning time: 74.144 seconds
Total inference time: 11.46 seconds
AUC ROC: 0.615216


Results scoring model
   AUC ROC   = 0.647693
   AUC PR    = 0.204145
   CLL	      = -0.325639
   Precision = 0.604167 at threshold = 0.5
   Recall    = 0.178645
   F1        = 0.275753


Total scoring time: 17.101 seconds
Refined model CLL: -0.325639


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.318234
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 99.711 seconds
Total inference time: 4.404 seconds
AUC ROC: 0.585198
Total revision time: 99.711
Best scored revision CLL: -0.318751


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 06:44:49
{'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 99.711, 'F1': 0.291176, 'Inference time': 4.404, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'parameter_0.2': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 3.738, 'F1': 0.291176, 'Inference time': 4.404, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.318234}, 'CLL': -0.318234}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.4945125714631487;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.04810106490048779;  // std dev = 1,649, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | else return 0.2166092398308627;  // std dev = 0,480, 1.247,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=447 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return -0.009107702068629249;  // std dev = 0,339, 113,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=15 */
%   | | else return -0.0812450042944271;  // std dev = 0,239, 66,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19117847656113288;  // std dev = 0,480, 1.276,000 (wgt'ed) examples reached here.  /* #neg=814 #pos=462 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6868087345010092;  // std dev = 1,565, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.1429755186833362;  // std dev = 0,087, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.0881144236455161;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.025920664073782088;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.07234141890334363;  // std dev = 1,939, 67,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=4 */
%   | | | else return -0.14333237443926078;  // std dev = 0,046, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1322459352225729;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.14956505966039302;  // std dev = 0,476, 1.324,000 (wgt'ed) examples reached here.  /* #neg=862 #pos=462 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6718393861637856;  // std dev = 0,958, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1299811145755291;  // std dev = 0,125, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06792319807492553;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.07831217680766266;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.12351320536425607;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07203666233727198;  // std dev = 0,219, 79,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7067015042566426;  // std dev = 0,097, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.27592939465242566;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.6459096504383818;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08133073748413183;  // std dev = 1,643, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | else return 0.1193424381045204;  // std dev = 0,475, 1.302,000 (wgt'ed) examples reached here.  /* #neg=855 #pos=447 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return -0.1028803053297171;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(L, J), venue(L, B) )
%   | | | then return 0.2741856401223927;  // std dev = 0,502, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2093785637543944;  // std dev = 0,977, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return -0.02906907531546;  // std dev = 0,266, 179,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=19 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10600233542325051;  // std dev = 0,475, 1.310,000 (wgt'ed) examples reached here.  /* #neg=848 #pos=462 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.21764630372225527;  // std dev = 0,329, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.03998329676548;  // std dev = 0,678, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return 0.13313636239831497;  // std dev = 0,863, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.01951102425545469;  // std dev = 2,848, 111,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=14 */
%   | | else return -0.051522085271786915;  // std dev = 0,240, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08899395791863708;  // std dev = 0,476, 1.300,000 (wgt'ed) examples reached here.  /* #neg=838 #pos=462 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.16604355058111803;  // std dev = 0,946, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.007215920104242935;  // std dev = 2,422, 94,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=15 */
%   | | | else return 0.07461026603431929;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else return -0.04419646626792499;  // std dev = 0,244, 63,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.3582734837299062;  // std dev = 0,973, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.1782031397069204;  // std dev = 1,189, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.09616015653255178;  // std dev = 0,276, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else return 0.07404613800250713;  // std dev = 0,479, 1.251,000 (wgt'ed) examples reached here.  /* #neg=804 #pos=447 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, H) )
%   | | | then return 0.235587604226611;  // std dev = 0,840, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.01781913142158862;  // std dev = 2,470, 102,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=15 */
%   | | else return 0.1501285517812609;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.03922227288484151;  // std dev = 0,253, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | else return -0.09882799503645039;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06388222346392469;  // std dev = 0,478, 1.268,000 (wgt'ed) examples reached here.  /* #neg=806 #pos=462 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4965150323795978;  // std dev = 0,984, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.11027604402184607;  // std dev = 0,163, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06764682227162122;  // std dev = 0,909, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.044040615164686096;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else return -0.039824297619085014;  // std dev = 0,241, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.6608938229382173;  // std dev = 0,160, 450,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=439 */
%   | | else return -0.27913607486237996;  // std dev = 0,121, 941,000 (wgt'ed) examples reached here.  /* #neg=930 #pos=11 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( title(G, D), venue(G, B) )
%   | | | then return -0.31208705374116197;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.6539012185856804;  // std dev = 0,289, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.1387306827949032;  // std dev = 0,907, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.0058006712075577465;  // std dev = 1,098, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then return 0.4879129462588382;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.6879129462588379;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.015116149707449199;  // std dev = 0,232, 38,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03528815048020769;  // std dev = 0,382, 1.253,000 (wgt'ed) examples reached here.  /* #neg=791 #pos=462 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.42296788262978446;  // std dev = 0,425, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.10089039204869468;  // std dev = 0,152, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return -0.02193637565354285;  // std dev = 1,722, 42,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | | else return -0.15942812068608064;  // std dev = 0,177, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.09780030848179805;  // std dev = 0,110, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.030832280116922198;  // std dev = 0,206, 74,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=4 */


Results
   AUC ROC   = 0.942057
   AUC PR    = 0.258399
   CLL	      = -0.297189
   Precision = 0.2375 at threshold = 0.5
   Recall    = 0.032702
   F1        = 0.057489


Total learning time: 423.468 seconds
Total inference time: 26.929 seconds
AUC ROC: 0.942057


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 06:52:20
{'AUC PR': 0.258399, 'AUC ROC': 0.942057, 'Learning time': 423.468, 'F1': 0.057489, 'Inference time': 26.929, 'Precision': [0.2375, 0.5], 'Recall': 0.032702, 'CLL': -0.297189}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23163317115447915;  // std dev = 0,484, 1.237,000 (wgt'ed) examples reached here.  /* #neg=775 #pos=462 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7993254056877476;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.10851773156715441;  // std dev = 0,983, 30,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | | else return 0.0399671169176941;  // std dev = 1,809, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else return -0.09121815350808263;  // std dev = 0,219, 79,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=4 */


Results
   AUC ROC   = 0.574181
   AUC PR    = 0.02066
   CLL	      = -0.199232
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.171 seconds
Total inference time: 3.783 seconds
AUC ROC: 0.574181


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 06:52:44
{'AUC PR': 0.02066, 'AUC ROC': 0.574181, 'Learning time': 20.171, 'F1': nan, 'Inference time': 3.783, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.199232}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,46e-07, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.15691167163516953;  // std dev = 23,994, 2.748,000 (wgt'ed) examples reached here.  /* #neg=1.927 #pos=821 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.13639166086523485;  // std dev = 24,000, 2.751,000 (wgt'ed) examples reached here.  /* #neg=1.930 #pos=821 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,33e-07, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.11421391705623948;  // std dev = 24,047, 2.777,000 (wgt'ed) examples reached here.  /* #neg=1.956 #pos=821 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,62e-07, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.09727123468418802;  // std dev = 24,036, 2.771,000 (wgt'ed) examples reached here.  /* #neg=1.950 #pos=821 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,89e-07, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.07585334906701137;  // std dev = 24,129, 2.823,000 (wgt'ed) examples reached here.  /* #neg=2.002 #pos=821 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.062364445253007245;  // std dev = 24,136, 2.827,000 (wgt'ed) examples reached here.  /* #neg=2.006 #pos=821 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,49e-07, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.057604539757950705;  // std dev = 24,027, 2.766,000 (wgt'ed) examples reached here.  /* #neg=1.945 #pos=821 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.04066227042708838;  // std dev = 24,135, 2.826,000 (wgt'ed) examples reached here.  /* #neg=2.005 #pos=821 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.03926569171527229;  // std dev = 24,027, 2.766,000 (wgt'ed) examples reached here.  /* #neg=1.945 #pos=821 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6,99e-08, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.024768768222155;  // std dev = 24,145, 2.832,000 (wgt'ed) examples reached here.  /* #neg=2.011 #pos=821 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.3237
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 6.632 seconds
Total inference time: 4.321 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.578542
   AUC PR    = 0.175657
   CLL	      = -0.324453
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.157084
   F1        = 0.271517


Total scoring time: 6.633 seconds
Parameter learned model CLL: -0.324453


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.994, 1927, 821], 'true': [9.46e-07, 0, 153]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.0, 1930, 821], 'true': [0.0, 0, 153]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.047, 1956, 821], 'true': [5.33e-07, 0, 153]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.036, 1950, 821], 'true': [4.62e-07, 0, 153]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.129, 2002, 821], 'true': [2.89e-07, 0, 153]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.136, 2006, 821], 'true': [0.0, 0, 153]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.027, 1945, 821], 'true': [2.49e-07, 0, 153]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.135, 2005, 821], 'true': [0.0, 0, 153]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.027, 1945, 821], 'true': [0.0, 0, 153]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.145, 2011, 821], 'true': [6.99e-08, 0, 153]}]]
[{'': [5.851528412142001e-15, 0.2095035637934099]}, {'': [-2.507797890918001e-15, 0.20937232962839075]}, {'': [1.8576280673466673e-15, 0.20823812662506477]}, {'': [1.3932210505100003e-15, 0.2084993555332133]}, {'': [5.456782447830835e-16, 0.2062459712730992]}, {'': [-1.8576280673466672e-16, 0.2060736525561944]}, {'': [4.0635613973208343e-16, 0.20871728231822956]}, {'': [-3.0766964865429174e-16, 0.20611671823010744]}, {'': [-3.773307011797918e-17, 0.20871728231825296]}, {'': [3.192798240752084e-17, 0.20585846480097908]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9,46e-07, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18514513281813844;  // std dev = 0,469, 2.367,000 (wgt'ed) examples reached here.  /* #neg=1.593 #pos=774 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2867203636709409;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.008823541964708404;  // std dev = 5,014, 218,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=29 */
%   | | | else return -0.04661296966239242;  // std dev = 3,295, 126,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1506487474620962;  // std dev = 0,465, 2.445,000 (wgt'ed) examples reached here.  /* #neg=1.671 #pos=774 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.08076368174366856;  // std dev = 4,484, 117,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=26 */
%   | | | else return -0.040980177266663094;  // std dev = 2,798, 87,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.041782874867872445;  // std dev = 3,296, 127,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,33e-07, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5205084803567116;  // std dev = 2,227, 24,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return -0.07873394388571259;  // std dev = 2,312, 55,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
%   | | else return 0.13997959922764613;  // std dev = 0,469, 2.291,000 (wgt'ed) examples reached here.  /* #neg=1.540 #pos=751 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.15582227962577416;  // std dev = 1,991, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.11602637498321818;  // std dev = 0,020, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.009495266688737578;  // std dev = 4,991, 213,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=29 */
%   | | | else return -0.030587146302435312;  // std dev = 3,285, 119,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4,62e-07, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.38079312085275707;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.11532525996345402;  // std dev = 2,344, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.11749298852488925;  // std dev = 0,469, 2.298,000 (wgt'ed) examples reached here.  /* #neg=1.545 #pos=753 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.17192348409092384;  // std dev = 1,932, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.10125820149583596;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.00322840951799922;  // std dev = 4,975, 206,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=29 */
%   | | | else return -0.031200825428354076;  // std dev = 3,292, 124,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2,89e-07, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.06231347622684708;  // std dev = 3,121, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return 0.263597348127898;  // std dev = 1,798, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.07433831553857456;  // std dev = 3,557, 68,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | | else return 0.09261416703439788;  // std dev = 22,263, 2.267,000 (wgt'ed) examples reached here.  /* #neg=1.535 #pos=732 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.34526459931569925;  // std dev = 1,538, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2557225861929986;  // std dev = 1,087, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.009067169095256905;  // std dev = 4,840, 203,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=28 */
%   | | | else return -0.04137089065905933;  // std dev = 3,315, 147,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949045;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20240132901159524;  // std dev = 3,033, 38,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return -0.0816735042626452;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else return 0.07502335293303712;  // std dev = 0,466, 2.337,000 (wgt'ed) examples reached here.  /* #neg=1.584 #pos=753 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.30124436247714126;  // std dev = 1,655, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.09728980527342147;  // std dev = 0,036, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.022635223493421477;  // std dev = 2,166, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return -0.020836580081293438;  // std dev = 5,557, 312,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=35 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2,49e-07, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.05394144978066518;  // std dev = 3,287, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return 0.16445248147992966;  // std dev = 1,834, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return 0.06022489231190094;  // std dev = 0,466, 2.341,000 (wgt'ed) examples reached here.  /* #neg=1.588 #pos=753 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.036998090293795416;  // std dev = 4,515, 133,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=26 */
%   | | | else return -0.0322524784593955;  // std dev = 2,692, 77,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02520302392402938;  // std dev = 3,307, 126,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=12 */
%   | | | else return -0.11790804291282976;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.23922545421208535;  // std dev = 2,681, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return -0.12102062122777209;  // std dev = 2,029, 37,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | else return 0.047262107828178496;  // std dev = 0,467, 2.339,000 (wgt'ed) examples reached here.  /* #neg=1.588 #pos=751 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.1746130203416889;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.15144186404853394;  // std dev = 2,038, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.003527905882769988;  // std dev = 4,798, 191,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=28 */
%   | | | else return -0.02155296191644805;  // std dev = 3,296, 130,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.04612316451690113;  // std dev = 3,471, 53,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.29642681674452004;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.03897368147950778;  // std dev = 0,466, 2.341,000 (wgt'ed) examples reached here.  /* #neg=1.588 #pos=753 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.03276502409965422;  // std dev = 4,727, 240,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=26 */
%   | | | else return 0.04232575735894228;  // std dev = 2,553, 41,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012514435126368115;  // std dev = 3,236, 76,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=13 */
%   | | | else return -0.10053820643221345;  // std dev = 0,031, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6,99e-08, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.02174049712577407;  // std dev = 22,285, 2.324,000 (wgt'ed) examples reached here.  /* #neg=1.596 #pos=728 */
%   | | | else return 0.05077404837228086;  // std dev = 4,964, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.07367930551660835;  // std dev = 4,130, 129,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=26 */
%   | | | else return -0.07283222043607014;  // std dev = 0,653, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.6538781571593898;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.0068960214461531;  // std dev = 3,240, 79,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   | | | else return -0.09514346479813335;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.619843
   AUC PR    = 0.195939
   CLL	      = -0.3246
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 220.133 seconds
Total inference time: 22.19 seconds
AUC ROC: 0.619843


Results scoring model
   AUC ROC   = 0.654843
   AUC PR    = 0.200936
   CLL	      = -0.327584
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.157084
   F1        = 0.271517


Total scoring time: 172.29 seconds
Refined model CLL: -0.327584


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.3237
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 405.688 seconds
Total inference time: 4.321 seconds
AUC ROC: 0.585198
Total revision time: 405.688
Best scored revision CLL: -0.324453


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 06:59:57
{'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'parameter_0.4': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 6.632, 'F1': 0.291176, 'Inference time': 4.321, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.3237}, 'Learning time': 405.688, 'F1': 0.291176, 'Inference time': 4.321, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.3237}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21898972918280815;  // std dev = 0,480, 2.569,000 (wgt'ed) examples reached here.  /* #neg=1.642 #pos=927 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.274815601766179;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.03789066886088382;  // std dev = 4,338, 202,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=21 */
%   | | | else return 0.04862512557570285;  // std dev = 2,545, 42,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.03708916013858291;  // std dev = 3,138, 105,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18934754937878076;  // std dev = 0,480, 2.575,000 (wgt'ed) examples reached here.  /* #neg=1.648 #pos=927 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.5155029362275315;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.10826236624275634;  // std dev = 1,743, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.13911058666883;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.035316415344835074;  // std dev = 4,315, 200,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=21 */
%   | | | else return 0.04724808113456796;  // std dev = 2,538, 41,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0832054912315484;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.005345207983412086;  // std dev = 2,945, 76,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15904920827968275;  // std dev = 0,479, 2.588,000 (wgt'ed) examples reached here.  /* #neg=1.661 #pos=927 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.45722186360425426;  // std dev = 0,746, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15704928705603322;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.047848894357592556;  // std dev = 4,371, 123,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=24 */
%   | | | else return -0.06071792535592396;  // std dev = 2,155, 68,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.15470978265975907;  // std dev = 0,059, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0338069034550954;  // std dev = 3,287, 121,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=12 */
%   | | | else return -0.12485939803745472;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7742756728251715;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, C) )
%   | | | then return 0.05998995853945679;  // std dev = 3,162, 49,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.2742756728251714;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.1332398162514773;  // std dev = 0,480, 2.510,000 (wgt'ed) examples reached here.  /* #neg=1.609 #pos=901 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return -0.11158410071344678;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(K, I), venue(K, B) )
%   | | | then return 0.4808557949968309;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06684233809174907;  // std dev = 1,879, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.021996074600419354;  // std dev = 0,404, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else return -0.029709770359814994;  // std dev = 0,306, 332,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=35 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11373693269936885;  // std dev = 0,481, 2.548,000 (wgt'ed) examples reached here.  /* #neg=1.621 #pos=927 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.18923920320073237;  // std dev = 0,943, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.32499791067465317;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.03291895506028859;  // std dev = 4,376, 128,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=24 */
%   | | | else return -0.05144544959211486;  // std dev = 2,156, 69,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=5 */
%   | else return -0.04939224457304717;  // std dev = 0,266, 157,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10053059550144913;  // std dev = 0,483, 2.488,000 (wgt'ed) examples reached here.  /* #neg=1.561 #pos=927 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7772407823167008;  // std dev = 1,052, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return -0.1638983332423037;  // std dev = 0,377, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.07952049313935014;  // std dev = 1,667, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.054568628174467296;  // std dev = 2,167, 78,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.1221826438004018;  // std dev = 0,087, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.033296582431059804;  // std dev = 0,282, 138,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05825199188893881;  // std dev = 0,477, 2.644,000 (wgt'ed) examples reached here.  /* #neg=1.717 #pos=927 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.19972039118809062;  // std dev = 0,557, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0728821809017932;  // std dev = 1,650, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return -0.10342066287458282;  // std dev = 0,033, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.00786492773491963;  // std dev = 3,726, 138,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=24 */
%   | | | else return -0.039137585901511236;  // std dev = 2,154, 68,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.028195407284840244;  // std dev = 3,306, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | | else return -0.10966757705538895;  // std dev = 0,038, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0588380956450225;  // std dev = 0,481, 2.550,000 (wgt'ed) examples reached here.  /* #neg=1.623 #pos=927 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6016770557591881;  // std dev = 1,391, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.1338547543339167;  // std dev = 0,234, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.24520164076443432;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.03348198546238971;  // std dev = 2,151, 67,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.012967746550522083;  // std dev = 3,286, 118,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=12 */
%   | | | else return -0.11690341396713973;  // std dev = 0,024, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.09161095870769216;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04218924089475914;  // std dev = 0,479, 2.580,000 (wgt'ed) examples reached here.  /* #neg=1.653 #pos=927 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return -0.11941927426776906;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.05424133341846915;  // std dev = 1,134, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.21093580983977578;  // std dev = 0,453, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.020354425494744702;  // std dev = 4,267, 209,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=21 */
%   | | | else return 0.022551082298435672;  // std dev = 1,756, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10855527014888286;  // std dev = 0,487, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.026925651719027645;  // std dev = 2,134, 83,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6586184562763128;  // std dev = 0,205, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.32412515216691595;  // std dev = 0,015, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.08998525498424238;  // std dev = 1,522, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.21415381908569092;  // std dev = 1,738, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1694951699702006;  // std dev = 2,587, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return -0.1129401561467687;  // std dev = 2,134, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else return 0.03263322882236825;  // std dev = 0,480, 2.453,000 (wgt'ed) examples reached here.  /* #neg=1.573 #pos=880 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return -0.01507994354042281;  // std dev = 0,273, 230,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=35 */
%   | else return -0.03136212152747337;  // std dev = 0,269, 153,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=12 */


Results
   AUC ROC   = 0.575538
   AUC PR    = 0.018867
   CLL	      = -0.366673
   Precision = 0.4 at threshold = 0.5
   Recall    = 0.003442
   F1        = 0.006826


Total learning time: 227.86599999999999 seconds
Total inference time: 11.433 seconds
AUC ROC: 0.575538


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 07:03:57
{'AUC PR': 0.018867, 'AUC ROC': 0.575538, 'Learning time': 227.86599999999999, 'F1': 0.006826, 'Inference time': 11.433, 'Precision': [0.4, 0.5], 'Recall': 0.003442, 'CLL': -0.366673}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.597279369882121;  // std dev = 2,106, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return 0.17393840878372288;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.05613677918620208;  // std dev = 1,656, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | else return 0.22021095684739286;  // std dev = 0,481, 2.483,000 (wgt'ed) examples reached here.  /* #neg=1.584 #pos=899 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then if ( author(L, J), title(L, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.17064893509951234;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then if ( title(P, N), venue(P, A) )
%   | | | then return 0.027791792242369495;  // std dev = 3,972, 112,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=19 */
%   | | | else return -0.05001433020661012;  // std dev = 2,859, 98,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=9 */
%   | | else return -0.04810106490048766;  // std dev = 0,291, 128,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=12 */


Results
   AUC ROC   = 0.544378
   AUC PR    = 0.012866
   CLL	      = -0.199097
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 31.409 seconds
Total inference time: 4.419 seconds
AUC ROC: 0.544378


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 07:04:34
{'AUC PR': 0.012866, 'AUC ROC': 0.544378, 'Learning time': 31.409, 'F1': nan, 'Inference time': 4.419, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.199097}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1,07e-06, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.15410658668757263;  // std dev = 29,427, 4.156,000 (wgt'ed) examples reached here.  /* #neg=2.926 #pos=1.230 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.13658938301260265;  // std dev = 29,379, 4.124,000 (wgt'ed) examples reached here.  /* #neg=2.894 #pos=1.230 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,46e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.11070377182151295;  // std dev = 29,515, 4.216,000 (wgt'ed) examples reached here.  /* #neg=2.986 #pos=1.230 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831064;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.09784813334325669;  // std dev = 29,429, 4.157,000 (wgt'ed) examples reached here.  /* #neg=2.927 #pos=1.230 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3,15e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.07598747453706055;  // std dev = 29,551, 4.241,000 (wgt'ed) examples reached here.  /* #neg=3.011 #pos=1.230 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,89e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.06730018641295098;  // std dev = 29,460, 4.178,000 (wgt'ed) examples reached here.  /* #neg=2.948 #pos=1.230 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.05089762681176076;  // std dev = 29,551, 4.241,000 (wgt'ed) examples reached here.  /* #neg=3.011 #pos=1.230 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527753;  // std dev = 7,88e-08, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.0493093331718475;  // std dev = 29,388, 4.130,000 (wgt'ed) examples reached here.  /* #neg=2.900 #pos=1.230 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.034119579395451724;  // std dev = 29,511, 4.213,000 (wgt'ed) examples reached here.  /* #neg=2.983 #pos=1.230 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,88e-08, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.029209542096930212;  // std dev = 29,476, 4.189,000 (wgt'ed) examples reached here.  /* #neg=2.959 #pos=1.230 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.323898
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 11.957 seconds
Total inference time: 4.692 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.579055
   AUC PR    = 0.176677
   CLL	      = -0.324636
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158111
   F1        = 0.27305


Total scoring time: 8.182 seconds
Parameter learned model CLL: -0.324636


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.427, 2926, 1230], 'true': [1.07e-06, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.379, 2894, 1230], 'true': [0.0, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.515, 2986, 1230], 'true': [5.46e-07, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.429, 2927, 1230], 'true': [0.0, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.551, 3011, 1230], 'true': [3.15e-07, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.46, 2948, 1230], 'true': [2.89e-07, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.551, 3011, 1230], 'true': [2.92e-07, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.388, 2900, 1230], 'true': [7.88e-08, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.511, 2983, 1230], 'true': [0.0, 0, 231]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.476, 2959, 1230], 'true': [9.88e-08, 0, 231]}]]
[{'': [4.921508126476884e-15, 0.20836672005456888]}, {'': [-4.183281907505352e-15, 0.2092986007953018]}, {'': [1.2918958832001822e-15, 0.20663015925599884]}, {'': [-6.151885158096106e-17, 0.20833766139223894]}, {'': [4.306319610667274e-16, 0.20591089298441442]}, {'': [3.614232530381462e-16, 0.20772832505446692]}, {'': [3.6911310948576635e-16, 0.20591089298438361]}, {'': [2.6914497566670462e-17, 0.20912358048649704]}, {'': [-1.5764205717621271e-16, 0.20671664440579093]}, {'': [4.229421046191072e-17, 0.2074098397165263]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1,07e-06, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.38645082189196406;  // std dev = 3,634, 53,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=28 */
%   | | | else return -0.01877414182356461;  // std dev = 2,649, 65,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1993254056877463;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return 0.1790378239883961;  // std dev = 27,120, 3.375,000 (wgt'ed) examples reached here.  /* #neg=2.292 #pos=1.083 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.07576551541039232;  // std dev = 5,732, 193,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=42 */
%   | | | else return -0.008517731567154314;  // std dev = 3,950, 135,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.03347668066403464;  // std dev = 4,429, 203,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1558169592951194;  // std dev = 0,466, 3.577,000 (wgt'ed) examples reached here.  /* #neg=2.429 #pos=1.148 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3306543864868494;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.12803282857336376;  // std dev = 0,025, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.015009681257259126;  // std dev = 6,524, 314,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=51 */
%   | | | else return -0.03154442902450912;  // std dev = 4,434, 207,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,46e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4149991112275256;  // std dev = 3,191, 44,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=28 */
%   | | | else return -0.041718370845918284;  // std dev = 2,657, 68,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | | else return 0.1268914200155639;  // std dev = 0,464, 3.534,000 (wgt'ed) examples reached here.  /* #neg=2.422 #pos=1.112 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1726792589548281;  // std dev = 2,395, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.0035849591336230215;  // std dev = 6,560, 334,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=51 */
%   | | else return -0.03482127030579598;  // std dev = 0,297, 224,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831064;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11455247461634542;  // std dev = 0,466, 3.562,000 (wgt'ed) examples reached here.  /* #neg=2.414 #pos=1.148 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.15868863800088073;  // std dev = 2,371, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.016416573242814578;  // std dev = 6,508, 307,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=51 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03177557789143582;  // std dev = 4,453, 225,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=22 */
%   | | | else return -0.13012631487620943;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3,15e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.09813765111996958;  // std dev = 4,276, 83,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=27 */
%   | | | else return 0.5866772431624687;  // std dev = 0,900, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.09598232853701213;  // std dev = 0,467, 3.448,000 (wgt'ed) examples reached here.  /* #neg=2.332 #pos=1.116 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0025478269364458033;  // std dev = 6,263, 294,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=48 */
%   | | | else return 0.07691595431886797;  // std dev = 3,052, 54,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10560132129253388;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.012899453486922459;  // std dev = 4,415, 194,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2,89e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07610006414130767;  // std dev = 0,466, 3.573,000 (wgt'ed) examples reached here.  /* #neg=2.425 #pos=1.148 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.032036432180278344;  // std dev = 5,812, 221,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=42 */
%   | | | else return -0.027180507992464825;  // std dev = 3,837, 134,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=18 */
%   | | else return -0.018905112617747268;  // std dev = 0,306, 210,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.22670813018609784;  // std dev = 3,268, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return -0.044571398591110395;  // std dev = 2,793, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else return 0.06639240510655262;  // std dev = 0,467, 3.428,000 (wgt'ed) examples reached here.  /* #neg=2.312 #pos=1.116 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -0.047666162930663246;  // std dev = 0,856, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.1738689461679934;  // std dev = 2,406, 27,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.010830544824450982;  // std dev = 6,370, 293,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=50 */
%   | | | else return -0.015307439213208545;  // std dev = 4,428, 206,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527753;  // std dev = 7,88e-08, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03328994690251131;  // std dev = 27,320, 3.535,000 (wgt'ed) examples reached here.  /* #neg=2.454 #pos=1.081 */
%   | | | else return 0.053066882964843354;  // std dev = 6,974, 343,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=69 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.1460051705484151;  // std dev = 1,045, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.16161913939589478;  // std dev = 4,452, 96,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.6512209642127573;  // std dev = 0,266, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.03148280119409738;  // std dev = 4,083, 108,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
%   | | | else return -0.11537231640955348;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03956996588477354;  // std dev = 0,464, 3.588,000 (wgt'ed) examples reached here.  /* #neg=2.440 #pos=1.148 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.060636239212950124;  // std dev = 0,858, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.13905184286129463;  // std dev = 2,382, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.04121208819576089;  // std dev = 2,198, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return -0.008824250946759697;  // std dev = 7,441, 460,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=65 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9,88e-08, 231,000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033174448925421006;  // std dev = 0,464, 3.576,000 (wgt'ed) examples reached here.  /* #neg=2.428 #pos=1.148 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.01916902090114951;  // std dev = 5,750, 209,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=42 */
%   | | | else return -0.021138933280466506;  // std dev = 3,808, 124,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=18 */
%   | | else return -0.021882331925189267;  // std dev = 0,303, 214,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=22 */


Results
   AUC ROC   = 0.71439
   AUC PR    = 0.213356
   CLL	      = -0.31608
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 771.522 seconds
Total inference time: 15.719 seconds
AUC ROC: 0.71439


Results scoring model
   AUC ROC   = 0.653523
   AUC PR    = 0.203033
   CLL	      = -0.32712
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158795
   F1        = 0.27407


Total scoring time: 106.75399999999999 seconds
Refined model CLL: -0.32712


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.323898
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 898.4150000000001 seconds
Total inference time: 4.692 seconds
AUC ROC: 0.585198
Total revision time: 898.4150000000001
Best scored revision CLL: -0.324636


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:19:54
{'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 898.4150000000001, 'F1': 0.291176, 'Inference time': 4.692, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'parameter_0.6': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 11.957, 'F1': 0.291176, 'Inference time': 4.692, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.323898}, 'CLL': -0.323898}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2223855964835537;  // std dev = 0,481, 3.786,000 (wgt'ed) examples reached here.  /* #neg=2.407 #pos=1.379 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.010322848142990622;  // std dev = 3,445, 92,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=14 */
%   | | | else return 0.09179379491259576;  // std dev = 4,377, 107,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=25 */
%   | | else if ( title(I, E), venue(I, A) )
%   | | | then return 0.013704490655067729;  // std dev = 4,211, 135,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=21 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.02228584750918352;  // std dev = 4,401, 184,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=22 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8288663939569139;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.17113360604308617;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8288663939569137;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.10333699587359464;  // std dev = 1,931, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | else return 0.1777947786929351;  // std dev = 0,477, 3.826,000 (wgt'ed) examples reached here.  /* #neg=2.491 #pos=1.335 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then return 0.35503525570081423;  // std dev = 1,229, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordtitle(L, I) )
%   | | | then return 0.1931214043322089;  // std dev = 2,151, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.14147216536602325;  // std dev = 0,017, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.0049250943593512194;  // std dev = 0,344, 522,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=72 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15823663590650938;  // std dev = 0,477, 3.869,000 (wgt'ed) examples reached here.  /* #neg=2.490 #pos=1.379 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.802158006200862;  // std dev = 1,370, 44,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14815888298678637;  // std dev = 0,120, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.03181690141554056;  // std dev = 2,477, 63,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
%   | | | else return 0.04120173113377928;  // std dev = 2,976, 57,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return -0.14618910370989818;  // std dev = 0,050, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.028625070564789724;  // std dev = 4,423, 202,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=22 */
%   | | | else return -0.12490531089044854;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13245496343363242;  // std dev = 0,477, 3.860,000 (wgt'ed) examples reached here.  /* #neg=2.481 #pos=1.379 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.2871430187471104;  // std dev = 0,844, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3578477319466374;  // std dev = 1,858, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return -0.1317497959542372;  // std dev = 0,040, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.029828350285524642;  // std dev = 4,827, 207,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=40 */
%   | | | else return -0.05263394246390093;  // std dev = 3,122, 115,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03712418489597437;  // std dev = 4,454, 226,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=22 */
%   | | | else return -0.11187985398767665;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6125530014660537;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2519665126988659;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return -0.046816807230847426;  // std dev = 2,526, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.32933169278073426;  // std dev = 2,530, 42,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=27 */
%   | | | else return -0.11411499541567316;  // std dev = 2,121, 66,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=6 */
%   | | else return 0.11154801049625385;  // std dev = 0,480, 3.632,000 (wgt'ed) examples reached here.  /* #neg=2.326 #pos=1.306 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordauthor(M, K) )
%   | | then return 0.26835441371279006;  // std dev = 0,477, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.004922239017930708;  // std dev = 0,324, 314,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=51 */
%   | else return -0.022073501132457225;  // std dev = 0,307, 208,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09015775956162093;  // std dev = 0,477, 3.827,000 (wgt'ed) examples reached here.  /* #neg=2.448 #pos=1.379 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.31825864869468695;  // std dev = 0,650, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08360164070268784;  // std dev = 2,164, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else return -0.1103120111010178;  // std dev = 0,040, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.022295442295349365;  // std dev = 4,822, 211,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=40 */
%   | | | else return -0.04901393180747672;  // std dev = 3,130, 116,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.013318807686397567;  // std dev = 4,412, 192,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=22 */
%   | | | else return -0.09924561994183141;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06560617617927328;  // std dev = 0,474, 3.903,000 (wgt'ed) examples reached here.  /* #neg=2.524 #pos=1.379 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.2511244035161507;  // std dev = 0,622, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08711235540217092;  // std dev = 2,127, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.02282052588609569;  // std dev = 4,785, 208,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=40 */
%   | | | else return -0.040021601057439314;  // std dev = 3,125, 113,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=11 */
%   | else return -0.028006437884385154;  // std dev = 0,295, 227,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05567384071559069;  // std dev = 0,476, 3.856,000 (wgt'ed) examples reached here.  /* #neg=2.477 #pos=1.379 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.039223903554875816;  // std dev = 0,718, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.15758827323981214;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.20204186450141262;  // std dev = 1,595, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.13321276790157818;  // std dev = 0,867, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.002097669726124549;  // std dev = 5,777, 307,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=40 */
%   | | | else return 0.040445238922165186;  // std dev = 2,707, 57,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.015916558851813766;  // std dev = 3,404, 129,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=19 */
%   | | | else return -0.08843566108895508;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.05675008907714882;  // std dev = 3,722, 68,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   | | | else return 0.10625442796486524;  // std dev = 1,767, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return 0.6579120868343089;  // std dev = 0,278, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.05559763857491673;  // std dev = 0,480, 3.636,000 (wgt'ed) examples reached here.  /* #neg=2.297 #pos=1.339 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then if ( haswordvenue(B, I) )
%   | | | then return 0.17841033813254328;  // std dev = 1,983, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.014177755390505873;  // std dev = 5,734, 329,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=40 */
%   | | else if ( haswordtitle(H, K), haswordvenue(B, K) )
%   | | | then return 0.03845106656078792;  // std dev = 2,659, 58,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return -0.11552789878639674;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.02002555597817778;  // std dev = 0,294, 148,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.01558381943577048;  // std dev = 0,470, 3.785,000 (wgt'ed) examples reached here.  /* #neg=2.495 #pos=1.290 */
%   | | else return 0.036862821554213665;  // std dev = 0,360, 363,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=69 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( title(F, D), venue(F, B) )
%   | | | then return -0.3250752300850355;  // std dev = 1,49e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.6007295120172049;  // std dev = 1,020, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.06677246704663896;  // std dev = 0,364, 99,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.6438191967035231;  // std dev = 1,366, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.1295463855534464;  // std dev = 0,872, 90,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=1 */
%   | | else return -0.12904030346182246;  // std dev = 0,111, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2596756925954498;  // std dev = 0,376, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */


Results
   AUC ROC   = 0.694908
   AUC PR    = 0.029765
   CLL	      = -0.35828
   Precision = 0.076923 at threshold = 0.5
   Recall    = 0.005164
   F1        = 0.009677


Total learning time: 1636.015 seconds
Total inference time: 20.386 seconds
AUC ROC: 0.694908


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 07:47:31
{'AUC PR': 0.029765, 'AUC ROC': 0.694908, 'Learning time': 1636.015, 'F1': 0.009677, 'Inference time': 20.386, 'Precision': [0.076923, 0.5], 'Recall': 0.005164, 'CLL': -0.35828}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22315687580887722;  // std dev = 0,481, 3.778,000 (wgt'ed) examples reached here.  /* #neg=2.399 #pos=1.379 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2265699877310913;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.0632771402277165;  // std dev = 5,639, 195,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=40 */
%   | | | else return -0.0494140901105717;  // std dev = 3,160, 119,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.020304103574521018;  // std dev = 4,396, 181,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=22 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.550178
   AUC PR    = 0.01264
   CLL	      = -0.200097
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 25.769 seconds
Total inference time: 3.624 seconds
AUC ROC: 0.550178


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 07:48:01
{'AUC PR': 0.01264, 'AUC ROC': 0.550178, 'Learning time': 25.769, 'F1': nan, 'Inference time': 3.624, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.200097}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,03e-06, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.15437159911541173;  // std dev = 33,963, 5.533,000 (wgt'ed) examples reached here.  /* #neg=3.894 #pos=1.639 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.13250145875630892;  // std dev = 34,012, 5.571,000 (wgt'ed) examples reached here.  /* #neg=3.932 #pos=1.639 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.11617574095742607;  // std dev = 33,953, 5.525,000 (wgt'ed) examples reached here.  /* #neg=3.886 #pos=1.639 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.09953718762920784;  // std dev = 33,924, 5.503,000 (wgt'ed) examples reached here.  /* #neg=3.864 #pos=1.639 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.08242735272617355;  // std dev = 33,944, 5.518,000 (wgt'ed) examples reached here.  /* #neg=3.879 #pos=1.639 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.071033732401604;  // std dev = 33,875, 5.466,000 (wgt'ed) examples reached here.  /* #neg=3.827 #pos=1.639 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,53e-07, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.052553979992476386;  // std dev = 34,013, 5.572,000 (wgt'ed) examples reached here.  /* #neg=3.933 #pos=1.639 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2,53e-07, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.046645061170084476;  // std dev = 33,920, 5.500,000 (wgt'ed) examples reached here.  /* #neg=3.861 #pos=1.639 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.041052994475857627;  // std dev = 33,841, 5.440,000 (wgt'ed) examples reached here.  /* #neg=3.801 #pos=1.639 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.023890389948724493;  // std dev = 34,062, 5.611,000 (wgt'ed) examples reached here.  /* #neg=3.972 #pos=1.639 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.327591
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 17.374 seconds
Total inference time: 4.876 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.579312
   AUC PR    = 0.177191
   CLL	      = -0.328312
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158624
   F1        = 0.273815


Total scoring time: 10.883 seconds
Parameter learned model CLL: -0.328312


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.963, 3894, 1639], 'true': [1.03e-06, 0, 309]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.012, 3932, 1639], 'true': [0.0, 0, 309]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.953, 3886, 1639], 'true': [0.0, 0, 309]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.924, 3864, 1639], 'true': [0.0, 0, 309]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.944, 3879, 1639], 'true': [0.0, 0, 309]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.875, 3827, 1639], 'true': [3.67e-07, 0, 309]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.013, 3933, 1639], 'true': [2.53e-07, 0, 309]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.92, 3861, 1639], 'true': [2.53e-07, 0, 309]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.841, 3801, 1639], 'true': [0.0, 0, 309]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.062, 3972, 1639], 'true': [0.0, 0, 309]}]]
[{'': [3.4032467602749133e-15, 0.20847479733916663]}, {'': [-4.966900677157982e-15, 0.20764723181024383]}, {'': [-2.299491054239806e-16, 0.20864942159254726]}, {'': [-8.048218689839323e-16, 0.2091303410437874]}, {'': [-3.5642111340717e-16, 0.20880233013806998]}, {'': [4.369033003055632e-16, 0.20994143485410866]}, {'': [2.0695419488158259e-16, 0.20762549672779262]}, {'': [2.0695419488158259e-16, 0.2091959999999845]}, {'': [-2.1270292251718208e-16, 0.21051305011898253]}, {'': [-1.6958746525018573e-16, 0.2067795833863716]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,03e-06, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1766427982157959;  // std dev = 0,466, 4.807,000 (wgt'ed) examples reached here.  /* #neg=3.276 #pos=1.531 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.08891816586874314;  // std dev = 3,038, 52,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.009449171506132021;  // std dev = 7,370, 423,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=64 */
%   | | | else return -0.02270212873027536;  // std dev = 4,966, 235,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.33525760871496424;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return -0.0738333003759456;  // std dev = 2,335, 66,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.17736287187285937;  // std dev = 5,065, 114,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=39 */
%   | | | else return 0.1511160621881136;  // std dev = 31,453, 4.578,000 (wgt'ed) examples reached here.  /* #neg=3.132 #pos=1.446 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.3171873642307679;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.11364321711184615;  // std dev = 2,966, 45,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02067766087490854;  // std dev = 7,316, 391,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=64 */
%   | | | else return -0.03344957737807458;  // std dev = 5,004, 265,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3726799642236194;  // std dev = 3,794, 61,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=35 */
%   | | | else return -0.05759662629179579;  // std dev = 3,040, 86,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.10938119183281322;  // std dev = 5,225, 130,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=39 */
%   | | | else return 0.12658817260324562;  // std dev = 31,514, 4.617,000 (wgt'ed) examples reached here.  /* #neg=3.171 #pos=1.446 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.06354708561656387;  // std dev = 6,615, 261,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=56 */
%   | | | else return 0.006278744460699516;  // std dev = 4,402, 150,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=23 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.12520411213555363;  // std dev = 0,923, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return -0.036212303491270435;  // std dev = 5,023, 283,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2595428562927367;  // std dev = 3,994, 71,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=36 */
%   | | | else return -0.05187510486885263;  // std dev = 2,914, 78,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=10 */
%   | | else return 0.1155035639298872;  // std dev = 0,467, 4.610,000 (wgt'ed) examples reached here.  /* #neg=3.125 #pos=1.485 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.2386751170427088;  // std dev = 2,570, 28,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.007638815400031691;  // std dev = 7,514, 420,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=68 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03745038148309336;  // std dev = 5,115, 307,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=29 */
%   | | | else return -0.13097516147244145;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09420178354959677;  // std dev = 0,466, 4.775,000 (wgt'ed) examples reached here.  /* #neg=3.244 #pos=1.531 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0424914345062577;  // std dev = 6,657, 275,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=56 */
%   | | | else return -0.009957671979588103;  // std dev = 4,390, 160,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=23 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.08353174204680446;  // std dev = 0,920, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.025799978893028392;  // std dev = 5,017, 278,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0763469560773117;  // std dev = 0,465, 4.790,000 (wgt'ed) examples reached here.  /* #neg=3.259 #pos=1.531 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3137537044087837;  // std dev = 2,320, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return -0.09460033515624704;  // std dev = 0,999, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.003446698285810843;  // std dev = 7,499, 422,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=68 */
%   | | | else return -0.023019193240807877;  // std dev = 5,006, 276,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,53e-07, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22685872082001;  // std dev = 3,705, 61,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=35 */
%   | | | else return -0.0919056889684154;  // std dev = 3,056, 99,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=11 */
%   | | else return 0.057587398653459465;  // std dev = 0,465, 4.714,000 (wgt'ed) examples reached here.  /* #neg=3.229 #pos=1.485 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03172022426023901;  // std dev = 6,654, 283,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=56 */
%   | | | else return -0.04252465269607673;  // std dev = 4,402, 198,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.013330355544738232;  // std dev = 5,078, 266,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=29 */
%   | | | else return -0.11288850647875594;  // std dev = 0,011, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2,53e-07, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2199062675247524;  // std dev = 3,847, 70,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=40 */
%   | | | else return -0.09083319921207425;  // std dev = 2,204, 58,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=6 */
%   | | else return 0.0543777772559486;  // std dev = 0,468, 4.598,000 (wgt'ed) examples reached here.  /* #neg=3.113 #pos=1.485 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.0914468087718094;  // std dev = 3,117, 49,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return -0.007394581626309171;  // std dev = 1,186, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.05726308320418353;  // std dev = 2,685, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return -0.01604933128853997;  // std dev = 8,435, 658,000 (wgt'ed) examples reached here.  /* #neg=576 #pos=82 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2741706278999137;  // std dev = 3,707, 56,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=31 */
%   | | | else return -0.05916184230206036;  // std dev = 2,968, 49,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.007251755465320719;  // std dev = 4,655, 141,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
%   | | | else return 0.03949276967257835;  // std dev = 31,384, 4.535,000 (wgt'ed) examples reached here.  /* #neg=3.089 #pos=1.446 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.03697529859270177;  // std dev = 6,600, 270,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=56 */
%   | | | else return -0.02876062952805921;  // std dev = 4,368, 186,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=23 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.10105441131822814;  // std dev = 0,936, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return -0.024105803860785945;  // std dev = 5,034, 300,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.02879867163782952;  // std dev = 0,464, 4.824,000 (wgt'ed) examples reached here.  /* #neg=3.293 #pos=1.531 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.011849540392807768;  // std dev = 1,170, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.048115852599515126;  // std dev = 3,203, 51,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.034479995302574305;  // std dev = 2,709, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return -0.010431774524488298;  // std dev = 8,408, 642,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=82 */


Results
   AUC ROC   = 0.618205
   AUC PR    = 0.188965
   CLL	      = -0.318773
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 273.478 seconds
Total inference time: 10.007 seconds
AUC ROC: 0.618205


Results scoring model
   AUC ROC   = 0.636299
   AUC PR    = 0.189494
   CLL	      = -0.325239
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158624
   F1        = 0.273815


Total scoring time: 58.207 seconds
Refined model CLL: -0.325239


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.618205
   AUC PR    = 0.188965
   CLL	      = -0.318773
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 359.942 seconds
Total inference time: 10.007 seconds
AUC ROC: 0.618205
Total revision time: 359.942
Best scored revision CLL: -0.325239


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:54:18
{'AUC PR': 0.188965, 'AUC ROC': 0.618205, 'parameter_0.8': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 17.374, 'F1': 0.291176, 'Inference time': 4.876, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.327591}, 'Learning time': 359.942, 'F1': 0.291176, 'Inference time': 10.007, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.318773}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21886252067096373;  // std dev = 0,480, 5.101,000 (wgt'ed) examples reached here.  /* #neg=3.261 #pos=1.840 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return 0.06946968981649365;  // std dev = 0,408, 265,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=56 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.21814893509951236;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.03161484442804672;  // std dev = 3,529, 127,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.018969708968284787;  // std dev = 5,043, 236,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=29 */
%   | | | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8293655524695647;  // std dev = 1,69e-07, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.17063444753043505;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.8293655524695651;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.06951085202481692;  // std dev = 2,844, 89,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.36384831109025423;  // std dev = 3,799, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | | | else return -0.022486299382286776;  // std dev = 2,611, 54,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
%   | | else return 0.19704359713880815;  // std dev = 0,482, 4.746,000 (wgt'ed) examples reached here.  /* #neg=3.001 #pos=1.745 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then return 0.15678597621927137;  // std dev = 0,455, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | else return -0.006696079765056519;  // std dev = 0,341, 676,000 (wgt'ed) examples reached here.  /* #neg=584 #pos=92 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6795646705237552;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.25701414960775;  // std dev = 3,990, 64,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
%   | | | else return -0.036116590148856896;  // std dev = 2,636, 61,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=8 */
%   | else return 0.15607147428922005;  // std dev = 0,477, 5.017,000 (wgt'ed) examples reached here.  /* #neg=3.229 #pos=1.788 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.7785302961865814;  // std dev = 1,923, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | | else return -0.15156183727326566;  // std dev = 0,089, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | | else if ( haswordtitle(I, L), haswordvenue(A, L) )
%   | | | then return 0.01106118220542066;  // std dev = 4,370, 150,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=23 */
%   | | | else return -0.14018708780406947;  // std dev = 0,041, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.029736377188483355;  // std dev = 0,308, 271,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=29 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6344048836238559;  // std dev = 0,210, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.16858339404851816;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.08469345627333687;  // std dev = 2,924, 109,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=14 */
%   | | | else return 0.7570201871422974;  // std dev = 0,267, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13826254724883133;  // std dev = 0,481, 4.892,000 (wgt'ed) examples reached here.  /* #neg=3.108 #pos=1.784 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then if ( author(L, J), title(L, K) )
%   | | | then return 0.4268092521291849;  // std dev = 0,684, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2061682904375677;  // std dev = 2,353, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else return -0.05126367247002787;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else return -0.012283227844321929;  // std dev = 0,315, 710,000 (wgt'ed) examples reached here.  /* #neg=614 #pos=96 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11187242639127937;  // std dev = 0,477, 5.053,000 (wgt'ed) examples reached here.  /* #neg=3.213 #pos=1.840 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.61721828497217;  // std dev = 2,321, 62,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | | else return -0.13348251212868598;  // std dev = 0,127, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1564065841803139;  // std dev = 2,393, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.043990040101373445;  // std dev = 3,561, 153,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.015223316309725806;  // std dev = 5,054, 244,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=29 */
%   | | | else return -0.12124771711695616;  // std dev = 0,025, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.12224014039226049;  // std dev = 0,017, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08389341221810821;  // std dev = 0,475, 5.143,000 (wgt'ed) examples reached here.  /* #neg=3.303 #pos=1.840 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.21895669077970792;  // std dev = 2,258, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return -0.00778339871389396;  // std dev = 4,674, 325,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=53 */
%   | | else return 0.0701013324305815;  // std dev = 0,398, 73,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.016709795564969997;  // std dev = 5,064, 250,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=29 */
%   | | | else return -0.1108471710439729;  // std dev = 0,034, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.11065306337861132;  // std dev = 0,022, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.40565786016353833;  // std dev = 0,998, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.17242776404920457;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.4705622330176717;  // std dev = 0,187, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1097611540505273;  // std dev = 2,649, 92,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=9 */
%   | else return 0.06611885524332457;  // std dev = 0,479, 5.005,000 (wgt'ed) examples reached here.  /* #neg=3.221 #pos=1.784 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then if ( author(L, J), venue(L, B) )
%   | | | then return 0.03994284158486713;  // std dev = 1,165, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.09137616019651593;  // std dev = 1,892, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else return -0.014715221713008203;  // std dev = 0,287, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return -0.01495400887314407;  // std dev = 0,297, 690,000 (wgt'ed) examples reached here.  /* #neg=598 #pos=92 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.049480696581491464;  // std dev = 0,473, 5.205,000 (wgt'ed) examples reached here.  /* #neg=3.365 #pos=1.840 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.09839048870171183;  // std dev = 0,597, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2113140786991777;  // std dev = 2,140, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return -0.07287950599813343;  // std dev = 0,224, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.4534615499789943;  // std dev = 0,722, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.012015475675624951;  // std dev = 1,991, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.008487245205288721;  // std dev = 5,479, 374,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=55 */
%   | | | else return -0.019342240431376466;  // std dev = 4,895, 258,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=27 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.033378724949605296;  // std dev = 0,472, 4.951,000 (wgt'ed) examples reached here.  /* #neg=3.226 #pos=1.725 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.6557851289000093;  // std dev = 3,193, 99,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=87 */
%   | | | else return -0.1346744966786787;  // std dev = 1,167, 372,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=1 */
%   | else if ( haswordtitle(D, G), haswordvenue(B, G) )
%   | | then if ( title(H, D), venue(H, B) )
%   | | | then return -0.24084836428181733;  // std dev = 0,876, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.15675273671689935;  // std dev = 4,592, 149,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=58 */
%   | | else if ( haswordauthor(I, C) )
%   | | | then return 0.31939896886305325;  // std dev = 0,895, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1256893137500517;  // std dev = 0,204, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then return 0.5940134946237466;  // std dev = 0,277, 50,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | else return -0.003107603065582586;  // std dev = 0,281, 155,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.07119806377462841;  // std dev = 2,663, 87,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=41 */
%   | | | else return 0.4942946026513035;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.10960189614206542;  // std dev = 0,217, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
%   | else return 0.03267860246028203;  // std dev = 0,476, 5.003,000 (wgt'ed) examples reached here.  /* #neg=3.219 #pos=1.784 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.00873729083118413;  // std dev = 5,939, 393,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=63 */
%   | | | else return -0.09982273293391844;  // std dev = 1,120, 69,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=2 */
%   | | else return 0.03133812864356993;  // std dev = 0,292, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return -0.011556686739183999;  // std dev = 0,261, 177,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=28 */
%   | | else return -0.09557553657642943;  // std dev = 0,019, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.702152
   AUC PR    = 0.040362
   CLL	      = -0.346259
   Precision = 0.076923 at threshold = 0.5
   Recall    = 0.005164
   F1        = 0.009677


Total learning time: 2311.695 seconds
Total inference time: 24.972 seconds
AUC ROC: 0.702152


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 08:33:15
{'AUC PR': 0.040362, 'AUC ROC': 0.702152, 'Learning time': 2311.695, 'F1': 0.009677, 'Inference time': 24.972, 'Precision': [0.076923, 0.5], 'Recall': 0.005164, 'CLL': -0.346259}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3425239350995111;  // std dev = 3,998, 64,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
%   | | | else return 0.011995088945666187;  // std dev = 2,602, 52,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   | else return 0.21783511494259708;  // std dev = 0,480, 4.971,000 (wgt'ed) examples reached here.  /* #neg=3.183 #pos=1.788 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), title(K, J) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.30814893509951236;  // std dev = 2,225, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return -0.0793510649004878;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then if ( author(N, M), venue(N, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07383520960931629;  // std dev = 2,937, 51,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | else if ( haswordvenue(B, P), haswordtitle(Q, P) )
%   | | | then return 2.67798148607972E-4;  // std dev = 6,869, 387,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=55 */
%   | | | else return -0.03679269914173317;  // std dev = 4,916, 257,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=27 */


Results
   AUC ROC   = 0.551962
   AUC PR    = 0.013186
   CLL	      = -0.198579
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 30.547 seconds
Total inference time: 4.454 seconds
AUC ROC: 0.551962


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 08:33:50
{'AUC PR': 0.013186, 'AUC ROC': 0.551962, 'Learning time': 30.547, 'F1': nan, 'Inference time': 4.454, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.198579}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,56e-06, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.15470366689191883;  // std dev = 37,882, 6.879,000 (wgt'ed) examples reached here.  /* #neg=4.839 #pos=2.040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13335051819341487;  // std dev = 37,921, 6.913,000 (wgt'ed) examples reached here.  /* #neg=4.873 #pos=2.040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.11241073926536695;  // std dev = 37,976, 6.961,000 (wgt'ed) examples reached here.  /* #neg=4.921 #pos=2.040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.09759098236937193;  // std dev = 37,911, 6.904,000 (wgt'ed) examples reached here.  /* #neg=4.864 #pos=2.040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.08620611307706044;  // std dev = 37,788, 6.799,000 (wgt'ed) examples reached here.  /* #neg=4.759 #pos=2.040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,50e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06366002101234085;  // std dev = 37,995, 6.978,000 (wgt'ed) examples reached here.  /* #neg=4.938 #pos=2.040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.05290950732591314;  // std dev = 37,977, 6.962,000 (wgt'ed) examples reached here.  /* #neg=4.922 #pos=2.040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2,06e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04511511208644254;  // std dev = 37,923, 6.915,000 (wgt'ed) examples reached here.  /* #neg=4.875 #pos=2.040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.040892183581288474;  // std dev = 37,807, 6.815,000 (wgt'ed) examples reached here.  /* #neg=4.775 #pos=2.040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.025066908145024946;  // std dev = 38,020, 7.000,000 (wgt'ed) examples reached here.  /* #neg=4.960 #pos=2.040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.32542
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 20.335 seconds
Total inference time: 3.694 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.326094
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 11.485 seconds
Parameter learned model CLL: -0.326094


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.882, 4839, 2040], 'true': [1.56e-06, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.921, 4873, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.976, 4921, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.911, 4864, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.788, 4759, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.995, 4938, 2040], 'true': [4.5e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.977, 4922, 2040], 'true': [2.46e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.923, 4875, 2040], 'true': [2.06e-07, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [37.807, 4775, 2040], 'true': [0.0, 0, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.02, 4960, 2040], 'true': [0.0, 0, 396]}]]
[{'': [6.172391441956426e-15, 0.20861002284387867]}, {'': [-5.311127519822971e-15, 0.2080144309316314]}, {'': [-1.2201238896890609e-15, 0.20717639172635705]}, {'': [-1.8301858345335913e-15, 0.2081719298198358]}, {'': [-1.5969268556224474e-15, 0.210017647707444]}, {'': [5.113754537667388e-16, 0.2068803883572185]}, {'': [1.525154862111326e-16, 0.20715896802947442]}, {'': [1.0765799026668185e-16, 0.2079794467370798]}, {'': [-2.6017347647781446e-16, 0.20973544073565797]}, {'': [-3.1848822120560044e-16, 0.20649795918366415]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,56e-06, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17661175882548877;  // std dev = 0,466, 5.985,000 (wgt'ed) examples reached here.  /* #neg=4.079 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27481560176617903;  // std dev = 2,958, 36,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return -0.00851773156715447;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.010163587114164265;  // std dev = 8,389, 546,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=83 */
%   | | | else return -0.04005465771485945;  // std dev = 5,526, 334,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=34 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.39081743531868196;  // std dev = 4,216, 72,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=40 */
%   | | | else return -0.03973812023687429;  // std dev = 3,373, 104,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=13 */
%   | | else return 0.15185166278033285;  // std dev = 0,465, 5.853,000 (wgt'ed) examples reached here.  /* #neg=4.000 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06338643890531974;  // std dev = 7,394, 333,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=69 */
%   | | | else return -0.004660029996210459;  // std dev = 4,926, 201,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03717057970853172;  // std dev = 5,692, 360,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=36 */
%   | | | else return -0.13791541419148962;  // std dev = 0,006, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.37128313403360436;  // std dev = 4,015, 67,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | | else return -0.05534276640381384;  // std dev = 3,413, 125,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=13 */
%   | | else return 0.13321485918710435;  // std dev = 0,466, 5.792,000 (wgt'ed) examples reached here.  /* #neg=3.939 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.3555172574011208;  // std dev = 2,644, 28,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return -0.03822229440013196;  // std dev = 1,345, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.014901625639984485;  // std dev = 8,323, 509,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=83 */
%   | | | else return -0.04150009237897826;  // std dev = 5,558, 374,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11291447598315886;  // std dev = 0,466, 5.943,000 (wgt'ed) examples reached here.  /* #neg=4.037 #pos=1.906 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.14160563128021972;  // std dev = 3,209, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return 0.05311184701735603;  // std dev = 1,256, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.16029588684391388;  // std dev = 2,995, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -0.015293019849809061;  // std dev = 9,421, 812,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09136775870379661;  // std dev = 0,465, 5.986,000 (wgt'ed) examples reached here.  /* #neg=4.080 #pos=1.906 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.00381287642913553;  // std dev = 1,234, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.15000355934400197;  // std dev = 3,159, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09612623036210817;  // std dev = 3,066, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.0067177873466455;  // std dev = 9,383, 772,000 (wgt'ed) examples reached here.  /* #neg=670 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4,50e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07161855488402506;  // std dev = 0,464, 6.050,000 (wgt'ed) examples reached here.  /* #neg=4.144 #pos=1.906 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2601365627496047;  // std dev = 1,473, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.059739828401647516;  // std dev = 3,077, 52,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.010419314886683675;  // std dev = 8,150, 497,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=82 */
%   | | | else return -0.018658676068653863;  // std dev = 5,584, 323,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=35 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06155997221935517;  // std dev = 0,465, 5.993,000 (wgt'ed) examples reached here.  /* #neg=4.087 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.1911337589945413;  // std dev = 2,785, 31,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.01571528032864731;  // std dev = 8,254, 491,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=83 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0184873532664792;  // std dev = 5,669, 331,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=36 */
%   | | | else return -0.11625072048772639;  // std dev = 0,034, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2,06e-07, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16457793665449563;  // std dev = 4,642, 102,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=46 */
%   | | | else return -0.15919269487685292;  // std dev = 2,456, 90,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.09152193710140555;  // std dev = 5,599, 136,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=49 */
%   | | | else return 0.05148345588253402;  // std dev = 35,018, 5.633,000 (wgt'ed) examples reached here.  /* #neg=3.829 #pos=1.804 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.030488503263226628;  // std dev = 7,432, 351,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=69 */
%   | | | else return -0.039152502813054185;  // std dev = 4,787, 214,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=29 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.03927975419942649;  // std dev = 1,267, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.020353834746941198;  // std dev = 5,524, 332,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.26232555894486653;  // std dev = 4,265, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | | | else return -0.13085824359237513;  // std dev = 3,331, 84,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=13 */
%   | | else return 0.039207837858811;  // std dev = 0,464, 5.825,000 (wgt'ed) examples reached here.  /* #neg=3.972 #pos=1.853 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1729981096154122;  // std dev = 2,740, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.00456217464638594;  // std dev = 8,287, 514,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.019541245778650095;  // std dev = 5,681, 350,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=36 */
%   | | | else return -0.10560434931023124;  // std dev = 0,051, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03442622166468176;  // std dev = 0,465, 5.930,000 (wgt'ed) examples reached here.  /* #neg=4.024 #pos=1.906 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03801379886378892;  // std dev = 7,342, 335,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=69 */
%   | | | else return -0.029211654514328927;  // std dev = 4,710, 201,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=29 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014602316264542026;  // std dev = 5,674, 339,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=36 */
%   | | | else return -0.09092864163546387;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.618397
   AUC PR    = 0.188839
   CLL	      = -0.320863
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 284.109 seconds
Total inference time: 8.869 seconds
AUC ROC: 0.618397


Results scoring model
   AUC ROC   = 0.639815
   AUC PR    = 0.192222
   CLL	      = -0.3265
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 57.308 seconds
Refined model CLL: -0.3265


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.32542
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 373.23699999999997 seconds
Total inference time: 3.694 seconds
AUC ROC: 0.585198
Total revision time: 373.23699999999997
Best scored revision CLL: -0.326094


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 08:40:18
{'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 373.23699999999997, 'F1': 0.291176, 'Inference time': 3.694, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'parameter_1.0': {'AUC PR': 0.18832, 'AUC ROC': 0.585198, 'Learning time': 20.335, 'F1': 0.291176, 'Inference time': 3.694, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'CLL': -0.32542}, 'CLL': -0.32542}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.858148935099512;  // std dev = 2,38e-07, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.04751144225897824;  // std dev = 3,009, 106,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=10 */
%   | else return 0.21798157108277075;  // std dev = 0,480, 6.214,000 (wgt'ed) examples reached here.  /* #neg=3.978 #pos=2.236 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.7770678540184317;  // std dev = 2,348, 74,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=68 */
%   | | | else return -0.13820142986399173;  // std dev = 0,998, 274,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=1 */
%   | | else return 0.010780514046880138;  // std dev = 0,360, 190,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=29 */
%   | else return -0.03928696233638567;  // std dev = 0,303, 351,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19019626007429333;  // std dev = 0,479, 6.381,000 (wgt'ed) examples reached here.  /* #neg=4.079 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.11779084796701975;  // std dev = 1,034, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.33959621300867376;  // std dev = 2,590, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.05477025645398618;  // std dev = 6,297, 318,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=67 */
%   | | | else return -0.05378296858188335;  // std dev = 3,817, 179,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.016710509737900885;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return -0.02638645844050019;  // std dev = 0,314, 307,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=34 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15907079727894965;  // std dev = 0,478, 6.425,000 (wgt'ed) examples reached here.  /* #neg=4.123 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.1252172011090218;  // std dev = 1,016, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.24473264229479916;  // std dev = 2,707, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.3608749938114435;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1366135113910723;  // std dev = 0,014, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.03510451655847343;  // std dev = 0,950, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.09835711377586485;  // std dev = 2,742, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.011163068345477868;  // std dev = 6,926, 493,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=69 */
%   | | | else return -0.042376471344317414;  // std dev = 5,475, 360,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=33 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6217355949030763;  // std dev = 0,989, 45,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | | else return -0.16902065570419744;  // std dev = 2,79e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.6439578171252992;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.10268751357096717;  // std dev = 3,033, 125,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=10 */
%   | else return 0.13194531924419697;  // std dev = 0,479, 6.252,000 (wgt'ed) examples reached here.  /* #neg=4.016 #pos=2.236 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordauthor(K, I) )
%   | | then if ( author(L, K), title(L, J) )
%   | | | then return 0.17494223013277535;  // std dev = 0,933, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.17987187508186175;  // std dev = 2,759, 32,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else return 0.010638322535426252;  // std dev = 0,329, 507,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=83 */
%   | else return -0.03450213032545185;  // std dev = 0,293, 377,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7210009760369673;  // std dev = 0,545, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.24958889494701422;  // std dev = 4,21e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.08033933358772093;  // std dev = 2,905, 72,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | | else return 0.5602923276481698;  // std dev = 0,920, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.10471351183957893;  // std dev = 0,475, 6.319,000 (wgt'ed) examples reached here.  /* #neg=4.083 #pos=2.236 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.11758057593970683;  // std dev = 0,396, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else return -0.037738334556950366;  // std dev = 0,280, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.005890569565511146;  // std dev = 0,332, 504,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=82 */
%   | | else return -0.019805597974380564;  // std dev = 0,307, 330,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=35 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.25989187907669764;  // std dev = 0,286, 64,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=44 */
%   | | else return -0.06660190457891318;  // std dev = 0,292, 155,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=22 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.1445946848545367;  // std dev = 3,743, 89,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=39 */
%   | | | else return -0.11039443327615432;  // std dev = 2,756, 75,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=10 */
%   | | else return 0.09058617255570048;  // std dev = 0,480, 6.070,000 (wgt'ed) examples reached here.  /* #neg=3.883 #pos=2.187 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then if ( haswordtitle(L, J) )
%   | | then return 0.12507278511301456;  // std dev = 0,399, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else return -0.06573444617382397;  // std dev = 0,261, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | then return 0.1911083160305808;  // std dev = 0,457, 37,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else return -0.010478206602151248;  // std dev = 0,312, 790,000 (wgt'ed) examples reached here.  /* #neg=688 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.42963162186434994;  // std dev = 0,115, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.07412147751210048;  // std dev = 0,476, 6.321,000 (wgt'ed) examples reached here.  /* #neg=4.036 #pos=2.285 */
%   else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | then if ( title(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.6286924717618559;  // std dev = 2,326, 74,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=68 */
%   | | | else return -0.13471530560024164;  // std dev = 1,052, 249,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=1 */
%   | | else if ( haswordauthor(I, E) )
%   | | | then return 0.17705658300900065;  // std dev = 2,594, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return -0.05105566658584013;  // std dev = 3,828, 187,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=16 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.0016888026042999815;  // std dev = 5,601, 293,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=36 */
%   | | | else return -0.12914210722384598;  // std dev = 0,114, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.12208461710382205;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5017449194440751;  // std dev = 0,714, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.2410315599111582;  // std dev = 0,106, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.16189079284231764;  // std dev = 1,724, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | | else return 0.2257841113484946;  // std dev = 2,057, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.022963489123445566;  // std dev = 0,303, 192,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=49 */
%   | | else return 0.059454579093372886;  // std dev = 0,481, 6.028,000 (wgt'ed) examples reached here.  /* #neg=3.841 #pos=2.187 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordauthor(M, K) )
%   | | then return 0.16672907311855217;  // std dev = 0,465, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return -0.00881253444126716;  // std dev = 0,289, 514,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=83 */
%   | else return -0.018143147526551755;  // std dev = 0,304, 346,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02638984635664026;  // std dev = 0,468, 6.291,000 (wgt'ed) examples reached here.  /* #neg=4.139 #pos=2.152 */
%   | | else return 0.040398498672956105;  // std dev = 0,370, 573,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=115 */
%   | else if ( haswordtitle(D, F), haswordvenue(B, F) )
%   | | then if ( title(G, D), venue(G, B) )
%   | | | then return -0.24669121044509465;  // std dev = 1,231, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.1512819793935041;  // std dev = 4,937, 181,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=69 */
%   | | else return -0.06353592884915041;  // std dev = 0,212, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.5276796418557534;  // std dev = 0,365, 40,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=34 */
%   | | else return 0.6665326005841739;  // std dev = 0,087, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return -0.150795697033876;  // std dev = 0,203, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return -0.01000976164344314;  // std dev = 0,260, 223,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=35 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02278699786997521;  // std dev = 0,468, 6.251,000 (wgt'ed) examples reached here.  /* #neg=4.099 #pos=2.152 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7111429524698228;  // std dev = 2,522, 119,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=113 */
%   | | | else return -0.138423577330119;  // std dev = 1,677, 449,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=2 */
%   | else if ( haswordvenue(B, C) )
%   | | then if ( title(G, D), venue(G, B) )
%   | | | then return -0.25906971793226014;  // std dev = 0,115, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.5400013295885533;  // std dev = 1,675, 33,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | else return 0.016171373815477053;  // std dev = 0,304, 178,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=43 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.08871183698564211;  // std dev = 0,324, 221,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=68 */
%   | | else return 0.027547766777019977;  // std dev = 0,330, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else return 0.23305984154841689;  // std dev = 0,350, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */


Results
   AUC ROC   = 0.709074
   AUC PR    = 0.036685
   CLL	      = -0.348028
   Precision = 0.202899 at threshold = 0.5
   Recall    = 0.024096
   F1        = 0.043077


Total learning time: 3995.062 seconds
Total inference time: 27.653 seconds
AUC ROC: 0.709074


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 09:47:22
{'AUC PR': 0.036685, 'AUC ROC': 0.709074, 'Learning time': 3995.062, 'F1': 0.043077, 'Inference time': 27.653, 'Precision': [0.202899, 0.5], 'Recall': 0.024096, 'CLL': -0.348028}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22435956188919853;  // std dev = 0,482, 6.286,000 (wgt'ed) examples reached here.  /* #neg=3.984 #pos=2.302 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2914822684328457;  // std dev = 2,714, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.06493905855630314;  // std dev = 7,290, 324,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=67 */
%   | | | else return -0.05196342445104945;  // std dev = 3,816, 178,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.027565350614774026;  // std dev = 5,647, 315,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=36 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.550377
   AUC PR    = 0.012643
   CLL	      = -0.200016
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 43.296 seconds
Total inference time: 3.299 seconds
AUC ROC: 0.550377


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 09:48:09
{'AUC PR': 0.012643, 'AUC ROC': 0.550377, 'Learning time': 43.296, 'F1': nan, 'Inference time': 3.299, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.200016}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 182149

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 67804

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995117;  // std dev = 1,69e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.13609686771819043;  // std dev = 16,190, 1.306,000 (wgt'ed) examples reached here.  /* #neg=943 #pos=363 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.1368460852923352;  // std dev = 15,985, 1.226,000 (wgt'ed) examples reached here.  /* #neg=863 #pos=363 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,95e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.11197531694502773;  // std dev = 16,049, 1.250,000 (wgt'ed) examples reached here.  /* #neg=887 #pos=363 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831;  // std dev = 1,93e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.08617988277296162;  // std dev = 16,149, 1.289,000 (wgt'ed) examples reached here.  /* #neg=926 #pos=363 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.0834008649173521;  // std dev = 16,023, 1.240,000 (wgt'ed) examples reached here.  /* #neg=877 #pos=363 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.056181105121031014;  // std dev = 16,170, 1.298,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=363 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253576;  // std dev = 1,07e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.04736186214263342;  // std dev = 16,158, 1.293,000 (wgt'ed) examples reached here.  /* #neg=930 #pos=363 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9,42e-08, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.05412378023976344;  // std dev = 15,985, 1.226,000 (wgt'ed) examples reached here.  /* #neg=863 #pos=363 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367125;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.05275956877052376;  // std dev = 15,886, 1.191,000 (wgt'ed) examples reached here.  /* #neg=828 #pos=363 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 6,14e-08, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.015209466557633689;  // std dev = 16,197, 1.309,000 (wgt'ed) examples reached here.  /* #neg=946 #pos=363 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.317057
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 3.068 seconds
Total inference time: 5.468 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.60022
   AUC PR    = 0.220272
   CLL	      = -0.317549
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.200441
   F1        = 0.333945


Total scoring time: 4.112 seconds
Parameter learned model CLL: -0.317549


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.19, 943, 363], 'true': [1.69e-07, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.985, 863, 363], 'true': [2.8e-07, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.049, 887, 363], 'true': [3.95e-07, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.149, 926, 363], 'true': [1.93e-07, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.023, 877, 363], 'true': [0.0, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.17, 935, 363], 'true': [0.0, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.158, 930, 363], 'true': [1.07e-07, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.985, 863, 363], 'true': [9.42e-08, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [15.886, 828, 363], 'true': [0.0, 0, 91]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.197, 946, 363], 'true': [6.14e-08, 0, 91]}]]
[{'': [3.123264772571869e-16, 0.20069287937166397]}, {'': [8.58897812457264e-16, 0.20841860291827902]}, {'': [1.717795624914528e-15, 0.2060678400000012]}, {'': [4.099285014000578e-16, 0.2023074038787327]}, {'': [-3.5136728691433524e-16, 0.20704409469303053]}, {'': [-3.9040809657148365e-17, 0.20145073254811116]}, {'': [1.2688263138573217e-16, 0.20192613088861866]}, {'': [9.76020241428709e-17, 0.2084186029182866]}, {'': [-8.296172052144027e-17, 0.21189145289925942]}, {'': [4.1480860260720135e-17, 0.20040957559494493]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995117;  // std dev = 1,69e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16732324702611298;  // std dev = 0,462, 1.090,000 (wgt'ed) examples reached here.  /* #neg=753 #pos=337 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.04107587110203805;  // std dev = 3,419, 129,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=13 */
%   | | | else return 0.07243464938522651;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02481560176617902;  // std dev = 2,582, 48,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,80e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1500243693060143;  // std dev = 0,464, 1.075,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=337 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.3386418112585865;  // std dev = 1,560, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.1572858407640354;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.035524121474511325;  // std dev = 3,409, 126,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=13 */
%   | | | else return 0.029014261003999956;  // std dev = 2,571, 46,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,95e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5422456006353531;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.060027126637374195;  // std dev = 1,620, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else return 0.12813329603313184;  // std dev = 0,464, 1.041,000 (wgt'ed) examples reached here.  /* #neg=715 #pos=326 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return -0.13277989374960408;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14892537403912787;  // std dev = 1,613, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.00865734112593602;  // std dev = 3,289, 85,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=13 */
%   | | | else return -0.0026244505959572215;  // std dev = 2,767, 65,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831;  // std dev = 1,93e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09824072399952481;  // std dev = 0,458, 1.112,000 (wgt'ed) examples reached here.  /* #neg=775 #pos=337 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.03187635381365203;  // std dev = 3,382, 126,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=13 */
%   | | | else return 0.10274643392245926;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.10934172313075453;  // std dev = 2,638, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.19748527278917907;  // std dev = 0,101, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07964371715400988;  // std dev = 0,457, 1.120,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=337 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.024305236772976267;  // std dev = 3,281, 83,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=13 */
%   | | | else return -0.045873760082953685;  // std dev = 1,615, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.08496449524110797;  // std dev = 2,636, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.13080430751888797;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06743231790963683;  // std dev = 0,459, 1.111,000 (wgt'ed) examples reached here.  /* #neg=774 #pos=337 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05941419281878211;  // std dev = 3,331, 63,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return -0.08748706843697887;  // std dev = 1,385, 42,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.11161950763564538;  // std dev = 1,440, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.03508946997733897;  // std dev = 2,327, 63,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253576;  // std dev = 1,07e-07, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06366093846047528;  // std dev = 0,462, 1.082,000 (wgt'ed) examples reached here.  /* #neg=745 #pos=337 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.03621742186660191;  // std dev = 3,383, 138,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=13 */
%   | | | else return 0.006551459638970124;  // std dev = 1,576, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.10510185990843394;  // std dev = 1,000, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0604084256615945;  // std dev = 2,625, 64,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9,42e-08, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.06008219498512325;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.23991780501487675;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.049783290921711354;  // std dev = 0,461, 1.056,000 (wgt'ed) examples reached here.  /* #neg=729 #pos=327 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.011996073877205237;  // std dev = 3,342, 114,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=13 */
%   | | | else return -0.05176573561240811;  // std dev = 1,616, 34,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.11970544069445806;  // std dev = 1,562, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.0026878305774327847;  // std dev = 2,151, 35,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367125;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.30811268232796046;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.11822777680120078;  // std dev = 1,628, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else return 0.047899426509562214;  // std dev = 0,465, 1.026,000 (wgt'ed) examples reached here.  /* #neg=700 #pos=326 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.05790057616029513;  // std dev = 1,373, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.17120067145594323;  // std dev = 0,750, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0034699132496359693;  // std dev = 3,665, 124,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=16 */
%   | | | else return -0.03102083053296755;  // std dev = 2,210, 40,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 6,14e-08, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2346267390795417;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.1218108635896845;  // std dev = 1,650, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | else return 0.03352510202098697;  // std dev = 0,463, 1.042,000 (wgt'ed) examples reached here.  /* #neg=716 #pos=326 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.20616290071037266;  // std dev = 1,602, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.125463258363497;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.019796498444393757;  // std dev = 3,554, 114,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=15 */
%   | | | else return -0.022251894264032422;  // std dev = 2,321, 61,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=6 */


Results
   AUC ROC   = 0.601838
   AUC PR    = 0.171612
   CLL	      = -0.329084
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 65.614 seconds
Total inference time: 12.18 seconds
AUC ROC: 0.601838


Results scoring model
   AUC ROC   = 0.665299
   AUC PR    = 0.237567
   CLL	      = -0.310498
   Precision = 0.968085 at threshold = 0.5
   Recall    = 0.200441
   F1        = 0.332117


Total scoring time: 14.766 seconds
Refined model CLL: -0.310498


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.601838
   AUC PR    = 0.171612
   CLL	      = -0.329084
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 87.56000000000002 seconds
Total inference time: 12.18 seconds
AUC ROC: 0.601838
Total revision time: 87.56000000000002
Best scored revision CLL: -0.310498


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 09:49:56
{'AUC PR': 0.171612, 'AUC ROC': 0.601838, 'Learning time': 87.56000000000002, 'F1': 0.266821, 'Inference time': 12.18, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'parameter_0.2': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Learning time': 3.068, 'F1': 0.266821, 'Inference time': 5.468, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'CLL': -0.317057}, 'CLL': -0.329084}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22458729126389101;  // std dev = 0,482, 1.168,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=428 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23314893509951226;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return -0.04661296966239244;  // std dev = 3,008, 105,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=10 */
%   | | | else return 0.04564893509951222;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.002962176011598821;  // std dev = 2,075, 36,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2073149261705406;  // std dev = 0,485, 1.130,000 (wgt'ed) examples reached here.  /* #neg=702 #pos=428 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16066757255144135;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.17266576078189197;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0861084386260214;  // std dev = 3,152, 56,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return -0.09473885511523657;  // std dev = 1,386, 46,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
%   | | else return -0.04544106080978945;  // std dev = 0,288, 66,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6304059812005826;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.07485042564502696;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.15421550501010634;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else return 0.16418375897836388;  // std dev = 0,482, 1.125,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=413 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, H) )
%   | | | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1364966155730606;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.14937431704722362;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.06360927585637863;  // std dev = 0,415, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return -0.03360631067822428;  // std dev = 0,302, 175,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.758917065289078;  // std dev = 0,087, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.23077966538502404;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.07956790270720461;  // std dev = 1,498, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.15067444982835929;  // std dev = 1,480, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.022791568931875575;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.1281280095249827;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.1221615110855672;  // std dev = 0,478, 1.139,000 (wgt'ed) examples reached here.  /* #neg=737 #pos=402 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.0865608856127268;  // std dev = 0,430, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else return -0.011338524624810043;  // std dev = 0,329, 170,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11191443627155151;  // std dev = 0,480, 1.171,000 (wgt'ed) examples reached here.  /* #neg=743 #pos=428 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.20488829726230814;  // std dev = 0,466, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return -0.1300824827604344;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.038730623663888526;  // std dev = 3,014, 116,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=10 */
%   | | | else return 0.22774066347903751;  // std dev = 1,357, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.22631310663514517;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.014150959679134397;  // std dev = 2,078, 39,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10211773718389319;  // std dev = 0,483, 1.134,000 (wgt'ed) examples reached here.  /* #neg=706 #pos=428 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return 0.009068090214303607;  // std dev = 0,337, 94,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=13 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.1254494879734409;  // std dev = 0,037, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0279591692458648;  // std dev = 1,588, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.21788505616027828;  // std dev = 0,827, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.013540480476216022;  // std dev = 2,565, 54,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
%   | | else return -0.16651890294457042;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5837208707390225;  // std dev = 0,168, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.1411710478151646;  // std dev = 1,667, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return -0.15098752106905908;  // std dev = 1,605, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else return 0.0885591153780523;  // std dev = 0,486, 1.074,000 (wgt'ed) examples reached here.  /* #neg=662 #pos=412 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return -0.01682689830862295;  // std dev = 0,311, 114,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=13 */
%   | | else return -0.05576165041907025;  // std dev = 0,270, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.0856542112087022;  // std dev = 2,544, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.1670425049415826;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.13807445479664532;  // std dev = 0,065, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.054309697202348545;  // std dev = 0,480, 1.159,000 (wgt'ed) examples reached here.  /* #neg=731 #pos=428 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6666062019794866;  // std dev = 1,516, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return -0.1262726909707342;  // std dev = 0,262, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.10299974770812104;  // std dev = 0,016, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.0055643114261059775;  // std dev = 1,569, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.15038335776922163;  // std dev = 0,807, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -9.33653751720905E-4;  // std dev = 1,493, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.019298275251896615;  // std dev = 2,026, 30,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6366656110178834;  // std dev = 0,185, 409,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=395 */
%   | | else return -0.2792600537335474;  // std dev = 0,154, 783,000 (wgt'ed) examples reached here.  /* #neg=767 #pos=16 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.2258732945307584;  // std dev = 0,252, 76,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=5 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3275206141390319;  // std dev = 2,426, 26,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return -0.05437582938894684;  // std dev = 1,636, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6737843506043979;  // std dev = 0,000822, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.07883174901873102;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.023761685152379457;  // std dev = 1,355, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.031414548569311126;  // std dev = 0,372, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.478808015026037;  // std dev = 0,202, 412,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=395 */
%   | | else return -0.22681251056119153;  // std dev = 0,146, 826,000 (wgt'ed) examples reached here.  /* #neg=810 #pos=16 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.17533637447104397;  // std dev = 0,266, 66,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=5 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3371766493204208;  // std dev = 2,106, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return -0.06500550857147598;  // std dev = 1,677, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( title(K, I), venue(K, B) )
%   | | | then return 0.5025096402805763;  // std dev = 1,615, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return -0.19395015665996895;  // std dev = 0,411, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.20460861207018174;  // std dev = 0,326, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.21053395850873516;  // std dev = 0,339, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */


Results
   AUC ROC   = 0.979632
   AUC PR    = 0.482001
   CLL	      = -0.253266
   Precision = 0.456163 at threshold = 0.5
   Recall    = 0.926372
   F1        = 0.611307


Total learning time: 453.503 seconds
Total inference time: 58.872 seconds
AUC ROC: 0.979632


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 09:58:28
{'AUC PR': 0.482001, 'AUC ROC': 0.979632, 'Learning time': 453.503, 'F1': 0.611307, 'Inference time': 58.872, 'Precision': [0.456163, 0.5], 'Recall': 0.926372, 'CLL': -0.253266}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22271452283374937;  // std dev = 0,481, 1.174,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=428 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.011416282291792127;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.051697322196286546;  // std dev = 2,200, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.548673
   AUC PR    = 0.014308
   CLL	      = -0.200976
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 26.384 seconds
Total inference time: 4.77 seconds
AUC ROC: 0.548673


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 09:59:00
{'AUC PR': 0.014308, 'AUC ROC': 0.548673, 'Learning time': 26.384, 'F1': nan, 'Inference time': 4.77, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.200976}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1,05e-06, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.1489652616301195;  // std dev = 22,924, 2.548,000 (wgt'ed) examples reached here.  /* #neg=1.807 #pos=741 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.12635151615960513;  // std dev = 22,980, 2.579,000 (wgt'ed) examples reached here.  /* #neg=1.838 #pos=741 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,65e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.10799177980531095;  // std dev = 22,989, 2.584,000 (wgt'ed) examples reached here.  /* #neg=1.843 #pos=741 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4,21e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.10264879691207725;  // std dev = 22,810, 2.488,000 (wgt'ed) examples reached here.  /* #neg=1.747 #pos=741 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3,72e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.07809495374937311;  // std dev = 22,939, 2.556,000 (wgt'ed) examples reached here.  /* #neg=1.815 #pos=741 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.05768229127372521;  // std dev = 23,053, 2.620,000 (wgt'ed) examples reached here.  /* #neg=1.879 #pos=741 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2,73e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.06198729970809135;  // std dev = 22,818, 2.492,000 (wgt'ed) examples reached here.  /* #neg=1.751 #pos=741 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.037097000522182316;  // std dev = 23,037, 2.611,000 (wgt'ed) examples reached here.  /* #neg=1.870 #pos=741 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.032992754641896375;  // std dev = 22,991, 2.585,000 (wgt'ed) examples reached here.  /* #neg=1.844 #pos=741 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.03120142100503467;  // std dev = 22,918, 2.545,000 (wgt'ed) examples reached here.  /* #neg=1.804 #pos=741 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.318305
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 6.259 seconds
Total inference time: 4.989 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.59196
   AUC PR    = 0.203354
   CLL	      = -0.319036
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.183921
   F1        = 0.310698


Total scoring time: 6.349 seconds
Parameter learned model CLL: -0.319036


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.924, 1807, 741], 'true': [1.05e-06, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.98, 1838, 741], 'true': [0.0, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.989, 1843, 741], 'true': [5.65e-07, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.81, 1747, 741], 'true': [4.21e-07, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.939, 1815, 741], 'true': [3.72e-07, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.053, 1879, 741], 'true': [0.0, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.818, 1751, 741], 'true': [2.73e-07, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.037, 1870, 741], 'true': [0.0, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.991, 1844, 741], 'true': [0.0, 0, 167]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [22.918, 1804, 741], 'true': [9.42e-08, 0, 167]}]]
[{'': [6.552310257907511e-15, 0.20624219075387754]}, {'': [-2.9783228445034138e-15, 0.20476750128286336]}, {'': [1.9146361143236234e-15, 0.2045307093425885]}, {'': [1.0636867301797906e-15, 0.20912712208310721]}, {'': [8.296756495402368e-16, 0.2058605545636877]}, {'': [-2.6592168254494765e-16, 0.20283477070101277]}, {'': [4.467484266755121e-16, 0.20893359553137542]}, {'': [-3.191060190539372e-16, 0.20325726190683474]}, {'': [-2.473071647668013e-16, 0.20448338689582352]}, {'': [5.3184336508989535e-17, 0.2063854933399152]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1,05e-06, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1820468469324539;  // std dev = 0,468, 2.155,000 (wgt'ed) examples reached here.  /* #neg=1.457 #pos=698 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.03822412189530638;  // std dev = 4,234, 193,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=20 */
%   | | | else return -0.0812450042944271;  // std dev = 1,938, 66,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03340666705827527;  // std dev = 3,744, 97,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.47087628748962174;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return 0.044190070480824066;  // std dev = 3,205, 62,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | else return 0.14516079927413447;  // std dev = 0,463, 2.160,000 (wgt'ed) examples reached here.  /* #neg=1.489 #pos=671 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.03522064162674919;  // std dev = 4,238, 196,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=20 */
%   | | | else return -0.07070747368411139;  // std dev = 1,937, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03713418053658806;  // std dev = 3,919, 101,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=19 */
%   | | | else return -0.1563100026396844;  // std dev = 0,067, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,65e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1268979336545633;  // std dev = 0,463, 2.227,000 (wgt'ed) examples reached here.  /* #neg=1.529 #pos=698 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.03790554237868401;  // std dev = 4,254, 210,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=20 */
%   | | | else return -0.06954609581205096;  // std dev = 1,944, 73,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11840896627711238;  // std dev = 2,250, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.00859971886734451;  // std dev = 3,156, 75,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4,21e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.29733175772778514;  // std dev = 2,520, 28,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return -0.022519816291362252;  // std dev = 3,163, 71,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
%   | | else return 0.11792569067074764;  // std dev = 0,468, 2.068,000 (wgt'ed) examples reached here.  /* #neg=1.397 #pos=671 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0366872321820581;  // std dev = 4,488, 135,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=25 */
%   | | | else return -0.06555865084891882;  // std dev = 2,378, 89,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.05733544478166335;  // std dev = 3,336, 171,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=12 */
%   | | | else return -0.13864518834302272;  // std dev = 0,061, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3,72e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.172901369568025;  // std dev = 2,446, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.04851749510998487;  // std dev = 2,747, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | else return 0.0995306779509305;  // std dev = 0,468, 2.084,000 (wgt'ed) examples reached here.  /* #neg=1.405 #pos=679 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.044707024295847005;  // std dev = 4,449, 127,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=25 */
%   | | | else return -0.05051495647488788;  // std dev = 2,363, 83,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=6 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.053940468023560444;  // std dev = 1,572, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.055058121917653004;  // std dev = 2,894, 138,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2964519302463836;  // std dev = 2,105, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.046165259914248566;  // std dev = 2,755, 53,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | else return 0.07134048758204402;  // std dev = 0,464, 2.151,000 (wgt'ed) examples reached here.  /* #neg=1.472 #pos=679 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.02291979447787546;  // std dev = 4,240, 213,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=20 */
%   | | | else return 0.04954449812815072;  // std dev = 1,815, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.17071633718220197;  // std dev = 2,100, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.04218758419949639;  // std dev = 3,063, 59,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2,73e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20645967616206348;  // std dev = 2,173, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.028138667989364496;  // std dev = 2,737, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.037122255987029326;  // std dev = 3,876, 82,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | | | else return 0.06591206486706487;  // std dev = 21,046, 2.023,000 (wgt'ed) examples reached here.  /* #neg=1.368 #pos=655 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.008672195541323403;  // std dev = 4,319, 156,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=23 */
%   | | | else return 0.06803412015070597;  // std dev = 2,541, 44,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return 0.031990140301809196;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.054480697178222445;  // std dev = 2,907, 154,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.034691884493186616;  // std dev = 0,459, 2.290,000 (wgt'ed) examples reached here.  /* #neg=1.592 #pos=698 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.028505084887817674;  // std dev = 4,253, 235,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=20 */
%   | | | else return 0.016206812055983937;  // std dev = 1,845, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.09959255085892017;  // std dev = 2,177, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.027873406713820503;  // std dev = 3,186, 89,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.395563874632588;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return -0.012730074215833736;  // std dev = 3,199, 59,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.004810714174445172;  // std dev = 3,294, 59,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return 0.04603582018729786;  // std dev = 21,048, 2.024,000 (wgt'ed) examples reached here.  /* #neg=1.369 #pos=655 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return -0.11031564477909732;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09400773828519766;  // std dev = 2,146, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.011754365783674491;  // std dev = 4,539, 190,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=24 */
%   | | | else return -0.024679346296218454;  // std dev = 3,306, 145,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.028781180835169572;  // std dev = 0,462, 2.218,000 (wgt'ed) examples reached here.  /* #neg=1.520 #pos=698 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.025243438432768453;  // std dev = 4,353, 176,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=23 */
%   | | | else return 0.1399866313610692;  // std dev = 2,423, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.029190355488660072;  // std dev = 3,317, 159,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=12 */
%   | | | else return -0.14589494391418353;  // std dev = 0,083, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.606231
   AUC PR    = 0.173208
   CLL	      = -0.335469
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 155.534 seconds
Total inference time: 15.812 seconds
AUC ROC: 0.606231


Results scoring model
   AUC ROC   = 0.660074
   AUC PR    = 0.220397
   CLL	      = -0.315107
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.183921
   F1        = 0.310698


Total scoring time: 35.808 seconds
Refined model CLL: -0.315107


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.606231
   AUC PR    = 0.173208
   CLL	      = -0.335469
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 203.95 seconds
Total inference time: 15.812 seconds
AUC ROC: 0.606231
Total revision time: 203.95
Best scored revision CLL: -0.315107


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 10:02:46
{'AUC PR': 0.173208, 'AUC ROC': 0.606231, 'parameter_0.4': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Learning time': 6.259, 'F1': 0.266821, 'Inference time': 4.989, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'CLL': -0.318305}, 'Learning time': 203.95, 'F1': 0.266821, 'Inference time': 15.812, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'CLL': -0.335469}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.00740266644279592;  // std dev = 2,917, 67,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | else return 0.22797537034650328;  // std dev = 0,483, 2.247,000 (wgt'ed) examples reached here.  /* #neg=1.416 #pos=831 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.05793498098440397;  // std dev = 0,277, 286,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=24 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then if ( haswordauthor(L, M), haswordtitle(N, M) )
%   | | | then return 0.17393840878372288;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.0139930909436682;  // std dev = 0,363, 77,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19798094572375474;  // std dev = 0,481, 2.335,000 (wgt'ed) examples reached here.  /* #neg=1.470 #pos=865 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return -0.08384903783441898;  // std dev = 2,577, 137,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=7 */
%   | | | else return -0.003630797032236651;  // std dev = 3,360, 99,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=13 */
%   | | else return 0.0189022255007859;  // std dev = 0,361, 26,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.08630367927919373;  // std dev = 3,802, 81,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | | | else return -0.14527292560529093;  // std dev = 0,011, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14505918317697938;  // std dev = 0,011, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15838030695354793;  // std dev = 0,478, 2.398,000 (wgt'ed) examples reached here.  /* #neg=1.533 #pos=865 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.7599492761852263;  // std dev = 1,323, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return -0.11958373591292239;  // std dev = 1,743, 93,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=3 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.12901469940597785;  // std dev = 0,031, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0.023946428963228357;  // std dev = 2,257, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.003904042837662369;  // std dev = 1,606, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return -0.13607527399036218;  // std dev = 0,010, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.0669998695867137;  // std dev = 2,897, 142,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=9 */
%   | | | else return -0.12663262678825352;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13842274725302758;  // std dev = 0,480, 2.355,000 (wgt'ed) examples reached here.  /* #neg=1.490 #pos=865 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6480461658085616;  // std dev = 1,414, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return -0.12569610001498013;  // std dev = 1,017, 85,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.11401650762275249;  // std dev = 0,024, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0.005276862035530505;  // std dev = 2,280, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.08320769153443135;  // std dev = 1,528, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.1184338115322416;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.05180399449576747;  // std dev = 2,884, 128,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=9 */
%   | | | else return -0.1154125493745949;  // std dev = 0,016, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10874603723679266;  // std dev = 0,479, 2.382,000 (wgt'ed) examples reached here.  /* #neg=1.517 #pos=865 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return -0.021898234416339927;  // std dev = 0,293, 205,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=20 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.11796153776777744;  // std dev = 0,061, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.019044401450370136;  // std dev = 1,439, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.09967899457471387;  // std dev = 1,320, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.10076435213219237;  // std dev = 0,550, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0025754186726092225;  // std dev = 2,180, 67,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | | else return -0.10196364985210929;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09200210360632637;  // std dev = 0,480, 2.354,000 (wgt'ed) examples reached here.  /* #neg=1.489 #pos=865 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return 0.016539194007749607;  // std dev = 0,295, 123,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=25 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.10134282819847458;  // std dev = 0,026, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.0031155831444160645;  // std dev = 2,292, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.047981528179086005;  // std dev = 1,556, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.10546045165535019;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.04204820388160502;  // std dev = 2,879, 127,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=9 */
%   | | | else return -0.10028463607356927;  // std dev = 0,032, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07666048752535275;  // std dev = 0,481, 2.331,000 (wgt'ed) examples reached here.  /* #neg=1.466 #pos=865 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.1907240908038842;  // std dev = 0,692, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.043024042607628696;  // std dev = 1,554, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return -0.1040224335186894;  // std dev = 0,042, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.015503978829052191;  // std dev = 3,122, 116,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=23 */
%   | | | else return -0.043173223919010864;  // std dev = 2,326, 88,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.034188980484107005;  // std dev = 2,875, 119,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=9 */
%   | | | else return -0.09324443120973258;  // std dev = 0,028, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05921382050997853;  // std dev = 0,480, 2.341,000 (wgt'ed) examples reached here.  /* #neg=1.476 #pos=865 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.28646645026318573;  // std dev = 0,497, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.018907003000071317;  // std dev = 1,570, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.09301272210481497;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.03269499233217101;  // std dev = 2,971, 164,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=21 */
%   | | | else return 0.059088908176055895;  // std dev = 2,539, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else return -0.03553896328711907;  // std dev = 0,254, 129,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6452969611263832;  // std dev = 0,183, 813,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=786 */
%   | | else return -0.2761816137304317;  // std dev = 0,152, 1.576,000 (wgt'ed) examples reached here.  /* #neg=1.545 #pos=31 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.17924248820649197;  // std dev = 0,316, 132,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=15 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.35104406405370187;  // std dev = 3,179, 46,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=31 */
%   | | | else return -0.040079002703381855;  // std dev = 1,492, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.47602579734312844;  // std dev = 1,636, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return -0.1314155785341407;  // std dev = 0,171, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -6.753981452043185E-4;  // std dev = 0,277, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0.36889465390801673;  // std dev = 0,375, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.4928597358442888;  // std dev = 0,186, 814,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=786 */
%   | | else return -0.22507057613784706;  // std dev = 0,147, 1.591,000 (wgt'ed) examples reached here.  /* #neg=1.560 #pos=31 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.16572022974492248;  // std dev = 3,384, 109,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=13 */
%   | | | else return -0.03462226226891796;  // std dev = 1,120, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.17025424645592183;  // std dev = 3,634, 54,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return -0.03826416158825509;  // std dev = 1,522, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return 0.03367375334334512;  // std dev = 0,280, 101,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then return 0.5241622673127836;  // std dev = 0,259, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.1057177820914098;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.983025
   AUC PR    = 0.470006
   CLL	      = -0.24886
   Precision = 0.449511 at threshold = 0.5
   Recall    = 0.923695
   F1        = 0.604733


Total learning time: 1228.893 seconds
Total inference time: 53.544 seconds
AUC ROC: 0.983025


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 10:24:09
{'AUC PR': 0.470006, 'AUC ROC': 0.983025, 'Learning time': 1228.893, 'F1': 0.604733, 'Inference time': 53.544, 'Precision': [0.449511, 0.5], 'Recall': 0.923695, 'CLL': -0.24886}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21499711991798912;  // std dev = 0,479, 2.424,000 (wgt'ed) examples reached here.  /* #neg=1.559 #pos=865 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7277141524908164;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return -0.14185106490048832;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.024204006076958332;  // std dev = 1,879, 34,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.11901850031690367;  // std dev = 2,106, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.020311097261674526;  // std dev = 3,171, 74,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=12 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.548687
   AUC PR    = 0.014321
   CLL	      = -0.199643
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 49.505 seconds
Total inference time: 5.038 seconds
AUC ROC: 0.548687


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 10:25:04
{'AUC PR': 0.014321, 'AUC ROC': 0.548687, 'Learning time': 49.505, 'F1': nan, 'Inference time': 5.038, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.199643}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.15568926834468041;  // std dev = 28,112, 3.781,000 (wgt'ed) examples reached here.  /* #neg=2.656 #pos=1.125 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.12658218472630645;  // std dev = 28,293, 3.900,000 (wgt'ed) examples reached here.  /* #neg=2.775 #pos=1.125 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.11097656352840342;  // std dev = 28,247, 3.869,000 (wgt'ed) examples reached here.  /* #neg=2.744 #pos=1.125 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.09171467911325004;  // std dev = 28,293, 3.900,000 (wgt'ed) examples reached here.  /* #neg=2.775 #pos=1.125 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,86e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.07258932019985141;  // std dev = 28,377, 3.958,000 (wgt'ed) examples reached here.  /* #neg=2.833 #pos=1.125 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2,95e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.07251065622232591;  // std dev = 28,132, 3.794,000 (wgt'ed) examples reached here.  /* #neg=2.669 #pos=1.125 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.05541739731163025;  // std dev = 28,217, 3.849,000 (wgt'ed) examples reached here.  /* #neg=2.724 #pos=1.125 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527747;  // std dev = 1,07e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.043969253586620495;  // std dev = 28,242, 3.866,000 (wgt'ed) examples reached here.  /* #neg=2.741 #pos=1.125 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.04036522577895428;  // std dev = 28,149, 3.805,000 (wgt'ed) examples reached here.  /* #neg=2.680 #pos=1.125 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 1,03e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.030608856448633676;  // std dev = 28,189, 3.831,000 (wgt'ed) examples reached here.  /* #neg=2.706 #pos=1.125 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.322278
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 9.348 seconds
Total inference time: 5.448 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.587004
   AUC PR    = 0.193235
   CLL	      = -0.323139
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174009
   F1        = 0.296435


Total scoring time: 7.317 seconds
Parameter learned model CLL: -0.323139


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.112, 2656, 1125], 'true': [1.08e-06, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.293, 2775, 1125], 'true': [0.0, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.247, 2744, 1125], 'true': [5.33e-07, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.293, 2775, 1125], 'true': [0.0, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.377, 2833, 1125], 'true': [2.86e-07, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.132, 2669, 1125], 'true': [2.95e-07, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.217, 2724, 1125], 'true': [2.92e-07, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.242, 2741, 1125], 'true': [1.07e-07, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.149, 2680, 1125], 'true': [0.0, 0, 237]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [28.189, 2706, 1125], 'true': [1.03e-07, 0, 237]}]]
[{'': [4.916835808635292e-15, 0.20901008333755047]}, {'': [-4.137337448729697e-15, 0.20525147928995266]}, {'': [1.1992282460086079e-15, 0.20622398276024795]}, {'': [-1.4990353075107598e-16, 0.205251479289915]}, {'': [3.4477812072747475e-16, 0.20344523254661254]}, {'': [3.6726365034013617e-16, 0.20859622426329888]}, {'': [3.5976847380258237e-16, 0.2068539428912682]}, {'': [4.87186474940997e-17, 0.20631835126503814]}, {'': [-1.686414720949605e-16, 0.20824663584984154]}, {'': [4.4971059225322796e-17, 0.20742256990588429]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1,08e-06, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17698069658414364;  // std dev = 0,466, 3.287,000 (wgt'ed) examples reached here.  /* #neg=2.239 #pos=1.048 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.044149915475200814;  // std dev = 5,539, 348,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=34 */
%   | | | else return 0.12345505754849195;  // std dev = 3,090, 49,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.06362838715430595;  // std dev = 4,882, 146,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=30 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.08521110784290088;  // std dev = 4,500, 108,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | | else return 0.8352111078429004;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.16530819522154233;  // std dev = 4,772, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | | else return 0.16080022168296362;  // std dev = 25,722, 3.013,000 (wgt'ed) examples reached here.  /* #neg=2.032 #pos=981 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.10354350917741333;  // std dev = 5,788, 177,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=45 */
%   | | | else return -0.06901653417931866;  // std dev = 2,900, 130,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=9 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.13896029936050466;  // std dev = 2,408, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.06719099087171122;  // std dev = 3,737, 216,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5,33e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5371891977491324;  // std dev = 2,250, 26,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return 0.01237456594826266;  // std dev = 3,874, 94,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=19 */
%   | | else return 0.1255019238323062;  // std dev = 0,464, 3.222,000 (wgt'ed) examples reached here.  /* #neg=2.212 #pos=1.010 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.03640031063732582;  // std dev = 5,522, 357,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=34 */
%   | | | else return 0.09680989704314164;  // std dev = 3,077, 49,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06059162281381042;  // std dev = 4,820, 135,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=30 */
%   | | | else return -0.11825682819243868;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1161350226354947;  // std dev = 0,467, 3.233,000 (wgt'ed) examples reached here.  /* #neg=2.185 #pos=1.048 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3337988777366344;  // std dev = 0,989, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06471366948774576;  // std dev = 2,749, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09148928978820951;  // std dev = 2,611, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return -0.01865276645349117;  // std dev = 6,928, 456,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=56 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2,86e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5101581098389463;  // std dev = 1,809, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return 0.0032948333995996165;  // std dev = 3,845, 89,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=19 */
%   | | else return 0.09078921799384616;  // std dev = 0,466, 3.172,000 (wgt'ed) examples reached here.  /* #neg=2.162 #pos=1.010 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06473496232185542;  // std dev = 5,830, 188,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=45 */
%   | | | else return -0.044583368927315785;  // std dev = 2,890, 109,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.05003139777315434;  // std dev = 2,511, 38,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return -0.0397046756251267;  // std dev = 3,711, 179,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2,95e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06855935438098132;  // std dev = 0,462, 3.350,000 (wgt'ed) examples reached here.  /* #neg=2.302 #pos=1.048 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.008358167507178575;  // std dev = 5,890, 265,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=43 */
%   | | | else return 0.10229351674314188;  // std dev = 2,915, 49,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.10037876840625296;  // std dev = 2,417, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return -0.04299394519793924;  // std dev = 3,724, 199,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2,92e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06040781331644813;  // std dev = 0,464, 3.298,000 (wgt'ed) examples reached here.  /* #neg=2.250 #pos=1.048 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.03203447424500295;  // std dev = 5,495, 363,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=34 */
%   | | | else return 0.049322137835308796;  // std dev = 3,133, 55,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.1257038709460004;  // std dev = 2,838, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return -4.4173968371541414E-5;  // std dev = 3,836, 105,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527747;  // std dev = 1,07e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3057870158231133;  // std dev = 2,783, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return -0.0829267392771498;  // std dev = 3,306, 82,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
%   | | else return 0.052732822231772405;  // std dev = 0,466, 3.154,000 (wgt'ed) examples reached here.  /* #neg=2.139 #pos=1.015 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.04115578133992546;  // std dev = 5,860, 194,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=45 */
%   | | | else return -0.05993029549832602;  // std dev = 2,901, 141,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.13549986164568462;  // std dev = 0,104, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.018170900875366398;  // std dev = 4,494, 221,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=23 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.6356754713572296;  // std dev = 0,339, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.03654062042629094;  // std dev = 0,463, 3.303,000 (wgt'ed) examples reached here.  /* #neg=2.259 #pos=1.044 */
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return -0.12107994286594097;  // std dev = 0,045, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.12139490104581784;  // std dev = 2,766, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.0039710951411776755;  // std dev = 5,856, 277,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=42 */
%   | | | else return -0.020754775024589278;  // std dev = 4,496, 238,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 1,03e-07, 237,000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.028099695903492115;  // std dev = 0,462, 3.328,000 (wgt'ed) examples reached here.  /* #neg=2.280 #pos=1.048 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03744840206222189;  // std dev = 5,822, 190,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=45 */
%   | | | else return -0.05308294494996191;  // std dev = 2,899, 142,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.051668747303506325;  // std dev = 2,490, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return -0.03795297400390615;  // std dev = 3,740, 214,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=15 */


Results
   AUC ROC   = 0.60612
   AUC PR    = 0.172356
   CLL	      = -0.337983
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 193.689 seconds
Total inference time: 13.015 seconds
AUC ROC: 0.60612


Results scoring model
   AUC ROC   = 0.655495
   AUC PR    = 0.210503
   CLL	      = -0.318855
   Precision = 0.948413 at threshold = 0.5
   Recall    = 0.175477
   F1        = 0.296159


Total scoring time: 36.064 seconds
Refined model CLL: -0.318855


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.60612
   AUC PR    = 0.172356
   CLL	      = -0.337983
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 246.41799999999998 seconds
Total inference time: 13.015 seconds
AUC ROC: 0.60612
Total revision time: 246.41799999999998
Best scored revision CLL: -0.318855


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 10:29:30
{'AUC PR': 0.172356, 'AUC ROC': 0.60612, 'Learning time': 246.41799999999998, 'F1': 0.266821, 'Inference time': 13.015, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'parameter_0.6': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Learning time': 9.348, 'F1': 0.266821, 'Inference time': 5.448, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'CLL': -0.322278}, 'CLL': -0.337983}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22104077356321802;  // std dev = 0,481, 3.541,000 (wgt'ed) examples reached here.  /* #neg=2.256 #pos=1.285 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8146706742299468;  // std dev = 1,383, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.13465682029617135;  // std dev = 0,996, 139,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.005487428536851301;  // std dev = 2,788, 66,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=9 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.1273797043302816;  // std dev = 2,262, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return -0.04185106490048778;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.06163716115717214;  // std dev = 3,714, 187,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.8290570685545565;  // std dev = 8,43e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.4152639651062806;  // std dev = 2,652, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | else return 0.01655706855455656;  // std dev = 3,122, 64,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=12 */
%   | else return 0.19325459941875844;  // std dev = 0,481, 3.402,000 (wgt'ed) examples reached here.  /* #neg=2.163 #pos=1.239 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then return -0.02665053680583688;  // std dev = 0,302, 417,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.17379178125145173;  // std dev = 2,191, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.08338418289674392;  // std dev = 1,053, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.00826791932796855;  // std dev = 3,340, 112,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7826558763703501;  // std dev = 0,194, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.20009437415025996;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.017505788623146282;  // std dev = 3,915, 109,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=21 */
%   | | | else return 0.639531502671874;  // std dev = 0,903, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.32867018120393277;  // std dev = 2,714, 30,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.017173967295356384;  // std dev = 3,117, 63,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | else return 0.16739571429135613;  // std dev = 0,482, 3.279,000 (wgt'ed) examples reached here.  /* #neg=2.074 #pos=1.205 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.10831347002849911;  // std dev = 0,427, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else return -0.01989385952589688;  // std dev = 0,299, 545,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=67 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13764919999357805;  // std dev = 0,479, 3.506,000 (wgt'ed) examples reached here.  /* #neg=2.221 #pos=1.285 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(H, D) )
%   | | | then return 0.4112407798438867;  // std dev = 0,675, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2452900604776555;  // std dev = 2,020, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return -0.06459991392482792;  // std dev = 0,277, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06329137916978608;  // std dev = 4,966, 191,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=43 */
%   | | | else return -0.06496819281793917;  // std dev = 2,882, 142,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1297506147394626;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.048366979709993305;  // std dev = 3,712, 187,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=15 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5711954653079577;  // std dev = 0,087, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.4393854475086096;  // std dev = 1,592, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return -0.06024606322647394;  // std dev = 3,547, 96,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
%   | else return 0.10273118835038327;  // std dev = 0,478, 3.469,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=1.234 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.6637165442002885;  // std dev = 1,377, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.13040955560007175;  // std dev = 1,029, 135,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=1 */
%   | | else return -0.0546448513222516;  // std dev = 0,247, 136,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=9 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.10576992206611935;  // std dev = 0,453, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return -0.0477713777269539;  // std dev = 0,264, 199,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08549380323984762;  // std dev = 0,476, 3.571,000 (wgt'ed) examples reached here.  /* #neg=2.286 #pos=1.285 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5113453021133438;  // std dev = 1,383, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.11259533418809495;  // std dev = 1,010, 134,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.10944323646515003;  // std dev = 0,025, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0.018294065663602376;  // std dev = 2,781, 64,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=9 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.014397072016000337;  // std dev = 4,320, 187,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=22 */
%   | | | else return -0.08885269492828808;  // std dev = 0,985, 34,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=1 */
%   | | else return -0.11977696996853007;  // std dev = 0,138, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06814050845902038;  // std dev = 0,476, 3.576,000 (wgt'ed) examples reached here.  /* #neg=2.291 #pos=1.285 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.08339933119661559;  // std dev = 0,433, 27,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else return -0.07364807337255742;  // std dev = 0,256, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.02067783897716718;  // std dev = 3,244, 250,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=41 */
%   | | | else return 0.04935135478048546;  // std dev = 2,921, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0348997050259297;  // std dev = 3,709, 186,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=15 */
%   | | | else return -0.09742360229524896;  // std dev = 0,036, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05909420676682021;  // std dev = 0,477, 3.523,000 (wgt'ed) examples reached here.  /* #neg=2.238 #pos=1.285 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return -0.1038686446631029;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.0312522675478587;  // std dev = 1,363, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.10459419812547026;  // std dev = 0,588, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.010352927453685818;  // std dev = 3,010, 152,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=33 */
%   | | | else return -0.048767978587118906;  // std dev = 2,859, 137,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.020725181406993816;  // std dev = 2,435, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return -0.043376094325765634;  // std dev = 3,733, 221,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04717527567053481;  // std dev = 0,478, 3.515,000 (wgt'ed) examples reached here.  /* #neg=2.230 #pos=1.285 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3628982346423466;  // std dev = 1,693, 47,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=44 */
%   | | | else return -0.10114579340585389;  // std dev = 1,003, 137,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.09327845017391745;  // std dev = 0,028, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return 0.0041470610165394994;  // std dev = 2,801, 70,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=9 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.06580414522095164;  // std dev = 2,201, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.07139045193276912;  // std dev = 0,963, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.03271975396420798;  // std dev = 3,721, 199,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=15 */
%   | | | else return -0.085963650099091;  // std dev = 0,036, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then return 0.4045372137496419;  // std dev = 0,078, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordauthor(D, F), haswordtitle(G, F) )
%   | | | then return 0.12810954932925966;  // std dev = 0,938, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.35273427794407153;  // std dev = 0,179, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.03159876911886217;  // std dev = 0,477, 3.540,000 (wgt'ed) examples reached here.  /* #neg=2.272 #pos=1.268 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then return -0.028775869999152135;  // std dev = 0,185, 246,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=43 */
%   | | else return 0.047484300013402765;  // std dev = 0,373, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return -0.09956658591068696;  // std dev = 0,027, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return -4.16080107536627E-4;  // std dev = 2,465, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return -0.029876604248105777;  // std dev = 3,721, 201,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=15 */


Results
   AUC ROC   = 0.56521
   AUC PR    = 0.022052
   CLL	      = -0.384748
   Precision = 0.261364 at threshold = 0.5
   Recall    = 0.03079
   F1        = 0.05509


Total learning time: 338.856 seconds
Total inference time: 17.972 seconds
AUC ROC: 0.56521


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 10:35:28
{'AUC PR': 0.022052, 'AUC ROC': 0.56521, 'Learning time': 338.856, 'F1': 0.05509, 'Inference time': 17.972, 'Precision': [0.261364, 0.5], 'Recall': 0.03079, 'CLL': -0.384748}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.47883859027192616;  // std dev = 2,613, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | | else return 0.037924215998388786;  // std dev = 3,623, 89,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   | else return 0.21387104521769687;  // std dev = 0,479, 3.469,000 (wgt'ed) examples reached here.  /* #neg=2.235 #pos=1.234 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.7748156017661788;  // std dev = 1,915, 48,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=44 */
%   | | | else return -0.1339145569639798;  // std dev = 0,996, 126,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=1 */
%   | | else if ( haswordtitle(J, M), haswordauthor(N, M) )
%   | | | then return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0.0056899187060697205;  // std dev = 2,770, 61,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   | else if ( haswordvenue(B, P), haswordauthor(Q, P) )
%   | | then if ( haswordauthor(Q, R), haswordtitle(S, R) )
%   | | | then return 0.14981560176617903;  // std dev = 2,227, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, T), haswordtitle(U, T) )
%   | | | then return -0.06570893292079222;  // std dev = 3,723, 197,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.55271
   AUC PR    = 0.018934
   CLL	      = -0.199235
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 60.278 seconds
Total inference time: 6.943 seconds
AUC ROC: 0.55271


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 10:36:35
{'AUC PR': 0.018934, 'AUC ROC': 0.55271, 'Learning time': 60.278, 'F1': nan, 'Inference time': 6.943, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.199235}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.15039699711501103;  // std dev = 32,669, 5.160,000 (wgt'ed) examples reached here.  /* #neg=3.652 #pos=1.508 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.12678850496231617;  // std dev = 32,768, 5.237,000 (wgt'ed) examples reached here.  /* #neg=3.729 #pos=1.508 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.11151132274231321;  // std dev = 32,708, 5.190,000 (wgt'ed) examples reached here.  /* #neg=3.682 #pos=1.508 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.10311840185043786;  // std dev = 32,510, 5.041,000 (wgt'ed) examples reached here.  /* #neg=3.533 #pos=1.508 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.07681938443862885;  // std dev = 32,730, 5.207,000 (wgt'ed) examples reached here.  /* #neg=3.699 #pos=1.508 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.06151457008982256;  // std dev = 32,780, 5.246,000 (wgt'ed) examples reached here.  /* #neg=3.738 #pos=1.508 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,49e-07, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.05328545373714063;  // std dev = 32,717, 5.197,000 (wgt'ed) examples reached here.  /* #neg=3.689 #pos=1.508 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2,49e-07, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.04146723485322385;  // std dev = 32,765, 5.234,000 (wgt'ed) examples reached here.  /* #neg=3.726 #pos=1.508 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.0423571997367381;  // std dev = 32,564, 5.081,000 (wgt'ed) examples reached here.  /* #neg=3.573 #pos=1.508 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.03724813004516372;  // std dev = 32,495, 5.030,000 (wgt'ed) examples reached here.  /* #neg=3.522 #pos=1.508 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.323339
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 13.923 seconds
Total inference time: 4.988 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.584802
   AUC PR    = 0.188735
   CLL	      = -0.32426
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169604
   F1        = 0.290019


Total scoring time: 9.504 seconds
Parameter learned model CLL: -0.32426


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.669, 3652, 1508], 'true': [1.04e-06, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.768, 3729, 1508], 'true': [0.0, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.708, 3682, 1508], 'true': [0.0, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.51, 3533, 1508], 'true': [0.0, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.73, 3699, 1508], 'true': [0.0, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.78, 3738, 1508], 'true': [3.67e-07, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.717, 3689, 1508], 'true': [2.49e-07, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.765, 3726, 1508], 'true': [2.49e-07, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.564, 3573, 1508], 'true': [0.0, 0, 308]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [32.495, 3522, 1508], 'true': [0.0, 0, 308]}]]
[{'': [3.50657454011478e-15, 0.20683913226362957]}, {'': [-4.9830269780578455e-15, 0.20503527124037615]}, {'': [-1.8455655474288318e-16, 0.20613436986048625]}, {'': [-8.305044963429742e-16, 0.20965807023944097]}, {'': [-3.4604354014290595e-16, 0.20573610689161234]}, {'': [4.383218175143475e-16, 0.20482551998660553]}, {'': [2.0185873175002846e-16, 0.20597028176988552]}, {'': [2.0185873175002846e-16, 0.20510523984954637]}, {'': [-2.105098202536011e-16, 0.20870649657794116]}, {'': [-1.6725437773573787e-16, 0.20992043761292817]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1,04e-06, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6157246926752692;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return 0.018732876705351505;  // std dev = 4,297, 137,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.18661608838418378;  // std dev = 5,497, 137,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   | | | else return 0.17648551097499357;  // std dev = 29,871, 4.112,000 (wgt'ed) examples reached here.  /* #neg=2.803 #pos=1.309 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.21712329407387132;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.009190601766179132;  // std dev = 7,017, 384,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=58 */
%   | | | else return -0.031112809866931178;  // std dev = 5,417, 298,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=33 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15945517516467556;  // std dev = 0,467, 4.322,000 (wgt'ed) examples reached here.  /* #neg=2.921 #pos=1.401 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.041815386611251774;  // std dev = 6,581, 486,000 (wgt'ed) examples reached here.  /* #neg=438 #pos=48 */
%   | | | else return 0.11863983256898321;  // std dev = 3,543, 65,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0599011690774428;  // std dev = 5,744, 201,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=42 */
%   | | | else return -0.15194120071896786;  // std dev = 0,042, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1344113615720568;  // std dev = 0,467, 4.348,000 (wgt'ed) examples reached here.  /* #neg=2.947 #pos=1.401 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5200705882841824;  // std dev = 1,147, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.05828025773187578;  // std dev = 2,982, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.01544369970934601;  // std dev = 7,654, 430,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=71 */
%   | | | else return -0.05794502783255227;  // std dev = 4,409, 277,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=21 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3290967680248759;  // std dev = 3,591, 52,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   | | | else return -0.022674105119207446;  // std dev = 4,126, 111,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=21 */
%   | | else return 0.10527861002515418;  // std dev = 0,463, 4.301,000 (wgt'ed) examples reached here.  /* #neg=2.949 #pos=1.352 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.02322474625972;  // std dev = 6,513, 431,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=48 */
%   | | | else return 0.11427749370851556;  // std dev = 3,511, 62,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04630239924844452;  // std dev = 5,737, 203,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=42 */
%   | | | else return -0.12488263944372056;  // std dev = 0,050, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3973544864135057;  // std dev = 3,052, 42,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | | | else return 0.01736430855661627;  // std dev = 4,027, 94,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05536692186526904;  // std dev = 5,291, 153,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=43 */
%   | | | else return 0.08993427149936874;  // std dev = 29,898, 4.128,000 (wgt'ed) examples reached here.  /* #neg=2.819 #pos=1.309 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.025445818294612715;  // std dev = 6,529, 453,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=48 */
%   | | | else return 0.0817823940973446;  // std dev = 3,551, 66,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.11284754618208066;  // std dev = 3,208, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return 0.015916296363022102;  // std dev = 4,703, 156,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3,67e-07, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07435416834369016;  // std dev = 0,464, 4.410,000 (wgt'ed) examples reached here.  /* #neg=3.009 #pos=1.401 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.18553453866048275;  // std dev = 2,907, 39,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return -0.01487693366940771;  // std dev = 1,252, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.0322790891430226;  // std dev = 6,753, 510,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=52 */
%   | | | else return 0.031637992481223585;  // std dev = 5,617, 199,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=40 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2,49e-07, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06310427912053886;  // std dev = 0,465, 4.370,000 (wgt'ed) examples reached here.  /* #neg=2.969 #pos=1.401 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.8064324818128062;  // std dev = 0,000488, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06553081896960755;  // std dev = 3,019, 48,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06095988469053915;  // std dev = 3,146, 58,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return -0.01380663606450624;  // std dev = 8,172, 627,000 (wgt'ed) examples reached here.  /* #neg=549 #pos=78 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2,49e-07, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.052713393242087805;  // std dev = 0,466, 4.344,000 (wgt'ed) examples reached here.  /* #neg=2.943 #pos=1.401 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.30864794330962514;  // std dev = 1,313, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.03970991903163418;  // std dev = 2,926, 51,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.01354821048211013;  // std dev = 7,548, 407,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=71 */
%   | | | else return -0.028499639963173794;  // std dev = 4,395, 228,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.02771940703846207;  // std dev = 5,105, 132,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=43 */
%   | | | else return 0.4847632335736379;  // std dev = 1,171, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.04412311257055349;  // std dev = 0,467, 4.174,000 (wgt'ed) examples reached here.  /* #neg=2.822 #pos=1.352 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.34910582566036447;  // std dev = 1,134, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.03492128631932108;  // std dev = 2,910, 52,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -9.645093912162154E-4;  // std dev = 7,612, 439,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=71 */
%   | | | else return -0.042975303091885096;  // std dev = 4,429, 288,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.02809438602656427;  // std dev = 29,571, 4.071,000 (wgt'ed) examples reached here.  /* #neg=2.780 #pos=1.291 */
%   | | | else return 0.020999803387640625;  // std dev = 7,394, 455,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=73 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.17041798203989372;  // std dev = 4,548, 258,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=23 */
%   | | | else return 0.15087261358453358;  // std dev = 5,635, 150,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1387576524741097;  // std dev = 3,118, 45,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return -0.00935382026871121;  // std dev = 1,244, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.07754571217817216;  // std dev = 5,403, 165,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=43 */
%   | | | else return 0.012384686979727442;  // std dev = 1,147, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */


Results
   AUC ROC   = 0.605331
   AUC PR    = 0.174286
   CLL	      = -0.340521
   Precision = 0.827338 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.259594


Total learning time: 798.811 seconds
Total inference time: 19.451 seconds
AUC ROC: 0.605331


Results scoring model
   AUC ROC   = 0.671476
   AUC PR    = 0.207136
   CLL	      = -0.32104
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170154
   F1        = 0.290824


Total scoring time: 128.083 seconds
Refined model CLL: -0.32104


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.605331
   AUC PR    = 0.174286
   CLL	      = -0.340521
   Precision = 0.827338 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.259594


Total learning time: 950.321 seconds
Total inference time: 19.451 seconds
AUC ROC: 0.605331
Total revision time: 950.321
Best scored revision CLL: -0.32104


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 10:52:52
{'AUC PR': 0.174286, 'AUC ROC': 0.605331, 'parameter_0.8': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Learning time': 13.923, 'F1': 0.266821, 'Inference time': 4.988, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'CLL': -0.323339}, 'Learning time': 950.321, 'F1': 0.259594, 'Inference time': 19.451, 'Precision': [0.827338, 0.5], 'Recall': 0.153949, 'CLL': -0.340521}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.35814893509951123;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.026373234164932945;  // std dev = 3,869, 107,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=18 */
%   | else return 0.21911384738020892;  // std dev = 0,480, 4.560,000 (wgt'ed) examples reached here.  /* #neg=2.914 #pos=1.646 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then return -0.020128218458539838;  // std dev = 0,327, 534,000 (wgt'ed) examples reached here.  /* #neg=469 #pos=65 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.18314893509951236;  // std dev = 2,962, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.031225858176434806;  // std dev = 4,725, 156,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.185590309865303;  // std dev = 0,478, 4.794,000 (wgt'ed) examples reached here.  /* #neg=3.085 #pos=1.709 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.5207858740936228;  // std dev = 1,149, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.17408505380241274;  // std dev = 2,750, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return -0.14029329321503026;  // std dev = 0,030, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.05191848847491545;  // std dev = 5,651, 400,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=35 */
%   | | | else return 0.08724817819175189;  // std dev = 3,626, 75,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.056944814609465884;  // std dev = 5,619, 192,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=40 */
%   | | | else return -0.14152262503025667;  // std dev = 0,044, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16598350406825443;  // std dev = 0,481, 4.686,000 (wgt'ed) examples reached here.  /* #neg=2.977 #pos=1.709 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.774480525318801;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21720000460975944;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return 0.12026790977778813;  // std dev = 2,811, 39,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.12342143757404088;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.07474546115119828;  // std dev = 6,611, 249,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=57 */
%   | | | else return -0.0541466419577683;  // std dev = 3,586, 171,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.05140597345813615;  // std dev = 4,391, 256,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=21 */
%   | | | else return -0.12281360972485807;  // std dev = 0,059, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1412882927109847;  // std dev = 0,481, 4.647,000 (wgt'ed) examples reached here.  /* #neg=2.938 #pos=1.709 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return -0.13307271287905312;  // std dev = 0,055, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3349949828785552;  // std dev = 1,180, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05757887867166915;  // std dev = 3,057, 56,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07725769587965503;  // std dev = 2,808, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.012053310749497883;  // std dev = 0,955, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -6.464529397652663E-4;  // std dev = 6,924, 395,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=57 */
%   | | | else return -0.04575746571111049;  // std dev = 4,391, 259,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=21 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11002555031563985;  // std dev = 0,480, 4.719,000 (wgt'ed) examples reached here.  /* #neg=3.010 #pos=1.709 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7561397054909739;  // std dev = 1,966, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return -0.16202042169784886;  // std dev = 1,057, 199,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.11088852096919671;  // std dev = 1,383, 92,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=2 */
%   | | | else return 0.008180443949474127;  // std dev = 3,224, 88,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=12 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.15217988021528722;  // std dev = 2,677, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.02649928013170136;  // std dev = 0,984, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.0458454239188889;  // std dev = 4,408, 269,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=21 */
%   | | | else return -0.12157364437470446;  // std dev = 0,068, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08807835258206563;  // std dev = 0,480, 4.726,000 (wgt'ed) examples reached here.  /* #neg=3.017 #pos=1.709 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.28299696208840536;  // std dev = 0,833, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.11179099492964042;  // std dev = 2,700, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.10785587891247123;  // std dev = 0,016, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06401351482972586;  // std dev = 5,549, 228,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=57 */
%   | | | else return -0.049838141745977754;  // std dev = 3,583, 190,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.13104929609176752;  // std dev = 0,034, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.038233926249950964;  // std dev = 4,396, 268,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=21 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.5623943311732278;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.051337494554633906;  // std dev = 5,280, 134,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | | else return 0.5553956244775713;  // std dev = 0,270, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.08034740059232917;  // std dev = 0,483, 4.431,000 (wgt'ed) examples reached here.  /* #neg=2.785 #pos=1.646 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return 0.046484631658273386;  // std dev = 0,355, 234,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=57 */
%   | | else return -0.038348706397216374;  // std dev = 0,275, 190,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=16 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.008987255450770152;  // std dev = 5,166, 272,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=33 */
%   | | | else return -0.09638405126552362;  // std dev = 0,993, 50,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
%   | | else return -0.11191964393937592;  // std dev = 0,162, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.39747608286438885;  // std dev = 0,235, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.442018450842966;  // std dev = 2,449, 32,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | | | else return -0.13063510988508134;  // std dev = 3,954, 107,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=19 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.23058745294188987;  // std dev = 3,437, 48,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=27 */
%   | | | else return -0.04595491854151982;  // std dev = 3,657, 81,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | | else return 0.06265428899326521;  // std dev = 0,483, 4.325,000 (wgt'ed) examples reached here.  /* #neg=2.722 #pos=1.603 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then return 0.0232867395693988;  // std dev = 0,347, 263,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=59 */
%   | | else return -0.039355766634912685;  // std dev = 0,264, 184,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=14 */
%   | else return -0.01824884528696314;  // std dev = 0,290, 330,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.35719617753244637;  // std dev = 0,212, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2765821628596671;  // std dev = 2,746, 35,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return -0.13437723052914874;  // std dev = 4,026, 130,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=19 */
%   | | else return 0.04599908706738068;  // std dev = 0,481, 4.489,000 (wgt'ed) examples reached here.  /* #neg=2.841 #pos=1.648 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.22190321939958516;  // std dev = 0,806, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(I, K), haswordtitle(L, K) )
%   | | | then return 0.06169812279432787;  // std dev = 2,773, 38,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.09630333218546196;  // std dev = 0,012, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return -0.004812975501524041;  // std dev = 0,314, 451,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=71 */
%   | | else return -0.03872942352634407;  // std dev = 0,256, 297,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.024377249064303632;  // std dev = 0,476, 4.346,000 (wgt'ed) examples reached here.  /* #neg=2.799 #pos=1.547 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7546394767847462;  // std dev = 1,612, 73,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=71 */
%   | | | else return -0.11089704184427948;  // std dev = 1,289, 317,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=2 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.20031963818795775;  // std dev = 0,284, 260,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=23 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3383915760119988;  // std dev = 4,702, 100,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=67 */
%   | | | else return 0.024791732581005716;  // std dev = 3,213, 86,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=18 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.538207831036459;  // std dev = 0,319, 50,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return 0.12002059241344522;  // std dev = 0,383, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else return -0.013620805147693257;  // std dev = 0,319, 158,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=27 */


Results
   AUC ROC   = 0.56826
   AUC PR    = 0.033178
   CLL	      = -0.392851
   Precision = 0.469388 at threshold = 0.5
   Recall    = 0.03079
   F1        = 0.057789


Total learning time: 1526.354 seconds
Total inference time: 23.869 seconds
AUC ROC: 0.56826


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 11:18:43
{'AUC PR': 0.033178, 'AUC ROC': 0.56826, 'Learning time': 1526.354, 'F1': 0.057789, 'Inference time': 23.869, 'Precision': [0.469388, 0.5], 'Recall': 0.03079, 'CLL': -0.392851}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordauthor(D, F), haswordtitle(G, F) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.7152917922423689;  // std dev = 1,852, 28,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return 0.012620479814959503;  // std dev = 4,008, 123,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=19 */
%   | | else return 0.2288192005066147;  // std dev = 0,483, 4.446,000 (wgt'ed) examples reached here.  /* #neg=2.798 #pos=1.648 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, A) )
%   | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(L, N), haswordtitle(P, N) )
%   | | | then return 0.2129876447769317;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, Q), haswordtitle(R, Q) )
%   | | then if ( title(S, R), venue(S, A) )
%   | | | then return 0.07653973969721378;  // std dev = 6,675, 261,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=57 */
%   | | | else return -0.07114399419341694;  // std dev = 3,607, 198,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=14 */
%   | | else if ( haswordvenue(A, T), haswordtitle(U, T) )
%   | | | then return -0.059819814900487746;  // std dev = 4,391, 256,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=21 */
%   | | | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.534472
   AUC PR    = 0.013713
   CLL	      = -0.203207
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 44.437 seconds
Total inference time: 5.23 seconds
AUC ROC: 0.534472


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 11:19:33
{'AUC PR': 0.013713, 'AUC ROC': 0.534472, 'Learning time': 44.437, 'F1': nan, 'Inference time': 5.23, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.203207}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1,41e-06, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1584349217534633;  // std dev = 36,366, 6.294,000 (wgt'ed) examples reached here.  /* #neg=4.404 #pos=1.890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1351982103210502;  // std dev = 36,439, 6.354,000 (wgt'ed) examples reached here.  /* #neg=4.464 #pos=1.890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11374239626930684;  // std dev = 36,497, 6.402,000 (wgt'ed) examples reached here.  /* #neg=4.512 #pos=1.890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09508277882630035;  // std dev = 36,527, 6.427,000 (wgt'ed) examples reached here.  /* #neg=4.537 #pos=1.890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.08004294299554361;  // std dev = 36,513, 6.415,000 (wgt'ed) examples reached here.  /* #neg=4.525 #pos=1.890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,34e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06949541677185177;  // std dev = 36,428, 6.345,000 (wgt'ed) examples reached here.  /* #neg=4.455 #pos=1.890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2,53e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.0615944203731467;  // std dev = 36,309, 6.249,000 (wgt'ed) examples reached here.  /* #neg=4.359 #pos=1.890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2,63e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.03959678536657619;  // std dev = 36,583, 6.475,000 (wgt'ed) examples reached here.  /* #neg=4.585 #pos=1.890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.0318739543191455;  // std dev = 36,588, 6.479,000 (wgt'ed) examples reached here.  /* #neg=4.589 #pos=1.890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.029852696020768184;  // std dev = 36,480, 6.388,000 (wgt'ed) examples reached here.  /* #neg=4.498 #pos=1.890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.326057
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 19.726 seconds
Total inference time: 4.869 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.326998
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 11.234 seconds
Parameter learned model CLL: -0.326998


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.366, 4404, 1890], 'true': [1.41e-06, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.439, 4464, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.497, 4512, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.527, 4537, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.513, 4525, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.428, 4455, 1890], 'true': [4.34e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.309, 4359, 1890], 'true': [2.53e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.583, 4585, 1890], 'true': [2.63e-07, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.588, 4589, 1890], 'true': [0.0, 0, 380]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [36.48, 4498, 1890], 'true': [0.0, 0, 380]}]]
[{'': [5.235578052969159e-15, 0.21011431287315446]}, {'': [-5.310372025154433e-15, 0.2089736696386045]}, {'': [-1.009718624501195e-15, 0.20806525139897003]}, {'': [-1.495879443705474e-15, 0.2075936111387974]}, {'': [-1.402386978473882e-15, 0.20781986879198855]}, {'': [4.9551006572743825e-16, 0.2091444092350076]}, {'': [1.6828643741686584e-16, 0.21097336207488032]}, {'': [1.8231030720160465e-16, 0.20669101533973763]}, {'': [-2.5710427938687837e-16, 0.20661597737691548]}, {'': [-2.945012654795152e-16, 0.20832982082489274]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1,41e-06, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17765176821959489;  // std dev = 0,466, 5.471,000 (wgt'ed) examples reached here.  /* #neg=3.723 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.020483543532965925;  // std dev = 7,898, 585,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=71 */
%   | | | else return 0.08599703636533516;  // std dev = 3,728, 79,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.09060507545038969;  // std dev = 6,378, 228,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=53 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14759637974799686;  // std dev = 0,464, 5.594,000 (wgt'ed) examples reached here.  /* #neg=3.846 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.02336278979308229;  // std dev = 7,922, 612,000 (wgt'ed) examples reached here.  /* #neg=541 #pos=71 */
%   | | | else return 0.08419687172377478;  // std dev = 3,706, 76,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0622049411708089;  // std dev = 6,448, 246,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=53 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12924509222524846;  // std dev = 0,465, 5.541,000 (wgt'ed) examples reached here.  /* #neg=3.793 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10397907534495203;  // std dev = 3,531, 66,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return -0.02567524157901941;  // std dev = 1,308, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.07839529874753429;  // std dev = 3,654, 78,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | | else return -0.01585626354946782;  // std dev = 9,561, 826,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11572488074388726;  // std dev = 0,467, 5.423,000 (wgt'ed) examples reached here.  /* #neg=3.675 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.0025736001566133834;  // std dev = 7,825, 530,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=71 */
%   | | | else return -0.053035679638736656;  // std dev = 3,994, 188,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04927576650072781;  // std dev = 6,454, 249,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=53 */
%   | | | else return -0.11332566761707583;  // std dev = 0,019, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09724449639010335;  // std dev = 0,468, 5.404,000 (wgt'ed) examples reached here.  /* #neg=3.656 #pos=1.748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.16649971593889182;  // std dev = 3,405, 54,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return -0.06381509202079756;  // std dev = 1,361, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.01942764086849579;  // std dev = 7,947, 614,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=72 */
%   | | | else return 0.04137735759660248;  // std dev = 6,324, 246,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4,34e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3156288939441301;  // std dev = 3,813, 59,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   | | | else return -0.01869313995417526;  // std dev = 4,574, 120,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=27 */
%   | | else return 0.07035337167374736;  // std dev = 0,464, 5.375,000 (wgt'ed) examples reached here.  /* #neg=3.687 #pos=1.688 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.014864041859395391;  // std dev = 7,857, 597,000 (wgt'ed) examples reached here.  /* #neg=526 #pos=71 */
%   | | | else return 0.05175611220508625;  // std dev = 3,784, 88,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02205267538071809;  // std dev = 6,508, 267,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=53 */
%   | | | else return -0.10689335612481739;  // std dev = 0,017, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2,53e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06031083497627643;  // std dev = 0,465, 5.508,000 (wgt'ed) examples reached here.  /* #neg=3.760 #pos=1.748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.40846222758102896;  // std dev = 1,279, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06672304491429494;  // std dev = 3,386, 66,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.009122022927014294;  // std dev = 8,451, 521,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=87 */
%   | | | else return -0.022554482919851154;  // std dev = 5,664, 337,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2,63e-07, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.06682083463498356;  // std dev = 5,762, 155,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=53 */
%   | | | else return 0.7388491119404039;  // std dev = 0,063, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.04483183234686076;  // std dev = 0,464, 5.386,000 (wgt'ed) examples reached here.  /* #neg=3.698 #pos=1.688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12467795526006924;  // std dev = 3,413, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return -0.046674171816052726;  // std dev = 1,284, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.019181125857198004;  // std dev = 7,955, 633,000 (wgt'ed) examples reached here.  /* #neg=561 #pos=72 */
%   | | | else return 0.02499903184469041;  // std dev = 6,349, 254,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.044482562616259526;  // std dev = 0,467, 5.421,000 (wgt'ed) examples reached here.  /* #neg=3.673 #pos=1.748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.014296516557368246;  // std dev = 7,827, 605,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=71 */
%   | | | else return 0.08854232322292732;  // std dev = 3,681, 73,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.015442357867721636;  // std dev = 6,488, 261,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=53 */
%   | | | else return -0.09852142490977742;  // std dev = 0,041, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.02899867199708606;  // std dev = 0,464, 5.531,000 (wgt'ed) examples reached here.  /* #neg=3.783 #pos=1.748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.16305502297417077;  // std dev = 3,282, 46,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return -0.05837996296713395;  // std dev = 1,307, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.001207173780514759;  // std dev = 8,453, 537,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=87 */
%   | | | else return -0.022320515033882295;  // std dev = 5,684, 358,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=36 */


Results
   AUC ROC   = 0.603668
   AUC PR    = 0.172576
   CLL	      = -0.336035
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 253.31 seconds
Total inference time: 9.372 seconds
AUC ROC: 0.603668


Results scoring model
   AUC ROC   = 0.637696
   AUC PR    = 0.196519
   CLL	      = -0.321902
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167841
   F1        = 0.287439


Total scoring time: 41.317 seconds
Refined model CLL: -0.321902


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.603668
   AUC PR    = 0.172576
   CLL	      = -0.336035
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 325.587 seconds
Total inference time: 9.372 seconds
AUC ROC: 0.603668
Total revision time: 325.587
Best scored revision CLL: -0.321902


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 11:25:14
{'AUC PR': 0.172576, 'AUC ROC': 0.603668, 'Learning time': 325.587, 'F1': 0.266821, 'Inference time': 9.372, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'parameter_1.0': {'AUC PR': 0.170861, 'AUC ROC': 0.576975, 'Learning time': 19.726, 'F1': 0.266821, 'Inference time': 4.869, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'CLL': -0.326057}, 'CLL': -0.336035}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22548882807378645;  // std dev = 0,482, 5.793,000 (wgt'ed) examples reached here.  /* #neg=3.665 #pos=2.128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(E, G), haswordtitle(H, G) )
%   | | | then return 0.23314893509951234;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.044553767603190554;  // std dev = 6,982, 555,000 (wgt'ed) examples reached here.  /* #neg=501 #pos=54 */
%   | | | else return 0.10139217834275562;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.07797652130640878;  // std dev = 6,308, 232,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=51 */
%   | | | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19131798459578914;  // std dev = 0,481, 5.864,000 (wgt'ed) examples reached here.  /* #neg=3.736 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.00485249391352553;  // std dev = 1,292, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.022169027011939024;  // std dev = 7,747, 590,000 (wgt'ed) examples reached here.  /* #neg=521 #pos=69 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.07566003679766624;  // std dev = 3,723, 78,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | | else return -0.15464717905550288;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07863059362683547;  // std dev = 6,248, 221,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=51 */
%   | | | else return -0.0716107103863835;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return -0.12859271334529143;  // std dev = 0,046, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7495033505328272;  // std dev = 0,218, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2843518353813121;  // std dev = 4,060, 66,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=32 */
%   | | | else return 0.0028931810413017718;  // std dev = 4,372, 118,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=24 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.5267760778055545;  // std dev = 2,954, 44,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=32 */
%   | | | else return -0.03266448163500501;  // std dev = 4,469, 143,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=24 */
%   | | else return 0.16365360582096508;  // std dev = 0,481, 5.484,000 (wgt'ed) examples reached here.  /* #neg=3.487 #pos=1.997 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( haswordauthor(L, M), haswordtitle(N, M) )
%   | | then return 0.1637516413665537;  // std dev = 0,473, 50,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | else return 0.05640057017463971;  // std dev = 0,365, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return -0.003900743917021045;  // std dev = 0,343, 889,000 (wgt'ed) examples reached here.  /* #neg=766 #pos=123 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6965131101871883;  // std dev = 0,092, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.2980884572950077;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordauthor(E, C) )
%   | | | then return 0.5356785912212294;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.027980269853221815;  // std dev = 4,472, 143,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=24 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.41670961357227626;  // std dev = 3,266, 48,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | | | else return 0.019222664490705085;  // std dev = 4,326, 109,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=24 */
%   | | else return 0.13199693638556173;  // std dev = 0,480, 5.547,000 (wgt'ed) examples reached here.  /* #neg=3.550 #pos=1.997 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then return 0.058116603759434074;  // std dev = 0,416, 79,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | else return -0.003377700877012188;  // std dev = 0,344, 882,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=123 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.12112327805616066;  // std dev = 4,902, 117,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=47 */
%   | | | else return 0.08378798407704126;  // std dev = 3,115, 51,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else return 0.6442171920626468;  // std dev = 0,139, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.11100422472964308;  // std dev = 0,479, 5.664,000 (wgt'ed) examples reached here.  /* #neg=3.611 #pos=2.053 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then return 0.41898907181580164;  // std dev = 1,133, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(H, J), haswordtitle(K, J) )
%   | | | then return 0.15273741705565214;  // std dev = 3,111, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -0.1368470345234866;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.021733891525941736;  // std dev = 0,317, 627,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=72 */
%   | | else return 0.048965089380674995;  // std dev = 0,402, 249,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08852423977573182;  // std dev = 0,477, 5.869,000 (wgt'ed) examples reached here.  /* #neg=3.741 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then return -0.016801936967101506;  // std dev = 0,324, 576,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=71 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.10346551102662997;  // std dev = 3,641, 68,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return -0.1321286595398529;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05130374081195848;  // std dev = 6,264, 231,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=51 */
%   | | | else return -0.06585799899340838;  // std dev = 1,365, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.13079397768189507;  // std dev = 0,151, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08325214668661722;  // std dev = 0,481, 5.670,000 (wgt'ed) examples reached here.  /* #neg=3.542 #pos=2.128 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.033283922934915666;  // std dev = 1,236, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.06232621096042882;  // std dev = 3,327, 64,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.49163852435676264;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.15996816064673933;  // std dev = 0,103, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0012102656185674135;  // std dev = 7,586, 508,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=69 */
%   | | | else return -0.042856091310574836;  // std dev = 3,935, 166,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0028065724683153785;  // std dev = 5,422, 204,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=36 */
%   | | | else return -0.10883635213844532;  // std dev = 0,084, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.05473151152906157;  // std dev = 0,478, 5.292,000 (wgt'ed) examples reached here.  /* #neg=3.367 #pos=1.925 */
%   | | else return 0.02122398389303351;  // std dev = 0,360, 571,000 (wgt'ed) examples reached here.  /* #neg=472 #pos=99 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.19423808432023967;  // std dev = 0,283, 328,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=29 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4499207751681896;  // std dev = 4,527, 112,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=85 */
%   | | | else return 0.021576493170750107;  // std dev = 3,966, 112,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=20 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.5551634387599808;  // std dev = 0,313, 66,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06237800548604066;  // std dev = 6,153, 210,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=51 */
%   | | | else return -0.08194976622944866;  // std dev = 1,379, 30,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else return -0.10047589285539055;  // std dev = 0,081, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03935411908270888;  // std dev = 0,477, 5.344,000 (wgt'ed) examples reached here.  /* #neg=3.419 #pos=1.925 */
%   | | else return 0.02609392005508261;  // std dev = 0,365, 551,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=99 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.1491559884173891;  // std dev = 0,279, 333,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=29 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.24163723101775553;  // std dev = 5,424, 130,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=85 */
%   | | | else return 0.03142818888517227;  // std dev = 3,930, 103,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=20 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.6568869211949125;  // std dev = 2,478, 78,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=73 */
%   | | | else return -0.17942217620478856;  // std dev = 1,130, 174,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=2 */
%   | | else return -0.056834605104340935;  // std dev = 0,314, 25,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | else return 0.27130367327866584;  // std dev = 0,329, 56,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.546538344124376;  // std dev = 0,522, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.4178377134567203;  // std dev = 0,138, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.2348136650200948;  // std dev = 1,117, 41,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   | | | else return 0.06447747628557852;  // std dev = 3,946, 92,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=37 */
%   | else return 0.033563225154475754;  // std dev = 0,474, 5.649,000 (wgt'ed) examples reached here.  /* #neg=3.596 #pos=2.053 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.6961259608170798;  // std dev = 0,236, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16224145307455856;  // std dev = 0,086, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.007703188901342155;  // std dev = 0,317, 84,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=15 */
%   | else return -0.015252881542685559;  // std dev = 0,326, 898,000 (wgt'ed) examples reached here.  /* #neg=775 #pos=123 */


Results
   AUC ROC   = 0.551905
   AUC PR    = 0.052577
   CLL	      = -0.391015
   Precision = 0.641509 at threshold = 0.5
   Recall    = 0.045515
   F1        = 0.085


Total learning time: 3363.988 seconds
Total inference time: 31.433 seconds
AUC ROC: 0.551905


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 12:21:51
{'AUC PR': 0.052577, 'AUC ROC': 0.551905, 'Learning time': 3363.988, 'F1': 0.085, 'Inference time': 31.433, 'Precision': [0.641509, 0.5], 'Recall': 0.045515, 'CLL': -0.391015}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.6581489350995123;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.439967116917693;  // std dev = 3,658, 55,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return 0.06504548682364975;  // std dev = 4,363, 116,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.6200536970042733;  // std dev = 2,760, 42,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   | | | else return 0.01708933245050533;  // std dev = 4,493, 151,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=24 */
%   | | else return 0.22510961132148438;  // std dev = 0,482, 5.442,000 (wgt'ed) examples reached here.  /* #neg=3.445 #pos=1.997 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then if ( haswordtitle(M, N), haswordauthor(P, N) )
%   | | then if ( author(Q, P), title(Q, M) )
%   | | | then return -0.024495692999660857;  // std dev = 7,916, 605,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=71 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( title(R, M), venue(R, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04205698107652387;  // std dev = 3,614, 87,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | else if ( haswordvenue(B, S), haswordtitle(T, S) )
%   | | then if ( title(U, T), venue(U, A) )
%   | | | then return 0.10814893509951246;  // std dev = 6,185, 204,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=51 */
%   | | | else return -0.06492798797741088;  // std dev = 1,359, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.537987
   AUC PR    = 0.015229
   CLL	      = -0.202039
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 277.42 seconds
Total inference time: 8.044 seconds
AUC ROC: 0.537987


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 12:26:37
{'AUC PR': 0.015229, 'AUC ROC': 0.537987, 'Learning time': 277.42, 'F1': nan, 'Inference time': 8.044, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.202039}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 214413

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 35540

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.16205631570732215;  // std dev = 17,099, 1.382,000 (wgt'ed) examples reached here.  /* #neg=962 #pos=420 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1,88e-07, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.13219876018280563;  // std dev = 17,208, 1.424,000 (wgt'ed) examples reached here.  /* #neg=1.004 #pos=420 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,23e-07, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.1158801734248407;  // std dev = 17,178, 1.412,000 (wgt'ed) examples reached here.  /* #neg=992 #pos=420 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.10403885858332718;  // std dev = 17,104, 1.384,000 (wgt'ed) examples reached here.  /* #neg=964 #pos=420 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.08322570741544738;  // std dev = 17,149, 1.401,000 (wgt'ed) examples reached here.  /* #neg=981 #pos=420 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.070062287716884;  // std dev = 17,133, 1.395,000 (wgt'ed) examples reached here.  /* #neg=975 #pos=420 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.055026727238074086;  // std dev = 17,162, 1.406,000 (wgt'ed) examples reached here.  /* #neg=986 #pos=420 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,11e-08, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.05992405173016319;  // std dev = 16,975, 1.338,000 (wgt'ed) examples reached here.  /* #neg=918 #pos=420 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,99e-08, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.03322210531256791;  // std dev = 17,162, 1.406,000 (wgt'ed) examples reached here.  /* #neg=986 #pos=420 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,16e-08, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.017628643555999843;  // std dev = 17,273, 1.450,000 (wgt'ed) examples reached here.  /* #neg=1.030 #pos=420 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.334409
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 3.978 seconds
Total inference time: 3.199 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.574037
   AUC PR    = 0.165628
   CLL	      = -0.331349
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.148073
   F1        = 0.257951


Total scoring time: 5.023 seconds
Parameter learned model CLL: -0.331349


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.099, 962, 420], 'true': [0.0, 0, 73]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.208, 1004, 420], 'true': [1.88e-07, 0, 73]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.178, 992, 420], 'true': [2.23e-07, 0, 73]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.104, 964, 420], 'true': [0.0, 0, 73]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.149, 981, 420], 'true': [0.0, 0, 73]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.133, 975, 420], 'true': [0.0, 0, 73]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.162, 986, 420], 'true': [0.0, 0, 73]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [16.975, 918, 420], 'true': [2.11e-08, 0, 73]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.162, 986, 420], 'true': [6.99e-08, 0, 73]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.273, 1030, 420], 'true': [5.16e-08, 0, 73]}]]
[{'': [-1.4600193200550003e-15, 0.21154768461989432]}, {'': [4.866731066850001e-16, 0.207951963135968]}, {'': [6.813423493590001e-16, 0.2089736696386399]}, {'': [-9.733462133700002e-17, 0.21137525476960775]}, {'': [-3.5283800234662507e-16, 0.2099143010422313]}, {'': [-1.2166827667125003e-17, 0.2104289513238552]}, {'': [-9.125120750343752e-17, 0.2094862699789015]}, {'': [6.083413833562501e-18, 0.2153672907156836]}, {'': [6.691755216918751e-17, 0.20948626997889097]}, {'': [3.650048300137501e-17, 0.20575505350771728]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17435446869634538;  // std dev = 0,465, 1.265,000 (wgt'ed) examples reached here.  /* #neg=865 #pos=400 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.06745126068090773;  // std dev = 2,668, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return -0.04569721874664157;  // std dev = 2,126, 52,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
%   | | else return -0.05965928407856989;  // std dev = 0,275, 73,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1,88e-07, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1615706166888613;  // std dev = 0,469, 1.227,000 (wgt'ed) examples reached here.  /* #neg=827 #pos=400 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.058067925806316305;  // std dev = 2,959, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return -0.06948778284003072;  // std dev = 1,659, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | | else return -0.049028484394762845;  // std dev = 0,280, 70,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,23e-07, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12711576122199894;  // std dev = 0,465, 1.270,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=400 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.032403032462874;  // std dev = 2,680, 80,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=8 */
%   | | | else return 0.1274131837074399;  // std dev = 2,242, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else return -0.04847306963192969;  // std dev = 0,292, 53,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3709367989720949;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.20801056944895763;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.11724026667144248;  // std dev = 0,468, 1.196,000 (wgt'ed) examples reached here.  /* #neg=807 #pos=389 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0171445683327351;  // std dev = 3,009, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | | else return -0.054018655663278056;  // std dev = 1,658, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | else return -0.047242347169755255;  // std dev = 0,271, 75,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09284864497546459;  // std dev = 0,466, 1.247,000 (wgt'ed) examples reached here.  /* #neg=847 #pos=400 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.04348034018954531;  // std dev = 2,667, 45,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return -0.01598340026438505;  // std dev = 2,092, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | else return -0.04187185693445097;  // std dev = 0,271, 75,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07474907223895594;  // std dev = 0,465, 1.252,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=400 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.034958678344560144;  // std dev = 2,701, 91,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=8 */
%   | | | else return 0.059750514561350755;  // std dev = 2,299, 31,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.048007107808759844;  // std dev = 2,132, 57,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
%   | | | else return -0.11442930898736996;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.053733025395427514;  // std dev = 0,463, 1.280,000 (wgt'ed) examples reached here.  /* #neg=880 #pos=400 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.04184656056983649;  // std dev = 2,716, 104,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=8 */
%   | | | else return 0.017955155963419275;  // std dev = 2,351, 36,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.1267608141985622;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.04534860231169207;  // std dev = 2,137, 58,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2,11e-08, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05983303659921398;  // std dev = 0,469, 1.214,000 (wgt'ed) examples reached here.  /* #neg=814 #pos=400 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06864431430424113;  // std dev = 2,897, 49,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return -0.0033812867685551764;  // std dev = 1,628, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03805040778103601;  // std dev = 2,353, 81,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=6 */
%   | | | else return -0.09920824724340267;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,99e-08, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03119181981164131;  // std dev = 0,463, 1.277,000 (wgt'ed) examples reached here.  /* #neg=877 #pos=400 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0292609302255419;  // std dev = 2,952, 57,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | | else return -0.052188195766742954;  // std dev = 1,668, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else return -0.02722126029967285;  // std dev = 0,270, 75,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5,16e-08, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.034382658128652065;  // std dev = 0,466, 1.242,000 (wgt'ed) examples reached here.  /* #neg=842 #pos=400 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04406398061150658;  // std dev = 2,915, 52,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return -0.03136595726122528;  // std dev = 1,658, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020722039673608403;  // std dev = 2,337, 72,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=6 */
%   | | | else return -0.08846826891617111;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.627637
   AUC PR    = 0.174008
   CLL	      = -0.310351
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 70.373 seconds
Total inference time: 9.713 seconds
AUC ROC: 0.627637


Results scoring model
   AUC ROC   = 0.62774
   AUC PR    = 0.172565
   CLL	      = -0.326558
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.148073
   F1        = 0.257951


Total scoring time: 19.529 seconds
Refined model CLL: -0.326558


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.627637
   AUC PR    = 0.174008
   CLL	      = -0.310351
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 98.903 seconds
Total inference time: 9.713 seconds
AUC ROC: 0.627637
Total revision time: 98.903
Best scored revision CLL: -0.326558


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 12:28:30
{'AUC PR': 0.174008, 'AUC ROC': 0.627637, 'Learning time': 98.903, 'F1': 0.259494, 'Inference time': 9.713, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'parameter_0.2': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Learning time': 3.978, 'F1': 0.259494, 'Inference time': 3.199, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.334409}, 'CLL': -0.310351}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20340440955206215;  // std dev = 0,475, 1.370,000 (wgt'ed) examples reached here.  /* #neg=897 #pos=473 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09344305274657119;  // std dev = 2,473, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.0010060779566551492;  // std dev = 2,070, 35,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06290369647943506;  // std dev = 0,270, 76,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.498208700640008;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.16487536730667482;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return -0.1684579660266585;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.20122928337189203;  // std dev = 0,483, 1.247,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=461 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.6979140559622071;  // std dev = 1,300, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.14577806406809718;  // std dev = 0,039, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.044467437835755616;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.08898837802582288;  // std dev = 1,365, 34,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | else return -0.06293638991755462;  // std dev = 0,258, 84,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.171901176902621;  // std dev = 0,482, 1.277,000 (wgt'ed) examples reached here.  /* #neg=804 #pos=473 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.007374320668534427;  // std dev = 1,222, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.10439483152072065;  // std dev = 2,061, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else return -0.03972417530810456;  // std dev = 0,274, 47,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.05578316355563718;  // std dev = 2,155, 70,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=5 */
%   | | | else return 0.20612159834912466;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12721173498420865;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.14313373527010542;  // std dev = 0,482, 1.278,000 (wgt'ed) examples reached here.  /* #neg=805 #pos=473 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.015029375193278467;  // std dev = 1,198, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.0575677595125362;  // std dev = 2,097, 30,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( title(I, E), venue(I, A) )
%   | | | then return -0.0162134253734816;  // std dev = 1,851, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return -0.1173006059857777;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.04402754371889969;  // std dev = 0,269, 76,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10984287622887448;  // std dev = 0,480, 1.303,000 (wgt'ed) examples reached here.  /* #neg=830 #pos=473 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return 0.0271157172794528;  // std dev = 0,330, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.04727686199202643;  // std dev = 0,885, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.09031530933435672;  // std dev = 1,360, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | else return -0.04741917664078819;  // std dev = 0,257, 84,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07816530333354799;  // std dev = 0,477, 1.342,000 (wgt'ed) examples reached here.  /* #neg=869 #pos=473 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return -0.09095980763408772;  // std dev = 1,385, 65,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=2 */
%   | | | else return 0.15437184373547866;  // std dev = 2,359, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.16954404781428392;  // std dev = 0,415, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.016947328692246272;  // std dev = 1,848, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return -0.10537020885939873;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10484643378037904;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7093693698893921;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2906306301106079;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.04319853370227085;  // std dev = 0,472, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else return 0.07921533144621137;  // std dev = 0,482, 1.256,000 (wgt'ed) examples reached here.  /* #neg=792 #pos=464 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.7067163901582998;  // std dev = 0,162, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.142038678203946;  // std dev = 0,220, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( haswordtitle(I, L), haswordvenue(A, L) )
%   | | | then return -0.03723621924252787;  // std dev = 1,613, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return -0.09500325166688793;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.039167249061436704;  // std dev = 0,253, 84,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06035427108748145;  // std dev = 0,481, 1.288,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=473 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.08246403599947151;  // std dev = 0,193, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return -0.009630615728670395;  // std dev = 1,979, 56,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | | else return -0.04370539507756885;  // std dev = 1,613, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.025018965429469367;  // std dev = 2,308, 71,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=6 */
%   | | | else return -0.09207885299665756;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.16792547742201022;  // std dev = 1,775, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.244048927702183;  // std dev = 1,493, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return -0.24555880941151007;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.04590448622710995;  // std dev = 0,481, 1.259,000 (wgt'ed) examples reached here.  /* #neg=798 #pos=461 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.5493410536694223;  // std dev = 0,193, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.11667688685717802;  // std dev = 0,164, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.1648475694929081;  // std dev = 0,803, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06132595294346848;  // std dev = 1,349, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return -0.02240647436465842;  // std dev = 0,268, 74,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.026046100354503436;  // std dev = 0,477, 1.326,000 (wgt'ed) examples reached here.  /* #neg=853 #pos=473 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7614350852817601;  // std dev = 0,913, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.10793831320066156;  // std dev = 0,186, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return 0.12934389542056648;  // std dev = 0,925, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03290460641191139;  // std dev = 0,987, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else return -0.042437451384101994;  // std dev = 0,187, 48,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */


Results
   AUC ROC   = 0.638741
   AUC PR    = 0.072395
   CLL	      = -0.347144
   Precision = 0.65 at threshold = 0.5
   Recall    = 0.023636
   F1        = 0.045614


Total learning time: 257.327 seconds
Total inference time: 19.638 seconds
AUC ROC: 0.638741


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 12:33:07
{'AUC PR': 0.072395, 'AUC ROC': 0.638741, 'Learning time': 257.327, 'F1': 0.045614, 'Inference time': 19.638, 'Precision': [0.65, 0.5], 'Recall': 0.023636, 'CLL': -0.347144}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.3025933795439568;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.21943420155718768;  // std dev = 0,480, 1.276,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=461 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.05851773156715447;  // std dev = 1,354, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, P), haswordtitle(Q, P) )
%   | | | then return -0.04185106490048771;  // std dev = 2,324, 60,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.606728
   AUC PR    = 0.020448
   CLL	      = -0.203859
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 27.772 seconds
Total inference time: 4.545 seconds
AUC ROC: 0.606728


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 12:33:40
{'AUC PR': 0.020448, 'AUC ROC': 0.606728, 'Learning time': 27.772, 'F1': nan, 'Inference time': 4.545, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.203859}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.1467183600644441;  // std dev = 24,197, 2.852,000 (wgt'ed) examples reached here.  /* #neg=2.029 #pos=823 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.13242524842476688;  // std dev = 24,120, 2.808,000 (wgt'ed) examples reached here.  /* #neg=1.985 #pos=823 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.12026411713936505;  // std dev = 24,009, 2.747,000 (wgt'ed) examples reached here.  /* #neg=1.924 #pos=823 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.098854433312291;  // std dev = 24,061, 2.775,000 (wgt'ed) examples reached here.  /* #neg=1.952 #pos=823 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.08195765144885107;  // std dev = 24,073, 2.782,000 (wgt'ed) examples reached here.  /* #neg=1.959 #pos=823 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.06252962983435574;  // std dev = 24,164, 2.833,000 (wgt'ed) examples reached here.  /* #neg=2.010 #pos=823 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.05708906781375866;  // std dev = 24,066, 2.778,000 (wgt'ed) examples reached here.  /* #neg=1.955 #pos=823 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.04527244195473596;  // std dev = 24,088, 2.790,000 (wgt'ed) examples reached here.  /* #neg=1.967 #pos=823 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.04109421856254878;  // std dev = 24,013, 2.749,000 (wgt'ed) examples reached here.  /* #neg=1.926 #pos=823 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.03566970370406437;  // std dev = 23,969, 2.726,000 (wgt'ed) examples reached here.  /* #neg=1.903 #pos=823 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.331439
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 6.16 seconds
Total inference time: 3.804 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.582657
   AUC PR    = 0.183069
   CLL	      = -0.32811
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165314
   F1        = 0.283725


Total scoring time: 7.032 seconds
Parameter learned model CLL: -0.32811


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.197, 2029, 823], 'true': [1.02e-06, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.12, 1985, 823], 'true': [0.0, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.009, 1924, 823], 'true': [5.53e-07, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.061, 1952, 823], 'true': [4.38e-07, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.073, 1959, 823], 'true': [3.63e-07, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.164, 2010, 823], 'true': [0.0, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.066, 1955, 823], 'true': [2.65e-07, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.088, 1967, 823], 'true': [0.0, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [24.013, 1926, 823], 'true': [0.0, 0, 163]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [23.969, 1903, 823], 'true': [9.42e-08, 0, 163]}]]
[{'': [6.3643705166242106e-15, 0.20529711194036782]}, {'': [-2.7898610483832155e-15, 0.20718873527810522]}, {'': [1.8744378918824727e-15, 0.20983966491429512]}, {'': [1.176972629786669e-15, 0.2086189108026558]}, {'': [8.064442092982732e-16, 0.20831474907241662]}, {'': [-2.3975368384543257e-16, 0.20611174662396417]}, {'': [4.3046684144975393e-16, 0.20848850450493775]}, {'': [-3.1603894688716113e-16, 0.20796765200858985]}, {'': [-2.424781575254943e-16, 0.209752254895809]}, {'': [5.4489473601234677e-17, 0.21075938397076438]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17564176590655356;  // std dev = 0,466, 2.441,000 (wgt'ed) examples reached here.  /* #neg=1.666 #pos=775 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.06723984419042099;  // std dev = 4,265, 110,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=23 */
%   | | | else return 0.0010060779566551904;  // std dev = 2,928, 70,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02280344585286861;  // std dev = 3,635, 126,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15172183748764573;  // std dev = 0,465, 2.450,000 (wgt'ed) examples reached here.  /* #neg=1.675 #pos=775 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.050178198428279065;  // std dev = 4,381, 120,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=24 */
%   | | | else return -0.013992241649145372;  // std dev = 2,802, 70,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.038426680666633704;  // std dev = 3,673, 149,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=15 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1310807254562905;  // std dev = 0,466, 2.440,000 (wgt'ed) examples reached here.  /* #neg=1.665 #pos=775 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.08137813832935722;  // std dev = 0,972, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.04178663647207734;  // std dev = 5,078, 165,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=32 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02344862400128771;  // std dev = 3,651, 135,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=15 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10499384153209246;  // std dev = 0,463, 2.482,000 (wgt'ed) examples reached here.  /* #neg=1.707 #pos=775 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03020680258223762;  // std dev = 4,403, 125,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=24 */
%   | | | else return -0.008818995974498221;  // std dev = 2,790, 67,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.009901166823819616;  // std dev = 3,629, 123,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=15 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08949420477622749;  // std dev = 0,464, 2.464,000 (wgt'ed) examples reached here.  /* #neg=1.689 #pos=775 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05042398188847226;  // std dev = 4,335, 111,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=24 */
%   | | | else return -0.016024143794454278;  // std dev = 2,804, 71,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=9 */
%   | | else return -0.04435689082893567;  // std dev = 0,280, 175,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25897489913403315;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return -0.16695102679189316;  // std dev = 1,361, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else return 0.0710609918492765;  // std dev = 0,463, 2.416,000 (wgt'ed) examples reached here.  /* #neg=1.662 #pos=754 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03325407808702548;  // std dev = 4,458, 124,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=25 */
%   | | | else return 0.11502166125424944;  // std dev = 2,430, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.023024979740486375;  // std dev = 3,669, 146,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=15 */
%   | | | else return -0.08902767010978549;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05920233922115092;  // std dev = 0,464, 2.471,000 (wgt'ed) examples reached here.  /* #neg=1.696 #pos=775 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.07634093305447853;  // std dev = 0,236, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.020364219072969647;  // std dev = 5,078, 167,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=32 */
%   | | | else return -0.02092516623127636;  // std dev = 3,667, 149,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05082408344975622;  // std dev = 0,465, 2.448,000 (wgt'ed) examples reached here.  /* #neg=1.673 #pos=775 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.036387700806625164;  // std dev = 3,774, 89,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
%   | | | else return -0.004291728134250828;  // std dev = 3,518, 86,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.013868566059932842;  // std dev = 3,660, 140,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=15 */
%   | | | else return -0.08050405055285416;  // std dev = 5,89e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.289534935109741;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return -0.09131765782164326;  // std dev = 2,390, 38,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08642212637574585;  // std dev = 3,492, 58,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return 0.03866443888034201;  // std dev = 22,434, 2.335,000 (wgt'ed) examples reached here.  /* #neg=1.601 #pos=734 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.0214088270688931;  // std dev = 4,365, 118,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=24 */
%   | | | else return -0.024411802450439602;  // std dev = 2,790, 68,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.020859782151876456;  // std dev = 3,677, 152,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=15 */
%   | | | else return -0.07474257022999692;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.02775723362559037;  // std dev = 0,462, 2.487,000 (wgt'ed) examples reached here.  /* #neg=1.712 #pos=775 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.008989241321079129;  // std dev = 4,491, 133,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=25 */
%   | | | else return 0.05949694087658237;  // std dev = 2,487, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else return -0.023606412049290232;  // std dev = 0,291, 161,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=15 */


Results
   AUC ROC   = 0.641336
   AUC PR    = 0.182716
   CLL	      = -0.310222
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 116.01400000000001 seconds
Total inference time: 8.118 seconds
AUC ROC: 0.641336


Results scoring model
   AUC ROC   = 0.633169
   AUC PR    = 0.190622
   CLL	      = -0.323831
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165314
   F1        = 0.283725


Total scoring time: 30.396 seconds
Refined model CLL: -0.323831


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.641336
   AUC PR    = 0.182716
   CLL	      = -0.310222
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 159.60200000000003 seconds
Total inference time: 8.118 seconds
AUC ROC: 0.641336
Total revision time: 159.60200000000003
Best scored revision CLL: -0.323831


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 12:36:33
{'AUC PR': 0.182716, 'AUC ROC': 0.641336, 'parameter_0.4': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Learning time': 6.16, 'F1': 0.259494, 'Inference time': 3.804, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.331439}, 'Learning time': 159.60200000000003, 'F1': 0.259494, 'Inference time': 8.118, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.310222}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.41697246451127695;  // std dev = 2,895, 34,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | else return -0.011416282291792127;  // std dev = 0,337, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else return 0.21175079412351963;  // std dev = 0,478, 2.582,000 (wgt'ed) examples reached here.  /* #neg=1.669 #pos=913 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.858148935099512;  // std dev = 1,03e-07, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.14185106490048763;  // std dev = 8,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( haswordtitle(H, K), haswordauthor(L, K) )
%   | | | then return -0.07733493586822972;  // std dev = 1,368, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | | else return 0.042359461415301836;  // std dev = 2,390, 38,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | else return -0.05464176257490626;  // std dev = 0,282, 172,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1859579934379145;  // std dev = 0,478, 2.636,000 (wgt'ed) examples reached here.  /* #neg=1.698 #pos=938 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return -0.06023090977224677;  // std dev = 0,257, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.026337874305985304;  // std dev = 3,784, 134,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=24 */
%   | | | else return 0.0655236243160138;  // std dev = 2,465, 37,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0296950186731425;  // std dev = 3,663, 142,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=15 */
%   | | | else return -0.13532882149004402;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.13532882149004402;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.25187402889298255;  // std dev = 2,782, 31,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.5338517011908421;  // std dev = 1,229, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.05731062327034645;  // std dev = 0,309, 28,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | else return 0.1510205000960893;  // std dev = 0,476, 2.620,000 (wgt'ed) examples reached here.  /* #neg=1.707 #pos=913 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6738043496745008;  // std dev = 0,979, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.12831138879699344;  // std dev = 0,010, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.05429109363125775;  // std dev = 1,360, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.02871287819074152;  // std dev = 2,390, 38,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | else return -0.038868144426975504;  // std dev = 0,290, 162,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1237165490473809;  // std dev = 0,475, 2.705,000 (wgt'ed) examples reached here.  /* #neg=1.767 #pos=938 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.05725982258721674;  // std dev = 1,167, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 2.867135072660851E-4;  // std dev = 3,049, 95,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return 0.015760552121269075;  // std dev = 2,300, 70,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | | else return 0.1988351446591051;  // std dev = 0,823, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.03600133356161234;  // std dev = 3,566, 153,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=14 */
%   | | | else return -0.025245308413611455;  // std dev = 0,946, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return -0.11620813592618359;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10821214288290304;  // std dev = 0,478, 2.651,000 (wgt'ed) examples reached here.  /* #neg=1.713 #pos=938 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.0023661317128440265;  // std dev = 1,134, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.028381517495239608;  // std dev = 3,006, 78,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return -0.013316753724746106;  // std dev = 3,529, 127,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=14 */
%   | | | else return -0.039542095956227576;  // std dev = 0,956, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.012969357191452332;  // std dev = 2,519, 96,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=15 */
%   | | | else return -0.18776951962622293;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10479498284000185;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10028611381431665;  // std dev = 0,481, 2.564,000 (wgt'ed) examples reached here.  /* #neg=1.626 #pos=938 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.006616964922817595;  // std dev = 1,128, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.017835792272552352;  // std dev = 3,025, 79,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return -0.004047934544815;  // std dev = 2,338, 82,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=14 */
%   | | | else return 0.09754418882804759;  // std dev = 0,867, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.016057542406613782;  // std dev = 3,538, 132,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=14 */
%   | | | else return 0.07953057380225229;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.09536310770259727;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06614724395092889;  // std dev = 0,477, 2.667,000 (wgt'ed) examples reached here.  /* #neg=1.729 #pos=938 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.027106178159943206;  // std dev = 0,610, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -1.7908744517364496E-4;  // std dev = 3,175, 140,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=24 */
%   | | else return 0.013542943072538331;  // std dev = 0,377, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 7.996118219420302E-4;  // std dev = 3,509, 115,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=14 */
%   | | | else return -0.03903742566325635;  // std dev = 0,950, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return -0.08744766357474593;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7011769446661631;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.2988230553338371;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.5846083733660321;  // std dev = 0,229, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09882305533383702;  // std dev = 2,366, 35,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | else return 0.045071496996986135;  // std dev = 0,475, 2.654,000 (wgt'ed) examples reached here.  /* #neg=1.740 #pos=914 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then return 0.020274899153992075;  // std dev = 0,611, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return -0.06968146378786175;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.010350848990629715;  // std dev = 4,011, 181,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=31 */
%   | | | else return -0.01840923426734591;  // std dev = 3,668, 148,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05680122127944079;  // std dev = 0,479, 2.563,000 (wgt'ed) examples reached here.  /* #neg=1.625 #pos=938 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.03510206202642072;  // std dev = 0,355, 81,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.023633988586112188;  // std dev = 2,468, 91,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | | else return 0.16226309212518733;  // std dev = 0,826, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.014015751803546363;  // std dev = 3,541, 134,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=14 */
%   | | | else return -0.04094087734981685;  // std dev = 0,959, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return -0.07936093261090399;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6453046247759074;  // std dev = 0,187, 888,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=857 */
%   | | else return -0.2765974855862516;  // std dev = 0,165, 1.781,000 (wgt'ed) examples reached here.  /* #neg=1.735 #pos=46 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.22550507925850843;  // std dev = 3,155, 116,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=11 */
%   | | | else return -0.15951655764733214;  // std dev = 0,182, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3297816321859096;  // std dev = 2,904, 39,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return 0.04020377986025585;  // std dev = 2,394, 53,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6716961303017028;  // std dev = 0,135, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return -0.0024155168669746964;  // std dev = 0,278, 85,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | else return -0.07375275953455254;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.956192
   AUC PR    = 0.637462
   CLL	      = -0.272036
   Precision = 0.8125 at threshold = 0.5
   Recall    = 0.070909
   F1        = 0.130435


Total learning time: 702.356 seconds
Total inference time: 36.077 seconds
AUC ROC: 0.956192


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 12:48:52
{'AUC PR': 0.637462, 'AUC ROC': 0.956192, 'Learning time': 702.356, 'F1': 0.130435, 'Inference time': 36.077, 'Precision': [0.8125, 0.5], 'Recall': 0.070909, 'CLL': -0.272036}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.32243464938522665;  // std dev = 2,639, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.06403128804068885;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | else return 0.2189858873300639;  // std dev = 0,480, 2.533,000 (wgt'ed) examples reached here.  /* #neg=1.619 #pos=914 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.8181489350995119;  // std dev = 0,980, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return -0.06492798797741087;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.003603480554057789;  // std dev = 2,615, 55,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=8 */
%   | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, P), haswordtitle(Q, P) )
%   | | | then return -0.02734724810659453;  // std dev = 3,645, 131,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=15 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.635921
   AUC PR    = 0.084238
   CLL	      = -0.200437
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 41.975 seconds
Total inference time: 5.097 seconds
AUC ROC: 0.635921


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 12:49:39
{'AUC PR': 0.084238, 'AUC ROC': 0.635921, 'Learning time': 41.975, 'F1': nan, 'Inference time': 5.097, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.200437}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.15075649393002774;  // std dev = 29,509, 4.207,000 (wgt'ed) examples reached here.  /* #neg=2.976 #pos=1.231 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.13837505592727506;  // std dev = 29,363, 4.109,000 (wgt'ed) examples reached here.  /* #neg=2.878 #pos=1.231 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,62e-07, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.11610256237883372;  // std dev = 29,419, 4.146,000 (wgt'ed) examples reached here.  /* #neg=2.915 #pos=1.231 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.09984860536343622;  // std dev = 29,386, 4.124,000 (wgt'ed) examples reached here.  /* #neg=2.893 #pos=1.231 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 2,31e-07, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.07696124947371527;  // std dev = 29,522, 4.216,000 (wgt'ed) examples reached here.  /* #neg=2.985 #pos=1.231 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,10e-07, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.07049005694418595;  // std dev = 29,380, 4.120,000 (wgt'ed) examples reached here.  /* #neg=2.889 #pos=1.231 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,86e-07, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.05639075795695477;  // std dev = 29,410, 4.140,000 (wgt'ed) examples reached here.  /* #neg=2.909 #pos=1.231 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.04614275544989138;  // std dev = 29,406, 4.137,000 (wgt'ed) examples reached here.  /* #neg=2.906 #pos=1.231 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.03779140747730321;  // std dev = 29,397, 4.131,000 (wgt'ed) examples reached here.  /* #neg=2.900 #pos=1.231 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801106;  // std dev = 2,98e-08, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.022790465196587353;  // std dev = 29,557, 4.240,000 (wgt'ed) examples reached here.  /* #neg=3.009 #pos=1.231 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.329826
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 9.765 seconds
Total inference time: 3.527 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.584122
   AUC PR    = 0.186036
   CLL	      = -0.326442
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168243
   F1        = 0.288028


Total scoring time: 8.859 seconds
Parameter learned model CLL: -0.326442


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.509, 2976, 1231], 'true': [1.08e-06, 0, 249]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.363, 2878, 1231], 'true': [0.0, 0, 249]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.419, 2915, 1231], 'true': [4.62e-07, 0, 249]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.386, 2893, 1231], 'true': [0.0, 0, 249]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.522, 2985, 1231], 'true': [2.31e-07, 0, 249]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.38, 2889, 1231], 'true': [3.1e-07, 0, 249]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.41, 2909, 1231], 'true': [2.86e-07, 0, 249]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.406, 2906, 1231], 'true': [0.0, 0, 249]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.397, 2900, 1231], 'true': [0.0, 0, 249]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [29.557, 3009, 1231], 'true': [2.98e-08, 0, 249]}]]
[{'': [4.679879866050459e-15, 0.2069883753457902]}, {'': [-4.337449631949206e-15, 0.20983433844391133]}, {'': [8.5607558525313275e-16, 0.20875554326882043]}, {'': [-2.853585284177109e-16, 0.20939638189925155]}, {'': [2.1401889631328319e-16, 0.20672889534404618]}, {'': [3.8523401336390975e-16, 0.20951309030064869]}, {'': [3.2816230768036754e-16, 0.20893013839293278]}, {'': [-2.853585284177109e-17, 0.20901748659304026]}, {'': [-1.819160618662907e-16, 0.20919228362392286]}, {'': [3.566981605221386e-18, 0.20603857022069]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1,08e-06, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2823913593419354;  // std dev = 4,015, 66,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
%   | | | else return 0.011995088945666036;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.18167834686421683;  // std dev = 4,725, 102,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return 0.16829877960049675;  // std dev = 27,509, 3.537,000 (wgt'ed) examples reached here.  /* #neg=2.440 #pos=1.097 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.0427643197148959;  // std dev = 5,418, 195,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.013138193613358953;  // std dev = 3,366, 101,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.04275196580138872;  // std dev = 4,452, 222,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=22 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15420292898672816;  // std dev = 0,466, 3.647,000 (wgt'ed) examples reached here.  /* #neg=2.487 #pos=1.160 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.08180108740584265;  // std dev = 5,194, 153,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=35 */
%   | | | else return -0.010060920500703792;  // std dev = 3,489, 107,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03246074455909771;  // std dev = 4,439, 211,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=22 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4,62e-07, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.29464717411475055;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=28 */
%   | | | else return -0.06323441417367713;  // std dev = 2,093, 40,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | else return 0.12162840316174263;  // std dev = 0,461, 3.663,000 (wgt'ed) examples reached here.  /* #neg=2.536 #pos=1.127 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03641947359692544;  // std dev = 5,387, 186,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=36 */
%   | | | else return 0.0033070832192608783;  // std dev = 3,340, 91,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.014020800932413634;  // std dev = 4,403, 185,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=22 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10354991119429363;  // std dev = 0,462, 3.755,000 (wgt'ed) examples reached here.  /* #neg=2.595 #pos=1.160 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.040124845715575806;  // std dev = 5,358, 178,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=36 */
%   | | | else return 0.0026591333407817615;  // std dev = 3,341, 91,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=13 */
%   | | else return -0.024333445234765938;  // std dev = 0,308, 207,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 2,31e-07, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09714773551587906;  // std dev = 0,466, 3.627,000 (wgt'ed) examples reached here.  /* #neg=2.467 #pos=1.160 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.033167808379683666;  // std dev = 4,671, 147,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=27 */
%   | | | else return -0.012642769770176096;  // std dev = 4,313, 143,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.012178536806471045;  // std dev = 4,409, 189,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=22 */
%   | | | else return -0.09939673860968115;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3,10e-07, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.24339356178993957;  // std dev = 3,672, 54,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return -0.0986020131398422;  // std dev = 2,108, 45,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | else return 0.08136886675838378;  // std dev = 0,467, 3.509,000 (wgt'ed) examples reached here.  /* #neg=2.382 #pos=1.127 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.060943167403689415;  // std dev = 4,583, 124,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=27 */
%   | | | else return 0.017225379942053996;  // std dev = 4,241, 121,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=22 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02195908002444263;  // std dev = 4,437, 209,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=22 */
%   | | | else return -0.0908465340517861;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2,86e-07, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25808967823513834;  // std dev = 2,742, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.03955319261379055;  // std dev = 3,086, 46,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08879445729424253;  // std dev = 4,391, 91,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
%   | | | else return 0.0544206946747997;  // std dev = 27,530, 3.549,000 (wgt'ed) examples reached here.  /* #neg=2.452 #pos=1.097 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return -0.07455661710695226;  // std dev = 0,272, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -3.903463628264999E-4;  // std dev = 6,250, 283,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=47 */
%   | | | else return -0.01732984863596889;  // std dev = 4,429, 207,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04647239916333836;  // std dev = 0,463, 3.708,000 (wgt'ed) examples reached here.  /* #neg=2.548 #pos=1.160 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03307589416032406;  // std dev = 5,341, 175,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=36 */
%   | | | else return -0.020346575867981078;  // std dev = 3,366, 101,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.12292323964216889;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.017194080333770557;  // std dev = 4,434, 210,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6864405329328656;  // std dev = 6,601, 1.106,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1.060 */
%   | | | else return -0.23569738089496675;  // std dev = 8,225, 2.606,000 (wgt'ed) examples reached here.  /* #neg=2.540 #pos=66 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13347542783611305;  // std dev = 4,043, 152,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=19 */
%   | | | else return 0.12950573017648234;  // std dev = 5,136, 123,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.6765033794763596;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.018510367370107274;  // std dev = 4,216, 117,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=22 */
%   | | | else return -0.08100924872286265;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801106;  // std dev = 2,98e-08, 249,000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.026999264058221135;  // std dev = 0,385, 3.629,000 (wgt'ed) examples reached here.  /* #neg=2.469 #pos=1.160 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.13405031608261161;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.02830804029442125;  // std dev = 1,181, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.004083803808084955;  // std dev = 6,002, 266,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=47 */
%   | | | else return -0.016128893669098292;  // std dev = 3,987, 225,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=22 */


Results
   AUC ROC   = 0.919572
   AUC PR    = 0.73113
   CLL	      = -0.250647
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.201818
   F1        = 0.335855


Total learning time: 690.116 seconds
Total inference time: 24.547 seconds
AUC ROC: 0.919572


Results scoring model
   AUC ROC   = 0.938503
   AUC PR    = 0.541839
   CLL	      = -0.263383
   Precision = 0.963696 at threshold = 0.5
   Recall    = 0.197297
   F1        = 0.327538


Total scoring time: 298.155 seconds
Refined model CLL: -0.263383


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.919572
   AUC PR    = 0.73113
   CLL	      = -0.250647
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.201818
   F1        = 0.335855


Total learning time: 1006.895 seconds
Total inference time: 24.547 seconds
AUC ROC: 0.919572
Total revision time: 1006.895
Best scored revision CLL: -0.263383


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 13:06:56
{'AUC PR': 0.73113, 'AUC ROC': 0.919572, 'Learning time': 1006.895, 'F1': 0.335855, 'Inference time': 24.547, 'Precision': [1.0, 0.5], 'Recall': 0.201818, 'parameter_0.6': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Learning time': 9.765, 'F1': 0.259494, 'Inference time': 3.527, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.329826}, 'CLL': -0.250647}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21658190380975903;  // std dev = 0,480, 3.931,000 (wgt'ed) examples reached here.  /* #neg=2.522 #pos=1.409 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7361977155873163;  // std dev = 2,095, 41,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   | | | else return -0.14185106490048807;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.045076871352100686;  // std dev = 1,646, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return 0.04682818038253123;  // std dev = 2,848, 53,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.03017593799693455;  // std dev = 4,421, 197,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=22 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18361923224490345;  // std dev = 0,478, 3.981,000 (wgt'ed) examples reached here.  /* #neg=2.572 #pos=1.409 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6434164960276411;  // std dev = 1,897, 40,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | | | else return -0.12544463852839124;  // std dev = 5,96e-08, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.039677772042477674;  // std dev = 1,646, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return 0.01628684091359524;  // std dev = 2,891, 61,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.04387508196547212;  // std dev = 4,361, 223,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=21 */
%   | | | else return -0.08999004496332223;  // std dev = 0,975, 21,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1610414242803684;  // std dev = 0,480, 3.926,000 (wgt'ed) examples reached here.  /* #neg=2.517 #pos=1.409 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5266524850273232;  // std dev = 1,664, 39,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | | else return -0.11231637819360617;  // std dev = 9,77e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.058672967616441155;  // std dev = 1,667, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | | | else return 0.016957634171331806;  // std dev = 2,887, 60,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=10 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.12337280457630236;  // std dev = 0,014, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.03905895037326595;  // std dev = 0,291, 236,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.5753476546031182;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7753476546031182;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.30868098793645166;  // std dev = 2,733, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.04457842383388758;  // std dev = 3,199, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | else return 0.12842517198660233;  // std dev = 0,478, 3.883,000 (wgt'ed) examples reached here.  /* #neg=2.512 #pos=1.371 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | then return 0.01694488641964508;  // std dev = 0,311, 145,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=27 */
%   | | else if ( title(K, I), venue(K, B) )
%   | | | then return -0.004075707880009304;  // std dev = 4,287, 169,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=21 */
%   | | | else return -0.07593190441853447;  // std dev = 0,976, 21,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | else return -0.020936477020361985;  // std dev = 0,228, 144,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11202742149341821;  // std dev = 0,480, 3.912,000 (wgt'ed) examples reached here.  /* #neg=2.503 #pos=1.409 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4747452271408164;  // std dev = 0,028, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.1009254240265814;  // std dev = 0,020, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.001387887814812038;  // std dev = 3,188, 81,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=12 */
%   | | | else return -0.05360964316716892;  // std dev = 0,969, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.009246921161314032;  // std dev = 4,299, 178,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=21 */
%   | | | else return -0.04737113942824205;  // std dev = 0,970, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return -0.1064724282007774;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08729575177947618;  // std dev = 0,479, 3.947,000 (wgt'ed) examples reached here.  /* #neg=2.538 #pos=1.409 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7953692755851175;  // std dev = 1,435, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return -0.1326448019568309;  // std dev = 0,202, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.12867786970584608;  // std dev = 0,028, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.02785705699360881;  // std dev = 1,712, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.03322295117644191;  // std dev = 2,331, 118,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=21 */
%   | | | else return -0.014616384515827807;  // std dev = 0,952, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return -0.09675921815082318;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordauthor(H, C) )
%   | | | then return 0.5932649364456809;  // std dev = 0,063, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08020453801544702;  // std dev = 4,232, 77,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
%   | | else return -0.10308178634335909;  // std dev = 0,356, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else return 0.07267173876285103;  // std dev = 0,480, 3.814,000 (wgt'ed) examples reached here.  /* #neg=2.443 #pos=1.371 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return -0.10918690193528867;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07085213846793816;  // std dev = 0,241, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( haswordtitle(M, N), haswordauthor(P, N) )
%   | | | then return -0.011328465664248385;  // std dev = 4,753, 274,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=35 */
%   | | | else return 0.047752670853118295;  // std dev = 1,267, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else return -0.027459485917148606;  // std dev = 0,212, 135,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then if ( haswordtitle(G, C) )
%   | | | then return 0.26775025243609;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.46152406883769975;  // std dev = 0,149, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09175138278869942;  // std dev = 4,069, 69,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=28 */
%   | | | else return -0.13185484802895284;  // std dev = 1,279, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else return 0.06488860414021665;  // std dev = 0,482, 3.738,000 (wgt'ed) examples reached here.  /* #neg=2.367 #pos=1.371 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, A) )
%   | | | then return -0.03358891116448887;  // std dev = 1,985, 135,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=18 */
%   | | | else return 0.035544669342193747;  // std dev = 2,073, 78,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | else return 0.01535277320647313;  // std dev = 0,330, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | else return -0.02626735414006846;  // std dev = 0,267, 216,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04441477635512011;  // std dev = 0,479, 3.905,000 (wgt'ed) examples reached here.  /* #neg=2.496 #pos=1.409 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return -0.10725720512940326;  // std dev = 0,044, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.026699620901803924;  // std dev = 0,585, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return -0.10425944951433386;  // std dev = 0,033, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.014851184345612573;  // std dev = 4,776, 291,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=35 */
%   | | | else return -0.005157357649197019;  // std dev = 1,360, 56,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005655150274025831;  // std dev = 2,217, 123,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=22 */
%   | | | else return -0.08438165395943864;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6298729658483336;  // std dev = 0,207, 1.336,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=1.276 */
%   | | else return -0.282024051685564;  // std dev = 0,164, 2.698,000 (wgt'ed) examples reached here.  /* #neg=2.632 #pos=66 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.19857041065993758;  // std dev = 3,964, 142,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | | else return -0.04592914246098276;  // std dev = 0,755, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.40484612604333947;  // std dev = 3,199, 54,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=40 */
%   | | | else return 0.017325069869044567;  // std dev = 2,512, 93,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=21 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.4745932492907585;  // std dev = 0,400, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | else return 0.6745932492907586;  // std dev = 6,66e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.0185601131775116;  // std dev = 0,217, 127,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=22 */


Results
   AUC ROC   = 0.991872
   AUC PR    = 0.699473
   CLL	      = -0.267428
   Precision = 0.777778 at threshold = 0.5
   Recall    = 0.089091
   F1        = 0.159869


Total learning time: 1150.365 seconds
Total inference time: 35.23 seconds
AUC ROC: 0.991872


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 13:26:42
{'AUC PR': 0.699473, 'AUC ROC': 0.991872, 'Learning time': 1150.365, 'F1': 0.159869, 'Inference time': 35.23, 'Precision': [0.777778, 0.5], 'Recall': 0.089091, 'CLL': -0.267428}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.3248156017661778;  // std dev = 3,864, 60,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=28 */
%   | | | else return -0.0198998453882926;  // std dev = 2,095, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | else return 0.22072513441040037;  // std dev = 0,481, 3.773,000 (wgt'ed) examples reached here.  /* #neg=2.405 #pos=1.368 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.001006077956655051;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( title(K, I), venue(K, A) )
%   | | | then return 0.08175141957156075;  // std dev = 5,287, 161,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=36 */
%   | | | else return 0.006797583748160992;  // std dev = 3,060, 74,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return -0.0319034209214302;  // std dev = 4,323, 191,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=21 */
%   | | | else return -0.08629550934493224;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.5769
   AUC PR    = 0.037321
   CLL	      = -0.203545
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 38.836 seconds
Total inference time: 4.274 seconds
AUC ROC: 0.5769


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 13:27:26
{'AUC PR': 0.037321, 'AUC ROC': 0.5769, 'Learning time': 38.836, 'F1': nan, 'Inference time': 4.274, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.203545}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1,04e-06, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.1524777218906055;  // std dev = 34,019, 5.572,000 (wgt'ed) examples reached here.  /* #neg=3.932 #pos=1.640 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.13052670090479607;  // std dev = 34,076, 5.617,000 (wgt'ed) examples reached here.  /* #neg=3.977 #pos=1.640 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.11665983322549882;  // std dev = 33,965, 5.530,000 (wgt'ed) examples reached here.  /* #neg=3.890 #pos=1.640 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.09736042860251597;  // std dev = 34,000, 5.557,000 (wgt'ed) examples reached here.  /* #neg=3.917 #pos=1.640 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.07841009753061916;  // std dev = 34,073, 5.615,000 (wgt'ed) examples reached here.  /* #neg=3.975 #pos=1.640 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,91e-07, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.06509687869012802;  // std dev = 34,070, 5.612,000 (wgt'ed) examples reached here.  /* #neg=3.972 #pos=1.640 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.05609406063531458;  // std dev = 34,006, 5.562,000 (wgt'ed) examples reached here.  /* #neg=3.922 #pos=1.640 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2,86e-07, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.04847845460689218;  // std dev = 33,941, 5.511,000 (wgt'ed) examples reached here.  /* #neg=3.871 #pos=1.640 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.03630706110033165;  // std dev = 34,013, 5.567,000 (wgt'ed) examples reached here.  /* #neg=3.927 #pos=1.640 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.03550465971783863;  // std dev = 33,863, 5.452,000 (wgt'ed) examples reached here.  /* #neg=3.812 #pos=1.640 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.330154
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 15.426 seconds
Total inference time: 3.423 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.584389
   AUC PR    = 0.186568
   CLL	      = -0.326765
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168779
   F1        = 0.288812


Total scoring time: 11.229 seconds
Parameter learned model CLL: -0.326765


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.019, 3932, 1640], 'true': [1.04e-06, 0, 333]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.076, 3977, 1640], 'true': [0.0, 0, 333]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.965, 3890, 1640], 'true': [0.0, 0, 333]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.0, 3917, 1640], 'true': [0.0, 0, 333]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.073, 3975, 1640], 'true': [0.0, 0, 333]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.07, 3972, 1640], 'true': [3.91e-07, 0, 333]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.006, 3922, 1640], 'true': [2.49e-07, 0, 333]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.941, 3871, 1640], 'true': [2.86e-07, 0, 333]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [34.013, 3927, 1640], 'true': [0.0, 0, 333]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [33.863, 3812, 1640], 'true': [0.0, 0, 333]}]]
[{'': [3.243318193259316e-15, 0.20769935205711987]}, {'': [-5.12102872619892e-15, 0.2067238531620798]}, {'': [-5.54778112004883e-16, 0.20861387336535214]}, {'': [-1.0028681255472886e-15, 0.20802552466465474]}, {'': [-7.254790695448471e-16, 0.2067671110567968]}, {'': [4.587588233886533e-16, 0.20683201509438454]}, {'': [1.8670417230933564e-16, 0.20791674537794633]}, {'': [2.4538262646369825e-16, 0.20902883367394978]}, {'': [-2.3204661415588857e-16, 0.20780802109893756]}, {'': [-2.2137780430964081e-16, 0.21032216599588663]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1,04e-06, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4414822684328449;  // std dev = 2,958, 36,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | | else return 0.10139217834275562;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1628364350995112;  // std dev = 5,207, 128,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=39 */
%   | | | else return 0.17225149920207128;  // std dev = 31,753, 4.680,000 (wgt'ed) examples reached here.  /* #neg=3.210 #pos=1.470 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.04940576570060418;  // std dev = 5,320, 183,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=35 */
%   | | | else return 0.01712329407387058;  // std dev = 5,106, 195,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=31 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.04764816634976332;  // std dev = 4,853, 276,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15176035178399;  // std dev = 0,465, 4.898,000 (wgt'ed) examples reached here.  /* #neg=3.350 #pos=1.548 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.04150691438381035;  // std dev = 6,246, 257,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=48 */
%   | | | else return -0.002389104110341293;  // std dev = 3,923, 124,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.13614926576039074;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.04261399104681395;  // std dev = 4,854, 279,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=26 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.30814094051940805;  // std dev = 4,153, 69,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | | | else return -0.06556506362137784;  // std dev = 2,099, 42,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1328714203390927;  // std dev = 5,051, 119,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
%   | | | else return 0.1296197038402023;  // std dev = 31,717, 4.657,000 (wgt'ed) examples reached here.  /* #neg=3.187 #pos=1.470 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return -0.07625652077367776;  // std dev = 1,363, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.02324224241430887;  // std dev = 7,274, 370,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=64 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.03883337616612625;  // std dev = 4,857, 282,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=26 */
%   | | | else return -0.12084366457731241;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11385748444781364;  // std dev = 0,466, 4.827,000 (wgt'ed) examples reached here.  /* #neg=3.279 #pos=1.548 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0319622447413773;  // std dev = 6,250, 259,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=48 */
%   | | | else return -0.011246922376206446;  // std dev = 3,940, 131,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.039173909978984706;  // std dev = 4,870, 297,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=26 */
%   | | | else return -0.10858191141920967;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0855011195945211;  // std dev = 0,463, 4.966,000 (wgt'ed) examples reached here.  /* #neg=3.418 #pos=1.548 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.043168577081160925;  // std dev = 6,191, 239,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=48 */
%   | | | else return -0.0032085195662378977;  // std dev = 3,925, 125,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02880521380390618;  // std dev = 4,853, 278,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=26 */
%   | | | else return -0.09851002239211605;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3,91e-07, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07102565510404682;  // std dev = 0,463, 4.957,000 (wgt'ed) examples reached here.  /* #neg=3.409 #pos=1.548 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.025226452226455972;  // std dev = 6,239, 254,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=48 */
%   | | | else return 0.010710660881221839;  // std dev = 3,894, 114,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020809704311394395;  // std dev = 4,840, 264,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=26 */
%   | | | else return -0.09010113827823775;  // std dev = 9,86e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2,49e-07, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05439824034007901;  // std dev = 0,462, 5.006,000 (wgt'ed) examples reached here.  /* #neg=3.458 #pos=1.548 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.03645441479757024;  // std dev = 5,297, 180,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=35 */
%   | | | else return -0.008238868591364143;  // std dev = 5,115, 199,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.030741841140928095;  // std dev = 4,873, 301,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=26 */
%   | | | else return -0.08298212113483322;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2,86e-07, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04795331109363328;  // std dev = 0,463, 4.945,000 (wgt'ed) examples reached here.  /* #neg=3.397 #pos=1.548 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.020698072641682663;  // std dev = 6,169, 250,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=47 */
%   | | | else return -0.014562928186442033;  // std dev = 4,050, 135,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020739648213921477;  // std dev = 4,854, 279,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=26 */
%   | | | else return -0.07688209777543684;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25177605896429545;  // std dev = 2,958, 36,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | | else return -0.014301558359044212;  // std dev = 3,683, 73,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | else return 0.035954841701900025;  // std dev = 0,462, 4.866,000 (wgt'ed) examples reached here.  /* #neg=3.357 #pos=1.509 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.021598103579607557;  // std dev = 6,220, 250,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=48 */
%   | | | else return -0.00385135698472468;  // std dev = 3,919, 123,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=18 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.022176336402373896;  // std dev = 4,864, 290,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=26 */
%   | | | else return -0.07160010562033457;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.13664107049128732;  // std dev = 3,151, 40,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | | | else return 0.018222901514532253;  // std dev = 3,611, 65,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05881860513245963;  // std dev = 4,894, 114,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=39 */
%   | | | else return 0.034216432278281535;  // std dev = 31,719, 4.658,000 (wgt'ed) examples reached here.  /* #neg=3.188 #pos=1.470 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return -0.05922194652462611;  // std dev = 1,358, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return -0.17473130334739276;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.009609480805375872;  // std dev = 7,248, 362,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=64 */
%   | | | else return -0.010378987587570622;  // std dev = 4,836, 265,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=26 */


Results
   AUC ROC   = 0.641197
   AUC PR    = 0.182958
   CLL	      = -0.308169
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 275.279 seconds
Total inference time: 10.307 seconds
AUC ROC: 0.641197


Results scoring model
   AUC ROC   = 0.632671
   AUC PR    = 0.192592
   CLL	      = -0.322107
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168779
   F1        = 0.288812


Total scoring time: 79.521 seconds
Refined model CLL: -0.322107


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.641197
   AUC PR    = 0.182958
   CLL	      = -0.308169
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 381.455 seconds
Total inference time: 10.307 seconds
AUC ROC: 0.641197
Total revision time: 381.455
Best scored revision CLL: -0.322107


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 13:34:03
{'AUC PR': 0.182958, 'AUC ROC': 0.641197, 'parameter_0.8': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Learning time': 15.426, 'F1': 0.259494, 'Inference time': 3.423, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.330154}, 'Learning time': 381.455, 'F1': 0.259494, 'Inference time': 10.307, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.308169}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2198797043302764;  // std dev = 0,481, 5.200,000 (wgt'ed) examples reached here.  /* #neg=3.319 #pos=1.881 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7638093124580029;  // std dev = 2,128, 53,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14185106490048827;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.03374295679237964;  // std dev = 1,889, 37,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return 0.02888064241658555;  // std dev = 3,407, 82,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=14 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return -0.0488278090865344;  // std dev = 4,666, 258,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=24 */
%   | | | else return -0.030739953789376686;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1896354264925873;  // std dev = 0,480, 5.219,000 (wgt'ed) examples reached here.  /* #neg=3.338 #pos=1.881 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6249067810358544;  // std dev = 2,307, 53,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=47 */
%   | | | else return -0.12588119619614277;  // std dev = 0,032, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.07372257441361385;  // std dev = 1,939, 63,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=4 */
%   | | | else return 0.014634641560250896;  // std dev = 3,521, 93,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=15 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return -0.0338829248256735;  // std dev = 4,642, 235,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=24 */
%   | | | else return -0.004816813883129016;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16506328434531012;  // std dev = 0,481, 5.162,000 (wgt'ed) examples reached here.  /* #neg=3.281 #pos=1.881 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5270472319344128;  // std dev = 1,931, 52,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.11246525504040802;  // std dev = 0,014, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.12350772858884186;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.015076114721237032;  // std dev = 3,892, 114,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.0472721695022127;  // std dev = 4,687, 283,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=24 */
%   | | | else return -0.03231447587556803;  // std dev = 1,338, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7730162400844683;  // std dev = 4,21e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.12267051031428704;  // std dev = 0,477, 5.351,000 (wgt'ed) examples reached here.  /* #neg=3.480 #pos=1.871 */
%   else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(H, E) )
%   | | | then return -0.05794752995051386;  // std dev = 1,360, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return -8.723629626732152E-4;  // std dev = 4,058, 245,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=49 */
%   | | else if ( haswordtitle(F, I), haswordvenue(A, I) )
%   | | | then return 0.06187021166123944;  // std dev = 3,388, 70,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | | else return -0.1491341043584968;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.027811505761089216;  // std dev = 4,651, 242,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=24 */
%   | | | else return -0.049285345033911306;  // std dev = 1,350, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10388518672590545;  // std dev = 0,478, 5.323,000 (wgt'ed) examples reached here.  /* #neg=3.442 #pos=1.881 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.45365972592376397;  // std dev = 1,002, 49,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.10167942537187442;  // std dev = 0,019, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.035412178547928025;  // std dev = 1,903, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | | else return 0.004658592038612137;  // std dev = 3,424, 87,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=14 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return -0.03662392633866967;  // std dev = 4,681, 276,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=24 */
%   | | | else return -0.03443830044066255;  // std dev = 1,347, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09166376661981322;  // std dev = 0,480, 5.209,000 (wgt'ed) examples reached here.  /* #neg=3.328 #pos=1.881 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.02214983197767184;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.01749888351655928;  // std dev = 3,498, 252,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=49 */
%   | | else return 0.03134467895253032;  // std dev = 0,386, 78,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=15 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.11981464954379242;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.030354436518706788;  // std dev = 4,864, 290,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=26 */
%   | | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07248751154509342;  // std dev = 0,480, 5.220,000 (wgt'ed) examples reached here.  /* #neg=3.339 #pos=1.881 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.043229045495890565;  // std dev = 1,492, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return 0.021347348472060438;  // std dev = 3,819, 141,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=31 */
%   | | else if ( haswordtitle(E, I), haswordauthor(J, I) )
%   | | | then return -0.004312176654587622;  // std dev = 2,639, 166,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=31 */
%   | | | else return -0.13534079582974234;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.021644621837607916;  // std dev = 0,292, 276,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=26 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05886004334097834;  // std dev = 0,480, 5.199,000 (wgt'ed) examples reached here.  /* #neg=3.318 #pos=1.881 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, A) )
%   | | | then return -0.026297416265514625;  // std dev = 2,485, 175,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=27 */
%   | | | else return 0.0271040380149863;  // std dev = 2,490, 95,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | else if ( haswordtitle(E, I), haswordvenue(A, I) )
%   | | | then return 0.03573338831806492;  // std dev = 3,388, 73,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | | else return -0.12026953407632231;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.10910836678433322;  // std dev = 0,012, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.02606787978225841;  // std dev = 0,283, 296,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=26 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.032255942406798944;  // std dev = 0,476, 4.912,000 (wgt'ed) examples reached here.  /* #neg=3.204 #pos=1.708 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.6689827664023645;  // std dev = 2,770, 77,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=67 */
%   | | | else return -0.10976469436453731;  // std dev = 2,430, 320,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=8 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.19021400888597353;  // std dev = 4,583, 192,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=24 */
%   | | | else return -0.064506765274309;  // std dev = 1,400, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3498448554338049;  // std dev = 4,185, 79,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=53 */
%   | | | else return 0.0599003932162545;  // std dev = 2,886, 99,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=27 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.613357419685455;  // std dev = 0,258, 56,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | else return -0.012038718709735705;  // std dev = 0,194, 187,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=31 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03180926315489522;  // std dev = 0,478, 4.821,000 (wgt'ed) examples reached here.  /* #neg=3.113 #pos=1.708 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6443642498965706;  // std dev = 1,668, 76,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=74 */
%   | | | else return -0.11403032593357078;  // std dev = 1,061, 312,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.13531393451311224;  // std dev = 4,542, 171,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=24 */
%   | | | else return -0.029353132012141146;  // std dev = 1,368, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.32654315167616393;  // std dev = 3,794, 73,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=53 */
%   | | | else return 0.03179620751597808;  // std dev = 2,975, 107,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=27 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.45281583236674355;  // std dev = 0,283, 57,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | else return -0.006271041655750463;  // std dev = 0,217, 163,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=31 */


Results
   AUC ROC   = 0.650129
   AUC PR    = 0.094805
   CLL	      = -0.33761
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.094545
   F1        = 0.159021


Total learning time: 3615.924 seconds
Total inference time: 27.935 seconds
AUC ROC: 0.650129


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 14:34:47
{'AUC PR': 0.094805, 'AUC ROC': 0.650129, 'Learning time': 3615.924, 'F1': 0.159021, 'Inference time': 27.935, 'Precision': [0.5, 0.5], 'Recall': 0.094545, 'CLL': -0.33761}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22211952333480128;  // std dev = 0,481, 5.168,000 (wgt'ed) examples reached here.  /* #neg=3.287 #pos=1.881 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7638093124580029;  // std dev = 2,128, 53,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.1418510649004884;  // std dev = 0,000, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.048827809086534266;  // std dev = 1,905, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | | | else return 0.001006077956655209;  // std dev = 3,464, 98,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=14 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.05632474911101429;  // std dev = 4,876, 304,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.614237
   AUC PR    = 0.053466
   CLL	      = -0.200754
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 63.093 seconds
Total inference time: 3.935 seconds
AUC ROC: 0.614237


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 14:35:55
{'AUC PR': 0.053466, 'AUC ROC': 0.614237, 'Learning time': 63.093, 'F1': nan, 'Inference time': 3.935, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.200754}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,72e-06, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.151661367222971;  // std dev = 38,094, 6.998,000 (wgt'ed) examples reached here.  /* #neg=4.944 #pos=2.054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.13175999276467168;  // std dev = 38,105, 7.008,000 (wgt'ed) examples reached here.  /* #neg=4.954 #pos=2.054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.11468337653657572;  // std dev = 38,063, 6.971,000 (wgt'ed) examples reached here.  /* #neg=4.917 #pos=2.054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.09503538468540994;  // std dev = 38,120, 7.021,000 (wgt'ed) examples reached here.  /* #neg=4.967 #pos=2.054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.08346528562788694;  // std dev = 38,014, 6.928,000 (wgt'ed) examples reached here.  /* #neg=4.874 #pos=2.054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4,42e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.06533635905480971;  // std dev = 38,116, 7.018,000 (wgt'ed) examples reached here.  /* #neg=4.964 #pos=2.054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.05348896345963296;  // std dev = 38,121, 7.022,000 (wgt'ed) examples reached here.  /* #neg=4.968 #pos=2.054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7,30e-08, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.044208877218512924;  // std dev = 38,105, 7.008,000 (wgt'ed) examples reached here.  /* #neg=4.954 #pos=2.054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.035853018237221056;  // std dev = 38,105, 7.008,000 (wgt'ed) examples reached here.  /* #neg=4.954 #pos=2.054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.03224214752702536;  // std dev = 38,016, 6.930,000 (wgt'ed) examples reached here.  /* #neg=4.876 #pos=2.054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.327787
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 23.948 seconds
Total inference time: 3.309 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.324386
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 13.295 seconds
Parameter learned model CLL: -0.324386


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.094, 4944, 2054], 'true': [1.72e-06, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.105, 4954, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.063, 4917, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.12, 4967, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.014, 4874, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.116, 4964, 2054], 'true': [4.42e-07, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.121, 4968, 2054], 'true': [2.46e-07, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.105, 4954, 2054], 'true': [7.3e-08, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.105, 4954, 2054], 'true': [0.0, 0, 413]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [38.016, 4876, 2054], 'true': [0.0, 0, 413]}]]
[{'': [7.157040631385029e-15, 0.20736288431236874]}, {'': [-5.4365981719174735e-15, 0.2071897446623703]}, {'': [-1.3419451183846928e-15, 0.20783107408462392]}, {'': [-2.1677574989291194e-15, 0.20696487865635482]}, {'': [-1.4623760905474218e-15, 0.2085788199574498]}, {'': [4.731216763535776e-16, 0.20701674909798357]}, {'': [1.4623760905474217e-16, 0.20694759141245622]}, {'': [1.2903318446006663e-17, 0.20718974466232545]}, {'': [-3.5699181033951763e-16, 0.2071897446622652]}, {'': [-3.4193793881917656e-16, 0.20854398447474154]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1,72e-06, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17268995865759001;  // std dev = 0,464, 6.155,000 (wgt'ed) examples reached here.  /* #neg=4.219 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06309593156594366;  // std dev = 6,791, 283,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=58 */
%   | | | else return 0.006297083247660122;  // std dev = 4,522, 162,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04481602446922138;  // std dev = 5,701, 371,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3233008081054779;  // std dev = 4,471, 80,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=39 */
%   | | | else return -0.06830878093561901;  // std dev = 2,516, 73,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=7 */
%   | | else return 0.1500675191130865;  // std dev = 0,464, 6.014,000 (wgt'ed) examples reached here.  /* #neg=4.124 #pos=1.890 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.040637390198349374;  // std dev = 1,643, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.042721251476262344;  // std dev = 7,996, 415,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=79 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03758160593014511;  // std dev = 5,696, 364,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12770048644091947;  // std dev = 0,464, 6.174,000 (wgt'ed) examples reached here.  /* #neg=4.238 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.048167715987521634;  // std dev = 6,066, 232,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=46 */
%   | | | else return -0.0021486643270647618;  // std dev = 5,523, 236,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=36 */
%   | | else return -0.03992346078294519;  // std dev = 0,289, 392,000 (wgt'ed) examples reached here.  /* #neg=356 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.192854886216503;  // std dev = 4,721, 91,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=39 */
%   | | | else return -0.0804080887795776;  // std dev = 2,521, 76,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=7 */
%   | | else return 0.11063766114268704;  // std dev = 0,465, 5.970,000 (wgt'ed) examples reached here.  /* #neg=4.080 #pos=1.890 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.008261301876027659;  // std dev = 7,192, 378,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=62 */
%   | | | else return 0.058724666390563764;  // std dev = 3,966, 94,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=20 */
%   | | else return -0.034901300079725174;  // std dev = 0,289, 390,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.15636442852117746;  // std dev = 4,721, 91,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=39 */
%   | | | else return -0.06674067177962928;  // std dev = 2,518, 74,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | | else return 0.09350150847723561;  // std dev = 0,466, 5.941,000 (wgt'ed) examples reached here.  /* #neg=4.051 #pos=1.890 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.046634802450823146;  // std dev = 6,786, 283,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=58 */
%   | | | else return 0.0072339656542867335;  // std dev = 4,471, 146,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02149523578681042;  // std dev = 5,685, 352,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=36 */
%   | | | else return -0.10506983487665189;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4,42e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07040694650287155;  // std dev = 0,463, 6.213,000 (wgt'ed) examples reached here.  /* #neg=4.277 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.012929429022987339;  // std dev = 7,140, 354,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=62 */
%   | | | else return 0.07520115648543794;  // std dev = 3,900, 84,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.12145560598613157;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.01674388297401949;  // std dev = 5,674, 348,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2,46e-07, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05681101269358663;  // std dev = 0,462, 6.223,000 (wgt'ed) examples reached here.  /* #neg=4.287 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.028968514172509927;  // std dev = 6,824, 297,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=58 */
%   | | | else return -0.024260165961482873;  // std dev = 4,525, 171,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.023681847689937995;  // std dev = 5,704, 376,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=36 */
%   | | | else return -0.09415428929493495;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7,30e-08, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05349618896356071;  // std dev = 0,465, 6.073,000 (wgt'ed) examples reached here.  /* #neg=4.137 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.04382485083584789;  // std dev = 6,001, 216,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=46 */
%   | | | else return 0.007603652125402469;  // std dev = 5,452, 206,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=36 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.009496366671822366;  // std dev = 5,667, 335,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=36 */
%   | | | else return -0.08642500134298059;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.037260794761377496;  // std dev = 0,463, 6.189,000 (wgt'ed) examples reached here.  /* #neg=4.253 #pos=1.936 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.02605316569427326;  // std dev = 6,804, 291,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=58 */
%   | | | else return -0.015757303892572946;  // std dev = 4,493, 160,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.009097082528997413;  // std dev = 5,669, 337,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=36 */
%   | | | else return -0.07984069522087278;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0,000, 413,000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.15794286026163157;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | | | else return -0.06653850710454057;  // std dev = 3,999, 115,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=21 */
%   | | else return 0.03297708324147577;  // std dev = 0,465, 5.973,000 (wgt'ed) examples reached here.  /* #neg=4.083 #pos=1.890 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return -0.04620098652773271;  // std dev = 1,644, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return -0.17825682190216283;  // std dev = 0,017, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02129384323256003;  // std dev = 7,954, 403,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=79 */
%   | | | else return -0.01304344435509448;  // std dev = 5,681, 359,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=36 */


Results
   AUC ROC   = 0.626697
   AUC PR    = 0.181009
   CLL	      = -0.310629
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 323.7 seconds
Total inference time: 8.623 seconds
AUC ROC: 0.626697


Results scoring model
   AUC ROC   = 0.627944
   AUC PR    = 0.190213
   CLL	      = -0.323753
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 79.553 seconds
Refined model CLL: -0.323753


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.626697
   AUC PR    = 0.181009
   CLL	      = -0.310629
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 440.496 seconds
Total inference time: 8.623 seconds
AUC ROC: 0.626697
Total revision time: 440.496
Best scored revision CLL: -0.323753


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:43:30
{'AUC PR': 0.181009, 'AUC ROC': 0.626697, 'Learning time': 440.496, 'F1': 0.259494, 'Inference time': 8.623, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'parameter_1.0': {'AUC PR': 0.171923, 'AUC ROC': 0.574545, 'Learning time': 23.948, 'F1': 0.259494, 'Inference time': 3.309, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'CLL': -0.327787}, 'CLL': -0.310629}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.5724346493852258;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return 0.3343394112899882;  // std dev = 3,237, 42,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.03579045883988164;  // std dev = 2,502, 66,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=7 */
%   | else return 0.2120711092811007;  // std dev = 0,478, 6.476,000 (wgt'ed) examples reached here.  /* #neg=4.184 #pos=2.292 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.8081489350995125;  // std dev = 1,688, 60,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=57 */
%   | | | else return -0.14185106490048832;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | | else return -0.005239043042564563;  // std dev = 0,343, 183,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=25 */
%   | else return -0.047856286832603144;  // std dev = 0,292, 383,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19346322896373835;  // std dev = 0,480, 6.465,000 (wgt'ed) examples reached here.  /* #neg=4.116 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6377242012636893;  // std dev = 2,341, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | | else return -0.12640262170875954;  // std dev = 0,055, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.05640355407686008;  // std dev = 2,136, 61,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   | | | else return 0.05878548450247653;  // std dev = 3,899, 95,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.13612479001381042;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.03356068744970737;  // std dev = 5,684, 351,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=36 */
%   | | | else return -0.1361247900138104;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16618833361722865;  // std dev = 0,481, 6.433,000 (wgt'ed) examples reached here.  /* #neg=4.084 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.007952699641793381;  // std dev = 1,618, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.0033918935801153256;  // std dev = 5,057, 346,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=59 */
%   | | else return 0.07776846287274869;  // std dev = 0,417, 88,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=20 */
%   | else return -0.040714038620989865;  // std dev = 0,288, 395,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6929115356424395;  // std dev = 0,165, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.1790996042021967;  // std dev = 4,583, 87,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=39 */
%   | | | else return -0.0731080988777044;  // std dev = 2,492, 62,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=7 */
%   | else return 0.12586127468903327;  // std dev = 0,478, 6.505,000 (wgt'ed) examples reached here.  /* #neg=4.213 #pos=2.292 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.4815886907218669;  // std dev = 2,511, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | | else return -0.11316425488433245;  // std dev = 0,042, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.03910352104100391;  // std dev = 2,125, 54,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=5 */
%   | | | else return 0.008067098192207037;  // std dev = 3,979, 114,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | else return -0.028572457796754328;  // std dev = 0,298, 365,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11022476900729723;  // std dev = 0,479, 6.526,000 (wgt'ed) examples reached here.  /* #neg=4.177 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return -0.010463485442444225;  // std dev = 1,624, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return -0.009151754896750568;  // std dev = 4,181, 358,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=59 */
%   | | else return 0.032982799696070694;  // std dev = 0,392, 103,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.11372262733361636;  // std dev = 6,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.025368764671849172;  // std dev = 0,298, 364,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.42775395763224644;  // std dev = 0,263, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.10340352446227755;  // std dev = 4,644, 90,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=39 */
%   | | | else return -0.08721919617370537;  // std dev = 2,504, 67,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=7 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.18235071339690573;  // std dev = 3,624, 53,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | | else return -0.017605912063948764;  // std dev = 4,054, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | else return 0.09049770247399891;  // std dev = 0,480, 6.222,000 (wgt'ed) examples reached here.  /* #neg=3.976 #pos=2.246 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then return 4.7296725865216555E-5;  // std dev = 0,287, 453,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=82 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.024351583331707272;  // std dev = 0,295, 372,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=36 */
%   | | else return -0.11119066231274856;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06812037109510131;  // std dev = 0,478, 6.586,000 (wgt'ed) examples reached here.  /* #neg=4.237 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.021340508661312912;  // std dev = 0,876, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -2.437377930525425E-4;  // std dev = 4,395, 334,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=59 */
%   | | else return 0.011431503182373088;  // std dev = 0,378, 113,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.015932903493938576;  // std dev = 5,521, 331,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=34 */
%   | | | else return -0.0609511319701507;  // std dev = 1,372, 35,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | else return -0.1006677547997245;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6555636361296833;  // std dev = 0,385, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.3176698304181482;  // std dev = 0,131, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.2091331847091824;  // std dev = 1,363, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.12982038306497903;  // std dev = 3,661, 63,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=29 */
%   | else return 0.05515076227484601;  // std dev = 0,479, 6.409,000 (wgt'ed) examples reached here.  /* #neg=4.117 #pos=2.292 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then return 0.00510341159019041;  // std dev = 0,285, 448,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=82 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return -0.017144986085958897;  // std dev = 5,530, 340,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=34 */
%   | | | else return -0.004600829277414119;  // std dev = 1,338, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return -0.09191324676263514;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04603476280057115;  // std dev = 0,478, 6.511,000 (wgt'ed) examples reached here.  /* #neg=4.162 #pos=2.349 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.04561698142641176;  // std dev = 1,922, 59,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=6 */
%   | | | else return 0.019430640247817814;  // std dev = 4,615, 198,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=40 */
%   | | else if ( title(I, E), venue(I, B) )
%   | | | then return -0.010723470280417166;  // std dev = 5,515, 325,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=34 */
%   | | | else return -0.034502514421279794;  // std dev = 1,361, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.01914115573032332;  // std dev = 3,215, 213,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=34 */
%   | | | else return 0.004111068017850945;  // std dev = 1,309, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.08452404867742562;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.023242558193280912;  // std dev = 0,474, 6.140,000 (wgt'ed) examples reached here.  /* #neg=4.001 #pos=2.139 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7132087863546306;  // std dev = 2,673, 106,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=98 */
%   | | | else return -0.12901113198358632;  // std dev = 1,145, 383,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=1 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.20677897389791286;  // std dev = 4,969, 238,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=28 */
%   | | | else return -0.048658183409394824;  // std dev = 1,352, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.37811002086830836;  // std dev = 4,434, 96,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=68 */
%   | | | else return 0.04391426423287718;  // std dev = 3,417, 140,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=33 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return 0.05893380885815353;  // std dev = 0,320, 259,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=67 */
%   | else return 0.5360469993818378;  // std dev = 0,315, 36,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */


Results
   AUC ROC   = 0.671888
   AUC PR    = 0.118192
   CLL	      = -0.338878
   Precision = 0.765957 at threshold = 0.5
   Recall    = 0.065455
   F1        = 0.120603


Total learning time: 2616.664 seconds
Total inference time: 22.044 seconds
AUC ROC: 0.671888


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 15:27:29
{'AUC PR': 0.118192, 'AUC ROC': 0.671888, 'Learning time': 2616.664, 'F1': 0.120603, 'Inference time': 22.044, 'Precision': [0.765957, 0.5], 'Recall': 0.065455, 'CLL': -0.338878}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2222220907101705;  // std dev = 0,481, 6.452,000 (wgt'ed) examples reached here.  /* #neg=4.103 #pos=2.349 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.00814893509951222;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.04485779585900619;  // std dev = 6,927, 316,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=59 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.0828680362231077;  // std dev = 3,938, 89,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=20 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.044290089290732124;  // std dev = 5,700, 369,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.57257
   AUC PR    = 0.017945
   CLL	      = -0.203695
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 120.351 seconds
Total inference time: 3.58 seconds
AUC ROC: 0.57257


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 15:29:34
{'AUC PR': 0.017945, 'AUC ROC': 0.57257, 'Learning time': 120.351, 'F1': nan, 'Inference time': 3.58, 'Precision': [nan, 0.5], 'Recall': 0.0, 'CLL': -0.203695}


