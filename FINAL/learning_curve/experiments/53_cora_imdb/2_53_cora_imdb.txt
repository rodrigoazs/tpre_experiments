Starting experiment #2 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2179820999124495;  // std dev = 0,480, 7.912,000 (wgt'ed) examples reached here.  /* #neg=5.065 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7812258581764349;  // std dev = 2,542, 91,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=84 */
%   | | | else return -0.1385723763758977;  // std dev = 0,998, 305,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.03882076187018462;  // std dev = 3,905, 165,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=17 */
%   | | | else return 0.01916588425205473;  // std dev = 3,993, 118,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.014479791187750798;  // std dev = 6,404, 369,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=47 */
%   | | | else return -0.10851773156715437;  // std dev = 1,390, 60,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8294901120196554;  // std dev = 4,21e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.310971593501137;  // std dev = 4,497, 81,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=39 */
%   | | | else return 0.03879243760105093;  // std dev = 4,620, 129,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=27 */
%   | else return 0.18520605479577937;  // std dev = 0,479, 7.759,000 (wgt'ed) examples reached here.  /* #neg=4.999 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.7973180874036015;  // std dev = 0,125, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12865128949247032;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(L, H) )
%   | | | then return 0.11820437170961608;  // std dev = 3,340, 59,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return -0.13652437512312615;  // std dev = 0,021, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.0016670383643213015;  // std dev = 0,327, 1.048,000 (wgt'ed) examples reached here.  /* #neg=897 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5547292418925395;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.11174463729844676;  // std dev = 6,443, 197,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=61 */
%   | | | else return 0.8239331234491309;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15570519563078894;  // std dev = 0,478, 7.796,000 (wgt'ed) examples reached here.  /* #neg=5.036 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6964396839736878;  // std dev = 1,713, 87,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | | else return -0.12240412300755463;  // std dev = 1,000, 311,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=1 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.2437116645952572;  // std dev = 3,009, 38,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return -0.05325548612647419;  // std dev = 4,365, 241,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=21 */
%   | else return -0.017174560636008335;  // std dev = 0,324, 404,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=49 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7500216359074661;  // std dev = 0,477, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.22424341608405143;  // std dev = 5,16e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.4904655120295364;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.05479997455722145;  // std dev = 4,734, 160,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=27 */
%   | else return 0.14154936752862798;  // std dev = 0,481, 7.550,000 (wgt'ed) examples reached here.  /* #neg=4.790 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then return 0.008756694392852569;  // std dev = 0,303, 699,000 (wgt'ed) examples reached here.  /* #neg=578 #pos=121 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.008108362806640231;  // std dev = 6,360, 362,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=47 */
%   | | | else return -0.09484570960731538;  // std dev = 1,391, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | else return -0.12273200906655606;  // std dev = 0,014, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10281400577544171;  // std dev = 0,476, 8.066,000 (wgt'ed) examples reached here.  /* #neg=5.219 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22041903758430384;  // std dev = 0,394, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12635746360185657;  // std dev = 3,194, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.041236392416945364;  // std dev = 5,658, 363,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=83 */
%   | | | else return -0.04891876997456478;  // std dev = 4,367, 244,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.015211091201525927;  // std dev = 6,390, 385,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=47 */
%   | | | else return -0.08117689173229235;  // std dev = 1,389, 56,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=2 */
%   | | else return -0.1107183243725897;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.15858157958163627;  // std dev = 5,177, 150,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=69 */
%   | | | else return 0.7672937202352504;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.12444678655976707;  // std dev = 0,262, 89,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
%   | else return 0.09387411103558307;  // std dev = 0,481, 7.599,000 (wgt'ed) examples reached here.  /* #neg=4.839 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then return 0.09743571451536424;  // std dev = 0,437, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | else return -0.0013326663574708322;  // std dev = 0,287, 632,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=104 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.009565759958837575;  // std dev = 6,376, 374,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=47 */
%   | | | else return -0.07283283909243389;  // std dev = 1,388, 56,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=2 */
%   | | else return -0.09955717124676017;  // std dev = 0,011, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.059999027300863594;  // std dev = 6,201, 192,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=69 */
%   | | | else return 0.08579961086227421;  // std dev = 2,054, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else return 0.5257903926366665;  // std dev = 0,090, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.24496381720828422;  // std dev = 3,104, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return -0.06928029476159225;  // std dev = 4,514, 155,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=27 */
%   | | else return 0.07021270480960773;  // std dev = 0,480, 7.511,000 (wgt'ed) examples reached here.  /* #neg=4.817 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( haswordtitle(L, J) )
%   | | then return 0.10226396072424718;  // std dev = 0,453, 50,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | else return -0.02005683978334766;  // std dev = 0,270, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else return -0.008947110266249161;  // std dev = 0,296, 1.070,000 (wgt'ed) examples reached here.  /* #neg=919 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5971151163647105;  // std dev = 1,543, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.31291721505646175;  // std dev = 0,139, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.19602752816848776;  // std dev = 1,743, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | | else return 0.07007378809403461;  // std dev = 4,144, 95,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=39 */
%   | else return 0.056220273705097724;  // std dev = 0,478, 7.693,000 (wgt'ed) examples reached here.  /* #neg=4.933 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then return 0.0018624887660125822;  // std dev = 0,297, 714,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=121 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.002796874535052165;  // std dev = 6,359, 361,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=47 */
%   | | | else return -0.06578364018957854;  // std dev = 1,389, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | else return -0.09014635083271708;  // std dev = 0,011, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.025204589311141442;  // std dev = 0,470, 7.679,000 (wgt'ed) examples reached here.  /* #neg=5.070 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.6707411859686262;  // std dev = 3,961, 149,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=133 */
%   | | | else return -0.13579517532548974;  // std dev = 1,603, 588,000 (wgt'ed) examples reached here.  /* #neg=586 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.12025288145323275;  // std dev = 4,658, 140,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=27 */
%   | | | else return -0.08523651228082166;  // std dev = 0,998, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.36885535976671263;  // std dev = 4,899, 112,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=78 */
%   | | | else return 0.045248660978479724;  // std dev = 4,415, 205,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5661089933248049;  // std dev = 0,310, 76,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=68 */
%   | else return 0.0014942715113707165;  // std dev = 0,271, 277,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=49 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03601265665920765;  // std dev = 0,472, 7.925,000 (wgt'ed) examples reached here.  /* #neg=5.078 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.15472306472236805;  // std dev = 0,938, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.11645908296523323;  // std dev = 0,008, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08691890126763614;  // std dev = 2,136, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.00697682706865635;  // std dev = 0,880, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.055504746567056236;  // std dev = 2,574, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.03664369025794087;  // std dev = 0,950, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.011207374876558434;  // std dev = 7,403, 701,000 (wgt'ed) examples reached here.  /* #neg=613 #pos=88 */
%   | | | else return -0.005411065531368924;  // std dev = 4,493, 268,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=46 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5646706742299479;  // std dev = 4,368, 92,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048763;  // std dev = 8,93e-09, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7747499695633955;  // std dev = 3,26e-07, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else return -0.0771018822884555;  // std dev = 2,611, 54,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.34386130299860634;  // std dev = 0,405, 99,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.11231637819360621;  // std dev = 7,68e-09, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.27516564221652456;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.2916321286729519;  // std dev = 0,389, 95,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783624;  // std dev = 4,71e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21860530878757423;  // std dev = 3,776, 96,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926093;  // std dev = 5,48e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.15589597792755625;  // std dev = 0,382, 99,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839682;  // std dev = 5,19e-09, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1611298023682929;  // std dev = 0,370, 91,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109157;  // std dev = 6,04e-09, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.6032231196620073;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3294783899469955;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3300178208448018;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.19806532671513552;  // std dev = 2,422, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333706;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.26151246390109595;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2611454490855588;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.15789751429908672;  // std dev = 2,436, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.06842697784420265;  // std dev = 4,41e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07958498712510709;  // std dev = 2,938, 93,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=65 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.185164
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.53 seconds
Total inference time: 1.517 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.98589
   AUC PR    = 0.909758
   CLL	      = -0.171046
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.876923
   F1        = 0.934426


Total scoring time: 1.483 seconds
Parameter learned model CLL: -0.171046


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,false': [8.93e-09, 90, 0], 'true': [4.368, 27, 65]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [3.26e-07, 0, 57], 'true,true,false': [2.611, 46, 8], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false': [0.0, 86, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.405, 34, 65], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [9.13e-09, 12, 0], 'false,true,false': [7.68e-09, 91, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false': [0.389, 30, 65], 'true,true,true,false': [0.0, 2, 0], 'false,true': [4.71e-08, 94, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [5.48e-08, 103, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 7, 0], 'true': [3.776, 31, 65], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.382, 34, 65], 'false,true': [5.19e-09, 97, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.37, 26, 65], 'false,true': [6.04e-09, 111, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false,false': [2.422, 22, 8], 'true,true,true,false': [0.0, 0, 57], 'true,true,false,true': [0.0, 3, 0], 'false,true': [0.0, 89, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 57], 'true,false,false,false': [4.41e-08, 91, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 10, 0], 'true,true,false,false': [2.63e-09, 7, 0], 'true,false,false,true': [2.436, 23, 8]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [6.97e-09, 13, 0], 'false,true,false': [0.0, 82, 0], 'true': [2.938, 28, 65]}]]
[{'': [0.2073487712665399, 7.864079757761526e-17], 'false,true': [-6.938893903907228e-18, 7.401486830834377e-17], 'false': [7.864079757761526e-17, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.2426751075399724, -7.01193489236941e-18], 'false': [-7.01193489236941e-18, nan], 'true': [0.2426751075399724, nan], 'true,true': [1.8698493046318425e-15, 0.1262002743484223], 'false,true,true': [0.0, 0.0], 'false,true': [0.0, -1.8073398075293247e-17]}, {'': [0.16383235712870983, 6.618637262188433e-17], 'false,true': [8.540177112501205e-18, 6.100126508929432e-17], 'false': [6.618637262188433e-17, nan], 'false,true,true': [0.0, 6.938893903907228e-18], 'true': [0.16383235712870983, nan]}, {'': [0.15447340095026788, 2.362176648138631e-17], 'true,true': [0.0, 0.15110156093921515], 'false': [2.362176648138631e-17, nan], 'true,true,true': [nan, 0.0], 'true': [0.15447340095026788, nan]}, {'': [0.14851823769006336, 3.835315903250541e-17], 'false,true': [0.0, 2.910293365522255e-17], 'false': [3.835315903250541e-17, nan], 'false,true,false': [nan, 2.910293365522255e-17]}, {'': [0.14613929662368413, 2.8613995480029805e-17], 'false': [2.8613995480029805e-17, nan], 'true': [0.14613929662368413, nan]}, {'': [0.13704696643370978, 3.600723323108616e-17], 'false': [3.600723323108616e-17, nan], 'true': [0.13704696643370978, nan]}, {'': [0.13771758514768992, -7.484649604214538e-18], 'false': [-7.484649604214538e-18, nan], 'true,true,true': [0.0, -9.349246523159212e-17], 'true': [0.13771758514768992, nan], 'true,true,false': [0.0, 0.19555555555555576], 'true,true': [0.014740228907114671, 0.17921674147257466]}, {'': [0.05630459621098339, nan], 'true,false': [0.013791991806115384, 0.050168709491715625], 'true,false,true': [-1.791938916938849e-16, 0.0], 'true': [0.003682173326007579, 0.05829802300289486], 'true,true,false': [0.0, 9.912705577010326e-19], 'true,true': [0.0, 0.0], 'true,false,false': [0.19146722164412075, 2.1350442781253012e-17]}, {'': [0.09282566179612109, -1.4456028966473393e-17], 'false,true': [3.469446951953614e-18, -1.1508409401602232e-17], 'false': [-1.4456028966473393e-17, nan], 'false,true,true': [0.0, 3.736327486719277e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.14185106490048766;  // std dev = 7,74e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.7194734122109543;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7194734122109544;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( female(A) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0.3207118471601498;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.19133070965862056;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1,49e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.08518475138839679;  // std dev = 1,97e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.10700398652746257;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( female(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.17709649774527722;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else if ( genre(A, F) )
%   | | then return -0.07135305788807547;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.17709649774527722;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07324622576333704;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06776309816813571;  // std dev = 0,000813, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06842697784420271;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13505019121864095;  // std dev = 0,300, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.10645228778109267;  // std dev = 0,590, 43,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.07902024611437956;  // std dev = 0,361, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.0705926978594146;  // std dev = 0,147, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.13727406170044845;  // std dev = 0,003, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.13974031674395712;  // std dev = 0,000908, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( actor(A) )
%   | | then return -0.06406186530443309;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.08270083101321138;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.06423173170266795;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06423173170266795;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.06406186530443313;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return -0.07533632958538852;  // std dev = 0,001, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063723
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.877 seconds
Total inference time: 1.686 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065827
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.461 seconds
Refined model CLL: -0.065827


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063723
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.351 seconds
Total inference time: 1.686 seconds
AUC ROC: 1.0
Total revision time: 7.351
Best scored revision CLL: -0.065827


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 19:08:33
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.686, 'CLL': -0.063723, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.351, 'parameter_0.2': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.517, 'CLL': -0.185164, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.53}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048788;  // std dev = 0,000, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.1254446385283911;  // std dev = 8,43e-08, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360624;  // std dev = 7,30e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783633;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926094;  // std dev = 5,58e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839683;  // std dev = 5,58e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109162;  // std dev = 5,48e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07324622576333707;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,94e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420267;  // std dev = 4,21e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202626;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.017 seconds
Total inference time: 1.454 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 19:08:37
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.454, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 2.017, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048796;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.842 seconds
Total inference time: 1.067 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 19:08:39
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 1.067, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 0.842, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.531724064633188;  // std dev = 6,514, 193,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.14185106490048818;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7627483585882585;  // std dev = 1,402, 113,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=111 */
%   | | else return -0.008441415256382296;  // std dev = 3,872, 90,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3675531550096241;  // std dev = 0,407, 192,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.11231637819360639;  // std dev = 4,93e-09, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.46556101164704555;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.28717089912075267;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.28380680818277826;  // std dev = 0,401, 193,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10170040763061101;  // std dev = 0,015, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2028585861881927;  // std dev = 5,637, 199,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0946598995991369;  // std dev = 0,018, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09268252362976535;  // std dev = 7,15e-08, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1803490750531974;  // std dev = 0,389, 190,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08520660047034347;  // std dev = 0,000643, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1298133042211904;  // std dev = 0,393, 192,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07888434326058524;  // std dev = 0,001, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3409972371622765;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3355220251264441;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.20805650227760036;  // std dev = 3,740, 72,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07325395827530648;  // std dev = 0,008, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3006096079144755;  // std dev = 0,194, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07578804210492895;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06828624445616784;  // std dev = 1,24e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2689707983620612;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return -0.06841215895593374;  // std dev = 8,33e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.18307999218734403;  // std dev = 3,806, 80,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   | | | else return -0.06841215895593371;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05432998396919571;  // std dev = 4,621, 201,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=130 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07064726557623136;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06406765638992071;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06417876520434201;  // std dev = 2,79e-09, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.181955
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.998 seconds
Total inference time: 1.707 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.982629
   AUC PR    = 0.890347
   CLL	      = -0.171638
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.853846
   F1        = 0.921162


Total scoring time: 2.489 seconds
Parameter learned model CLL: -0.171638


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [0.0, 16, 0], 'false,true,false': [0.0, 163, 0], 'true': [6.514, 63, 130]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.402, 2, 111], 'true,true,false': [3.872, 71, 19], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 18, 0], 'false,true,false': [0.0, 168, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.407, 62, 130], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.39e-08, 16, 0], 'false,true,false': [4.93e-09, 166, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.401, 63, 130], 'true,true,true,false': [0.0, 6, 0], 'false,true': [0.015, 206, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [7.15e-08, 184, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.018, 20, 0], 'true': [5.637, 69, 130], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.389, 60, 130], 'false,true': [0.000643, 197, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.393, 62, 130], 'false,true': [0.001, 197, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,false': [3.74, 53, 19], 'true,true,true,false': [0.0, 0, 111], 'true,true,false,true': [0.0, 7, 0], 'false,true': [0.008, 184, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 111], 'true,false,false,false': [0.0, 162, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.194, 6, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [8.33e-09, 21, 0], 'true,true,false,false': [1.24e-08, 24, 0], 'true,false,false,true': [3.806, 61, 19]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [0.0, 11, 0], 'false,true,false': [2.79e-09, 167, 0], 'true': [4.621, 71, 130]}]]
[{'': [0.219871674407371, -2.1488187573390127e-16], 'false,true': [9.654113257610057e-18, -1.5801947344358056e-16], 'false': [-2.1488187573390127e-16, nan], 'false,true,true': [-7.93016446160826e-18, -6.938893903907228e-18]}, {'': [0.2302894998665327, -2.1488187573390126e-17], 'false': [-2.1488187573390126e-17, nan], 'true': [0.2302894998665327, nan], 'true,true': [0.017385856370898827, 0.16654320987654364], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -5.28677630773884e-18]}, {'': [0.16569787416017615, 9.366634397523914e-07], 'false,true': [9.541936023148044e-06, 2.407712583524436e-17], 'false': [9.366634397523914e-07, nan], 'false,true,true': [0.0, 1.214306433183765e-17], 'true': [0.16569787416017615, nan]}, {'': [0.1671961721606511, 1.1048904998603582e-06], 'true,true': [0.0038966978261808344, 0.1606671085323291], 'false': [1.1048904998603582e-06, nan], 'true,true,true': [0.0, -9.25185853854297e-18], 'true': [0.1671961721606511, nan]}, {'': [0.1596803081700874, 1.8790925241755227e-06], 'false,true': [1.5640062896978003e-05, 2.7755575615628914e-17], 'false': [1.8790925241755227e-06, nan], 'false,true,false': [nan, 2.7755575615628914e-17]}, {'': [0.15127093656567336, 4.129003791464247e-07], 'false': [4.129003791464247e-07, nan], 'true': [0.15127093656567336, nan]}, {'': [0.1545968581591508, 1.0596340784874994e-06], 'false': [1.0596340784874994e-06, nan], 'true': [0.1545968581591508, nan]}, {'': [0.15042754209407597, 3.3703235457977654e-07], 'false': [3.3703235457977654e-07, nan], 'true,true,true': [nan, -2.720546510793176e-16], 'true': [0.15042754209407597, nan], 'true,true,false': [-1.586032892321652e-17, 0.19425154320987667], 'true,true': [-2.720546510793176e-16, 0.17835146569033877]}, {'': [0.06590358170465171, nan], 'true,false': [0.015227923714440157, 0.06277546457268424], 'true,false,true': [-1.7603536246308789e-16, 3.3042351923367752e-18], 'true': [0.009356955132289967, 0.06961610668402192], 'true,true,false': [0.0, 6.3606527452482924e-18], 'true,true': [0.006250036528804163, 3.995997725185817e-06], 'true,false,false': [0.18109374999999991, -1.0965165675310187e-17]}, {'': [0.10623888690770683, 1.5272115392821532e-06], 'false,true': [1.0288354297629316e-05, 8.6424546827108e-18], 'false': [1.5272115392821532e-06, nan], 'false,true,true': [0.0, -2.523234146875356e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048768;  // std dev = 5,58e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.14185106490048824;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462838;  // std dev = 3,16e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else return 0.5553664367462836;  // std dev = 3,73e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.11231637819360649;  // std dev = 2,28e-09, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return 0.4175135841583106;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783656;  // std dev = 0,000, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else return 0.32071184716015005;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.1285822337804825;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,29e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0824291512307808;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 1,05e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.08518475138839678;  // std dev = 9,13e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325356;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else return 0.20975771563253573;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109172;  // std dev = 2,11e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.091622018470101;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.07877675473109168;  // std dev = 2,08e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( female(A) )
%   | | then return -0.0787767547310917;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109162;  // std dev = 3,41e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return -0.07877675473109168;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return 0.1737090717309217;  // std dev = 0,029, 73,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=72 */
%   | else if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 9,13e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0.17709649774527744;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( female(B) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( female(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.073246225763337;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.07324622576333699;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15302854570300076;  // std dev = 0,002, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return -0.06842697784420268;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.08165323225649722;  // std dev = 0,547, 28,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return -0.06871373846498789;  // std dev = 0,063, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13633504246205055;  // std dev = 0,004, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else return 0.13479415420539506;  // std dev = 0,002, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( actor(A) )
%   | | then return -0.0641746161663663;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.07875574567432352;  // std dev = 0,052, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.06419184008202618;  // std dev = 1,32e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06417461616636613;  // std dev = 5,67e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | | else return -0.06417461616636619;  // std dev = 1,86e-09, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.06740087839081325;  // std dev = 0,018, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06715402929013731;  // std dev = 0,016, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063396
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.143 seconds
Total inference time: 1.696 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06481
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.894 seconds
Refined model CLL: -0.06481


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063396
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.524 seconds
Total inference time: 1.696 seconds
AUC ROC: 1.0
Total revision time: 10.524
Best scored revision CLL: -0.06481


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 19:08:54
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.707, 'CLL': -0.181955, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.998}, 'Inference time': 1.696, 'CLL': -0.063396, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.524}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.14185106490048827;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.12544463852839166;  // std dev = 0,000, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.11231637819360675;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 3,86e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.10159632948783648;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2,53e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.0926912761892606;  // std dev = 9,42e-08, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5,96e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.08518475138839678;  // std dev = 7,74e-08, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2,11e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07877675473109146;  // std dev = 5,96e-08, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07324622576333673;  // std dev = 1,12e-07, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.06842697784420265;  // std dev = 4,47e-08, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.06419184008202626;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.92 seconds
Total inference time: 1.37 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 19:08:58
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.37, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 2.92, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048846;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.257 seconds
Total inference time: 1.396 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 19:09:01
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 1.396, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 1.257, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5236779453384164;  // std dev = 8,076, 293,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.14185106490048813;  // std dev = 0,000, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7696279364551433;  // std dev = 1,406, 164,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=162 */
%   | | else return 0.04582305840636442;  // std dev = 4,928, 125,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.12544463852839197;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.35902848040442426;  // std dev = 0,417, 291,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.1123163781936069;  // std dev = 0,000, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.46315052522611805;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.29494841039485226;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.27563409775934933;  // std dev = 0,410, 294,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783663;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2359930906672007;  // std dev = 6,632, 283,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.092691276189261;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926046;  // std dev = 1,15e-07, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.16635844821674944;  // std dev = 0,397, 290,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08532162054534656;  // std dev = 0,001, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10627795466580037;  // std dev = 0,405, 300,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07891569499954973;  // std dev = 0,001, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.34601598100438435;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.34123635951069414;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.18873839108803345;  // std dev = 4,842, 114,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07332938227152827;  // std dev = 0,016, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3204686389049153;  // std dev = 0,251, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07591778918158398;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06840409920353062;  // std dev = 5,27e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2723734299299946;  // std dev = 2,15e-07, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | | | else return -0.06840409920353059;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.13144811498298062;  // std dev = 4,806, 110,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | | | else return -0.06840409920353033;  // std dev = 1,11e-07, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08221173945281285;  // std dev = 5,537, 281,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=195 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0707603539070708;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06417165385584567;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.06417165385584576;  // std dev = 0,000, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.195166
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.21 seconds
Total inference time: 1.71 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.981118
   AUC PR    = 0.876299
   CLL	      = -0.181535
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.830769
   F1        = 0.907563


Total scoring time: 1.942 seconds
Parameter learned model CLL: -0.181535


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.79e-08, 30, 0], 'false,true,false': [0.0, 263, 0], 'true': [8.076, 98, 195]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.406, 2, 162], 'true,true,false': [4.928, 92, 33], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 29, 0], 'false,true,false': [0.0, 283, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.417, 96, 195], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.67e-08, 19, 0], 'false,true,false': [0.0, 263, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.41, 99, 195], 'true,true,true,false': [1.83e-08, 9, 0], 'false,true': [0.0, 308, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [1.15e-07, 261, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 35, 0], 'true': [6.632, 88, 195], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.397, 95, 195], 'false,true': [0.001, 268, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.405, 105, 195], 'false,true': [0.001, 287, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,false': [4.842, 81, 33], 'true,true,true,false': [0.0, 0, 162], 'true,true,false,true': [0.0, 6, 0], 'false,true': [0.016, 314, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [2.15e-07, 0, 162], 'true,false,false,false': [1.11e-07, 236, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.251, 8, 0], 'true,true,false,true': [2.63e-09, 7, 0], 'true,false,true,false': [0.0, 28, 0], 'true,true,false,false': [5.27e-09, 25, 0], 'true,false,false,true': [4.806, 77, 33]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.32e-09, 3, 0], 'false,true,true,false': [0.0, 33, 0], 'false,true,false': [0.0, 256, 0], 'true': [5.537, 86, 195]}]]
[{'': [0.2226001467693324, 1.5105075164968118e-17], 'false,true': [2.5069552168955147e-17, -7.767339792054327e-17], 'false': [1.5105075164968118e-17, nan], 'false,true,true': [0.0, 2.590520390792032e-17]}, {'': [0.2194657631014973, -9.022764898540955e-17], 'false': [-9.022764898540955e-17, nan], 'true': [0.2194657631014973, nan], 'true,true': [0.012046400951817825, 0.19430399999999975], 'false,true,true': [0.0, -5.742532885992189e-18], 'false,true': [-6.938893903907228e-18, -7.846099113958704e-17]}, {'': [0.17360026584408086, -1.149592635427467e-16], 'false,true': [1.460819769243627e-17, -1.0131312772244775e-16], 'false': [-1.149592635427467e-16, nan], 'false,true,true': [nan, 1.460819769243627e-17], 'true': [0.17360026584408086, nan]}, {'': [0.17458422318661948, -5.190653102143589e-17], 'true,true': [0.00420872004798999, 0.16792475420115296], 'false': [-5.190653102143589e-17, nan], 'true,true,true': [0.0, 3.700743415417188e-17], 'true': [0.17458422318661948, nan]}, {'': [0.1554335844554704, 8.101627476994385e-17], 'false,true': [-9.516197353929913e-18, 5.104473676437501e-17], 'false': [8.101627476994385e-17, nan], 'false,true,false': [nan, 5.104473676437501e-17]}, {'': [0.15760829837553708, 1.2363889642263153e-06], 'false': [1.2363889642263153e-06, nan], 'true': [0.15760829837553708, nan]}, {'': [0.16417715708719624, 1.2499931286779323e-06], 'false': [1.2499931286779323e-06, nan], 'true': [0.16417715708719624, nan]}, {'': [0.15552922770142644, 8.043599719252714e-07], 'false': [8.043599719252714e-07, nan], 'true,true,true': [nan, -7.675615972717131e-16], 'true': [0.15552922770142644, nan], 'true,true,false': [-1.850371707708594e-17, 0.20567867036011026], 'true,true': [-7.675615972717131e-16, 0.19649937928482403]}, {'': [0.0680835760809308, nan], 'true,false': [0.014591762196887518, 0.0676248727333732], 'true,false,true': [2.8509430755806487e-16, -2.9738116731030977e-18], 'true': [0.011622628842748289, 0.0709010219679714], 'true,true,false': [9.912705577010326e-19, 1.1102230246251566e-18], 'true,true': [0.007906041815032391, 9.64816307627396e-06], 'true,false,false': [0.21000000000000027, 5.174768335117255e-17]}, {'': [0.10909104668944142, 4.4142087602675935e-07], 'false,true': [3.3161156389915593e-06, -2.6020852139652106e-18], 'false': [4.4142087602675935e-07, nan], 'false,true,true': [5.782411586589357e-19, -2.523234146875356e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048766;  // std dev = 8,02e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.14185106490048802;  // std dev = 0,000, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.1254446385283918;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.5553664367462834;  // std dev = 4,08e-08, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( genre(A, D) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.11231637819360692;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.4175135841583102;  // std dev = 1,46e-07, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | | else return 0.4175135841583096;  // std dev = 2,92e-07, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.10159632948783628;  // std dev = 2,47e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.10159632948783662;  // std dev = 0,000, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else return -0.09269127618926105;  // std dev = 2,95e-09, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.0926912761892608;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926086;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.09269127618926083;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else if ( female(A) )
%   | | then return -0.0851847513883968;  // std dev = 3,36e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.08518475138839679;  // std dev = 1,61e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 3,49e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | | else return -0.08518475138839679;  // std dev = 1,49e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325356;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.20975771563253554;  // std dev = 1,54e-08, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109164;  // std dev = 2,69e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.0787767547310915;  // std dev = 7,45e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.0787767547310917;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.1770964977452773;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.17466598586655285;  // std dev = 0,025, 103,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=102 */
%   | else if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.1770964977452775;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.07324622576333686;  // std dev = 6,23e-08, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.07324622576333703;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.07233712631660545;  // std dev = 0,007, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10170443441570015;  // std dev = 0,823, 78,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=60 */
%   | | | else return 0.13883481533786907;  // std dev = 0,567, 109,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=102 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.101308779968584;  // std dev = 0,613, 43,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=33 */
%   | | | else return -0.06842697784420299;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1400563160177171;  // std dev = 2,20e-05, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.13614650839102696;  // std dev = 0,000956, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else if ( actor(B) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return -0.0723474199194806;  // std dev = 0,020, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.0639573524675576;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06417308107286872;  // std dev = 6,36e-05, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | | else if ( female(A) )
%   | | | then return -0.07519703389327;  // std dev = 3,55e-05, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07683090140747384;  // std dev = 0,006, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063873
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.092 seconds
Total inference time: 2.331 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065475
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.449 seconds
Refined model CLL: -0.065475


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063873
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.693 seconds
Total inference time: 2.331 seconds
AUC ROC: 1.0
Total revision time: 10.693
Best scored revision CLL: -0.065475


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 19:09:17
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.331, 'parameter_0.6': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.71, 'CLL': -0.195166, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.21}, 'CLL': -0.063873, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.693}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 1,84e-07, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.858148935099512;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else if ( actor(A) )
%   | | | then return 0.8581489350995111;  // std dev = 5,20e-07, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.12544463852839213;  // std dev = 0,000, 334,000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 5,90e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.11231637819360689;  // std dev = 0,000, 340,000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2,67e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.10159632948783652;  // std dev = 0,000, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014894;  // std dev = 3,95e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.0926912761892605;  // std dev = 1,65e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 2,31e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0851847513883968;  // std dev = 1,67e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.08518475138839678;  // std dev = 1,10e-07, 356,000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07877675473109147;  // std dev = 2,11e-08, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527775;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07324622576333711;  // std dev = 6,83e-08, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.06842697784420312;  // std dev = 0,000, 343,000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080109;  // std dev = 8,94e-08, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.06419184008202598;  // std dev = 1,11e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.803 seconds
Total inference time: 1.741 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 19:09:23
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.741, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 3.803, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048788;  // std dev = 5,16e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.204 seconds
Total inference time: 0.934 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 19:09:25
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.934, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 1.204, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.49384575661540053;  // std dev = 9,732, 409,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.1418510649004876;  // std dev = 1,10e-08, 338,000 (wgt'ed) examples reached here.  /* #neg=338 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7686870919022544;  // std dev = 1,982, 220,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=216 */
%   | | else return 0.03267896594999265;  // std dev = 5,761, 179,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.12544463852839213;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.37863946309506635;  // std dev = 0,412, 380,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.1123163781936067;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.46037633921687615;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.2901128941106243;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.3067403033681184;  // std dev = 0,399, 374,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.101596329487836;  // std dev = 1,92e-07, 385,000 (wgt'ed) examples reached here.  /* #neg=385 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1993371946846094;  // std dev = 8,101, 400,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926061;  // std dev = 1,85e-07, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.16354061067259373;  // std dev = 0,401, 391,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 6,25e-09, 396,000 (wgt'ed) examples reached here.  /* #neg=396 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1290261797564789;  // std dev = 0,399, 388,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109141;  // std dev = 4,84e-09, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.46821789766710536;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.34528799836947993;  // std dev = 1,69e-07, 216,000 (wgt'ed) examples reached here.  /* #pos=216 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3333561019939963;  // std dev = 1,49e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.20767796100685967;  // std dev = 5,674, 164,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333725;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #neg=392 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.27752057088493653;  // std dev = 0,146, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.27188009479084474;  // std dev = 0,000, 216,000 (wgt'ed) examples reached here.  /* #pos=216 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1746118285421722;  // std dev = 5,745, 176,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=44 */
%   | | | else return -0.06842697784420294;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09417566628731561;  // std dev = 6,258, 369,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=260 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.06419184008202565;  // std dev = 9,45e-09, 384,000 (wgt'ed) examples reached here.  /* #neg=384 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188685
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.257 seconds
Total inference time: 1.555 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.981077
   AUC PR    = 0.876187
   CLL	      = -0.176222
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.830769
   F1        = 0.907563


Total scoring time: 2.199 seconds
Parameter learned model CLL: -0.176222


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [3.8e-08, 37, 0], 'false,true,false': [1.1e-08, 338, 0], 'true': [9.732, 149, 260]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.982, 4, 216], 'true,true,false': [5.761, 135, 44], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 39, 0], 'false,true,false': [0.0, 322, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.412, 120, 260], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [0.0, 31, 0], 'false,true,false': [0.0, 320, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 5, 0], 'true,true,false': [0.399, 114, 260], 'true,true,true,false': [0.0, 13, 0], 'false,true': [1.92e-07, 385, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [1.85e-07, 366, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 38, 0], 'true': [8.101, 140, 260], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.401, 131, 260], 'false,true': [6.25e-09, 396, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.399, 128, 260], 'false,true': [4.84e-09, 364, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 3, 0], 'true,true,false,false': [5.674, 120, 44], 'true,true,true,false': [1.69e-07, 0, 216], 'true,true,false,true': [1.49e-08, 15, 0], 'false,true': [0.0, 392, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 216], 'true,false,false,false': [0.0, 286, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.146, 20, 0], 'true,true,false,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 22, 0], 'true,true,false,false': [7.45e-09, 42, 0], 'true,false,false,true': [5.745, 132, 44]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.32e-09, 3, 0], 'false,true,true,false': [0.0, 41, 0], 'false,true,false': [9.45e-09, 384, 0], 'true': [6.258, 109, 260]}]]
[{'': [0.23158637263048748, 1.9502330379658833e-16], 'false,true': [4.163336342344337e-17, 1.2087635297694012e-16], 'false': [1.9502330379658833e-16, nan], 'false,true,true': [0.0, 3.900783600034334e-17]}, {'': [0.227008624317681, -1.2376256667952564e-16], 'false': [-1.2376256667952564e-16, nan], 'true': [0.227008624317681, nan], 'true,true': [0.017851239669417138, 0.1853874723011145], 'false,true,true': [0.0, -2.2773805633336544e-17], 'false,true': [-2.2709107321878203e-17, -1.130910410177178e-16]}, {'': [0.16983053495686218, -2.977134367709917e-17], 'false,true': [-8.764918615461762e-18, -3.8857805861880476e-17], 'false': [-2.977134367709917e-17, nan], 'false,true,true': [-1.982541115402065e-18, -8.953411488912552e-18], 'true': [0.16983053495686218, nan]}, {'': [0.1701708258064468, 9.573871277287064e-17], 'true,true': [0.005815822987852461, 0.15902817005464268], 'false': [9.573871277287064e-17, nan], 'true,true,true': [-4.4408920985006264e-17, -8.540177112501205e-17], 'true': [0.1701708258064468, nan]}, {'': [0.16406395693780218, 4.946538228527925e-17], 'false,true': [-8.764918615461762e-18, 9.342860425807329e-17], 'false': [4.946538228527925e-17, nan], 'false,true,false': [nan, 9.342860425807329e-17]}, {'': [0.16051747882361195, 3.812887155278315e-17], 'false': [3.812887155278315e-17, nan], 'true': [0.16051747882361195, nan]}, {'': [0.15897552445432256, 2.318048073393184e-17], 'false': [2.318048073393184e-17, nan], 'true': [0.15897552445432256, nan]}, {'': [0.16186095659267347, -4.5315225494904345e-18], 'false': [-4.5315225494904345e-18, nan], 'true,true,true': [-3.700743415417188e-17, 1.3158198810372225e-16], 'true': [0.16186095659267347, nan], 'true,true,false': [1.4802973661668754e-17, 0.19631171921475307], 'true,true': [0.008941454810998894, 0.18107370298268974]}, {'': [0.07512754688876795, nan], 'true,false': [0.009715484611135744, 0.0740875808205128], 'true,false,true': [-4.523130841065453e-16, -3.784851220313033e-18], 'true': [0.00955791099367395, 0.07958045533895934], 'true,true,false': [0.0, 1.32169407693471e-18], 'true,true': [0.0010695000680412514, 2.413528314402514e-18], 'true,false,false': [0.18750000000000008, -3.648984766250514e-17]}, {'': [0.10614579641359982, 1.058343444035196e-16], 'false,true': [-2.523234146875356e-18, 8.962737959213503e-17], 'false': [1.058343444035196e-16, nan], 'false,true,true': [5.782411586589357e-19, -2.030895776753335e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048796;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.14185106490048766;  // std dev = 1,88e-07, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.12544463852839136;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839136;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.12544463852839116;  // std dev = 5,87e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.12544463852839216;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,21e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0.5553664367462834;  // std dev = 4,21e-08, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.11231637819360636;  // std dev = 0,000, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( female(B) )
%   | then return -0.10159632948783642;  // std dev = 0,000, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else return -0.10159632948783662;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601499;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0.32071184716014944;  // std dev = 1,97e-08, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   | else if ( female(A) )
%   | | then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | | else return -0.09269127618926075;  // std dev = 6,66e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0.2551722425694893;  // std dev = 8,33e-09, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 2,46e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.08518475138839678;  // std dev = 3,73e-09, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 2,95e-09, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 4,71e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253529;  // std dev = 1,21e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0.20975771563253523;  // std dev = 1,97e-08, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109155;  // std dev = 5,67e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | | else return -0.07877675473109147;  // std dev = 7,74e-08, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.07877675473109169;  // std dev = 1,61e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.17709649774527733;  // std dev = 0,000, 216,000 (wgt'ed) examples reached here.  /* #pos=216 */
%   | else if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( actor(A), director(B) )
%   | | | then return 0.17709649774527753;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.07324622576333702;  // std dev = 1,49e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | | else return -0.07324622576333671;  // std dev = 1,02e-07, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07324622576333703;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.0684269778442027;  // std dev = 1,86e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367153;  // std dev = 0,000, 216,000 (wgt'ed) examples reached here.  /* #pos=216 */
%   | | | else return -0.06842697784420264;  // std dev = 1,29e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.10230138673941903;  // std dev = 0,701, 57,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=44 */
%   | | | else return -0.06842697784420339;  // std dev = 0,000, 431,000 (wgt'ed) examples reached here.  /* #neg=431 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13592543848403807;  // std dev = 0,003, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0.13429488067403184;  // std dev = 0,001, 145,000 (wgt'ed) examples reached here.  /* #pos=145 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06549199366664132;  // std dev = 0,015, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06728620561341027;  // std dev = 0,025, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063414
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.381 seconds
Total inference time: 1.758 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064508
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.993 seconds
Refined model CLL: -0.064508


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063414
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.83 seconds
Total inference time: 1.758 seconds
AUC ROC: 1.0
Total revision time: 13.83
Best scored revision CLL: -0.064508


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 19:09:43
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.758, 'parameter_0.8': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.555, 'CLL': -0.188685, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.257}, 'CLL': -0.063414, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.83}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.14185106490048743;  // std dev = 2,86e-07, 451,000 (wgt'ed) examples reached here.  /* #neg=451 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.12544463852839227;  // std dev = 0,000, 473,000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,95e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.11231637819360589;  // std dev = 0,000, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783627;  // std dev = 1,97e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.10159632948783595;  // std dev = 2,27e-07, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,33e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.09269127618926136;  // std dev = 0,000, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0851847513883968;  // std dev = 1,29e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.08518475138839678;  // std dev = 1,30e-07, 464,000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07877675473109158;  // std dev = 9,42e-08, 450,000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07324622576333718;  // std dev = 0,000, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0684269778442027;  // std dev = 1,18e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06842697784420346;  // std dev = 0,000, 479,000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080112;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.0641918400820257;  // std dev = 1,94e-07, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.481 seconds
Total inference time: 1.634 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 19:09:48
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.634, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 3.481, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048718;  // std dev = 3,01e-07, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.202 seconds
Total inference time: 0.838 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 19:09:51
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.838, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 1.202, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5303138835531163;  // std dev = 10,338, 485,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.14185106490048735;  // std dev = 1,48e-08, 393,000 (wgt'ed) examples reached here.  /* #neg=393 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7551415662336206;  // std dev = 2,612, 274,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=267 */
%   | | else return 0.06434285764293901;  // std dev = 6,501, 208,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.12544463852839227;  // std dev = 0,000, 419,000 (wgt'ed) examples reached here.  /* #neg=419 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3301574134176948;  // std dev = 0,430, 511,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.11231637819360607;  // std dev = 0,000, 431,000 (wgt'ed) examples reached here.  /* #neg=431 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.45403337553349626;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.2941763823757193;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.3112043501603325;  // std dev = 0,403, 468,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.1015963294878354;  // std dev = 3,50e-07, 499,000 (wgt'ed) examples reached here.  /* #neg=499 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21846854513683286;  // std dev = 8,883, 488,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926108;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926126;  // std dev = 0,000, 461,000 (wgt'ed) examples reached here.  /* #neg=461 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.15061343004597172;  // std dev = 0,406, 502,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 6,72e-09, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11362223198994711;  // std dev = 0,406, 503,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109191;  // std dev = 7,45e-09, 475,000 (wgt'ed) examples reached here.  /* #neg=475 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.46114939472765776;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.35216837609258217;  // std dev = 6,08e-07, 267,000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.33477692509966406;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.19739520566724195;  // std dev = 6,507, 209,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333738;  // std dev = 0,000, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2950115081172237;  // std dev = 0,169, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2765399970294891;  // std dev = 2,31e-07, 267,000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | | else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.15507832733383625;  // std dev = 6,537, 214,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=59 */
%   | | | else return -0.06842697784420336;  // std dev = 0,000, 406,000 (wgt'ed) examples reached here.  /* #neg=406 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05831660518277747;  // std dev = 7,702, 500,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=326 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.06419184008202547;  // std dev = 1,07e-08, 453,000 (wgt'ed) examples reached here.  /* #neg=453 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.18962
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.539 seconds
Total inference time: 1.687 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.979497
   AUC PR    = 0.867039
   CLL	      = -0.178518
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total scoring time: 2.717 seconds
Parameter learned model CLL: -0.178518


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 6, 0], 'false,true,true,false': [4.94e-08, 47, 0], 'false,true,false': [1.48e-08, 393, 0], 'true': [10.338, 159, 326]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.612, 7, 267], 'true,true,false': [6.501, 149, 59], 'false,true,true,true': [0.0, 8, 0], 'false,true,true,false': [0.0, 41, 0], 'false,true,false': [0.0, 419, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.43, 185, 326], 'false,true,true,true': [0.0, 8, 0], 'false,true,true,false': [1.83e-08, 45, 0], 'false,true,false': [0.0, 431, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 4, 0], 'true,true,false': [0.403, 142, 326], 'true,true,true,false': [0.0, 16, 0], 'false,true': [3.5e-07, 499, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [0.0, 461, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 49, 0], 'true': [8.883, 162, 326], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.406, 176, 326], 'false,true': [6.72e-09, 491, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.406, 177, 326], 'false,true': [7.45e-09, 475, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 6, 0], 'true,true,false,false': [6.507, 150, 59], 'true,true,true,false': [6.08e-07, 0, 267], 'true,true,false,true': [0.0, 18, 0], 'false,true': [0.0, 489, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [2.31e-07, 0, 267], 'true,false,false,false': [0.0, 406, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.169, 17, 0], 'true,true,false,true': [1.86e-09, 6, 0], 'true,false,true,false': [1.05e-08, 47, 0], 'true,true,false,false': [1.05e-08, 47, 0], 'true,false,false,true': [6.537, 155, 59]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 6, 0], 'false,true,true,false': [0.0, 52, 0], 'false,true,false': [1.07e-08, 453, 0], 'true': [7.702, 174, 326]}]]
[{'': [0.22035923052396916, 1.9516028056191092e-16], 'false,true': [5.86532918669894e-17, 2.1921960995143041e-16], 'false': [1.9516028056191092e-16, nan], 'false,true,true': [-6.938893903907228e-18, 5.196788625904988e-17]}, {'': [0.21890118971780112, -1.3664283380001927e-16], 'false': [-1.3664283380001927e-16, nan], 'true': [0.21890118971780112, nan], 'true,true': [0.0248947732963884, 0.20319434171597497], 'false,true,true': [0.0, -2.4370749321040022e-17], 'false,true': [-2.2657612747452175e-17, -1.2930521145992276e-16]}, {'': [0.18463037722501194, -5.50523813863714e-18], 'false,true': [2.3042364662031552e-17, -1.236443275684629e-17], 'false': [-5.50523813863714e-18, nan], 'false,true,true': [-1.734723475976807e-18, 7.401486830834377e-18], 'true': [0.18463037722501194, nan]}, {'': [0.17175644794596567, 2.456285008389124e-16], 'true,true': [0.0040886813218313335, 0.16227346912187587], 'false': [2.456285008389124e-16, nan], 'true,true,true': [0.0, -1.3877787807814457e-17], 'true': [0.17175644794596567, nan]}, {'': [0.16170723547766264, -3.657205257588751e-17], 'false,true': [-4.5315225494904345e-18, 0.0], 'false': [-3.657205257588751e-17, nan], 'false,true,false': [nan, 0.0]}, {'': [0.16461529383584497, 4.52229337932854e-17], 'false': [4.52229337932854e-17, nan], 'true': [0.16461529383584497, nan]}, {'': [0.16463160829069853, 5.422562983432343e-17], 'false': [5.422562983432343e-17, nan], 'true': [0.16463160829069853, nan]}, {'': [0.16605385630971273, -1.8163157867078227e-17], 'false': [-1.8163157867078227e-17, nan], 'true,true,true': [0.0, 1.383828549045888e-15], 'true': [0.16605385630971273, nan], 'true,true,false': [-4.9343245538895844e-17, 0.20260525171127006], 'true,true': [0.014218629603563251, 0.18791756010999772]}, {'': [0.07188758699714029, nan], 'true,false': [0.015146241027959967, 0.07062233230019231], 'true,false,true': [1.9959065611238769e-16, 2.362176648138631e-18], 'true': [0.009848159527308848, 0.07528925576023457], 'true,true,false': [5.782411586589357e-19, 2.362176648138631e-18], 'true,true': [0.0016791148834564987, 4.7132109535973624e-18], 'true,false,false': [0.1996899292514619, -1.1649138140155583e-16]}, {'': [0.11863298734521013, 1.181920401949286e-16], 'false,true': [-3.3498108501621104e-18, 1.1420837295260991e-16], 'false': [1.181920401949286e-16, nan], 'false,true,true': [-5.782411586589357e-19, -2.6688053476566264e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.141851064900488;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.14185106490048727;  // std dev = 2,98e-07, 418,000 (wgt'ed) examples reached here.  /* #neg=418 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839138;  // std dev = 2,11e-08, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.1254446385283923;  // std dev = 0,000, 430,000 (wgt'ed) examples reached here.  /* #neg=430 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.11231637819360625;  // std dev = 5,37e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.11231637819360606;  // std dev = 0,000, 437,000 (wgt'ed) examples reached here.  /* #neg=437 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783642;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( female(B) )
%   | then return -0.10159632948783652;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else return -0.10159632948783665;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926096;  // std dev = 2,79e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.09269127618926058;  // std dev = 1,90e-07, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948917;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.2551722425694885;  // std dev = 1,24e-08, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 1,32e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,49e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.08518475138839679;  // std dev = 2,79e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 6,32e-08, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | | else return -0.08518475138839678;  // std dev = 9,19e-08, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | | else return -0.08518475138839679;  // std dev = 1,32e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.08518475138839679;  // std dev = 2,79e-09, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253504;  // std dev = 1,67e-08, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.20975771563253492;  // std dev = 1,97e-08, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.07877675473109165;  // std dev = 3,80e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.07877675473109198;  // std dev = 0,000, 486,000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return 0.1770964977452769;  // std dev = 8,16e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | | else return 0.17709649774527775;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #pos=172 */
%   | else if ( genre(A, F) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.177096497745277;  // std dev = 5,16e-08, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.07324622576333689;  // std dev = 5,96e-08, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else if ( actor(A) )
%   | then return -0.07324622576333713;  // std dev = 3,48e-09, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420262;  // std dev = 3,09e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.0684269778442027;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.12258419864759686;  // std dev = 0,796, 110,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=95 */
%   | | | else return 0.11989670424151169;  // std dev = 1,118, 202,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=172 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.09886891087803494;  // std dev = 0,838, 78,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=59 */
%   | | | else return -0.06842697784420358;  // std dev = 0,000, 519,000 (wgt'ed) examples reached here.  /* #neg=519 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1384982842615261;  // std dev = 0,001, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.13801632635956032;  // std dev = 0,000599, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06419184008202615;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06419184008202616;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06419184008202562;  // std dev = 1,86e-07, 388,000 (wgt'ed) examples reached here.  /* #neg=388 */
%   | | | else return -0.06419184008202608;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( actor(A) )
%   | | | then return -0.07606586807508407;  // std dev = 0,006, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.076476643159041;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063854
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.397 seconds
Total inference time: 2.188 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065362
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.141 seconds
Refined model CLL: -0.065362


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063854
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.794 seconds
Total inference time: 2.188 seconds
AUC ROC: 1.0
Total revision time: 13.794
Best scored revision CLL: -0.065362


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 19:10:09
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.687, 'CLL': -0.18962, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.539}, 'Inference time': 2.188, 'CLL': -0.063854, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.794}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.14185106490048818;  // std dev = 0,000, 575,000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.12544463852839233;  // std dev = 0,000, 573,000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360624;  // std dev = 6,32e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return -0.11231637819360592;  // std dev = 0,000, 625,000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1015963294878362;  // std dev = 4,34e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783552;  // std dev = 3,45e-07, 579,000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926173;  // std dev = 0,000, 592,000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.08518475138839678;  // std dev = 1,46e-07, 600,000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,46e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109172;  // std dev = 2,58e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07877675473109247;  // std dev = 0,000, 617,000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452765;  // std dev = 2,76e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333702;  // std dev = 1,13e-07, 581,000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420268;  // std dev = 2,11e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420364;  // std dev = 0,000, 576,000 (wgt'ed) examples reached here.  /* #neg=576 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.0641918400820255;  // std dev = 2,38e-07, 565,000 (wgt'ed) examples reached here.  /* #neg=565 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.233 seconds
Total inference time: 1.287 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 19:10:15
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.287, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 4.233, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048838;  // std dev = 0,000, 592,000 (wgt'ed) examples reached here.  /* #neg=592 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.464 seconds
Total inference time: 1.076 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 19:10:17
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 1.076, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 1.464, 'F1': nan}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4795081584004841;  // std dev = 4,923, 103,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.14185106490048763;  // std dev = 8,74e-09, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7892635245085698;  // std dev = 1,19e-07, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else return 0.033707968953014346;  // std dev = 2,883, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3714640427048077;  // std dev = 0,412, 95,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.1123163781936062;  // std dev = 8,12e-09, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.4601436718410047;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.28591247018260085;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.23566606612315655;  // std dev = 0,421, 105,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1939770716362841;  // std dev = 4,180, 103,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0936800469856992;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.16804322405028183;  // std dev = 0,406, 99,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08527321477607183;  // std dev = 0,000933, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11647135165552287;  // std dev = 0,409, 101,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.0787609172079212;  // std dev = 2,42e-05, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.46470472693027803;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.3648456995237716;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.32678975824133905;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.18797361438506943;  // std dev = 2,849, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07331038217108948;  // std dev = 0,008, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.259315284985605;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07586402729464439;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0683552646144946;  // std dev = 4,56e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2851129504154937;  // std dev = 8,94e-08, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return -0.06841825921034915;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.11445168899445318;  // std dev = 2,796, 38,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.06841825921034916;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05413535385516083;  // std dev = 3,440, 101,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=64 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06412856367490896;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.0641841475688149;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.173152
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.385 seconds
Total inference time: 2.154 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.979688
   AUC PR    = 0.873536
   CLL	      = -0.176374
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.828125
   F1        = 0.905983


Total scoring time: 1.486 seconds
Parameter learned model CLL: -0.176374


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 12, 0], 'false,true,false': [8.74e-09, 87, 0], 'true': [4.923, 39, 64]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.19e-07, 0, 53], 'true,true,false': [2.883, 34, 11], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 9, 0], 'false,true,false': [0.0, 82, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.412, 31, 64], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [9.13e-09, 12, 0], 'false,true,false': [8.12e-09, 102, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.421, 41, 64], 'true,true,true,false': [0.0, 3, 0], 'false,true': [3.94e-08, 99, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [0.0, 68, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.009, 10, 0], 'true': [4.18, 39, 64], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.406, 35, 64], 'false,true': [0.000933, 94, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.409, 37, 64], 'false,true': [2.42e-05, 99, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false,false': [2.849, 31, 11], 'true,true,true,false': [0.0, 0, 53], 'true,true,false,true': [0.0, 4, 0], 'false,true': [0.008, 105, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [8.94e-08, 0, 53], 'true,false,false,false': [0.0, 72, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 4, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 6, 0], 'true,true,false,false': [4.56e-09, 11, 0], 'true,false,false,true': [2.796, 27, 11]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [5.27e-09, 11, 0], 'false,true,false': [0.0, 99, 0], 'true': [3.44, 37, 64]}]]
[{'': [0.2352719389197845, 8.074349270001139e-17], 'false,true': [-1.1564823173178714e-17, 7.656710514656253e-17], 'false': [8.074349270001139e-17, nan], 'false,true,true': [nan, -1.1564823173178714e-17]}, {'': [0.2265722615576832, 2.8939680048974426e-06], 'false': [2.8939680048974426e-06, nan], 'true': [0.2265722615576832, nan], 'true,true': [2.681293342490944e-16, 0.18469135802469144], 'false,true,true': [0.0, 0.0], 'false,true': [2.422537436727046e-05, -2.166288828536891e-17]}, {'': [0.16966013558783236, 1.485674027563818e-06], 'false,true': [1.2237956408378121e-05, 6.530723674265627e-17], 'false': [1.485674027563818e-06, nan], 'false,true,true': [0.0, 6.938893903907228e-18], 'true': [0.16966013558783236, nan]}, {'': [0.18191882850321942, 1.570012358055777e-17], 'true,true': [0.005691845930874656, 0.1769119041858079], 'false': [1.570012358055777e-17, nan], 'true,true,true': [0.0, 0.0], 'true': [0.18191882850321942, nan]}, {'': [0.1696630668503823, 1.2373506240526702e-06], 'false,true': [8.799009191001738e-06, -1.6326809185664067e-18], 'false': [1.2373506240526702e-06, nan], 'false,true,false': [nan, -1.6326809185664067e-18]}, {'': [0.16461232088889097, 8.710106938693551e-07], 'false': [8.710106938693551e-07, nan], 'true': [0.16461232088889097, nan]}, {'': [0.16731554009912855, 5.867622179379874e-10], 'false': [5.867622179379874e-10, nan], 'true': [0.16731554009912855, nan]}, {'': [0.1651297584860094, 5.937916351495516e-07], 'false': [5.937916351495516e-07, nan], 'true,true,true': [0.0, -1.8433891729625242e-16], 'true': [0.1651297584860094, nan], 'true,true,false': [0.0, 0.19331065759637175], 'true,true': [0.024113822963037893, 0.17803097227682949]}, {'': [0.07159263079987804, nan], 'true,false': [0.011417699668223208, 0.071531788086008], 'true,false,true': [1.508227505151156e-16, -2.3129646346357427e-18], 'true': [0.0067958193172123794, 0.07581574370997762], 'true,true,false': [0.0, 1.8924256101565167e-18], 'true,true': [0.0, 4.3069214364944526e-06], 'true,false,false': [0.2056786703601108, -9.25185853854297e-18]}, {'': [0.11714948674596945, 2.7806121142988486e-10], 'false,true': [2.523234146875356e-18, -2.186802927291975e-17], 'false': [2.7806121142988486e-10, nan], 'false,true,true': [nan, 2.523234146875356e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.7194734122109546;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.7194734122109542;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( actor(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.14111685828337295;  // std dev = 0,100, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09899757789545373;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.109545765834688;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601496;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.10930018458727954;  // std dev = 0,103, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.09954249482901845;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.09263574425009065;  // std dev = 0,000184, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.25517224256948934;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10279043441594546;  // std dev = 0,094, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,75e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.0851847513883968;  // std dev = 1,29e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.08518907899822827;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then return -0.08491855700802754;  // std dev = 0,000532, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08451342236466883;  // std dev = 0,000536, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.10272782577084308;  // std dev = 0,086, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07838130708005463;  // std dev = 0,000157, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return -0.07878047075947972;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08166462821963744;  // std dev = 0,016, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.1573189906045389;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1770964977452769;  // std dev = 8,74e-09, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else if ( genre(A, F) )
%   | | then return -0.06772145570172601;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.17709649774527716;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return -0.07299463631213005;  // std dev = 0,000222, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( actor(A) )
%   | | then return -0.0731427872650461;  // std dev = 9,74e-05, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07812583280868259;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06806484968248548;  // std dev = 2,82e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11406057391121942;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return -0.06826882880804748;  // std dev = 0,000876, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06832424115157046;  // std dev = 0,007, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | | else return 0.10537428081402576;  // std dev = 0,339, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419801187966968;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.05943485985287578;  // std dev = 0,000232, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.13496834763242438;  // std dev = 0,002, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.06387587148318956;  // std dev = 1,05e-05, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06523792851455112;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06419801187966978;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.06426507898867295;  // std dev = 2,44e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06776518108261625;  // std dev = 0,005, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063464
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.897 seconds
Total inference time: 1.578 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065537
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.12 seconds
Refined model CLL: -0.065537


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063464
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.888 seconds
Total inference time: 1.578 seconds
AUC ROC: 1.0
Total revision time: 7.888
Best scored revision CLL: -0.065537


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 19:10:30
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.578, 'CLL': -0.063464, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.888, 'parameter_0.2': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.154, 'CLL': -0.173152, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.385}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.1254446385283914;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360622;  // std dev = 7,74e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783631;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926087;  // std dev = 7,15e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.08518475138839683;  // std dev = 5,77e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07877675473109164;  // std dev = 5,67e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06842697784420267;  // std dev = 4,21e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06419184008202626;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.341 seconds
Total inference time: 1.351 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 19:10:34
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.351, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 2.341, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.797 seconds
Total inference time: 0.873 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 19:10:36
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.873, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 0.797, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5479885072920228;  // std dev = 6,325, 187,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.1418510649004883;  // std dev = 0,000, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7679391280976038;  // std dev = 0,995, 103,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=102 */
%   | | else return 0.055998381425596974;  // std dev = 4,414, 97,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.35283026026976394;  // std dev = 0,422, 194,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11231637819360658;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.46723648831800174;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.3008648625317339;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.2856801331216721;  // std dev = 0,410, 191,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10165490898896093;  // std dev = 0,011, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21364327241226772;  // std dev = 5,645, 194,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0931357698784983;  // std dev = 0,010, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09268634979398764;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.14073976274245092;  // std dev = 0,410, 202,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.0852736158702466;  // std dev = 0,000937, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10626673927265803;  // std dev = 0,411, 202,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07890399083519158;  // std dev = 0,001, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.4655972400208797;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.350899476641658;  // std dev = 2,38e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3355033402308128;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.19455567406929344;  // std dev = 4,405, 96,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.0733529062691108;  // std dev = 0,014, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2946810679489881;  // std dev = 0,125, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07588504145098535;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06837435274826302;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.27568104454168546;  // std dev = 1,76e-07, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | | else return -0.06840298604717811;  // std dev = 6,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.08150520304705683;  // std dev = 4,202, 78,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | | | else return -0.06840298604717825;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06804589209410931;  // std dev = 4,880, 195,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=129 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07073181303644657;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06414540688937016;  // std dev = 7,45e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.06417067167889343;  // std dev = 2,79e-09, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.187182
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.839 seconds
Total inference time: 1.913 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.975295
   AUC PR    = 0.844403
   CLL	      = -0.1901
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.790698
   F1        = 0.883117


Total scoring time: 2.194 seconds
Parameter learned model CLL: -0.1901


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 16, 0], 'false,true,false': [0.0, 180, 0], 'true': [6.325, 58, 129]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.995, 1, 102], 'true,true,false': [4.414, 70, 27], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [7.45e-09, 15, 0], 'false,true,false': [0.0, 174, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.422, 65, 129], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.18e-08, 14, 0], 'false,true,false': [0.0, 192, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.41, 62, 129], 'true,true,true,false': [1.05e-08, 8, 0], 'false,true': [0.011, 183, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [0.0, 181, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.01, 22, 0], 'true': [5.645, 65, 129], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.41, 73, 129], 'false,true': [0.000937, 188, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.411, 73, 129], 'false,true': [0.001, 182, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false,false': [4.405, 69, 27], 'true,true,true,false': [2.38e-07, 0, 102], 'true,true,false,true': [1.05e-08, 5, 0], 'false,true': [0.014, 187, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.76e-07, 0, 102], 'true,false,false,false': [0.0, 156, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.125, 9, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [6.45e-09, 15, 0], 'true,true,false,false': [0.0, 8, 0], 'true,false,false,true': [4.202, 51, 27]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [7.45e-09, 22, 0], 'false,true,false': [2.79e-09, 169, 0], 'true': [4.88, 66, 129]}]]
[{'': [0.21396093682976786, -2.333734112987574e-16], 'false,true': [-6.938893903907228e-18, -1.9984014443252818e-16], 'false': [-2.333734112987574e-16, nan], 'false,true,true': [nan, -6.938893903907228e-18]}, {'': [0.22897499999999563, 4.140078627187793e-06], 'false': [4.140078627187793e-06, nan], 'true': [0.22897499999999563, nan], 'true,true': [0.009614478273161574, 0.20087150600488954], 'false,true,true': [0.0, 3.7007434154171884e-18], 'false,true': [3.738483698653397e-05, -1.2761184191093753e-17]}, {'': [0.17783220544312656, 8.285922938330952e-07], 'false,true': [1.07240758748998e-05, -1.850371707708594e-17], 'false': [8.285922938330952e-07, nan], 'false,true,true': [0.0, 9.912705577010326e-18], 'true': [0.17783220544312656, nan]}, {'': [0.17671858286428643, 6.245435471797103e-07], 'true,true': [0.002733779542396644, 0.16844402127819488], 'false': [6.245435471797103e-07, nan], 'true,true,true': [0.0, 1.3877787807814457e-17], 'true': [0.17671858286428643, nan]}, {'': [0.16426992805008395, 4.791920555880451e-07], 'false,true': [4.241546659588334e-06, -4.907063092265885e-17], 'false': [4.791920555880451e-07, nan], 'false,true,false': [nan, -4.907063092265885e-17]}, {'': [0.16848270266170634, 8.785402434347592e-07], 'false': [8.785402434347592e-07, nan], 'true': [0.16848270266170634, nan]}, {'': [0.16921859672036832, 1.1747378839798041e-06], 'false': [1.1747378839798041e-06, nan], 'true': [0.16921859672036832, nan]}, {'': [0.1735087689706057, 1.001934231821314e-06], 'false': [1.001934231821314e-06, nan], 'true,true,true': [0.0, 5.572884202040001e-16], 'true': [0.1735087689706057, nan], 'true,true,false': [2.2204460492503132e-17, 0.20214843750000053], 'true,true': [0.012573968677646947, 0.19307587956144173]}, {'': [0.0741846607311651, nan], 'true,false': [0.01323270836164869, 0.07548193544676242], 'true,false,true': [3.047671047990626e-16, 2.7755575615628915e-18], 'true': [0.013425101361850733, 0.07531478830799994], 'true,true,false': [0.0, 0.0], 'true,true': [0.0017333794729356268, 9.025671166273258e-06], 'true,false,false': [0.22633136094674575, -4.981769982292369e-18]}, {'': [0.12211520385650021, 2.2330617880453782e-07], 'false,true': [1.8041141976460822e-06, 7.226303710577942e-18], 'false': [2.2330617880453782e-07, nan], 'false,true,true': [0.0, 2.523234146875356e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048768;  // std dev = 6,14e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.14185106490048824;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(A) )
%   | | then return -0.1254446385283916;  // std dev = 0,000, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462838;  // std dev = 3,25e-08, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.5553664367462836;  // std dev = 3,65e-08, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360614;  // std dev = 3,95e-09, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.11231637819360613;  // std dev = 5,74e-09, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.4175135841583106;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.10159632948783652;  // std dev = 0,000, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.32071184716014994;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else if ( female(B) )
%   | | then return -0.092691276189261;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,29e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 1,32e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253565;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.20975771563253595;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109168;  // std dev = 2,11e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.17709649774527725;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.07324622576333702;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.0684269778442027;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936713;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | | else return -0.06842697784420265;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.1306267744998835;  // std dev = 0,363, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return -0.06851591261434142;  // std dev = 0,018, 200,000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1350157196769804;  // std dev = 0,001, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.13415488762408345;  // std dev = 0,000601, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else if ( actor(A) )
%   | | then return -0.06418649786647547;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.06419184008202618;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06418649786647528;  // std dev = 5,87e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | | else return -0.06418649786647544;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( actor(A) )
%   | | | then return -0.06836659159246149;  // std dev = 0,030, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063405
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.001 seconds
Total inference time: 2.267 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064619
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.531 seconds
Refined model CLL: -0.064619


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063405
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.565 seconds
Total inference time: 2.267 seconds
AUC ROC: 1.0
Total revision time: 10.565
Best scored revision CLL: -0.064619


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 19:10:51
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.913, 'CLL': -0.187182, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.839}, 'Inference time': 2.267, 'CLL': -0.063405, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.565}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048843;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.1254446385283917;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.11231637819360682;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.10159632948783652;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926093;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.09269127618926055;  // std dev = 5,96e-08, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 7,60e-08, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07877675473109146;  // std dev = 7,15e-08, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.0732462257633367;  // std dev = 1,19e-07, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420261;  // std dev = 6,14e-08, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06419184008202622;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.06419184008202625;  // std dev = 1,49e-08, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.462 seconds
Total inference time: 1.297 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 19:10:55
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.297, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 2.462, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.14185106490048843;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.064 seconds
Total inference time: 0.897 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 19:10:57
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.897, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 1.064, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.49213586320408365;  // std dev = 8,427, 306,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.1418510649004882;  // std dev = 0,000, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7871555291982153;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | | else return 0.10058836501910837;  // std dev = 5,370, 134,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839136;  // std dev = 1,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.12544463852839194;  // std dev = 0,000, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.37879015948402966;  // std dev = 0,415, 283,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.11231637819360688;  // std dev = 0,000, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.4645798173951475;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.3039653746772298;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.26511719145322676;  // std dev = 0,420, 298,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783663;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20090487583549432;  // std dev = 7,192, 301,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926046;  // std dev = 1,05e-07, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1567645936555492;  // std dev = 0,412, 299,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 5,89e-09, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1527918314063677;  // std dev = 0,400, 282,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109143;  // std dev = 1,61e-09, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.4760091951431727;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.3466810977402156;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.34932906375498707;  // std dev = 1,49e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.1889039640520151;  // std dev = 5,430, 141,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.0732462257633369;  // std dev = 1,06e-07, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2981123871473134;  // std dev = 0,127, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.27282409887850434;  // std dev = 1,03e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | | | else return -0.06842697784420267;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.14196774551091734;  // std dev = 5,430, 141,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=42 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07508377817689978;  // std dev = 5,937, 290,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=194 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202622;  // std dev = 3,73e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.06419184008202625;  // std dev = 1,61e-09, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.186926
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.319 seconds
Total inference time: 2.063 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.974386
   AUC PR    = 0.838758
   CLL	      = -0.189724
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.783505
   F1        = 0.878613


Total scoring time: 2.352 seconds
Parameter learned model CLL: -0.189724


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [2.36e-08, 27, 0], 'false,true,false': [0.0, 254, 0], 'true': [8.427, 112, 194]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 152], 'true,true,false': [5.37, 92, 42], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [1.49e-08, 35, 0], 'false,true,false': [0.0, 273, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.415, 89, 194], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [1.05e-08, 23, 0], 'false,true,false': [0.0, 256, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.42, 104, 194], 'true,true,true,false': [7.45e-09, 5, 0], 'false,true': [0.0, 308, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [1.05e-07, 253, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 33, 0], 'true': [7.192, 107, 194], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.412, 105, 194], 'false,true': [5.89e-09, 301, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.4, 88, 194], 'false,true': [1.61e-09, 310, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false,false': [5.43, 99, 42], 'true,true,true,false': [0.0, 0, 152], 'true,true,false,true': [1.49e-08, 10, 0], 'false,true': [1.06e-07, 281, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.03e-07, 0, 152], 'true,false,false,false': [0.0, 250, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.127, 11, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 21, 0], 'true,true,false,false': [0.0, 19, 0], 'true,false,false,true': [5.43, 99, 42]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [3.73e-09, 25, 0], 'false,true,false': [1.61e-09, 248, 0], 'true': [5.937, 96, 194]}]]
[{'': [0.23204750309710415, -1.2509555207044018e-17], 'false,true': [2.590520390792032e-17, -1.1189649382048822e-16], 'false': [-1.2509555207044018e-17, nan], 'false,true,true': [0.0, 2.05596856412066e-17]}, {'': [0.21820137904054118, -8.881784197001253e-17], 'false': [-8.881784197001253e-17, nan], 'true': [0.21820137904054118, nan], 'true,true': [-3.3657287483373165e-15, 0.21519269325016777], 'false,true,true': [0.0, 6.3441315692866086e-18], 'false,true': [1.200241107702872e-17, -7.1574817704772e-17]}, {'': [0.17249299175813174, -1.1455304706379707e-16], 'false,true': [-4.11193712824132e-18, -9.71445146547012e-17], 'false': [-1.1455304706379707e-16, nan], 'false,true,true': [0.0, 4.827056628805028e-18], 'true': [0.17249299175813174, nan]}, {'': [0.17991862352867938, -5.0464682937507114e-17], 'true,true': [0.0035829165568871204, 0.1764616547170109], 'false': [-5.0464682937507114e-17, nan], 'true,true,true': [0.0, 1.1102230246251566e-17], 'true': [0.17991862352867938, nan]}, {'': [0.17184659098300684, 7.297969532501028e-17], 'false,true': [-5.046468293750712e-18, 4.388233298913662e-17], 'false': [7.297969532501028e-17, nan], 'false,true,false': [nan, 4.388233298913662e-17]}, {'': [0.16967778297978556, 3.540910643322758e-17], 'false': [3.540910643322758e-17, nan], 'true': [0.16967778297978556, nan]}, {'': [0.15974836917683805, 2.865091676452017e-18], 'false': [2.865091676452017e-18, nan], 'true': [0.15974836917683805, nan]}, {'': [0.17354468838695794, 4.029991050240782e-17], 'false': [4.029991050240782e-17, nan], 'true,true,true': [0.0, -9.582977686238194e-16], 'true': [0.17354468838695794, nan], 'true,true,false': [2.2204460492503132e-17, 0.20914440923494845], 'true,true': [0.008675707230281752, 0.19688529787325235]}, {'': [0.07718206975524293, nan], 'true,false': [0.012419918246088868, 0.0766673494055805], 'true,false,true': [7.011934892369409e-17, -1.982541115402065e-18], 'true': [0.012406872691280931, 0.07960798565220054], 'true,true,false': [0.0, -2.1912296538654404e-18], 'true,true': [0.0014719976757820996, -2.64338815386942e-18], 'true,false,false': [0.20914440923494793, -7.105427357601002e-18]}, {'': [0.12155582179451914, 2.805617751760323e-17], 'false,true': [-4.785444071660157e-19, 2.6860234466737657e-18], 'false': [2.805617751760323e-17, nan], 'false,true,true': [0.0, 5.551115123125783e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.14185106490048768;  // std dev = 6,83e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.1418510649004879;  // std dev = 5,16e-08, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109548;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.7016856637743364;  // std dev = 0,121, 95,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=93 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.7194734122109556;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.125444638528392;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 2,24e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.5594068471838021;  // std dev = 0,001, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360621;  // std dev = 7,60e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.2019890329052269;  // std dev = 0,100, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.11231637819360663;  // std dev = 0,000, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.19121194380258977;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.41751358415830997;  // std dev = 1,98e-07, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | | else return 0.42051770769191343;  // std dev = 0,012, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783613;  // std dev = 5,96e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.09369893438141595;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1015963294878366;  // std dev = 0,000, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601504;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.3227496666778252;  // std dev = 0,001, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926108;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.13759290830410162;  // std dev = 0,089, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.092691276189261;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.25656255259612043;  // std dev = 0,000913, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839682;  // std dev = 5,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.08518475138839689;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11062042123779237;  // std dev = 0,035, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return -0.08518475138839678;  // std dev = 3,36e-09, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 2,11e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2102688532922215;  // std dev = 0,000755, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109165;  // std dev = 4,41e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1066930253651673;  // std dev = 0,070, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109155;  // std dev = 5,16e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.07877675473109151;  // std dev = 6,41e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.0787767547310917;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.12043971885895119;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.17767560149385395;  // std dev = 0,000521, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A), director(B) )
%   | | | then return 0.17673239067504382;  // std dev = 0,004, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.07313414356536391;  // std dev = 0,011, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.08435734532566222;  // std dev = 0,044, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15318306491696104;  // std dev = 0,006, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | | | else return -0.06842697784420261;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.10337994944242351;  // std dev = 0,675, 54,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=42 */
%   | | | else return -0.06835725858268273;  // std dev = 0,015, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13602046042721896;  // std dev = 0,003, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.13498779086856835;  // std dev = 0,001, 101,000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( actor(B) )
%   | | then return -0.06420185182903985;  // std dev = 3,02e-06, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else return -0.08498250155688009;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06324150093752284;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06411264515331759;  // std dev = 0,000263, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( actor(B) )
%   | | then return -0.06419602833231296;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
%   | | else if ( actor(A) )
%   | | | then return -0.06975503407882402;  // std dev = 0,024, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06419184008202612;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063453
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.716 seconds
Total inference time: 1.729 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064651
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.08 seconds
Refined model CLL: -0.064651


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063453
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.467 seconds
Total inference time: 1.729 seconds
AUC ROC: 1.0
Total revision time: 11.467
Best scored revision CLL: -0.064651


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 19:11:13
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.729, 'parameter_0.6': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.063, 'CLL': -0.186926, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.319}, 'CLL': -0.063453, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.467}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.14185106490048788;  // std dev = 4,21e-08, 341,000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839202;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.11231637819360651;  // std dev = 0,000, 388,000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.10159632948783641;  // std dev = 4,21e-08, 395,000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.09269127618926058;  // std dev = 1,19e-07, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 1,12e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07877675473109147;  // std dev = 2,98e-08, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07324622576333709;  // std dev = 7,45e-08, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.06842697784420321;  // std dev = 0,000, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06419184008202601;  // std dev = 1,10e-07, 343,000 (wgt'ed) examples reached here.  /* #neg=343 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.197 seconds
Total inference time: 1.474 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 19:11:18
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.474, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 3.197, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.14185106490048768;  // std dev = 1,81e-07, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.375 seconds
Total inference time: 1.009 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 19:11:21
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 1.009, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 1.375, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5415262438066322;  // std dev = 9,056, 379,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.14185106490048746;  // std dev = 1,34e-08, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7600716727376599;  // std dev = 1,981, 214,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=210 */
%   | | else return 0.04506760934879285;  // std dev = 5,996, 184,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.1254446385283922;  // std dev = 0,000, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3492774299997963;  // std dev = 0,421, 393,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.462787772053749;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.29647746076869314;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.2916454647697255;  // std dev = 0,407, 381,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783581;  // std dev = 2,48e-07, 417,000 (wgt'ed) examples reached here.  /* #neg=417 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19656572925343027;  // std dev = 8,207, 402,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926043;  // std dev = 1,99e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.14526744831213623;  // std dev = 0,410, 405,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 6,59e-09, 423,000 (wgt'ed) examples reached here.  /* #neg=423 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12782061192504404;  // std dev = 0,402, 394,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109143;  // std dev = 1,09e-08, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.4644951982353571;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.35156330180850165;  // std dev = 5,96e-08, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3338212432669977;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.20801091485712508;  // std dev = 5,996, 184,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.0732462257633377;  // std dev = 0,000, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2838100316411445;  // std dev = 0,156, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.27613042901179347;  // std dev = 2,80e-07, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.12772890264060693;  // std dev = 5,877, 166,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=49 */
%   | | | else return -0.0684269778442031;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08279769200387348;  // std dev = 6,582, 381,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=259 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.06419184008202578;  // std dev = 8,43e-09, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.18207
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.558 seconds
Total inference time: 2.203 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.977636
   AUC PR    = 0.859684
   CLL	      = -0.184708
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.810811
   F1        = 0.895522


Total scoring time: 3.574 seconds
Parameter learned model CLL: -0.184708


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [3.8e-08, 37, 0], 'false,true,false': [1.34e-08, 370, 0], 'true': [9.056, 120, 259]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.981, 4, 210], 'true,true,false': [5.996, 135, 49], 'false,true,true,true': [0.0, 9, 0], 'false,true,true,false': [0.0, 39, 0], 'false,true,false': [0.0, 342, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.421, 134, 259], 'false,true,true,true': [2.63e-09, 3, 0], 'false,true,true,false': [0.0, 34, 0], 'false,true,false': [0.0, 363, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.407, 122, 259], 'true,true,true,false': [0.0, 16, 0], 'false,true': [2.48e-07, 417, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [1.99e-07, 336, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 42, 0], 'true': [8.207, 143, 259], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.41, 146, 259], 'false,true': [6.59e-09, 423, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.402, 135, 259], 'false,true': [1.09e-08, 358, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 3, 0], 'true,true,false,false': [5.996, 135, 49], 'true,true,true,false': [5.96e-08, 0, 210], 'true,true,false,true': [0.0, 16, 0], 'false,true': [0.0, 378, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [2.8e-07, 0, 210], 'true,false,false,false': [0.0, 319, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.156, 18, 0], 'true,true,false,true': [2.63e-09, 7, 0], 'true,false,true,false': [0.0, 29, 0], 'true,true,false,false': [0.0, 39, 0], 'true,false,false,true': [5.877, 117, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 34, 0], 'false,true,false': [8.43e-09, 346, 0], 'true': [6.582, 122, 259]}]]
[{'': [0.21637276265133581, 2.2150170858047134e-16], 'false,true': [4.2700885562506023e-17, 1.848371305862423e-16], 'false': [2.2150170858047134e-16, nan], 'false,true,true': [0.0, 3.900783600034334e-17]}, {'': [0.2272733011792688, -1.2753331154668464e-16], 'false': [-1.2753331154668464e-16, nan], 'true': [0.2272733011792688, nan], 'true,true': [0.018342213293737256, 0.1953863421550102], 'false,true,true': [0.0, -2.2773805633336544e-17], 'false,true': [-1.850371707708594e-17, -1.1686558153949016e-16]}, {'': [0.1774755635063832, -1.9984014443252817e-17], 'false,true': [-9.00180830777154e-18, -2.9361270072731413e-17], 'false': [-1.9984014443252817e-17, nan], 'false,true,true': [2.3129646346357427e-18, -1.1428766429964846e-17], 'true': [0.1774755635063832, nan]}, {'': [0.17430650132805528, 1.4696477448275453e-16], 'true,true': [0.002731764902689609, 0.1658124333396482], 'false': [1.4696477448275453e-16, nan], 'true,true,true': [0.0, 0.0], 'true': [0.17430650132805528, nan]}, {'': [0.16753682418479124, 7.988906420583137e-17], 'false,true': [-6.6084703846735505e-18, 1.176307728471892e-16], 'false': [7.988906420583137e-17, nan], 'false,true,false': [nan, 1.176307728471892e-16]}, {'': [0.16778868012289574, 4.409396409858778e-17], 'false': [4.409396409858778e-17, nan], 'true': [0.16778868012289574, nan]}, {'': [0.16167158915903626, 1.1908537470839668e-16], 'false': [1.1908537470839668e-16, nan], 'true': [0.16167158915903626, nan]}, {'': [0.17018643646508852, -6.226647651336856e-17], 'false': [-6.226647651336856e-17, nan], 'true,true,true': [0.0, 1.6917684184764292e-17], 'true': [0.17018643646508852, nan], 'true,true,false': [-9.71445146547012e-17, 0.19538634215500944], 'true,true': [0.009247491228837156, 0.18092039315347525]}, {'': [0.07176065409287814, nan], 'true,false': [0.012657404847809707, 0.07200023135518091], 'true,false,true': [3.721890520648144e-16, -5.742532885992189e-18], 'true': [0.009760107333583928, 0.07548822186752215], 'true,true,false': [9.912705577010326e-19, 0.0], 'true,true': [0.0013598920762861362, 2.413528314402514e-18], 'true,false,false': [0.20804906372477774, -6.473400707845741e-17]}, {'': [0.11370833155692238, 9.020562075079397e-17], 'false,true': [-1.460819769243627e-18, 7.187571026475002e-17], 'false': [9.020562075079397e-17, nan], 'false,true,true': [0.0, -8.163404592832033e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1418510649004879;  // std dev = 0,000, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.1418510649004876;  // std dev = 2,09e-07, 341,000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839122;  // std dev = 5,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.12544463852839116;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.12544463852839216;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,15e-08, 118,000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.5553664367462834;  // std dev = 4,15e-08, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.11231637819360663;  // std dev = 0,000, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( female(B) )
%   | then return -0.10159632948783644;  // std dev = 0,000, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else return -0.10159632948783658;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014983;  // std dev = 5,27e-09, 118,000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.32071184716014944;  // std dev = 1,86e-08, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.09269127618926087;  // std dev = 4,21e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.25517224256948934;  // std dev = 5,27e-09, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 1,61e-09, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.08518475138839679;  // std dev = 3,23e-09, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.08518475138839678;  // std dev = 3,23e-09, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 3,09e-09, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 3,80e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253526;  // std dev = 1,29e-08, 118,000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.20975771563253526;  // std dev = 1,94e-08, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07877675473109172;  // std dev = 2,47e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( actor(B) )
%   | then return -0.07877675473109143;  // std dev = 1,61e-09, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
%   | else if ( actor(A) )
%   | | then return -0.0787767547310917;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.0787767547310917;  // std dev = 9,31e-10, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1770964977452774;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   | else if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333688;  // std dev = 6,50e-08, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | | else return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333698;  // std dev = 2,98e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | | else return -0.07324622576333675;  // std dev = 9,19e-08, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936715;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #pos=210 */
%   | | | else return -0.06842697784420264;  // std dev = 1,29e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.11219587150506075;  // std dev = 0,663, 60,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=49 */
%   | | | else return -0.0684682468790706;  // std dev = 0,018, 431,000 (wgt'ed) examples reached here.  /* #neg=431 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.13562593806834583;  // std dev = 0,002, 118,000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.1343118669512867;  // std dev = 0,001, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0641893610441952;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | | else return -0.06419164938680841;  // std dev = 2,38e-06, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.07425905338283971;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( actor(B) )
%   | | then return -0.06418936104419494;  // std dev = 4,47e-09, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | | else if ( actor(A) )
%   | | | then return -0.06610343910746017;  // std dev = 0,028, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.06419184008202615;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063412
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.366 seconds
Total inference time: 1.873 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064602
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.009 seconds
Refined model CLL: -0.064602


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063412
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.507 seconds
Total inference time: 1.873 seconds
AUC ROC: 1.0
Total revision time: 14.507
Best scored revision CLL: -0.064602


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 19:11:40
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.873, 'parameter_0.8': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.203, 'CLL': -0.18207, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.558}, 'CLL': -0.063412, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.507}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.14185106490048724;  // std dev = 2,98e-07, 456,000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.12544463852839227;  // std dev = 0,000, 462,000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.11231637819360608;  // std dev = 0,000, 446,000 (wgt'ed) examples reached here.  /* #neg=446 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.10159632948783591;  // std dev = 2,38e-07, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.0926912761892611;  // std dev = 1,03e-07, 448,000 (wgt'ed) examples reached here.  /* #neg=448 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839678;  // std dev = 1,33e-07, 504,000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07877675473109189;  // std dev = 0,000, 486,000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.07324622576333718;  // std dev = 2,11e-08, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.0684269778442027;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06842697784420346;  // std dev = 0,000, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.0641918400820257;  // std dev = 1,92e-07, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.832 seconds
Total inference time: 1.539 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 19:11:46
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.539, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 3.832, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004872;  // std dev = 2,86e-07, 454,000 (wgt'ed) examples reached here.  /* #neg=454 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( actor(A) )
%   | | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.444 seconds
Total inference time: 0.832 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 19:11:48
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.832, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 1.444, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.49096143509950796;  // std dev = 10,907, 512,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.14185106490048727;  // std dev = 1,48e-08, 416,000 (wgt'ed) examples reached here.  /* #neg=416 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7798615918194899;  // std dev = 1,409, 267,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=265 */
%   | | else return 0.06565411531606181;  // std dev = 6,525, 212,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839127;  // std dev = 3,65e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.12544463852839227;  // std dev = 0,000, 416,000 (wgt'ed) examples reached here.  /* #neg=416 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3660798152906316;  // std dev = 0,417, 483,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.11231637819360618;  // std dev = 0,000, 407,000 (wgt'ed) examples reached here.  /* #neg=407 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.4593158560953007;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.2937366361058689;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.3035373653926397;  // std dev = 0,403, 469,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783542;  // std dev = 3,44e-07, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19362364962045614;  // std dev = 9,207, 505,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926108;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926111;  // std dev = 1,01e-07, 435,000 (wgt'ed) examples reached here.  /* #neg=435 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.122167468012449;  // std dev = 0,415, 529,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 6,78e-09, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09789653944235842;  // std dev = 0,414, 524,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109187;  // std dev = 7,85e-09, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.44800728462221556;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3649072441689363;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3192211009468898;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.18817593846655653;  // std dev = 6,554, 217,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333752;  // std dev = 0,000, 467,000 (wgt'ed) examples reached here.  /* #neg=467 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.27052711589442285;  // std dev = 0,136, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420271;  // std dev = 9,13e-09, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.28515453830916704;  // std dev = 3,72e-07, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | | else return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.11732309735355617;  // std dev = 6,443, 199,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=59 */
%   | | | else return -0.06842697784420333;  // std dev = 0,000, 390,000 (wgt'ed) examples reached here.  /* #neg=390 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06588976524717685;  // std dev = 7,638, 500,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=324 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.06419184008202551;  // std dev = 1,04e-08, 434,000 (wgt'ed) examples reached here.  /* #neg=434 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.177719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.377 seconds
Total inference time: 1.519 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.978798
   AUC PR    = 0.865522
   CLL	      = -0.179245
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total scoring time: 2.612 seconds
Parameter learned model CLL: -0.179245


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.49e-08, 35, 0], 'false,true,false': [1.48e-08, 416, 0], 'true': [10.907, 188, 324]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.409, 2, 265], 'true,true,false': [6.525, 153, 59], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [3.65e-08, 43, 0], 'false,true,false': [0.0, 416, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.417, 159, 324], 'false,true,true,true': [0.0, 6, 0], 'false,true,true,false': [0.0, 29, 0], 'false,true,false': [0.0, 407, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.403, 145, 324], 'true,true,true,false': [1.83e-08, 10, 0], 'false,true': [3.44e-07, 493, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [1.01e-07, 435, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [1.29e-08, 45, 0], 'true': [9.207, 181, 324], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.415, 205, 324], 'false,true': [6.78e-09, 472, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.414, 200, 324], 'false,true': [7.85e-09, 465, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [1.05e-08, 3, 0], 'true,true,false,false': [6.554, 158, 59], 'true,true,true,false': [0.0, 0, 265], 'true,true,false,true': [2.11e-08, 16, 0], 'false,true': [0.0, 467, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [3.72e-07, 0, 265], 'true,false,false,false': [0.0, 390, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.136, 16, 0], 'true,true,false,true': [0.0, 3, 0], 'true,false,true,false': [7.45e-09, 43, 0], 'true,true,false,false': [9.13e-09, 46, 0], 'true,false,false,true': [6.443, 140, 59]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.32e-09, 3, 0], 'false,true,true,false': [0.0, 46, 0], 'false,true,false': [1.04e-08, 434, 0], 'true': [7.638, 176, 324]}]]
[{'': [0.23236083984375266, 1.8863966436108854e-16], 'false,true': [3.700743415417188e-17, 2.135044278125301e-16], 'false': [1.8863966436108854e-16, nan], 'false,true,true': [0.0, 3.489272363107635e-17]}, {'': [0.21887979916405262, -1.345724878333523e-16], 'false': [-1.345724878333523e-16, nan], 'true': [0.21887979916405262, nan], 'true,true': [0.00743452706588302, 0.20084994660021466], 'false,true,true': [0.0, 3.0982968129074136e-17], 'false,true': [4.102998134484274e-17, -1.2810265668751805e-16]}, {'': [0.1735191836102483, -1.2056720629413465e-17], 'false,true': [-1.2688263138573217e-17, -1.7458052475678137e-17], 'false': [-1.2056720629413465e-17, nan], 'false,true,true': [0.0, -7.656710514656252e-18], 'true': [0.1735191836102483, nan]}, {'': [0.1671955773643846, 2.3960999963512507e-16], 'true,true': [0.0022658246357280076, 0.16247140060957624], 'false': [2.3960999963512507e-16, nan], 'true,true,true': [0.0, 3.3306690738754695e-17], 'true': [0.1671955773643846, nan]}, {'': [0.1678443839137288, -1.4802973661668754e-17], 'false,true': [3.7007434154171884e-18, 2.3480578911612506e-17], 'false': [-1.4802973661668754e-17, nan], 'false,true,false': [nan, 2.3480578911612506e-17]}, {'': [0.17259719743570406, 4.6102481531044636e-17], 'false': [4.6102481531044636e-17, nan], 'true': [0.17259719743570406, nan]}, {'': [0.17147286524837055, 6.112195576430969e-17], 'false': [6.112195576430969e-17, nan], 'true': [0.17147286524837055, nan]}, {'': [0.1662433343212134, -3.898856017955582e-17], 'false': [-3.898856017955582e-17, nan], 'true,true,true': [3.700743415417188e-17, -3.2175520109891327e-16], 'true': [0.1662433343212134, nan], 'true,true,false': [2.7755575615628914e-17, 0.19796555458812048], 'true,true': [0.007314544925654003, 0.18546962528862446]}, {'': [0.07173600579046734, nan], 'true,false': [0.015017305091518251, 0.07100605628899972], 'true,false,true': [5.228522017857341e-16, 1.290957005378089e-18], 'true': [0.007865110131504269, 0.0749757078636535], 'true,true,false': [-5.782411586589357e-19, 1.8101462358018856e-18], 'true,true': [0.0011615664600670705, 2.832201593431522e-18], 'true,false,false': [0.20858059139920723, -1.08744921899182e-16]}, {'': [0.1166682477356359, 1.2320487395426167e-16], 'false,true': [-2.2657612747452172e-18, 1.0846418489425492e-16], 'false': [1.2320487395426167e-16, nan], 'false,true,true': [5.782411586589357e-19, -1.8101462358018856e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1418510649004881;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.14185106490048743;  // std dev = 2,02e-07, 473,000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.1254446385283923;  // std dev = 0,000, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360626;  // std dev = 8,82e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | | else return -0.11231637819360633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.11231637819360633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11231637819360608;  // std dev = 0,000, 428,000 (wgt'ed) examples reached here.  /* #neg=428 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783645;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
%   else if ( female(B) )
%   | then return -0.10159632948783652;  // std dev = 0,000, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else return -0.10159632948783663;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.09269127618926078;  // std dev = 1,65e-07, 385,000 (wgt'ed) examples reached here.  /* #neg=385 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( female(B) )
%   | | | then return -0.0926912761892609;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09269127618926089;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.255172242569489;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.2551722425694886;  // std dev = 1,12e-08, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 3,09e-09, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,83e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 6,99e-08, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | | | else return -0.08518475138839678;  // std dev = 7,74e-08, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.08518475138839679;  // std dev = 2,46e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253504;  // std dev = 1,77e-08, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.20975771563253498;  // std dev = 1,94e-08, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109166;  // std dev = 3,49e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109212;  // std dev = 0,000, 510,000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333702;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return 0.17709649774527725;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | | else return 0.17709649774527772;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( genre(A, F) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333692;  // std dev = 4,71e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | | else return 0.17709649774527733;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   else if ( actor(A) )
%   | then return -0.07324622576333725;  // std dev = 0,000, 439,000 (wgt'ed) examples reached here.  /* #neg=439 */
%   | else return -0.07324622576333703;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420262;  // std dev = 2,46e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.06842697784420268;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.11801455327697961;  // std dev = 0,885, 121,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=102 */
%   | | | else return 0.1164491568115585;  // std dev = 1,144, 195,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=163 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.11798844101771928;  // std dev = 0,673, 70,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=59 */
%   | | | else return -0.06849605339382593;  // std dev = 0,025, 515,000 (wgt'ed) examples reached here.  /* #neg=515 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13808980263210324;  // std dev = 1,45e-06, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.13826363894916857;  // std dev = 4,46e-05, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06418769075248319;  // std dev = 0,000, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | | else return -0.0641912868380871;  // std dev = 5,46e-06, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07377847988568455;  // std dev = 0,008, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( actor(B) )
%   | | then return -0.06418769075248319;  // std dev = 0,000, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
%   | | else if ( female(A) )
%   | | | then return -0.07634338333786332;  // std dev = 3,22e-06, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07627318934423799;  // std dev = 0,000335, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06401
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.501 seconds
Total inference time: 1.897 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065408
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.781 seconds
Refined model CLL: -0.065408


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06401
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.271 seconds
Total inference time: 1.897 seconds
AUC ROC: 1.0
Total revision time: 13.271
Best scored revision CLL: -0.065408


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 19:12:06
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.519, 'CLL': -0.177719, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.377}, 'Inference time': 1.897, 'CLL': -0.06401, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.271}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048818;  // std dev = 0,000, 576,000 (wgt'ed) examples reached here.  /* #neg=576 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1254446385283923;  // std dev = 0,000, 584,000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.11231637819360572;  // std dev = 0,000, 594,000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10159632948783573;  // std dev = 3,00e-07, 548,000 (wgt'ed) examples reached here.  /* #neg=548 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.0926912761892617;  // std dev = 0,000, 594,000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839678;  // std dev = 1,49e-07, 610,000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109179;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07877675473109248;  // std dev = 0,000, 607,000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527653;  // std dev = 2,73e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07324622576333704;  // std dev = 1,03e-07, 575,000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420361;  // std dev = 0,000, 601,000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0641918400820254;  // std dev = 2,48e-07, 611,000 (wgt'ed) examples reached here.  /* #neg=611 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.11 seconds
Total inference time: 1.261 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 19:12:11
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.261, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 4.11, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048835;  // std dev = 0,000, 582,000 (wgt'ed) examples reached here.  /* #neg=582 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.523 seconds
Total inference time: 0.863 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 19:12:14
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.863, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 1.523, 'F1': nan}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5248156017661789;  // std dev = 3,651, 60,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 7,68e-09, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7816289395752953;  // std dev = 1,46e-07, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return -0.1558710604247047;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.34380734509074634;  // std dev = 0,390, 61,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.2521368306641619;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.34768690917243594;  // std dev = 0,343, 53,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783624;  // std dev = 2,79e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14395610785469104;  // std dev = 3,122, 67,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.21156516852047333;  // std dev = 0,344, 55,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839679;  // std dev = 3,36e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.06512561839207817;  // std dev = 0,380, 66,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109175;  // std dev = 2,79e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3501031823703004;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3754858162229727;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333704;  // std dev = 1,05e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2852150951820335;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.09695763500619678;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.27514191480508815;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.277499403658535;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07403682321476464;  // std dev = 1,876, 59,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=40 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08879375275027283;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.147561
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 1.299 seconds
Total inference time: 1.834 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.996919
   AUC PR    = 0.987775
   CLL	      = -0.137493
   Precision = 0.95122 at threshold = 0.5
   Recall    = 0.975
   F1        = 0.962963


Total scoring time: 1.641 seconds
Parameter learned model CLL: -0.137493


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,false': [7.68e-09, 55, 0], 'true': [3.651, 20, 40]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.46e-07, 0, 39], 'true,true,false': [0.968, 15, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false': [0.0, 62, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.39, 21, 40], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 5, 0], 'false,true,false': [0.0, 40, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false': [0.343, 13, 40], 'true,true,true,false': [0.0, 2, 0], 'false,true': [2.79e-08, 52, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [0.0, 48, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [1.86e-09, 3, 0], 'true': [3.122, 27, 40], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.344, 15, 40], 'false,true': [3.36e-09, 43, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.38, 26, 40], 'false,true': [2.79e-09, 58, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,false': [0.977, 21, 1], 'true,true,true,false': [0.0, 0, 39], 'true,true,false,true': [0.0, 0, 0], 'false,true': [1.05e-08, 49, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 39], 'true,false,false,false': [1.67e-08, 54, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 3, 0], 'true,true,false,false': [0.0, 3, 0], 'true,false,false,true': [0.972, 17, 1]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 6, 0], 'false,true,false': [0.0, 54, 0], 'true': [1.876, 19, 40]}]]
[{'': [0.22222222222222296, 6.39789539614497e-17], 'false,true': [0.0, 6.055761952500853e-17], 'false': [6.39789539614497e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.19834710743801717, -3.8163916471489756e-17], 'false': [-3.8163916471489756e-17, nan], 'true': [0.19834710743801717, nan], 'true,true': [5.465713352000771e-16, 0.05859375], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -4.118569284899774e-17]}, {'': [0.15180177295336691, 7.401486830834377e-18], 'false,true': [0.0, -5.551115123125783e-18], 'false': [7.401486830834377e-18, nan], 'false,true,true': [nan, 0.0], 'true': [0.15180177295336691, nan]}, {'': [0.12607215756657017, 1.4945309946877107e-17], 'true,true': [0.0, 0.11774637860668583], 'false': [1.4945309946877107e-17, nan], 'true,true,true': [nan, 0.0], 'true': [0.12607215756657017, nan]}, {'': [0.14549731440090183, -1.7415263131375004e-17], 'false,true': [1.1564823173178713e-18, -1.9660199394403815e-17], 'false': [-1.7415263131375004e-17, nan], 'false,true,false': [nan, -1.9660199394403815e-17]}, {'': [0.11824829442039486, 1.1618613048402802e-17], 'false': [1.1618613048402802e-17, nan], 'true': [0.11824829442039486, nan]}, {'': [0.14453523433522744, 7.656710514656252e-18], 'false': [7.656710514656252e-18, nan], 'true': [0.14453523433522744, nan]}, {'': [0.13704557740767517, 2.2657612747452172e-18], 'false': [2.2657612747452172e-18, nan], 'true,true,true': [nan, -2.9605947323337506e-16], 'true': [0.13704557740767517, nan], 'true,true,false': [nan, 0.043388429752066256], 'true,true': [-2.9605947323337506e-16, 0.043388429752066256]}, {'': [0.047431494202459935, nan], 'true,false': [0.00782915608138459, 0.021313148807346614], 'true,false,true': [-1.1386902816668272e-17, -5.782411586589357e-19], 'true': [0.008747551072434384, 0.04842381948687046], 'true,true,false': [0.0, -5.782411586589357e-19], 'true,true': [0.0, 0.00019535961554285747], 'true,false,false': [0.052469135802469175, 5.13992141030165e-18]}, {'': [0.05968097116319916, 9.759539482974582e-06], 'false,true': [7.411274778808461e-05, -3.0839528461809902e-18], 'false': [9.759539482974582e-06, nan], 'false,true,true': [0.0, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.719473412210955;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.00474205985134197;  // std dev = 0,782, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12492531866317329;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.564053967024504;  // std dev = 0,037, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1077761640738005;  // std dev = 0,011, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return 0.41751358415830986;  // std dev = 4,71e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.4248277606051158;  // std dev = 0,174, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( female(B) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09217286110360007;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10247879064952374;  // std dev = 0,010, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601496;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.326298650558741;  // std dev = 0,038, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09066897929805655;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694895;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.2593956933808645;  // std dev = 0,035, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.0851847513883968;  // std dev = 1,39e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.08518475138839686;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.07797169214861073;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08881578082979899;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.2097577156325356;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.21300891853562476;  // std dev = 0,032, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( female(A) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527744;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.17290069738121439;  // std dev = 3,23e-09, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07482661270211353;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.04407868860204015;  // std dev = 0,362, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return -0.0771768107477963;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.15127134301121706;  // std dev = 0,010, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( movie(H, B), movie(H, A) )
%   | | | then return -0.046796252158837884;  // std dev = 0,369, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.06842697784420268;  // std dev = 1,97e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06550353880285432;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06550353880285432;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.06582384582665368;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0727710350907299;  // std dev = 0,005, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return 0.1341780062390338;  // std dev = 3,73e-09, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.14128791044717623;  // std dev = 0,042, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090059
   Precision = 0.757447 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.861985


Total learning time: 3.447 seconds
Total inference time: 1.905 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 1.52 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090059
   Precision = 0.757447 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.861985


Total learning time: 7.907 seconds
Total inference time: 1.905 seconds
AUC ROC: 1.0
Total revision time: 7.907
Best scored revision CLL: -0.065435


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 19:12:26
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.757447, 0.5], 'Inference time': 1.905, 'CLL': -0.090059, 'Recall': 1.0, 'F1': 0.861985, 'Learning time': 7.907, 'parameter_0.2': {'AUC PR': 0.81824, 'AUC ROC': 0.97199, 'Precision': [0.693548, 0.5], 'Inference time': 1.834, 'CLL': -0.147561, 'Recall': 0.724719, 'F1': 0.708791, 'Learning time': 1.299}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048768;  // std dev = 6,50e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6,32e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.5219822959992901;  // std dev = 0,146, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783619;  // std dev = 4,47e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4213803454569292;  // std dev = 0,026, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.17739380982627936;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 5,48e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( female(A) )
%   | then return 0.29824572111582714;  // std dev = 0,099, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.32717611857843554;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2591294574439967;  // std dev = 0,003, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.19862758814636403;  // std dev = 0,000657, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08678111004989647;  // std dev = 0,113, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0786609832943605;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21254920727374205;  // std dev = 0,002, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.16892476510797602;  // std dev = 0,000560, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07314578518321282;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17914125697626987;  // std dev = 0,002, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14673905718137403;  // std dev = 0,000611, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06833905315863859;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0.1473714291052802;  // std dev = 0,280, 41,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06411425839834016;  // std dev = 3,25e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( female(A) )
%   | then return 0.12292283095786286;  // std dev = 0,059, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.122162461568005;  // std dev = 0,062, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10685
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.017 seconds
Total inference time: 1.372 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 19:12:30
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.372, 'CLL': -0.10685, 'Recall': 1.0, 'Learning time': 2.017, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( female(A) )
%   | then return 0.8126943896449667;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.8081489350995122;  // std dev = 0,218, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */


Results
   AUC ROC   = 0.891758
   AUC PR    = 0.203944
   CLL	      = -0.235043
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.802 seconds
Total inference time: 0.859 seconds
AUC ROC: 0.891758


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 19:12:32
{'AUC PR': 0.203944, 'AUC ROC': 0.891758, 'Precision': [nan, 0.5], 'Inference time': 0.859, 'CLL': -0.235043, 'Recall': 0.0, 'Learning time': 0.802, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5113747415511237;  // std dev = 5,300, 124,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048763;  // std dev = 8,93e-09, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7839144090131654;  // std dev = 1,69e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | else return -0.1371382225657812;  // std dev = 1,662, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3183073320897032;  // std dev = 0,402, 130,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360618;  // std dev = 8,33e-09, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.24834544514889423;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.2634287667209671;  // std dev = 0,387, 127,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.1015963294878364;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23994645012931576;  // std dev = 3,986, 119,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09516320318035652;  // std dev = 0,012, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926089;  // std dev = 6,32e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1574920667044957;  // std dev = 0,371, 125,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08516942465349935;  // std dev = 5,21e-05, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.13712533398755233;  // std dev = 0,365, 121,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877118023123872;  // std dev = 3,40e-05, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.35169678795761783;  // std dev = 4,21e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.30550098453860053;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.3442983217491815;  // std dev = 1,662, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07323861869686771;  // std dev = 0,000431, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2447634591889344;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06827138693811098;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2762207878956378;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | | else return -0.06842879512042689;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2671423137325432;  // std dev = 1,666, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | | else return -0.068428795120427;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08818149275571198;  // std dev = 2,692, 115,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=81 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06405454436355285;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06419344346385196;  // std dev = 4,17e-09, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.149754
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 1.887 seconds
Total inference time: 1.674 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.995436
   AUC PR    = 0.9728
   CLL	      = -0.141682
   Precision = 0.95122 at threshold = 0.5
   Recall    = 0.962963
   F1        = 0.957055


Total scoring time: 2.231 seconds
Parameter learned model CLL: -0.141682


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 5, 0], 'false,true,false': [8.93e-09, 99, 0], 'true': [5.3, 43, 81]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.69e-07, 0, 78], 'true,true,false': [1.662, 35, 3], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 9, 0], 'false,true,false': [0.0, 101, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.402, 49, 81], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 3, 0], 'false,true,false': [8.33e-09, 114, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false': [0.387, 46, 81], 'true,true,true,false': [0.0, 5, 0], 'false,true': [0.0, 128, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [6.32e-08, 109, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.012, 8, 0], 'true': [3.986, 38, 81], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.371, 44, 81], 'false,true': [5.21e-05, 113, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.365, 40, 81], 'false,true': [3.4e-05, 134, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,false': [1.662, 35, 3], 'true,true,true,false': [4.21e-08, 0, 78], 'true,true,false,true': [0.0, 5, 0], 'false,true': [0.000431, 130, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 78], 'true,false,false,false': [0.0, 105, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 4, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [1.86e-09, 6, 0], 'true,true,false,false': [1.86e-09, 5, 0], 'true,false,false,true': [1.666, 37, 3]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 6, 0], 'false,true,false': [4.17e-09, 135, 0], 'true': [2.692, 34, 81]}]]
[{'': [0.22652185223725438, 7.190015778524824e-17], 'false,true': [-6.938893903907228e-18, 8.074349270001139e-17], 'false': [7.190015778524824e-17, nan], 'false,true,true': [0.0, -2.7755575615628915e-18]}, {'': [0.21068668252080955, -6.00120553851436e-18], 'false': [-6.00120553851436e-18, nan], 'true': [0.21068668252080955, nan], 'true,true': [3.643808901333847e-16, 0.07271468144044316], 'false,true,true': [0.0, 0.0], 'false,true': [2.7755575615628915e-18, -1.0992307174506501e-17]}, {'': [0.1619335152030607, 7.021923403612101e-17], 'false,true': [2.3129646346357427e-18, 6.817158923136926e-17], 'false': [7.021923403612101e-17, nan], 'false,true,true': [nan, 2.3129646346357427e-18], 'true': [0.1619335152030607, nan]}, {'': [0.15357308862517025, -3.2959746043559335e-17], 'true,true': [0.0, 0.1496983321585678], 'false': [-3.2959746043559335e-17, nan], 'true,true,true': [nan, 0.0], 'true': [0.15357308862517025, nan]}, {'': [0.13349099124603506, 1.6426588371678123e-06], 'false,true': [1.8331269147922602e-05, 3.66679164096382e-17], 'false': [1.6426588371678123e-06, nan], 'false,true,false': [nan, 3.66679164096382e-17]}, {'': [0.13796262053679445, 2.714501752187019e-09], 'false': [2.714501752187019e-09, nan], 'true': [0.13796262053679445, nan]}, {'': [0.13308687780629058, 1.1535972094659658e-09], 'false': [1.1535972094659658e-09, nan], 'true': [0.13308687780629058, nan]}, {'': [0.13242684397384372, 1.4314830654171828e-09], 'false': [1.4314830654171828e-09, nan], 'true,true,true': [nan, 2.2773805633336544e-17], 'true': [0.13242684397384372, nan], 'true,true,false': [0.0, 0.07271468144044348], 'true,true': [2.2773805633336544e-17, 0.06441416106807175]}, {'': [0.051880952856239324, nan], 'true,false': [0.007878486509953434, 0.027025953027951244], 'true,false,true': [-2.049642507000289e-16, 5.782411586589357e-19], 'true': [0.007691222609232061, 0.052637883875770966], 'true,true,false': [nan, 6.938893903907229e-19], 'true,true': [0.0, 6.938893903907229e-19], 'true,false,false': [0.06937500000000012, -2.3790493384824782e-17]}, {'': [0.06303809733870841, 7.860418486317899e-10], 'false,true': [1.1564823173178713e-18, 1.7270135938613546e-17], 'false': [7.860418486317899e-10, nan], 'false,true,true': [nan, 1.1564823173178713e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;false,false;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.14185106490048763;  // std dev = 8,69e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109547;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return 0.6956638884014311;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0.7194734122109544;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1254446385283913;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462842;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return 0.5610980189864365;  // std dev = 0,000895, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.19392783022639956;  // std dev = 0,283, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360643;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360647;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.11231637819360644;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.24304964938045792;  // std dev = 0,210, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.4175135841583102;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return 0.4217785088437707;  // std dev = 0,006, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.10159632948783635;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09154913487164336;  // std dev = 0,017, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return 0.32360493073740665;  // std dev = 0,000791, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08527379870945997;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return 0.2571455299414019;  // std dev = 0,000690, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518475138839679;  // std dev = 3,48e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.08518475138839679;  // std dev = 2,46e-09, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B), actor(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07688165322816658;  // std dev = 0,019, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(A) )
%   | | then return 0.2097577156325354;  // std dev = 9,86e-09, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return 0.21115075081281331;  // std dev = 0,000601, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.07877675473109169;  // std dev = 3,16e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.0806964005127814;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.1770964977452775;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return 0.17819999686459265;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( genre(A, E) )
%   | | then return -0.05963767376879106;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(B) )
%   | | | then return -0.07333925889764616;  // std dev = 0,000529, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0.17631096228664414;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( actor(B) )
%   | | | then return -0.07323971570396724;  // std dev = 0,000179, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return -0.05636566035699658;  // std dev = 4,85e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0690711727706823;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13615604539833032;  // std dev = 0,368, 40,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return 0.13384646411340453;  // std dev = 0,424, 45,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return -0.05348916465002564;  // std dev = 0,369, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | | else return -0.06842711750198356;  // std dev = 2,00e-06, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0650893746390837;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06362840294302519;  // std dev = 0,011, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.06508937463908371;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06526901063615488;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return 0.13717231452150955;  // std dev = 0,005, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return 0.13747009500213594;  // std dev = 0,003, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( genre(A, D) )
%   | then return -0.06403830243450967;  // std dev = 1,62e-07, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then return -0.06419086294700115;  // std dev = 1,13e-05, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return -0.0755711693447683;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096833
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 3.579 seconds
Total inference time: 2.284 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065231
   Precision = 0.94186 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97006


Total scoring time: 2.23 seconds
Refined model CLL: -0.065231


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096833
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 9.927000000000001 seconds
Total inference time: 2.284 seconds
AUC ROC: 1.0
Total revision time: 9.927000000000001
Best scored revision CLL: -0.065231


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 19:12:46
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.626761, 0.5], 'parameter_0.4': {'AUC PR': 0.81824, 'AUC ROC': 0.97199, 'Precision': [0.693548, 0.5], 'Inference time': 1.674, 'CLL': -0.149754, 'Recall': 0.724719, 'F1': 0.708791, 'Learning time': 1.887}, 'Inference time': 2.284, 'CLL': -0.096833, 'Recall': 1.0, 'F1': 0.770563, 'Learning time': 9.927000000000001}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048804;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839116;  // std dev = 6,99e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360625;  // std dev = 9,19e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783646;  // std dev = 0,000, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 8,43e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0926912761892607;  // std dev = 7,88e-08, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 7,30e-08, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109151;  // std dev = 8,49e-08, 158,000 (wgt'ed) examples reached here.  /* #neg=158 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527716;  // std dev = 3,65e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A) )
%   | then return -0.07324622576333739;  // std dev = 0,000, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333707;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1867879879824064;  // std dev = 0,622, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367116;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06829610682754798;  // std dev = 0,012, 158,000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080109;  // std dev = 5,58e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06383897377055418;  // std dev = 0,018, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096075
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 2.54 seconds
Total inference time: 1.564 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 19:12:51
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.626761, 0.5], 'Inference time': 1.564, 'CLL': -0.096075, 'Recall': 1.0, 'Learning time': 2.54, 'F1': 0.770563}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.141851064900488;  // std dev = 0,000, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.193993
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.906 seconds
Total inference time: 1.144 seconds
AUC ROC: 0.985041


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 19:12:53
{'AUC PR': 0.626761, 'AUC ROC': 0.985041, 'Precision': [nan, 0.5], 'Inference time': 1.144, 'CLL': -0.193993, 'Recall': 0.0, 'Learning time': 0.906, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.47121426173267505;  // std dev = 6,871, 199,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1418510649004882;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7820190210707876;  // std dev = 0,996, 116,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=115 */
%   | | else return -0.09998528927403846;  // std dev = 2,497, 64,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3923094236616248;  // std dev = 0,386, 174,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360624;  // std dev = 7,57e-09, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.26183330662015214;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2823571882395487;  // std dev = 0,384, 182,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783649;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16199607027638807;  // std dev = 5,593, 203,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09636209047719739;  // std dev = 0,020, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926064;  // std dev = 8,16e-08, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.15383340448923707;  // std dev = 0,383, 191,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08527101168987847;  // std dev = 0,001, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.129066295911018;  // std dev = 0,379, 187,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07885569780724581;  // std dev = 0,001, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3605919902285519;  // std dev = 2,15e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.29872029685353757;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.32185863603661163;  // std dev = 2,508, 69,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07321587740666465;  // std dev = 0,000894, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.4614363747496329;  // std dev = 0,271, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06818478457118071;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2822379383224501;  // std dev = 1,93e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return -0.06841838204805441;  // std dev = 6,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.234365348676651;  // std dev = 2,492, 62,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=7 */
%   | | | else return -0.06841838204805467;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10787423238367791;  // std dev = 3,365, 168,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=122 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0849316402698801;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06397810977783482;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06418425595017735;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.149409
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.840391


Total learning time: 2.112 seconds
Total inference time: 2.093 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.992661
   AUC PR    = 0.954589
   CLL	      = -0.149774
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.942623
   F1        = 0.970464


Total scoring time: 2.366 seconds
Parameter learned model CLL: -0.149774


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 10, 0], 'false,true,false': [0.0, 166, 0], 'true': [6.871, 77, 122]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.996, 1, 115], 'true,true,false': [2.497, 57, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 5, 0], 'false,true,false': [0.0, 176, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.386, 52, 122], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 6, 0], 'false,true,false': [7.57e-09, 150, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false': [0.384, 60, 122], 'true,true,true,false': [0.0, 3, 0], 'false,true': [0.0, 166, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [8.16e-08, 168, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.02, 6, 0], 'true': [5.593, 81, 122], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.383, 69, 122], 'false,true': [0.001, 190, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.379, 65, 122], 'false,true': [0.001, 167, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,false': [2.508, 62, 7], 'true,true,true,false': [2.15e-07, 0, 115], 'true,true,false,true': [0.0, 2, 0], 'false,true': [0.000894, 182, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.93e-07, 0, 115], 'true,false,false,false': [0.0, 156, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.271, 3, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [6.45e-09, 17, 0], 'true,true,false,false': [0.0, 11, 0], 'true,false,false,true': [2.492, 55, 7]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.73e-09, 10, 0], 'false,true,false': [0.0, 170, 0], 'true': [3.365, 46, 122]}]]
[{'': [0.23721623191333946, -1.8924256101565169e-16], 'false,true': [-1.1102230246251566e-17, -1.6318940843887844e-16], 'false': [-1.8924256101565169e-16, nan], 'false,true,true': [nan, -1.1102230246251566e-17]}, {'': [0.2183950617283967, -1.7174720822930598e-17], 'false': [-1.7174720822930598e-17, nan], 'true': [0.2183950617283967, nan], 'true,true': [0.008546373365044786, 0.09741210937499994], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -1.2616170734376778e-17]}, {'': [0.14914279648280604, 5.52064765894365e-06], 'false,true': [0.00010681196557635926, 5.773159728050814e-17], 'false': [5.52064765894365e-06, nan], 'false,true,true': [0.0, 0.0], 'true': [0.14914279648280604, nan]}, {'': [0.1494282768324547, -7.35689956076911e-17], 'true,true': [-9.25185853854297e-18, 0.14708905659895866], 'false': [-7.35689956076911e-17, nan], 'true,true,true': [nan, -9.25185853854297e-18], 'true': [0.1494282768324547, nan]}, {'': [0.15410480161016293, 2.7718832507162516e-06], 'false,true': [6.737438768259288e-05, 3.9650822308041306e-17], 'false': [2.7718832507162516e-06, nan], 'false,true,false': [nan, 3.9650822308041306e-17]}, {'': [0.14695027700590593, 2.1250561736588967e-06], 'false': [2.1250561736588967e-06, nan], 'true': [0.14695027700590593, nan]}, {'': [0.1434971979282665, 2.105163665157691e-06], 'false': [2.105163665157691e-06, nan], 'true': [0.1434971979282665, nan]}, {'': [0.1435311619270057, 4.39375158661587e-09], 'false': [4.39375158661587e-09, nan], 'true,true,true': [nan, 4.0161111151657836e-16], 'true': [0.1435311619270057, nan], 'true,true,false': [0.0, 0.09115731989077913], 'true,true': [4.0161111151657836e-16, 0.08860416444417138]}, {'': [0.05578594604048238, nan], 'true,false': [0.013796287681121329, 0.034089324150980156], 'true,false,true': [3.243782054556979e-16, 2.44902137784961e-18], 'true': [0.031286276776002, 0.0556563036915404], 'true,true,false': [nan, -6.30808536718839e-19], 'true,true': [0.02449441460062644, -6.30808536718839e-19], 'true,false,false': [0.10015608740894906, -4.483592984063132e-17]}, {'': [0.0673984127721129, 2.3698886039343665e-06], 'false,true': [3.628516033728024e-05, -4.114355914787345e-17], 'false': [2.3698886039343665e-06, nan], 'false,true,true': [0.0, 1.3877787807814458e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;false,false;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.1418510649004883;  // std dev = 0,000, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839116;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.12544463852839108;  // std dev = 7,30e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else return -0.12544463852839133;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462839;  // std dev = 3,49e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else return 0.5553664367462836;  // std dev = 3,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.19539567445863362;  // std dev = 0,288, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then return -0.1123163781936064;  // std dev = 4,93e-09, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else return -0.1123163781936063;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.09426034062626706;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( female(A) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | | else return 0.4175135841583106;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return -0.10159632948783646;  // std dev = 0,000, 151,000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( female(B) )
%   | | | then return -0.086514796695112;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08651479669511201;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601495;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926098;  // std dev = 1,05e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return -0.0926912761892609;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1,18e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.08518475138839682;  // std dev = 9,13e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.0799176450141933;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2551722425694897;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,29e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.08518475138839678;  // std dev = 3,94e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.0943549849040319;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253592;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109169;  // std dev = 3,61e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.162579465802287;  // std dev = 0,395, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.0787767547310916;  // std dev = 5,16e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07869388879788931;  // std dev = 0,000219, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( genre(A, E) )
%   | | then return -0.0638067087042586;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333702;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07508130228808979;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.08965690244466984;  // std dev = 0,099, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367055;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return -0.06834327052690499;  // std dev = 0,000137, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06842697784420261;  // std dev = 7,30e-08, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
%   | | | else return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.134007030008011;  // std dev = 4,17e-09, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else return 0.13400703000801092;  // std dev = 5,89e-09, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.14361986712386468;  // std dev = 0,395, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.0691789521243231;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06292827024833925;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( female(A) )
%   | | | then return -0.06419686866846352;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06409168386003468;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087092
   Precision = 0.784141 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.879012


Total learning time: 3.812 seconds
Total inference time: 1.787 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064078
   Precision = 0.99187 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.995918


Total scoring time: 2.207 seconds
Refined model CLL: -0.064078


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087092
   Precision = 0.784141 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.879012


Total learning time: 10.497 seconds
Total inference time: 1.787 seconds
AUC ROC: 1.0
Total revision time: 10.497
Best scored revision CLL: -0.064078


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 19:13:08
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.784141, 0.5], 'Inference time': 1.787, 'parameter_0.6': {'AUC PR': 0.81824, 'AUC ROC': 0.97199, 'Precision': [1.0, 0.5], 'Inference time': 2.093, 'CLL': -0.149409, 'Recall': 0.724719, 'F1': 0.840391, 'Learning time': 2.112}, 'CLL': -0.087092, 'Recall': 1.0, 'F1': 0.879012, 'Learning time': 10.497}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048813;  // std dev = 0,000, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839186;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,69e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11295178230201175;  // std dev = 0,143, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583093;  // std dev = 3,53e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10153834796562582;  // std dev = 5,16e-08, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2,19e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09264272659839658;  // std dev = 9,77e-08, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08514354625065236;  // std dev = 1,28e-07, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07874137146692713;  // std dev = 2,58e-08, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325354;  // std dev = 1,93e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07321553006030655;  // std dev = 1,15e-07, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452781;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06840010866481773;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936714;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06416813285494885;  // std dev = 1,05e-08, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080111;  // std dev = 5,16e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074338
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.177 seconds
Total inference time: 1.673 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 19:13:13
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.673, 'CLL': -0.074338, 'Recall': 1.0, 'Learning time': 3.177, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1418510649004884;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.049 seconds
Total inference time: 0.923 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 19:13:16
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.923, 'CLL': -0.188432, 'Recall': 0.0, 'Learning time': 1.049, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.48267000789644354;  // std dev = 7,823, 261,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.1418510649004884;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7887371437965245;  // std dev = 2,06e-07, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | | else return -0.13599403899917337;  // std dev = 2,544, 93,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.12544463852839172;  // std dev = 0,000, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.33877880774747904;  // std dev = 0,398, 255,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.11231637819360675;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.45268845506321925;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.24702448984465872;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.28515608505739065;  // std dev = 0,381, 246,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10168954730266935;  // std dev = 0,015, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20356606411896386;  // std dev = 6,028, 255,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09334256798942864;  // std dev = 0,010, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09268343690564479;  // std dev = 0,000, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1493892934039241;  // std dev = 0,377, 258,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.0852473165656754;  // std dev = 0,000817, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12340902645897478;  // std dev = 0,374, 253,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.078841555886781;  // std dev = 0,000814, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.45856074502134647;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.36084316869408134;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.2921002692593167;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.34534142641479815;  // std dev = 2,555, 104,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07337769503535842;  // std dev = 0,016, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2355370025987779;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07587259556930077;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0683630475657652;  // std dev = 3,73e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2824077429149601;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | | | else return -0.06840503926748619;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.25171479596726326;  // std dev = 2,537, 87,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=7 */
%   | | | else return -0.06840503926748595;  // std dev = 9,00e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05878305797140987;  // std dev = 4,227, 258,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=163 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07072096558760126;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06413543135248041;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06417248330588163;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.140684
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.840391


Total learning time: 2.854 seconds
Total inference time: 2.619 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.994452
   AUC PR    = 0.966024
   CLL	      = -0.140533
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.957055
   F1        = 0.978056


Total scoring time: 3.374 seconds
Parameter learned model CLL: -0.140533


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 18, 0], 'false,true,false': [0.0, 202, 0], 'true': [7.823, 98, 163]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.06e-07, 0, 156], 'true,true,false': [2.544, 86, 7], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [7.45e-09, 13, 0], 'false,true,false': [0.0, 212, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.398, 92, 163], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.67e-08, 18, 0], 'false,true,false': [0.0, 228, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.381, 83, 163], 'true,true,true,false': [0.0, 6, 0], 'false,true': [0.015, 230, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [0.0, 214, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.01, 15, 0], 'true': [6.028, 92, 163], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.377, 95, 163], 'false,true': [0.000817, 247, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.374, 90, 163], 'false,true': [0.000814, 216, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false,false': [2.555, 97, 7], 'true,true,true,false': [0.0, 0, 156], 'true,true,false,true': [0.0, 6, 0], 'false,true': [0.016, 213, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 156], 'true,false,false,false': [9e-08, 202, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 10, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [2.63e-09, 11, 0], 'true,true,false,false': [3.73e-09, 18, 0], 'true,false,false,true': [2.537, 80, 7]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 11, 0], 'false,true,false': [0.0, 210, 0], 'true': [4.227, 95, 163]}]]
[{'': [0.23449450242950554, -2.349889092480152e-16], 'false,true': [5.28677630773884e-18, -2.374338349693404e-16], 'false': [-2.349889092480152e-16, nan], 'false,true,true': [0.0, -3.0839528461809902e-18]}, {'': [0.2260931275302002, -6.680988112788553e-17], 'false': [-6.680988112788553e-17, nan], 'true': [0.2260931275302002, nan], 'true,true': [2.7328566760003855e-16, 0.06960342236096671], 'false,true,true': [0.0, 4.270088556250602e-18], 'false,true': [3.96508223080413e-18, -6.074805229081045e-17]}, {'': [0.15837512263016293, -8.845679383192304e-17], 'false,true': [1.5419764230904953e-17, -7.401486830834377e-17], 'false': [-8.845679383192304e-17, nan], 'false,true,true': [nan, 1.5419764230904953e-17], 'true': [0.15837512263016293, nan]}, {'': [0.14997129685137822, 9.906099541719418e-07], 'true,true': [0.005179306112990334, 0.14536627000488586], 'false': [9.906099541719418e-07, nan], 'true,true,true': [0.0, -1.850371707708594e-17], 'true': [0.14997129685137822, nan]}, {'': [0.1424865376639656, 4.2500103349756356e-07], 'false,true': [6.082352998546907e-06, -7.678177927314166e-17], 'false': [4.2500103349756356e-07, nan], 'false,true,false': [nan, -7.678177927314166e-17]}, {'': [0.14205471710203632, 6.679293318605335e-07], 'false': [6.679293318605335e-07, nan], 'true': [0.14205471710203632, nan]}, {'': [0.1396909201073922, 6.622733251454777e-07], 'false': [6.622733251454777e-07, nan], 'true': [0.1396909201073922, nan]}, {'': [0.14505907964745096, 1.165332198713137e-06], 'false': [1.165332198713137e-06, nan], 'true,true,true': [0.0, -4.782499183000674e-16], 'true': [0.14505907964745096, nan], 'true,true,false': [0.0, 0.06277736686390492], 'true,true': [0.004249338825700221, 0.05949932895138762]}, {'': [0.05360898670714145, nan], 'true,false': [0.007572428110461922, 0.029343035145430095], 'true,false,true': [-4.896368211167357e-16, 6.30808536718839e-19], 'true': [0.0062858810128073785, 0.055397479471815364], 'true,true,false': [0.0, 7.709882115452476e-19], 'true,true': [-2.2204460492503132e-17, 2.8118548529445043e-06], 'true,false,false': [0.07398599550799302, 4.0121921186948725e-17]}, {'': [0.06926802114019327, 7.49290266267207e-07], 'false,true': [8.481099960556497e-06, -3.119198021565916e-17], 'false': [7.49290266267207e-07, nan], 'false,true,true': [0.0, -3.1540426835941946e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8,30e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.14185106490048846;  // std dev = 0,000, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109547;  // std dev = 1,05e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.7089470964214806;  // std dev = 0,102, 95,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=94 */
%   | else if ( actor(B) )
%   | | then return -0.1254446385283915;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( female(A) )
%   | | | then return 0.719473412210955;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.719473412210955;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839177;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462853;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.5578838663992987;  // std dev = 0,000450, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11231637819360672;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | | else return 0.41938338079291043;  // std dev = 0,004, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.10159632948783633;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.10159632948783658;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.32146639946629835;  // std dev = 0,000694, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926089;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926076;  // std dev = 2,24e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.09269127618926089;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2550288593289167;  // std dev = 3,73e-09, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.25613509408656726;  // std dev = 0,000346, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,97e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.08518475138839679;  // std dev = 1,83e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.27552623348352684;  // std dev = 0,466, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.08518475138839676;  // std dev = 1,32e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.08518475138839675;  // std dev = 5,77e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | | else return -0.08518475138839675;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.06602440137096814;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.2096564265754511;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.21043765466130776;  // std dev = 0,000302, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.0787767547310916;  // std dev = 3,80e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.07877675473109151;  // std dev = 6,66e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else return -0.07877675473109161;  // std dev = 1,86e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(A) )
%   | | | then return 0.17702220346821207;  // std dev = 3,65e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | | else return 0.17764245393786424;  // std dev = 8,94e-08, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | else if ( genre(A, F) )
%   | | then return -0.06206780039854976;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(B) )
%   | | | then return -0.07311624407304883;  // std dev = 0,011, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return 0.17663122699617384;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( female(A) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06582809267491774;  // std dev = 0,004, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1529709413463572;  // std dev = 0,003, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | | | else return -0.06842697784420262;  // std dev = 5,27e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B), actor(A) )
%   | | | then return -0.06842928110248558;  // std dev = 6,38e-05, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | | | else return 0.12478861448009759;  // std dev = 0,207, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.13413312239150316;  // std dev = 0,000799, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.13441952508327876;  // std dev = 0,000378, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else if ( actor(A) )
%   | | then return -0.06419951031153383;  // std dev = 1,61e-09, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.05502628067910746;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then return -0.06434813529128569;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( actor(B), actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419170172256605;  // std dev = 1,29e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.06419170172256612;  // std dev = 0,000, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202612;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06509405618018316;  // std dev = 0,012, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103399
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 4.986 seconds
Total inference time: 2.689 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06472
   Precision = 0.942197 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970238


Total scoring time: 3.098 seconds
Refined model CLL: -0.06472


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103399
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 14.311999999999998 seconds
Total inference time: 2.689 seconds
AUC ROC: 1.0
Total revision time: 14.311999999999998
Best scored revision CLL: -0.06472


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 19:13:36
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.626761, 0.5], 'Inference time': 2.689, 'parameter_0.8': {'AUC PR': 0.81824, 'AUC ROC': 0.97199, 'Precision': [1.0, 0.5], 'Inference time': 2.619, 'CLL': -0.140684, 'Recall': 0.724719, 'F1': 0.840391, 'Learning time': 2.854}, 'CLL': -0.103399, 'Recall': 1.0, 'F1': 0.770563, 'Learning time': 14.311999999999998}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 1,15e-07, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839197;  // std dev = 0,000, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.11231637819360686;  // std dev = 0,000, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783646;  // std dev = 0,000, 330,000 (wgt'ed) examples reached here.  /* #neg=330 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09345053395694107;  // std dev = 0,225, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.08582443682554834;  // std dev = 0,213, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07867529186035654;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07315819997293246;  // std dev = 0,000, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527783;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.17197469407623056;  // std dev = 0,050, 98,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=97 */
%   | else return -0.07323944681392569;  // std dev = 9,15e-05, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1531390041953797;  // std dev = 0,004, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06842740996774344;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06925840580762682;  // std dev = 0,295, 325,000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13431545273807294;  // std dev = 0,004, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06419222134483003;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.0640692457098579;  // std dev = 1,89e-05, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075133
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.677 seconds
Total inference time: 1.547 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 19:13:42
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.547, 'CLL': -0.075133, 'Recall': 1.0, 'Learning time': 3.677, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048796;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.193993
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.144 seconds
Total inference time: 0.971 seconds
AUC ROC: 0.985041


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 19:13:44
{'AUC PR': 0.626761, 'AUC ROC': 0.985041, 'Precision': [nan, 0.5], 'Inference time': 0.971, 'CLL': -0.193993, 'Recall': 0.0, 'Learning time': 1.144, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.503718555352673;  // std dev = 8,503, 316,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.14185106490048796;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7800802859656232;  // std dev = 0,997, 195,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=194 */
%   | | else return -0.12858461235444943;  // std dev = 3,023, 116,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.12544463852839197;  // std dev = 0,000, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3545773622610924;  // std dev = 0,394, 308,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.11231637819360683;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.4596817795987964;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.25534818629254286;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.2472795901557375;  // std dev = 0,392, 327,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783662;  // std dev = 0,000, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23459316013494289;  // std dev = 6,425, 302,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926044;  // std dev = 1,30e-07, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.16634200021565032;  // std dev = 0,372, 309,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 6,04e-09, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11283183722382539;  // std dev = 0,377, 317,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109144;  // std dev = 3,09e-09, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3544757611258116;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3074921780683732;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.3399664093877505;  // std dev = 3,028, 120,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333695;  // std dev = 1,02e-07, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2839649005529236;  // std dev = 0,207, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.27810146785591866;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.06842697784420268;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.26683204064303756;  // std dev = 3,039, 131,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=10 */
%   | | | else return -0.0684269778442028;  // std dev = 0,000, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04974102933366349;  // std dev = 4,891, 328,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=204 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.06419184008202605;  // std dev = 5,59e-09, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.144194
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.840391


Total learning time: 2.358 seconds
Total inference time: 1.748 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.993632
   AUC PR    = 0.960741
   CLL	      = -0.14313
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.974874


Total scoring time: 2.29 seconds
Parameter learned model CLL: -0.14313


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 14, 0], 'false,true,false': [0.0, 283, 0], 'true': [8.503, 112, 204]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.997, 1, 194], 'true,true,false': [3.023, 106, 10], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [7.45e-09, 16, 0], 'false,true,false': [0.0, 285, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.394, 104, 204], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.49e-08, 17, 0], 'false,true,false': [0.0, 244, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.392, 123, 204], 'true,true,true,false': [0.0, 8, 0], 'false,true': [0.0, 292, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [1.3e-07, 274, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [9.13e-09, 16, 0], 'true': [6.425, 98, 204], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.372, 105, 204], 'false,true': [6.04e-09, 303, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.377, 113, 204], 'false,true': [3.09e-09, 268, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,false': [3.028, 110, 10], 'true,true,true,false': [0.0, 0, 194], 'true,true,false,true': [0.0, 9, 0], 'false,true': [1.02e-07, 290, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 194], 'true,false,false,false': [0.0, 263, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.207, 6, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 15, 0], 'true,true,false,false': [0.0, 21, 0], 'true,false,false,true': [3.039, 121, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [5.89e-09, 12, 0], 'false,true,false': [5.59e-09, 280, 0], 'true': [4.891, 124, 204]}]]
[{'': [0.22880948565935402, 2.9704963869569404e-17], 'false,true': [-6.938893903907228e-18, -1.5692198227917407e-17], 'false': [2.9704963869569404e-17, nan], 'false,true,true': [0.0, -1.1895246692412391e-17]}, {'': [0.2256800488001553, -8.736181177378281e-17], 'false': [-8.736181177378281e-17, nan], 'true': [0.2256800488001553, nan], 'true,true': [0.005101906640367395, 0.07877526753864397], 'false,true,true': [0.0, 3.469446951953614e-18], 'false,true': [0.0, -8.102680320071318e-17]}, {'': [0.15543411235735757, -1.0000482206547211e-16], 'false,true': [1.5419764230904953e-17, -8.736181177378281e-17], 'false': [-1.0000482206547211e-16, nan], 'false,true,true': [0.0, 1.3061447348531253e-17], 'true': [0.15543411235735757, nan]}, {'': [0.15673005250344382, -5.627157796045314e-17], 'true,true': [0.004123675787994613, 0.15353808887398082], 'false': [-5.627157796045314e-17, nan], 'true,true,true': [0.0, 0.0], 'true': [0.15673005250344382, nan]}, {'': [0.1366846697325964, 7.809844724949377e-17], 'false,true': [5.204170427930421e-18, 6.158901450475321e-17], 'false': [7.809844724949377e-17, nan], 'false,true,false': [nan, 6.158901450475321e-17]}, {'': [0.13845553770314703, 3.664102391502167e-17], 'false': [3.664102391502167e-17, nan], 'true': [0.13845553770314703, nan]}, {'': [0.14206604633982842, 9.113771097669196e-18], 'false': [9.113771097669196e-18, nan], 'true': [0.14206604633982842, nan]}, {'': [0.1433335938617045, 3.598653941888438e-17], 'false': [3.598653941888438e-17, nan], 'true,true,true': [nan, -3.8457209925160063e-16], 'true': [0.1433335938617045, nan], 'true,true,false': [-2.4671622769447922e-17, 0.07638888888888883], 'true,true': [-3.8457209925160063e-16, 0.0711278734304289]}, {'': [0.05631529179872734, nan], 'true,false': [0.007999782841667262, 0.03217980452379754], 'true,false,true': [-5.402322346629627e-16, -2.7755575615628915e-18], 'true': [0.00962009892540422, 0.057826636737410786], 'true,true,false': [nan, -2.64338815386942e-18], 'true,true': [0.007157537066637455, -2.64338815386942e-18], 'true,false,false': [0.07050871161354245, -2.195117767319701e-17]}, {'': [0.07294262140492613, 3.878176318896095e-17], 'false,true': [2.8912057932946786e-18, 3.013462495411139e-17], 'false': [3.878176318896095e-17, nan], 'false,true,true': [nan, 2.8912057932946786e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;false,false;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 4,21e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.14185106490048793;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.12544463852839124;  // std dev = 4,34e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.12544463852839116;  // std dev = 6,66e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12544463852839194;  // std dev = 0,000, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.11231637819360633;  // std dev = 3,33e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462836;  // std dev = 3,80e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.5553664367462834;  // std dev = 4,15e-08, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.1123163781936069;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.5824864158416896;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(A) )
%   | | | then return 0.4175135841583104;  // std dev = 7,30e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0.4175135841583093;  // std dev = 3,58e-07, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.10159632948783663;  // std dev = 0,000, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601491;  // std dev = 2,93e-08, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.1358482607798283;  // std dev = 0,114, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926096;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926076;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926085;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.09269127618926072;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694901;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,97e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.0818812530629276;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 2,79e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.08518475138839682;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325359;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.20975771563253542;  // std dev = 1,77e-08, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.07877675473109172;  // std dev = 2,58e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( female(B) )
%   | | | then return -0.07593266897735372;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.14119430152446352;  // std dev = 0,357, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07877675473109143;  // std dev = 3,36e-09, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.07877675473109165;  // std dev = 2,28e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.17709649774527786;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( genre(A, E) )
%   | | then if ( female(B) )
%   | | | then return -0.07077332170356308;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06659981534026088;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(B) )
%   | | | then return -0.07317699232143;  // std dev = 0,007, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | | else return 0.17709649774527744;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return -0.06380418781078118;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.0684269778442027;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.1527438580936714;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.06842697784420262;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06842828503853639;  // std dev = 3,72e-05, 341,000 (wgt'ed) examples reached here.  /* #neg=341 */
%   | | | else return 0.10170443441570008;  // std dev = 0,336, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1344540297413028;  // std dev = 0,002, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.13420327379335875;  // std dev = 0,001, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( actor(A) )
%   | | then return -0.06419592061726663;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( female(B) )
%   | | | then return -0.06241814173600876;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1258749169309383;  // std dev = 0,367, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( actor(B) )
%   | | then return -0.06419176155727639;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202612;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06503874616613001;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.089007
   Precision = 0.784141 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.879012


Total learning time: 4.705 seconds
Total inference time: 1.514 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064185
   Precision = 0.995122 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.997555


Total scoring time: 2.789 seconds
Refined model CLL: -0.064185


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.089007
   Precision = 0.784141 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.879012


Total learning time: 12.142 seconds
Total inference time: 1.514 seconds
AUC ROC: 1.0
Total revision time: 12.142
Best scored revision CLL: -0.064185


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 19:14:00
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.784141, 0.5], 'parameter_1.0': {'AUC PR': 0.81824, 'AUC ROC': 0.97199, 'Precision': [1.0, 0.5], 'Inference time': 1.748, 'CLL': -0.144194, 'Recall': 0.724719, 'F1': 0.840391, 'Learning time': 2.358}, 'Inference time': 1.514, 'CLL': -0.089007, 'Recall': 1.0, 'F1': 0.879012, 'Learning time': 12.142}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.14185106490048754;  // std dev = 2,38e-07, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.12544463852839224;  // std dev = 0,000, 399,000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360642;  // std dev = 0,000, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783616;  // std dev = 1,56e-07, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4,00e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.09269127618926087;  // std dev = 1,49e-07, 401,000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4,46e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839683;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109154;  // std dev = 9,66e-08, 422,000 (wgt'ed) examples reached here.  /* #neg=422 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07324622576333724;  // std dev = 0,000, 417,000 (wgt'ed) examples reached here.  /* #neg=417 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06861610493406506;  // std dev = 0,073, 386,000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 1,38e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.06418047991812877;  // std dev = 8,56e-08, 411,000 (wgt'ed) examples reached here.  /* #neg=411 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067489
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.631 seconds
Total inference time: 1.633 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 19:14:06
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.633, 'CLL': -0.067489, 'Recall': 1.0, 'Learning time': 3.631, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048732;  // std dev = 3,01e-07, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.193993
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.201 seconds
Total inference time: 0.918 seconds
AUC ROC: 0.985041


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 19:14:08
{'AUC PR': 0.626761, 'AUC ROC': 0.985041, 'Precision': [nan, 0.5], 'Inference time': 0.918, 'CLL': -0.193993, 'Recall': 0.0, 'Learning time': 1.201, 'F1': nan}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.56341209299425;  // std dev = 4,444, 95,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7567877135293513;  // std dev = 0,991, 55,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=54 */
%   | | else return 0.11707479486906447;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.34898965740387056;  // std dev = 0,423, 100,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.1123163781936062;  // std dev = 8,12e-09, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.4673439186364225;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.31636588337251653;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.31639955851725765;  // std dev = 0,397, 93,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783631;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19157177828961724;  // std dev = 4,133, 102,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09368004698569919;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1389264737338987;  // std dev = 0,416, 102,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08537851400592732;  // std dev = 0,001, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11938393610201926;  // std dev = 0,410, 100,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07884438711135969;  // std dev = 0,000839, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.4629996951384317;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.34627099466680245;  // std dev = 2,98e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3459233902111421;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.196613993172084;  // std dev = 3,012, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07337924637810382;  // std dev = 0,011, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.30636429328884923;  // std dev = 0,104, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07584596693567622;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06833885962066154;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2725462288713562;  // std dev = 4,21e-08, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return -0.0684018402080664;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1476286300928497;  // std dev = 3,012, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return -0.0684018402080664;  // std dev = 2,58e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return -0.006547363447034668;  // std dev = 3,923, 118,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=67 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07069775615073105;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0641140876146651;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06416966066289839;  // std dev = 3,73e-09, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.19312
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.367 seconds
Total inference time: 1.345 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.977957
   AUC PR    = 0.85507
   CLL	      = -0.180141
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.80597
   F1        = 0.892562


Total scoring time: 1.437 seconds
Parameter learned model CLL: -0.180141


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 7, 0], 'false,true,false': [8.33e-09, 84, 0], 'true': [4.444, 28, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.991, 1, 54], 'true,true,false': [2.924, 25, 13], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 5, 0], 'false,true,false': [0.0, 83, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.423, 33, 67], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [7.45e-09, 11, 0], 'false,true,false': [8.12e-09, 102, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.397, 26, 67], 'true,true,true,false': [0.0, 2, 0], 'false,true': [0.0, 107, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [0.0, 80, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.009, 10, 0], 'true': [4.133, 35, 67], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.416, 35, 67], 'false,true': [0.001, 91, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.41, 33, 67], 'false,true': [0.000839, 101, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false,false': [3.012, 30, 13], 'true,true,true,false': [2.98e-08, 0, 54], 'true,true,false,true': [1.05e-08, 5, 0], 'false,true': [0.011, 102, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [4.21e-08, 0, 54], 'true,false,false,false': [2.58e-08, 80, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.104, 7, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [2.63e-09, 6, 0], 'true,true,false,false': [0.0, 6, 0], 'true,false,false,true': [3.012, 30, 13]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false': [3.73e-09, 85, 0], 'true': [3.923, 51, 67]}]]
[{'': [0.2078670360110795, 7.564156871072495e-17], 'false,true': [-7.93016446160826e-18, 7.401486830834377e-17], 'false': [7.564156871072495e-17, nan], 'false,true,true': [nan, -7.93016446160826e-18]}, {'': [0.20141056769568616, 5.8486500529950385e-06], 'false': [5.8486500529950385e-06, nan], 'true': [0.20141056769568616, nan], 'true,true': [0.017851239669422113, 0.22506925207756256], 'false,true,true': [0.0, 0.0], 'false,true': [5.4932821694487844e-05, -2.140188963132832e-17]}, {'': [0.17897526764851646, 4.342082593903072e-06], 'false,true': [2.9018317555061313e-05, 6.530723674265627e-17], 'false': [4.342082593903072e-06, nan], 'false,true,true': [0.0, 5.046468293750712e-18], 'true': [0.17897526764851646, nan]}, {'': [0.1672926593057519, 0.0], 'true,true': [0.0050654149182554065, 0.15794411078266413], 'false': [0.0, nan], 'true,true,true': [0.0, 0.0], 'true': [0.1672926593057519, nan]}, {'': [0.16745256521113283, 1.0742274595372988e-06], 'false,true': [8.799009191001738e-06, 0.0], 'false': [1.0742274595372988e-06, nan], 'false,true,false': [nan, 0.0]}, {'': [0.17331715260260885, 1.777226762968108e-06], 'false': [1.777226762968108e-06, nan], 'true': [0.17331715260260885, nan]}, {'': [0.16776875188261145, 7.031333253019816e-07], 'false': [7.031333253019816e-07, nan], 'true': [0.16776875188261145, nan]}, {'': [0.16883588625319604, 1.2086426532474306e-06], 'false': [1.2086426532474306e-06, nan], 'true,true,true': [0.0, 1.644774851296528e-17], 'true': [0.16883588625319604, nan], 'true,true,false': [2.2204460492503132e-17, 0.21092482422931322], 'true,true': [0.011691116914513506, 0.19103380896649236]}, {'': [0.07640209514098426, nan], 'true,false': [0.01046210272280886, 0.0751651713344422], 'true,false,true': [3.289549702593056e-17, 1.1564823173178713e-18], 'true': [0.014606779059969743, 0.07861583774281879], 'true,true,false': [0.0, -1.1564823173178713e-18], 'true,true': [0.0015461974144948146, 1.0566873794839483e-05], 'true,false,false': [0.21092482422931305, 8.326672684688674e-18]}, {'': [0.1304282944842184, 4.4943642235381315e-07], 'false,true': [4.280957174596552e-06, 1.436759208338438e-17], 'false': [4.4943642235381315e-07, nan], 'false,true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.14185106490048763;  // std dev = 8,69e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109546;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.7194734122109547;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.5553664367462843;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return -0.10159632948783631;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11063675498487174;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.25517224256948934;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08955209654892328;  // std dev = 0,014, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( actor(B) )
%   | | | then return -0.0851847513883968;  // std dev = 2,24e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 2,79e-09, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07834332559568641;  // std dev = 0,002, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.09252166198728862;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then if ( actor(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07083593329078816;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1770964977452769;  // std dev = 8,33e-09, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | else if ( genre(A, F) )
%   | | then return -0.07177482318502285;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(B) )
%   | | | then return -0.07301829788284818;  // std dev = 0,001, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.17709649774527714;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.07324622576333704;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06811757331740324;  // std dev = 0,000679, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.11997780832509698;  // std dev = 0,408, 27,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return 0.10737548149103013;  // std dev = 0,558, 39,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=31 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06837992773196486;  // std dev = 0,001, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | | else return 0.107260272470697;  // std dev = 0,382, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1383154486065864;  // std dev = 0,000698, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.13936117522368208;  // std dev = 3,92e-06, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06420836033279675;  // std dev = 4,56e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06397239328259095;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07659922995446372;  // std dev = 0,075, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.06421042890439764;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06419466649892959;  // std dev = 3,07e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.06419466649892969;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07597470329565692;  // std dev = 0,000440, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064512
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.264 seconds
Total inference time: 1.383 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065308
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.53 seconds
Refined model CLL: -0.065308


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064512
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.598 seconds
Total inference time: 1.383 seconds
AUC ROC: 1.0
Total revision time: 7.598
Best scored revision CLL: -0.065308


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 19:14:19
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.383, 'CLL': -0.064512, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.598, 'parameter_0.2': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.345, 'CLL': -0.19312, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.367}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048793;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1254446385283911;  // std dev = 7,60e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1123163781936062;  // std dev = 8,94e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.1015963294878364;  // std dev = 0,000, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926087;  // std dev = 6,99e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839683;  // std dev = 5,37e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109161;  // std dev = 5,77e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333722;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06842697784420265;  // std dev = 5,27e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202626;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.253 seconds
Total inference time: 1.177 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 19:14:23
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.177, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 2.253, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.824 seconds
Total inference time: 0.727 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 19:14:25
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.727, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 0.824, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5453284222789965;  // std dev = 6,474, 195,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.14185106490048838;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7688482266933384;  // std dev = 0,995, 108,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=107 */
%   | | else return 0.053617690034228706;  // std dev = 4,423, 98,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.12544463852839174;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3906438507196269;  // std dev = 0,407, 189,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.4762230720845737;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.3078031261895053;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.26920715136884027;  // std dev = 0,412, 201,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783653;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23917072117929314;  // std dev = 5,426, 191,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926061;  // std dev = 8,30e-08, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1265975759078381;  // std dev = 0,410, 211,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 5,51e-09, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11694738707207003;  // std dev = 0,407, 202,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109146;  // std dev = 4,66e-09, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.4778427989094593;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3414715550984186;  // std dev = 1,84e-07, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.34626504837543653;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.16395379491662534;  // std dev = 4,280, 84,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333664;  // std dev = 1,29e-07, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3262396597419582;  // std dev = 0,139, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.269292539966397;  // std dev = 1,37e-07, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.12318935013981196;  // std dev = 4,280, 84,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | | else return -0.06842697784420262;  // std dev = 7,15e-08, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04955135226503295;  // std dev = 5,056, 208,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=134 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.199398
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.763 seconds
Total inference time: 1.33 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.977149
   AUC PR    = 0.848661
   CLL	      = -0.185119
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.798507
   F1        = 0.887967


Total scoring time: 1.803 seconds
Parameter learned model CLL: -0.185119


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.05e-08, 21, 0], 'false,true,false': [0.0, 196, 0], 'true': [6.474, 61, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.995, 1, 107], 'true,true,false': [4.423, 71, 27], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [7.45e-09, 15, 0], 'false,true,false': [0.0, 221, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.407, 55, 134], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [1.39e-08, 15, 0], 'false,true,false': [0.0, 173, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.412, 67, 134], 'true,true,true,false': [7.45e-09, 3, 0], 'false,true': [0.0, 207, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [8.3e-08, 174, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [9.13e-09, 17, 0], 'true': [5.426, 57, 134], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.41, 77, 134], 'false,true': [5.51e-09, 210, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.407, 68, 134], 'false,true': [4.66e-09, 217, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false,false': [4.28, 57, 27], 'true,true,true,false': [1.84e-07, 0, 107], 'true,true,false,true': [0.0, 3, 0], 'false,true': [1.29e-07, 223, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.37e-07, 0, 107], 'true,false,false,false': [7.15e-08, 166, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.139, 10, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [2.63e-09, 13, 0], 'true,true,false,false': [0.0, 16, 0], 'true,false,false,true': [4.28, 57, 27]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 18, 0], 'false,true,false': [0.0, 184, 0], 'true': [5.056, 74, 134]}]]
[{'': [0.21496383957922874, -2.363043501954462e-16], 'false,true': [5.046468293750712e-18, -2.333734112987574e-16], 'false': [-2.363043501954462e-16, nan], 'false,true,true': [0.0, 5.28677630773884e-18]}, {'': [0.2273541332830595, -5.760152931109599e-17], 'false': [-5.760152931109599e-17, nan], 'true': [0.2273541332830595, nan], 'true,true': [0.009173525377227829, 0.19960433152852883], 'false,true,true': [0.0, 3.7007434154171884e-18], 'false,true': [0.0, -4.822688251765386e-17]}, {'': [0.16584228100310872, -3.0068540250264654e-17], 'false,true': [1.460819769243627e-17, -5.133979304625001e-18], 'false': [-3.0068540250264654e-17, nan], 'false,true,true': [0.0, 1.295260195396016e-17], 'true': [0.16584228100310872, nan]}, {'': [0.17539741377123183, -8.795969856933607e-17], 'true,true': [0.006807666762071474, 0.16951295224483762], 'false': [-8.795969856933607e-17, nan], 'true,true,true': [0.0, 1.850371707708594e-17], 'true': [0.17539741377123183, nan]}, {'': [0.15412123132553135, 3.952626475105269e-17], 'false,true': [4.89804275569922e-18, 3.9559670992390636e-17], 'false': [3.952626475105269e-17, nan], 'false,true,false': [nan, 3.9559670992390636e-17]}, {'': [0.16810878901411994, 3.066330258488528e-17], 'false': [3.066330258488528e-17, nan], 'true': [0.16810878901411994, nan]}, {'': [0.1655532206457536, 2.1488187573390126e-17], 'false': [2.1488187573390126e-17, nan], 'true': [0.1655532206457536, nan]}, {'': [0.1606591395959158, 7.467867878644551e-17], 'false': [7.467867878644551e-17, nan], 'true,true,true': [0.0, 3.1542784998696035e-16], 'true': [0.1606591395959158, nan], 'true,true,false': [0.0, 0.21811224489795927], 'true,true': [0.006157967519129078, 0.21169772873364945]}, {'': [0.0739265299107019, nan], 'true,false': [0.011017345245828092, 0.07395478475766211], 'true,false,true': [1.7431539078226756e-16, 5.337610695313253e-19], 'true': [0.016211892344622888, 0.0759169862067905], 'true,true,false': [0.0, 0.0], 'true,true': [0.0019222781414327318, -8.163404592832033e-19], 'true,false,false': [0.2181122448979594, 3.076521634503446e-17]}, {'': [0.12289121277061124, -1.616829647512364e-18], 'false,true': [-3.784851220313033e-18, -3.620292471603771e-18], 'false': [-1.616829647512364e-18, nan], 'false,true,true': [0.0, -3.0839528461809902e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048768;  // std dev = 6,32e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.14185106490048838;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839163;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 3,49e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.5553664367462836;  // std dev = 3,65e-08, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.1123163781936063;  // std dev = 3,95e-09, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else return -0.11231637819360629;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0.4175135841583106;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.10159632948783655;  // std dev = 0,000, 200,000 (wgt'ed) examples reached here.  /* #neg=200 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.32071184716014994;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1,05e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.08518475138839679;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253595;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.20975771563253603;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109164;  // std dev = 2,46e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.0787767547310917;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.07877675473109169;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1770964977452773;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( genre(A, F) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333702;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0.1681556861913984;  // std dev = 0,246, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( female(A) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.0690293838340945;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.12238707669043335;  // std dev = 0,544, 51,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=44 */
%   | | | else return 0.11735652434361124;  // std dev = 0,702, 75,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=63 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06842697784420261;  // std dev = 6,14e-08, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | | | else return 0.11296287234758685;  // std dev = 0,499, 33,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( female(A) )
%   | | then return 0.13825466076518236;  // std dev = 0,001, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.13832669575881976;  // std dev = 0,000479, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.0641556623015334;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( actor(B) )
%   | | | then return -0.06419184008202618;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0641556623015334;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( actor(A) )
%   | | | then return -0.07622153942566404;  // std dev = 0,001, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0762974283193075;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064652
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.61 seconds
Total inference time: 1.427 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.93 seconds
Refined model CLL: -0.065363


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064652
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.106 seconds
Total inference time: 1.427 seconds
AUC ROC: 1.0
Total revision time: 9.106
Best scored revision CLL: -0.065363


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 19:14:37
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.33, 'CLL': -0.199398, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.763}, 'Inference time': 1.427, 'CLL': -0.064652, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.106}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048835;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.12544463852839186;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.1123163781936068;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.10159632948783653;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.09269127618926053;  // std dev = 7,30e-08, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839678;  // std dev = 8,02e-08, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07877675473109146;  // std dev = 7,15e-08, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07324622576333671;  // std dev = 1,19e-07, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06842697784420261;  // std dev = 6,14e-08, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.06419184008202623;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.749 seconds
Total inference time: 1.051 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 19:14:41
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.051, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 2.749, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048843;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.927 seconds
Total inference time: 0.785 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 19:14:43
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.785, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 0.927, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5161293911255671;  // std dev = 8,312, 307,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.1418510649004881;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7651438474916823;  // std dev = 1,716, 167,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=164 */
%   | | else return 0.03476354848704308;  // std dev = 5,333, 151,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.1254446385283919;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.356725569804364;  // std dev = 0,419, 306,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.11231637819360688;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.45958804571476675;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.29061861597296634;  // std dev = 1,05e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.2922877837673192;  // std dev = 0,408, 299,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.1015963294878366;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20168565965102553;  // std dev = 7,204, 314,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926044;  // std dev = 1,25e-07, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1866704564984049;  // std dev = 0,396, 295,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 6,04e-09, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.14182562287030678;  // std dev = 0,396, 295,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109143;  // std dev = 3,23e-09, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.47716402339600816;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3406344152871195;  // std dev = 0,000, 164,000 (wgt'ed) examples reached here.  /* #pos=164 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3423547059847306;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1856541234805925;  // std dev = 5,169, 128,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.073246225763337;  // std dev = 9,19e-08, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2839953556713183;  // std dev = 0,119, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2687246635012455;  // std dev = 0,000, 164,000 (wgt'ed) examples reached here.  /* #pos=164 */
%   | | | else return -0.06842697784420265;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.13957897184533502;  // std dev = 5,169, 128,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=38 */
%   | | | else return -0.0684269778442027;  // std dev = 0,000, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.046039010827435195;  // std dev = 6,194, 314,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=202 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.06419184008202615;  // std dev = 4,17e-09, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.193783
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.404 seconds
Total inference time: 1.256 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.978133
   AUC PR    = 0.858285
   CLL	      = -0.182979
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.811881
   F1        = 0.896175


Total scoring time: 2.015 seconds
Parameter learned model CLL: -0.182979


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [1.05e-08, 22, 0], 'false,true,false': [0.0, 265, 0], 'true': [8.312, 105, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.716, 3, 164], 'true,true,false': [5.333, 113, 38], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 25, 0], 'false,true,false': [0.0, 261, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.419, 104, 202], 'false,true,true,true': [2.63e-09, 3, 0], 'false,true,true,false': [1.67e-08, 19, 0], 'false,true,false': [0.0, 255, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.408, 97, 202], 'true,true,true,false': [1.05e-08, 10, 0], 'false,true': [0.0, 316, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [1.25e-07, 270, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 31, 0], 'true': [7.204, 112, 202], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.396, 93, 202], 'false,true': [6.04e-09, 302, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.396, 93, 202], 'false,true': [3.23e-09, 269, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [1.05e-08, 3, 0], 'true,true,false,false': [5.169, 90, 38], 'true,true,true,false': [0.0, 0, 164], 'true,true,false,true': [0.0, 4, 0], 'false,true': [9.19e-08, 310, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 164], 'true,false,false,false': [0.0, 246, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.119, 13, 0], 'true,true,false,true': [1.86e-09, 5, 0], 'true,false,true,false': [0.0, 25, 0], 'true,true,false,false': [0.0, 17, 0], 'true,false,false,true': [5.169, 90, 38]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 29, 0], 'false,true,false': [4.17e-09, 264, 0], 'true': [6.194, 112, 202]}]]
[{'': [0.2250421755138032, 9.156478553609538e-18], 'false,true': [1.708035422500241e-17, -7.373556691850096e-17], 'false': [9.156478553609538e-18, nan], 'false,true,true': [0.0, 5.046468293750712e-18]}, {'': [0.2317155175823712, -8.018277400070575e-17], 'false': [-8.018277400070575e-17, nan], 'true': [0.2317155175823712, nan], 'true,true': [0.01764136397862853, 0.1883250734616895], 'false,true,true': [0.0, -4.440892098500626e-18], 'false,true': [-4.11193712824132e-18, -6.805964901916668e-17]}, {'': [0.17522291606617166, -1.0901828978268685e-16], 'false,true': [7.569702440626067e-18, -9.578394722256253e-17], 'false': [-1.0901828978268685e-16, nan], 'false,true,true': [2.3129646346357427e-18, 1.460819769243627e-17], 'true': [0.17522291606617166, nan]}, {'': [0.17370319610394883, -4.6376404826114135e-17], 'true,true': [0.003965370581565171, 0.1661075426113908], 'false': [-4.6376404826114135e-17, nan], 'true,true,true': [0.0, 1.1102230246251566e-17], 'true': [0.17370319610394883, nan]}, {'': [0.16529064132218893, 8.704738664835115e-17], 'false,true': [-3.581364595565021e-18, 5.756711979537848e-17], 'false': [8.704738664835115e-17, nan], 'false,true,false': [nan, 5.756711979537848e-17]}, {'': [0.15646097909462892, 3.676235180878002e-17], 'false': [3.676235180878002e-17, nan], 'true': [0.15646097909462892, nan]}, {'': [0.15655681263552682, 1.0730780163663224e-17], 'false': [1.0730780163663224e-17, nan], 'true': [0.15655681263552682, nan]}, {'': [0.16200868250331862, 2.721837092629416e-17], 'false': [2.721837092629416e-17, nan], 'true,true,true': [3.700743415417188e-17, -4.76583542278116e-16], 'true': [0.16200868250331862, nan], 'true,true,false': [0.0, 0.20874023437500078], 'true,true': [0.011798443431667213, 0.20313631755907172]}, {'': [0.07270881581286402, nan], 'true,false': [0.013047004282464584, 0.07258016990484921], 'true,false,true': [-3.249433242805336e-17, -5.551115123125783e-19], 'true': [0.011255620339155288, 0.07499120540318358], 'true,true,false': [6.938893903907229e-19, -8.163404592832033e-19], 'true,true': [0.0010940514659938051, -3.784851220313033e-18], 'true,false,false': [0.20874023437500056, -1.8052406904474092e-18]}, {'': [0.12219403251119723, 4.002844918716551e-17], 'false,true': [-4.625929269271486e-19, 1.682156097916904e-17], 'false': [4.002844918716551e-17, nan], 'false,true,true': [0.0, -4.785444071660157e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048766;  // std dev = 8,16e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.14185106490048782;  // std dev = 1,03e-07, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.125444638528392;  // std dev = 0,000, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 4,01e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return 0.5553664367462834;  // std dev = 4,08e-08, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.11231637819360692;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | | else return 0.41751358415830964;  // std dev = 2,80e-07, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783631;  // std dev = 1,83e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.10159632948783627;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783663;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601504;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return 0.3207118471601502;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,28e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926079;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926092;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.09269127618926076;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else if ( female(A) )
%   | | then return -0.0851847513883968;  // std dev = 3,84e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.08518475138839679;  // std dev = 2,63e-09, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.08518475138839678;  // std dev = 2,08e-09, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 3,16e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return -0.08518475138839678;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253567;  // std dev = 1,29e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return 0.20975771563253556;  // std dev = 1,51e-08, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109151;  // std dev = 6,41e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | | else return -0.07877675473109148;  // std dev = 7,96e-08, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.07877675473109169;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.17709649774527772;  // std dev = 0,000, 164,000 (wgt'ed) examples reached here.  /* #pos=164 */
%   | else if ( genre(A, E) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A), director(B) )
%   | | | then return 0.17709649774527755;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | | else return -0.07324622576333693;  // std dev = 4,21e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.07509708560461328;  // std dev = 0,009, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367147;  // std dev = 0,000, 164,000 (wgt'ed) examples reached here.  /* #pos=164 */
%   | | | else return -0.06842697784420261;  // std dev = 1,05e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.12702631903112746;  // std dev = 0,465, 43,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | | | else return -0.06842697784420318;  // std dev = 0,000, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13491711318847582;  // std dev = 0,001, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return 0.13426282436972906;  // std dev = 0,000840, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202616;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0660014819265708;  // std dev = 0,015, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.06412941526042773;  // std dev = 0,000145, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | | else if ( female(A) )
%   | | | then return -0.06987622951663669;  // std dev = 0,019, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06866829676178193;  // std dev = 0,027, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063858
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.607 seconds
Total inference time: 1.619 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06442
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.316 seconds
Refined model CLL: -0.06442


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063858
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.341999999999999 seconds
Total inference time: 1.619 seconds
AUC ROC: 1.0
Total revision time: 11.341999999999999
Best scored revision CLL: -0.06442


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 19:14:58
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.619, 'parameter_0.6': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.256, 'CLL': -0.193783, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.404}, 'CLL': -0.063858, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.341999999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048777;  // std dev = 1,37e-07, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1254446385283913;  // std dev = 2,58e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.12544463852839208;  // std dev = 0,000, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.11231637819360671;  // std dev = 0,000, 356,000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.1015963294878365;  // std dev = 0,000, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.0926912761892605;  // std dev = 1,80e-07, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2,04e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.08518475138839678;  // std dev = 1,01e-07, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109147;  // std dev = 0,000, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333714;  // std dev = 6,14e-08, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17223547398782915;  // std dev = 0,496, 206,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15337400105014964;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.06861982844555113;  // std dev = 0,035, 361,000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13449878084060146;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202622;  // std dev = 3,73e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06438967012791222;  // std dev = 0,036, 392,000 (wgt'ed) examples reached here.  /* #neg=392 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06387
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.699 seconds
Total inference time: 1.213 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 19:15:03
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.213, 'CLL': -0.06387, 'Recall': 1.0, 'Learning time': 3.699, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.14185106490048777;  // std dev = 1,30e-07, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.165 seconds
Total inference time: 0.802 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 19:15:05
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.802, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 1.165, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5461284747414519;  // std dev = 9,162, 391,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.14185106490048743;  // std dev = 1,38e-08, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7689195474235921;  // std dev = 1,408, 221,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=219 */
%   | | else return 0.04823959144951934;  // std dev = 6,040, 185,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=50 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12544463852839136;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.1254446385283922;  // std dev = 0,000, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3540534065738935;  // std dev = 0,418, 403,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.4673220037847607;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.29910183028651044;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.2856835148114324;  // std dev = 0,407, 397,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783592;  // std dev = 2,21e-07, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21341538585444775;  // std dev = 8,075, 403,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926061;  // std dev = 1,85e-07, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.16143571771271553;  // std dev = 0,402, 403,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 6,32e-09, 408,000 (wgt'ed) examples reached here.  /* #neg=408 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09653848263811698;  // std dev = 0,410, 423,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109143;  // std dev = 6,11e-09, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.46833468902647163;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3483784568075391;  // std dev = 5,72e-07, 219,000 (wgt'ed) examples reached here.  /* #pos=219 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3364196134672141;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.18903489037378426;  // std dev = 5,969, 174,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=50 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333771;  // std dev = 0,000, 408,000 (wgt'ed) examples reached here.  /* #neg=408 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2658638073438186;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.27397392618721034;  // std dev = 0,000, 219,000 (wgt'ed) examples reached here.  /* #pos=219 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1422297130002222;  // std dev = 5,969, 174,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=50 */
%   | | | else return -0.06842697784420311;  // std dev = 0,000, 325,000 (wgt'ed) examples reached here.  /* #neg=325 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0708895226303097;  // std dev = 6,822, 403,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=269 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.06419184008202572;  // std dev = 8,84e-09, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.193276
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.723 seconds
Total inference time: 1.558 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.978704
   AUC PR    = 0.860353
   CLL	      = -0.180786
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.814126
   F1        = 0.897541


Total scoring time: 2.756 seconds
Parameter learned model CLL: -0.180786


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [2.79e-08, 30, 0], 'false,true,false': [1.38e-08, 372, 0], 'true': [9.162, 122, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.408, 2, 219], 'true,true,false': [6.04, 135, 50], 'false,true,true,true': [0.0, 6, 0], 'false,true,true,false': [1.05e-08, 34, 0], 'false,true,false': [0.0, 358, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.418, 134, 269], 'false,true,true,true': [2.63e-09, 3, 0], 'false,true,true,false': [2.36e-08, 47, 0], 'false,true,false': [0.0, 359, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [1.49e-08, 9, 0], 'true,true,false': [0.407, 128, 269], 'true,true,true,false': [0.0, 8, 0], 'false,true': [2.21e-07, 400, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [1.85e-07, 365, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 35, 0], 'true': [8.075, 134, 269], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.402, 134, 269], 'false,true': [6.32e-09, 408, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.41, 154, 269], 'false,true': [6.11e-09, 391, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 4, 0], 'true,true,false,false': [5.969, 124, 50], 'true,true,true,false': [5.72e-07, 0, 219], 'true,true,false,true': [0.0, 8, 0], 'false,true': [0.0, 408, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 219], 'true,false,false,false': [0.0, 325, 0], 'false': [0.0, 0, 0], 'true,true,true': [1.05e-08, 9, 0], 'true,true,false,true': [1.86e-09, 5, 0], 'true,false,true,false': [0.0, 32, 0], 'true,true,false,false': [0.0, 25, 0], 'true,false,false,true': [5.969, 124, 50]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 8, 0], 'false,true,true,false': [0.0, 33, 0], 'false,true,false': [8.84e-09, 357, 0], 'true': [6.822, 134, 269]}]]
[{'': [0.21466369267600646, 2.2150170858047134e-16], 'false,true': [3.900783600034334e-17, 1.862309589693811e-16], 'false': [2.2150170858047134e-16, nan], 'false,true,true': [-7.93016446160826e-18, 2.590520390792032e-17]}, {'': [0.2235737338930783, -1.2720143196710337e-16], 'false': [-1.2720143196710337e-16, nan], 'true': [0.2235737338930783, nan], 'true,true': [0.008967875350629411, 0.1972242512783063], 'false,true,true': [-2.3129646346357427e-18, 3.2653618371328133e-18], 'false,true': [2.4980018054066023e-17, -1.215663200148216e-16]}, {'': [0.17462706700469852, -1.9544268404159236e-17], 'false,true': [1.7763568394002505e-17, -2.9688415143179675e-17], 'false': [-1.9544268404159236e-17, nan], 'false,true,true': [2.3129646346357427e-18, 1.1810883240693155e-17], 'true': [0.17462706700469852, nan]}, {'': [0.17699317125570077, 1.2212453270876723e-16], 'true,true': [0.007050027431032191, 0.1656251728810626], 'false': [1.2212453270876723e-16, nan], 'true,true,true': [2.4671622769447922e-17, -1.3877787807814457e-17], 'true': [0.17699317125570077, nan]}, {'': [0.16181626007549568, 5.440092820663267e-17], 'false,true': [-7.93016446160826e-18, 9.368457303686252e-17], 'false': [5.440092820663267e-17, nan], 'false,true,false': [nan, 9.368457303686252e-17]}, {'': [0.16178135713892192, 3.918434204559376e-17], 'false': [3.918434204559376e-17, nan], 'true': [0.16178135713892192, nan]}, {'': [0.16817267955282617, 3.8616453030440226e-17], 'false': [3.8616453030440226e-17, nan], 'true': [0.16817267955282617, nan]}, {'': [0.16416730487209133, -7.074950647121095e-17], 'false': [-7.074950647121095e-17, nan], 'true,true,true': [0.0, 1.4924641938340003e-15], 'true': [0.16416730487209133, nan], 'true,true,false': [-1.3877787807814457e-17, 0.20478266613819543], 'true,true': [0.011749881107974817, 0.19669408442378397]}, {'': [0.07349457090088563, nan], 'true,false': [0.01304116697518069, 0.07264420135775979], 'true,false,true': [-1.1355705822650002e-16, -3.469446951953614e-18], 'true': [0.006919757688081749, 0.07614126736508346], 'true,true,false': [6.938893903907229e-19, -4.440892098500626e-18], 'true,true': [1.2335811384723961e-17, -5.551115123125783e-18], 'true,false,false': [0.20478266613819449, -6.900463106900972e-17]}, {'': [0.11548014239847823, 9.540107397532752e-17], 'false,true': [-2.7078610356711136e-18, 7.712473672466073e-17], 'false': [9.540107397532752e-17, nan], 'false,true,true': [0.0, -1.6821560979169039e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048788;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.14185106490048746;  // std dev = 2,53e-07, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839127;  // std dev = 3,65e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.12544463852839116;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.1254446385283922;  // std dev = 0,000, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,15e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0.5553664367462834;  // std dev = 4,21e-08, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.11231637819360633;  // std dev = 0,000, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.10159632948783638;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( female(B) )
%   | then return -0.10159632948783648;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else return -0.10159632948783658;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0926912761892609;  // std dev = 5,48e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.09803430816840616;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926061;  // std dev = 8,56e-08, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | | | else return -0.092691276189261;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0.2551722425694894;  // std dev = 3,73e-09, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 5,27e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.091346880508172;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return -0.08518475138839678;  // std dev = 4,84e-09, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 3,23e-09, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 4,94e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | | else return -0.08518475138839678;  // std dev = 7,45e-09, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253517;  // std dev = 1,54e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0.20975771563253512;  // std dev = 1,65e-08, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109155;  // std dev = 6,75e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.08251906744870756;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07877675473109143;  // std dev = 1,86e-09, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.0793280251669746;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.17709649774527728;  // std dev = 0,000, 219,000 (wgt'ed) examples reached here.  /* #pos=219 */
%   | else if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333703;  // std dev = 2,36e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | | else return 0.17709649774527744;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333698;  // std dev = 2,79e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | | else return -0.07324622576333674;  // std dev = 9,77e-08, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.07324622576333703;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.0684269778442027;  // std dev = 1,86e-09, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.06960414688294303;  // std dev = 0,002, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.12144609829114192;  // std dev = 0,794, 106,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=91 */
%   | | | else return 0.11421732538191239;  // std dev = 1,044, 155,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=128 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.11900593396755456;  // std dev = 0,611, 59,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=50 */
%   | | | else return -0.06856449134339981;  // std dev = 0,029, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13776788093481732;  // std dev = 0,000133, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0.13849622754692376;  // std dev = 0,000154, 139,000 (wgt'ed) examples reached here.  /* #pos=139 */
%   | else if ( actor(B) )
%   | | then return -0.06418419639588611;  // std dev = 2,17e-06, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return -0.07125506497392506;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06412116233630748;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06418477230745434;  // std dev = 2,12e-05, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( actor(B) )
%   | | then return -0.06418357996958447;  // std dev = 5,35e-09, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */
%   | | else if ( female(A) )
%   | | | then return -0.07653689070155463;  // std dev = 0,000357, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07614134335976955;  // std dev = 0,000678, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064611
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.975 seconds
Total inference time: 1.401 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065162
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.49 seconds
Refined model CLL: -0.065162


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064611
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.943999999999999 seconds
Total inference time: 1.401 seconds
AUC ROC: 1.0
Total revision time: 12.943999999999999
Best scored revision CLL: -0.065162


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 19:15:22
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.401, 'parameter_0.8': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.558, 'CLL': -0.193276, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.723}, 'CLL': -0.064611, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.943999999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048724;  // std dev = 2,83e-07, 474,000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1254446385283923;  // std dev = 0,000, 468,000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.112316378193606;  // std dev = 0,000, 470,000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.10159632948783581;  // std dev = 2,67e-07, 498,000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.0926912761892615;  // std dev = 0,000, 531,000 (wgt'ed) examples reached here.  /* #neg=531 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.08518475138839678;  // std dev = 1,30e-07, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.07877675473109196;  // std dev = 0,000, 495,000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333716;  // std dev = 5,96e-08, 521,000 (wgt'ed) examples reached here.  /* #neg=521 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06842697784420347;  // std dev = 0,000, 498,000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06419184008202561;  // std dev = 2,09e-07, 490,000 (wgt'ed) examples reached here.  /* #neg=490 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.851 seconds
Total inference time: 1.062 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 19:15:27
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.062, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 3.851, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.1418510649004873;  // std dev = 2,63e-07, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.34 seconds
Total inference time: 0.776 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 19:15:30
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.776, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 1.34, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5087280856786586;  // std dev = 10,851, 518,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.14185106490048732;  // std dev = 1,15e-08, 464,000 (wgt'ed) examples reached here.  /* #neg=464 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7736862394815773;  // std dev = 1,723, 281,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=278 */
%   | | else return 0.056251796986871085;  // std dev = 6,554, 217,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.12544463852839127;  // std dev = 3,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.12544463852839233;  // std dev = 0,000, 461,000 (wgt'ed) examples reached here.  /* #neg=461 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3530294111468825;  // std dev = 0,419, 511,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.11231637819360606;  // std dev = 0,000, 437,000 (wgt'ed) examples reached here.  /* #neg=437 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.45895351630479997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.2927654255862026;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.29709199993150626;  // std dev = 0,405, 493,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783551;  // std dev = 3,21e-07, 473,000 (wgt'ed) examples reached here.  /* #neg=473 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21995365678008735;  // std dev = 8,970, 503,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926108;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926117;  // std dev = 8,16e-08, 443,000 (wgt'ed) examples reached here.  /* #neg=443 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.14281267666245862;  // std dev = 0,408, 524,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 6,72e-09, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.113779102776885;  // std dev = 0,407, 519,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.0787767547310921;  // std dev = 5,27e-09, 503,000 (wgt'ed) examples reached here.  /* #neg=503 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.4633249009553979;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.35226882338344995;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.33220905897781733;  // std dev = 1,49e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.16723867192471276;  // std dev = 6,400, 193,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333684;  // std dev = 1,78e-07, 525,000 (wgt'ed) examples reached here.  /* #neg=525 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2763513069914199;  // std dev = 0,142, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420275;  // std dev = 1,29e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2766079846491133;  // std dev = 3,72e-07, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.15058241891626628;  // std dev = 6,513, 210,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=59 */
%   | | | else return -0.06842697784420337;  // std dev = 0,000, 407,000 (wgt'ed) examples reached here.  /* #neg=407 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07070798582997545;  // std dev = 7,582, 501,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=337 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.0641918400820255;  // std dev = 1,05e-08, 441,000 (wgt'ed) examples reached here.  /* #neg=441 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.193116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.264 seconds
Total inference time: 1.283 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.979741
   AUC PR    = 0.868436
   CLL	      = -0.181468
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total scoring time: 3.212 seconds
Parameter learned model CLL: -0.181468


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 11, 0], 'false,true,true,false': [3.65e-08, 36, 0], 'false,true,false': [1.15e-08, 464, 0], 'true': [10.851, 181, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.723, 3, 278], 'true,true,false': [6.554, 158, 59], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [3.49e-08, 42, 0], 'false,true,false': [0.0, 461, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.419, 174, 337], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [0.0, 32, 0], 'false,true,false': [0.0, 437, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.405, 156, 337], 'true,true,true,false': [1.49e-08, 17, 0], 'false,true': [3.21e-07, 473, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [8.16e-08, 443, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [1.05e-08, 43, 0], 'true': [8.97, 166, 337], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.408, 187, 337], 'false,true': [6.72e-09, 493, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.407, 182, 337], 'false,true': [5.27e-09, 503, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 4, 0], 'true,true,false,false': [6.4, 134, 59], 'true,true,true,false': [0.0, 0, 278], 'true,true,false,true': [1.49e-08, 16, 0], 'false,true': [1.78e-07, 525, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [3.72e-07, 0, 278], 'true,false,false,false': [0.0, 407, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.142, 20, 0], 'true,true,false,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 33, 0], 'true,true,false,false': [1.29e-08, 42, 0], 'true,false,false,true': [6.513, 151, 59]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 40, 0], 'false,true,false': [1.05e-08, 441, 0], 'true': [7.582, 164, 337]}]]
[{'': [0.22732591941086405, -7.300096600275002e-17], 'false,true': [5.196788625904988e-17, 1.339924340064844e-16], 'false': [-7.300096600275002e-17, nan], 'false,true,true': [-1.0092936587501423e-17, 3.700743415417188e-17]}, {'': [0.21877469718230716, -1.4280515767727505e-16], 'false': [-1.4280515767727505e-16, nan], 'true': [0.21877469718230716, nan], 'true,true': [0.010562176264238608, 0.19796555458812], 'false,true,true': [-1.982541115402065e-18, 2.9077269692563625e-17], 'false,true': [4.531522549490435e-17, -1.367910364397156e-16]}, {'': [0.1758860075905457, -5.597763149370537e-18], 'false,true': [-5.693451408334136e-18, -1.4227114274372716e-17], 'false': [-5.597763149370537e-18, nan], 'false,true,true': [-1.982541115402065e-18, -1.0408340855860843e-17], 'true': [0.1758860075905457, nan]}, {'': [0.17026588897477424, 2.178196547256121e-16], 'true,true': [0.0014491178563079687, 0.16378699933959343], 'false': [2.178196547256121e-16, nan], 'true,true,true': [0.0, 1.3061447348531253e-17], 'true': [0.17026588897477424, nan]}, {'': [0.15996650919595282, -2.010280373806868e-17], 'false,true': [2.581914010756178e-18, 1.503688069469738e-17], 'false': [-2.010280373806868e-17, nan], 'false,true,false': [nan, 1.503688069469738e-17]}, {'': [0.16666696887029078, 4.503947361562501e-17], 'false': [4.503947361562501e-17, nan], 'true': [0.16666696887029078, nan]}, {'': [0.16540404422479588, 2.736931511998398e-17], 'false': [2.736931511998398e-17, nan], 'true': [0.16540404422479588, nan]}, {'': [0.1558406155161736, 6.005777885591323e-17], 'false': [6.005777885591323e-17, nan], 'true,true,true': [0.0, -1.5846636552923098e-15], 'true': [0.1558406155161736, nan], 'true,true,false': [1.3877787807814457e-17, 0.21224730865258187], 'true,true': [0.009301528506828784, 0.19792267381813025]}, {'': [0.0725380364045564, nan], 'true,false': [0.011291825724450104, 0.07027356096775245], 'true,false,true': [4.984022786806458e-16, -3.3643121958338078e-18], 'true': [0.0092725850670607, 0.07572005700298504], 'true,true,false': [-1.1564823173178713e-18, 3.96508223080413e-18], 'true,true': [0.0010097115917803157, 4.625929269271485e-18], 'true,false,false': [0.2020181405895682, -1.1729629007096248e-16]}, {'': [0.11473099030280165, 1.216177919091458e-16], 'false,true': [-4.738756812424449e-18, 1.0976354619876831e-16], 'false': [1.216177919091458e-16, nan], 'false,true,true': [0.0, -4.8572257327350596e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1418510649004882;  // std dev = 0,000, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.14185106490048724;  // std dev = 2,98e-07, 425,000 (wgt'ed) examples reached here.  /* #neg=425 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.1254446385283923;  // std dev = 0,000, 453,000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360663;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #neg=207 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.11231637819360625;  // std dev = 0,000, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783626;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783644;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #neg=149 */
%   else if ( female(A) )
%   | then return -0.10159632948783655;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | else return -0.10159632948783653;  // std dev = 0,000, 325,000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.09269127618926065;  // std dev = 1,80e-07, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948884;  // std dev = 6,45e-09, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.25517224256948856;  // std dev = 1,18e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.08518475138839678;  // std dev = 1,49e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 6,50e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | | else return -0.08518475138839678;  // std dev = 9,66e-08, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | | else return -0.08518475138839679;  // std dev = 1,32e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.08518475138839679;  // std dev = 1,86e-09, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253504;  // std dev = 1,81e-08, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.20975771563253495;  // std dev = 1,97e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109148;  // std dev = 8,16e-08, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.0787767547310917;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109184;  // std dev = 0,000, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333699;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return 0.17709649774527772;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   | else if ( genre(A, F) )
%   | | then return -0.07324622576333699;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( actor(A), director(B) )
%   | | | then return 0.17709649774527733;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.07324622576333684;  // std dev = 7,22e-08, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then return -0.0732462257633371;  // std dev = 4,17e-09, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420267;  // std dev = 2,63e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.06842697784420264;  // std dev = 3,36e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367144;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | | else return -0.06842697784420264;  // std dev = 1,97e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.10791193189004777;  // std dev = 0,765, 74,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=59 */
%   | | | else return -0.06842697784420358;  // std dev = 0,000, 528,000 (wgt'ed) examples reached here.  /* #neg=528 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.13560358764706426;  // std dev = 0,002, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.13433385342920753;  // std dev = 0,001, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06686178656873443;  // std dev = 0,027, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.06657572087372997;  // std dev = 0,023, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202623;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063836
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.245 seconds
Total inference time: 1.526 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064333
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.217 seconds
Refined model CLL: -0.064333


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063836
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.938 seconds
Total inference time: 1.526 seconds
AUC ROC: 1.0
Total revision time: 14.938
Best scored revision CLL: -0.064333


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 19:15:48
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.283, 'CLL': -0.193116, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.264}, 'Inference time': 1.526, 'CLL': -0.063836, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.938}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.1418510649004886;  // std dev = 0,000, 635,000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.12544463852839233;  // std dev = 0,000, 626,000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.11231637819360597;  // std dev = 0,000, 618,000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783619;  // std dev = 4,21e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.10159632948783534;  // std dev = 3,85e-07, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926196;  // std dev = 0,000, 679,000 (wgt'ed) examples reached here.  /* #neg=679 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.08518475138839678;  // std dev = 1,52e-07, 622,000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109177;  // std dev = 1,05e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07877675473109257;  // std dev = 0,000, 631,000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07324622576333684;  // std dev = 1,40e-07, 618,000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06842697784420367;  // std dev = 0,000, 629,000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06419184008202536;  // std dev = 2,20e-07, 659,000 (wgt'ed) examples reached here.  /* #neg=659 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.303 seconds
Total inference time: 1.068 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 19:15:54
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.068, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 4.303, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.14185106490048865;  // std dev = 0,000, 637,000 (wgt'ed) examples reached here.  /* #neg=637 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.44 seconds
Total inference time: 0.759 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 19:15:56
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.759, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 1.44, 'F1': nan}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5864098046647305;  // std dev = 4,267, 92,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048763;  // std dev = 8,74e-09, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.770933576205086;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else return -0.006844201572692869;  // std dev = 2,789, 45,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3098185760689561;  // std dev = 0,421, 107,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.11231637819360624;  // std dev = 6,97e-09, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.2868738377876315;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.3041883727104129;  // std dev = 0,393, 96,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783621;  // std dev = 5,27e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17448017427977813;  // std dev = 4,208, 107,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926108;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10929849139654566;  // std dev = 0,407, 113,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839682;  // std dev = 5,10e-09, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.17154452167362802;  // std dev = 0,384, 95,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109161;  // std dev = 5,51e-09, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.5799297811747054;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3482651898323099;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3225305779200899;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.16817800083863632;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333706;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2564128661893322;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.27389720840410814;  // std dev = 1,19e-07, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return -0.06842697784420274;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.15769278141019089;  // std dev = 2,714, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.06842697784420265;  // std dev = 4,34e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07146697739995142;  // std dev = 3,269, 98,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=67 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.1843
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total learning time: 1.474 seconds
Total inference time: 1.482 seconds
AUC ROC: 0.97178


Results scoring model
   AUC ROC   = 0.982394
   AUC PR    = 0.889099
   CLL	      = -0.177925
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.850746
   F1        = 0.919355


Total scoring time: 1.468 seconds
Parameter learned model CLL: -0.177925


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 6, 0], 'false,true,false': [8.74e-09, 92, 0], 'true': [4.267, 25, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 57], 'true,true,false': [2.789, 35, 10], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [7.45e-09, 16, 0], 'false,true,false': [0.0, 95, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.421, 40, 67], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.39e-08, 16, 0], 'false,true,false': [6.97e-09, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false': [0.393, 29, 67], 'true,true,true,false': [0.0, 2, 0], 'false,true': [5.27e-08, 89, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [0.0, 86, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 9, 0], 'true': [4.208, 40, 67], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.407, 46, 67], 'false,true': [5.1e-09, 94, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.384, 28, 67], 'false,true': [5.51e-09, 95, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false,false': [2.657, 24, 10], 'true,true,true,false': [0.0, 0, 57], 'true,true,false,true': [0.0, 2, 0], 'false,true': [0.0, 98, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.19e-07, 0, 57], 'true,false,false,false': [4.34e-08, 90, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [2.63e-09, 12, 0], 'true,true,false,false': [2.63e-09, 10, 0], 'true,false,false,true': [2.714, 28, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 9, 0], 'false,true,false': [0.0, 102, 0], 'true': [3.269, 31, 67]}]]
[{'': [0.19789697542532994, 7.993605777301127e-17], 'false,true': [-6.938893903907228e-18, 7.723290606088045e-17], 'false': [7.993605777301127e-17, nan], 'false,true,true': [0.0, -6.938893903907228e-18]}, {'': [0.22539407920030718, 5.9476233462061954e-18], 'false': [5.9476233462061954e-18, nan], 'true': [0.22539407920030718, nan], 'true,true': [-1.495879443705474e-15, 0.17283950617283927], 'false,true,true': [0.0, 3.469446951953614e-18], 'false,true': [0.0, -1.402386978473882e-17]}, {'': [0.17758782249602606, 5.98771968337163e-17], 'false,true': [1.3061447348531253e-17, 4.625929269271486e-17], 'false': [5.98771968337163e-17, nan], 'false,true,true': [0.0, 1.214306433183765e-17], 'true': [0.17758782249602606, nan]}, {'': [0.1579229456366976, 3.118604001756058e-17], 'true,true': [0.0, 0.15408332258211174], 'false': [3.118604001756058e-17, nan], 'true,true,true': [nan, 0.0], 'true': [0.1579229456366976, nan]}, {'': [0.16551980530238875, 1.5192525600133722e-17], 'false,true': [0.0, 0.0], 'false': [1.5192525600133722e-17, nan], 'false,true,false': [nan, 0.0]}, {'': [0.16577936213808786, 2.598394312952494e-17], 'false': [2.598394312952494e-17, nan], 'true': [0.16577936213808786, nan]}, {'': [0.14737626883316063, 3.1553707015662343e-17], 'false': [3.1553707015662343e-17, nan], 'true': [0.14737626883316063, nan]}, {'': [0.14580597471334225, -4.5315225494904345e-18], 'false': [-4.5315225494904345e-18, nan], 'true,true,true': [0.0, -7.791038769299344e-17], 'true': [0.14580597471334225, nan], 'true,true,false': [0.0, 0.2076124567474047], 'true,true': [0.01459813214612201, 0.19732849373945832]}, {'': [0.06329693118379605, nan], 'true,false': [0.01683577407425947, 0.059229111751948504], 'true,false,true': [2.49313240617579e-16, 5.782411586589357e-19], 'true': [0.002920553241066736, 0.06615072717363374], 'true,true,false': [nan, 6.938893903907229e-19], 'true,true': [0.0, 6.938893903907229e-19], 'true,false,false': [0.19390581717451524, 2.0970879354030734e-17]}, {'': [0.10903455144147911, -1.7503516154000216e-17], 'false,true': [7.709882115452476e-19, -1.5782582212808597e-17], 'false': [-1.7503516154000216e-17, nan], 'false,true,true': [nan, 7.709882115452476e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;false,false;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14185106490048766;  // std dev = 7,74e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109542;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.6972387266651825;  // std dev = 0,135, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.1254446385283913;  // std dev = 2,58e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.7194734122109542;  // std dev = 1,49e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.560568765575865;  // std dev = 0,001, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.14111685828337295;  // std dev = 0,100, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.13269519915300768;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return 0.4175135841583101;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.4213839447405307;  // std dev = 0,007, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   else return -0.10159632948783633;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.32333741642532626;  // std dev = 0,001, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.11075479443637964;  // std dev = 0,080, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694891;  // std dev = 7,45e-09, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.2569632986654655;  // std dev = 0,000932, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.10751591216900615;  // std dev = 0,098, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839679;  // std dev = 2,46e-09, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B), actor(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07790452946097616;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253548;  // std dev = 5,89e-09, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.21102227746727556;  // std dev = 0,000812, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   else if ( female(A) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(A) )
%   | | | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.17818933566998243;  // std dev = 3,33e-08, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( genre(A, F) )
%   | | then return -0.06677715451183483;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.17666851812867562;  // std dev = 0,003, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.0801327838388334;  // std dev = 0,202, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07324622576333704;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06652938539373529;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15328167104448492;  // std dev = 0,003, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.12821856026189915;  // std dev = 0,209, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.06371020874519072;  // std dev = 0,307, 96,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.13479741364711653;  // std dev = 0,001, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.13594675551175042;  // std dev = 0,005, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06406162133831893;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.0641139378749107;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.09661296843045525;  // std dev = 0,069, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then return -0.06421085425848662;  // std dev = 0,000104, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then return -0.06447576539946932;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06426282141138698;  // std dev = 0,000348, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.042 seconds
Total inference time: 1.472 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065198
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.827 seconds
Refined model CLL: -0.065198


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.811 seconds
Total inference time: 1.472 seconds
AUC ROC: 1.0
Total revision time: 7.811
Best scored revision CLL: -0.065198


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 19:16:08
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.472, 'CLL': -0.064077, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.811, 'parameter_0.2': {'AUC PR': 0.824078, 'AUC ROC': 0.97178, 'Precision': [1.0, 0.5], 'Inference time': 1.482, 'CLL': -0.1843, 'Recall': 0.777778, 'F1': 0.875, 'Learning time': 1.474}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048777;  // std dev = 2,98e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839108;  // std dev = 7,60e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.11231637819360625;  // std dev = 8,02e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783638;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583101;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.4045358363171565;  // std dev = 0,081, 40,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32236139055337415;  // std dev = 0,011, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.09441758717390583;  // std dev = 0,103, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08505031919195664;  // std dev = 5,37e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2562980050200553;  // std dev = 0,010, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2105529341507416;  // std dev = 0,009, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07931395612275492;  // std dev = 0,087, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17767972990673708;  // std dev = 0,008, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.0737551412448056;  // std dev = 0,082, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1531862843614098;  // std dev = 0,007, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06825894406607805;  // std dev = 8,52e-06, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1343524202620385;  // std dev = 0,006, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06456962951988854;  // std dev = 0,073, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063671
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.221 seconds
Total inference time: 1.184 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 19:16:12
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.184, 'CLL': -0.063671, 'Recall': 1.0, 'Learning time': 2.221, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048777;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.853 seconds
Total inference time: 0.77 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 19:16:13
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.77, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 0.853, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.534916611867186;  // std dev = 6,581, 198,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.1418510649004883;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7548999434099548;  // std dev = 1,710, 120,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=117 */
%   | | else return -0.012782983419313406;  // std dev = 3,671, 82,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3536014510938028;  // std dev = 0,411, 202,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.11231637819360674;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.4609342865013409;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.28408968494185255;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.25038758683899615;  // std dev = 0,410, 212,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10165047114796669;  // std dev = 0,011, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2371320734993126;  // std dev = 5,464, 196,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09326832753691294;  // std dev = 0,010, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09268672299752025;  // std dev = 1,02e-07, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.15493450061608965;  // std dev = 0,396, 206,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08527307332784623;  // std dev = 0,000931, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09179106219476417;  // std dev = 0,404, 216,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07876430923804884;  // std dev = 9,84e-06, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.46663499539234005;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.359470461581109;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.32640348940055003;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.2165263905990834;  // std dev = 3,604, 72,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07335270919053725;  // std dev = 0,014, 201,000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2907936559174396;  // std dev = 0,110, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07588590410968574;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06837513634304473;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.28147968706042936;  // std dev = 1,33e-07, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | | else return -0.06841219384055316;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.18179187496590446;  // std dev = 3,646, 78,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | | else return -0.06841219384055298;  // std dev = 5,96e-08, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.03740350923006668;  // std dev = 4,819, 218,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=134 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07073256489519392;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0641460983156412;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.06417879598382588;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.170776
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total learning time: 1.605 seconds
Total inference time: 1.267 seconds
AUC ROC: 0.97178


Results scoring model
   AUC ROC   = 0.984696
   AUC PR    = 0.904955
   CLL	      = -0.167374
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.873134
   F1        = 0.932271


Total scoring time: 2.129 seconds
Parameter learned model CLL: -0.167374


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [1.49e-08, 23, 0], 'false,true,false': [0.0, 179, 0], 'true': [6.581, 64, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.71, 3, 117], 'true,true,false': [3.671, 65, 17], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [7.45e-09, 16, 0], 'false,true,false': [0.0, 180, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.411, 68, 134], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [1.39e-08, 16, 0], 'false,true,false': [0.0, 218, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 3, 0], 'true,true,false': [0.41, 78, 134], 'true,true,true,false': [0.0, 4, 0], 'false,true': [0.011, 198, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [1.02e-07, 146, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.01, 17, 0], 'true': [5.464, 62, 134], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.396, 72, 134], 'false,true': [0.000931, 190, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.404, 82, 134], 'false,true': [9.84e-06, 225, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false,false': [3.604, 55, 17], 'true,true,true,false': [0.0, 0, 117], 'true,true,false,true': [1.83e-08, 9, 0], 'false,true': [0.014, 201, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.33e-07, 0, 117], 'true,false,false,false': [5.96e-08, 170, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.11, 6, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 19, 0], 'true,true,false,false': [5.27e-09, 14, 0], 'true,false,false,true': [3.646, 61, 17]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 23, 0], 'false,true,false': [0.0, 172, 0], 'true': [4.819, 84, 134]}]]
[{'': [0.21875318845016267, -2.38291771139058e-16], 'false,true': [1.708035422500241e-17, -1.9847562451399445e-16], 'false': [-2.38291771139058e-16, nan], 'false,true,true': [0.0, 9.654113257610057e-18]}, {'': [0.22331144005489592, -2.945489657168783e-17], 'false': [-2.945489657168783e-17, nan], 'true': [0.22331144005489592, nan], 'true,true': [0.02437500000000045, 0.16433670434265357], 'false,true,true': [nan, 3.469446951953614e-18], 'false,true': [3.469446951953614e-18, -1.7270135938613546e-17]}, {'': [0.16903354649517668, 2.8479758027500267e-06], 'false,true': [2.7576195106865375e-05, -4.889055521285093e-17], 'false': [2.8479758027500267e-06, nan], 'false,true,true': [0.0, 1.214306433183765e-17], 'true': [0.16903354649517668, nan]}, {'': [0.17485622089348377, 5.774699141518445e-07], 'true,true': [0.007658941983853307, 0.1684728325905776], 'false': [5.774699141518445e-07, nan], 'true,true,true': [0.0, 0.0], 'true': [0.17485622089348377, nan]}, {'': [0.15234184873901577, 5.960644538549472e-07], 'false,true': [5.412221443866902e-06, 7.14801125443594e-17], 'false': [5.960644538549472e-07, nan], 'false,true,false': [nan, 7.14801125443594e-17]}, {'': [0.15648746560174742, 8.672281558898046e-07], 'false': [8.672281558898046e-07, nan], 'true': [0.15648746560174742, nan]}, {'': [0.16308010943601822, 9.691297048814501e-11], 'false': [9.691297048814501e-11, nan], 'true': [0.16308010943601822, nan]}, {'': [0.15160766572585177, 9.314135275930768e-07], 'false': [9.314135275930768e-07, nan], 'true,true,true': [0.0, -2.277380563333654e-16], 'true': [0.15160766572585177, nan], 'true,true,false': [3.700743415417188e-17, 0.1803626543209877], 'true,true': [0.011276982762069326, 0.16151475217085604]}, {'': [0.06552194706179502, nan], 'true,false': [0.014713953387559993, 0.05637982683840488], 'true,false,true': [1.518253708889103e-16, 0.0], 'true': [0.010283612199075488, 0.06754919904802674], 'true,true,false': [0.0, 1.982541115402065e-18], 'true,true': [0.0020150368017229727, 6.170022298609794e-06], 'true,false,false': [0.17044707429322806, 2.0898315757650005e-17]}, {'': [0.10653832548901361, 4.322510125843912e-07], 'false,true': [3.1928814914616853e-06, -2.6464618610250825e-17], 'false': [4.322510125843912e-07, nan], 'false,true,true': [0.0, -6.033820786006285e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.14185106490048818;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 3,49e-08, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.5553664367462836;  // std dev = 3,73e-08, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360635;  // std dev = 3,48e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.11231637819360653;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | | else return 0.4175135841583106;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.10159632948783653;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.32071184716015;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926094;  // std dev = 2,28e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926093;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,49e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(B) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( female(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.08518475138839679;  // std dev = 4,56e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.0851847513883968;  // std dev = 5,27e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253595;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.20975771563253598;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0787767547310917;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.07877675473109154;  // std dev = 5,67e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else return -0.0787767547310917;  // std dev = 9,31e-10, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( female(A) )
%   | | then return -0.0787767547310917;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07877675473109169;  // std dev = 9,31e-10, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333702;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.17709649774527741;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | else if ( genre(A, F) )
%   | | then return -0.07324622576333702;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.17709649774527741;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( female(A) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.06842697784420271;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.1261368402364826;  // std dev = 0,830, 133,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=117 */
%   | | | else return -0.06842697784420267;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06842697784420261;  // std dev = 5,96e-08, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | | | else return 0.1294627174686315;  // std dev = 0,296, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13702666765251734;  // std dev = 0,000170, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.1371143068827572;  // std dev = 6,37e-05, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.06419184008202618;  // std dev = 9,31e-10, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202619;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07694481288861317;  // std dev = 0,000223, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07699736327112171;  // std dev = 0,000386, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064263
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.459 seconds
Total inference time: 1.581 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06511
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.933 seconds
Refined model CLL: -0.06511


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064263
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.126 seconds
Total inference time: 1.581 seconds
AUC ROC: 1.0
Total revision time: 9.126
Best scored revision CLL: -0.06511


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 19:16:26
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 0.824078, 'AUC ROC': 0.97178, 'Precision': [1.0, 0.5], 'Inference time': 1.267, 'CLL': -0.170776, 'Recall': 0.777778, 'F1': 0.875, 'Learning time': 1.605}, 'Inference time': 1.581, 'CLL': -0.064263, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.126}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048835;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.1254446385283918;  // std dev = 0,000, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.11231637819360683;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.1015963294878365;  // std dev = 0,000, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926093;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.09269127618926054;  // std dev = 6,66e-08, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.08518475138839678;  // std dev = 8,16e-08, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07877675473109144;  // std dev = 6,50e-08, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07324622576333671;  // std dev = 1,14e-07, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.06842697784420276;  // std dev = 0,000, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202622;  // std dev = 3,73e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06419184008202625;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.757 seconds
Total inference time: 1.23 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 19:16:30
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.23, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 2.757, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.1418510649004885;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.03 seconds
Total inference time: 0.718 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 19:16:32
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.718, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 1.03, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4835359320035332;  // std dev = 8,699, 323,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.1418510649004881;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7830372624848122;  // std dev = 0,997, 180,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=179 */
%   | | else return -0.03030481975491129;  // std dev = 4,340, 127,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.12544463852839194;  // std dev = 0,000, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3382611510884427;  // std dev = 0,416, 316,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.11231637819360685;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.45136286934785663;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.26727199062965434;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.30968272851519824;  // std dev = 0,390, 293,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.1015963294878364;  // std dev = 3,65e-08, 338,000 (wgt'ed) examples reached here.  /* #neg=338 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20337515824270383;  // std dev = 6,994, 313,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926043;  // std dev = 1,52e-07, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.18708923936985467;  // std dev = 0,383, 295,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 6,11e-09, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.15842850168128483;  // std dev = 0,374, 288,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109144;  // std dev = 2,63e-09, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.47561046567678633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.33997402484019595;  // std dev = 2,80e-07, 179,000 (wgt'ed) examples reached here.  /* #pos=179 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3258782630116395;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.29094524132584076;  // std dev = 4,365, 134,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.073246225763337;  // std dev = 9,19e-08, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3095913127169256;  // std dev = 0,144, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2682766073903746;  // std dev = 1,19e-07, 179,000 (wgt'ed) examples reached here.  /* #pos=179 */
%   | | | else return -0.06842697784420265;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.16380916185878347;  // std dev = 4,215, 101,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=23 */
%   | | | else return -0.06842697784420268;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.047269331828237615;  // std dev = 5,574, 316,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=202 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.06419184008202616;  // std dev = 4,06e-09, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.169954
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total learning time: 2.243 seconds
Total inference time: 1.386 seconds
AUC ROC: 0.97178


Results scoring model
   AUC ROC   = 0.986444
   AUC PR    = 0.915016
   CLL	      = -0.165034
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.886139
   F1        = 0.939633


Total scoring time: 1.99 seconds
Parameter learned model CLL: -0.165034


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [2.11e-08, 26, 0], 'false,true,false': [0.0, 266, 0], 'true': [8.699, 121, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.997, 1, 179], 'true,true,false': [4.34, 104, 23], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 17, 0], 'false,true,false': [0.0, 274, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.416, 114, 202], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 29, 0], 'false,true,false': [0.0, 248, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [1.05e-08, 3, 0], 'true,true,false': [0.39, 91, 202], 'true,true,true,false': [0.0, 6, 0], 'false,true': [3.65e-08, 338, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [1.52e-07, 297, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 32, 0], 'true': [6.994, 111, 202], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.383, 93, 202], 'false,true': [6.11e-09, 312, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.374, 86, 202], 'false,true': [2.63e-09, 279, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false,false': [4.365, 111, 23], 'true,true,true,false': [2.8e-07, 0, 179], 'true,true,false,true': [0.0, 15, 0], 'false,true': [9.19e-08, 309, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.19e-07, 0, 179], 'true,false,false,false': [0.0, 244, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.144, 8, 0], 'true,true,false,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 22, 0], 'true,true,false,false': [0.0, 27, 0], 'true,false,false,true': [4.215, 78, 23]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.32e-09, 3, 0], 'false,true,true,false': [6.45e-09, 18, 0], 'false,true,false': [4.06e-09, 263, 0], 'true': [5.574, 114, 202]}]]
[{'': [0.23427810100739457, 2.392399783704041e-17], 'false,true': [2.5069552168955147e-17, -7.011934892369409e-17], 'false': [2.392399783704041e-17, nan], 'false,true,true': [-2.7755575615628915e-18, 1.708035422500241e-17]}, {'': [0.22504217551379416, -8.184579294164976e-17], 'false': [-8.184579294164976e-17, nan], 'true': [0.22504217551379416, nan], 'true,true': [0.005524691358020798, 0.14830429660859315], 'false,true,true': [0.0, 0.0], 'false,true': [0.0, -7.455512282154335e-17]}, {'': [0.1730066183885338, -1.1460366705808067e-16], 'false,true': [-8.953411488912552e-18, -8.953411488912552e-17], 'false': [-1.1460366705808067e-16, nan], 'false,true,true': [0.0, -7.656710514656252e-18], 'true': [0.1730066183885338, nan]}, {'': [0.15978257872937413, 3.941620205769787e-18], 'true,true': [0.007530989250497753, 0.15231668980447], 'false': [3.941620205769787e-18, nan], 'true,true,true': [3.700743415417188e-17, 0.0], 'true': [0.15978257872937413, nan]}, {'': [0.1562612036827114, 1.0393577251809976e-16], 'false,true': [-5.204170427930421e-18, 7.775299297038134e-17], 'false': [1.0393577251809976e-16, nan], 'false,true,false': [nan, 7.775299297038134e-17]}, {'': [0.1464068273672419, 3.700743415417188e-17], 'false': [3.700743415417188e-17, nan], 'true': [0.1464068273672419, nan]}, {'': [0.1395280026845493, 7.162729191130042e-18], 'false': [7.162729191130042e-18, nan], 'true': [0.1395280026845493, nan]}, {'': [0.1582845487236443, 2.73064562690977e-17], 'false': [2.73064562690977e-17, nan], 'true,true,true': [0.0, 4.366463739307878e-16], 'true': [0.1582845487236443, nan], 'true,true,false': [-4.4408920985006264e-17, 0.14218088661171724], 'true,true': [0.0036749034861041628, 0.12797785763063793]}, {'': [0.06052140249300089, nan], 'true,false': [0.01105042747387622, 0.05336883028556415], 'true,false,true': [7.939024980559779e-17, -1.261617073437678e-18], 'true': [0.010014444919465593, 0.06278079370291023], 'true,true,false': [0.0, -5.13992141030165e-18], 'true,true': [0.0025904874733513605, -4.476705744456276e-18], 'true,false,false': [0.1758651112636016, 0.0]}, {'': [0.09831603198126429, 3.3619429618930795e-17], 'false,true': [1.32169407693471e-18, 1.604124522272089e-17], 'false': [3.3619429618930795e-17, nan], 'false,true,true': [5.782411586589357e-19, 2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048763;  // std dev = 8,43e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.14185106490048824;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.12544463852839197;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.5553664367462834;  // std dev = 4,21e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.11231637819360692;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.4175135841583102;  // std dev = 1,52e-07, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | | else return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783656;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601503;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.32071184716015005;  // std dev = 1,67e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926079;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926083;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return -0.09269127618926078;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 3,36e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.08518475138839679;  // std dev = 2,08e-09, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839675;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.08518475138839675;  // std dev = 2,28e-09, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839676;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839676;  // std dev = 4,47e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return -0.08518475138839676;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253578;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.20975771563253545;  // std dev = 1,67e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109157;  // std dev = 4,34e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.0787767547310915;  // std dev = 7,30e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return -0.0787767547310917;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.07877675473109168;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1770964977452778;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #pos=179 */
%   | else if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( female(A) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333686;  // std dev = 6,05e-08, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | | else return -0.0732462257633369;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 9,31e-10, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936715;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #pos=179 */
%   | | | else return -0.06842697784420261;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06842697784420322;  // std dev = 0,000, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
%   | | | else return 0.08118858764318242;  // std dev = 0,603, 34,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13596645792232973;  // std dev = 0,004, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.13422938248002703;  // std dev = 0,001, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202619;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0655626048814164;  // std dev = 0,009, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.06419184008202622;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06487722248172118;  // std dev = 0,009, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06640615245027182;  // std dev = 0,015, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063909
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.401 seconds
Total inference time: 1.527 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064317
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.219 seconds
Refined model CLL: -0.064317


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063909
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.853 seconds
Total inference time: 1.527 seconds
AUC ROC: 1.0
Total revision time: 10.853
Best scored revision CLL: -0.064317


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 19:16:47
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.527, 'parameter_0.6': {'AUC PR': 0.824078, 'AUC ROC': 0.97178, 'Precision': [1.0, 0.5], 'Inference time': 1.386, 'CLL': -0.169954, 'Recall': 0.777778, 'F1': 0.875, 'Learning time': 2.243}, 'CLL': -0.063909, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.853}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048763;  // std dev = 2,09e-07, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839216;  // std dev = 0,000, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360675;  // std dev = 0,000, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783656;  // std dev = 0,000, 361,000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.09269127618926076;  // std dev = 1,66e-07, 395,000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2,04e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 397,000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.07877675473109146;  // std dev = 3,65e-08, 387,000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.07324622576333717;  // std dev = 4,21e-08, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.06842697784420315;  // std dev = 0,000, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06419184008202591;  // std dev = 1,28e-07, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.175 seconds
Total inference time: 1.094 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 19:16:51
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.094, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 3.175, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048774;  // std dev = 1,55e-07, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.175 seconds
Total inference time: 0.8 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 19:16:53
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.8, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 1.175, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5289718777428997;  // std dev = 9,410, 401,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.1418510649004875;  // std dev = 1,29e-08, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7639695421455173;  // std dev = 1,983, 236,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=232 */
%   | | else return -0.027371460752526985;  // std dev = 5,469, 193,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1254446385283913;  // std dev = 2,79e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.1254446385283922;  // std dev = 0,000, 343,000 (wgt'ed) examples reached here.  /* #neg=343 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.33872573773380527;  // std dev = 0,416, 418,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.4580158809277789;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.27694350123706446;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.27804722715353125;  // std dev = 0,404, 409,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783612;  // std dev = 1,67e-07, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1938373198986239;  // std dev = 8,307, 427,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926061;  // std dev = 1,85e-07, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.16767030782816753;  // std dev = 0,395, 411,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 6,32e-09, 424,000 (wgt'ed) examples reached here.  /* #neg=424 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.129145324098329;  // std dev = 0,395, 409,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109143;  // std dev = 5,27e-09, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.46612801588983954;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.35425965744627913;  // std dev = 6,14e-07, 232,000 (wgt'ed) examples reached here.  /* #pos=232 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.3217012741285284;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.24217388738150436;  // std dev = 5,406, 176,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333725;  // std dev = 0,000, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.28386991656085425;  // std dev = 0,203, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.277955248800644;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #pos=232 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1561954886381455;  // std dev = 5,313, 156,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=37 */
%   | | | else return -0.06842697784420314;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #neg=332 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07358861866007628;  // std dev = 6,415, 404,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=269 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.06419184008202578;  // std dev = 8,43e-09, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.173834
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total learning time: 2.134 seconds
Total inference time: 1.338 seconds
AUC ROC: 0.97178


Results scoring model
   AUC ROC   = 0.983909
   AUC PR    = 0.897241
   CLL	      = -0.16797
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.862454
   F1        = 0.926148


Total scoring time: 2.244 seconds
Parameter learned model CLL: -0.16797


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [3.16e-08, 33, 0], 'false,true,false': [1.29e-08, 360, 0], 'true': [9.41, 132, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.983, 4, 232], 'true,true,false': [5.469, 156, 37], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [2.79e-08, 39, 0], 'false,true,false': [0.0, 343, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.416, 149, 269], 'false,true,true,true': [0.0, 8, 0], 'false,true,true,false': [0.0, 26, 0], 'false,true,false': [0.0, 359, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [2.11e-08, 7, 0], 'true,true,false': [0.404, 140, 269], 'true,true,true,false': [0.0, 10, 0], 'false,true': [1.67e-07, 373, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [1.85e-07, 366, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 32, 0], 'true': [8.307, 158, 269], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.395, 142, 269], 'false,true': [6.32e-09, 424, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.395, 140, 269], 'false,true': [5.27e-09, 380, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 3, 0], 'true,true,false,false': [5.406, 139, 37], 'true,true,true,false': [6.14e-07, 0, 232], 'true,true,false,true': [0.0, 11, 0], 'false,true': [0.0, 391, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 232], 'true,false,false,false': [0.0, 332, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.203, 21, 0], 'true,true,false,true': [1.86e-09, 5, 0], 'true,false,true,false': [0.0, 32, 0], 'true,true,false,false': [0.0, 35, 0], 'true,false,false,true': [5.313, 119, 37]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 6, 0], 'false,true,true,false': [0.0, 37, 0], 'false,true,false': [8.43e-09, 346, 0], 'true': [6.415, 135, 269]}]]
[{'': [0.22081952226665602, 2.2648549702353194e-16], 'false,true': [4.163336342344337e-17, 1.652998725553011e-16], 'false': [2.2648549702353194e-16, nan], 'false,true,true': [-7.93016446160826e-18, 3.027880976250427e-17]}, {'': [0.23386093316162926, -1.2101145564037695e-16], 'false': [-1.2101145564037695e-16, nan], 'true': [0.23386093316162926, nan], 'true,true': [0.016661878770463667, 0.1549571800585244], 'false,true,true': [-1.982541115402065e-18, 1.9927079929169476e-17], 'false,true': [4.102998134484274e-17, -1.1652486555832546e-16]}, {'': [0.17293032772001468, -2.0339963809926532e-17], 'false,true': [-1.1428766429964846e-17, -2.9688415143179675e-17], 'false': [-2.0339963809926532e-17, nan], 'false,true,true': [-1.734723475976807e-18, -2.135044278125301e-18], 'true': [0.17293032772001468, nan]}, {'': [0.17186579214144876, 7.500702471998377e-17], 'true,true': [0.007941537951834231, 0.16286315882066757], 'false': [7.500702471998377e-17, nan], 'true,true,true': [6.344131569286608e-17, 0.0], 'true': [0.17186579214144876, nan]}, {'': [0.16161848265971507, 5.690590377475677e-17], 'false,true': [-1.0408340855860843e-17, 9.342860425807329e-17], 'false': [5.690590377475677e-17, nan], 'false,true,false': [nan, 9.342860425807329e-17]}, {'': [0.15597347622803417, 3.980044805259995e-17], 'false': [3.980044805259995e-17, nan], 'true': [0.15597347622803417, nan]}, {'': [0.15610592938307866, 2.804773956947764e-17], 'false': [2.804773956947764e-17, nan], 'true': [0.15610592938307866, nan]}, {'': [0.16020931675917155, -3.4073340909211966e-18], 'false': [-3.4073340909211966e-18, nan], 'true,true,true': [0.0, 1.6232226291071255e-15], 'true': [0.16020931675917155, nan], 'true,true,false': [0.0, 0.16603176652892615], 'true,true': [0.008482263656951277, 0.15661534318253598]}, {'': [0.06583925064588389, nan], 'true,false': [0.012780307662544727, 0.059512131685120394], 'true,false,true': [-1.3782078926381254e-16, -3.469446951953614e-18], 'true': [0.011153985120135424, 0.0682859626098694], 'true,true,false': [6.938893903907229e-19, -2.3790493384824783e-18], 'true,true': [0.001963172805632904, 6.938893903907229e-19], 'true,false,false': [0.18092537804076372, -7.42378046586701e-17]}, {'': [0.10185419653798268, 9.132940048330337e-17], 'false,true': [-1.9364355080671335e-18, 7.187571026475002e-17], 'false': [9.132940048330337e-17, nan], 'false,true,true': [-5.782411586589357e-19, -1.50030138462859e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048785;  // std dev = 0,000, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.14185106490048768;  // std dev = 1,69e-07, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.12544463852839116;  // std dev = 7,60e-08, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.1254446385283922;  // std dev = 0,000, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,15e-08, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | else return 0.5553664367462833;  // std dev = 4,28e-08, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360625;  // std dev = 5,67e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.1123163781936065;  // std dev = 0,000, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.10159632948783642;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else if ( female(B) )
%   | then return -0.10159632948783644;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else return -0.1015963294878366;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( genre(A, D) )
%   | then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.09269127618926071;  // std dev = 7,30e-08, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | else return 0.25517224256948917;  // std dev = 9,13e-09, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | else if ( female(A) )
%   | | then return -0.0851847513883968;  // std dev = 2,63e-09, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.08518475138839678;  // std dev = 3,95e-09, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.08518475138839678;  // std dev = 3,23e-09, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 5,96e-08, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253523;  // std dev = 1,37e-08, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | else return 0.20975771563253506;  // std dev = 1,75e-08, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109151;  // std dev = 6,83e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | | else return -0.07877675473109146;  // std dev = 7,15e-08, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.17709649774527716;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #pos=232 */
%   | else if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( actor(A), director(B) )
%   | | | then return 0.1770964977452775;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.07324622576333688;  // std dev = 6,66e-08, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333698;  // std dev = 2,79e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | | else return -0.07324622576333668;  // std dev = 1,10e-07, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.07324622576333703;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367153;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #pos=232 */
%   | | | else return -0.06842697784420265;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06842697784420343;  // std dev = 0,000, 433,000 (wgt'ed) examples reached here.  /* #neg=433 */
%   | | | else return 0.07770375304332092;  // std dev = 0,784, 56,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1363190986976421;  // std dev = 0,004, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | else return 0.13436743040994512;  // std dev = 0,002, 149,000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | else if ( actor(B) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else return -0.06653122614218589;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06419184008202598;  // std dev = 1,06e-07, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
%   | | | else return -0.06419184008202608;  // std dev = 9,13e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( female(A) )
%   | | | then return -0.06606334893015389;  // std dev = 0,017, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.0673110214955724;  // std dev = 0,020, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.312 seconds
Total inference time: 1.376 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.362 seconds
Refined model CLL: -0.06432


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.052000000000001 seconds
Total inference time: 1.376 seconds
AUC ROC: 1.0
Total revision time: 13.052000000000001
Best scored revision CLL: -0.06432


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 19:17:10
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.376, 'parameter_0.8': {'AUC PR': 0.824078, 'AUC ROC': 0.97178, 'Precision': [1.0, 0.5], 'Inference time': 1.338, 'CLL': -0.173834, 'Recall': 0.777778, 'F1': 0.875, 'Learning time': 2.134}, 'CLL': -0.063905, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.052000000000001}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1418510649004875;  // std dev = 1,84e-07, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.1254446385283923;  // std dev = 0,000, 517,000 (wgt'ed) examples reached here.  /* #neg=517 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.11231637819360589;  // std dev = 0,000, 497,000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.10159632948783587;  // std dev = 2,49e-07, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.09269127618926129;  // std dev = 0,000, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.08518475138839678;  // std dev = 1,33e-07, 501,000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07877675473109205;  // std dev = 0,000, 513,000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.0732462257633372;  // std dev = 0,000, 473,000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.06842697784420342;  // std dev = 0,000, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.0641918400820256;  // std dev = 2,12e-07, 495,000 (wgt'ed) examples reached here.  /* #neg=495 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.957 seconds
Total inference time: 1.17 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 19:17:15
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.17, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 3.957, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.1418510649004874;  // std dev = 2,19e-07, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.382 seconds
Total inference time: 0.822 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 19:17:18
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.822, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 1.382, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;author(J, I), venue(J, A).;true;true
1;false,true,false;haswordtitle(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;true,true,false;haswordtitle(G, C).;false;false
2;true,true;haswordauthor(F, C).;false;true
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false,true,false;haswordauthor(L, H).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false,true;title(M, L), venue(M, B).;false;false
3;true,true;author(F, E), venue(F, A).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true,false;title(H, E), venue(H, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;haswordauthor(I, G).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
6;true,false,true;author(I, H), venue(I, A).;false;false
6;true,true,true;haswordtitle(F, D).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;true,true;haswordtitle(F, C).;true;false
6;false,true;haswordtitle(L, J).;false;false
6;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;author(H, E), venue(H, A).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
9;false,false,true;haswordtitle(K, I).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false
9;false,true,false;haswordtitle(H, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5294636761353646;  // std dev = 10,525, 502,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.1418510649004872;  // std dev = 1,43e-08, 437,000 (wgt'ed) examples reached here.  /* #neg=437 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7705252655391591;  // std dev = 1,723, 291,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=288 */
%   | | else return 0.01306203204132906;  // std dev = 6,134, 211,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.1254446385283923;  // std dev = 0,000, 448,000 (wgt'ed) examples reached here.  /* #neg=448 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3447394348087707;  // std dev = 0,416, 515,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.11231637819360608;  // std dev = 0,000, 429,000 (wgt'ed) examples reached here.  /* #neg=429 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.4612598958558554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.28644052707235584;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.30096115692426745;  // std dev = 0,397, 488,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783538;  // std dev = 3,51e-07, 501,000 (wgt'ed) examples reached here.  /* #neg=501 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22142999653636686;  // std dev = 8,764, 499,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926108;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926115;  // std dev = 8,43e-08, 442,000 (wgt'ed) examples reached here.  /* #neg=442 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1707278366302968;  // std dev = 0,390, 497,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.08518475138839678;  // std dev = 6,72e-09, 514,000 (wgt'ed) examples reached here.  /* #neg=514 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11229960817896927;  // std dev = 0,398, 511,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109207;  // std dev = 5,74e-09, 500,000 (wgt'ed) examples reached here.  /* #neg=500 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.47201077115192414;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3429564176661123;  // std dev = 2,23e-07, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.332984366499887;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.23986332106241914;  // std dev = 6,129, 210,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333725;  // std dev = 0,000, 509,000 (wgt'ed) examples reached here.  /* #neg=509 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2758511163046543;  // std dev = 0,153, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420271;  // std dev = 1,05e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2702995355187539;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | | else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1690665323058145;  // std dev = 6,082, 200,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=49 */
%   | | | else return -0.06842697784420326;  // std dev = 0,000, 369,000 (wgt'ed) examples reached here.  /* #neg=369 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04839082521724107;  // std dev = 7,543, 529,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=337 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06419184008202622;  // std dev = 3,73e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.0641918400820255;  // std dev = 1,05e-08, 438,000 (wgt'ed) examples reached here.  /* #neg=438 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.178275
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total learning time: 2.613 seconds
Total inference time: 1.473 seconds
AUC ROC: 0.97178


Results scoring model
   AUC ROC   = 0.983069
   AUC PR    = 0.891379
   CLL	      = -0.171977
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.9216


Total scoring time: 3.144 seconds
Parameter learned model CLL: -0.171977


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 10, 0], 'false,true,true,false': [5.37e-08, 50, 0], 'false,true,false': [1.43e-08, 437, 0], 'true': [10.525, 165, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.723, 3, 288], 'true,true,false': [6.134, 162, 49], 'false,true,true,true': [0.0, 6, 0], 'false,true,true,false': [0.0, 39, 0], 'false,true,false': [0.0, 448, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.416, 178, 337], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 40, 0], 'false,true,false': [0.0, 429, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.397, 151, 337], 'true,true,true,false': [1.05e-08, 7, 0], 'false,true': [3.51e-07, 501, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)'}, {'false,true,false,false': [8.43e-08, 442, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 48, 0], 'true': [8.764, 162, 337], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.39, 160, 337], 'false,true': [6.72e-09, 514, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.398, 174, 337], 'false,true': [5.74e-09, 500, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(H, B)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 3, 0], 'true,true,false,false': [6.129, 161, 49], 'true,true,true,false': [2.23e-07, 0, 288], 'true,true,false,true': [0.0, 12, 0], 'false,true': [0.0, 509, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 288], 'true,false,false,false': [0.0, 369, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.153, 23, 0], 'true,true,false,true': [2.63e-09, 7, 0], 'true,false,true,false': [5.27e-09, 41, 0], 'true,true,false,false': [1.05e-08, 46, 0], 'true,false,false,true': [6.082, 151, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [2.63e-09, 9, 0], 'false,true,true,false': [3.73e-09, 24, 0], 'false,true,false': [1.05e-08, 438, 0], 'true': [7.543, 192, 337]}]]
[{'': [0.22065125950382006, -1.429663452233602e-17], 'false,true': [6.29126380620922e-17, 2.0324448963389595e-16], 'false': [-1.429663452233602e-17, nan], 'false,true,true': [-1.1102230246251566e-17, 5.773159728050814e-17]}, {'': [0.22065125950381612, -1.3691999979150003e-16], 'false': [-1.3691999979150003e-16, nan], 'true': [0.22065125950381612, nan], 'true,true': [0.01020299713040116, 0.1782978818984292], 'false,true,true': [-2.3129646346357427e-18, -2.2773805633336544e-17], 'false,true': [-2.4671622769447922e-17, -1.308477136165363e-16]}, {'': [0.17299664194627212, -5.6213824031653495e-18], 'false,true': [7.401486830834377e-18, -1.2422075800001751e-17], 'false': [-5.6213824031653495e-18, nan], 'false,true,true': [0.0, -5.551115123125783e-18], 'true': [0.17299664194627212, nan]}, {'': [0.16063374107916623, 2.464207591583182e-16], 'true,true': [0.003342698154891091, 0.15722533817653697], 'false': [2.464207591583182e-16, nan], 'true,true,true': [0.0, 1.586032892321652e-17], 'true': [0.16063374107916623, nan]}, {'': [0.15392945779718298, -2.1751308237554086e-17], 'false,true': [-4.625929269271485e-18, 1.607562750588462e-17], 'false': [-2.1751308237554086e-17, nan], 'false,true,false': [nan, 1.607562750588462e-17]}, {'': [0.15220969974447549, 4.579129984835276e-17], 'false': [4.579129984835276e-17, nan], 'true': [0.15220969974447549, nan]}, {'': [0.1588018458323571, 3.1974423109204506e-17], 'false': [3.1974423109204506e-17, nan], 'true': [0.1588018458323571, nan]}, {'': [0.15968770486533376, -8.724738896857811e-19], 'false': [-8.724738896857811e-19, nan], 'true,true,true': [0.0, 1.7270135938613546e-16], 'true': [0.15968770486533376, nan], 'true,true,false': [-1.850371707708594e-17, 0.17888888888888918], 'true,true': [0.0067765401009245475, 0.16966261369492128]}, {'': [0.06946384340610547, nan], 'true,false': [0.01251650082035537, 0.06732628392629349], 'true,false,true': [-2.9605947323337506e-16, 6.769652589177784e-19], 'true': [0.009386486651007372, 0.07281619173539339], 'true,true,false': [9.912705577010326e-19, 2.413528314402514e-18], 'true,true': [0.0010120985960187343, 4.7132109535973624e-18], 'true,false,false': [0.18497499999999945, -9.748299728416009e-17]}, {'': [0.10755385914731039, 1.1880093511912503e-16], 'false,true': [-1.6821560979169039e-18, 1.0899449785132815e-16], 'false': [1.1880093511912503e-16, nan], 'false,true,true': [7.709882115452476e-19, 5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true,true;genre(B, F).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true,true;genre(A, F).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1418510649004883;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.1418510649004872;  // std dev = 2,98e-07, 436,000 (wgt'ed) examples reached here.  /* #neg=436 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.12544463852839227;  // std dev = 0,000, 422,000 (wgt'ed) examples reached here.  /* #neg=422 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360636;  // std dev = 7,30e-08, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | | else return -0.1123163781936063;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.11231637819360633;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.11231637819360595;  // std dev = 0,000, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783626;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783648;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else if ( female(A) )
%   | then return -0.10159632948783653;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.09269127618926065;  // std dev = 1,80e-07, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948906;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.25517224256948845;  // std dev = 1,29e-08, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.08518475138839678;  // std dev = 2,11e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 5,16e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | | else return -0.08518475138839678;  // std dev = 9,42e-08, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
%   | | else return -0.08518475138839679;  // std dev = 2,46e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.08518475138839679;  // std dev = 9,31e-10, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253506;  // std dev = 1,75e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.20975771563253492;  // std dev = 1,94e-08, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.07877675473109162;  // std dev = 3,57e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return -0.07877675473109197;  // std dev = 0,000, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333702;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return 0.17709649774527728;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | | else return 0.17709649774527775;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( genre(A, F) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.07324622576333685;  // std dev = 6,58e-08, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333716;  // std dev = 3,09e-09, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420265;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.06842697784420262;  // std dev = 3,09e-09, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1219249711187209;  // std dev = 0,846, 122,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=105 */
%   | | | else return 0.1329375145768468;  // std dev = 0,895, 201,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=183 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06842697784420362;  // std dev = 0,000, 549,000 (wgt'ed) examples reached here.  /* #neg=549 */
%   | | | else return 0.09094612452279444;  // std dev = 0,818, 68,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1386863689290024;  // std dev = 0,002, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.13650719118778756;  // std dev = 0,000946, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( actor(B) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else return -0.06859112109085493;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.06419184008202612;  // std dev = 1,61e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0641918400820257;  // std dev = 1,70e-07, 361,000 (wgt'ed) examples reached here.  /* #neg=361 */
%   | | | else return -0.06419184008202614;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(A) )
%   | | | then return -0.0761873807297495;  // std dev = 0,004, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.07681359873422264;  // std dev = 0,007, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064252
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.189 seconds
Total inference time: 1.474 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065187
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.218 seconds
Refined model CLL: -0.065187


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064252
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.164 seconds
Total inference time: 1.474 seconds
AUC ROC: 1.0
Total revision time: 15.164
Best scored revision CLL: -0.065187


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 19:17:37
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.824078, 'AUC ROC': 0.97178, 'Precision': [1.0, 0.5], 'Inference time': 1.473, 'CLL': -0.178275, 'Recall': 0.777778, 'F1': 0.875, 'Learning time': 2.613}, 'Inference time': 1.474, 'CLL': -0.064252, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.164}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6,50e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.14185106490048846;  // std dev = 0,000, 599,000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.12544463852839235;  // std dev = 0,000, 646,000 (wgt'ed) examples reached here.  /* #neg=646 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11231637819360625;  // std dev = 0,000, 657,000 (wgt'ed) examples reached here.  /* #neg=657 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783621;  // std dev = 3,80e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783547;  // std dev = 3,69e-07, 629,000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926179;  // std dev = 0,000, 612,000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839678;  // std dev = 1,46e-07, 592,000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109255;  // std dev = 0,000, 631,000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07324622576333673;  // std dev = 1,81e-07, 642,000 (wgt'ed) examples reached here.  /* #neg=642 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 2,11e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420368;  // std dev = 0,000, 646,000 (wgt'ed) examples reached here.  /* #neg=646 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06419184008202546;  // std dev = 2,16e-07, 635,000 (wgt'ed) examples reached here.  /* #neg=635 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.186 seconds
Total inference time: 1.12 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 19:17:42
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.12, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 4.186, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.14185106490048843;  // std dev = 0,000, 602,000 (wgt'ed) examples reached here.  /* #neg=602 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.515 seconds
Total inference time: 0.753 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 19:17:45
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.753, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 1.515, 'F1': nan}


