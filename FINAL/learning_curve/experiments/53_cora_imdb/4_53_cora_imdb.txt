Starting experiment #4 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21203333534810875;  // std dev = 0,478, 8.045,000 (wgt'ed) examples reached here.  /* #neg=5.198 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.21231560176617903;  // std dev = 0,478, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.07261921933723868;  // std dev = 8,075, 387,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=83 */
%   | | | else return -0.058847112331317786;  // std dev = 4,388, 253,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.029946302995725982;  // std dev = 6,461, 420,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=47 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7848752892305068;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.38747269182790955;  // std dev = 4,156, 70,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | | | else return 0.025982008598095758;  // std dev = 4,660, 138,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=27 */
%   | else return 0.19182295845712266;  // std dev = 0,480, 7.635,000 (wgt'ed) examples reached here.  /* #neg=4.875 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.7924751311401176;  // std dev = 2,172, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.14857692080893659;  // std dev = 1,004, 342,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=1 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.16362339799639886;  // std dev = 3,162, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.04150415366263066;  // std dev = 4,363, 225,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=21 */
%   | else return -0.020051831432492572;  // std dev = 0,322, 413,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=49 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16232363353611265;  // std dev = 0,480, 7.889,000 (wgt'ed) examples reached here.  /* #neg=5.042 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.42315356601204;  // std dev = 1,092, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.14788874783405273;  // std dev = 3,140, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.11948108641537862;  // std dev = 0,022, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.018190829048860352;  // std dev = 7,620, 570,000 (wgt'ed) examples reached here.  /* #neg=504 #pos=66 */
%   | | | else return 0.025193782560234284;  // std dev = 4,728, 200,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=37 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04237968114688645;  // std dev = 5,328, 230,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=48 */
%   | | | else return -0.12326125804861675;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1324903356680473;  // std dev = 0,479, 7.949,000 (wgt'ed) examples reached here.  /* #neg=5.102 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.32398132007500496;  // std dev = 0,656, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2130891610050726;  // std dev = 2,915, 35,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.20517887211424246;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10891020390007922;  // std dev = 0,016, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.037616479390079026;  // std dev = 6,929, 398,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=83 */
%   | | | else return -0.052221143533271015;  // std dev = 4,404, 274,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.029404202569901786;  // std dev = 6,488, 449,000 (wgt'ed) examples reached here.  /* #neg=402 #pos=47 */
%   | | | else return -0.1105471713595312;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.57894802608353;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.17736920898067823;  // std dev = 5,800, 144,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=61 */
%   | | | else return -0.1766572132016413;  // std dev = 2,126, 86,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07403858709742751;  // std dev = 6,682, 204,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=66 */
%   | | | else return 0.10856340180805601;  // std dev = 41,586, 7.524,000 (wgt'ed) examples reached here.  /* #neg=4.830 #pos=2.694 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then if ( author(L, K), venue(L, B) )
%   | | then if ( samebib(L, M), venue(M, A) )
%   | | | then return 0.7540225433398693;  // std dev = 0,138, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13313414235044582;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.00661373683372803;  // std dev = 0,319, 85,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | else return -0.007144258435099526;  // std dev = 0,324, 1.062,000 (wgt'ed) examples reached here.  /* #neg=911 #pos=151 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.48233969454737474;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.1523829690122992;  // std dev = 5,758, 140,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=61 */
%   | | else return -0.05677366777146263;  // std dev = 0,317, 70,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=13 */
%   | else return 0.08979986143130281;  // std dev = 0,480, 7.667,000 (wgt'ed) examples reached here.  /* #neg=4.907 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return -0.00946303352094126;  // std dev = 0,279, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return 0.05785355024695084;  // std dev = 2,818, 63,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.04780531643305803;  // std dev = 0,799, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.013974836003772065;  // std dev = 0,318, 825,000 (wgt'ed) examples reached here.  /* #neg=721 #pos=104 */
%   | | else return 0.003537767490347524;  // std dev = 0,322, 273,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=47 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6228585128033031;  // std dev = 0,544, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.3011768896329626;  // std dev = 0,275, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.0595856228390445;  // std dev = 4,632, 168,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=36 */
%   | | | else return 0.538064889540364;  // std dev = 0,915, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.07351041746644976;  // std dev = 0,481, 7.629,000 (wgt'ed) examples reached here.  /* #neg=4.869 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.008747579364470025;  // std dev = 0,323, 891,000 (wgt'ed) examples reached here.  /* #neg=770 #pos=121 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.03562383956093776;  // std dev = 5,111, 213,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=47 */
%   | | | else return -0.06425275335298528;  // std dev = 1,368, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else return -0.10029707880673457;  // std dev = 0,005, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06032104186982892;  // std dev = 0,478, 7.821,000 (wgt'ed) examples reached here.  /* #neg=4.974 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.015281044685416753;  // std dev = 0,842, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.09382172370282507;  // std dev = 3,097, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.17444333611614912;  // std dev = 0,986, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0962056973391462;  // std dev = 0,013, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.05945211659763113;  // std dev = 2,847, 62,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | | else return -0.0046748101320306405;  // std dev = 8,452, 694,000 (wgt'ed) examples reached here.  /* #neg=606 #pos=88 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008501168602722736;  // std dev = 5,286, 261,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=48 */
%   | | | else return -0.09115486022587195;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.045607328664773496;  // std dev = 0,478, 7.854,000 (wgt'ed) examples reached here.  /* #neg=5.007 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5783183196607355;  // std dev = 0,204, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12594395419026894;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04998179389032102;  // std dev = 2,767, 61,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return -0.15293157830844553;  // std dev = 0,160, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.019942475238090337;  // std dev = 6,272, 344,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=68 */
%   | | | else return -0.0285948864476044;  // std dev = 5,423, 307,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=35 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0037868217716139872;  // std dev = 6,439, 384,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=48 */
%   | | | else return -0.08388048620983536;  // std dev = 2,75e-05, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.015135159328095539;  // std dev = 0,471, 7.643,000 (wgt'ed) examples reached here.  /* #neg=5.034 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.693152241324116;  // std dev = 3,367, 145,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=133 */
%   | | | else return -0.1342173623673265;  // std dev = 1,717, 621,000 (wgt'ed) examples reached here.  /* #neg=619 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.1386849028593158;  // std dev = 4,678, 145,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=27 */
%   | | | else return -0.029641273283833078;  // std dev = 1,124, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.33754995932922344;  // std dev = 5,022, 116,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=78 */
%   | | | else return 0.05570518347769158;  // std dev = 5,148, 201,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5930349108509372;  // std dev = 0,256, 73,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=68 */
%   | else return -0.010616378024852505;  // std dev = 0,316, 291,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=49 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4954038370602975;  // std dev = 4,856, 102,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.14185106490048763;  // std dev = 8,16e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.213392506502066;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.48553222468072843;  // std dev = 4,424, 93,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3809050673658357;  // std dev = 4,496, 95,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360621;  // std dev = 7,68e-09, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2886992577902172;  // std dev = 4,493, 97,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783626;  // std dev = 4,21e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.16255007856653642;  // std dev = 0,479, 105,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926107;  // std dev = 1,05e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.18082377071062425;  // std dev = 0,459, 96,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839679;  // std dev = 2,95e-09, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3763639083719133;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.3763639083719133;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.1217758751980748;  // std dev = 0,470, 97,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109158;  // std dev = 5,77e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.129857011828954;  // std dev = 4,314, 93,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07324622576333707;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.011405476181446834;  // std dev = 4,915, 107,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=65 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06842697784420265;  // std dev = 4,66e-09, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.32297967143621015;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3877090004945989;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return -0.06419184008202622;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3622909995054014;  // std dev = 2,449, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.249662
   Precision = 0.059638 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.112563


Total learning time: 1.278 seconds
Total inference time: 1.391 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.986538
   AUC PR    = 0.912171
   CLL	      = -0.224015
   Precision = 0.119705 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213816


Total scoring time: 1.0 seconds
Parameter learned model CLL: -0.224015


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 14, 0], 'false,true,false': [8.16e-08, 87, 0], 'true': [4.856, 37, 65]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 6, 0], 'true,true,false': [4.424, 28, 65], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [5.27e-09, 11, 0], 'false,true,false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 10, 0], 'false,true,false': [7.68e-09, 87, 0], 'true': [4.496, 30, 65]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 7, 0], 'false,true,false': [4.21e-08, 97, 0], 'true': [4.493, 32, 65]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.479, 40, 65], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 5, 0], 'false,true,false': [1.05e-08, 85, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.459, 31, 65], 'false,true,true': [0.0, 9, 0], 'false,true,false': [2.95e-09, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.47, 32, 65], 'true,true,true,false': [0.0, 6, 0], 'false,true': [5.77e-08, 104, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 9, 0], 'false,true,false': [0.0, 82, 0], 'true': [4.314, 28, 65]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false': [4.66e-09, 92, 0], 'true': [4.915, 42, 65]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 57], 'true,false,false,false': [0.0, 82, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false,true': [0.0, 4, 0], 'true,false,true,false': [2.63e-09, 8, 0], 'true,true,false,false': [0.0, 7, 0], 'true,false,false,true': [2.449, 24, 8]}]]
[{'': [0.23116109188773482, 7.91446116564468e-17], 'false,true': [-1.1895246692412391e-17, 7.656710514656253e-17], 'false': [7.91446116564468e-17, nan]}, {'': [0.22548719518416568, -1.2616170734376778e-17], 'false': [-1.2616170734376778e-17, nan], 'true': [0.22548719518416568, nan], 'true,true': [0.0, 0.2104289513238535], 'false,true,true': [0.0, 2.523234146875356e-18], 'false,true': [2.3129646346357427e-18, -2.6294755846385285e-17]}, {'': [0.21275893159337322, 6.180623023686439e-17], 'false,true': [0.0, 5.870144727903127e-17], 'false': [6.180623023686439e-17, nan]}, {'': [0.20811595425127466, 4.270088556250602e-18], 'false,true': [0.0, 1.8312957107219077e-17], 'false': [4.270088556250602e-18, nan]}, {'': [0.2291156503830649, 8.540177112501205e-18], 'false,true': [-1.1564823173178713e-18, 1.3061447348531253e-18], 'false': [8.540177112501205e-18, nan], 'false,true,true': [0.0, 0.0], 'true': [0.2291156503830649, nan]}, {'': [0.21027590487694106, 1.3706457094137734e-17], 'false,true': [-1.5419764230904951e-18, 7.709882115452476e-18], 'false': [1.3706457094137734e-17, nan], 'true': [0.21027590487694106, nan]}, {'': [0.22176334647213733, 3.202566417187951e-17], 'true,true': [-3.172065784643304e-17, 0.22106493782548634], 'false': [3.202566417187951e-17, nan], 'true,true,true': [0.0, -3.700743415417188e-17], 'true': [0.22176334647213733, nan]}, {'': [0.20010301248042806, -6.710139159822375e-18], 'false,true': [7.709882115452476e-19, -6.0926873302600054e-18], 'false': [-6.710139159822375e-18, nan]}, {'': [0.22575893203701755, 2.3401759832785162e-17], 'false,true': [0.0, 2.1118372751022e-17], 'false': [2.3401759832785162e-17, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.10069644383379119, nan], 'true,false': [0.02204065150047766, 0.0705737763634636], 'true,false,true': [-4.0513401600356587e-16, 8.673617379884035e-19], 'true': [0.00871813678375168, 0.10622469554998262], 'true,true,false': [0.0, -4.956352788505163e-19], 'true,true': [0.0, 2.523234146875356e-18], 'true,false,false': [0.18750000000000025, -1.0154478883766675e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.7194734122109547;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13321901845720174;  // std dev = 0,087, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601498;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10332854841638334;  // std dev = 0,064, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08291301063670495;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.25517224256948934;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( genre(A, D) )
%   | then return -0.0868528680108111;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.18342624439063573;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07742226867359892;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.07872634143611935;  // std dev = 0,000167, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then return -0.07877675473109172;  // std dev = 3,23e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07868602586213848;  // std dev = 0,000105, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07870417163592913;  // std dev = 0,000133, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08217855037726077;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527708;  // std dev = 2,63e-09, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.17709649774527697;  // std dev = 6,45e-09, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( actor(A) )
%   | | then return -0.0732496479527356;  // std dev = 2,79e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.1390466815996127;  // std dev = 0,288, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07313922281613443;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07400197057175335;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( actor(B) )
%   | | | then return -0.07325115294472825;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07301564270420417;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936707;  // std dev = 5,89e-09, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( actor(A) )
%   | | then return -0.06842997334012611;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.07372131034980786;  // std dev = 0,027, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07417611702040014;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06834622919359501;  // std dev = 0,000221, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420268;  // std dev = 2,63e-09, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( female(B) )
%   | | | then return -0.06836163357519272;  // std dev = 0,000118, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06829472663164679;  // std dev = 0,000435, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06274862551154861;  // std dev = 0,002, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.08071341398151499;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1340070300080109;  // std dev = 2,24e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.10017201055645354;  // std dev = 0,477, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419326824762753;  // std dev = 2,08e-05, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return 0.06794073997799857;  // std dev = 0,324, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063819
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.052 seconds
Total inference time: 1.538 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066781
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.403 seconds
Refined model CLL: -0.066781


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063819
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.7330000000000005 seconds
Total inference time: 1.538 seconds
AUC ROC: 1.0
Total revision time: 6.7330000000000005
Best scored revision CLL: -0.066781


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 10:38:00
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.538, 'CLL': -0.063819, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.7330000000000005, 'parameter_0.2': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.059638, 0.5], 'Inference time': 1.391, 'CLL': -0.249662, 'Recall': 1.0, 'F1': 0.112563, 'Learning time': 1.278}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839138;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360621;  // std dev = 9,19e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.10159632948783635;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.092691276189261;  // std dev = 3,94e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839682;  // std dev = 5,67e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07877675473109164;  // std dev = 5,27e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07324622576333707;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,94e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06842697784420267;  // std dev = 4,71e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06419184008202626;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.28 seconds
Total inference time: 1.38 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 10:38:04
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.38, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 2.28, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048793;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.798 seconds
Total inference time: 0.899 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 10:38:06
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.899, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 0.798, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5533361008749105;  // std dev = 6,295, 187,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.14185106490048816;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.22327816805556427;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.475646563127235;  // std dev = 6,256, 186,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.322933416795633;  // std dev = 6,810, 205,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11325411107466243;  // std dev = 0,013, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11231637819360658;  // std dev = 0,000, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.27017867184658007;  // std dev = 6,597, 199,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10401634884899875;  // std dev = 0,024, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.1015963294878365;  // std dev = 0,000, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.21422898727632617;  // std dev = 0,464, 196,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.1034819222153656;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926087;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.0926486483287309;  // std dev = 0,001, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.15510596079566247;  // std dev = 0,468, 197,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08573903250452229;  // std dev = 0,013, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.08518777901195658;  // std dev = 9,44e-07, 158,000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3757809322036279;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.3757809322036279;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.07429775655038286;  // std dev = 0,485, 209,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.0788513748556995;  // std dev = 0,012, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11110950142808476;  // std dev = 6,436, 194,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07501481202085857;  // std dev = 0,016, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07324362459402495;  // std dev = 9,63e-06, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09263269802220504;  // std dev = 6,338, 192,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=130 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.07570348927184203;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842219417549128;  // std dev = 1,18e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.06839117421232306;  // std dev = 0,000105, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3363653697570043;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07057355599289435;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06385166962236369;  // std dev = 6,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3847417764301257;  // std dev = 3,04e-07, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | | | else return -0.06418761943058625;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3844889928006432;  // std dev = 3,721, 78,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | | else return -0.06419204341830681;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.248503
   Precision = 0.059638 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.112563


Total learning time: 2.019 seconds
Total inference time: 1.472 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.984573
   AUC PR    = 0.899472
   CLL	      = -0.225733
   Precision = 0.117754 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.210697


Total scoring time: 1.536 seconds
Parameter learned model CLL: -0.225733


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.58e-08, 28, 0], 'false,true,false': [0.0, 161, 0], 'true': [6.295, 57, 130]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 9, 0], 'true,true,false': [6.256, 56, 130], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [7.45e-09, 13, 0], 'false,true,false': [0.0, 181, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.013, 14, 0], 'false,true,false': [0.0, 191, 0], 'true': [6.81, 75, 130]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.024, 24, 0], 'false,true,false': [0.0, 175, 0], 'true': [6.597, 69, 130]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.464, 66, 130], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [5.27e-09, 13, 0], 'false,true,false': [0.001, 172, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.468, 67, 130], 'false,true,true': [0.013, 23, 0], 'false,true,false': [9.44e-07, 158, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.485, 79, 130], 'true,true,true,false': [0.0, 9, 0], 'false,true': [0.012, 163, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.016, 20, 0], 'false,true,false': [9.63e-06, 155, 0], 'true': [6.436, 64, 130]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.18e-08, 27, 0], 'false,true,false': [0.000105, 182, 0], 'true': [6.338, 62, 130]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [3.04e-07, 0, 112], 'true,false,false,false': [0.0, 146, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 12, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 14, 0], 'true,true,false,false': [6.45e-09, 21, 0], 'true,false,false,true': [3.721, 60, 18]}]]
[{'': [0.21190197031657051, -2.2086976574553378e-16], 'false,true': [2.3790493384824782e-17, -1.5170749404815803e-16], 'false': [-2.2086976574553378e-16, nan]}, {'': [0.22222222222221746, -2.9758555299231e-17], 'false': [-2.9758555299231e-17, nan], 'true': [0.22222222222221746, nan], 'true,true': [0.0, 0.2104289513238478], 'false,true,true': [nan, 4.270088556250602e-18], 'false,true': [4.270088556250602e-18, -1.7174720822930598e-17]}, {'': [0.22623180329639309, 8.366364963659054e-07], 'false,true': [1.1431458430785635e-05, -1.6275520779845225e-17], 'false': [8.366364963659054e-07, nan]}, {'': [0.21867390972460876, 3.498246361798793e-06], 'false,true': [2.3856109841173534e-05, -7.993605777301127e-17], 'false': [3.498246361798793e-06, nan]}, {'': [0.21560862136498224, 6.36781439717689e-07], 'false,true': [7.722931334640051e-06, 1.0203909113009006e-08], 'false': [6.36781439717689e-07, nan], 'false,true,true': [0.0, 2.135044278125301e-18], 'true': [0.21560862136498224, nan]}, {'': [0.219479820514753, 9.140221663087999e-07], 'false,true': [6.927685150741265e-06, 8.912013180874274e-13], 'false': [9.140221663087999e-07, nan], 'true': [0.219479820514753, nan]}, {'': [0.23298009596953723, 8.73189113105279e-07], 'true,true': [-6.055761952500853e-17, 0.23511366498019684], 'false': [8.73189113105279e-07, nan], 'true,true,true': [0.0, -4.9343245538895844e-17], 'true': [0.23298009596953723, nan]}, {'': [0.21349514876644407, 1.738603093484059e-06], 'false,true': [1.2434193806723504e-05, 5.980198415320427e-13], 'false': [1.738603093484059e-06, nan]}, {'': [0.20923980081038085, 2.628106323851068e-07], 'false,true': [1.8258494560808143e-06, 1.1047182043991284e-08], 'false': [2.628106323851068e-07, nan], 'false,true,true': [0.0, 5.13992141030165e-18]}, {'': [0.11470239011295175, nan], 'true,false': [0.01990494839188824, 0.08509715656573777], 'true,false,true': [8.247371040072592e-16, -1.982541115402065e-18], 'true': [0.016923139223047126, 0.12169250116996502], 'true,true,false': [0.0, 1.982541115402065e-18], 'true,true': [-1.850371707708594e-17, 1.9604522395567545e-06], 'true,false,false': [0.1775147928994083, -1.5208534583906253e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048768;  // std dev = 6,14e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.1418510649004882;  // std dev = 0,000, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( female(B) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( genre(A, E) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462838;  // std dev = 3,25e-08, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else return 0.5553664367462836;  // std dev = 3,73e-08, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.11231637819360625;  // std dev = 4,94e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783653;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else return 0.32071184716015;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926089;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0926912761892609;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.08518475138839678;  // std dev = 2,36e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return 0.20975771563253573;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | | else return -0.07877675473109173;  // std dev = 2,79e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.07877675473109172;  // std dev = 9,31e-10, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936707;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420267;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420267;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06842697784420265;  // std dev = 1,75e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420261;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return -0.06842697784420271;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202619;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06419184008202618;  // std dev = 1,32e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.10656410953400572;  // std dev = 0,781, 130,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=112 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.08445731248550181;  // std dev = 0,420, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063839
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.743 seconds
Total inference time: 2.069 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065229
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.334 seconds
Refined model CLL: -0.065229


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063839
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.632 seconds
Total inference time: 2.069 seconds
AUC ROC: 1.0
Total revision time: 9.632
Best scored revision CLL: -0.065229


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 10:38:20
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.059638, 0.5], 'Inference time': 1.472, 'CLL': -0.248503, 'Recall': 1.0, 'F1': 0.112563, 'Learning time': 2.019}, 'Inference time': 2.069, 'CLL': -0.063839, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.632}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.14185106490048846;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839174;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.11231637819360676;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 3,86e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783653;  // std dev = 0,000, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2,53e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.09269127618926057;  // std dev = 6,32e-08, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5,96e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839678;  // std dev = 7,60e-08, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2,11e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109146;  // std dev = 6,99e-08, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333674;  // std dev = 1,11e-07, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.06419184008202623;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.737 seconds
Total inference time: 1.328 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 10:38:24
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.328, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 2.737, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.14185106490048846;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.016 seconds
Total inference time: 0.861 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 10:38:26
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.861, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 1.016, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4871811931640246;  // std dev = 8,505, 310,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.1418510649004882;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21201553801909598;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.5048962266867822;  // std dev = 7,430, 272,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.12544463852839197;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4204274634789134;  // std dev = 7,230, 269,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.1123163781936069;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25369243199329616;  // std dev = 8,133, 298,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.10159632948783658;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.21740451596115043;  // std dev = 0,457, 289,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926079;  // std dev = 1,29e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.09269127618926046;  // std dev = 1,12e-07, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10217554993402797;  // std dev = 0,476, 318,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.0851847513883969;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.08518475138839676;  // std dev = 5,89e-09, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.37025234997854245;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.37025234997854245;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.11921778423389116;  // std dev = 0,472, 293,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109143;  // std dev = 6,32e-08, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.116600621172114;  // std dev = 7,686, 285,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 1,05e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.07324622576333677;  // std dev = 1,20e-07, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.092580250586865;  // std dev = 7,601, 285,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=195 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420264;  // std dev = 9,13e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.06842697784420282;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.33354254810811995;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.37421507631042017;  // std dev = 0,000, 164,000 (wgt'ed) examples reached here.  /* #pos=164 */
%   | | | else return -0.06419184008202611;  // std dev = 9,86e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.37168656303384273;  // std dev = 4,809, 122,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | | else return -0.06419184008202625;  // std dev = 2,36e-08, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.256266
   Precision = 0.059638 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.112563


Total learning time: 2.094 seconds
Total inference time: 1.574 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.982153
   AUC PR    = 0.883821
   CLL	      = -0.233002
   Precision = 0.116977 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.209452


Total scoring time: 1.875 seconds
Parameter learned model CLL: -0.233002


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.11e-08, 26, 0], 'false,true,false': [0.0, 253, 0], 'true': [8.505, 115, 195]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 12, 0], 'true,true,false': [7.43, 77, 195], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 33, 0], 'false,true,false': [0.0, 286, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 34, 0], 'false,true,false': [0.0, 265, 0], 'true': [7.23, 74, 195]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 36, 0], 'false,true,false': [0.0, 244, 0], 'true': [8.133, 103, 195]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.457, 94, 195], 'false,true,true,true': [2.63e-09, 6, 0], 'false,true,true,false': [1.29e-08, 29, 0], 'false,true,false': [1.12e-07, 255, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.476, 123, 195], 'false,true,true': [0.0, 28, 0], 'false,true,false': [5.89e-09, 236, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.472, 98, 195], 'true,true,true,false': [0.0, 6, 0], 'false,true': [6.32e-08, 301, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 30, 0], 'false,true,false': [1.2e-07, 248, 0], 'true': [7.686, 90, 195]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [9.13e-09, 32, 0], 'false,true,false': [0.0, 266, 0], 'true': [7.601, 90, 195]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 164], 'true,false,false,false': [2.36e-08, 237, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 16, 0], 'true,true,false,true': [0.0, 5, 0], 'true,false,true,false': [9.86e-09, 29, 0], 'true,true,false,false': [0.0, 38, 0], 'true,false,false,true': [4.809, 91, 31]}]]
[{'': [0.2333506763787768, -2.865091676452017e-17], 'false,true': [1.708035422500241e-17, -1.1584935909132068e-16], 'false': [-2.865091676452017e-17, nan]}, {'': [0.21517308073795544, -9.074268684242766e-17], 'false': [-9.074268684242766e-17, nan], 'true': [0.21517308073795544, nan], 'true,true': [-2.7755575615628914e-17, 0.20294928633218662], 'false,true,true': [0.0, -3.3643121958338078e-18], 'false,true': [1.200241107702872e-17, -8.074349270001139e-17]}, {'': [0.19431410854654732, -9.060013980218669e-17], 'false,true': [-1.1428766429964846e-17, -1.0390011702152409e-16], 'false': [-9.060013980218669e-17, nan]}, {'': [0.22194877039282282, -6.026924990822278e-17], 'false,true': [0.0, -7.280150981148567e-17], 'false': [-6.026924990822278e-17, nan]}, {'': [0.20842935431009416, 7.962978935242502e-17], 'false,true': [6.3441315692866086e-18, 4.876273676785001e-17], 'false': [7.962978935242502e-17, nan], 'false,true,true': [1.1564823173178713e-18, 5.742532885992189e-18], 'true': [0.20842935431009416, nan]}, {'': [0.2267152507248306, 3.532527805625498e-17], 'false,true': [-9.912705577010326e-19, 3.4812077890788806e-17], 'false': [3.532527805625498e-17, nan], 'true': [0.2267152507248306, nan]}, {'': [0.2228659284135832, 1.3278414912460345e-17], 'true,true': [-3.172065784643304e-17, 0.22260014676932918], 'false': [1.3278414912460345e-17, nan], 'true,true,true': [0.0, -3.700743415417188e-17], 'true': [0.2228659284135832, nan]}, {'': [0.2072918317215946, 3.6741193620688633e-17], 'false,true': [3.7007434154171884e-18, 5.819717467793159e-17], 'false': [3.6741193620688633e-17, nan]}, {'': [0.20272960451421118, -5.808451585787243e-17], 'false,true': [3.854941057726238e-18, -2.4207870461751532e-17], 'false': [-5.808451585787243e-17, nan], 'false,true,true': [0.0, 2.6020852139652106e-18]}, {'': [0.10779013147339707, nan], 'true,false': [0.02454042173922766, 0.08562196848655919], 'true,false,true': [-9.53167084556232e-16, 3.3498108501621104e-18], 'true': [0.014339059205096403, 0.11600996068628726], 'true,true,false': [0.0, -4.382459307730881e-18], 'true,true': [-9.71445146547012e-17, -3.2273925134452225e-18], 'true,false,false': [0.18953238376780487, 2.3422426679855622e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048768;  // std dev = 6,99e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.14185106490048818;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.1254446385283918;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,87e-08, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | else return 0.5553664367462834;  // std dev = 4,21e-08, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(A, D) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.11231637819360694;  // std dev = 0,000, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.10159632948783617;  // std dev = 4,94e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.4175135841583103;  // std dev = 1,19e-07, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | | else return 0.4175135841583095;  // std dev = 3,04e-07, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.10159632948783658;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601501;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | else return 0.3207118471601501;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0926912761892608;  // std dev = 2,28e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926089;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926062;  // std dev = 2,58e-08, 149,000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | | else return -0.09269127618926092;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else return -0.08518475138839679;  // std dev = 4,47e-09, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839686;  // std dev = 2,08e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839676;  // std dev = 1,32e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839676;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.08518475138839676;  // std dev = 4,59e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | | else return 0.2097577156325355;  // std dev = 1,69e-07, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109162;  // std dev = 3,16e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.07877675473109148;  // std dev = 7,52e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936713;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420262;  // std dev = 4,56e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06842697784420262;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06842697784420271;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1126625363060068;  // std dev = 0,495, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | | else return 0.10523622628526354;  // std dev = 0,777, 124,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=106 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202608;  // std dev = 8,43e-08, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | | | else return 0.10186667269611296;  // std dev = 0,444, 37,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=31 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063839
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.186 seconds
Total inference time: 1.606 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065365
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.417 seconds
Refined model CLL: -0.065365


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063839
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.572 seconds
Total inference time: 1.606 seconds
AUC ROC: 1.0
Total revision time: 10.572
Best scored revision CLL: -0.065365


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 10:38:41
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.606, 'parameter_0.6': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.059638, 0.5], 'Inference time': 1.574, 'CLL': -0.256266, 'Recall': 1.0, 'F1': 0.112563, 'Learning time': 2.094}, 'CLL': -0.063839, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.572}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048766;  // std dev = 1,95e-07, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.12544463852839213;  // std dev = 0,000, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.11231637819360686;  // std dev = 0,000, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.10159632948783653;  // std dev = 0,000, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 4,00e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.09269127618926051;  // std dev = 1,75e-07, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07877675473109148;  // std dev = 2,98e-08, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.0732462257633371;  // std dev = 7,30e-08, 354,000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.06842697784420312;  // std dev = 0,000, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06419184008202584;  // std dev = 1,53e-07, 407,000 (wgt'ed) examples reached here.  /* #neg=407 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.279 seconds
Total inference time: 1.403 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 10:38:46
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.403, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 3.279, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.1418510649004878;  // std dev = 1,19e-07, 356,000 (wgt'ed) examples reached here.  /* #neg=356 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.092 seconds
Total inference time: 0.899 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 10:38:48
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.899, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 1.092, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5214142412219571;  // std dev = 9,357, 392,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.14185106490048768;  // std dev = 1,74e-07, 325,000 (wgt'ed) examples reached here.  /* #neg=325 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21779105488168685;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.43547527677660314;  // std dev = 9,495, 398,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12544463852839144;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.1254446385283922;  // std dev = 0,000, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.36429793678380806;  // std dev = 9,289, 393,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.11231637819360654;  // std dev = 0,000, 338,000 (wgt'ed) examples reached here.  /* #neg=338 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2967940637860596;  // std dev = 9,065, 386,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.1015963294878365;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #neg=328 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.20910260504173794;  // std dev = 0,464, 397,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926093;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.09269127618926044;  // std dev = 1,84e-07, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.18244182202513323;  // std dev = 0,458, 380,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839683;  // std dev = 3,41e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.08518475138839678;  // std dev = 6,25e-09, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.39085007192850624;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.39085007192850624;  // std dev = 1,49e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.14299647562832668;  // std dev = 0,460, 374,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109141;  // std dev = 1,19e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10340103686523003;  // std dev = 8,897, 381,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 1,49e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.07324622576333703;  // std dev = 9,06e-08, 317,000 (wgt'ed) examples reached here.  /* #neg=317 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05997578748722339;  // std dev = 9,077, 398,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=260 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420264;  // std dev = 1,05e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.06842697784420317;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3382251412186609;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06419184008202622;  // std dev = 3,73e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.37381162609808344;  // std dev = 3,53e-07, 214,000 (wgt'ed) examples reached here.  /* #pos=214 */
%   | | | else return -0.06419184008202615;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.37063281834636164;  // std dev = 5,852, 180,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=46 */
%   | | | else return -0.06419184008202596;  // std dev = 1,14e-07, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.256726
   Precision = 0.059638 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.112563


Total learning time: 2.272 seconds
Total inference time: 1.52 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.979914
   AUC PR    = 0.869973
   CLL	      = -0.235053
   Precision = 0.115813 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.207585


Total scoring time: 2.094 seconds
Parameter learned model CLL: -0.235053


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [3.94e-08, 38, 0], 'false,true,false': [1.74e-07, 325, 0], 'true': [9.357, 132, 260]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 11, 0], 'true,true,false': [9.495, 138, 260], 'false,true,true,true': [5.27e-09, 6, 0], 'false,true,true,false': [0.0, 35, 0], 'false,true,false': [0.0, 352, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 43, 0], 'false,true,false': [0.0, 338, 0], 'true': [9.289, 133, 260]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 39, 0], 'false,true,false': [0.0, 328, 0], 'true': [9.065, 126, 260]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.464, 137, 260], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 31, 0], 'false,true,false': [1.84e-07, 316, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.458, 120, 260], 'false,true,true': [3.41e-08, 56, 0], 'false,true,false': [6.25e-09, 362, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.46, 114, 260], 'true,true,true,false': [1.49e-08, 13, 0], 'false,true': [1.19e-07, 379, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.49e-08, 41, 0], 'false,true,false': [9.06e-08, 317, 0], 'true': [8.897, 121, 260]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 6, 0], 'false,true,true,false': [1.05e-08, 33, 0], 'false,true,false': [0.0, 337, 0], 'true': [9.077, 138, 260]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [3.53e-07, 0, 214], 'true,false,false,false': [1.14e-07, 299, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 17, 0], 'true,true,false,true': [0.0, 5, 0], 'true,false,true,false': [7.45e-09, 44, 0], 'true,true,false,false': [3.73e-09, 23, 0], 'true,false,false,true': [5.852, 134, 46]}]]
[{'': [0.2233444398167466, 1.6882730291820563e-16], 'false,true': [4.0902953538821554e-17, 9.29171269840131e-17], 'false': [1.6882730291820563e-16, nan]}, {'': [0.23158637263048115, -1.2881977079620136e-16], 'false': [-1.2881977079620136e-16, nan], 'true': [0.23158637263048115, nan], 'true,true': [-1.0092936587501423e-17, 0.22650943158000755], 'false,true,true': [4.625929269271485e-18, -1.586032892321652e-17], 'false,true': [-2.4370749321040022e-17, -1.1859200490314171e-16]}, {'': [0.21954034477421108, -3.2636477364309063e-17], 'false,true': [2.581914010756178e-18, -4.4671695665390914e-17], 'false': [-3.2636477364309063e-17, nan]}, {'': [0.21288851024275507, 6.534282651744791e-17], 'false,true': [-1.423362852083534e-18, -1.624716621402668e-17], 'false': [6.534282651744791e-17, nan]}, {'': [0.2157234846265348, 1.1228391953595334e-16], 'false,true': [-1.696174065399545e-17, 1.0680626566014164e-16], 'false': [1.1228391953595334e-16, nan], 'false,true,true': [0.0, -1.2534776084477573e-17], 'true': [0.2157234846265348, nan]}, {'': [0.20998901265548464, 3.9309331972373965e-17], 'false,true': [2.0816681711721685e-17, 3.925650473812708e-17], 'false': [3.9309331972373965e-17, nan], 'true': [0.20998901265548464, nan]}, {'': [0.2142966008573424, 3.749565887916096e-17], 'true,true': [0.0, 0.21190197031656477], 'false': [3.749565887916096e-17, nan], 'true,true,true': [0.0, 1.708035422500241e-17], 'true': [0.2142966008573424, nan]}, {'': [0.20778241854517168, 6.202363266062327e-18], 'false,true': [5.415722071342227e-18, 2.5916878177369584e-17], 'false': [6.202363266062327e-18, nan]}, {'': [0.2070372815269627, -1.0216414003199579e-16], 'false,true': [4.270088556250602e-18, -7.77485560271623e-17], 'false': [-1.0216414003199579e-16, nan], 'false,true,true': [5.782411586589357e-19, 3.3643121958338078e-18]}, {'': [0.11765798495389365, nan], 'true,false': [0.027138268352392726, 0.0935190909486044], 'true,false,true': [5.810513026075585e-16, 1.261617073437678e-18], 'true': [0.017651784228521726, 0.12236626458083742], 'true,true,false': [0.0, 6.033820786006285e-19], 'true,true': [-5.224578939412501e-17, -4.956352788505163e-19], 'true,false,false': [0.1902469135802472, 4.3814821707614875e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048802;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #neg=149 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.1418510649004876;  // std dev = 2,06e-07, 340,000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839136;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.12544463852839108;  // std dev = 7,88e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.1254446385283922;  // std dev = 0,000, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,15e-08, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | else return 0.5553664367462834;  // std dev = 4,21e-08, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360626;  // std dev = 5,05e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.11231637819360632;  // std dev = 0,000, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783638;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783638;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else return -0.10159632948783658;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601499;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | else return 0.32071184716014944;  // std dev = 1,94e-08, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.09269127618926075;  // std dev = 6,83e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | else return 0.2551722425694893;  // std dev = 7,45e-09, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 2,08e-09, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.08518475138839678;  // std dev = 3,95e-09, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( genre(A, D) )
%   | then return -0.0851847513883968;  // std dev = 2,28e-09, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( female(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 4,34e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | | else return -0.08518475138839678;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,05e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.08518475138839678;  // std dev = 6,14e-08, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253526;  // std dev = 1,37e-07, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | | else return 0.20975771563253523;  // std dev = 2,35e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07877675473109175;  // std dev = 1,97e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109158;  // std dev = 5,16e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.07877675473109148;  // std dev = 8,16e-08, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527741;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | else return 0.17709649774527764;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | else return -0.07324622576333704;  // std dev = 4,27e-09, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333693;  // std dev = 1,03e-07, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.073246225763337;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367155;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.0684269778442027;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420267;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420267;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.06842697784420325;  // std dev = 0,000, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.0992711455592414;  // std dev = 0,742, 97,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=80 */
%   | | | else return 0.10076871017924714;  // std dev = 0,940, 161,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.10464423443911645;  // std dev = 0,517, 54,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=46 */
%   | | | else return -0.06419184008202554;  // std dev = 2,13e-07, 443,000 (wgt'ed) examples reached here.  /* #neg=443 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063837
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.677 seconds
Total inference time: 1.559 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065316
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.767 seconds
Refined model CLL: -0.065316


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063837
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.809999999999999 seconds
Total inference time: 1.559 seconds
AUC ROC: 1.0
Total revision time: 11.809999999999999
Best scored revision CLL: -0.065316


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 10:39:04
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.559, 'parameter_0.8': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.059638, 0.5], 'Inference time': 1.52, 'CLL': -0.256726, 'Recall': 1.0, 'F1': 0.112563, 'Learning time': 2.272}, 'CLL': -0.063837, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.809999999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1418510649004878;  // std dev = 0,000, 526,000 (wgt'ed) examples reached here.  /* #neg=526 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839124;  // std dev = 4,34e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1254446385283922;  // std dev = 0,000, 464,000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,95e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.11231637819360618;  // std dev = 0,000, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.10159632948783594;  // std dev = 2,35e-07, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,33e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.09269127618926128;  // std dev = 0,000, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.08518475138839678;  // std dev = 1,26e-07, 467,000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109172;  // std dev = 2,98e-08, 458,000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07324622576333721;  // std dev = 0,000, 499,000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06842697784420348;  // std dev = 0,000, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080112;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06419184008202579;  // std dev = 1,64e-07, 440,000 (wgt'ed) examples reached here.  /* #neg=440 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.601 seconds
Total inference time: 1.288 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 10:39:09
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.288, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 3.601, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.14185106490048763;  // std dev = 7,30e-08, 516,000 (wgt'ed) examples reached here.  /* #neg=516 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.255 seconds
Total inference time: 0.847 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 10:39:11
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.847, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 1.255, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5303138835531163;  // std dev = 10,338, 485,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.14185106490048735;  // std dev = 2,97e-07, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21931098851090783;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.43268901148909816;  // std dev = 10,651, 500,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.12544463852839227;  // std dev = 0,000, 426,000 (wgt'ed) examples reached here.  /* #neg=426 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.354423976812025;  // std dev = 10,505, 501,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.11231637819360613;  // std dev = 0,000, 418,000 (wgt'ed) examples reached here.  /* #neg=418 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30701954626650757;  // std dev = 9,987, 478,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783627;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.10159632948783555;  // std dev = 3,11e-07, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.18933174977619294;  // std dev = 0,469, 513,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926108;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.09269127618926104;  // std dev = 1,19e-07, 424,000 (wgt'ed) examples reached here.  /* #neg=424 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.17617783368426088;  // std dev = 0,464, 482,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.0851847513883968;  // std dev = 1,83e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.08518475138839678;  // std dev = 6,72e-09, 448,000 (wgt'ed) examples reached here.  /* #neg=448 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.38650104277436037;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.38650104277436037;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.15072608794631773;  // std dev = 0,459, 467,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109177;  // std dev = 1,75e-07, 453,000 (wgt'ed) examples reached here.  /* #neg=453 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0737635625243829;  // std dev = 10,456, 504,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.07324622576333772;  // std dev = 0,000, 423,000 (wgt'ed) examples reached here.  /* #neg=423 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.03202136841841102;  // std dev = 10,820, 524,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=326 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420264;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.06842697784420344;  // std dev = 0,000, 440,000 (wgt'ed) examples reached here.  /* #neg=440 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3224008787390674;  // std dev = 4,71e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06419184008202615;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3902010911865261;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.33149702202102127;  // std dev = 6,525, 212,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=59 */
%   | | | else return -0.0641918400820256;  // std dev = 1,94e-07, 397,000 (wgt'ed) examples reached here.  /* #neg=397 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.252498
   Precision = 0.059638 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.112563


Total learning time: 2.766 seconds
Total inference time: 1.425 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.979497
   AUC PR    = 0.867039
   CLL	      = -0.231151
   Precision = 0.116345 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.20844


Total scoring time: 2.968 seconds
Parameter learned model CLL: -0.231151


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [4.47e-08, 43, 0], 'false,true,false': [2.97e-07, 394, 0], 'true': [10.338, 159, 326]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 19, 0], 'true,true,false': [10.651, 174, 326], 'false,true,true,true': [5.27e-09, 7, 0], 'false,true,true,false': [0.0, 38, 0], 'false,true,false': [0.0, 426, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 42, 0], 'false,true,false': [0.0, 418, 0], 'true': [10.505, 175, 326]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.98e-08, 49, 0], 'false,true,false': [3.11e-07, 465, 0], 'true': [9.987, 152, 326]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.469, 187, 326], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 47, 0], 'false,true,false': [1.19e-07, 424, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.464, 156, 326], 'false,true,true': [1.83e-08, 48, 0], 'false,true,false': [6.72e-09, 448, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 4, 0], 'true,true,false': [0.459, 141, 326], 'true,true,true,false': [0.0, 13, 0], 'false,true': [1.75e-07, 453, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 52, 0], 'false,true,false': [0.0, 423, 0], 'true': [10.456, 178, 326]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 6, 0], 'false,true,true,false': [2.24e-08, 44, 0], 'false,true,false': [0.0, 440, 0], 'true': [10.82, 198, 326]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 267], 'true,false,false,false': [1.94e-07, 397, 0], 'false': [0.0, 0, 0], 'true,true,true': [4.71e-08, 20, 0], 'true,true,false,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 45, 0], 'true,true,false,false': [7.45e-09, 43, 0], 'true,false,false,true': [6.525, 153, 59]}]]
[{'': [0.22035923052396916, 2.0324448963389595e-16], 'false,true': [4.6474452193611206e-17, 2.2317173489927e-16], 'false': [2.0324448963389595e-16, nan]}, {'': [0.23358244140762072, -1.3577249727900003e-16], 'false': [-1.3577249727900003e-16, nan], 'true': [0.23358244140762072, nan], 'true,true': [-2.337311630789803e-17, 0.22689599999999313], 'false,true,true': [3.96508223080413e-18, -2.0451476769410777e-17], 'false,true': [-2.960594732333751e-17, -1.3135032967396218e-16]}, {'': [0.22028203053697779, -7.723290606088046e-18], 'false,true': [0.0, -1.4873801286844203e-17], 'false': [-7.723290606088046e-18, nan]}, {'': [0.20867060534529258, 2.5919603687746847e-16], 'false,true': [1.8126090197961738e-17, 2.081966618221799e-16], 'false': [2.5919603687746847e-16, nan]}, {'': [0.22026788536980305, -1.1219095827791055e-17], 'false,true': [-3.2653618371328133e-18, 3.35161667811368e-17], 'false': [-1.1219095827791055e-17, nan], 'false,true,true': [0.0, -4.724353296277262e-18], 'true': [0.22026788536980305, nan]}, {'': [0.21497863625206706, 4.476705744456276e-17], 'false,true': [6.938893903907228e-18, 4.460717509654647e-17], 'false': [4.476705744456276e-17, nan], 'true': [0.21497863625206706, nan]}, {'': [0.21314535824648545, 6.764272732815523e-17], 'true,true': [5.224578939412501e-17, 0.21076716386429387], 'false': [6.764272732815523e-17, nan], 'true,true,true': [0.0, -1.708035422500241e-17], 'true': [0.21314535824648545, nan]}, {'': [0.2169183541194417, -2.243819165558211e-17], 'false,true': [1.0675221390626506e-18, -7.139022758818974e-17], 'false': [-2.243819165558211e-17, nan]}, {'': [0.2234109899997849, -1.2053849981644556e-16], 'false,true': [1.0547118733938987e-17, -1.261617073437678e-16], 'false': [-1.2053849981644556e-16, nan], 'false,true,true': [5.782411586589357e-19, 1.1354553660939102e-17]}, {'': [0.11184156801365398, nan], 'true,false': [0.025484594077516257, 0.08613281917388321], 'true,false,true': [-3.9918131222477537e-16, -3.0839528461809902e-18], 'true': [0.013841918542047069, 0.11760865640935392], 'true,true,false': [0.0, 1.290957005378089e-18], 'true,true': [1.1102230246251565e-16, 5.782411586589357e-19], 'true,false,false': [0.20084994660021327, 9.508207263792272e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048816;  // std dev = 0,000, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.14185106490048718;  // std dev = 2,98e-07, 445,000 (wgt'ed) examples reached here.  /* #neg=445 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839136;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( actor(A) )
%   | | | then return -0.12544463852839105;  // std dev = 8,16e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | | else return -0.12544463852839133;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.1254446385283923;  // std dev = 0,000, 444,000 (wgt'ed) examples reached here.  /* #neg=444 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360617;  // std dev = 1,04e-07, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | | else return -0.11231637819360633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.11231637819360632;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.11231637819360595;  // std dev = 0,000, 464,000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783646;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783646;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else return -0.10159632948783662;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926061;  // std dev = 1,85e-07, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948917;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.2551722425694885;  // std dev = 1,24e-08, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 1,32e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.08518475138839678;  // std dev = 4,27e-09, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( genre(A, D) )
%   | then return -0.0851847513883968;  // std dev = 1,86e-09, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 3,33e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return -0.08518475138839678;  // std dev = 3,65e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 9,31e-08, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | | | else return -0.08518475138839679;  // std dev = 1,05e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253504;  // std dev = 1,95e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return 0.20975771563253492;  // std dev = 2,67e-07, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 2,11e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.07877675473109158;  // std dev = 5,37e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return -0.078776754731092;  // std dev = 0,000, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527741;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.17709649774527775;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07324622576333704;  // std dev = 9,13e-09, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.0732462257633371;  // std dev = 7,88e-08, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420271;  // std dev = 5,27e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.06842697784420265;  // std dev = 2,47e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.0684269778442027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.0684269778442027;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06842697784420265;  // std dev = 1,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.0684269778442035;  // std dev = 0,000, 466,000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06419184008202619;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.10274537857425158;  // std dev = 0,072, 317,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=267 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.08383010087129257;  // std dev = 0,766, 79,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=59 */
%   | | | else return -0.0641918400820254;  // std dev = 2,46e-07, 530,000 (wgt'ed) examples reached here.  /* #neg=530 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063838
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.789 seconds
Total inference time: 1.514 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06531
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.747 seconds
Refined model CLL: -0.06531


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063838
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.27 seconds
Total inference time: 1.514 seconds
AUC ROC: 1.0
Total revision time: 13.27
Best scored revision CLL: -0.06531


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 10:39:28
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.059638, 0.5], 'Inference time': 1.425, 'CLL': -0.252498, 'Recall': 1.0, 'F1': 0.112563, 'Learning time': 2.766}, 'Inference time': 1.514, 'CLL': -0.063838, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.27}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.14185106490048816;  // std dev = 0,000, 570,000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1254446385283923;  // std dev = 0,000, 582,000 (wgt'ed) examples reached here.  /* #neg=582 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360626;  // std dev = 4,71e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.1123163781936057;  // std dev = 0,000, 596,000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1015963294878362;  // std dev = 4,59e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783534;  // std dev = 3,98e-07, 633,000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926165;  // std dev = 0,000, 581,000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.08518475138839678;  // std dev = 1,52e-07, 599,000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,46e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109169;  // std dev = 3,33e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.07877675473109227;  // std dev = 0,000, 570,000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452765;  // std dev = 2,76e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07324622576333696;  // std dev = 1,44e-07, 607,000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06842697784420361;  // std dev = 0,000, 614,000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.06419184008202551;  // std dev = 2,40e-07, 582,000 (wgt'ed) examples reached here.  /* #neg=582 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.292 seconds
Total inference time: 1.292 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 10:39:34
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.292, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 4.292, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.14185106490048816;  // std dev = 0,000, 561,000 (wgt'ed) examples reached here.  /* #neg=561 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.35 seconds
Total inference time: 0.895 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 10:39:36
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.895, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 1.35, 'F1': nan}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5046135815641596;  // std dev = 4,757, 99,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21494249908430887;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.4659085647454784;  // std dev = 4,519, 94,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3489144848222293;  // std dev = 4,680, 99,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11395741073545453;  // std dev = 0,012, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1123163781936062;  // std dev = 7,90e-09, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.27387495305792203;  // std dev = 4,676, 98,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10264865679827773;  // std dev = 0,011, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.10159632948783615;  // std dev = 5,96e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.19291929039206213;  // std dev = 0,473, 101,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.10354357640574174;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.09269127618926101;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09267827261783705;  // std dev = 0,000491, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.19262080856055144;  // std dev = 0,449, 95,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08614400978397785;  // std dev = 0,009, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518566451859479;  // std dev = 3,02e-07, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.37707092208510196;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.37707092208510196;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1826786159163104;  // std dev = 0,445, 88,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07883890735257786;  // std dev = 0,008, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12689864033065443;  // std dev = 4,202, 91,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07401318268630216;  // std dev = 0,008, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07324279746372474;  // std dev = 1,50e-06, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.013249679749582579;  // std dev = 4,805, 103,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=64 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.07578832956702995;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842317636897165;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06839655780457934;  // std dev = 8,35e-05, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.32323992143012553;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07064751615626404;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06392574075119382;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3771462682357264;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return -0.0641884860268458;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.279103731764274;  // std dev = 2,687, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.06419086610324737;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.25206
   Precision = 0.064516 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.121212


Total learning time: 1.302 seconds
Total inference time: 1.69 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.980006
   AUC PR    = 0.873954
   CLL	      = -0.249275
   Precision = 0.112875 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.202853


Total scoring time: 1.331 seconds
Parameter learned model CLL: -0.249275


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [7.88e-08, 85, 0], 'true': [4.757, 35, 64]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false': [4.519, 30, 64], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [5.27e-09, 12, 0], 'false,true,false': [0.0, 85, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.012, 8, 0], 'false,true,false': [7.9e-09, 95, 0], 'true': [4.68, 35, 64]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.011, 10, 0], 'false,true,false': [5.96e-08, 78, 0], 'true': [4.676, 34, 64]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.473, 37, 64], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [2.63e-09, 7, 0], 'false,true,false': [0.000491, 87, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.449, 31, 64], 'false,true,true': [0.009, 8, 0], 'false,true,false': [3.02e-07, 91, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.445, 24, 64], 'true,true,true,false': [0.0, 4, 0], 'false,true': [0.008, 103, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.008, 8, 0], 'false,true,false': [1.5e-06, 88, 0], 'true': [4.202, 27, 64]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false': [8.35e-05, 82, 0], 'true': [4.805, 39, 64]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 53], 'true,false,false,false': [0.0, 72, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 6, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [2.63e-09, 6, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false,false,true': [2.687, 21, 11]}]]
[{'': [0.22854810733598552, 7.879002110243047e-17], 'false,true': [-6.938893903907228e-18, 7.314410515177502e-17], 'false': [7.879002110243047e-17, nan]}, {'': [0.22222222222222332, -9.156478553609538e-18], 'false': [-9.156478553609538e-18, nan], 'true': [0.22222222222222332, nan], 'true,true': [0.0, 0.2172928927116353], 'false,true,true': [nan, 2.3129646346357427e-18], 'false,true': [2.3129646346357427e-18, -2.0898315757650005e-17]}, {'': [0.22124897482852943, 1.6570670545066076e-06], 'false,true': [1.885091462382714e-05, 6.310741403132469e-17], 'false': [1.6570670545066076e-06, nan]}, {'': [0.22315449675913054, 1.5892146153874032e-06], 'false,true': [1.3003535934176524e-05, 4.554761126667309e-17], 'false': [1.5892146153874032e-06, nan]}, {'': [0.22344905146827085, 2.410331789882749e-06], 'false,true': [2.0355726911615455e-05, 2.77312306706673e-09], 'false': [2.410331789882749e-06, nan], 'false,true,true': [0.0, 9.912705577010326e-19], 'true': [0.22344905146827085, nan]}, {'': [0.20125122384772415, 8.397717008412294e-07], 'false,true': [9.547964323413163e-06, 9.149213743152718e-14], 'false': [8.397717008412294e-07, nan], 'true': [0.20125122384772415, nan]}, {'': [0.20440923411519588, 6.925707277650275e-07], 'true,true': [1.850371707708594e-17, 0.19834710743801684], 'false': [6.925707277650275e-07, nan], 'true,true,true': [0.0, 0.0], 'true': [0.20440923411519588, nan]}, {'': [0.1940497549783088, 6.496695608993371e-07], 'false,true': [7.251998840224726e-06, 2.5636689740790333e-14], 'false': [6.496695608993371e-07, nan]}, {'': [0.2241689216067148, 5.997787810034501e-07], 'false,true': [5.3575784326765725e-06, 6.968595867695444e-09], 'false': [5.997787810034501e-07, nan], 'false,true,true': [0.0, -1.734723475976807e-18]}, {'': [0.10423855892841334, nan], 'true,false': [0.01779341688358545, 0.07924982357253738], 'true,false,true': [-2.848874176396628e-16, 1.1564823173178713e-18], 'true': [0.016502896954537584, 0.10642328679352729], 'true,true,false': [0.0, 0.0], 'true,true': [0.0, 7.22916233539192e-06], 'true,false,false': [0.2255859375000001, -3.854941057726238e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109547;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462843;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.3850692145554259;  // std dev = 0,126, 32,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.32782076813820976;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.092691276189261;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return 0.25517224256948917;  // std dev = 6,45e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.2600172756666401;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 9,31e-10, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.23028461375191575;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253542;  // std dev = 4,94e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0.21317439503373858;  // std dev = 1,49e-08, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.09385631622584105;  // std dev = 0,324, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( female(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1770964977452775;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.17959844300513872;  // std dev = 3,73e-09, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07243258201136213;  // std dev = 0,002, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.19201198446034176;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333702;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.1546391969198174;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06752318063215117;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.08438493774555143;  // std dev = 0,087, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420271;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420262;  // std dev = 3,33e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.06842697784420271;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.0684269778442027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06376359477913038;  // std dev = 0,000463, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1348157078552581;  // std dev = 0,005, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.0640589094702753;  // std dev = 0,003, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | | else return 0.11761361820712884;  // std dev = 0,190, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06341
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.178 seconds
Total inference time: 1.633 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066773
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.559 seconds
Refined model CLL: -0.066773


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06341
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.37 seconds
Total inference time: 1.633 seconds
AUC ROC: 1.0
Total revision time: 7.37
Best scored revision CLL: -0.066773


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 10:39:48
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.633, 'CLL': -0.06341, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.37, 'parameter_0.2': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.064516, 0.5], 'Inference time': 1.69, 'CLL': -0.25206, 'Recall': 1.0, 'F1': 0.121212, 'Learning time': 1.302}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048768;  // std dev = 6,32e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839136;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360622;  // std dev = 8,16e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.10159632948783633;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926098;  // std dev = 4,47e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839682;  // std dev = 5,48e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6,32e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20531872378078755;  // std dev = 0,286, 65,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=64 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1777443343249802;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07384564532946582;  // std dev = 0,037, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15323512969423025;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0685593869977263;  // std dev = 0,020, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13439044140085102;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06419184008202618;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06430886948943668;  // std dev = 0,019, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063402
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.191 seconds
Total inference time: 1.316 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 10:39:51
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.316, 'CLL': -0.063402, 'Recall': 1.0, 'Learning time': 2.191, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.788 seconds
Total inference time: 0.854 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 10:39:53
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.854, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 0.788, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5669401438907182;  // std dev = 6,129, 182,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.1418510649004882;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.22564632809294055;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.4792717046939474;  // std dev = 6,170, 183,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3212941012130551;  // std dev = 6,758, 203,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.11231637819360649;  // std dev = 1,86e-09, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25010495974986324;  // std dev = 6,720, 203,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.10159632948783649;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.223283997562865;  // std dev = 0,462, 192,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926087;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.09269127618926061;  // std dev = 8,43e-08, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.13750257817730147;  // std dev = 0,472, 201,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839691;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.08518475138839678;  // std dev = 5,43e-09, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3713287800505341;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.3713287800505341;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.18847308260785542;  // std dev = 0,442, 176,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109148;  // std dev = 8,43e-08, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06182766656160958;  // std dev = 6,655, 200,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.0732462257633368;  // std dev = 8,23e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06618891896756414;  // std dev = 6,412, 197,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=129 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0684269778442027;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06842697784420262;  // std dev = 5,74e-09, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.31651528863399775;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3787429568756643;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.38721448993284635;  // std dev = 4,105, 94,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=22 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #neg=149 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.236944
   Precision = 0.064516 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.121212


Total learning time: 1.894 seconds
Total inference time: 1.587 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.97987
   AUC PR    = 0.873998
   CLL	      = -0.236333
   Precision = 0.112174 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.20172


Total scoring time: 1.474 seconds
Parameter learned model CLL: -0.236333


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 18, 0], 'false,true,false': [0.0, 167, 0], 'true': [6.129, 53, 129]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 7, 0], 'true,true,false': [6.17, 54, 129], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 7, 0], 'false,true,false': [0.0, 179, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.29e-08, 22, 0], 'false,true,false': [1.86e-09, 178, 0], 'true': [6.758, 74, 129]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 20, 0], 'false,true,false': [0.0, 170, 0], 'true': [6.72, 74, 129]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.462, 63, 129], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [5.27e-09, 13, 0], 'false,true,false': [8.43e-08, 186, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.472, 72, 129], 'false,true,true': [0.0, 27, 0], 'false,true,false': [5.43e-09, 165, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.442, 47, 129], 'true,true,true,false': [0.0, 2, 0], 'false,true': [8.43e-08, 169, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 15, 0], 'false,true,false': [8.23e-08, 155, 0], 'true': [6.655, 71, 129]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [2.63e-09, 10, 0], 'false,true,false': [5.74e-09, 179, 0], 'true': [6.412, 68, 129]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 107], 'true,false,false,false': [0.0, 149, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 17, 0], 'true,true,false,false': [0.0, 21, 0], 'true,false,false,true': [4.105, 72, 22]}]]
[{'': [0.20640623113151021, -2.1124243495570547e-16], 'false,true': [-3.0839528461809902e-18, -1.6753066000331702e-16], 'false': [-2.1124243495570547e-16, nan]}, {'': [0.21797783933517764, -2.5846461948945442e-17], 'false': [-2.5846461948945442e-17, nan], 'true': [0.21797783933517764, nan], 'true,true': [0.0, 0.20800859983875045], 'false,true,true': [0.0, -1.982541115402065e-18], 'false,true': [2.7755575615628915e-18, -1.4885671838549585e-17]}, {'': [0.22497910284592423, -2.886579864025407e-17], 'false,true': [7.569702440626067e-18, 2.494883201404846e-18], 'false': [-2.886579864025407e-17, nan]}, {'': [0.22243200911920408, -8.881784197001253e-17], 'false,true': [-1.3877787807814458e-18, -7.706253935633439e-17], 'false': [-8.881784197001253e-17, nan]}, {'': [0.21341196462342116, 4.107825191113079e-17], 'false,true': [9.912705577010326e-19, 3.820122235269356e-17], 'false': [4.107825191113079e-17, nan], 'false,true,true': [0.0, 2.135044278125301e-18], 'true': [0.21341196462342116, nan]}, {'': [0.2232545657680612, 3.122502256758253e-17], 'false,true': [-2.05596856412066e-18, 2.960594732333751e-17], 'false': [3.122502256758253e-17, nan], 'true': [0.2232545657680612, nan]}, {'': [0.19819177947074892, 4.204394886154439e-17], 'true,true': [0.0, 0.1957321797520664], 'false': [4.204394886154439e-17, nan], 'true,true,true': [0.0, 0.0], 'true': [0.19819177947074892, nan]}, {'': [0.22147246084665087, 4.89804275569922e-17], 'false,true': [9.251858538542971e-19, 4.369264806589326e-17], 'false': [4.89804275569922e-17, nan]}, {'': [0.20870479857300542, 3.2959746043559335e-17], 'false,true': [5.337610695313253e-19, 3.2872525310130336e-17], 'false': [3.2959746043559335e-17, nan], 'false,true,true': [-5.782411586589357e-19, 6.938893903907229e-19]}, {'': [0.1201084674670251, nan], 'true,false': [0.023209668008159847, 0.09409550415528184], 'true,false,true': [-4.150366447196847e-16, -8.163404592832033e-19], 'true': [0.004685900229922119, 0.12768825471303502], 'true,true,false': [0.0, -3.3042351923367752e-18], 'true,true': [0.0, -1.8101462358018856e-18], 'true,false,false': [0.17926663648709812, -1.0431625734733015e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004877;  // std dev = 4,21e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.1418510649004882;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.12544463852839136;  // std dev = 1,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(A) )
%   | | then return -0.12544463852839144;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 3,49e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.5553664367462837;  // std dev = 3,49e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.11231637819360644;  // std dev = 3,73e-09, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.10159632948783653;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926089;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.09269127618926089;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,67e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.0851847513883968;  // std dev = 1,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.08518475138839683;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839686;  // std dev = 2,28e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( female(A) )
%   | | | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0.20975771563253567;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( female(A) )
%   | then return -0.07877675473109164;  // std dev = 3,95e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07878655837467739;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1527438580936707;  // std dev = 5,89e-09, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.1527438580936707;  // std dev = 5,59e-09, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.0712901120298082;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420268;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420265;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06842697784420264;  // std dev = 1,39e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.06842697784420261;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06414889568565268;  // std dev = 7,44e-05, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06409798095885696;  // std dev = 0,000125, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801087;  // std dev = 6,83e-08, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.091535843560146;  // std dev = 0,430, 28,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | | else return -0.06427082909955072;  // std dev = 0,019, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063414
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.918 seconds
Total inference time: 2.032 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064552
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.166 seconds
Refined model CLL: -0.064552


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063414
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.452 seconds
Total inference time: 2.032 seconds
AUC ROC: 1.0
Total revision time: 9.452
Best scored revision CLL: -0.064552


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 10:40:07
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.064516, 0.5], 'Inference time': 1.587, 'CLL': -0.236944, 'Recall': 1.0, 'F1': 0.121212, 'Learning time': 1.894}, 'Inference time': 2.032, 'CLL': -0.063414, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.452}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.1418510649004885;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.12544463852839174;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.11231637819360676;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1015963294878365;  // std dev = 0,000, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.09269127618926058;  // std dev = 5,16e-08, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839678;  // std dev = 7,74e-08, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07877675473109146;  // std dev = 8,02e-08, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.0732462257633367;  // std dev = 1,19e-07, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06842697784420267;  // std dev = 3,65e-08, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06419184008202623;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.644 seconds
Total inference time: 1.474 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 10:40:11
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.474, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 2.644, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.14185106490048832;  // std dev = 0,000, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.055 seconds
Total inference time: 0.93 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 10:40:14
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.93, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 1.055, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5005330410597734;  // std dev = 8,329, 302,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.14185106490048832;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21425474056325416;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.43026353186199234;  // std dev = 8,304, 301,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1254446385283914;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.12544463852839183;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.37599018272056933;  // std dev = 7,936, 291,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.11231637819360686;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30395400007402623;  // std dev = 7,793, 286,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.1015963294878366;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.22131129061970475;  // std dev = 0,464, 290,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.09269127618926078;  // std dev = 1,67e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.09269127618926044;  // std dev = 1,25e-07, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.12691070679139604;  // std dev = 0,475, 309,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839691;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.08518475138839678;  // std dev = 6,04e-09, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3809411312074887;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.3809411312074886;  // std dev = 2,11e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.13395389637886657;  // std dev = 0,469, 288,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109143;  // std dev = 7,30e-08, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12110683433453502;  // std dev = 7,624, 284,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 1,29e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.07324622576333688;  // std dev = 1,08e-07, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04532360004389323;  // std dev = 8,209, 304,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=194 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420265;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.33179754702759456;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.38714072513612235;  // std dev = 4,88e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   | | | else return -0.06419184008202612;  // std dev = 6,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.32082387663378764;  // std dev = 4,834, 113,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | | | else return -0.06419184008202625;  // std dev = 2,36e-08, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.241284
   Precision = 0.064516 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.121212


Total learning time: 2.087 seconds
Total inference time: 1.928 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.980438
   AUC PR    = 0.874963
   CLL	      = -0.236071
   Precision = 0.115065 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.206383


Total scoring time: 2.249 seconds
Parameter learned model CLL: -0.236071


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [3.94e-08, 38, 0], 'false,true,false': [0.0, 242, 0], 'true': [8.329, 108, 194]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 9, 0], 'true,true,false': [8.304, 107, 194], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [7.45e-09, 15, 0], 'false,true,false': [0.0, 243, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.29e-08, 22, 0], 'false,true,false': [0.0, 251, 0], 'true': [7.936, 97, 194]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 34, 0], 'false,true,false': [0.0, 267, 0], 'true': [7.793, 92, 194]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.464, 96, 194], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [1.67e-08, 34, 0], 'false,true,false': [1.25e-07, 265, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.475, 115, 194], 'false,true,true': [0.0, 27, 0], 'false,true,false': [6.04e-09, 285, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 4, 0], 'true,true,false': [0.469, 94, 194], 'true,true,true,false': [2.11e-08, 15, 0], 'false,true': [7.3e-08, 282, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.29e-08, 30, 0], 'false,true,false': [1.08e-07, 273, 0], 'true': [7.624, 90, 194]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 6, 0], 'false,true,true,false': [0.0, 24, 0], 'false,true,false': [0.0, 254, 0], 'true': [8.209, 110, 194]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [4.88e-07, 0, 161], 'true,false,false,false': [2.36e-08, 238, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 11, 0], 'true,true,false,true': [1.32e-09, 3, 0], 'true,false,true,false': [6.45e-09, 24, 0], 'true,true,false,false': [0.0, 15, 0], 'true,false,false,true': [4.834, 80, 33]}]]
[{'': [0.22972676636990083, -2.5376526277146434e-17], 'false,true': [4.0902953538821554e-17, -1.5781682664093133e-16], 'false': [-2.5376526277146434e-17, nan]}, {'': [0.23417273673257546, -6.858520615444982e-17], 'false': [-6.858520615444982e-17, nan], 'true': [0.23417273673257546, nan], 'true,true': [-3.0839528461809905e-17, 0.2291144689352267], 'false,true,true': [0.0, 3.7007434154171884e-18], 'false,true': [0.0, -6.030841121420603e-17]}, {'': [0.21642059288487192, -1.1061562736192036e-16], 'false,true': [7.569702440626067e-18, -9.377182518746342e-17], 'false': [-1.1061562736192036e-16, nan]}, {'': [0.21235901890829234, -5.458903908455919e-17], 'false,true': [0.0, -6.320370776892276e-17], 'false': [-5.458903908455919e-17, nan]}, {'': [0.21528018876676938, 8.557200721363333e-17], 'false,true': [7.709882115452476e-18, 5.86532918669894e-17], 'false': [8.557200721363333e-17, nan], 'false,true,true': [0.0, 8.163404592832034e-18], 'true': [0.21528018876676938, nan]}, {'': [0.22581435915883696, 3.700743415417188e-17], 'false,true': [-2.05596856412066e-18, 3.4280570584917116e-17], 'false': [3.700743415417188e-17, nan], 'true': [0.22581435915883696, nan]}, {'': [0.22164467594799597, 1.8897413185109047e-17], 'true,true': [7.011934892369409e-17, 0.2198591820987656], 'false': [1.8897413185109047e-17, nan], 'true,true,true': [0.0, 2.960594732333751e-17], 'true': [0.22164467594799597, nan]}, {'': [0.20468278128208017, 1.97861529141117e-17], 'false,true': [5.551115123125783e-18, 4.310756066310132e-17], 'false': [1.97861529141117e-17, nan]}, {'': [0.2216455192128091, -4.300159602421381e-17], 'false,true': [1.8503717077085942e-18, -1.049029629567077e-17], 'false': [-4.300159602421381e-17, nan], 'false,true,true': [5.782411586589357e-19, -1.1564823173178713e-18]}, {'': [0.10876760063787726, nan], 'true,false': [0.02299783755218775, 0.08093759694366401], 'true,false,true': [1.4784584874511402e-15, 1.734723475976807e-18], 'true': [0.01686009185396885, 0.11202186008457238], 'true,true,false': [5.782411586589357e-19, -1.8503717077085942e-18], 'true,true': [-4.0371746350005693e-17, -3.0839528461809902e-18], 'true,false,false': [0.2067507244106826, 2.332401312237724e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.14185106490048768;  // std dev = 7,88e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.14185106490048816;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( actor(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839183;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 4,01e-08, 98,000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | | else return 0.5553664367462835;  // std dev = 4,01e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.11231637819360692;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 2,36e-08, 98,000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | | else return 0.4175135841583099;  // std dev = 2,30e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783619;  // std dev = 5,58e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10159632948783658;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601504;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | | else return 0.3207118471601504;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926086;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926092;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926093;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.09269127618926094;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else return -0.0851847513883968;  // std dev = 4,06e-09, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839683;  // std dev = 2,95e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.08518475138839676;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.08518475138839676;  // std dev = 2,79e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( female(A) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | | | else return 0.20975771563253565;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109151;  // std dev = 6,41e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | | else return -0.07877675473109153;  // std dev = 6,14e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.0787767547310917;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return -0.08063333591179084;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420267;  // std dev = 3,73e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.08176712290816433;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420262;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420262;  // std dev = 3,73e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420261;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else return -0.06842697784420261;  // std dev = 3,61e-09, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.06385531596573256;  // std dev = 0,000550, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.09903075881565143;  // std dev = 0,697, 85,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=70 */
%   | | | else return 0.1028090597160606;  // std dev = 0,750, 108,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=91 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.0844573124855018;  // std dev = 0,569, 44,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=33 */
%   | | | else return -0.06431284985036176;  // std dev = 0,025, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063984
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.898 seconds
Total inference time: 1.825 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065325
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.206 seconds
Refined model CLL: -0.065325


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063984
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.44 seconds
Total inference time: 1.825 seconds
AUC ROC: 1.0
Total revision time: 11.44
Best scored revision CLL: -0.065325


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 10:40:29
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.825, 'parameter_0.6': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.064516, 0.5], 'Inference time': 1.928, 'CLL': -0.241284, 'Recall': 1.0, 'F1': 0.121212, 'Learning time': 2.087}, 'CLL': -0.063984, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.44}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.14185106490048785;  // std dev = 7,30e-08, 345,000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.12544463852839208;  // std dev = 0,000, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.11231637819360683;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.10159632948783655;  // std dev = 0,000, 356,000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.09269127618926071;  // std dev = 1,53e-07, 393,000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.08518475138839678;  // std dev = 1,03e-07, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.07877675473109146;  // std dev = 5,16e-08, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.0732462257633371;  // std dev = 6,99e-08, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06842697784420305;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.0641918400820259;  // std dev = 1,35e-07, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.337 seconds
Total inference time: 1.328 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 10:40:34
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.328, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 3.337, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.1418510649004879;  // std dev = 0,000, 332,000 (wgt'ed) examples reached here.  /* #neg=332 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.153 seconds
Total inference time: 0.923 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 10:40:37
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.923, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 1.153, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5379389613462273;  // std dev = 9,107, 381,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.14185106490048768;  // std dev = 1,79e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.2206192999392251;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.46821048729482173;  // std dev = 8,977, 376,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.12544463852839224;  // std dev = 0,000, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34252918304250285;  // std dev = 9,415, 399,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.11231637819360646;  // std dev = 0,000, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2953655557185139;  // std dev = 8,988, 381,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.10159632948783628;  // std dev = 1,15e-07, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.19943787927640755;  // std dev = 0,468, 396,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.09269127618926043;  // std dev = 2,00e-07, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.14368957063821272;  // std dev = 0,471, 399,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839686;  // std dev = 1,97e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.08518475138839678;  // std dev = 6,32e-09, 349,000 (wgt'ed) examples reached here.  /* #neg=349 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.37715107661044683;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.37715107661044683;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.16099349586492864;  // std dev = 0,455, 366,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109141;  // std dev = 1,32e-07, 392,000 (wgt'ed) examples reached here.  /* #neg=392 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10492897141572372;  // std dev = 8,879, 379,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 2,11e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.07324622576333713;  // std dev = 6,99e-08, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.061956033449368404;  // std dev = 9,082, 393,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=259 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420265;  // std dev = 1,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.06842697784420312;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #neg=328 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3291737970424799;  // std dev = 2,11e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3740104035077583;  // std dev = 0,000, 212,000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | | | else return -0.06419184008202614;  // std dev = 1,05e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.33406413065373175;  // std dev = 5,769, 161,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=47 */
%   | | | else return -0.0641918400820258;  // std dev = 1,48e-07, 334,000 (wgt'ed) examples reached here.  /* #neg=334 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.24657
   Precision = 0.064516 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.121212


Total learning time: 2.526 seconds
Total inference time: 1.588 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.979042
   AUC PR    = 0.866239
   CLL	      = -0.241505
   Precision = 0.114754 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.205882


Total scoring time: 2.227 seconds
Parameter learned model CLL: -0.241505


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [3.8e-08, 37, 0], 'false,true,false': [1.79e-07, 327, 0], 'true': [9.107, 122, 259]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 14, 0], 'true,true,false': [8.977, 117, 259], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 40, 0], 'false,true,false': [0.0, 391, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 38, 0], 'false,true,false': [0.0, 352, 0], 'true': [9.415, 140, 259]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 43, 0], 'false,true,false': [1.15e-07, 353, 0], 'true': [8.988, 122, 259]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.468, 137, 259], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 35, 0], 'false,true,false': [2e-07, 337, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.471, 140, 259], 'false,true,true': [1.97e-08, 40, 0], 'false,true,false': [6.32e-09, 349, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.455, 107, 259], 'true,true,true,false': [0.0, 7, 0], 'false,true': [1.32e-07, 392, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.11e-08, 51, 0], 'false,true,false': [6.99e-08, 355, 0], 'true': [8.879, 120, 259]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 6, 0], 'false,true,true,false': [1.58e-08, 29, 0], 'false,true,false': [0.0, 328, 0], 'true': [9.082, 134, 259]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 212], 'true,false,false,false': [1.48e-07, 334, 0], 'false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 15, 0], 'true,true,false,true': [0.0, 4, 0], 'true,false,true,false': [1.05e-08, 37, 0], 'true,true,false,false': [0.0, 33, 0], 'true,false,false,true': [5.769, 114, 47]}]]
[{'': [0.21767554646220766, 1.7324359285359586e-16], 'false,true': [3.900783600034334e-17, 9.778111042570187e-17], 'false': [1.7324359285359586e-16, nan]}, {'': [0.22307034845495888, -1.3302211354955792e-16], 'false': [-1.3302211354955792e-16, nan], 'true': [0.22307034845495888, nan], 'true,true': [0.0, 0.2143433114531412], 'false,true,true': [-4.625929269271485e-18, -2.4980018054066023e-17], 'false,true': [-2.840105411831796e-17, -1.2720713939439133e-16]}, {'': [0.222174528804058, -3.188332788667116e-17], 'false,true': [-8.764918615461762e-18, -4.0371746350005693e-17], 'false': [-3.188332788667116e-17, nan]}, {'': [0.21204828867669132, 1.1438661465834946e-16], 'false,true': [-1.290957005378089e-18, 3.7741292621818353e-17], 'false': [1.1438661465834946e-16, nan]}, {'': [0.21878510634359122, 8.311830130883525e-17], 'false,true': [-1.200241107702872e-17, 1.1859949224482385e-16], 'false': [8.311830130883525e-17, nan], 'false,true,true': [0.0, -9.516197353929913e-18], 'true': [0.21878510634359122, nan]}, {'': [0.22158295731835928, 3.881499520540393e-17], 'false,true': [9.714451465470119e-18, 3.9446319499575764e-17], 'false': [3.881499520540393e-17, nan], 'true': [0.22158295731835928, nan]}, {'': [0.20869979187590437, 4.418234485753174e-17], 'true,true': [-2.4671622769447922e-17, 0.20688136402998067], 'false': [4.418234485753174e-17, nan], 'true,true,true': [0.0, -1.586032892321652e-17], 'true': [0.20869979187590437, nan]}, {'': [0.2080172347261097, -9.844342090272324e-18], 'false,true': [8.707631565687502e-18, 1.376051072774842e-17], 'false': [-9.844342090272324e-18, nan]}, {'': [0.20988717993502679, -9.481243460986185e-17], 'false,true': [7.93016446160826e-18, -7.108135218636673e-17], 'false': [-9.481243460986185e-17, nan], 'false,true,true': [5.782411586589357e-19, 8.613799328988284e-18]}, {'': [0.10574008047929881, nan], 'true,false': [0.024293387882714585, 0.08321506414869673], 'true,false,true': [-3.3516166781136804e-16, 3.00060276925718e-18], 'true': [0.014411822418860371, 0.11078921553224835], 'true,true,false': [0.0, -1.6821560979169039e-18], 'true,true': [2.960594732333751e-17, -1.50030138462859e-18], 'true,false,false': [0.20670498823347966, 6.581561642987455e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.141851064900488;  // std dev = 0,000, 149,000 (wgt'ed) examples reached here.  /* #neg=149 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.1418510649004876;  // std dev = 2,04e-07, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839136;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.12544463852839108;  // std dev = 7,45e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.1254446385283922;  // std dev = 0,000, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,15e-08, 121,000 (wgt'ed) examples reached here.  /* #pos=121 */
%   | | else return 0.5553664367462834;  // std dev = 4,21e-08, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.11231637819360626;  // std dev = 4,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.11606730971783066;  // std dev = 0,006, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.11231637819360633;  // std dev = 0,000, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10725459588709715;  // std dev = 0,006, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783646;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else return -0.10159632948783652;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601498;  // std dev = 8,33e-09, 121,000 (wgt'ed) examples reached here.  /* #pos=121 */
%   | | else return 0.3207118471601495;  // std dev = 1,83e-08, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else return -0.0926912761892609;  // std dev = 6,59e-09, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.10292185453573717;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926049;  // std dev = 1,48e-07, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926089;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.09190299324402786;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #pos=121 */
%   | | else return 0.25517224256948945;  // std dev = 3,73e-09, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else return -0.08518475138839679;  // std dev = 5,27e-09, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 3,73e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.08967349929085291;  // std dev = 0,005, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,29e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.08518475138839678;  // std dev = 2,11e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 3,49e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.08518475138839678;  // std dev = 4,83e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253523;  // std dev = 1,52e-07, 121,000 (wgt'ed) examples reached here.  /* #pos=121 */
%   | | | else return 0.20975771563253526;  // std dev = 2,27e-07, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.07877675473109179;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then return -0.07877675473109143;  // std dev = 2,95e-09, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.08091949943756402;  // std dev = 0,004, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527744;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #pos=121 */
%   | | else return 0.17709649774527758;  // std dev = 0,000, 138,000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333692;  // std dev = 4,75e-09, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else return -0.08248011344890428;  // std dev = 0,011, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,32e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.07423062491421657;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.0732462257633371;  // std dev = 4,06e-09, 343,000 (wgt'ed) examples reached here.  /* #neg=343 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07310090658571108;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367155;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420264;  // std dev = 5,10e-09, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else return -0.08438635537001733;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07495749635733051;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420265;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06829976220669237;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420308;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420267;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06739919169404969;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.06479656295172652;  // std dev = 0,003, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.11614361253208486;  // std dev = 0,866, 233,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=212 */
%   | | | else return -0.06407958576620713;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.06888454412128439;  // std dev = 0,779, 70,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=47 */
%   | | | else return -0.0642885940330409;  // std dev = 0,025, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064023
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.175 seconds
Total inference time: 2.168 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065297
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.659 seconds
Refined model CLL: -0.065297


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064023
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.587 seconds
Total inference time: 2.168 seconds
AUC ROC: 1.0
Total revision time: 12.587
Best scored revision CLL: -0.065297


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 10:40:54
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 2.168, 'parameter_0.8': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.064516, 0.5], 'Inference time': 1.588, 'CLL': -0.24657, 'Recall': 1.0, 'F1': 0.121212, 'Learning time': 2.526}, 'CLL': -0.064023, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.587}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.14185106490048746;  // std dev = 1,98e-07, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1254446385283923;  // std dev = 0,000, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.11231637819360604;  // std dev = 0,000, 459,000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.10159632948783592;  // std dev = 2,37e-07, 475,000 (wgt'ed) examples reached here.  /* #neg=475 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.09269127618926137;  // std dev = 0,000, 496,000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.08518475138839678;  // std dev = 1,30e-07, 479,000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.0787767547310919;  // std dev = 0,000, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07324622576333725;  // std dev = 0,000, 428,000 (wgt'ed) examples reached here.  /* #neg=428 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06842697784420346;  // std dev = 0,000, 479,000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.06419184008202572;  // std dev = 1,86e-07, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.587 seconds
Total inference time: 1.399 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 10:40:59
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.399, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 3.587, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048727;  // std dev = 2,95e-07, 461,000 (wgt'ed) examples reached here.  /* #neg=461 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.305 seconds
Total inference time: 0.878 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 10:41:01
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.878, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 1.305, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.51802673550684;  // std dev = 10,498, 491,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.14185106490048732;  // std dev = 3,01e-07, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21721451751811482;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.4563821560785673;  // std dev = 10,284, 481,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.1254446385283923;  // std dev = 0,000, 448,000 (wgt'ed) examples reached here.  /* #neg=448 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.365731185166885;  // std dev = 10,270, 487,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.11231637819360607;  // std dev = 0,000, 432,000 (wgt'ed) examples reached here.  /* #neg=432 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.27349901165276463;  // std dev = 10,431, 494,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 2,11e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.10159632948783558;  // std dev = 3,07e-07, 461,000 (wgt'ed) examples reached here.  /* #neg=461 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.19193793680504115;  // std dev = 0,472, 508,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.09269127618926107;  // std dev = 1,12e-07, 428,000 (wgt'ed) examples reached here.  /* #neg=428 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.15509338052725505;  // std dev = 0,471, 497,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839679;  // std dev = 1,67e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.08518475138839678;  // std dev = 6,59e-09, 398,000 (wgt'ed) examples reached here.  /* #neg=398 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3745077909661215;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.37450779096612147;  // std dev = 2,98e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.1349185865615974;  // std dev = 0,468, 480,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109189;  // std dev = 1,55e-07, 469,000 (wgt'ed) examples reached here.  /* #neg=469 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06041336570742468;  // std dev = 10,792, 521,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.07324622576333725;  // std dev = 0,000, 439,000 (wgt'ed) examples reached here.  /* #neg=439 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.054717363109887104;  // std dev = 10,673, 512,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=324 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420271;  // std dev = 1,05e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.06842697784420343;  // std dev = 0,000, 432,000 (wgt'ed) examples reached here.  /* #neg=432 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.31598106047717756;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202615;  // std dev = 7,45e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.39873955809166606;  // std dev = 7,10e-07, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3229585551158797;  // std dev = 6,525, 212,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=59 */
%   | | | else return -0.06419184008202558;  // std dev = 1,98e-07, 404,000 (wgt'ed) examples reached here.  /* #neg=404 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.234735
   Precision = 0.064516 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.121212


Total learning time: 2.776 seconds
Total inference time: 1.748 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.978798
   AUC PR    = 0.865522
   CLL	      = -0.23227
   Precision = 0.114004 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.204675


Total scoring time: 2.707 seconds
Parameter learned model CLL: -0.23227


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [5.05e-08, 48, 0], 'false,true,false': [3.01e-07, 400, 0], 'true': [10.498, 167, 324]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 13, 0], 'true,true,false': [10.284, 157, 324], 'false,true,true,true': [0.0, 8, 0], 'false,true,true,false': [0.0, 49, 0], 'false,true,false': [0.0, 448, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.83e-08, 45, 0], 'false,true,false': [0.0, 432, 0], 'true': [10.27, 163, 324]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.11e-08, 47, 0], 'false,true,false': [3.07e-07, 461, 0], 'true': [10.431, 170, 324]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.472, 184, 324], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [0.0, 37, 0], 'false,true,false': [1.12e-07, 428, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.471, 173, 324], 'false,true,true': [1.67e-08, 45, 0], 'false,true,false': [6.59e-09, 398, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 4, 0], 'true,true,false': [0.468, 156, 324], 'true,true,true,false': [2.98e-08, 19, 0], 'false,true': [1.55e-07, 469, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 51, 0], 'false,true,false': [0.0, 439, 0], 'true': [10.792, 197, 324]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 6, 0], 'false,true,true,false': [1.05e-08, 46, 0], 'false,true,false': [0.0, 432, 0], 'true': [10.673, 188, 324]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [7.1e-07, 0, 265], 'true,false,false,false': [1.98e-07, 404, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 25, 0], 'true,true,false,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 47, 0], 'true,true,false,false': [7.45e-09, 45, 0], 'true,false,false,true': [6.525, 153, 59]}]]
[{'': [0.22443908893691605, 1.9825411154020654e-16], 'false,true': [5.3198186596622086e-17, 2.2648549702353194e-16], 'false': [1.9825411154020654e-16, nan]}, {'': [0.2257044042682146, -1.3894276268576217e-16], 'false': [-1.3894276268576217e-16, nan], 'true': [0.2257044042682146, nan], 'true,true': [-8.540177112501205e-18, 0.2198641949161616], 'false,true,true': [0.0, -3.172065784643304e-17], 'false,true': [-3.895519384649672e-17, -1.3283025473193837e-16]}, {'': [0.21659475303722134, -5.586027796856134e-18], 'false,true': [7.401486830834377e-18, -1.439177994884462e-17], 'false': [-5.586027796856134e-18, nan]}, {'': [0.22025324135174812, 2.535154938120436e-16], 'false,true': [9.448706592554524e-18, 2.0422323750154723e-16], 'false': [2.535154938120436e-16, nan]}, {'': [0.22234880350245723, -9.40866970021319e-18], 'false,true': [-6.308085367188389e-18, 2.9052565130377925e-17], 'false': [-9.40866970021319e-18, nan], 'false,true,true': [0.0, -7.50150692314295e-18], 'true': [0.22234880350245723, nan]}, {'': [0.22167887171023787, 4.410818337111231e-17], 'false,true': [6.1679056923619804e-18, 4.351627935716694e-17], 'false': [4.410818337111231e-17, nan], 'true': [0.22167887171023787, nan]}, {'': [0.22066783468056997, 5.113180667783237e-17], 'true,true': [-5.792467954566034e-17, 0.2193750000000011], 'false': [5.113180667783237e-17, nan], 'true,true,true': [0.0, 4.674623261579606e-17], 'true': [0.22066783468056997, nan]}, {'': [0.2235588848568478, 4.1690007455312e-17], 'false,true': [-1.0884539457109378e-17, -4.046370932574602e-18], 'false': [4.1690007455312e-17, nan]}, {'': [0.2224653632298017, -1.2203277873978992e-16], 'false,true': [4.270088556250602e-18, -1.2747005097548094e-16], 'false': [-1.2203277873978992e-16, nan], 'false,true,true': [5.782411586589357e-19, 2.413528314402514e-18]}, {'': [0.11115175603463634, nan], 'true,false': [0.027420023279448653, 0.08423744658963189], 'true,false,true': [1.9037182731685703e-15, -2.362176648138631e-18], 'true': [0.014182308089174084, 0.11703722355938448], 'true,true,false': [0.0, 1.2335811384723962e-18], 'true,true': [-1.4210854715202004e-16, 0.0], 'true,false,false': [0.2008499466002124, 9.728191849438253e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048807;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.14185106490048718;  // std dev = 2,98e-07, 441,000 (wgt'ed) examples reached here.  /* #neg=441 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839136;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839138;  // std dev = 3,65e-08, 164,000 (wgt'ed) examples reached here.  /* #neg=164 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.1254446385283923;  // std dev = 0,000, 430,000 (wgt'ed) examples reached here.  /* #neg=430 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360615;  // std dev = 1,04e-07, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360638;  // std dev = 2,28e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.11231637819360611;  // std dev = 0,000, 423,000 (wgt'ed) examples reached here.  /* #neg=423 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783648;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878365;  // std dev = 0,000, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | | else return -0.1015963294878366;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926058;  // std dev = 1,90e-07, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.255172242569489;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.2551722425694886;  // std dev = 1,12e-08, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 1,32e-09, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return -0.08518475138839678;  // std dev = 4,56e-09, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( genre(A, D) )
%   | then return -0.0851847513883968;  // std dev = 3,73e-09, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839679;  // std dev = 2,11e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.08518475138839678;  // std dev = 5,67e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 3,65e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return -0.08518475138839678;  // std dev = 5,87e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253504;  // std dev = 2,17e-07, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | | else return 0.20975771563253498;  // std dev = 2,55e-07, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 2,11e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.07877675473109161;  // std dev = 4,83e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else return -0.07877675473109218;  // std dev = 0,000, 520,000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527764;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.17709649774527775;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333682;  // std dev = 7,74e-08, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.07601149024721437;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333727;  // std dev = 0,000, 428,000 (wgt'ed) examples reached here.  /* #neg=428 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07324622576333698;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420267;  // std dev = 2,89e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.06842697784420267;  // std dev = 3,57e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06841440207257285;  // std dev = 0,000170, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.0684269778442027;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420267;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06842697784420265;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.06842697784420342;  // std dev = 0,000, 429,000 (wgt'ed) examples reached here.  /* #neg=429 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419193451283037;  // std dev = 2,50e-07, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.06615892455630172;  // std dev = 0,002, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801112;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | | else return -0.06419184008202616;  // std dev = 5,27e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.11530902339574316;  // std dev = 0,422, 53,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.06036665985360605;  // std dev = 0,651, 570,000 (wgt'ed) examples reached here.  /* #neg=559 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063628
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.974 seconds
Total inference time: 1.855 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064603
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.017 seconds
Refined model CLL: -0.064603


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063628
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.474 seconds
Total inference time: 1.855 seconds
AUC ROC: 1.0
Total revision time: 13.474
Best scored revision CLL: -0.064603


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 10:41:19
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.064516, 0.5], 'Inference time': 1.748, 'CLL': -0.234735, 'Recall': 1.0, 'F1': 0.121212, 'Learning time': 2.776}, 'Inference time': 1.855, 'CLL': -0.063628, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.474}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.1418510649004884;  // std dev = 0,000, 607,000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.12544463852839233;  // std dev = 0,000, 571,000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.11231637819360585;  // std dev = 0,000, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783627;  // std dev = 2,36e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783548;  // std dev = 3,61e-07, 603,000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0926912761892617;  // std dev = 0,000, 590,000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.08518475138839678;  // std dev = 1,43e-07, 572,000 (wgt'ed) examples reached here.  /* #neg=572 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109175;  // std dev = 1,97e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07877675473109251;  // std dev = 0,000, 626,000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527653;  // std dev = 2,73e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07324622576333688;  // std dev = 1,65e-07, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.0684269778442036;  // std dev = 0,000, 571,000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.06419184008202546;  // std dev = 2,46e-07, 597,000 (wgt'ed) examples reached here.  /* #neg=597 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.484 seconds
Total inference time: 1.35 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 10:41:25
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.35, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 4.484, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.14185106490048835;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #neg=591 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.463 seconds
Total inference time: 0.84 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 10:41:28
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.84, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 1.463, 'F1': nan}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.41370449065506754;  // std dev = 4,216, 72,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.19999981628405658;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.4666668503826107;  // std dev = 3,651, 60,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3835518998031791;  // std dev = 3,632, 60,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360629;  // std dev = 5,43e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2934294564651175;  // std dev = 3,644, 61,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.13179450333549733;  // std dev = 0,495, 70,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.16510486191667292;  // std dev = 0,479, 63,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08643583885520752;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839679;  // std dev = 3,36e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3515085910334364;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1421780149528268;  // std dev = 0,475, 61,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07876893190286718;  // std dev = 0,000194, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10589348997787172;  // std dev = 3,616, 64,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07534166488853583;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.0732467567882037;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0629860946995725;  // std dev = 3,766, 64,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.0743470870735426;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06841955439449142;  // std dev = 4,02e-05, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.31108673570983175;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0693897149900228;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06399201620588493;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4096748568482625;  // std dev = 7,30e-08, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.06842744265967655;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.4539615067881011;  // std dev = 1,610, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return -0.06419272405130794;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.191267
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.840391


Total learning time: 1.242 seconds
Total inference time: 2.072 seconds
AUC ROC: 0.976419


Results scoring model
   AUC ROC   = 0.990283
   AUC PR    = 0.944996
   CLL	      = -0.223171
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.925
   F1        = 0.961039


Total scoring time: 1.351 seconds
Parameter learned model CLL: -0.223171


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [5.58e-08, 53, 0], 'true': [4.216, 32, 40]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'true,true,false': [3.651, 20, 40], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,false': [0.0, 53, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [5.43e-09, 57, 0], 'true': [3.632, 20, 40]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [3.94e-08, 57, 0], 'true': [3.644, 21, 40]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.495, 30, 40], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.86e-09, 3, 0], 'false,true,false': [0.0, 61, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.479, 23, 40], 'false,true,true': [0.007, 6, 0], 'false,true,false': [3.36e-09, 44, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false': [0.475, 21, 40], 'true,true,true,false': [0.0, 3, 0], 'false,true': [0.000194, 58, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.008, 6, 0], 'false,true,false': [0.0, 57, 0], 'true': [3.616, 24, 40]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [4.02e-05, 54, 0], 'true': [3.766, 24, 40]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [7.3e-08, 0, 37], 'true,false,false,false': [0.0, 48, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 2, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false,false,true': [1.61, 19, 3]}]]
[{'': [0.24691358024691462, 5.947623346206196e-17], 'false,true': [0.0, 5.86532918669894e-17], 'false': [5.947623346206196e-17, nan]}, {'': [0.22574576726686307, -3.062684205862501e-17], 'false': [-3.062684205862501e-17, nan], 'true': [0.22574576726686307, nan], 'true,true': [0.0, 0.22222222222222154], 'false,true,true': [0.0, 0.0], 'false,true': [0.0, -3.561092720495785e-17]}, {'': [0.21988105160703422, 3.198947698072485e-17], 'false,true': [0.0, 2.921639538487254e-17], 'false': [3.198947698072485e-17, nan]}, {'': [0.2177296247252848, 3.010774304068221e-17], 'false,true': [0.0, 2.7268635692547703e-17], 'false': [3.010774304068221e-17, nan]}, {'': [0.2448979591836733, -5.204170427930421e-18], 'false,true': [1.1564823173178713e-18, -5.4601132358614255e-18], 'false': [-5.204170427930421e-18, nan], 'false,true,true': [nan, 1.1564823173178713e-18], 'true': [0.2448979591836733, nan]}, {'': [0.22900992244460094, 1.1044191258924307e-06], 'false,true': [7.826099248053192e-06, 1.1354553660939102e-17], 'false': [1.1044191258924307e-06, nan], 'true': [0.22900992244460094, nan]}, {'': [0.22605308068654018, 6.486844088702183e-10], 'true,true': [-1.850371707708594e-17, 0.22574576726686357], 'false': [6.486844088702183e-10, nan], 'true,true,true': [nan, -1.850371707708594e-17], 'true': [0.22605308068654018, nan]}, {'': [0.20432276940014862, 1.2832030086558123e-06], 'false,true': [9.502957351582622e-06, -1.1686558153949016e-17], 'false': [1.2832030086558123e-06, nan]}, {'': [0.22156383775392494, 6.288032235225348e-07], 'false,true': [0.0, 1.6178429131354345e-09], 'false': [6.288032235225348e-07, nan], 'false,true,true': [0.0, nan]}, {'': [0.11755354541069789, nan], 'true,false': [0.011121008448924271, 0.06975323342521218], 'true,false,true': [1.4402893292434464e-16, 0.0], 'true': [0.01128670755891429, 0.12391474657013413], 'true,true,false': [0.0, 0.0], 'true,true': [0.0, 6.474478258730598e-06], 'true,false,false': [0.11776859504132203, -4.625929269271485e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( director(B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360636;  // std dev = 2,95e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.092691276189261;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0.3207118471601494;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839682;  // std dev = 1,86e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( director(B) )
%   | | then return 0.20975771563253542;  // std dev = 9,50e-09, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202619;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06684529730283212;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801095;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.12499799045846376;  // std dev = 0,194, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202625;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return 0.13400703000801095;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.989899
   AUC PR    = 0.694359
   CLL	      = -0.110704
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 2.369 seconds
Total inference time: 1.484 seconds
AUC ROC: 0.989899


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064102
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.46 seconds
Refined model CLL: -0.064102


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989899
   AUC PR    = 0.694359
   CLL	      = -0.110704
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 6.422 seconds
Total inference time: 1.484 seconds
AUC ROC: 0.989899
Total revision time: 6.422
Best scored revision CLL: -0.064102


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 10:41:38
{'AUC PR': 0.694359, 'AUC ROC': 0.989899, 'Precision': [0.626761, 0.5], 'Inference time': 1.484, 'CLL': -0.110704, 'Recall': 1.0, 'F1': 0.770563, 'Learning time': 6.422, 'parameter_0.2': {'AUC PR': 0.83578, 'AUC ROC': 0.976419, 'Precision': [1.0, 0.5], 'Inference time': 2.072, 'CLL': -0.191267, 'Recall': 0.724719, 'F1': 0.840391, 'Learning time': 1.242}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,69e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360626;  // std dev = 5,27e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783628;  // std dev = 2,79e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926107;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0851847513883968;  // std dev = 1,49e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253542;  // std dev = 5,96e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return -0.07877675473109165;  // std dev = 4,21e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.0954075562086984;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 2,89e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936709;  // std dev = 3,94e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.08748523105757916;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080111;  // std dev = 1,83e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.0807485635055348;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06417799388152799;  // std dev = 0,001, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077785
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.846 seconds
Total inference time: 1.246 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 10:41:42
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.246, 'CLL': -0.077785, 'Recall': 1.0, 'Learning time': 1.846, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.765 seconds
Total inference time: 0.909 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 10:41:44
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.909, 'CLL': -0.188432, 'Recall': 0.0, 'Learning time': 0.765, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5010060779566538;  // std dev = 5,379, 126,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21433438692188225;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.38566561307811636;  // std dev = 5,692, 135,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1254446385283913;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30022295544762334;  // std dev = 5,765, 139,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360621;  // std dev = 7,90e-09, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.29635516264012596;  // std dev = 5,312, 126,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10159632948783628;  // std dev = 2,98e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.21275750695651705;  // std dev = 0,476, 129,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926078;  // std dev = 7,74e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2057446878958173;  // std dev = 0,462, 120,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0851847513883968;  // std dev = 5,96e-09, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.13851835016850206;  // std dev = 0,472, 122,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.07877675473109155;  // std dev = 6,75e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08967434958595942;  // std dev = 5,321, 125,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07324622576333711;  // std dev = 3,49e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06771401156628987;  // std dev = 5,321, 125,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=81 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420265;  // std dev = 5,10e-09, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.4156006766006995;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4018749884428738;  // std dev = 1,03e-07, 77,000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5212019346340492;  // std dev = 1,922, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return -0.06419184008202626;  // std dev = 2,36e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.191523
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.840391


Total learning time: 1.597 seconds
Total inference time: 1.41 seconds
AUC ROC: 0.976419


Results scoring model
   AUC ROC   = 0.993702
   AUC PR    = 0.962623
   CLL	      = -0.218192
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.950617
   F1        = 0.974684


Total scoring time: 2.238 seconds
Parameter learned model CLL: -0.218192


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'false,true,false': [8.94e-08, 101, 0], 'true': [5.379, 45, 81]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 3, 0], 'true,true,false': [5.692, 54, 81], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0], 'false,true,false': [7.9e-09, 119, 0], 'true': [5.765, 58, 81]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false': [2.98e-08, 102, 0], 'true': [5.312, 45, 81]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.476, 48, 81], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 6, 0], 'false,true,false': [7.74e-08, 132, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.462, 39, 81], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false': [5.96e-09, 126, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, A)', 'true': 'movie(D, B)'}, {'true,true,false': [0.472, 41, 81], 'true,false': [0.0, 0, 0], 'false,true': [6.75e-08, 117, 0], 'true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 7, 0], 'false,true,false': [3.49e-08, 115, 0], 'true': [5.321, 44, 81]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 6, 0], 'false,true,false': [5.1e-09, 108, 0], 'true': [5.321, 44, 81]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.03e-07, 0, 77], 'true,false,false,false': [2.36e-08, 95, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 4, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 9, 0], 'true,true,false,false': [3.73e-09, 10, 0], 'true,false,false,true': [1.922, 48, 4]}]]
[{'': [0.22959183673469533, 6.640586315514955e-17], 'false,true': [-6.938893903907228e-18, 7.91446116564468e-17], 'false': [6.640586315514955e-17, nan]}, {'': [0.24243856332703256, 1.7763568394002505e-18], 'false': [1.7763568394002505e-18, nan], 'true': [0.24243856332703256, nan], 'true,true': [0.0, 0.24000000000000046], 'false,true,true': [0.0, 0.0], 'false,true': [0.0, -3.828355257328126e-18]}, {'': [0.2391052657186404, 7.040438692744895e-17], 'false,true': [0.0, 6.344131569286608e-17], 'false': [7.040438692744895e-17, nan]}, {'': [0.22392623881673923, -6.0557619525008536e-18], 'false,true': [1.734723475976807e-18, 8.707631565687502e-18], 'false': [-6.0557619525008536e-18, nan]}, {'': [0.22652339037758315, 4.632585282608567e-17], 'false,true': [-9.912705577010326e-19, 4.5418214643756407e-17], 'false': [4.632585282608567e-17, nan], 'false,true,true': [0.0, 0.0], 'true': [0.22652339037758315, nan]}, {'': [0.2135954185434892, 3.5626559745434126e-17], 'false,true': [1.734723475976807e-18, 3.52451753849256e-17], 'false': [3.5626559745434126e-17, nan], 'true': [0.2135954185434892, nan]}, {'': [0.22312550389680233, 3.890525129028326e-17], 'true,true': [nan, 0.22312550389680233], 'false': [3.890525129028326e-17, nan], 'true': [0.22312550389680233, nan]}, {'': [0.22647318432212585, 9.100188726435709e-18], 'false,true': [9.912705577010326e-19, 1.0619524583371063e-17], 'false': [9.100188726435709e-18, nan]}, {'': [0.22646822012065934, 2.7268635692547703e-17], 'false,true': [-1.1564823173178713e-18, 2.5699607051508253e-17], 'false': [2.7268635692547703e-17, nan], 'false,true,true': [nan, -1.1564823173178713e-18]}, {'': [0.12624983950981108, nan], 'true,false': [0.02035320092419173, 0.07286449487667779], 'true,false,true': [1.3841741605716237e-16, 0.0], 'true': [0.024096997723057876, 0.1315365791330226], 'true,true,false': [0.0, 1.3877787807814458e-18], 'true,true': [0.0, 1.4823464350942466e-06], 'true,false,false': [0.07100591715976314, 5.843279076974508e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.14185106490048774;  // std dev = 4,21e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109547;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0.719473412210955;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.12544463852839127;  // std dev = 3,65e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.5553664367462839;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360635;  // std dev = 2,63e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.10159632948783621;  // std dev = 4,08e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716015005;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839682;  // std dev = 9,13e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.08518475138839686;  // std dev = 1,83e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.07877675473109175;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.0807052365878966;  // std dev = 0,005, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( female(A) )
%   | | then return 0.177096497745277;  // std dev = 6,45e-09, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.17709649774527692;  // std dev = 7,90e-09, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07727102265151628;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else return -0.07311542575675711;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( genre(B, D) )
%   | then return -0.06831247397272937;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.06842510073155558;  // std dev = 0,000114, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06817086348193821;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06399811038731955;  // std dev = 7,91e-05, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801079;  // std dev = 6,14e-08, 77,000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | | else return -0.06409080361907248;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419189019784445;  // std dev = 6,93e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | | else return 0.09438883687512738;  // std dev = 0,177, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.998096
   AUC PR    = 0.964754
   CLL	      = -0.111822
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 3.385 seconds
Total inference time: 1.623 seconds
AUC ROC: 0.998096


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064189
   Precision = 0.975904 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.987805


Total scoring time: 1.887 seconds
Refined model CLL: -0.064189


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.998096
   AUC PR    = 0.964754
   CLL	      = -0.111822
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 9.107 seconds
Total inference time: 1.623 seconds
AUC ROC: 0.998096
Total revision time: 9.107
Best scored revision CLL: -0.064189


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 10:41:56
{'AUC PR': 0.964754, 'AUC ROC': 0.998096, 'Precision': [0.626761, 0.5], 'parameter_0.4': {'AUC PR': 0.83578, 'AUC ROC': 0.976419, 'Precision': [1.0, 0.5], 'Inference time': 1.41, 'CLL': -0.191523, 'Recall': 0.724719, 'F1': 0.840391, 'Learning time': 1.597}, 'Inference time': 1.623, 'CLL': -0.111822, 'Recall': 1.0, 'F1': 0.770563, 'Learning time': 9.107}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048804;  // std dev = 0,000, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839127;  // std dev = 5,58e-08, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360625;  // std dev = 9,31e-08, 151,000 (wgt'ed) examples reached here.  /* #neg=151 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783649;  // std dev = 0,000, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 8,43e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926065;  // std dev = 8,16e-08, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 6,99e-08, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07877675473109157;  // std dev = 7,15e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527716;  // std dev = 3,65e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333682;  // std dev = 8,36e-08, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367116;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06842697784420264;  // std dev = 6,75e-08, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080109;  // std dev = 5,58e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076072
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.465 seconds
Total inference time: 1.429 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 10:42:01
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.429, 'CLL': -0.076072, 'Recall': 1.0, 'Learning time': 2.465, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048802;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.193993
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.879 seconds
Total inference time: 0.884 seconds
AUC ROC: 0.985041


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 10:42:03
{'AUC PR': 0.626761, 'AUC ROC': 0.985041, 'Precision': [nan, 0.5], 'Inference time': 0.884, 'CLL': -0.193993, 'Recall': 0.0, 'Learning time': 0.879, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5211924133603789;  // std dev = 6,412, 184,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004882;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21775326707189585;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.44891339959476856;  // std dev = 6,377, 183,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3626566977125897;  // std dev = 6,354, 184,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360624;  // std dev = 7,57e-09, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2531011361486711;  // std dev = 6,621, 192,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.10159632948783649;  // std dev = 0,000, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.23918683028303092;  // std dev = 0,460, 179,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926089;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.0926912761892607;  // std dev = 7,60e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.17530195401122356;  // std dev = 0,466, 179,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.0851847513883969;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839678;  // std dev = 5,43e-09, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3854889847910936;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.14722162882269715;  // std dev = 0,459, 175,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109147;  // std dev = 7,74e-08, 195,000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05319155593051987;  // std dev = 6,581, 194,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.07324622576333666;  // std dev = 1,18e-07, 195,000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12301580454352068;  // std dev = 5,771, 171,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=122 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06842697784420262;  // std dev = 5,59e-09, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.33724496880000215;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202622;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3719684371057566;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5436942134966531;  // std dev = 2,532, 83,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=7 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.196026
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.840391


Total learning time: 1.681 seconds
Total inference time: 1.432 seconds
AUC ROC: 0.976419


Results scoring model
   AUC ROC   = 0.992612
   AUC PR    = 0.954823
   CLL	      = -0.230006
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.942623
   F1        = 0.970464


Total scoring time: 1.873 seconds
Parameter learned model CLL: -0.230006


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0], 'false,true,false': [0.0, 166, 0], 'true': [6.412, 62, 122]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [7.45e-09, 7, 0], 'true,true,false': [6.377, 61, 122], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false': [0.0, 177, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [7.57e-09, 150, 0], 'true': [6.354, 62, 122]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 10, 0], 'false,true,false': [0.0, 169, 0], 'true': [6.621, 70, 122]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.46, 57, 122], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [6.45e-09, 13, 0], 'false,true,false': [7.6e-08, 152, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.466, 57, 122], 'false,true,true': [3.73e-09, 9, 0], 'false,true,false': [5.43e-09, 172, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false': [0.459, 53, 122], 'true,true,true,false': [1.05e-08, 5, 0], 'false,true': [7.74e-08, 195, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 12, 0], 'false,true,false': [1.18e-07, 195, 0], 'true': [6.581, 72, 122]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 9, 0], 'false,true,false': [5.59e-09, 156, 0], 'true': [5.771, 49, 122]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 115], 'true,false,false,false': [0.0, 162, 0], 'false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 9, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [5.27e-09, 11, 0], 'true,true,false,false': [1.86e-09, 6, 0], 'true,false,false,true': [2.532, 76, 7]}]]
[{'': [0.22341682419660133, -1.7659687877078512e-16], 'false,true': [-2.7755575615628915e-18, -1.6318940843887844e-16], 'false': [-1.7659687877078512e-16, nan]}, {'': [0.22980609418282702, -2.1488187573390126e-17], 'false': [-2.1488187573390126e-17, nan], 'true': [0.22980609418282702, nan], 'true,true': [7.93016446160826e-18, 0.22222222222222393], 'false,true,true': [0.0, 0.0], 'false,true': [0.0, -1.2544892933617588e-17]}, {'': [0.21945168547530514, 4.0755022422948786e-17], 'false,true': [-1.734723475976807e-18, 5.773159728050814e-17], 'false': [4.0755022422948786e-17, nan]}, {'': [0.2283176470923298, -8.311166776523518e-17], 'false,true': [1.3877787807814458e-18, -7.62046573115492e-17], 'false': [-8.311166776523518e-17, nan]}, {'': [0.2118248021240712, 4.01285430587406e-17], 'false,true': [4.956352788505163e-18, 3.7981314000334304e-17], 'false': [4.01285430587406e-17, nan], 'false,true,true': [0.0, 3.2025664171879517e-18], 'true': [0.2118248021240712, nan]}, {'': [0.2170344246434247, 3.0669144326661785e-17], 'false,true': [1.5419764230904951e-18, 2.9692011123696044e-17], 'false': [3.0669144326661785e-17, nan], 'true': [0.2170344246434247, nan]}, {'': [0.21293366914405923, 3.0744637605004337e-17], 'true,true': [2.2204460492503132e-17, 0.21113469387755027], 'false': [3.0744637605004337e-17, nan], 'true,true,true': [nan, 2.2204460492503132e-17], 'true': [0.21293366914405923, nan]}, {'': [0.22323438914672866, 6.972415130496152e-17], 'false,true': [0.0, 7.173748774501012e-17], 'false': [6.972415130496152e-17, nan]}, {'': [0.1947633953258701, 3.162453464083779e-17], 'false,true': [0.0, 3.0602301319795984e-17], 'false': [3.162453464083779e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.12372139126800683, nan], 'true,false': [0.015157991374186778, 0.07766596804434364], 'true,false,true': [-7.568824793966284e-16, 2.523234146875356e-18], 'true': [0.018268000891598753, 0.12690307402990816], 'true,true,false': [0.0, 5.782411586589357e-19], 'true,true': [4.9343245538895844e-17, 2.196292881382285e-06], 'true,false,false': [0.07722456089418005, -7.538551401775754e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14185106490048818;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.1254446385283912;  // std dev = 5,37e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.12544463852839108;  // std dev = 7,74e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462839;  // std dev = 3,49e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return 0.5553664367462836;  // std dev = 3,94e-08, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12827208136022125;  // std dev = 0,135, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360636;  // std dev = 2,95e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360625;  // std dev = 7,57e-09, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else return -0.1123163781936063;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.10087276983353542;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.10159632948783648;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3207118471601498;  // std dev = 1,12e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926094;  // std dev = 1,86e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09260347659590161;  // std dev = 0,002, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.10379384736123361;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694897;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.08518972762336714;  // std dev = 1,75e-05, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.14473287069104018;  // std dev = 0,272, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 1,32e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 3,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07388670090877775;  // std dev = 0,000889, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.07865522592138796;  // std dev = 0,004, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(A) )
%   | | | then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return 0.20975771563253598;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( female(A) )
%   | then return -0.07877675473109173;  // std dev = 2,08e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109172;  // std dev = 2,11e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.07325768212272424;  // std dev = 1,78e-05, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.06905541983482281;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07487632818649222;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06843762115729078;  // std dev = 1,69e-05, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.06444562306319178;  // std dev = 0,000345, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.1527438580936706;  // std dev = 5,27e-09, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( genre(B, D) )
%   | then return -0.0684269778442027;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420265;  // std dev = 2,58e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.06842697784420265;  // std dev = 4,34e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06833112797363869;  // std dev = 9,98e-05, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06284444651303796;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12071424407352012;  // std dev = 0,322, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return -0.06419184008202616;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419362458882809;  // std dev = 5,77e-05, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | | | else return 0.10923217124675651;  // std dev = 0,185, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087826
   Precision = 0.784141 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.879012


Total learning time: 4.07 seconds
Total inference time: 1.722 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063735
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.299 seconds
Refined model CLL: -0.063735


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087826
   Precision = 0.784141 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.879012


Total learning time: 9.923 seconds
Total inference time: 1.722 seconds
AUC ROC: 1.0
Total revision time: 9.923
Best scored revision CLL: -0.063735


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 10:42:16
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.784141, 0.5], 'Inference time': 1.722, 'parameter_0.6': {'AUC PR': 0.83578, 'AUC ROC': 0.976419, 'Precision': [1.0, 0.5], 'Inference time': 1.432, 'CLL': -0.196026, 'Recall': 0.724719, 'F1': 0.840391, 'Learning time': 1.681}, 'CLL': -0.087826, 'Recall': 1.0, 'F1': 0.879012, 'Learning time': 9.923}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048846;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283918;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360675;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,69e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583093;  // std dev = 3,53e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783655;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2,19e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09472140763510012;  // std dev = 0,464, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08502667984771507;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325354;  // std dev = 1,93e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0786409552351788;  // std dev = 1,14e-05, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452781;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0751385235268208;  // std dev = 0,504, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936714;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07033095294334821;  // std dev = 0,490, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06386029414893316;  // std dev = 1,21e-07, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080111;  // std dev = 5,16e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087784
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 2.525 seconds
Total inference time: 1.326 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 10:42:20
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.626761, 0.5], 'Inference time': 1.326, 'CLL': -0.087784, 'Recall': 1.0, 'Learning time': 2.525, 'F1': 0.770563}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1418510649004884;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.018 seconds
Total inference time: 0.919 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 10:42:23
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.919, 'CLL': -0.188432, 'Recall': 0.0, 'Learning time': 1.018, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.49486768509950874;  // std dev = 7,695, 256,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.14185106490048846;  // std dev = 0,000, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.213302523930313;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.4602511950779544;  // std dev = 7,295, 242,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1254446385283917;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34407843570602364;  // std dev = 7,586, 254,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11231637819360676;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2733978878565154;  // std dev = 7,512, 252,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10159632948783656;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.20465936080259056;  // std dev = 0,476, 252,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926086;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.09269127618926051;  // std dev = 6,83e-08, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.15830923370653516;  // std dev = 0,473, 251,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08552595706116349;  // std dev = 0,007, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.08518475138839678;  // std dev = 5,51e-09, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.36865530169164146;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.36865530169164146;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.12876248394630924;  // std dev = 0,473, 246,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.0788347235733626;  // std dev = 0,010, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06147195106033342;  // std dev = 7,752, 263,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07321913392722353;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07324229086516744;  // std dev = 7,74e-08, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04730462753296538;  // std dev = 7,724, 264,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=163 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842353354553209;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.06842279308154754;  // std dev = 3,80e-06, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.31048162112264566;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07455150672435946;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06416974353820423;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4077914743197298;  // std dev = 3,04e-07, 155,000 (wgt'ed) examples reached here.  /* #pos=155 */
%   | | | else return -0.06418880116590267;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5079979993644808;  // std dev = 2,707, 95,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=8 */
%   | | | else return -0.06418884564455136;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.186057
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.840391


Total learning time: 2.026 seconds
Total inference time: 1.999 seconds
AUC ROC: 0.976419


Results scoring model
   AUC ROC   = 0.993625
   AUC PR    = 0.961148
   CLL	      = -0.217313
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95092
   F1        = 0.974843


Total scoring time: 2.39 seconds
Parameter learned model CLL: -0.217313


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 13, 0], 'false,true,false': [0.0, 214, 0], 'true': [7.695, 93, 163]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 6, 0], 'true,true,false': [7.295, 79, 163], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 6, 0], 'false,true,false': [0.0, 210, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 13, 0], 'false,true,false': [0.0, 231, 0], 'true': [7.586, 91, 163]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 13, 0], 'false,true,false': [0.0, 222, 0], 'true': [7.512, 89, 163]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.476, 89, 163], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 13, 0], 'false,true,false': [6.83e-08, 213, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.473, 88, 163], 'false,true,true': [0.007, 22, 0], 'false,true,false': [5.51e-09, 220, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,false': [0.473, 83, 163], 'true,true,true,false': [0.0, 8, 0], 'false,true': [0.01, 234, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 9, 0], 'false,true,false': [7.74e-08, 215, 0], 'true': [7.752, 100, 163]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 12, 0], 'false,true,false': [3.8e-06, 219, 0], 'true': [7.724, 101, 163]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [3.04e-07, 0, 155], 'true,false,false,false': [0.0, 194, 0], 'false': [0.0, 0, 0], 'true,true,true': [1.05e-08, 5, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [2.63e-09, 12, 0], 'true,true,false,false': [0.0, 13, 0], 'true,false,false,true': [2.707, 87, 8]}]]
[{'': [0.23130798339844266, -2.2302277499078035e-16], 'false,true': [-1.2810265668751807e-17, -2.3657088749022025e-16], 'false': [-2.2302277499078035e-16, nan]}, {'': [0.22526990114463927, -6.139482163825751e-17], 'false': [-6.139482163825751e-17, nan], 'true': [0.22526990114463927, nan], 'true,true': [0.0, 0.2198791066183985], 'false,true,true': [0.0, -2.3129646346357427e-18], 'false,true': [-1.982541115402065e-18, -5.709718412357947e-17]}, {'': [0.22658571621187115, -8.736181177378281e-17], 'false,true': [8.540177112501205e-18, -7.689856447620132e-17], 'false': [-8.736181177378281e-17, nan]}, {'': [0.22390438433861873, -7.74793940589471e-17], 'false,true': [-2.135044278125301e-18, -8.201647569302958e-17], 'false': [-7.74793940589471e-17, nan]}, {'': [0.22704367813524415, 2.456245629701674e-17], 'false,true': [-5.337610695313253e-18, 2.189172161232703e-17], 'false': [2.456245629701674e-17, nan], 'false,true,true': [nan, -5.337610695313253e-18], 'true': [0.22704367813524415, nan]}, {'': [0.22400618325977997, 2.3188046269332692e-07], 'false,true': [2.444847533683822e-06, 3.027880976250427e-17], 'false': [2.3188046269332692e-07, nan], 'true': [0.22400618325977997, nan]}, {'': [0.2240947505515486, 4.1166679038669435e-07], 'true,true': [0.0, 0.22356071121686857], 'false': [4.1166679038669435e-07, nan], 'true,true,true': [0.0, 0.0], 'true': [0.2240947505515486, nan]}, {'': [0.22848502420200453, 2.0679868531888903e-11], 'false,true': [-1.5419764230904951e-18, 2.7884671316166725e-17], 'false': [2.0679868531888903e-11, nan]}, {'': [0.2259642264035739, 1.373682312680902e-11], 'false,true': [-2.3129646346357427e-18, 1.4461050317641846e-11], 'false': [1.373682312680902e-11, nan], 'false,true,true': [nan, -2.3129646346357427e-18]}, {'': [0.12422412583153386, nan], 'true,false': [0.014856882915570798, 0.06881381993434839], 'true,false,true': [5.959390687020196e-16, 5.782411586589357e-19], 'true': [0.011698715831122653, 0.1282017381956146], 'true,true,false': [0.0, -3.736327486719277e-18], 'true,true': [2.2204460492503132e-17, 7.14874025047845e-06], 'true,false,false': [0.07711911357340635, -3.4909074485636365e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.14185106490048763;  // std dev = 8,30e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.1418510649004885;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.12544463852839183;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 3,49e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.5553664367462835;  // std dev = 4,01e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11470333461811273;  // std dev = 0,005, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.11231637819360678;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.10159632948783626;  // std dev = 2,36e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.4175135841583098;  // std dev = 2,41e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( genre(A, D) )
%   | then return -0.10153414057422212;  // std dev = 9,83e-05, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.3207118471601493;  // std dev = 2,44e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.0926912761892608;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.0963201157915672;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0926912761892609;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.0926912761892607;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else return -0.09255462895299525;  // std dev = 9,09e-05, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 2,17e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.08518475138839679;  // std dev = 1,97e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.2551722425694898;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( genre(A, D) )
%   | then return -0.08636656685432943;  // std dev = 0,003, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 2,36e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return -0.08518475138839678;  // std dev = 5,37e-08, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else return -0.08493376118046335;  // std dev = 8,87e-05, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.6180945577434146;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253595;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | | else return -0.07877675473109168;  // std dev = 4,27e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07877675473109144;  // std dev = 4,75e-09, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | | else if ( female(B) )
%   | | | then return -0.07870544849147754;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07853254208960336;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07855220032952727;  // std dev = 7,01e-05, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527791;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return -0.15177627978519326;  // std dev = 0,351, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07318436435823299;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07390196837515743;  // std dev = 0,003, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.07324646742159946;  // std dev = 2,57e-05, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(A) )
%   | | | then return -0.07327851286152502;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07306322019195913;  // std dev = 0,000230, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.06358760129480225;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.15274385809367122;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( genre(B, D) )
%   | then return -0.06825763996178724;  // std dev = 6,25e-05, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842696757457713;  // std dev = 5,87e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.06842720587958584;  // std dev = 2,82e-05, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else return -0.0682353939540819;  // std dev = 9,13e-05, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return -0.10504171325348961;  // std dev = 0,128, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.0640314604788222;  // std dev = 8,15e-05, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.13400703000801079;  // std dev = 9,19e-08, 155,000 (wgt'ed) examples reached here.  /* #pos=155 */
%   | | | else return -0.06406220003770235;  // std dev = 0,000320, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419205136181078;  // std dev = 4,85e-05, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
%   | | | else return 0.09436063838472515;  // std dev = 0,251, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096973
   Precision = 0.784141 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.879012


Total learning time: 4.068 seconds
Total inference time: 1.505 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063944
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.426 seconds
Refined model CLL: -0.063944


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096973
   Precision = 0.784141 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.879012


Total learning time: 10.91 seconds
Total inference time: 1.505 seconds
AUC ROC: 1.0
Total revision time: 10.91
Best scored revision CLL: -0.063944


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 10:42:38
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.784141, 0.5], 'Inference time': 1.505, 'parameter_0.8': {'AUC PR': 0.83578, 'AUC ROC': 0.976419, 'Precision': [1.0, 0.5], 'Inference time': 1.999, 'CLL': -0.186057, 'Recall': 0.724719, 'F1': 0.840391, 'Learning time': 2.026}, 'CLL': -0.096973, 'Recall': 1.0, 'F1': 0.879012, 'Learning time': 10.91}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.1418510649004881;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.125444638528392;  // std dev = 0,000, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.1123163781936069;  // std dev = 0,000, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.10159632948783659;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.09269127618926047;  // std dev = 1,37e-07, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 317,000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07877675473109141;  // std dev = 2,98e-08, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.073246225763337;  // std dev = 9,42e-08, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420297;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202596;  // std dev = 1,13e-07, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06581
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.684 seconds
Total inference time: 1.534 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 10:42:42
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.534, 'CLL': -0.06581, 'Recall': 1.0, 'Learning time': 2.684, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048766;  // std dev = 1,84e-07, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.165 seconds
Total inference time: 0.897 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 10:42:45
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.897, 'CLL': -0.188432, 'Recall': 0.0, 'Learning time': 1.165, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.49168930777031583;  // std dev = 8,646, 322,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.14185106490048807;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21276966373817036;  // std dev = 1,29e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.4369118649242556;  // std dev = 8,454, 314,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.12544463852839197;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3714155223882983;  // std dev = 8,230, 307,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11231637819360683;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.227862335689725;  // std dev = 8,940, 339,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.1015963294878366;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2538421732740082;  // std dev = 0,460, 299,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926086;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.09269127618926043;  // std dev = 1,40e-07, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1651579059471888;  // std dev = 0,471, 310,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839689;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518475138839678;  // std dev = 5,82e-09, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.37688231637365005;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.13661342155562525;  // std dev = 0,469, 303,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109143;  // std dev = 5,37e-08, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07955279392988886;  // std dev = 8,420, 316,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 9,86e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.07324622576333677;  // std dev = 1,19e-07, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06233256873934209;  // std dev = 8,377, 316,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=204 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420267;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.06842697784420299;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3234855477468575;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.39523058616116175;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5221247857396649;  // std dev = 3,029, 121,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=10 */
%   | | | else return -0.06419184008202611;  // std dev = 8,02e-08, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.1905
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.840391


Total learning time: 1.968 seconds
Total inference time: 1.697 seconds
AUC ROC: 0.976419


Results scoring model
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.220344
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.974874


Total scoring time: 2.829 seconds
Parameter learned model CLL: -0.220344


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 21, 0], 'false,true,false': [0.0, 270, 0], 'true': [8.646, 118, 204]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.29e-08, 10, 0], 'true,true,false': [8.454, 110, 204], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [7.45e-09, 14, 0], 'false,true,false': [0.0, 287, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 24, 0], 'false,true,false': [0.0, 245, 0], 'true': [8.23, 103, 204]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 20, 0], 'false,true,false': [0.0, 280, 0], 'true': [8.94, 135, 204]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.46, 95, 204], 'false,true,true,true': [2.63e-09, 3, 0], 'false,true,true,false': [0.0, 22, 0], 'false,true,false': [1.4e-07, 280, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.471, 106, 204], 'false,true,true': [3.73e-09, 11, 0], 'false,true,false': [5.82e-09, 252, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,false': [0.469, 99, 204], 'true,true,true,false': [0.0, 9, 0], 'false,true': [5.37e-08, 316, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [9.86e-09, 23, 0], 'false,true,false': [1.19e-07, 246, 0], 'true': [8.42, 112, 204]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 18, 0], 'false,true,false': [0.0, 298, 0], 'true': [8.377, 112, 204]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 194], 'true,false,false,false': [8.02e-08, 272, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 8, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 13, 0], 'true,true,false,false': [7.45e-09, 16, 0], 'true,false,false,true': [3.029, 111, 10]}]]
[{'': [0.23216696886694635, 9.156478553609538e-18], 'false,true': [5.28677630773884e-18, -5.592234494408195e-17], 'false': [9.156478553609538e-18, nan]}, {'': [0.23319615912208294, -8.528865619636965e-17], 'false': [-8.528865619636965e-17, nan], 'true': [0.23319615912208294, nan], 'true,true': [1.6653345369377347e-17, 0.2275954399772788], 'false,true,true': [0.0, 3.96508223080413e-18], 'false,true': [3.7007434154171884e-18, -8.046215648851309e-17]}, {'': [0.22065222781355553, -1.0730780163663223e-16], 'false,true': [2.3129646346357427e-18, -8.881784197001253e-17], 'false': [-1.0730780163663223e-16, nan]}, {'': [0.23575061361077512, -5.477100254817439e-17], 'false,true': [-1.3877787807814458e-18, -6.026924990822278e-17], 'false': [-5.477100254817439e-17, nan]}, {'': [0.21194893390649144, 8.881784197001253e-17], 'false,true': [-2.220446049250313e-18, 6.97854472621527e-17], 'false': [8.881784197001253e-17, nan], 'false,true,true': [2.3129646346357427e-18, -5.046468293750712e-18], 'true': [0.21194893390649144, nan]}, {'': [0.22208248763453042, 3.377104257414925e-17], 'false,true': [1.261617073437678e-18, 3.348291661567932e-17], 'false': [3.377104257414925e-17, nan], 'true': [0.22208248763453042, nan]}, {'': [0.22101958772435454, 9.134746405143692e-18], 'true,true': [-4.9343245538895844e-17, 0.2199784334869141], 'false': [9.134746405143692e-18, nan], 'true,true,true': [nan, -4.9343245538895844e-17], 'true': [0.22101958772435454, nan]}, {'': [0.224343515470193, 3.9621342142756514e-17], 'false,true': [4.2236745502044e-18, 5.77677020943171e-17], 'false': [3.9621342142756514e-17, nan]}, {'': [0.2220467479359626, -6.95646072391712e-17], 'false,true': [-2.3129646346357427e-18, -5.513859316930308e-17], 'false': [-6.95646072391712e-17, nan], 'false,true,true': [nan, -2.3129646346357427e-18]}, {'': [0.11908982187856118, nan], 'true,false': [0.012423065452731814, 0.06802852730679738], 'true,false,true': [-5.493887132165723e-16, -2.135044278125301e-18], 'true': [0.014602526415586778, 0.12266683191797029], 'true,true,false': [0.0, 3.469446951953614e-18], 'true,true': [0.0, 9.93018234722342e-07], 'true,false,false': [0.07581449354552423, 2.3673873319212896e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048788;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.14185106490048785;  // std dev = 9,88e-08, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839124;  // std dev = 4,34e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.12544463852839116;  // std dev = 6,50e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.12544463852839197;  // std dev = 0,000, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462836;  // std dev = 3,80e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.5553664367462834;  // std dev = 4,15e-08, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360636;  // std dev = 2,95e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.11231637819360689;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583104;  // std dev = 7,45e-09, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.4175135841583093;  // std dev = 3,25e-08, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return -0.1015963294878364;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.1015963294878366;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.3207118471601499;  // std dev = 2,01e-08, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926085;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.0926912761892608;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( female(B) )
%   | | | then return -0.0926912761892609;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return -0.09269127618926076;  // std dev = 3,16e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.2551722425694898;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(B) )
%   | | then return -0.0851847513883968;  // std dev = 2,63e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.08518475138839679;  // std dev = 2,08e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 2,63e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.08518475138839678;  // std dev = 4,94e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0.2097577156325354;  // std dev = 1,98e-07, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.08016142479348712;  // std dev = 0,087, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109154;  // std dev = 5,58e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return -0.07877675473109147;  // std dev = 8,56e-08, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | | else return -0.07877675473109177;  // std dev = 9,31e-10, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.07877675473109166;  // std dev = 1,86e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(A) )
%   | | | then return -0.07315228819945395;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.1770964977452776;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A) )
%   | | | then return -0.06834474627216851;  // std dev = 2,36e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.15274385809367136;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420264;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420264;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06842697784420292;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202618;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.06612743363437754;  // std dev = 0,008, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F) )
%   | then if ( movie(D, B) )
%   | | then return 0.11978223071925236;  // std dev = 0,051, 209,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=194 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06418095639172931;  // std dev = 0,000492, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
%   | | | else return 0.1159889509089168;  // std dev = 0,189, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070728
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.136 seconds
Total inference time: 1.962 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064157
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.279 seconds
Refined model CLL: -0.064157


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070728
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.212 seconds
Total inference time: 1.962 seconds
AUC ROC: 1.0
Total revision time: 12.212
Best scored revision CLL: -0.064157


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 10:43:01
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.83578, 'AUC ROC': 0.976419, 'Precision': [1.0, 0.5], 'Inference time': 1.697, 'CLL': -0.1905, 'Recall': 0.724719, 'F1': 0.840391, 'Learning time': 1.968}, 'Inference time': 1.962, 'CLL': -0.070728, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.212}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048746;  // std dev = 2,63e-07, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.12544463852839227;  // std dev = 0,000, 407,000 (wgt'ed) examples reached here.  /* #neg=407 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.11231637819360635;  // std dev = 0,000, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.10159632948783624;  // std dev = 1,26e-07, 385,000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926068;  // std dev = 1,76e-07, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4,00e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4,46e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08528202509479735;  // std dev = 0,038, 393,000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07876969577235825;  // std dev = 0,000, 395,000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07332511112607434;  // std dev = 0,033, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06857149703628544;  // std dev = 0,044, 406,000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 1,38e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.0641918400820262;  // std dev = 6,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06417300315395295;  // std dev = 0,000, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066289
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.265 seconds
Total inference time: 1.599 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 10:43:06
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.599, 'CLL': -0.066289, 'Recall': 1.0, 'Learning time': 3.265, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048763;  // std dev = 2,02e-07, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.173 seconds
Total inference time: 1.037 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 10:43:09
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 1.037, 'CLL': -0.188432, 'Recall': 0.0, 'Learning time': 1.173, 'F1': nan}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5215152717331766;  // std dev = 4,749, 101,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.14185106490048763;  // std dev = 8,43e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21780826673948633;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.4390544783585516;  // std dev = 4,795, 102,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34942265256102184;  // std dev = 4,796, 104,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11981824124205497;  // std dev = 0,017, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1123163781936062;  // std dev = 8,01e-09, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3465095376068046;  // std dev = 4,243, 93,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10459515756701572;  // std dev = 0,020, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10159632948783627;  // std dev = 4,21e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.24594693138237084;  // std dev = 0,449, 95,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926101;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09264889860157052;  // std dev = 0,002, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.19059630655502582;  // std dev = 0,448, 94,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.086050356951846;  // std dev = 0,018, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518774744530905;  // std dev = 9,58e-07, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.4100357557872401;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.4100357557872401;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1325216789084953;  // std dev = 0,456, 95,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07889840820448188;  // std dev = 0,016, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18342071462711756;  // std dev = 3,767, 85,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07247307124518972;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07324034368249273;  // std dev = 8,17e-06, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.040822472741488085;  // std dev = 4,517, 99,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=67 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.08289202925966414;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06841940743365843;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06839047017326448;  // std dev = 0,000142, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3659548653040899;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07680446169923476;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06355588147503848;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3430323446467511;  // std dev = 8,94e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.06418516066084817;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.39030098868658225;  // std dev = 2,966, 45,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return -0.0641894443507006;  // std dev = 1,97e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.274589
   Precision = 0.082267 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.152027


Total learning time: 1.444 seconds
Total inference time: 1.513 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.97831
   AUC PR    = 0.864923
   CLL	      = -0.258645
   Precision = 0.100752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.18306


Total scoring time: 1.292 seconds
Parameter learned model CLL: -0.258645


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 10, 0], 'false,true,false': [8.43e-08, 92, 0], 'true': [4.749, 34, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [7.45e-09, 5, 0], 'true,true,false': [4.795, 35, 67], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [7.45e-09, 13, 0], 'false,true,false': [0.0, 102, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.017, 7, 0], 'false,true,false': [8.01e-09, 98, 0], 'true': [4.796, 37, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.02, 13, 0], 'false,true,false': [4.21e-08, 98, 0], 'true': [4.243, 26, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.449, 28, 67], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [5.27e-09, 9, 0], 'false,true,false': [0.002, 83, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.448, 27, 67], 'false,true,true': [0.018, 11, 0], 'false,true,false': [9.58e-07, 97, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.456, 28, 67], 'true,true,true,false': [0.0, 1, 0], 'false,true': [0.016, 103, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 9, 0], 'false,true,false': [8.17e-06, 87, 0], 'true': [3.767, 18, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 7, 0], 'false,true,false': [0.000142, 85, 0], 'true': [4.517, 32, 67]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [8.94e-08, 0, 55], 'true,false,false,false': [1.97e-08, 74, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 8, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false,false,true': [2.966, 33, 12]}]]
[{'': [0.2233114400548958, 7.401486830834377e-17], 'false,true': [-1.1102230246251566e-17, 7.723290606088045e-17], 'false': [7.401486830834377e-17, nan]}, {'': [0.23408157917722233, -1.9308226515220114e-18], 'false': [-1.9308226515220114e-18, nan], 'true': [0.23408157917722233, nan], 'true,true': [1.1102230246251566e-17, 0.22539407920030916], 'false,true,true': [nan, 4.270088556250602e-18], 'false,true': [4.270088556250602e-18, -1.0884539457109378e-17]}, {'': [0.221141462824043, 6.315636521134865e-06], 'false,true': [4.220846189825568e-05, 6.344131569286608e-17], 'false': [6.315636521134865e-06, nan]}, {'': [0.19360022263628002, 4.501420550184865e-06], 'false,true': [3.0495467090637576e-05, 1.8126090197961738e-17], 'false': [4.501420550184865e-06, nan]}, {'': [0.20172432196353463, 3.21570109453594e-08], 'false,true': [3.0839528461809902e-18, 3.546823378638551e-08], 'false': [3.21570109453594e-08, nan], 'false,true,true': [nan, 3.0839528461809902e-18], 'true': [0.20172432196353463, nan]}, {'': [0.20039315282263118, 2.932739649107123e-06], 'false,true': [2.81258553142349e-05, 9.180262506652539e-13], 'false': [2.932739649107123e-06, nan], 'true': [0.20039315282263118, nan]}, {'': [0.21023918655738133, 2.6204222200481323e-06], 'true,true': [-3.700743415417188e-17, 0.20786703601108045], 'false': [2.6204222200481323e-06, nan], 'true,true,true': [0.0, 0.0], 'true': [0.21023918655738133, nan]}, {'': [0.1669204152249134, 5.001779343483115e-08], 'false,true': [-7.709882115452476e-19, 7.673293673512578e-13], 'false': [5.001779343483115e-08, nan]}, {'': [0.20611651264903533, 2.254829845087132e-06], 'false,true': [2.2909335587969516e-05, 2.0269989345181807e-08], 'false': [2.254829845087132e-06, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.1184619493907813, nan], 'true,false': [0.018383341526010656, 0.09895779267231222], 'true,false,true': [1.453382868600205e-16, 0.0], 'true': [0.01525080490532506, 0.12295971951641593], 'true,true,false': [0.0, 0.0], 'true,true': [0.0, 4.298568439762225e-05], 'true,false,false': [0.19555555555555573, 5.251054846200065e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14185106490048763;  // std dev = 8,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109546;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return 0.7194734122109547;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.12544463852839133;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 1,86e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948934;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0851847513883968;  // std dev = 2,04e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1645529935594283;  // std dev = 0,101, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( actor(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,83e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10668587082490427;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( director(B) )
%   | | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527703;  // std dev = 5,27e-09, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return 0.177096497745277;  // std dev = 6,45e-09, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1339414858199899;  // std dev = 0,149, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.07297085584872286;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.0641237359576792;  // std dev = 0,000236, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06648910425530734;  // std dev = 0,006, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06418936356841363;  // std dev = 0,000271, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | | else return 0.050849551330569565;  // std dev = 0,530, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063802
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.005 seconds
Total inference time: 1.709 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064835
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.359 seconds
Refined model CLL: -0.064835


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063802
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.1 seconds
Total inference time: 1.709 seconds
AUC ROC: 1.0
Total revision time: 7.1
Best scored revision CLL: -0.064835


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 10:43:20
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.709, 'CLL': -0.063802, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.1, 'parameter_0.2': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.082267, 0.5], 'Inference time': 1.513, 'CLL': -0.274589, 'Recall': 1.0, 'F1': 0.152027, 'Learning time': 1.444}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.1418510649004879;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839116;  // std dev = 7,30e-08, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.1123163781936062;  // std dev = 9,66e-08, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1015963294878364;  // std dev = 0,000, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0926912761892609;  // std dev = 6,50e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839683;  // std dev = 5,37e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109161;  // std dev = 6,66e-08, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333728;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420267;  // std dev = 4,59e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06419184008202626;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.416 seconds
Total inference time: 1.05 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 10:43:23
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.05, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 2.416, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.814 seconds
Total inference time: 0.755 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 10:43:25
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.755, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 0.814, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5383519807847884;  // std dev = 6,546, 197,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.14185106490048818;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.22069032534949545;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.45267650882135985;  // std dev = 6,616, 199,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3515505506431605;  // std dev = 6,704, 205,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11386087940946342;  // std dev = 0,017, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.1123163781936066;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23653038434772913;  // std dev = 7,048, 217,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10145544260857231;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.10159632948783652;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.20907126813391183;  // std dev = 0,470, 207,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.10366335478575167;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926087;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09267915974111668;  // std dev = 0,000487, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.14263082313109302;  // std dev = 0,476, 211,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.085743729464286;  // std dev = 0,013, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.08518559915497867;  // std dev = 2,86e-07, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3675933505731274;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.3675933505731274;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.21178811917836263;  // std dev = 0,436, 180,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07890143979123324;  // std dev = 0,015, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.056871429213153045;  // std dev = 6,862, 213,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07355798934696811;  // std dev = 0,008, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.0732384602511448;  // std dev = 3,05e-06, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.03276729708319879;  // std dev = 6,958, 217,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=134 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.07592593495850816;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.068419471180478;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06841192111613224;  // std dev = 3,38e-05, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3056554239579708;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07076745302029161;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0640495062132893;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3935919584100536;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | | else return -0.06418521690542142;  // std dev = 5,27e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3756388108207162;  // std dev = 4,019, 91,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=21 */
%   | | | else return -0.06418639819395723;  // std dev = 3,80e-08, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.245903
   Precision = 0.082267 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.152027


Total learning time: 1.682 seconds
Total inference time: 1.325 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.981148
   AUC PR    = 0.881708
   CLL	      = -0.231858
   Precision = 0.101362 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184066


Total scoring time: 1.73 seconds
Parameter learned model CLL: -0.231858


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 14, 0], 'false,true,false': [0.0, 165, 0], 'true': [6.546, 63, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [7.45e-09, 9, 0], 'true,true,false': [6.616, 65, 134], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 19, 0], 'false,true,false': [0.0, 171, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.017, 17, 0], 'false,true,false': [0.0, 194, 0], 'true': [6.704, 71, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 16, 0], 'false,true,false': [0.0, 183, 0], 'true': [7.048, 83, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.47, 73, 134], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.73e-09, 10, 0], 'false,true,false': [0.000487, 185, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.476, 77, 134], 'false,true,true': [0.013, 28, 0], 'false,true,false': [2.86e-07, 186, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 5, 0], 'true,true,false': [0.436, 46, 134], 'true,true,true,false': [0.0, 4, 0], 'false,true': [0.015, 190, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.008, 18, 0], 'false,true,false': [3.05e-06, 184, 0], 'true': [6.862, 79, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [6.45e-09, 13, 0], 'false,true,false': [3.38e-05, 192, 0], 'true': [6.958, 83, 134]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 113], 'true,false,false,false': [3.8e-08, 170, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 13, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [5.27e-09, 19, 0], 'true,true,false,false': [0.0, 15, 0], 'true,false,false,true': [4.019, 70, 21]}]]
[{'': [0.2175268623257537, -1.9847562451399445e-16], 'false,true': [-1.1895246692412391e-17, -1.6417843515668981e-16], 'false': [-1.9847562451399445e-16, nan]}, {'': [0.2291974852071015, -2.5710427938687835e-17], 'false': [-2.5710427938687835e-17, nan], 'true': [0.2291974852071015, nan], 'true,true': [6.1679056923619804e-18, 0.21994394080957624], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -7.791038769299344e-18]}, {'': [0.2192453078488187, 1.6181759105751717e-06], 'false,true': [1.789113004339136e-05, -2.0602076745621462e-17], 'false': [1.6181759105751717e-06, nan]}, {'': [0.22892554031015774, 1.4675942248177032e-09], 'false,true': [1.734723475976807e-18, -8.614845327692471e-17], 'false': [1.4675942248177032e-09, nan]}, {'': [0.22057417039565555, 6.135819786837137e-07], 'false,true': [9.949298241950334e-06, 1.2826410936364832e-09], 'false': [6.135819786837137e-07, nan], 'false,true,true': [0.0, 1.3877787807814458e-18], 'true': [0.22057417039565555, nan]}, {'': [0.2266313917752112, 7.92952780128137e-07], 'false,true': [5.789673079392908e-06, 8.171957734160266e-14], 'false': [7.92952780128137e-07, nan], 'true': [0.2266313917752112, nan]}, {'': [0.19641125046152336, 1.1434397665365773e-06], 'true,true': [4.9343245538895844e-17, 0.19024691358024726], 'false': [1.1434397665365773e-06, nan], 'true,true,true': [0.0, 0.0], 'true': [0.19641125046152336, nan]}, {'': [0.2210862618957213, 3.184671601776802e-07], 'false,true': [3.480907797766892e-06, 5.065995931930877e-14], 'false': [3.184671601776802e-07, nan]}, {'': [0.22307898828050135, 5.412321008931591e-07], 'false,true': [6.51120870987972e-06, 1.1396665110472808e-09], 'false': [5.412321008931591e-07, nan], 'false,true,true': [0.0, 3.2025664171879517e-18]}, {'': [0.11454238334581149, nan], 'true,false': [0.025822153121492178, 0.08392102509688447], 'true,false,true': [-3.4583938466199566e-16, 1.460819769243627e-18], 'true': [0.014242946728727227, 0.12027930557744436], 'true,true,false': [0.0, -3.23815048849004e-18], 'true,true': [0.0, 4.684859097061361e-06], 'true,false,false': [0.17751479289940805, 8.489940776545315e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048768;  // std dev = 6,14e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.14185106490048827;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( genre(A, E) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839116;  // std dev = 6,41e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.12544463852839113;  // std dev = 6,83e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462838;  // std dev = 3,16e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0.5553664367462836;  // std dev = 3,73e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.1123163781936065;  // std dev = 1,32e-09, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.10159632948783652;  // std dev = 0,000, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0.32071184716015005;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(A) )
%   | | | then return -0.0926912761892609;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926089;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 1,32e-09, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839679;  // std dev = 9,31e-10, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,67e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253592;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0.20975771563253598;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | | else return -0.07877675473109169;  // std dev = 3,48e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109161;  // std dev = 4,47e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.0787767547310917;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527755;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367072;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420268;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420264;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842697784420265;  // std dev = 1,83e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420261;  // std dev = 1,05e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.06842697784420268;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801087;  // std dev = 7,30e-08, 113,000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | | else return -0.06419184008202612;  // std dev = 3,73e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.08445731248550181;  // std dev = 0,454, 28,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 208,000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.148 seconds
Total inference time: 1.372 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.553 seconds
Refined model CLL: -0.064273


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.113 seconds
Total inference time: 1.372 seconds
AUC ROC: 1.0
Total revision time: 10.113
Best scored revision CLL: -0.064273


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 10:43:39
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.082267, 0.5], 'Inference time': 1.325, 'CLL': -0.245903, 'Recall': 1.0, 'F1': 0.152027, 'Learning time': 1.682}, 'Inference time': 1.372, 'CLL': -0.063847, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.113}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.1418510649004883;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.12544463852839188;  // std dev = 0,000, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.11231637819360667;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.1015963294878365;  // std dev = 0,000, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.09269127618926051;  // std dev = 8,16e-08, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0851847513883968;  // std dev = 2,04e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.08518475138839678;  // std dev = 8,30e-08, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07877675473109144;  // std dev = 6,14e-08, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07324622576333667;  // std dev = 1,25e-07, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06842697784420271;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06419184008202627;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.679 seconds
Total inference time: 1.139 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 10:43:43
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.139, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 2.679, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.14185106490048838;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.062 seconds
Total inference time: 0.857 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 10:43:45
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.857, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 1.062, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5161293911255671;  // std dev = 8,312, 307,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.14185106490048793;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.2168920806520292;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.46324259948264973;  // std dev = 8,038, 297,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.12544463852839186;  // std dev = 0,000, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.37263570887149744;  // std dev = 8,011, 300,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.11231637819360697;  // std dev = 0,000, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.28354342350032746;  // std dev = 8,056, 303,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.1015963294878366;  // std dev = 0,000, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2252510877380791;  // std dev = 0,459, 298,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.09269127618926086;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.09269127618926044;  // std dev = 1,40e-07, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1652342413098929;  // std dev = 0,458, 301,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839691;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.08518475138839678;  // std dev = 5,96e-09, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.38838681857377516;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.38838681857377516;  // std dev = 1,49e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.16259147321523695;  // std dev = 0,450, 281,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109144;  // std dev = 6,32e-08, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.059780383398946486;  // std dev = 8,269, 313,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 1,05e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.07324622576333688;  // std dev = 1,10e-07, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04497766635775304;  // std dev = 8,307, 311,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=202 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420265;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.06842697784420264;  // std dev = 3,09e-09, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.32350138678418755;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.37909624349128296;  // std dev = 3,58e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | | | else return -0.06419184008202611;  // std dev = 9,13e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.37474991035487065;  // std dev = 4,912, 130,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=32 */
%   | | | else return -0.06419184008202626;  // std dev = 2,58e-08, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.254358
   Precision = 0.082267 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.152027


Total learning time: 1.822 seconds
Total inference time: 1.43 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.9815
   AUC PR    = 0.881064
   CLL	      = -0.235076
   Precision = 0.104555 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.189316


Total scoring time: 2.069 seconds
Parameter learned model CLL: -0.235076


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [3.65e-08, 36, 0], 'false,true,false': [0.0, 288, 0], 'true': [8.312, 105, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [7.45e-09, 7, 0], 'true,true,false': [8.038, 95, 202], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 20, 0], 'false,true,false': [0.0, 247, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.29e-08, 22, 0], 'false,true,false': [0.0, 277, 0], 'true': [8.011, 98, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 23, 0], 'false,true,false': [0.0, 274, 0], 'true': [8.056, 101, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.459, 96, 202], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 22, 0], 'false,true,false': [1.4e-07, 279, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.458, 99, 202], 'false,true,true': [0.0, 26, 0], 'false,true,false': [5.96e-09, 289, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.45, 79, 202], 'true,true,true,false': [1.49e-08, 10, 0], 'false,true': [6.32e-08, 277, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 26, 0], 'false,true,false': [1.1e-07, 271, 0], 'true': [8.269, 111, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 5, 0], 'false,true,true,false': [0.0, 26, 0], 'false,true,false': [3.09e-09, 238, 0], 'true': [8.307, 109, 202]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [3.58e-07, 0, 170], 'true,false,false,false': [2.58e-08, 250, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 11, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [9.13e-09, 27, 0], 'true,true,false,false': [0.0, 21, 0], 'true,false,false,true': [4.912, 98, 32]}]]
[{'': [0.2250421755138032, 9.046261682130905e-17], 'false,true': [3.700743415417188e-17, 0.0], 'false': [9.046261682130905e-17, nan]}, {'': [0.22294840720221326, -7.263912726172028e-17], 'false': [-7.263912726172028e-17, nan], 'true': [0.22294840720221326, nan], 'true,true': [7.93016446160826e-18, 0.21755149701277365], 'false,true,true': [0.0, 0.0], 'false,true': [-2.523234146875356e-18, -6.112968880527177e-17]}, {'': [0.2138967621649987, -7.574765786740198e-17], 'false,true': [7.569702440626067e-18, -1.0260544920723469e-16], 'false': [-7.574765786740198e-17, nan]}, {'': [0.21419972455595962, -5.3828995133340925e-17], 'false,true': [-2.413528314402514e-18, -6.158901450475321e-17], 'false': [-5.3828995133340925e-17, nan]}, {'': [0.21069040230850225, 8.793845739605201e-17], 'false,true': [1.1564823173178713e-18, 7.003557431327152e-17], 'false': [8.793845739605201e-17, nan], 'false,true,true': [0.0, -5.046468293750712e-18], 'true': [0.21069040230850225, nan]}, {'': [0.20965372962501086, 3.665498240032263e-17], 'false,true': [-4.270088556250602e-18, 3.534273988426104e-17], 'false': [3.665498240032263e-17, nan], 'true': [0.20965372962501086, nan]}, {'': [0.20574662878005556, 1.4428891294767376e-17], 'true,true': [0.0, 0.20209977077291388], 'false': [1.4428891294767376e-17, nan], 'true,true,true': [0.0, 2.2204460492503132e-17], 'true': [0.20574662878005556, nan]}, {'': [0.2184391427814009, 2.616687263426295e-17], 'false,true': [4.270088556250602e-18, 4.4245050427866016e-17], 'false': [2.616687263426295e-17, nan]}, {'': [0.2218766555508773, -2.7239672723145106e-17], 'false,true': [8.953411488912552e-19, 8.396644724055805e-18], 'false': [-2.7239672723145106e-17, nan], 'false,true,true': [6.938893903907229e-19, -5.337610695313253e-19]}, {'': [0.11330116375712147, nan], 'true,false': [0.023240868147205287, 0.08518888136181417], 'true,false,true': [7.523393672754002e-16, 3.0839528461809902e-18], 'true': [0.014942542446862299, 0.11775637681699054], 'true,true,false': [0.0, -2.64338815386942e-18], 'true,true': [-6.055761952500853e-17, -2.523234146875356e-18], 'true,false,false': [0.18556213017751366, 2.6645352591003758e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048768;  // std dev = 7,60e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.1418510649004879;  // std dev = 5,96e-08, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.12544463852839197;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.5553664367462834;  // std dev = 4,21e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.11231637819360678;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583102;  // std dev = 1,67e-08, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.4175135841583094;  // std dev = 3,07e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783626;  // std dev = 4,71e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.1015963294878366;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601503;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.32071184716015005;  // std dev = 1,67e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926086;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926086;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926092;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.09269127618926086;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839679;  // std dev = 2,95e-09, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 2,63e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.08518475138839678;  // std dev = 2,36e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109161;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return 0.20975771563253578;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | | else return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109151;  // std dev = 6,58e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | | else return -0.0787767547310915;  // std dev = 7,30e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else return -0.07877675473109165;  // std dev = 1,86e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367153;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0684269778442027;  // std dev = 1,18e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420262;  // std dev = 3,73e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06842697784420264;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06842697784420286;  // std dev = 0,000, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.06419184008202619;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801079;  // std dev = 9,88e-08, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | | | else return -0.06419184008202614;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.09436725599000347;  // std dev = 0,501, 40,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=32 */
%   | | | else return -0.06425003456919627;  // std dev = 0,020, 338,000 (wgt'ed) examples reached here.  /* #neg=338 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063844
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.599 seconds
Total inference time: 1.286 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064358
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.54 seconds
Refined model CLL: -0.064358


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063844
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.030000000000001 seconds
Total inference time: 1.286 seconds
AUC ROC: 1.0
Total revision time: 11.030000000000001
Best scored revision CLL: -0.064358


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 10:44:00
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.286, 'parameter_0.6': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.082267, 0.5], 'Inference time': 1.43, 'CLL': -0.254358, 'Recall': 1.0, 'F1': 0.152027, 'Learning time': 1.822}, 'CLL': -0.063844, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.030000000000001}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048774;  // std dev = 1,55e-07, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839208;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11231637819360672;  // std dev = 0,000, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.10159632948783652;  // std dev = 0,000, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.09269127618926067;  // std dev = 1,78e-07, 384,000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 1,90e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07877675473109148;  // std dev = 2,98e-08, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07324622576333711;  // std dev = 6,66e-08, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06842697784420328;  // std dev = 0,000, 398,000 (wgt'ed) examples reached here.  /* #neg=398 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06419184008202594;  // std dev = 1,22e-07, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.009 seconds
Total inference time: 1.053 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 10:44:04
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.053, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 3.009, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1418510649004878;  // std dev = 1,23e-07, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.169 seconds
Total inference time: 0.758 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 10:44:06
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.758, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 1.169, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4851885621391351;  // std dev = 10,016, 429,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.14185106490048757;  // std dev = 2,19e-07, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21168283025060294;  // std dev = 1,49e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.48520836145924495;  // std dev = 9,030, 386,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.1254446385283922;  // std dev = 0,000, 343,000 (wgt'ed) examples reached here.  /* #neg=343 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.36738181456143054;  // std dev = 9,344, 404,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.1123163781936066;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2901008251901549;  // std dev = 9,282, 400,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.10159632948783615;  // std dev = 1,59e-07, 369,000 (wgt'ed) examples reached here.  /* #neg=369 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.22793081016842;  // std dev = 0,459, 396,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.09269127618926043;  // std dev = 1,94e-07, 330,000 (wgt'ed) examples reached here.  /* #neg=330 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.12781498671743846;  // std dev = 0,477, 421,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839686;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.08518475138839678;  // std dev = 6,25e-09, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.37442825100043114;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.37442825100043114;  // std dev = 2,98e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.11353594218603619;  // std dev = 0,474, 408,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109141;  // std dev = 9,66e-08, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10382856297487893;  // std dev = 9,241, 402,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 1,39e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.07324622576333707;  // std dev = 8,43e-08, 334,000 (wgt'ed) examples reached here.  /* #neg=334 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07901563673998101;  // std dev = 9,247, 401,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=269 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420265;  // std dev = 1,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.06842697784420325;  // std dev = 0,000, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.33073782487681597;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202622;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.38225082598212734;  // std dev = 5,20e-07, 222,000 (wgt'ed) examples reached here.  /* #pos=222 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.33461664389738993;  // std dev = 5,805, 166,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=47 */
%   | | | else return -0.06419184008202594;  // std dev = 1,19e-07, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.258294
   Precision = 0.082267 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.152027


Total learning time: 2.562 seconds
Total inference time: 1.293 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.979708
   AUC PR    = 0.868572
   CLL	      = -0.237552
   Precision = 0.104955 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.189972


Total scoring time: 2.86 seconds
Parameter learned model CLL: -0.237552


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [3.94e-08, 38, 0], 'false,true,false': [2.19e-07, 346, 0], 'true': [10.016, 160, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.49e-08, 13, 0], 'true,true,false': [9.03, 117, 269], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 40, 0], 'false,true,false': [0.0, 343, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 36, 0], 'false,true,false': [0.0, 333, 0], 'true': [9.344, 135, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 42, 0], 'false,true,false': [1.59e-07, 369, 0], 'true': [9.282, 131, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.459, 127, 269], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 31, 0], 'false,true,false': [1.94e-07, 330, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.477, 152, 269], 'false,true,true': [2.24e-08, 42, 0], 'false,true,false': [6.25e-09, 371, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 7, 0], 'true,true,false': [0.474, 139, 269], 'true,true,true,false': [2.98e-08, 15, 0], 'false,true': [9.66e-08, 351, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.39e-08, 36, 0], 'false,true,false': [8.43e-08, 334, 0], 'true': [9.241, 133, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [1.58e-08, 28, 0], 'false,true,false': [0.0, 362, 0], 'true': [9.247, 132, 269]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [5.2e-07, 0, 222], 'true,false,false,false': [1.19e-07, 304, 0], 'false': [0.0, 0, 0], 'true,true,true': [1.49e-08, 9, 0], 'true,true,false,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 33, 0], 'true,true,false,false': [5.27e-09, 22, 0], 'true,false,false,true': [5.805, 119, 47]}]]
[{'': [0.23386093316163578, 2.0585385248258112e-16], 'false,true': [4.0902953538821554e-17, 1.3861744122487504e-16], 'false': [2.0585385248258112e-16, nan]}, {'': [0.21965942424984555, -1.2590158011213115e-16], 'false': [-1.2590158011213115e-16, nan], 'true': [0.21965942424984555, nan], 'true,true': [1.708035422500241e-17, 0.21123385862707486], 'false,true,true': [0.0, -2.4980018054066023e-17], 'false,true': [-2.960594732333751e-17, -1.1652486555832546e-16]}, {'': [0.2161116762796378, -2.647686345989533e-17], 'false,true': [-1.0793834961633467e-17, -3.734083446186713e-17], 'false': [-2.647686345989533e-17, nan]}, {'': [0.21536614303270876, 1.3614413732629657e-16], 'false,true': [-1.32169407693471e-18, 6.859914623700155e-17], 'false': [1.3614413732629657e-16, nan]}, {'': [0.21098228329641544, 9.664751398940757e-17], 'false,true': [-5.046468293750712e-18, 1.1438661465834946e-16], 'false': [9.664751398940757e-17, nan], 'false,true,true': [0.0, -3.581364595565021e-18], 'true': [0.21098228329641544, nan]}, {'': [0.2275684760810325, 3.8709955338019983e-17], 'false,true': [1.1895246692412391e-17, 4.069820251995183e-17], 'false': [3.8709955338019983e-17, nan], 'true': [0.2275684760810325, nan]}, {'': [0.22468603699159634, 2.6569439905559303e-17], 'true,true': [-2.0185873175002847e-17, 0.2246191368704347], 'false': [2.6569439905559303e-17, nan], 'true,true,true': [0.0, 5.921189464667501e-17], 'true': [0.22468603699159634, nan]}, {'': [0.21242023852054673, 2.400482215405744e-18], 'false,true': [5.396917480816733e-18, 2.1273734603595815e-17], 'false': [2.400482215405744e-18, nan]}, {'': [0.21325060142688942, -1.1186980095459592e-16], 'false,true': [8.953411488912552e-18, -9.384758163958505e-17], 'false': [-1.1186980095459592e-16, nan], 'false,true,true': [-5.782411586589357e-19, 8.921435019309294e-18]}, {'': [0.11471754592269993, nan], 'true,false': [0.022455252321541982, 0.08839299799974634], 'true,false,true': [1.2162443224722436e-15, -1.6821560979169039e-18], 'true': [0.013571381477871429, 0.11865443179694084], 'true,true,false': [0.0, 1.261617073437678e-18], 'true,true': [2.4671622769447922e-17, 0.0], 'true,false,false': [0.20296850050805523, 4.674623261579606e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048796;  // std dev = 0,000, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.14185106490048746;  // std dev = 2,62e-07, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839136;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.12544463852839105;  // std dev = 8,16e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.12544463852839222;  // std dev = 0,000, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,21e-08, 125,000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | | else return 0.5553664367462834;  // std dev = 4,21e-08, 144,000 (wgt'ed) examples reached here.  /* #pos=144 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.11231637819360626;  // std dev = 4,71e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360635;  // std dev = 3,48e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.11231637819360644;  // std dev = 0,000, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783645;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783646;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else return -0.10159632948783658;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return -0.09269127618926078;  // std dev = 6,66e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694879;  // std dev = 2,04e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 1,61e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.08518475138839679;  // std dev = 2,63e-09, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839682;  // std dev = 3,48e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.08518475138839678;  // std dev = 2,79e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 2,98e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | | else return -0.08518475138839678;  // std dev = 5,77e-08, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253537;  // std dev = 2,00e-07, 125,000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | | | else return 0.20975771563253523;  // std dev = 2,37e-07, 144,000 (wgt'ed) examples reached here.  /* #pos=144 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109175;  // std dev = 1,97e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.07877675473109169;  // std dev = 2,98e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109151;  // std dev = 7,52e-08, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | | else return -0.07877675473109148;  // std dev = 7,88e-08, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527814;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | | else return 0.17709649774527816;  // std dev = 0,000, 144,000 (wgt'ed) examples reached here.  /* #pos=144 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333702;  // std dev = 8,94e-08, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333698;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367155;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420267;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06842697784420267;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420325;  // std dev = 0,000, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202616;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.06419184008202616;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801079;  // std dev = 1,13e-07, 222,000 (wgt'ed) examples reached here.  /* #pos=222 */
%   | | | else return -0.06419184008202612;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.09923529841326764;  // std dev = 0,569, 57,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=47 */
%   | | | else return -0.0641918400820255;  // std dev = 2,24e-07, 458,000 (wgt'ed) examples reached here.  /* #neg=458 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.307 seconds
Total inference time: 1.618 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064309
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.461 seconds
Refined model CLL: -0.064309


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.19 seconds
Total inference time: 1.618 seconds
AUC ROC: 1.0
Total revision time: 13.19
Best scored revision CLL: -0.064309


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 10:44:23
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.618, 'parameter_0.8': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.082267, 0.5], 'Inference time': 1.293, 'CLL': -0.258294, 'Recall': 1.0, 'F1': 0.152027, 'Learning time': 2.562}, 'CLL': -0.063847, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.19}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.14185106490048754;  // std dev = 1,58e-07, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.1254446385283923;  // std dev = 0,000, 508,000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.11231637819360589;  // std dev = 0,000, 490,000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.10159632948783595;  // std dev = 2,25e-07, 466,000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.0926912761892614;  // std dev = 0,000, 503,000 (wgt'ed) examples reached here.  /* #neg=503 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.08518475138839678;  // std dev = 1,33e-07, 502,000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07877675473109215;  // std dev = 0,000, 529,000 (wgt'ed) examples reached here.  /* #neg=529 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07324622576333724;  // std dev = 0,000, 500,000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.06842697784420353;  // std dev = 0,000, 529,000 (wgt'ed) examples reached here.  /* #neg=529 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.0641918400820256;  // std dev = 2,13e-07, 509,000 (wgt'ed) examples reached here.  /* #neg=509 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.643 seconds
Total inference time: 1.12 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 10:44:28
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.12, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 3.643, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.14185106490048754;  // std dev = 1,46e-07, 500,000 (wgt'ed) examples reached here.  /* #neg=500 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.671 seconds
Total inference time: 0.783 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 10:44:31
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.783, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 1.671, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4988333457458958;  // std dev = 11,004, 526,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.1418510649004875;  // std dev = 1,74e-07, 479,000 (wgt'ed) examples reached here.  /* #neg=479 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21396873643295497;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.457346004602907;  // std dev = 10,525, 502,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839144;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.1254446385283923;  // std dev = 0,000, 455,000 (wgt'ed) examples reached here.  /* #neg=455 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3652538634514801;  // std dev = 10,541, 510,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.11231637819360604;  // std dev = 0,000, 438,000 (wgt'ed) examples reached here.  /* #neg=438 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25861994708362507;  // std dev = 10,931, 530,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.1015963294878355;  // std dev = 3,24e-07, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.19619477201097146;  // std dev = 0,476, 529,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.09269127618926111;  // std dev = 1,01e-07, 434,000 (wgt'ed) examples reached here.  /* #neg=434 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.17566826425486465;  // std dev = 0,465, 508,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839679;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.08518475138839678;  // std dev = 6,65e-09, 444,000 (wgt'ed) examples reached here.  /* #neg=444 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3729928849941435;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.3729928849941436;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.1915310536950352;  // std dev = 0,444, 462,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109212;  // std dev = 9,66e-08, 510,000 (wgt'ed) examples reached here.  /* #neg=510 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0654970469347003;  // std dev = 10,746, 528,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.07324622576333711;  // std dev = 9,19e-08, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07614198025831886;  // std dev = 10,319, 507,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=337 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.0684269778442027;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.0684269778442035;  // std dev = 0,000, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3206573783704921;  // std dev = 2,11e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3810517962014724;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3339240492091568;  // std dev = 6,495, 207,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=59 */
%   | | | else return -0.0641918400820256;  // std dev = 1,94e-07, 397,000 (wgt'ed) examples reached here.  /* #neg=397 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.258837
   Precision = 0.082267 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.152027


Total learning time: 2.554 seconds
Total inference time: 1.234 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.979741
   AUC PR    = 0.868436
   CLL	      = -0.237346
   Precision = 0.10551 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.190881


Total scoring time: 2.527 seconds
Parameter learned model CLL: -0.237346


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [5.58e-08, 54, 0], 'false,true,false': [1.74e-07, 479, 0], 'true': [11.004, 189, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 17, 0], 'true,true,false': [10.525, 165, 337], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 35, 0], 'false,true,false': [0.0, 455, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 39, 0], 'false,true,false': [0.0, 438, 0], 'true': [10.541, 173, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.11e-08, 44, 0], 'false,true,false': [3.24e-07, 477, 0], 'true': [10.931, 193, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.476, 192, 337], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 33, 0], 'false,true,false': [1.01e-07, 434, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.465, 171, 337], 'false,true,true': [1.29e-08, 54, 0], 'false,true,false': [6.65e-09, 444, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 3, 0], 'true,true,false': [0.444, 125, 337], 'true,true,true,false': [0.0, 13, 0], 'false,true': [9.66e-08, 510, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 47, 0], 'false,true,false': [9.19e-08, 463, 0], 'true': [10.746, 191, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 35, 0], 'false,true,false': [0.0, 472, 0], 'true': [10.319, 170, 337]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 278], 'true,false,false,false': [1.94e-07, 397, 0], 'false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 15, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 41, 0], 'true,true,false,false': [0.0, 46, 0], 'true,false,false,true': [6.495, 148, 59]}]]
[{'': [0.2302078966010811, -1.5663934606343672e-16], 'false,true': [5.756711979537848e-17, 6.304397968643895e-17], 'false': [-1.5663934606343672e-16, nan]}, {'': [0.2277018573587026, -1.4023869784738819e-16], 'false': [-1.4023869784738819e-16, nan], 'true': [0.2277018573587026, nan], 'true,true': [-1.3061447348531253e-17, 0.2206512595038079], 'false,true,true': [0.0, -1.586032892321652e-17], 'false,true': [-2.2773805633336544e-17, -1.3469079331716184e-16]}, {'': [0.2178757478774632, -5.586027796856134e-18], 'false,true': [-5.693451408334136e-18, -1.2166827667125003e-17], 'false': [-5.586027796856134e-18, nan]}, {'': [0.2254598339486542, 2.6594209879696647e-16], 'false,true': [1.0092936587501423e-17, 2.1971709334300793e-16], 'false': [2.6594209879696647e-16, nan]}, {'': [0.22629614125190517, -9.40866970021319e-18], 'false,true': [-7.304098846218135e-18, 2.353468162799871e-17], 'false': [-9.40866970021319e-18, nan], 'false,true,true': [0.0, -1.0092936587501423e-17], 'true': [0.22629614125190517, nan]}, {'': [0.21586933096625757, 4.458727006526733e-17], 'false,true': [3.0839528461809902e-18, 4.400884061577197e-17], 'false': [4.458727006526733e-17, nan], 'true': [0.21586933096625757, nan]}, {'': [0.20106270379137442, 1.8286026287943755e-17], 'true,true': [-5.551115123125783e-17, 0.19735855774816605], 'false': [1.8286026287943755e-17, nan], 'true,true,true': [0.0, -1.708035422500241e-17], 'true': [0.20106270379137442, nan]}, {'': [0.21868676331482745, 5.659960517696876e-17], 'false,true': [-1.1810883240693155e-17, 1.8223963255186154e-17], 'false': [5.659960517696876e-17, nan]}, {'': [0.2100389711609587, -1.204013967766378e-16], 'false,true': [-7.50150692314295e-19, -1.2231270610277148e-16], 'false': [-1.204013967766378e-16, nan], 'false,true,true': [0.0, -2.3790493384824783e-18]}, {'': [0.11072532264603446, nan], 'true,false': [0.022204588463454328, 0.08622936098129806], 'true,false,true': [-2.555909121439209e-16, -2.030895776753335e-18], 'true': [0.011931895207182344, 0.11630966774960276], 'true,true,false': [0.0, -7.84396702180817e-18], 'true,true': [2.960594732333751e-17, -7.517135062566164e-18], 'true,false,false': [0.20378538588998604, 9.508207263792272e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1418510649004881;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.14185106490048724;  // std dev = 2,73e-07, 457,000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( actor(A) )
%   | | | then return -0.12544463852839105;  // std dev = 8,16e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.1254446385283923;  // std dev = 0,000, 430,000 (wgt'ed) examples reached here.  /* #neg=430 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360615;  // std dev = 1,03e-07, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360636;  // std dev = 3,23e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.11231637819360606;  // std dev = 0,000, 437,000 (wgt'ed) examples reached here.  /* #neg=437 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783652;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783652;  // std dev = 0,000, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | | else return -0.1015963294878366;  // std dev = 0,000, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.09269127618926104;  // std dev = 1,05e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.0926912761892614;  // std dev = 0,000, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948884;  // std dev = 6,45e-09, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.25517224256948856;  // std dev = 1,18e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 2,95e-09, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.08518475138839678;  // std dev = 4,56e-09, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839679;  // std dev = 2,95e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.08518475138839678;  // std dev = 4,94e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 3,16e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.08518475138839678;  // std dev = 6,66e-08, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253504;  // std dev = 2,31e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | | else return 0.20975771563253495;  // std dev = 2,62e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.07877675473109164;  // std dev = 4,47e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return -0.07877675473109211;  // std dev = 0,000, 508,000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1770964977452777;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333722;  // std dev = 0,000, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
%   | | | else return -0.07324622576333698;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0684269778442027;  // std dev = 1,39e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.06842697784420271;  // std dev = 9,13e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06842697784420265;  // std dev = 2,58e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.0684269778442027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420268;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420265;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.06842697784420346;  // std dev = 0,000, 453,000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202614;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.06419184008202614;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801126;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | | else return -0.06419184008202616;  // std dev = 5,27e-09, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202532;  // std dev = 2,46e-07, 541,000 (wgt'ed) examples reached here.  /* #neg=541 */
%   | | | else return 0.0959962877989626;  // std dev = 0,667, 73,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=59 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.032 seconds
Total inference time: 1.471 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064359
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.026 seconds
Refined model CLL: -0.064359


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.139 seconds
Total inference time: 1.471 seconds
AUC ROC: 1.0
Total revision time: 13.139
Best scored revision CLL: -0.064359


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 10:44:47
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.082267, 0.5], 'Inference time': 1.234, 'CLL': -0.258837, 'Recall': 1.0, 'F1': 0.152027, 'Learning time': 2.554}, 'Inference time': 1.471, 'CLL': -0.063847, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.139}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.14185106490048868;  // std dev = 0,000, 635,000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.12544463852839233;  // std dev = 0,000, 607,000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.1123163781936059;  // std dev = 0,000, 610,000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783624;  // std dev = 3,16e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.10159632948783535;  // std dev = 3,90e-07, 621,000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926178;  // std dev = 0,000, 607,000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 1,55e-07, 639,000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109257;  // std dev = 0,000, 644,000 (wgt'ed) examples reached here.  /* #neg=644 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0732462257633369;  // std dev = 1,13e-07, 590,000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06842697784420368;  // std dev = 0,000, 630,000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202537;  // std dev = 2,19e-07, 639,000 (wgt'ed) examples reached here.  /* #neg=639 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.367 seconds
Total inference time: 1.202 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 10:44:53
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.202, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 4.367, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048843;  // std dev = 0,000, 594,000 (wgt'ed) examples reached here.  /* #neg=594 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.301 seconds
Total inference time: 0.772 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 10:44:56
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.772, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 1.301, 'F1': nan}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5488705845840492;  // std dev = 4,552, 97,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048763;  // std dev = 8,56e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.2225046928421702;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3978656775281988;  // std dev = 5,043, 108,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.38836433097106166;  // std dev = 4,557, 98,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360621;  // std dev = 7,68e-09, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.306271828160117;  // std dev = 4,534, 97,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783615;  // std dev = 5,96e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.19147579339055396;  // std dev = 0,475, 103,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926092;  // std dev = 6,05e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1800848395664495;  // std dev = 0,459, 98,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08518475138839682;  // std dev = 5,51e-09, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.39952676355063993;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.39952676355063993;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.11033330046004375;  // std dev = 0,473, 101,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109158;  // std dev = 6,05e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11036387222734761;  // std dev = 4,491, 99,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333707;  // std dev = 3,94e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09688842096822325;  // std dev = 4,430, 96,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=67 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06842697784420267;  // std dev = 4,66e-09, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3544096352429436;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3703959297801839;  // std dev = 1,46e-07, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.06419184008202622;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.42960407021981595;  // std dev = 2,530, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.243974
   Precision = 0.078809 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.146104


Total learning time: 1.283 seconds
Total inference time: 1.342 seconds
AUC ROC: 0.97178


Results scoring model
   AUC ROC   = 0.98643
   AUC PR    = 0.912721
   CLL	      = -0.229239
   Precision = 0.108065 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.195051


Total scoring time: 1.426 seconds
Parameter learned model CLL: -0.229239


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 7, 0], 'false,true,false': [8.56e-08, 94, 0], 'true': [4.552, 30, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 3, 0], 'true,true,false': [5.043, 41, 67], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [5.27e-09, 11, 0], 'false,true,false': [0.0, 78, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 9, 0], 'false,true,false': [7.68e-09, 91, 0], 'true': [4.557, 31, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 7, 0], 'false,true,false': [5.96e-08, 78, 0], 'true': [4.534, 30, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.475, 36, 67], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 6, 0], 'false,true,false': [6.05e-08, 108, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.459, 31, 67], 'false,true,true': [3.73e-09, 10, 0], 'false,true,false': [5.51e-09, 96, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.473, 34, 67], 'true,true,true,false': [0.0, 6, 0], 'false,true': [6.05e-08, 105, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 10, 0], 'false,true,false': [3.94e-08, 100, 0], 'true': [4.491, 32, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false': [4.66e-09, 86, 0], 'true': [4.43, 29, 67]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.46e-07, 0, 59], 'true,false,false,false': [0.0, 69, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 3, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [1.86e-09, 7, 0], 'true,true,false,false': [0.0, 8, 0], 'true,false,false,true': [2.53, 32, 8]}]]
[{'': [0.21362525241789693, 7.91446116564468e-17], 'false,true': [-7.93016446160826e-18, 7.795182938857482e-17], 'false': [7.91446116564468e-17, nan]}, {'': [0.2392662933203476, -1.7270135938613546e-17], 'false': [-1.7270135938613546e-17, nan], 'true': [0.2392662933203476, nan], 'true,true': [-9.25185853854297e-18, 0.2355109739369002], 'false,true,true': [0.0, 2.523234146875356e-18], 'false,true': [2.3129646346357427e-18, -2.5620531337503614e-17]}, {'': [0.2119356609025682, 6.439293542825907e-17], 'false,true': [-1.5419764230904951e-18, 6.100126508929432e-17], 'false': [6.439293542825907e-17, nan]}, {'': [0.21190796905633458, 3.657205257588751e-17], 'false,true': [0.0, 4.554761126667309e-17], 'false': [3.657205257588751e-17, nan]}, {'': [0.22571605996218355, 4.594026308793751e-17], 'false,true': [1.734723475976807e-18, 3.39234813079909e-17], 'false': [4.594026308793751e-17, nan], 'false,true,true': [0.0, 0.0], 'true': [0.22571605996218355, nan]}, {'': [0.21061993376763904, 3.2468786569226275e-17], 'false,true': [1.3877787807814458e-18, 3.0068540250264654e-17], 'false': [3.2468786569226275e-17, nan], 'true': [0.21061993376763904, nan]}, {'': [0.22460071793129568, 3.489272363107635e-17], 'true,true': [0.0, 0.2233114400548966], 'false': [3.489272363107635e-17, nan], 'true,true,true': [0.0, 0.0], 'true': [0.22460071793129568, nan]}, {'': [0.20372468473573607, 1.715799219875242e-17], 'false,true': [6.938893903907229e-19, 1.5543122344752193e-17], 'false': [1.715799219875242e-17, nan]}, {'': [0.2043894994528707, 2.2551405187698492e-17], 'false,true': [0.0, 2.0655312086049424e-17], 'false': [2.2551405187698492e-17, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.12015145954302434, nan], 'true,false': [0.01790676693567586, 0.08973420000829829], 'true,false,true': [3.6129291648818656e-16, 4.956352788505163e-19], 'true': [0.014951426383680019, 0.1267982647169604], 'true,true,false': [0.0, 0.0], 'true,true': [-1.850371707708594e-17, 1.3877787807814458e-18], 'true,false,false': [0.1599999999999997, -7.240584943207542e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109546;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return 0.7194734122109547;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( genre(A, D) )
%   | then return -0.1033830042721313;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783627;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.17900524537039575;  // std dev = 0,299, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.1024146258101041;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( female(B) )
%   | | | then return -0.09257866418943134;  // std dev = 0,000184, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09246035863837365;  // std dev = 0,001, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948934;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.1546559127373562;  // std dev = 0,291, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.08506175067077562;  // std dev = 3,68e-06, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08871170473455008;  // std dev = 0,011, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 2,04e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.08518475138839679;  // std dev = 1,97e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06818754964713729;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.08632889867058609;  // std dev = 0,045, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( director(B), director(A) )
%   | then return -0.08212650842291515;  // std dev = 0,004, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109166;  // std dev = 3,65e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(B) )
%   | | | then return -0.07869443148796851;  // std dev = 0,000104, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07871306537176818;  // std dev = 0,000171, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527686;  // std dev = 9,13e-09, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then return -0.072735226379671;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.06398055038269031;  // std dev = 1,32e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.07315273176830697;  // std dev = 1,94e-06, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07718765733783639;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.07326397080394564;  // std dev = 7,81e-06, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07321378854125729;  // std dev = 0,000210, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06797950362898081;  // std dev = 1,86e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.05957478907055538;  // std dev = 0,000832, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.15274385809367066;  // std dev = 6,72e-09, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07439084358935413;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06828689446854007;  // std dev = 0,000174, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420267;  // std dev = 3,80e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return -0.0683600822553678;  // std dev = 0,000131, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.0678910295693475;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.09144040165193766;  // std dev = 0,065, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10666925482317842;  // std dev = 0,368, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0.10017133049125908;  // std dev = 0,477, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06399439435537918;  // std dev = 0,008, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | | else return 0.06792968086346433;  // std dev = 0,324, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064348
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.926 seconds
Total inference time: 1.448 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068954
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.348 seconds
Refined model CLL: -0.068954


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064348
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.983 seconds
Total inference time: 1.448 seconds
AUC ROC: 1.0
Total revision time: 6.983
Best scored revision CLL: -0.068954


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 10:45:06
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.448, 'CLL': -0.064348, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.983, 'parameter_0.2': {'AUC PR': 0.824078, 'AUC ROC': 0.97178, 'Precision': [0.078809, 0.5], 'Inference time': 1.342, 'CLL': -0.243974, 'Recall': 1.0, 'F1': 0.146104, 'Learning time': 1.283}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048782;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839113;  // std dev = 7,60e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.11231637819360622;  // std dev = 8,43e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783635;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.092691276189261;  // std dev = 3,94e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839679;  // std dev = 5,16e-08, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6,50e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07342787601288926;  // std dev = 0,022, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06858483435989714;  // std dev = 0,021, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06434860209015507;  // std dev = 0,020, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.25 seconds
Total inference time: 1.08 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 10:45:10
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.08, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 2.25, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048793;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.844 seconds
Total inference time: 0.755 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 10:45:12
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.755, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 0.844, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5903893722579794;  // std dev = 5,990, 183,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.14185106490048816;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.22976995313902832;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.4270927919590122;  // std dev = 6,781, 204,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3099252680740807;  // std dev = 7,053, 217,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11231637819360644;  // std dev = 3,73e-09, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26828995815218987;  // std dev = 6,763, 208,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.10159632948783653;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2038990425212735;  // std dev = 0,468, 208,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926089;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.09269127618926061;  // std dev = 8,82e-08, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.17824798154285762;  // std dev = 0,463, 199,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839694;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.08518475138839678;  // std dev = 5,51e-09, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3824839589456097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.3824839589456097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.12565571391350058;  // std dev = 0,470, 200,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109147;  // std dev = 7,74e-08, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10849682799295587;  // std dev = 6,466, 198,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07324622576333674;  // std dev = 9,71e-08, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0621931851668491;  // std dev = 6,672, 204,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=134 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.06842697784420262;  // std dev = 5,67e-09, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3338524026900464;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3836249739953478;  // std dev = 8,43e-08, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.45907165521813525;  // std dev = 3,435, 89,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.233072
   Precision = 0.078809 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.146104


Total learning time: 2.055 seconds
Total inference time: 1.203 seconds
AUC ROC: 0.97178


Results scoring model
   AUC ROC   = 0.988137
   AUC PR    = 0.923049
   CLL	      = -0.219494
   Precision = 0.108152 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.195193


Total scoring time: 1.905 seconds
Parameter learned model CLL: -0.219494


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.36e-08, 27, 0], 'false,true,false': [0.0, 160, 0], 'true': [5.99, 49, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 9, 0], 'true,true,false': [6.781, 70, 134], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [5.27e-09, 11, 0], 'false,true,false': [0.0, 184, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 13, 0], 'false,true,false': [3.73e-09, 172, 0], 'true': [7.053, 83, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 18, 0], 'false,true,false': [0.0, 190, 0], 'true': [6.763, 74, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.468, 74, 134], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.05e-08, 18, 0], 'false,true,false': [8.82e-08, 183, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.463, 65, 134], 'false,true,true': [0.0, 23, 0], 'false,true,false': [5.51e-09, 177, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 2, 0], 'true,true,false': [0.47, 66, 134], 'true,true,true,false': [0.0, 6, 0], 'false,true': [7.74e-08, 196, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [6.45e-09, 20, 0], 'false,true,false': [9.71e-08, 168, 0], 'true': [6.466, 64, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 16, 0], 'false,true,false': [5.67e-09, 171, 0], 'true': [6.672, 70, 134]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [8.43e-08, 0, 120], 'true,false,false,false': [0.0, 167, 0], 'false': [0.0, 0, 0], 'true,true,true': [1.05e-08, 6, 0], 'true,true,false,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 16, 0], 'true,true,false,false': [0.0, 16, 0], 'true,false,false,true': [3.435, 75, 14]}]]
[{'': [0.1960643793484474, -2.1610758340297165e-16], 'false,true': [2.05596856412066e-17, -1.4432899320127036e-16], 'false': [-2.1610758340297165e-16, nan]}, {'': [0.23333112918512586, -2.945489657168783e-17], 'false': [-2.945489657168783e-17, nan], 'true': [0.23333112918512586, nan], 'true,true': [0.0, 0.22539407920030705], 'false,true,true': [0.0, 2.523234146875356e-18], 'false,true': [2.3129646346357427e-18, -1.9308226515220113e-17]}, {'': [0.2292625660161282, -7.201446646217232e-18], 'false,true': [8.540177112501205e-18, 1.290957005378089e-17], 'false': [-7.201446646217232e-18, nan]}, {'': [0.2198715169391621, -8.326672684688674e-17], 'false,true': [-4.625929269271485e-18, -8.998649778540742e-17], 'false': [-8.326672684688674e-17, nan]}, {'': [0.21915438371617138, 4.3969228698026004e-17], 'false,true': [8.764918615461762e-18, 4.246754739003331e-17], 'false': [4.3969228698026004e-17, nan], 'false,true,true': [0.0, 6.1679056923619804e-18], 'true': [0.21915438371617138, nan]}, {'': [0.2142412451038789, 3.219646771412954e-17], 'false,true': [-6.033820786006285e-18, 3.136223233404397e-17], 'false': [3.219646771412954e-17, nan], 'true': [0.2142412451038789, nan]}, {'': [0.2221451896129199, 3.058777720906043e-17], 'true,true': [0.0, 0.22109999999999963], 'false': [3.058777720906043e-17, nan], 'true,true,true': [0.0, -1.850371707708594e-17], 'true': [0.2221451896129199, nan]}, {'': [0.21114784976830578, 5.787332787939646e-17], 'false,true': [2.0816681711721684e-18, 5.617199826972518e-17], 'false': [5.787332787939646e-17, nan]}, {'': [0.21822650322338655, 3.289549702593056e-17], 'false,true': [-1.5419764230904951e-18, 3.181340830797232e-17], 'false': [3.289549702593056e-17, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.11811180556569639, nan], 'true,false': [0.02081729055056142, 0.08144856759275784], 'true,false,true': [5.921189464667501e-17, 0.0], 'true': [0.012568339090926365, 0.124638678997666], 'true,true,false': [0.0, -2.6020852139652106e-18], 'true,true': [1.850371707708594e-17, -1.982541115402065e-18], 'true,false,false': [0.1325590203257163, -7.312846269986062e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.14185106490048832;  // std dev = 0,000, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.1254446385283912;  // std dev = 6,66e-08, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 3,41e-08, 61,000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else return 0.5553664367462836;  // std dev = 3,73e-08, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.11231637819360658;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783628;  // std dev = 1,32e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.1015963294878365;  // std dev = 0,000, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601498;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else return 0.32071184716015;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926087;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926087;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 9,13e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839686;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.08518475138839678;  // std dev = 2,11e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( female(A) )
%   | | | then return 0.20975771563253595;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | | else return 0.20975771563253598;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.07877675473109155;  // std dev = 5,67e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527755;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09540755620869841;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15274385809367072;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420267;  // std dev = 1,97e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08066607060635213;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06842697784420268;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420262;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.06842697784420271;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06842697784420261;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.0641918400820262;  // std dev = 9,31e-10, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.06393737063524765;  // std dev = 0,000673, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801084;  // std dev = 7,88e-08, 120,000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | | else return -0.06419184008202612;  // std dev = 3,73e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.06794073997799877;  // std dev = 0,428, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return -0.06436334105643723;  // std dev = 0,024, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063887
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.059 seconds
Total inference time: 1.49 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06433
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.085 seconds
Refined model CLL: -0.06433


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063887
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.104 seconds
Total inference time: 1.49 seconds
AUC ROC: 1.0
Total revision time: 10.104
Best scored revision CLL: -0.06433


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 10:45:25
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 0.824078, 'AUC ROC': 0.97178, 'Precision': [0.078809, 0.5], 'Inference time': 1.203, 'CLL': -0.233072, 'Recall': 1.0, 'F1': 0.146104, 'Learning time': 2.055}, 'Inference time': 1.49, 'CLL': -0.063887, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.104}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.14185106490048838;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.1254446385283918;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.1123163781936068;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.10159632948783648;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.09269127618926055;  // std dev = 6,32e-08, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0851847513883968;  // std dev = 1,90e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.08518475138839678;  // std dev = 8,02e-08, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07877675473109146;  // std dev = 7,45e-08, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.0732462257633367;  // std dev = 1,22e-07, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06842697784420261;  // std dev = 6,14e-08, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0641918400820262;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.06419184008202623;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.601 seconds
Total inference time: 1.06 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 10:45:29
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.06, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 2.601, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048846;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.002 seconds
Total inference time: 0.737 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 10:45:31
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.737, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 1.002, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5035163472400835;  // std dev = 8,464, 313,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.14185106490048813;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21475740723796702;  // std dev = 1,49e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.44537331171628675;  // std dev = 8,286, 306,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.1254446385283919;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3766184172367957;  // std dev = 8,043, 301,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.11231637819360689;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #neg=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2625185964994123;  // std dev = 8,371, 317,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.10159632948783659;  // std dev = 0,000, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1858040224087604;  // std dev = 0,477, 322,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926082;  // std dev = 9,13e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.09269127618926043;  // std dev = 1,41e-07, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.16319925022555723;  // std dev = 0,468, 311,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839691;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.08518475138839678;  // std dev = 5,82e-09, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3721274554349469;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.3721274554349469;  // std dev = 2,58e-08, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.1720897244872642;  // std dev = 0,455, 286,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109144;  // std dev = 5,77e-08, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09624889111314865;  // std dev = 8,019, 307,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 1,29e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.07324622576333692;  // std dev = 1,05e-07, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.061126877431162734;  // std dev = 8,163, 313,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=202 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420265;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.0684269778442029;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3234739299055052;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.38544606105239193;  // std dev = 2,92e-07, 180,000 (wgt'ed) examples reached here.  /* #pos=180 */
%   | | | else return -0.06419184008202611;  // std dev = 1,18e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.4248987665338144;  // std dev = 4,222, 116,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=22 */
%   | | | else return -0.06419184008202625;  // std dev = 2,58e-08, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.236214
   Precision = 0.078809 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.146104


Total learning time: 1.979 seconds
Total inference time: 1.433 seconds
AUC ROC: 0.97178


Results scoring model
   AUC ROC   = 0.987391
   AUC PR    = 0.919251
   CLL	      = -0.224999
   Precision = 0.106765 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.192932


Total scoring time: 1.86 seconds
Parameter learned model CLL: -0.224999


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [4.08e-08, 39, 0], 'false,true,false': [0.0, 261, 0], 'true': [8.464, 111, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.49e-08, 14, 0], 'true,true,false': [8.286, 104, 202], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 32, 0], 'false,true,false': [0.0, 269, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 31, 0], 'false,true,false': [0.0, 259, 0], 'true': [8.043, 99, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 30, 0], 'false,true,false': [0.0, 254, 0], 'true': [8.371, 115, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.477, 120, 202], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [9.13e-09, 27, 0], 'false,true,false': [1.41e-07, 280, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.468, 109, 202], 'false,true,true': [0.0, 26, 0], 'false,true,false': [5.82e-09, 257, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [7.45e-09, 3, 0], 'true,true,false': [0.455, 84, 202], 'true,true,true,false': [2.58e-08, 12, 0], 'false,true': [5.77e-08, 279, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.29e-08, 31, 0], 'false,true,false': [1.05e-07, 282, 0], 'true': [8.019, 105, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 22, 0], 'false,true,false': [0.0, 281, 0], 'true': [8.163, 111, 202]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [2.92e-07, 0, 180], 'true,false,false,false': [2.58e-08, 241, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 12, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [1.18e-08, 31, 0], 'true,true,false,false': [0.0, 31, 0], 'true,false,false,true': [4.222, 94, 22]}]]
[{'': [0.2288683154875568, 3.256654205567126e-17], 'false,true': [4.2700885562506023e-17, -8.847754372491668e-17], 'false': [3.256654205567126e-17, nan]}, {'': [0.2327734374999919, -8.736181177378281e-17], 'false': [-8.736181177378281e-17, nan], 'true': [0.2327734374999919, nan], 'true,true': [1.586032892321652e-17, 0.22435815284718744], 'false,true,true': [0.0, -1.0408340855860843e-17], 'false,true': [-1.850371707708594e-17, -7.263912726172028e-17]}, {'': [0.21492513074331077, -1.0106857879346253e-16], 'false,true': [-8.953411488912552e-18, -9.7733918770091e-17], 'false': [-1.0106857879346253e-16, nan]}, {'': [0.22105558622944804, -5.785669283257858e-17], 'false,true': [0.0, -6.818692592186001e-17], 'false': [-5.785669283257858e-17, nan]}, {'': [0.22749518689685522, 9.28160727982446e-17], 'false,true': [1.0744093786695063e-17, 7.137148015447435e-17], 'false': [9.28160727982446e-17, nan], 'false,true,true': [0.0, 3.0839528461809902e-18], 'true': [0.22749518689685522, nan]}, {'': [0.2194512312013196, 3.6092055924210034e-17], 'false,true': [-4.270088556250602e-18, 3.455947158366246e-17], 'false': [3.6092055924210034e-17, nan], 'true': [0.2194512312013196, nan]}, {'': [0.21112912003076734, 1.1937881985216737e-17], 'true,true': [8.881784197001253e-17, 0.20744290674360652], 'false': [1.1937881985216737e-17, nan], 'true,true,true': [1.850371707708594e-17, 5.551115123125783e-17], 'true': [0.21112912003076734, nan]}, {'': [0.20944215963489082, 1.6316376719730734e-17], 'false,true': [5.3720468933475315e-18, 3.936961080231052e-17], 'false': [1.6316376719730734e-17, nan]}, {'': [0.21286862482249722, -6.009127922063554e-17], 'false,true': [-1.261617073437678e-18, -4.029991050240782e-17], 'false': [-6.009127922063554e-17, nan], 'false,true,true': [nan, -1.261617073437678e-18]}, {'': [0.11094191591919089, nan], 'true,false': [0.025339329105861754, 0.07847679533438122], 'true,false,true': [4.736951571734001e-16, 4.476705744456276e-18], 'true': [0.013121385671523761, 0.11729061963923863], 'true,true,false': [0.0, -4.476705744456276e-18], 'true,true': [-7.401486830834377e-17, 1.0211719886136261e-06], 'true,false,false': [0.15368608799048664, 2.7640407252078584e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048766;  // std dev = 8,43e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.1418510649004882;  // std dev = 0,000, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(B) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.12544463852839188;  // std dev = 0,000, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | else return 0.5553664367462834;  // std dev = 4,15e-08, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360688;  // std dev = 0,000, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583101;  // std dev = 1,90e-08, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | else return 0.41751358415830947;  // std dev = 2,93e-08, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783626;  // std dev = 4,21e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.10159632948783662;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015033;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | else return 0.3207118471601501;  // std dev = 1,58e-08, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926082;  // std dev = 1,32e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926083;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926085;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.09269127618926094;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else return -0.08518475138839679;  // std dev = 4,47e-09, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08518475138839682;  // std dev = 3,48e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.08518475138839675;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839676;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.08518475138839675;  // std dev = 5,27e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253573;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | | else return 0.20975771563253548;  // std dev = 1,69e-07, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109154;  // std dev = 5,05e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return -0.07877675473109151;  // std dev = 6,32e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else return -0.07877675473109175;  // std dev = 9,31e-10, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.07877675473109169;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367153;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420264;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420262;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420268;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.09614881886721718;  // std dev = 0,735, 89,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=72 */
%   | | | else return 0.11568612605010826;  // std dev = 0,626, 119,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=108 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202594;  // std dev = 1,17e-07, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
%   | | | else return 0.0720698831048743;  // std dev = 0,520, 32,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064232
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.074 seconds
Total inference time: 1.448 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065109
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.552 seconds
Refined model CLL: -0.065109


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064232
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.465 seconds
Total inference time: 1.448 seconds
AUC ROC: 1.0
Total revision time: 10.465
Best scored revision CLL: -0.065109


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 10:45:45
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.448, 'parameter_0.6': {'AUC PR': 0.824078, 'AUC ROC': 0.97178, 'Precision': [0.078809, 0.5], 'Inference time': 1.433, 'CLL': -0.236214, 'Recall': 1.0, 'F1': 0.146104, 'Learning time': 1.979}, 'CLL': -0.064232, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.465}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048763;  // std dev = 2,00e-07, 387,000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839216;  // std dev = 0,000, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.11231637819360665;  // std dev = 0,000, 385,000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783634;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.10159632948783655;  // std dev = 0,000, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.092691276189261;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.09269127618926053;  // std dev = 1,81e-07, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 1,90e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.08518475138839678;  // std dev = 1,12e-07, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07877675473109147;  // std dev = 4,21e-08, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.07324622576333713;  // std dev = 6,50e-08, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.06842697784420326;  // std dev = 0,000, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.06419184008202605;  // std dev = 1,01e-07, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.322 seconds
Total inference time: 1.219 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 10:45:50
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.219, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 3.322, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1418510649004876;  // std dev = 2,15e-07, 401,000 (wgt'ed) examples reached here.  /* #neg=401 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.211 seconds
Total inference time: 0.77 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 10:45:52
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.77, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 1.211, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.492582897363659;  // std dev = 9,917, 424,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.14185106490048754;  // std dev = 2,29e-07, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21291937728012883;  // std dev = 2,36e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.44317818369548834;  // std dev = 9,618, 410,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.1254446385283922;  // std dev = 0,000, 356,000 (wgt'ed) examples reached here.  /* #neg=356 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.380789751396124;  // std dev = 9,240, 401,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.11231637819360657;  // std dev = 0,000, 338,000 (wgt'ed) examples reached here.  /* #neg=338 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2888774771790823;  // std dev = 9,366, 404,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.10159632948783624;  // std dev = 1,28e-07, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.21652967683094157;  // std dev = 0,464, 407,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.092691276189261;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.09269127618926082;  // std dev = 1,58e-07, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.14068753679731283;  // std dev = 0,474, 419,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.0851847513883968;  // std dev = 2,17e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.08518475138839678;  // std dev = 6,25e-09, 330,000 (wgt'ed) examples reached here.  /* #neg=330 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.37908069362335717;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.3790806936233571;  // std dev = 2,98e-08, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.14044067746883634;  // std dev = 0,466, 395,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109141;  // std dev = 1,25e-07, 406,000 (wgt'ed) examples reached here.  /* #neg=406 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.047360501330345355;  // std dev = 9,971, 442,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 9,13e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.07324622576333711;  // std dev = 7,30e-08, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10230477829284787;  // std dev = 9,013, 399,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=269 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420264;  // std dev = 1,97e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.06842697784420321;  // std dev = 0,000, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3267618633159139;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.38870677644465;  // std dev = 1,69e-07, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3825350536207093;  // std dev = 5,196, 153,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=35 */
%   | | | else return -0.06419184008202583;  // std dev = 1,43e-07, 328,000 (wgt'ed) examples reached here.  /* #neg=328 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.239906
   Precision = 0.078809 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.146104


Total learning time: 2.284 seconds
Total inference time: 1.366 seconds
AUC ROC: 0.97178


Results scoring model
   AUC ROC   = 0.984799
   AUC PR    = 0.902927
   CLL	      = -0.229761
   Precision = 0.105781 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.191323


Total scoring time: 2.324 seconds
Parameter learned model CLL: -0.229761


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [4.08e-08, 40, 0], 'false,true,false': [2.29e-07, 352, 0], 'true': [9.917, 155, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.36e-08, 20, 0], 'true,true,false': [9.618, 141, 269], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 38, 0], 'false,true,false': [0.0, 356, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 37, 0], 'false,true,false': [0.0, 338, 0], 'true': [9.24, 132, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 37, 0], 'false,true,false': [1.28e-07, 357, 0], 'true': [9.366, 135, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.464, 138, 269], 'false,true,true,true': [2.63e-09, 6, 0], 'false,true,true,false': [0.0, 44, 0], 'false,true,false': [1.58e-07, 391, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.474, 150, 269], 'false,true,true': [2.17e-08, 33, 0], 'false,true,false': [6.25e-09, 330, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 4, 0], 'true,true,false': [0.466, 126, 269], 'true,true,true,false': [2.98e-08, 12, 0], 'false,true': [1.25e-07, 406, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [9.13e-09, 31, 0], 'false,true,false': [7.3e-08, 351, 0], 'true': [9.971, 173, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [1.97e-08, 39, 0], 'false,true,false': [0.0, 352, 0], 'true': [9.013, 130, 269]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.69e-07, 0, 234], 'true,false,false,false': [1.43e-07, 328, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 16, 0], 'true,true,false,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 45, 0], 'true,true,false,false': [0.0, 42, 0], 'true,false,false,true': [5.196, 118, 35]}]]
[{'': [0.23192750978996415, 2.1751308237554087e-16], 'false,true': [4.163336342344337e-17, 1.4887081466564598e-16], 'false': [2.1751308237554087e-16, nan]}, {'': [0.23422931314222667, -1.2752183859674342e-16], 'false': [-1.2752183859674342e-16, nan], 'true': [0.23422931314222667, nan], 'true,true': [2.7755575615628914e-17, 0.2256335514574534], 'false,true,true': [-4.625929269271485e-18, -2.0451476769410777e-17], 'false,true': [-2.4370749321040022e-17, -1.197543936674326e-16]}, {'': [0.21291476295061584, -2.6053233644537006e-17], 'false,true': [-9.00180830777154e-18, -3.416070845000482e-17], 'false': [-2.6053233644537006e-17, nan]}, {'': [0.21714078704374612, 1.1045873747539628e-16], 'false,true': [-7.50150692314295e-18, 4.6026052561491086e-17], 'false': [1.1045873747539628e-16, nan]}, {'': [0.21573835879784356, 1.3091065142972368e-17], 'false,true': [-1.9984014443252817e-17, 6.360356969719567e-17], 'false': [1.3091065142972368e-17, nan], 'false,true,true': [1.1564823173178713e-18, -1.6401021954689813e-17], 'true': [0.21573835879784356, nan]}, {'': [0.2251233068932365, 3.914836009697522e-17], 'false,true': [1.4298326832293682e-17, 3.902602147167217e-17], 'false': [3.914836009697522e-17, nan], 'true': [0.2251233068932365, nan]}, {'': [0.2188757172567254, 3.828355257328126e-17], 'true,true': [5.551115123125783e-17, 0.21723441756128828], 'false': [3.828355257328126e-17, nan], 'true,true,true': [0.0, 7.401486830834377e-17], 'true': [0.2188757172567254, nan]}, {'': [0.22493505586651288, 1.1625371985603734e-18], 'false,true': [2.6860234466737657e-18, 1.518253708889103e-17], 'false': [1.1625371985603734e-18, nan]}, {'': [0.20360941655134063, -1.12427648063307e-16], 'false,true': [9.036699037646624e-18, -8.768238660391862e-17], 'false': [-1.12427648063307e-16, nan], 'false,true,true': [0.0, 9.963539964584738e-18]}, {'': [0.1068914220951087, nan], 'true,false': [0.02774737813811827, 0.07810142284720636], 'true,false,true': [1.2146029671112825e-16, -3.0839528461809902e-18], 'true': [0.01279321311413461, 0.11339526885924806], 'true,true,false': [-4.956352788505163e-19, -1.982541115402065e-18], 'true,true': [-2.7755575615628914e-17, -2.2657612747452172e-18], 'true,false,false': [0.17642786962279325, 6.228080382043562e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.1418510649004876;  // std dev = 2,04e-07, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( actor(A) )
%   | | | then return -0.12544463852839105;  // std dev = 8,16e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12544463852839124;  // std dev = 4,34e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.12544463852839222;  // std dev = 0,000, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,15e-08, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | else return 0.5553664367462833;  // std dev = 4,28e-08, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 2,11e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360646;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.11231637819360626;  // std dev = 5,67e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.11231637819360629;  // std dev = 0,000, 385,000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783638;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878364;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else return -0.10159632948783658;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.09269127618926096;  // std dev = 2,79e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | | else return -0.09269127618926067;  // std dev = 8,16e-08, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | else return 0.2551722425694891;  // std dev = 9,13e-09, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 2,08e-09, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return -0.08518475138839679;  // std dev = 3,23e-09, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 2,95e-09, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.08518475138839678;  // std dev = 2,36e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 3,49e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | | else return -0.08518475138839678;  // std dev = 6,50e-08, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253526;  // std dev = 1,37e-07, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | | else return 0.20975771563253504;  // std dev = 2,19e-07, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return -0.07877675473109168;  // std dev = 3,57e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109155;  // std dev = 5,67e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | | else return -0.07877675473109147;  // std dev = 7,45e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527741;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | else return 0.17709649774527766;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return -0.07324622576333704;  // std dev = 3,61e-09, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07324622576333706;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333692;  // std dev = 1,04e-07, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333699;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420268;  // std dev = 2,79e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420267;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420268;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.06842697784420321;  // std dev = 0,000, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10514311688810246;  // std dev = 0,710, 103,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=88 */
%   | | | else return 0.11554129676980877;  // std dev = 0,731, 161,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=146 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202543;  // std dev = 2,36e-07, 468,000 (wgt'ed) examples reached here.  /* #neg=468 */
%   | | | else return 0.08032816935862584;  // std dev = 0,610, 48,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064235
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.474 seconds
Total inference time: 1.416 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065136
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.749 seconds
Refined model CLL: -0.065136


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064235
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.831000000000001 seconds
Total inference time: 1.416 seconds
AUC ROC: 1.0
Total revision time: 11.831000000000001
Best scored revision CLL: -0.065136


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 10:46:07
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.416, 'parameter_0.8': {'AUC PR': 0.824078, 'AUC ROC': 0.97178, 'Precision': [0.078809, 0.5], 'Inference time': 1.366, 'CLL': -0.239906, 'Recall': 1.0, 'F1': 0.146104, 'Learning time': 2.284}, 'CLL': -0.064235, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.831000000000001}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 500,000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.1254446385283923;  // std dev = 0,000, 513,000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.112316378193606;  // std dev = 0,000, 545,000 (wgt'ed) examples reached here.  /* #neg=545 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.10159632948783588;  // std dev = 2,48e-07, 482,000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.09269127618926146;  // std dev = 0,000, 522,000 (wgt'ed) examples reached here.  /* #neg=522 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.08518475138839678;  // std dev = 1,33e-07, 504,000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07877675473109187;  // std dev = 0,000, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07324622576333721;  // std dev = 0,000, 499,000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.06842697784420348;  // std dev = 0,000, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.0641918400820256;  // std dev = 2,14e-07, 501,000 (wgt'ed) examples reached here.  /* #neg=501 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.877 seconds
Total inference time: 1.088 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 10:46:12
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.088, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 3.877, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1418510649004875;  // std dev = 2,73e-07, 447,000 (wgt'ed) examples reached here.  /* #neg=447 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.298 seconds
Total inference time: 0.788 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 10:46:15
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.788, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 1.298, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,false,true;title(J, I), venue(J, A).;false;false
2;false,true;author(F, E), venue(F, A).;false;true
2;false,true,false;haswordtitle(G, D).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;true
4;true,false,true;haswordtitle(G, E).;false;false
4;false,true,true;samebib(L, M), venue(M, A).;false;false
4;true;haswordauthor(D, C).;false;true
4;false;haswordvenue(A, J), haswordauthor(K, J).;true;false
4;true,false,false;haswordvenue(A, H), haswordauthor(I, H).;false;false
4;false,true;author(L, K), venue(L, B).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;true,true,true;haswordauthor(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true;haswordtitle(F, D).;true;false
5;false,true;author(J, I), venue(J, A).;false;true
5;false,true,false;haswordtitle(K, H).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
6;false;haswordvenue(A, I), haswordtitle(J, I).;false;true
6;true,true,true;samebib(F, G), venue(G, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,true;title(M, L), venue(M, A).;false;false
6;true,true;author(F, E), venue(F, A).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,false,true;haswordauthor(K, I).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,true,false;author(H, E), venue(H, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.49519997479705047;  // std dev = 11,060, 529,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.14185106490048718;  // std dev = 2,95e-07, 446,000 (wgt'ed) examples reached here.  /* #neg=446 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.2133582889679095;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.4579564520679527;  // std dev = 10,525, 502,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839147;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.1254446385283923;  // std dev = 0,000, 453,000 (wgt'ed) examples reached here.  /* #neg=453 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34272135358088757;  // std dev = 10,914, 528,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.11231637819360604;  // std dev = 0,000, 438,000 (wgt'ed) examples reached here.  /* #neg=438 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30768539929966027;  // std dev = 10,252, 496,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783633;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.1015963294878356;  // std dev = 2,98e-07, 454,000 (wgt'ed) examples reached here.  /* #neg=454 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.22634318307274257;  // std dev = 0,461, 503,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926108;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.0926912761892613;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #neg=469 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.13665375959618437;  // std dev = 0,471, 530,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839679;  // std dev = 1,29e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.08518475138839678;  // std dev = 6,72e-09, 449,000 (wgt'ed) examples reached here.  /* #neg=449 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3764239680718445;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.37642396807184453;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.13789145271468561;  // std dev = 0,467, 496,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.078776754731092;  // std dev = 1,30e-07, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10568619242704122;  // std dev = 10,256, 503,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.07324622576333718;  // std dev = 6,32e-08, 462,000 (wgt'ed) examples reached here.  /* #neg=462 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07408066856445433;  // std dev = 10,350, 508,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=337 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420271;  // std dev = 1,05e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.06842697784420343;  // std dev = 0,000, 436,000 (wgt'ed) examples reached here.  /* #neg=436 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.33149930442114167;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.38125649898561814;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3939728588125479;  // std dev = 6,163, 218,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=49 */
%   | | | else return -0.06419184008202557;  // std dev = 2,01e-07, 408,000 (wgt'ed) examples reached here.  /* #neg=408 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.242407
   Precision = 0.078809 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.146104


Total learning time: 2.419 seconds
Total inference time: 1.212 seconds
AUC ROC: 0.97178


Results scoring model
   AUC ROC   = 0.983069
   AUC PR    = 0.891379
   CLL	      = -0.231594
   Precision = 0.106309 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.192187


Total scoring time: 2.482 seconds
Parameter learned model CLL: -0.231594


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [5.37e-08, 50, 0], 'false,true,false': [2.95e-07, 446, 0], 'true': [11.06, 192, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 14, 0], 'true,true,false': [10.525, 165, 337], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 36, 0], 'false,true,false': [0.0, 453, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [4.08e-08, 57, 0], 'false,true,false': [0.0, 438, 0], 'true': [10.914, 191, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.49e-08, 42, 0], 'false,true,false': [2.98e-07, 454, 0], 'true': [10.252, 159, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.461, 166, 337], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 50, 0], 'false,true,false': [0.0, 469, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, A)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.471, 193, 337], 'false,true,true': [1.29e-08, 63, 0], 'false,true,false': [6.72e-09, 449, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, A)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 3, 0], 'true,true,false': [0.467, 159, 337], 'true,true,true,false': [0.0, 14, 0], 'false,true': [1.3e-07, 487, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 38, 0], 'false,true,false': [6.32e-08, 462, 0], 'true': [10.256, 166, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [2.63e-09, 7, 0], 'false,true,true,false': [1.05e-08, 46, 0], 'false,true,false': [0.0, 436, 0], 'true': [10.35, 171, 337]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 288], 'true,false,false,false': [2.01e-07, 408, 0], 'false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 22, 0], 'true,true,false,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 35, 0], 'true,true,false,false': [0.0, 48, 0], 'true,false,false,true': [6.163, 169, 49]}]]
[{'': [0.23121701251782517, -1.4325458382260084e-17], 'false,true': [5.773159728050814e-17, 1.9516028056191092e-16], 'false': [-1.4325458382260084e-17, nan]}, {'': [0.2265601526350513, -1.371982924740031e-16], 'false': [-1.371982924740031e-16, nan], 'true': [0.2265601526350513, nan], 'true,true': [0.0, 0.22065125950381068], 'false,true,true': [-4.625929269271485e-18, -1.850371707708594e-17], 'false,true': [-2.2773805633336544e-17, -1.3332479589317552e-16]}, {'': [0.22559294078364506, -3.5885996755560615e-18], 'false,true': [2.921639538487254e-17, -1.2166827667125003e-17], 'false': [-3.5885996755560615e-18, nan]}, {'': [0.21190521483320632, 2.399514279028564e-16], 'false,true': [5.28677630773884e-18, 1.956340131498073e-16], 'false': [2.399514279028564e-16, nan]}, {'': [0.21227230804713923, -4.745991555649524e-17], 'false,true': [-3.0278809762504268e-18, -7.57508247078998e-18], 'false': [-4.745991555649524e-17, nan], 'false,true,true': [0.0, -3.3306690738754695e-18], 'true': [0.21227230804713923, nan]}, {'': [0.22229188166453098, 4.5102810375396984e-17], 'false,true': [2.64338815386942e-18, 4.4507827267823646e-17], 'false': [4.5102810375396984e-17, nan], 'true': [0.22229188166453098, nan]}, {'': [0.21906056458573345, 3.465172479322871e-17], 'true,true': [-5.224578939412501e-17, 0.21780290712799005], 'false': [3.465172479322871e-17, nan], 'true,true,true': [0.0, 0.0], 'true': [0.21906056458573345, nan]}, {'': [0.20909948715279109, 3.9968028886505634e-17], 'false,true': [-8.034508730839949e-18, 8.651088503572648e-18], 'false': [3.9968028886505634e-17, nan]}, {'': [0.21086593368740397, -1.2169315770942412e-16], 'false,true': [4.7132109535973624e-18, -1.2630060096653158e-16], 'false': [-1.2169315770942412e-16, nan], 'false,true,true': [9.912705577010326e-19, 2.413528314402514e-18]}, {'': [0.11526743690685895, nan], 'true,false': [0.019171238731354102, 0.08536510610497491], 'true,false,true': [-8.388351741612294e-16, -1.5860328923216522e-18], 'true': [0.014927420175706708, 0.12169608442311904], 'true,true,false': [0.0, -8.673617379884035e-18], 'true,true': [2.0185873175002847e-17, -7.472654973438553e-18], 'true,false,false': [0.17424880060600995, 9.904930905969534e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, G).;true;true
4;false;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(B, F).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048807;  // std dev = 0,000, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.14185106490048724;  // std dev = 2,73e-07, 457,000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(B) )
%   | | | then return -0.12544463852839136;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( female(A) )
%   | | | then return -0.12544463852839116;  // std dev = 6,50e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.1254446385283911;  // std dev = 7,15e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.1254446385283923;  // std dev = 0,000, 451,000 (wgt'ed) examples reached here.  /* #neg=451 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360615;  // std dev = 1,03e-07, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360628;  // std dev = 7,09e-09, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else return -0.1123163781936068;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783646;  // std dev = 0,000, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783648;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else return -0.10159632948783662;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.09269127618926093;  // std dev = 2,58e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.09269127618926065;  // std dev = 7,88e-08, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948906;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.25517224256948845;  // std dev = 1,29e-08, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 3,36e-09, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return -0.08518475138839678;  // std dev = 4,84e-09, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839686;  // std dev = 2,08e-09, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.08518475138839678;  // std dev = 4,71e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 2,79e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.08518475138839678;  // std dev = 7,30e-08, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253506;  // std dev = 2,11e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return 0.20975771563253492;  // std dev = 2,67e-07, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109168;  // std dev = 3,16e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.0787767547310916;  // std dev = 5,16e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else return -0.078776754731092;  // std dev = 0,000, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527764;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.17709649774527764;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.07324622576333704;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07324622576333727;  // std dev = 0,000, 430,000 (wgt'ed) examples reached here.  /* #neg=430 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06842697784420265;  // std dev = 3,16e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.0684269778442027;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420265;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06842697784420261;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.06842697784420337;  // std dev = 0,000, 410,000 (wgt'ed) examples reached here.  /* #neg=410 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202619;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.06419184008202616;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801137;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | | else return -0.06419184008202616;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.09767057049150406;  // std dev = 0,594, 60,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=49 */
%   | | | else return -0.06419184008202534;  // std dev = 2,45e-07, 533,000 (wgt'ed) examples reached here.  /* #neg=533 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.137 seconds
Total inference time: 1.729 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064317
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.036 seconds
Refined model CLL: -0.064317


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.074 seconds
Total inference time: 1.729 seconds
AUC ROC: 1.0
Total revision time: 13.074
Best scored revision CLL: -0.064317


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 10:46:31
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.824078, 'AUC ROC': 0.97178, 'Precision': [0.078809, 0.5], 'Inference time': 1.212, 'CLL': -0.242407, 'Recall': 1.0, 'F1': 0.146104, 'Learning time': 2.419}, 'Inference time': 1.729, 'CLL': -0.063905, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.074}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.14185106490048868;  // std dev = 0,000, 646,000 (wgt'ed) examples reached here.  /* #neg=646 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839235;  // std dev = 0,000, 667,000 (wgt'ed) examples reached here.  /* #neg=667 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.11231637819360633;  // std dev = 0,000, 667,000 (wgt'ed) examples reached here.  /* #neg=667 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783626;  // std dev = 2,36e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.10159632948783526;  // std dev = 4,12e-07, 645,000 (wgt'ed) examples reached here.  /* #neg=645 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.09269127618926179;  // std dev = 0,000, 616,000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.08518475138839675;  // std dev = 1,55e-07, 622,000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07877675473109236;  // std dev = 0,000, 591,000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07324622576333671;  // std dev = 1,85e-07, 659,000 (wgt'ed) examples reached here.  /* #neg=659 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 2,24e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.0684269778442037;  // std dev = 0,000, 676,000 (wgt'ed) examples reached here.  /* #neg=676 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.0641918400820254;  // std dev = 2,19e-07, 605,000 (wgt'ed) examples reached here.  /* #neg=605 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.243 seconds
Total inference time: 1.055 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 10:46:37
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.055, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 4.243, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.1418510649004884;  // std dev = 0,000, 596,000 (wgt'ed) examples reached here.  /* #neg=596 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.463 seconds
Total inference time: 0.74 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 10:46:39
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.74, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 1.463, 'F1': nan}


