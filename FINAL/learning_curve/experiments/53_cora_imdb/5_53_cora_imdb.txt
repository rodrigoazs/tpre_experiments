Starting experiment #5 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2159920723544091;  // std dev = 0,479, 7.956,000 (wgt'ed) examples reached here.  /* #neg=5.109 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8019691598186129;  // std dev = 2,172, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.13865617672157407;  // std dev = 0,998, 313,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.14116780302404067;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.06520872913406446;  // std dev = 4,403, 274,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=21 */
%   | else return -0.03023375282759488;  // std dev = 0,315, 439,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=49 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7047713895619269;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3640179649043926;  // std dev = 4,262, 73,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=39 */
%   | | | else return 0.08448837069400225;  // std dev = 4,486, 106,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.41186094180073285;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return -4.172896833562265E-4;  // std dev = 4,734, 159,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=27 */
%   | | else return 0.1924531343115344;  // std dev = 0,481, 7.428,000 (wgt'ed) examples reached here.  /* #neg=4.734 #pos=2.694 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( haswordtitle(M, K) )
%   | | then return 0.15201819491306406;  // std dev = 0,452, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | else return -0.025030173627581247;  // std dev = 0,314, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else return -0.0022485350818423205;  // std dev = 0,325, 1.059,000 (wgt'ed) examples reached here.  /* #neg=908 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16168182499344977;  // std dev = 0,480, 7.887,000 (wgt'ed) examples reached here.  /* #neg=5.040 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.2781223119546793;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14096524516318673;  // std dev = 3,181, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.03750838380436141;  // std dev = 7,065, 430,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=83 */
%   | | | else return -0.05212415023885358;  // std dev = 4,391, 257,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.006319610251052791;  // std dev = 6,342, 326,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=47 */
%   | | | else return -0.09948128905334551;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=2 */
%   | | else return -0.137942827514884;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.124005769693269;  // std dev = 6,454, 191,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=69 */
%   | | | else return 0.12250448354727883;  // std dev = 2,350, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else return 0.7471094531456012;  // std dev = 0,058, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.22344578321742964;  // std dev = 5,669, 137,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=61 */
%   | | | else return -0.14854747815588987;  // std dev = 2,115, 84,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=5 */
%   | | else return 0.13574716626427547;  // std dev = 0,481, 7.443,000 (wgt'ed) examples reached here.  /* #neg=4.749 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordauthor(L, J) )
%   | | then return 0.1402336531094549;  // std dev = 0,466, 49,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | else return 0.012228694589133058;  // std dev = 0,327, 646,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=104 */
%   | else return -0.0183745430109329;  // std dev = 0,322, 415,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=49 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11127007911039408;  // std dev = 0,480, 7.858,000 (wgt'ed) examples reached here.  /* #neg=5.011 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7697457693395466;  // std dev = 0,116, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13245687970186218;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.056333159920460674;  // std dev = 2,892, 67,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | | | else return -0.1376417440009841;  // std dev = 0,047, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.010259214035244301;  // std dev = 8,398, 648,000 (wgt'ed) examples reached here.  /* #neg=565 #pos=83 */
%   | | | else return 0.039208879382272056;  // std dev = 3,502, 104,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=21 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.017773176381128623;  // std dev = 5,360, 265,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=47 */
%   | | | else return -0.12016649267166235;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.51139321180284;  // std dev = 0,280, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.2624006268506504;  // std dev = 3,933, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return -0.03601934036799943;  // std dev = 4,580, 139,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=27 */
%   | else return 0.0909917983609751;  // std dev = 0,481, 7.595,000 (wgt'ed) examples reached here.  /* #neg=4.835 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.611923421488022;  // std dev = 0,164, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11739198790969112;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(L, H) )
%   | | | then return 0.06941769511776032;  // std dev = 2,835, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return -0.11621115042784456;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.004051895784853959;  // std dev = 0,326, 1.059,000 (wgt'ed) examples reached here.  /* #neg=908 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06447846786404446;  // std dev = 0,477, 8.005,000 (wgt'ed) examples reached here.  /* #neg=5.158 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.14770645543909142;  // std dev = 0,470, 44,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.02895704887291368;  // std dev = 6,924, 423,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=83 */
%   | | | else return -0.038990429477328;  // std dev = 4,375, 235,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.012036795875521188;  // std dev = 6,391, 380,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=47 */
%   | | | else return -0.08331449526177985;  // std dev = 1,388, 48,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=2 */
%   | | else return -0.10752763187763013;  // std dev = 0,003, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.045732345512830036;  // std dev = 0,475, 7.463,000 (wgt'ed) examples reached here.  /* #neg=4.854 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7153300011368074;  // std dev = 3,195, 141,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=131 */
%   | | | else return -0.136333035366406;  // std dev = 1,699, 526,000 (wgt'ed) examples reached here.  /* #neg=523 #pos=3 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.16344174141294904;  // std dev = 0,308, 275,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.43947922955754365;  // std dev = 4,394, 104,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=78 */
%   | | | else return 0.05567229160984905;  // std dev = 5,140, 203,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.47720461310169177;  // std dev = 0,410, 47,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | | else return 0.6240539067587391;  // std dev = 0,244, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else return 0.013711133600098629;  // std dev = 0,327, 270,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=49 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04658019453482962;  // std dev = 0,475, 7.850,000 (wgt'ed) examples reached here.  /* #neg=5.003 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6312105395306217;  // std dev = 2,189, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.1396710513746544;  // std dev = 0,936, 311,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.07194993213062242;  // std dev = 3,039, 196,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=17 */
%   | | | else return 0.04187080047556741;  // std dev = 3,518, 111,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.008754760127027677;  // std dev = 5,616, 367,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=47 */
%   | | | else return -0.07390579649260438;  // std dev = 1,375, 61,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=2 */
%   | | else return -0.09913842142264946;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02368353448354324;  // std dev = 0,475, 7.504,000 (wgt'ed) examples reached here.  /* #neg=4.895 #pos=2.609 */
%   | | else return 0.013673339398448678;  // std dev = 0,307, 737,000 (wgt'ed) examples reached here.  /* #neg=603 #pos=134 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.15295673502020368;  // std dev = 0,292, 314,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.239796494959558;  // std dev = 5,112, 118,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=78 */
%   | | | else return 0.020489587726823657;  // std dev = 4,448, 223,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=49 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then return 0.0696261570159421;  // std dev = 0,320, 271,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=80 */
%   | | else if ( haswordtitle(H, J), haswordauthor(K, J) )
%   | | | then return 0.15166585049555692;  // std dev = 1,663, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.13272924286797214;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.33692322806964314;  // std dev = 0,304, 44,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=31 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5214142412219621;  // std dev = 4,678, 98,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7304848071872785;  // std dev = 1,687, 58,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=55 */
%   | | else return 0.067923230832598;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.1254446385283913;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3438522437617681;  // std dev = 4,257, 100,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360622;  // std dev = 6,32e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2933962555529152;  // std dev = 0,410, 96,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783628;  // std dev = 2,95e-09, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22392297679174655;  // std dev = 3,982, 96,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=65 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926101;  // std dev = 3,48e-09, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4135058451242552;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.19489546433106358;  // std dev = 3,791, 92,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0851847513883969;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839682;  // std dev = 5,43e-09, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1391808423961619;  // std dev = 3,833, 94,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08037875389541804;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109169;  // std dev = 3,33e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3283949595900511;  // std dev = 0,846, 56,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=55 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, F) )
%   | | then return -0.07313755442914908;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.12577601965747245;  // std dev = 2,509, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.07324622576333707;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04172385788199351;  // std dev = 3,767, 101,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07912623748717657;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06833184739737452;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06842697784420265;  // std dev = 4,56e-09, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.23516120677428612;  // std dev = 1,204, 57,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( genre(A, E) )
%   | | then return -0.14345192683337132;  // std dev = 0,332, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.26238779749090374;  // std dev = 2,806, 47,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.193757
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.684 seconds
Total inference time: 2.378 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.981377
   AUC PR    = 0.883945
   CLL	      = -0.186832
   Precision = 0.774648 at threshold = 0.5
   Recall    = 0.846154
   F1        = 0.808824


Total scoring time: 1.444 seconds
Parameter learned model CLL: -0.186832


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 3, 0], 'true': [4.678, 33, 65], 'false,false': [0.0, 0, 0], 'false,true,false': [8.33e-09, 79, 0], 'false,true,true,false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 106, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [2.673, 25, 10], 'true,true,true': [1.687, 3, 55]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [6.32e-08, 79, 0], 'true': [4.257, 35, 65], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [2.95e-09, 102, 0], 'true,true': [0.41, 31, 65], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [3.982, 31, 65], 'false,false': [0.0, 0, 0], 'false,true,false': [3.48e-09, 93, 0], 'false,true,true,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [5.43e-09, 106, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [3.791, 27, 65], 'false,true,true,false': [3.73e-09, 9, 0], 'true,true,true': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [3.33e-08, 68, 0], 'true': [3.833, 29, 65], 'false,false': [0.0, 0, 0], 'false,true,true': [0.006, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 6, 0], 'true,false,false,true': [2.509, 17, 10], 'true,true,true': [0.846, 1, 55], 'true,true,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 80, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [3.767, 36, 65], 'false,false': [0.0, 0, 0], 'false,true,false': [4.56e-09, 88, 0], 'false,true,true,false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.332, 7, 0], 'true,true,false': [7.9e-09, 15, 0], 'true,true,true': [1.204, 2, 55], 'true,false,false,false': [0.0, 67, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [2.806, 37, 10]}]]
[{'': [0.22334443981674235, 7.795182938857482e-17], 'false,true': [-1.4802973661668754e-17, 7.307797124114954e-17], 'false': [7.795182938857482e-17, nan], 'false,true,true': [0.0, -1.1564823173178714e-17]}, {'': [0.21042895132385195, 0.0], 'true,true': [0.049048751486324524, 0.20408163265306098], 'true': [0.21042895132385195, nan], 'false': [0.0, nan]}, {'': [0.18124557035812747, 5.803438537813318e-17], 'false,true': [-1.5419764230904951e-18, 5.0592441628488145e-17], 'false': [5.803438537813318e-17, nan]}, {'': [0.1677000708120917, 8.707631565687502e-18], 'true': [0.1677000708120917, nan], 'false': [8.707631565687502e-18, nan]}, {'': [0.1651731033074191, 2.63815372188156e-17], 'false,true': [0.0, 1.3131670183738411e-17], 'false': [2.63815372188156e-17, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.15849051453408355, 3.089316242435218e-17], 'true,true': [0.0, 0.1562331068369997], 'true': [0.15849051453408355, nan], 'false,true,true': [nan, 1.5419764230904951e-18], 'false,true': [1.5419764230904951e-18, 3.0374026145405226e-17], 'false': [3.089316242435218e-17, nan]}, {'': [0.15631437472998772, 5.623904132814267e-07], 'false,true': [7.699203967507715e-06, 1.6326809185664067e-17], 'false': [5.623904132814267e-07, nan]}, {'': [0.0768948953075065, nan], 'true,true': [0.01277051457611408, 0.0], 'true': [0.025635089033216825, 0.05524633915594425], 'true,true,false': [nan, 0.0], 'true,false,false': [0.23319615912208516, -5.551115123125783e-18], 'true,false': [0.0, 0.059364482738778465]}, {'': [0.14052750224983937, 1.1148427458494568e-06], 'false,true': [7.728291562962761e-06, 2.0185873175002847e-17], 'false': [1.1148427458494568e-06, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.08373614322997605, nan], 'true,true': [0.02541298606978217, 4.163336342344337e-18], 'true': [0.03489841159848197, 0.07493900814006957], 'true,false,false': [0.1674966047985514, -4.9711478714559245e-18], 'true,false': [0.01573868657144195, 0.07857376770565959]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(A, E).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.14185106490048774;  // std dev = 3,16e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048763;  // std dev = 8,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109547;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.7194734122109546;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.1254446385283913;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462843;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.5553664367462844;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360649;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360644;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360649;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601498;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( actor(A) )
%   | | then return -0.092691276189261;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.13221537936718464;  // std dev = 0,137, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.08215477632231158;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.25517224256948934;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0950816718251931;  // std dev = 0,137, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, E) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 2,17e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07806151308603865;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.0761154865814877;  // std dev = 0,000184, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.15119897462369633;  // std dev = 0,076, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else return 0.12841874595193542;  // std dev = 0,099, 36,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.071737082065474;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07310391279081199;  // std dev = 0,005, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return 0.15433806833540312;  // std dev = 0,239, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15602835444519303;  // std dev = 0,000175, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.15892862343144157;  // std dev = 0,000845, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( actor(B) )
%   | | then if ( female(B), actor(A) )
%   | | | then return -0.06843605010290911;  // std dev = 5,89e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06768000903093777;  // std dev = 0,002, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.27562456307052935;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.06847510915943845;  // std dev = 4,81e-05, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(B) )
%   | | then return -0.06843605010290921;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( female(A) )
%   | | | then return -0.08425603004035201;  // std dev = 0,000210, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08355677409234004;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.12132623350034202;  // std dev = 0,292, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.07978983039860024;  // std dev = 0,608, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | else return -0.12535119436302822;  // std dev = 0,120, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( actor(B) )
%   | | then return -0.06383373707397025;  // std dev = 0,000780, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0641889488345116;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.06475722004439093;  // std dev = 0,391, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return -0.06549720282722447;  // std dev = 0,161, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064402
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.492 seconds
Total inference time: 1.882 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068391
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.086 seconds
Refined model CLL: -0.068391


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064402
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.706 seconds
Total inference time: 1.882 seconds
AUC ROC: 1.0
Total revision time: 8.706
Best scored revision CLL: -0.068391


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:01:31
{'Learning time': 8.706, 'parameter_0.2': {'Learning time': 1.684, 'CLL': -0.193757, 'Recall': 1.0, 'F1': 0.973913, 'Precision': [0.949153, 0.5], 'AUC PR': 1.0, 'Inference time': 2.378, 'AUC ROC': 1.0}, 'CLL': -0.064402, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 1.882, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839136;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.11231637819360621;  // std dev = 7,88e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783638;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.09269127618926097;  // std dev = 4,71e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.08518475138839683;  // std dev = 6,05e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07877675473109158;  // std dev = 6,83e-08, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0732462257633372;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1696235806256171;  // std dev = 0,349, 67,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=65 */
%   | else return -0.07324622576333706;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15371346363151872;  // std dev = 3,33e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06857031156946566;  // std dev = 0,017, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13476353169631963;  // std dev = 4,94e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06462980096536067;  // std dev = 0,028, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063413
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.713 seconds
Total inference time: 1.634 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 01:01:36
{'Learning time': 2.713, 'CLL': -0.063413, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.634, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1418510649004877;  // std dev = 5,96e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.972 seconds
Total inference time: 1.208 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 01:01:38
{'Learning time': 0.972, 'CLL': -0.152968, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.208, 'Precision': [nan, 0.5]}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4831489350995091;  // std dev = 6,982, 208,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.14185106490048838;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7613846014355847;  // std dev = 1,708, 110,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=107 */
%   | | else return 0.07615732870831307;  // std dev = 4,048, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.41373787256284184;  // std dev = 5,369, 180,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.11231637819360646;  // std dev = 0,000, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2762401671941946;  // std dev = 0,417, 193,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783652;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20046060956845305;  // std dev = 5,833, 197,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=130 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926089;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.09269127618926064;  // std dev = 6,18e-09, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4133205645490495;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.1847952127065773;  // std dev = 5,466, 187,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839678;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.08518475138839678;  // std dev = 5,43e-09, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13906824730232534;  // std dev = 5,466, 188,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0794512806950186;  // std dev = 0,009, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07877675473109147;  // std dev = 7,60e-08, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.31014800807067283;  // std dev = 1,681, 111,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=107 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07919384446341085;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( genre(A, F) )
%   | | then return -0.10914261088314832;  // std dev = 0,445, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2434024762222628;  // std dev = 4,153, 92,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=23 */
%   | | | else return -0.0732462257633368;  // std dev = 7,96e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08415560590830459;  // std dev = 5,065, 191,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06613224861956492;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.06842697784420261;  // std dev = 4,66e-09, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.22725496035903492;  // std dev = 1,709, 111,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=107 */
%   | | else return -0.06564046898346887;  // std dev = 0,012, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( genre(A, E) )
%   | | then return -0.1624990961445494;  // std dev = 0,712, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.18628133689409893;  // std dev = 4,105, 86,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.192433
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.999 seconds
Total inference time: 1.918 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.978709
   AUC PR    = 0.865723
   CLL	      = -0.185474
   Precision = 0.775362 at threshold = 0.5
   Recall    = 0.823077
   F1        = 0.798507


Total scoring time: 2.453 seconds
Parameter learned model CLL: -0.185474


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 3, 0], 'true': [6.982, 78, 130], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 196, 0], 'false,true,true,false': [1.05e-08, 21, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 202, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.048, 57, 23], 'true,true,true': [1.708, 3, 107]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 180, 0], 'true': [5.369, 50, 130], 'false,false': [0.0, 0, 0], 'false,true,true': [1.67e-08, 18, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.0, 197, 0], 'true,true': [0.417, 63, 130], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [5.833, 67, 130], 'false,false': [0.0, 0, 0], 'false,true,false': [6.18e-09, 176, 0], 'false,true,true,false': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [5.43e-09, 184, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.466, 57, 130], 'false,true,true,false': [7.45e-09, 18, 0], 'true,true,true': [2.11e-08, 9, 0], 'false,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [7.6e-08, 192, 0], 'true': [5.466, 58, 130], 'false,false': [0.0, 0, 0], 'false,true,true': [0.009, 19, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.445, 23, 0], 'true,true,false,false': [0.0, 23, 0], 'true,false,false,true': [4.153, 69, 23], 'true,true,true': [1.681, 4, 107], 'true,true,false,true': [0.0, 1, 0], 'true,false,false,false': [7.96e-08, 153, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [5.065, 61, 130], 'false,false': [0.0, 0, 0], 'false,true,false': [4.66e-09, 202, 0], 'false,true,true,false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.712, 28, 0], 'true,true,false': [0.012, 13, 0], 'true,true,true': [1.709, 4, 107], 'true,false,false,false': [0.0, 153, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [4.105, 63, 23]}]]
[{'': [0.23437500000000425, -2.34156128830033e-16], 'false,true': [9.25185853854297e-18, -2.333734112987574e-16], 'false': [-2.34156128830033e-16, nan], 'false,true,true': [0.0, 5.28677630773884e-18]}, {'': [0.21606648199446066, -3.7373844393322104e-17], 'true,true': [0.026528925619835192, 0.2048437500000003], 'true': [0.21606648199446066, nan], 'false': [-3.7373844393322104e-17, nan]}, {'': [0.16013831997965558, -3.812887155278315e-17], 'false,true': [1.5419764230904953e-17, -1.4802973661668754e-17], 'false': [-3.812887155278315e-17, nan]}, {'': [0.17369563387355488, -9.242465788757649e-17], 'true': [0.17369563387355488, nan], 'false': [-9.242465788757649e-17, nan]}, {'': [0.1727334445733977, 4.047118414889733e-17], 'false,true': [-6.1679056923619804e-18, 3.7848512203130334e-17], 'false': [4.047118414889733e-17, nan], 'false,true,true': [0.0, -5.337610695313253e-18]}, {'': [0.16810616475859352, 2.967922937116755e-17], 'true,true': [4.9343245538895844e-17, 0.15976988503965914], 'true': [0.16810616475859352, nan], 'false,true,true': [nan, 3.0839528461809902e-18], 'false,true': [3.0839528461809902e-18, 2.896233977283017e-17], 'false': [2.967922937116755e-17, nan]}, {'': [0.15893150104691836, 3.8552799905633323e-07], 'false,true': [3.867374846094457e-06, 3.0068540250264654e-17], 'false': [3.8552799905633323e-07, nan]}, {'': [0.0932937468432565, nan], 'true,true': [0.025463871813714213, 1.4125101885977913e-06], 'true': [0.042451109744455796, 0.07137318043729843], 'true,true,false': [0.0, -1.8101462358018856e-18], 'true,false,false': [0.1874999999999998, 4.1361249937015637e-17], 'true,false': [0.008612258903922783, 0.07719774316286]}, {'': [0.1343067770697096, 3.5811396594727766e-07], 'false,true': [0.0, 2.1984614349013002e-17], 'false': [3.5811396594727766e-07, nan], 'false,true,true': [nan, 0.0]}, {'': [0.07756503448235265, nan], 'true,true': [0.026320318301286366, 1.1541891317520388e-05], 'true': [0.03161310904449193, 0.0683556751180863], 'true,false,false': [0.19591671173607375, -1.0158903493302085e-17], 'true,false': [0.018121079729560004, 0.07393083462445708]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(A, E).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.14185106490048818;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( actor(A) )
%   | | then return -0.1254446385283916;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.16421512584355485;  // std dev = 0,067, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.1254446385283915;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else if ( actor(A) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.13036656644002032;  // std dev = 0,008, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462834;  // std dev = 4,15e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.10850861618730677;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.24860499936920985;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11370676284842725;  // std dev = 0,004, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(A) )
%   | | then return -0.11231637819360647;  // std dev = 2,95e-09, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11217643888722614;  // std dev = 0,000585, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783624;  // std dev = 3,95e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.128923125575677;  // std dev = 0,048, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.10159632948783645;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10151805308548555;  // std dev = 0,000319, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.10787188229156522;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601496;  // std dev = 1,67e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.08758398090554174;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.18488513287781783;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.10414959030438263;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926096;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926068;  // std dev = 6,18e-09, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09256958217223869;  // std dev = 0,000993, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08083304559766984;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10676436810905195;  // std dev = 0,090, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( female(B) )
%   | | | then return -0.0850443737822443;  // std dev = 0,004, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.08741027447153073;  // std dev = 0,072, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(B, E) )
%   | then if ( actor(A) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.09032587660875904;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then return -0.08517930167346568;  // std dev = 2,42e-05, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | | else return -0.08482232984854307;  // std dev = 0,000468, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253529;  // std dev = 1,42e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( director(A), actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07473537151005531;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324723800751311;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.07870117017413812;  // std dev = 0,000437, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.08051357997498856;  // std dev = 0,065, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.07874477024268738;  // std dev = 4,18e-05, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.08060222764934019;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then return -0.07877802716020153;  // std dev = 4,85e-06, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else return -0.07853131057798035;  // std dev = 0,000493, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17709649774527733;  // std dev = 2,11e-08, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return -0.07324613938934844;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.10046315244028703;  // std dev = 0,030, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return -0.068652817585886;  // std dev = 0,000551, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0732177021496466;  // std dev = 3,93e-05, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07314434479464134;  // std dev = 0,006, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | | | else return 0.10668071078424379;  // std dev = 0,637, 32,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15575585435708147;  // std dev = 0,004, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.15315579287675513;  // std dev = 0,002, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( actor(A) )
%   | | then return -0.06828598463638717;  // std dev = 0,000102, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( female(B) )
%   | | | then return -0.06526396611467986;  // std dev = 0,000461, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.081467901137846;  // std dev = 0,077, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.06894107082323064;  // std dev = 0,002, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07463972971230354;  // std dev = 0,022, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07108954258497695;  // std dev = 0,019, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.06840185368028529;  // std dev = 0,000298, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.09267199055879421;  // std dev = 0,583, 53,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=42 */
%   | | | else return 0.11226156202325735;  // std dev = 0,528, 73,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=65 */
%   | | else return -0.09104877956780333;  // std dev = 0,060, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return -0.06119205019526299;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06404584639088709;  // std dev = 0,000208, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.11365431635835589;  // std dev = 0,351, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return -0.06167299921304293;  // std dev = 0,365, 200,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063933
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.411 seconds
Total inference time: 2.157 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066142
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.506 seconds
Refined model CLL: -0.066142


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063933
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.369 seconds
Total inference time: 2.157 seconds
AUC ROC: 1.0
Total revision time: 11.369
Best scored revision CLL: -0.066142


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:01:54
{'Learning time': 11.369, 'CLL': -0.063933, 'parameter_0.4': {'Learning time': 1.999, 'CLL': -0.192433, 'Recall': 1.0, 'F1': 0.973913, 'Precision': [0.949153, 0.5], 'AUC PR': 1.0, 'Inference time': 1.918, 'AUC ROC': 1.0}, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 2.157, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.14185106490048843;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.12544463852839174;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.11231637819360683;  // std dev = 0,000, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 3,86e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783646;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2,53e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.09269127618926057;  // std dev = 6,32e-08, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5,96e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839683;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08518475138839678;  // std dev = 7,15e-08, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2,11e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109144;  // std dev = 6,14e-08, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07324622576333678;  // std dev = 1,20e-07, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420261;  // std dev = 5,96e-08, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06419184008202622;  // std dev = 3,73e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06419184008202623;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.385 seconds
Total inference time: 1.587 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 01:02:00
{'Learning time': 3.385, 'CLL': -0.063421, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.587, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.1418510649004884;  // std dev = 0,000, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.436 seconds
Total inference time: 1.151 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 01:02:02
{'Learning time': 1.436, 'CLL': -0.152968, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.151, 'Precision': [nan, 0.5]}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5282520278830137;  // std dev = 8,021, 291,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.14185106490048832;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7561971045742877;  // std dev = 1,975, 161,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=157 */
%   | | else return 0.05442312003520994;  // std dev = 5,255, 139,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839202;  // std dev = 0,000, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3859255520858722;  // std dev = 6,855, 280,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.11231637819360697;  // std dev = 0,000, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.26773933221970847;  // std dev = 0,416, 296,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.1015963294878366;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20074878709012772;  // std dev = 7,178, 297,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=195 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926087;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926082;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.09269127618926047;  // std dev = 6,18e-09, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.45366984022663354;  // std dev = 0,213, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.1762327345170199;  // std dev = 6,843, 286,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.0851847513883968;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839675;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.08518475138839678;  // std dev = 5,82e-09, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1331392950898339;  // std dev = 6,804, 289,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.07877675473109143;  // std dev = 5,58e-08, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.32748797949161207;  // std dev = 1,455, 160,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=157 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333689;  // std dev = 1,29e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( genre(A, F) )
%   | | then return -0.1658041149488919;  // std dev = 0,731, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1699517418723634;  // std dev = 5,096, 120,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   | | | else return -0.07324622576333667;  // std dev = 1,26e-07, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09519229500336401;  // std dev = 6,109, 281,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420267;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06275742072968962;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.06842697784420297;  // std dev = 0,000, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2390341692954044;  // std dev = 1,482, 160,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=157 */
%   | | else return -0.06419184008202607;  // std dev = 1,39e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( genre(A, E) )
%   | | then return -0.118771055951435;  // std dev = 0,648, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.18855751065066564;  // std dev = 5,233, 136,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=38 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.197986
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 2.74 seconds
Total inference time: 2.166 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.976934
   AUC PR    = 0.852294
   CLL	      = -0.188734
   Precision = 0.785 at threshold = 0.5
   Recall    = 0.805128
   F1        = 0.794937


Total scoring time: 2.378 seconds
Parameter learned model CLL: -0.188734


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 5, 0], 'true': [8.021, 96, 195], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 243, 0], 'false,true,true,false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 302, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.255, 101, 38], 'true,true,true': [1.975, 4, 157]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 284, 0], 'true': [6.855, 85, 195], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 33, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.0, 281, 0], 'true,true': [0.416, 101, 195], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [1.86e-09, 3, 0], 'true': [7.178, 102, 195], 'false,false': [0.0, 0, 0], 'false,true,false': [6.18e-09, 244, 0], 'false,true,true,false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [5.82e-09, 253, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [6.843, 91, 195], 'false,true,true,false': [0.0, 31, 0], 'true,true,true': [0.213, 8, 0], 'false,true,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [5.58e-08, 260, 0], 'true': [6.804, 94, 195], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.731, 34, 0], 'true,true,false,false': [1.29e-08, 26, 0], 'true,false,false,true': [5.096, 82, 38], 'true,true,true': [1.455, 3, 157], 'true,true,false,true': [0.0, 2, 0], 'true,false,false,false': [1.26e-07, 229, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 4, 0], 'true': [6.109, 86, 195], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 294, 0], 'false,true,true,false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.648, 35, 0], 'true,true,false': [1.39e-08, 30, 0], 'true,true,true': [1.482, 3, 157], 'true,false,false,false': [0.0, 226, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [5.233, 98, 38]}]]
[{'': [0.2210649378254911, -4.89804275569922e-17], 'false,true': [2.2970131543968756e-17, -1.5716737467944603e-16], 'false': [-4.89804275569922e-17, nan], 'false,true,true': [-2.7755575615628915e-18, 9.25185853854297e-18]}, {'': [0.22749999999999598, -8.528865619636965e-17], 'true,true': [0.02422746036032182, 0.1986439625278192], 'true': [0.22749999999999598, nan], 'false': [-8.528865619636965e-17, nan]}, {'': [0.1678153767629265, -5.463558102256291e-17], 'false,true': [-2.0185873175002847e-17, -1.1571338566515715e-16], 'false': [-5.463558102256291e-17, nan]}, {'': [0.17276871391397117, -6.005476859182342e-17], 'true': [0.17276871391397117, nan], 'false': [-6.005476859182342e-17, nan]}, {'': [0.17347991776647254, 5.719330732917473e-17], 'false,true': [-4.163336342344337e-18, 3.822079265102998e-17], 'false': [5.719330732917473e-17, nan], 'false,true,true': [1.1564823173178713e-18, -1.6326809185664067e-18]}, {'': [0.16994556507052216, 3.4280570584917116e-17], 'true,true': [0.005654536118204545, 0.16374445836415594], 'true': [0.16994556507052216, nan], 'false,true,true': [0.0, -4.476705744456276e-18], 'false,true': [-4.336808689942018e-18, 3.335057307174383e-17], 'false': [3.4280570584917116e-17, nan]}, {'': [0.1601693208999596, 5.472930403081757e-18], 'false,true': [-4.625929269271485e-18, 1.1956247957501686e-17], 'false': [5.472930403081757e-18, nan]}, {'': [0.09011740338786907, nan], 'true,true': [0.013229465139296303, 4.956352788505163e-18], 'true': [0.03161430845407184, 0.07139950836880864], 'true,true,false': [0.0, 6.4051328343759035e-18], 'true,false,false': [0.21638888888888935, 6.981315089345963e-17], 'true,false': [0.01570609855922334, 0.07651298791300822]}, {'': [0.13282233488580716, 1.9767532525594366e-06], 'false,true': [4.320137186359374e-06, -5.2867763077388404e-17], 'false': [1.9767532525594366e-06, nan], 'false,true,true': [0.0, -4.625929269271485e-18]}, {'': [0.07736855556494382, nan], 'true,true': [0.013725757202687405, 6.47630097698008e-18], 'true': [0.023784041003432357, 0.0733431289805353], 'true,false,false': [0.20134083044982645, -1.964996503761339e-18], 'true,false': [0.011990642755860419, 0.07926955789442669]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048768;  // std dev = 7,30e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.14185106490048813;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else return -0.12544463852839202;  // std dev = 0,000, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else return 0.5553664367462834;  // std dev = 4,08e-08, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.11231637819360633;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.11231637819360696;  // std dev = 0,000, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831;  // std dev = 1,97e-08, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else return 0.4175135841583097;  // std dev = 2,63e-08, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783615;  // std dev = 5,67e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783662;  // std dev = 0,000, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601502;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else return 0.3207118471601503;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926087;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926082;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926079;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926071;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | | else return -0.09269127618926086;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else if ( female(B) )
%   | | then return -0.0851847513883968;  // std dev = 3,61e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.08518475138839679;  // std dev = 2,08e-09, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839676;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.08518475138839675;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.08518475138839675;  // std dev = 5,48e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else return 0.2097577156325356;  // std dev = 1,44e-08, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109144;  // std dev = 7,30e-08, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | | | else return -0.07877675473109165;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109164;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109162;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527733;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.17208964327510493;  // std dev = 0,350, 100,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=98 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333693;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07324622576333695;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.12494176368098281;  // std dev = 0,704, 48,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=38 */
%   | | | else return -0.07324622576333716;  // std dev = 5,58e-08, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return 0.15516053274826028;  // std dev = 0,003, 91,000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else return 0.15375197694330422;  // std dev = 0,001, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420264;  // std dev = 1,32e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07416274367821155;  // std dev = 0,024, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06987601342332066;  // std dev = 0,018, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.06842697784420261;  // std dev = 3,48e-09, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.09367784444603183;  // std dev = 0,683, 74,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=59 */
%   | | | else return 0.10365814763121241;  // std dev = 0,774, 116,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=98 */
%   | | else return -0.0673267917221963;  // std dev = 0,010, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202612;  // std dev = 1,86e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.06419184008202616;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.12131456630536808;  // std dev = 0,359, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | else return -0.06098654253794659;  // std dev = 0,499, 341,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064036
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.15 seconds
Total inference time: 1.958 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065964
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.918 seconds
Refined model CLL: -0.065964


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064036
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.186 seconds
Total inference time: 1.958 seconds
AUC ROC: 1.0
Total revision time: 13.186
Best scored revision CLL: -0.065964


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:02:21
{'Learning time': 13.186, 'parameter_0.6': {'Learning time': 2.74, 'CLL': -0.197986, 'Recall': 1.0, 'F1': 0.973913, 'Precision': [0.949153, 0.5], 'AUC PR': 1.0, 'Inference time': 2.166, 'AUC ROC': 1.0}, 'CLL': -0.064036, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 1.958, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.14185106490048782;  // std dev = 1,03e-07, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.1254446385283921;  // std dev = 0,000, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.11231637819360675;  // std dev = 0,000, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.10159632948783655;  // std dev = 0,000, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 4,00e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.09269127618926058;  // std dev = 1,52e-07, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109143;  // std dev = 2,11e-08, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07324622576333706;  // std dev = 8,16e-08, 345,000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06842697784420318;  // std dev = 0,000, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.06419184008202589;  // std dev = 1,37e-07, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.842 seconds
Total inference time: 2.045 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 01:02:27
{'Learning time': 3.842, 'CLL': -0.063421, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 2.045, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048763;  // std dev = 2,11e-07, 388,000 (wgt'ed) examples reached here.  /* #neg=388 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.399 seconds
Total inference time: 1.156 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 01:02:29
{'Learning time': 1.399, 'CLL': -0.152968, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.156, 'Precision': [nan, 0.5]}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5197265432420018;  // std dev = 9,380, 393,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.14185106490048768;  // std dev = 9,68e-09, 326,000 (wgt'ed) examples reached here.  /* #neg=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7590221428141605;  // std dev = 2,210, 213,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=208 */
%   | | else return 0.062066213691037785;  // std dev = 6,121, 186,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839224;  // std dev = 0,000, 387,000 (wgt'ed) examples reached here.  /* #neg=387 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3822561472414364;  // std dev = 8,014, 376,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360622;  // std dev = 2,47e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.28559888333532296;  // std dev = 0,412, 384,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.1015963294878362;  // std dev = 7,57e-09, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18406944415382528;  // std dev = 8,490, 407,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=260 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926092;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.09269127618926044;  // std dev = 1,05e-08, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4439362638242557;  // std dev = 0,267, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.17727095050415034;  // std dev = 7,933, 382,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.08518475138839678;  // std dev = 6,25e-09, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12265724629784365;  // std dev = 8,055, 393,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.07877675473109141;  // std dev = 8,69e-08, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3274276517515073;  // std dev = 1,878, 213,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=208 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( genre(A, F) )
%   | | then return -0.14498372449525979;  // std dev = 0,833, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.12967594439072064;  // std dev = 5,797, 147,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
%   | | | else return -0.07324622576333707;  // std dev = 8,30e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06635948288610508;  // std dev = 7,533, 395,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0684269778442027;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06399325964529014;  // std dev = 1,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.0684269778442032;  // std dev = 0,000, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.25594845535286764;  // std dev = 1,216, 210,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=208 */
%   | | else return -0.06419184008202615;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( genre(A, E) )
%   | | then return -0.12004203762491589;  // std dev = 0,712, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.17048473258871236;  // std dev = 6,046, 175,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=52 */
%   | | | else return -0.06419184008202591;  // std dev = 1,26e-07, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.199902
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 2.733 seconds
Total inference time: 1.931 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.976058
   AUC PR    = 0.847939
   CLL	      = -0.19197
   Precision = 0.784906 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.792381


Total scoring time: 3.134 seconds
Parameter learned model CLL: -0.19197


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 4, 0], 'true': [9.38, 133, 260], 'false,false': [0.0, 0, 0], 'false,true,false': [9.68e-09, 326, 0], 'false,true,true,false': [4.08e-08, 39, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 387, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [6.121, 134, 52], 'true,true,true': [2.21, 5, 208]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 362, 0], 'true': [8.014, 116, 260], 'false,false': [0.0, 0, 0], 'false,true,true': [2.47e-08, 30, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [7.57e-09, 363, 0], 'true,true': [0.412, 124, 260], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 6, 0], 'true': [8.49, 147, 260], 'false,false': [0.0, 0, 0], 'false,true,false': [1.05e-08, 323, 0], 'false,true,true,false': [0.0, 35, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [6.25e-09, 355, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [7.933, 122, 260], 'false,true,true,false': [0.0, 32, 0], 'true,true,true': [0.267, 15, 0], 'false,true,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [8.69e-08, 362, 0], 'true': [8.055, 133, 260], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 35, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.833, 51, 0], 'true,true,false,false': [0.0, 32, 0], 'true,false,false,true': [5.797, 95, 52], 'true,true,true': [1.878, 5, 208], 'true,true,false,true': [0.0, 3, 0], 'true,false,false,false': [8.3e-08, 335, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [1.86e-09, 3, 0], 'true': [7.533, 135, 260], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 346, 0], 'false,true,true,false': [1.49e-08, 35, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.712, 43, 0], 'true,true,false': [7.45e-09, 43, 0], 'true,true,true': [1.216, 2, 208], 'true,false,false,false': [1.26e-07, 311, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [6.046, 123, 52]}]]
[{'': [0.22389267654695433, 1.805240690447409e-16], 'false,true': [4.6474452193611206e-17, 9.808105248222242e-17], 'false': [1.805240690447409e-16, nan], 'false,true,true': [0.0, 4.2700885562506023e-17]}, {'': [0.22700862431769378, -1.2622690719252425e-16], 'true,true': [0.02292314135202496, 0.20141056769568585], 'true': [0.22700862431769378, nan], 'false': [-1.2622690719252425e-16, nan]}, {'': [0.17079578017876995, -2.945489657168783e-17], 'false,true': [2.0354088784794535e-17, -3.680297319199414e-17], 'false': [-2.945489657168783e-17, nan]}, {'': [0.16937456083466584, 5.627576763940188e-17], 'true': [0.16937456083466584, nan], 'false': [5.627576763940188e-17, nan]}, {'': [0.17709963027927134, 9.516197353929913e-17], 'false,true': [-1.4893235696191125e-17, 1.1136602476116122e-16], 'false': [9.516197353929913e-17, nan], 'false,true,true': [0.0, -9.516197353929913e-18]}, {'': [0.172746988278734, 3.881499520540393e-17], 'true,true': [0.004760095755594781, 0.1647627880269731], 'true': [0.172746988278734, nan], 'false,true,true': [0.0, -8.673617379884035e-19], 'false,true': [-8.163404592832033e-19, 4.003057666254086e-17], 'false': [3.881499520540393e-17, nan]}, {'': [0.1651088637291505, 3.579560381662973e-17], 'false,true': [-7.930164461608261e-19, 2.085501814213001e-17], 'false': [3.579560381662973e-17, nan]}, {'': [0.08431959603645263, nan], 'true,true': [0.016551165692062723, -7.93016446160826e-18], 'true': [0.033674576733429766, 0.06521866361906367], 'true,true,false': [0.0, -7.806255641895632e-18], 'true,false,false': [0.22860845018279438, 2.0547411202017822e-17], 'true,false': [0.013600853057111943, 0.07039580340406444]}, {'': [0.14366712001455142, 1.628422879124125e-06], 'false,true': [1.4294148144607184e-06, -8.471065852631252e-17], 'false': [1.628422879124125e-06, nan], 'false,true,true': [1.1564823173178713e-18, 6.3441315692866086e-18]}, {'': [0.07600340228437513, nan], 'true,true': [0.007035668473106513, 1.290957005378089e-18], 'true': [0.020298521131235352, 0.07246323426152776], 'true,false,false': [0.20884897959183713, 5.140582493441239e-17], 'true,false': [0.011791686862172723, 0.07780618260352126]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048804;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.1418510649004877;  // std dev = 1,63e-07, 321,000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.12544463852839105;  // std dev = 8,02e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283922;  // std dev = 0,000, 383,000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,15e-08, 119,000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else return 0.5553664367462834;  // std dev = 4,15e-08, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.11231637819360626;  // std dev = 4,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360629;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.1123163781936062;  // std dev = 4,93e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.1123163781936066;  // std dev = 0,000, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783637;  // std dev = 0,000, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( female(B) )
%   | then return -0.10159632948783641;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014983;  // std dev = 5,27e-09, 119,000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else return 0.32071184716014944;  // std dev = 1,86e-08, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926092;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.09269127618926071;  // std dev = 7,30e-08, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else return 0.25517224256948934;  // std dev = 5,27e-09, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else if ( female(B) )
%   | | then return -0.0851847513883968;  // std dev = 2,46e-09, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.08518475138839679;  // std dev = 2,46e-09, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 3,33e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return -0.08518475138839678;  // std dev = 6,14e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253523;  // std dev = 1,34e-08, 119,000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else return 0.20975771563253526;  // std dev = 1,94e-08, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0787767547310917;  // std dev = 2,89e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109141;  // std dev = 1,86e-09, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109168;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07877675473109168;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1770964977452772;  // std dev = 2,11e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | | else return 0.16978722114648587;  // std dev = 0,493, 137,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=133 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.13015723708741236;  // std dev = 0,782, 64,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=52 */
%   | | | else return -0.07324622576333722;  // std dev = 0,000, 412,000 (wgt'ed) examples reached here.  /* #neg=412 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15502670451919406;  // std dev = 0,003, 119,000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else return 0.15398867358287663;  // std dev = 0,001, 141,000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420264;  // std dev = 5,19e-09, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420268;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07990221793825736;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420262;  // std dev = 2,63e-09, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0714080592747219;  // std dev = 0,025, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07421976107850708;  // std dev = 0,033, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.06842697784420307;  // std dev = 0,000, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then return 0.10864524592178532;  // std dev = 0,067, 239,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=208 */
%   | | else return -0.06419184008202612;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202614;  // std dev = 3,73e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.06419184008202615;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.08834277086896236;  // std dev = 0,757, 68,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=52 */
%   | | | else return -0.0641886274623328;  // std dev = 0,000968, 427,000 (wgt'ed) examples reached here.  /* #neg=427 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.743 seconds
Total inference time: 2.121 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065752
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.822 seconds
Refined model CLL: -0.065752


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.431999999999999 seconds
Total inference time: 2.121 seconds
AUC ROC: 1.0
Total revision time: 14.431999999999999
Best scored revision CLL: -0.065752


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:02:49
{'parameter_0.8': {'Learning time': 2.733, 'CLL': -0.199902, 'Recall': 1.0, 'F1': 0.973913, 'Precision': [0.949153, 0.5], 'AUC PR': 1.0, 'Inference time': 1.931, 'AUC ROC': 1.0}, 'Learning time': 14.431999999999999, 'CLL': -0.063847, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 2.121, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1418510649004874;  // std dev = 2,23e-07, 486,000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1254446385283923;  // std dev = 0,000, 498,000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,95e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.11231637819360599;  // std dev = 0,000, 471,000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783623;  // std dev = 3,33e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783595;  // std dev = 2,31e-07, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,33e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.09269127618926104;  // std dev = 1,17e-07, 442,000 (wgt'ed) examples reached here.  /* #neg=442 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.08518475138839678;  // std dev = 1,32e-07, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.07877675473109194;  // std dev = 0,000, 498,000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07324622576333722;  // std dev = 0,000, 461,000 (wgt'ed) examples reached here.  /* #neg=461 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.06842697784420346;  // std dev = 0,000, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080112;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.06419184008202579;  // std dev = 1,71e-07, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.535 seconds
Total inference time: 1.667 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 01:02:55
{'Learning time': 4.535, 'CLL': -0.063421, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.667, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.1418510649004872;  // std dev = 2,89e-07, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.679 seconds
Total inference time: 1.056 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 01:02:58
{'Learning time': 1.679, 'CLL': -0.152968, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.056, 'Precision': [nan, 0.5]}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5062602671074603;  // std dev = 10,711, 503,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.14185106490048718;  // std dev = 1,37e-08, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7556885960202065;  // std dev = 2,787, 275,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=267 */
%   | | else return 0.02364590187224431;  // std dev = 6,701, 247,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839233;  // std dev = 0,000, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3727987207784137;  // std dev = 9,129, 482,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360615;  // std dev = 3,33e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.1123163781936062;  // std dev = 0,000, 403,000 (wgt'ed) examples reached here.  /* #neg=403 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.29077226117290084;  // std dev = 0,409, 483,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783553;  // std dev = 1,45e-08, 467,000 (wgt'ed) examples reached here.  /* #neg=467 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23088049846128905;  // std dev = 8,805, 475,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=326 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926108;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.09269127618926096;  // std dev = 6,84e-09, 411,000 (wgt'ed) examples reached here.  /* #neg=411 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4565393673961152;  // std dev = 0,378, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.1925528758074443;  // std dev = 8,460, 463,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839686;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.08518475138839678;  // std dev = 6,59e-09, 425,000 (wgt'ed) examples reached here.  /* #neg=425 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09418629947785441;  // std dev = 9,225, 512,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.07877675473109169;  // std dev = 1,97e-07, 442,000 (wgt'ed) examples reached here.  /* #neg=442 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3382691696739743;  // std dev = 1,188, 269,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=267 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333707;  // std dev = 1,49e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( genre(A, F) )
%   | | then return -0.13389990338976454;  // std dev = 0,871, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.20079352841604395;  // std dev = 6,531, 213,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=59 */
%   | | | else return -0.07324622576333768;  // std dev = 0,000, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08331414015625803;  // std dev = 8,022, 482,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06466037681272314;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.06842697784420344;  // std dev = 0,000, 439,000 (wgt'ed) examples reached here.  /* #neg=439 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.23753223301565266;  // std dev = 2,080, 273,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=267 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( genre(A, E) )
%   | | then return -0.11041869768163141;  // std dev = 0,813, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.13475693287207244;  // std dev = 6,363, 188,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=59 */
%   | | | else return -0.06419184008202564;  // std dev = 1,86e-07, 385,000 (wgt'ed) examples reached here.  /* #neg=385 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.19527
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 3.24 seconds
Total inference time: 2.102 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.978388
   AUC PR    = 0.863056
   CLL	      = -0.187528
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total scoring time: 3.304 seconds
Parameter learned model CLL: -0.187528


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 4, 0], 'true': [10.711, 177, 326], 'false,false': [0.0, 0, 0], 'false,true,false': [1.37e-08, 452, 0], 'false,true,true,false': [4.94e-08, 47, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 489, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [6.701, 188, 59], 'true,true,true': [2.787, 8, 267]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 403, 0], 'true': [9.129, 156, 326], 'false,false': [0.0, 0, 0], 'false,true,true': [3.33e-08, 51, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [1.45e-08, 467, 0], 'true,true': [0.409, 157, 326], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 9, 0], 'true': [8.805, 149, 326], 'false,false': [0.0, 0, 0], 'false,true,false': [6.84e-09, 411, 0], 'false,true,true,false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [6.59e-09, 425, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [8.46, 137, 326], 'false,true,true,false': [2.24e-08, 42, 0], 'true,true,true': [0.378, 22, 0], 'false,true,true,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [1.97e-07, 442, 0], 'true': [9.225, 186, 326], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 43, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.871, 66, 0], 'true,true,false,false': [1.49e-08, 47, 0], 'true,false,false,true': [6.531, 154, 59], 'true,true,true': [1.188, 2, 267], 'true,true,false,true': [0.0, 6, 0], 'true,false,false,false': [0.0, 373, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 4, 0], 'true': [8.022, 156, 326], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 439, 0], 'false,true,true,false': [0.0, 48, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.813, 66, 0], 'true,true,false': [0.0, 50, 0], 'true,true,true': [2.08, 6, 267], 'true,false,false,false': [1.86e-07, 385, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [6.363, 129, 59]}]]
[{'': [0.2280630333308328, -3.88467698477192e-17], 'false,true': [5.659960517696876e-17, 1.8863966436108854e-16], 'false': [-3.88467698477192e-17, nan], 'false,true,true': [0.0, 5.196788625904988e-17]}, {'': [0.23449450242949696, -1.362236840030867e-16], 'true,true': [0.028244628099168227, 0.18180924125948444], 'true': [0.23449450242949696, nan], 'false': [-1.362236840030867e-16, nan]}, {'': [0.17291529910681627, -9.781700657490367e-18], 'false,true': [2.1769078914218755e-17, -1.7631333393550873e-17], 'false': [-9.781700657490367e-18, nan]}, {'': [0.16707012562405646, 2.0920690828054342e-16], 'true': [0.16707012562405646, nan], 'false': [2.0920690828054342e-16, nan]}, {'': [0.16322490055183522, -1.914177628664063e-18], 'false,true': [-3.142140635731575e-18, 4.538137910876552e-17], 'false': [-1.914177628664063e-18, nan], 'false,true,true': [0.0, -5.046468293750712e-18]}, {'': [0.16609941752224924, 4.516161456102332e-17], 'true,true': [0.006497363377957154, 0.15457164418464592], 'true': [0.16609941752224924, nan], 'false,true,true': [0.0, 1.1895246692412391e-17], 'false,true': [1.4173059888831785e-17, 4.388646309106501e-17], 'false': [4.516161456102332e-17, nan]}, {'': [0.16622975985404703, 3.845720992516006e-17], 'false,true': [0.0, 8.741122456324762e-17], 'false': [3.845720992516006e-17, nan]}, {'': [0.08993359296849807, nan], 'true,true': [0.005244962023987327, 2.09476042382105e-18], 'true': [0.02766732239068698, 0.06999048301451477], 'true,true,false': [0.0, 4.724353296277262e-18], 'true,false,false': [0.2002689060812464, -6.071997239236781e-17], 'true,false': [0.01149646440503314, 0.0765578679749479]}, {'': [0.13351622857833834, 1.2513569825640429e-06], 'false,true': [1.0073810648676792e-06, -1.2543749890981267e-16], 'false': [1.2513569825640429e-06, nan], 'false,true,true': [0.0, -8.673617379884035e-18]}, {'': [0.0695097349318111, nan], 'true,true': [0.015855026411847672, -3.3306690738754695e-18], 'true': [0.02531166891548032, 0.06542326229606142], 'true,false,false': [0.21534065187867796, 8.997132043715555e-17], 'true,false': [0.010013949563885353, 0.07175049323798434]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1418510649004881;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.1418510649004872;  // std dev = 2,98e-07, 434,000 (wgt'ed) examples reached here.  /* #neg=434 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else return -0.12544463852839233;  // std dev = 0,000, 474,000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.11231637819360626;  // std dev = 4,34e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360629;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360628;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.11231637819360629;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.1123163781936061;  // std dev = 0,000, 425,000 (wgt'ed) examples reached here.  /* #neg=425 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783649;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   else if ( female(B) )
%   | then return -0.10159632948783649;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else return -0.10159632948783658;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( genre(B, D) )
%   | then return -0.092691276189261;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926043;  // std dev = 1,99e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926092;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948917;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.2551722425694885;  // std dev = 1,24e-08, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 1,61e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,29e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.08518475138839679;  // std dev = 2,36e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839678;  // std dev = 2,28e-09, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,17e-07, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
%   | | | else return -0.08518475138839683;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.08518475138839678;  // std dev = 2,28e-09, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253504;  // std dev = 1,67e-08, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.20975771563253492;  // std dev = 1,97e-08, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 2,08e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109162;  // std dev = 4,34e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0787767547310918;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.07877675473109161;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else return -0.07877675473109144;  // std dev = 5,82e-09, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.1372188957704534;  // std dev = 0,974, 113,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=95 */
%   | | | else return 0.14644228670340645;  // std dev = 1,149, 196,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=172 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.11611557791625582;  // std dev = 0,949, 78,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=59 */
%   | | | else return -0.07324622576333725;  // std dev = 0,000, 499,000 (wgt'ed) examples reached here.  /* #neg=499 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1589253875434085;  // std dev = 0,001, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.15699675460539164;  // std dev = 0,000963, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420265;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06842697784420264;  // std dev = 1,05e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.06842697784420261;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420262;  // std dev = 2,63e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08288754051283018;  // std dev = 0,003, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.08297755982253216;  // std dev = 0,006, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.06842697784420325;  // std dev = 0,000, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13796587847124006;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | | else return 0.1314143655642281;  // std dev = 0,444, 177,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=172 */
%   | | else if ( actor(A) )
%   | | | then return -0.07740346969350372;  // std dev = 0,002, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.09444379169265953;  // std dev = 0,767, 75,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=59 */
%   | | | else return -0.06419184008202541;  // std dev = 2,45e-07, 511,000 (wgt'ed) examples reached here.  /* #neg=511 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063893
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.162 seconds
Total inference time: 2.892 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06578
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.835 seconds
Refined model CLL: -0.06578


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063893
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.541 seconds
Total inference time: 2.892 seconds
AUC ROC: 1.0
Total revision time: 16.541
Best scored revision CLL: -0.06578


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:03:21
{'Learning time': 16.541, 'CLL': -0.063893, 'parameter_1.0': {'Learning time': 3.24, 'CLL': -0.19527, 'Recall': 1.0, 'F1': 0.973913, 'Precision': [0.949153, 0.5], 'AUC PR': 1.0, 'Inference time': 2.102, 'AUC ROC': 1.0}, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 2.892, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.1418510649004883;  // std dev = 0,000, 581,000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1254446385283923;  // std dev = 0,000, 596,000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360565;  // std dev = 0,000, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.10159632948783563;  // std dev = 3,31e-07, 600,000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.0926912761892617;  // std dev = 0,000, 590,000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.08518475138839678;  // std dev = 1,49e-07, 615,000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,46e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109177;  // std dev = 1,05e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07877675473109237;  // std dev = 0,000, 582,000 (wgt'ed) examples reached here.  /* #neg=582 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452765;  // std dev = 2,76e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333692;  // std dev = 1,50e-07, 595,000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420268;  // std dev = 1,97e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06842697784420364;  // std dev = 0,000, 592,000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06419184008202555;  // std dev = 2,37e-07, 595,000 (wgt'ed) examples reached here.  /* #neg=595 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.001 seconds
Total inference time: 1.553 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 01:03:27
{'Learning time': 5.001, 'CLL': -0.063421, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.553, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048857;  // std dev = 0,000, 621,000 (wgt'ed) examples reached here.  /* #neg=621 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.684 seconds
Total inference time: 1.083 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 01:03:30
{'Learning time': 1.684, 'CLL': -0.152968, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.083, 'Precision': [nan, 0.5]}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.46192252000517364;  // std dev = 5,036, 106,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14185106490048763;  // std dev = 8,93e-09, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7921736059452207;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return 0.09217360594522109;  // std dev = 3,240, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12565231481158254;  // std dev = 0,002, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.35355863468344234;  // std dev = 4,289, 98,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11354041676543786;  // std dev = 0,014, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.11229567424248192;  // std dev = 4,71e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.24714539744942535;  // std dev = 0,432, 104,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.1020166359545447;  // std dev = 0,002, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2056187579534461;  // std dev = 4,278, 101,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=64 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09264021691414383;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09262729160076999;  // std dev = 3,44e-05, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.3918407930849767;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.2052342040797604;  // std dev = 3,920, 93,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.10515553628614664;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.08514141614098354;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08513333790644632;  // std dev = 2,82e-05, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16952254854092744;  // std dev = 3,777, 92,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08205335122698088;  // std dev = 0,022, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0787409087884304;  // std dev = 4,56e-06, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.34633789875830745;  // std dev = 1,19e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07321385041261162;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, F) )
%   | | then return -0.07290664951411885;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.14289049896340353;  // std dev = 3,144, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.07321527559135825;  // std dev = 2,24e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.039943904099002024;  // std dev = 3,976, 104,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06812965795833556;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06839972996862724;  // std dev = 4,13e-07, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.24735809878437676;  // std dev = 0,861, 50,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | | else return -0.06724549396768059;  // std dev = 0,023, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(A, E) )
%   | | then return -0.13118517601680799;  // std dev = 0,404, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.10931816348463423;  // std dev = 3,125, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.06416794567590621;  // std dev = 1,29e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.192728
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.528 seconds
Total inference time: 1.707 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.97176
   AUC PR    = 0.820989
   CLL	      = -0.197418
   Precision = 0.777778 at threshold = 0.5
   Recall    = 0.765625
   F1        = 0.771654


Total scoring time: 1.735 seconds
Parameter learned model CLL: -0.197418


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [5.036, 42, 64], 'false,false': [0.0, 0, 0], 'false,true,false': [8.93e-09, 96, 0], 'false,true,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.002, 79, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [3.24, 35, 15], 'true,true,true': [0.0, 0, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [4.71e-08, 82, 0], 'true': [4.289, 34, 64], 'false,false': [0.0, 0, 0], 'false,true,true': [0.014, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.002, 91, 0], 'true,true': [0.432, 40, 64], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [4.278, 37, 64], 'false,false': [0.0, 0, 0], 'false,true,false': [3.44e-05, 89, 0], 'false,true,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [2.82e-05, 96, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [3.92, 29, 64], 'false,true,true,false': [0.0, 6, 0], 'true,true,true': [1.05e-08, 6, 0], 'false,true,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [4.56e-06, 97, 0], 'true': [3.777, 28, 64], 'false,false': [0.0, 0, 0], 'false,true,true': [0.022, 10, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 6, 0], 'true,false,false,true': [3.144, 29, 15], 'true,true,true': [1.19e-07, 0, 49], 'true,true,false,true': [0.0, 0, 0], 'true,false,false,false': [2.24e-08, 73, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [3.976, 40, 64], 'false,false': [0.0, 0, 0], 'false,true,false': [4.13e-07, 96, 0], 'false,true,true,false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.404, 12, 0], 'true,true,false': [0.023, 8, 0], 'true,true,true': [0.861, 1, 49], 'true,false,false,false': [1.29e-08, 82, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [3.125, 28, 15]}]]
[{'': [0.23923104307582715, 7.190015778524824e-17], 'false,true': [-9.25185853854297e-18, 7.864079757761526e-17], 'false': [7.190015778524824e-17, nan], 'false,true,true': [nan, -9.25185853854297e-18]}, {'': [0.22854810733598516, 3.364096210790464e-06], 'true,true': [-5.075305255429287e-16, 0.20999999999999971], 'true': [0.22854810733598516, nan], 'false': [3.364096210790464e-06, nan]}, {'': [0.1876752331099127, 2.348274087598488e-06], 'false,true': [1.704322343299101e-05, 2.7078610356711135e-17], 'false': [2.348274087598488e-06, nan]}, {'': [0.1865942107370407, 5.880276992457286e-06], 'true': [0.1865942107370407, nan], 'false': [5.880276992457286e-06, nan]}, {'': [0.18116097949886376, 1.0897743682515305e-09], 'false,true': [0.0, 1.1846336957580565e-09], 'false': [1.0897743682515305e-09, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1755125236054644, 7.561516428552645e-06], 'true,true': [1.850371707708594e-17, 0.16522993936218577], 'true': [0.1755125236054644, nan], 'false,true,true': [0.0, -1.1564823173178713e-18], 'false,true': [7.510593847219298e-05, 7.978638583150399e-10], 'false': [7.561516428552645e-06, nan]}, {'': [0.15506840812101413, 5.257546564238776e-06], 'false,true': [4.630891749970722e-05, 2.146461702537148e-13], 'false': [5.257546564238776e-06, nan]}, {'': [0.09458219268384607, nan], 'true,true': [2.900174431673878e-16, -2.3129646346357427e-18], 'true': [0.01710775505729576, 0.08019920688712999], 'true,true,false': [nan, -2.3129646346357427e-18], 'true,false,false': [0.22469008264462811, 6.843840562757814e-18], 'true,false': [0.0, 0.08563793109078735]}, {'': [0.1520153223310761, 6.232028071268725e-09], 'false,true': [0.0, 1.7023304062687336e-13], 'false': [6.232028071268725e-09, nan], 'false,true,true': [nan, 0.0]}, {'': [0.07602254630300151, nan], 'true,true': [0.014810526961225375, 6.634978902907585e-05], 'true': [0.024545625065001214, 0.0731153867300093], 'true,false,false': [0.2271498107084911, 2.030895776753335e-18], 'true,false': [0.013569998158479792, 0.07859956046355995]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;true;genre(A, E).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.14185106490048774;  // std dev = 2,58e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109542;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.6682662576206911;  // std dev = 0,202, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else if ( director(B), female(A) )
%   | | then return 0.7194734122109542;  // std dev = 1,05e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.12544463852839138;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.5679727573663106;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( actor(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.12750606842657655;  // std dev = 0,037, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.1002182639109014;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.4269299652219587;  // std dev = 1,18e-08, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( female(A) )
%   | then return -0.10159632948783631;  // std dev = 1,83e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.3271028350414705;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.11867171520484784;  // std dev = 0,054, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926097;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11029301941801456;  // std dev = 0,154, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08502421567977637;  // std dev = 0,003, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(A) )
%   | | | then return 0.25517224256948956;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.25952847539099166;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( genre(B, E) )
%   | then return -0.08518475138839687;  // std dev = 9,31e-10, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 2,04e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.08518475138839683;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253545;  // std dev = 7,90e-09, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.21283021520343873;  // std dev = 5,27e-09, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07878840575224631;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.11359454904515184;  // std dev = 0,068, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.1785201402876753;  // std dev = 0,008, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.0962659356781811;  // std dev = 0,126, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( female(B) )
%   | | then return -0.07162434198913943;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0723194350352241;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324764430590729;  // std dev = 3,75e-05, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | | else return 0.13115108297361897;  // std dev = 0,440, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15538944449241077;  // std dev = 0,003, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.1545567659411184;  // std dev = 2,63e-09, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( actor(A) )
%   | | then return -0.06843005115695185;  // std dev = 4,47e-06, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.09228222197384989;  // std dev = 0,052, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.06853043677644817;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06823408139462454;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08266244609135126;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07198584490598986;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06840751679890059;  // std dev = 0,000167, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13353550236595613;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.13542075314571594;  // std dev = 2,11e-08, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.0635969805640858;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( female(B) )
%   | | then return -0.06287527818261208;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06425913391814106;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06413880346975177;  // std dev = 0,006, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | | else return 0.10303249598974168;  // std dev = 0,342, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063493
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.618 seconds
Total inference time: 2.213 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066398
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.961 seconds
Refined model CLL: -0.066398


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063493
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.842 seconds
Total inference time: 2.213 seconds
AUC ROC: 1.0
Total revision time: 8.842
Best scored revision CLL: -0.066398


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:03:44
{'Learning time': 8.842, 'parameter_0.2': {'Learning time': 1.528, 'CLL': -0.192728, 'Recall': 1.0, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 1.0, 'Inference time': 1.707, 'AUC ROC': 1.0}, 'CLL': -0.063493, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 2.213, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1418510649004877;  // std dev = 5,96e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839116;  // std dev = 7,88e-08, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360628;  // std dev = 6,83e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783627;  // std dev = 4,21e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926098;  // std dev = 4,47e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839683;  // std dev = 5,58e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109166;  // std dev = 4,94e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333711;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.06842697784420268;  // std dev = 4,08e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1309578166220104;  // std dev = 0,197, 65,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=64 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063443
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.56 seconds
Total inference time: 2.003 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 01:03:49
{'Learning time': 2.56, 'CLL': -0.063443, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 2.003, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.055 seconds
Total inference time: 1.212 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 01:03:51
{'Learning time': 1.055, 'CLL': -0.152985, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.212, 'Precision': [nan, 0.5]}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5335416052565773;  // std dev = 6,471, 191,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.14185106490048832;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7507241160276138;  // std dev = 1,706, 102,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=99 */
%   | | else return 0.09263588073349548;  // std dev = 4,541, 96,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839166;  // std dev = 0,000, 201,000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34288777065790316;  // std dev = 6,075, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11231637819360667;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.26200120931455945;  // std dev = 0,427, 201,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.1015963294878365;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22635861750914366;  // std dev = 5,818, 191,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=129 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926087;  // std dev = 6,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.09269127618926064;  // std dev = 6,32e-09, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4559457077454148;  // std dev = 0,141, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.17569763036872674;  // std dev = 5,715, 191,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839678;  // std dev = 6,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.08518475138839678;  // std dev = 5,27e-09, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15378530981325306;  // std dev = 5,499, 185,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07877675473109146;  // std dev = 8,02e-08, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3356434413125976;  // std dev = 0,843, 100,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=99 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.073246225763337;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( genre(A, F) )
%   | | then return -0.1764579115395686;  // std dev = 0,603, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.18744870214637221;  // std dev = 4,552, 97,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | | else return -0.07324622576333682;  // std dev = 7,38e-08, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.045186328112908215;  // std dev = 5,602, 206,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0684269778442027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.062133687280219396;  // std dev = 2,63e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.06842697784420261;  // std dev = 3,73e-09, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.25528228240173034;  // std dev = 0,857, 100,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=99 */
%   | | else return -0.06419184008202614;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( genre(A, E) )
%   | | then return -0.12275275659835021;  // std dev = 0,497, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.16712169130326993;  // std dev = 4,602, 102,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.187365
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.929 seconds
Total inference time: 1.901 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.971421
   AUC PR    = 0.821558
   CLL	      = -0.19293
   Precision = 0.773438 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.770428


Total scoring time: 2.121 seconds
Parameter learned model CLL: -0.19293


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 7, 0], 'true': [6.471, 62, 129], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 185, 0], 'false,true,true,false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 201, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.541, 66, 30], 'true,true,true': [1.706, 3, 99]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 210, 0], 'true': [6.075, 70, 129], 'false,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.0, 185, 0], 'true,true': [0.427, 72, 129], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 4, 0], 'true': [5.818, 62, 129], 'false,false': [0.0, 0, 0], 'false,true,false': [6.32e-09, 163, 0], 'false,true,true,false': [6.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [5.27e-09, 174, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.715, 62, 129], 'false,true,true,false': [6.45e-09, 16, 0], 'true,true,true': [0.141, 4, 0], 'false,true,true,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [8.02e-08, 189, 0], 'true': [5.499, 56, 129], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.603, 21, 0], 'true,true,false,false': [0.0, 19, 0], 'true,false,false,true': [4.552, 67, 30], 'true,true,true': [0.843, 1, 99], 'true,true,false,true': [0.0, 1, 0], 'true,false,false,false': [7.38e-08, 147, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [5.602, 77, 129], 'false,false': [0.0, 0, 0], 'false,true,false': [3.73e-09, 152, 0], 'false,true,true,false': [2.63e-09, 16, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.497, 20, 0], 'true,true,false': [0.0, 18, 0], 'true,true,true': [0.857, 1, 99], 'true,false,false,false': [0.0, 163, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [4.602, 72, 30]}]]
[{'': [0.21923741125517823, -2.3684757858670006e-16], 'false,true': [1.3322676295501878e-17, -2.1124243495570547e-16], 'false': [-2.3684757858670006e-16, nan], 'false,true,true': [-7.93016446160826e-18, -3.0839528461809902e-18]}, {'': [0.22704315886134022, -3.5350384863686576e-17], 'true,true': [0.02854671280276568, 0.21484375000000122], 'true': [0.22704315886134022, nan], 'false': [-3.5350384863686576e-17, nan]}, {'': [0.18547206058532878, -6.430251002353848e-17], 'false,true': [5.046468293750712e-18, -5.2867763077388404e-17], 'false': [-6.430251002353848e-17, nan]}, {'': [0.18261554184016154, -9.121832418541827e-17], 'true': [0.18261554184016154, nan], 'false': [-9.121832418541827e-17, nan]}, {'': [0.17722855514670452, 4.29368020573265e-17], 'false,true': [0.0, 4.0867105200926006e-17], 'false': [4.29368020573265e-17, nan], 'false,true,true': [0.0, 2.9738116731030977e-18]}, {'': [0.1756193529165567, 2.960594732333751e-17], 'true,true': [0.004984517446854159, 0.1710087894969356], 'true': [0.1756193529165567, nan], 'false,true,true': [0.0, 2.6020852139652106e-18], 'false,true': [3.96508223080413e-18, 2.807460522040626e-17], 'false': [2.960594732333751e-17, nan]}, {'': [0.1634388305689143, 2.4435530685529762e-17], 'false,true': [-4.8572257327350596e-18, 3.407033620542808e-17], 'false': [2.4435530685529762e-17, nan]}, {'': [0.09875104699998122, nan], 'true,true': [0.007110001635570687, -2.0816681711721684e-18], 'true': [0.029145940229845853, 0.08268664989687567], 'true,true,false': [0.0, -7.304098846218135e-19], 'true,false,false': [0.21362525241789843, 3.700743415417188e-17], 'true,false': [0.01731055963125378, 0.0880484292537045]}, {'': [0.15234216745040707, 3.3946388077733673e-06], 'false,true': [2.192692380495791e-06, 1.3877787807814457e-17], 'false': [3.3946388077733673e-06, nan], 'false,true,true': [0.0, 4.336808689942018e-19]}, {'': [0.08062748699382448, nan], 'true,true': [0.007342203187797072, 0.0], 'true': [0.01941630885537079, 0.07752526188253062], 'true,false,false': [0.20761245674740483, -8.173421040185202e-18], 'true,false': [0.012342892758738625, 0.0824195053786504]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.14185106490048832;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.12544463852839163;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 3,49e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.5553664367462837;  // std dev = 3,49e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11231637819360647;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.10159632948783649;  // std dev = 0,000, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926087;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926087;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.09269127618926097;  // std dev = 1,05e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839679;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839678;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.20975771563253567;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.08091275361686011;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109164;  // std dev = 1,18e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07877675473109169;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109169;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.07877675473109161;  // std dev = 3,73e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527753;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.17292411902013377;  // std dev = 0,248, 60,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.07616678097863219;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07322884231150148;  // std dev = 4,71e-05, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.15433806833540345;  // std dev = 0,413, 33,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | | else return -0.07324622576333667;  // std dev = 1,28e-07, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15388561696078903;  // std dev = 0,001, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.15347427573647132;  // std dev = 0,000652, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( actor(B) )
%   | | then return -0.06842717224976355;  // std dev = 4,21e-07, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.08006618883155354;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.0737147565423483;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06841297092769867;  // std dev = 4,28e-05, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420261;  // std dev = 3,73e-09, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else if ( actor(A) )
%   | | | then return -0.07432570205555192;  // std dev = 0,034, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06824104234201415;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.13419186508568642;  // std dev = 0,003, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | | | else return -0.06383840596072111;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.06967116300088338;  // std dev = 0,006, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( female(B) )
%   | | then return -0.06419346983365677;  // std dev = 3,91e-07, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06418483810642486;  // std dev = 3,19e-05, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419183635928646;  // std dev = 7,52e-08, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | | | else return 0.08307535094118815;  // std dev = 0,586, 40,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063442
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.577 seconds
Total inference time: 2.268 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065141
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.143 seconds
Refined model CLL: -0.065141


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063442
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.77 seconds
Total inference time: 2.268 seconds
AUC ROC: 1.0
Total revision time: 10.77
Best scored revision CLL: -0.065141


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:04:07
{'Learning time': 10.77, 'CLL': -0.063442, 'parameter_0.4': {'Learning time': 1.929, 'CLL': -0.187365, 'Recall': 1.0, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 1.0, 'Inference time': 1.901, 'AUC ROC': 1.0}, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 2.268, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1418510649004884;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.12544463852839174;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.11231637819360668;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.10159632948783652;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.09269127618926058;  // std dev = 5,77e-08, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.08518475138839678;  // std dev = 7,88e-08, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07877675473109146;  // std dev = 6,83e-08, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.0732462257633367;  // std dev = 1,24e-07, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06842697784420276;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.06419184008202623;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.313 seconds
Total inference time: 1.801 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 01:04:12
{'Learning time': 3.313, 'CLL': -0.063422, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.801, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048846;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.212 seconds
Total inference time: 1.099 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 01:04:15
{'Learning time': 1.212, 'CLL': -0.152985, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.099, 'Precision': [nan, 0.5]}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5202649760551399;  // std dev = 8,096, 293,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.14185106490048796;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7695841554399985;  // std dev = 1,405, 156,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=154 */
%   | | else return 0.09009697595281867;  // std dev = 5,262, 130,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.125444638528392;  // std dev = 0,000, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3613954261578762;  // std dev = 7,158, 289,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.11231637819360692;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.26520389960070656;  // std dev = 0,422, 297,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.1015963294878365;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #neg=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19980964835171572;  // std dev = 7,241, 299,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=194 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926092;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926086;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.09269127618926047;  // std dev = 6,45e-09, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4942950888411793;  // std dev = 0,206, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.15962518048579857;  // std dev = 7,125, 295,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.0851847513883968;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.08518475138839678;  // std dev = 6,04e-09, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12598007041060313;  // std dev = 7,024, 295,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.07877675473109143;  // std dev = 5,37e-08, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3431366540841469;  // std dev = 1,182, 156,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=154 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.073246225763337;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( genre(A, F) )
%   | | then return -0.1102476599877164;  // std dev = 0,520, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.17757347950308283;  // std dev = 5,280, 132,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return -0.07324622576333677;  // std dev = 1,20e-07, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07417714146560193;  // std dev = 6,468, 297,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420267;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06610566500405295;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.06842697784420283;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.248840576825723;  // std dev = 1,468, 157,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=154 */
%   | | else return -0.0641918400820261;  // std dev = 9,86e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( genre(A, E) )
%   | | then return -0.14323018678331956;  // std dev = 0,557, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1563606710097673;  // std dev = 5,297, 134,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | | | else return -0.06419184008202625;  // std dev = 1,05e-08, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.185925
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.642 seconds
Total inference time: 1.982 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.974445
   AUC PR    = 0.842204
   CLL	      = -0.192147
   Precision = 0.781726 at threshold = 0.5
   Recall    = 0.793814
   F1        = 0.787724


Total scoring time: 2.746 seconds
Parameter learned model CLL: -0.192147


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 3, 0], 'true': [8.096, 99, 194], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 283, 0], 'false,true,true,false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 291, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.262, 90, 40], 'true,true,true': [1.405, 2, 154]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 266, 0], 'true': [7.158, 95, 194], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 31, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.0, 326, 0], 'true,true': [0.422, 103, 194], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 5, 0], 'true': [7.241, 105, 194], 'false,false': [0.0, 0, 0], 'false,true,false': [6.45e-09, 246, 0], 'false,true,true,false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [6.04e-09, 293, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [7.125, 101, 194], 'false,true,true,false': [0.0, 29, 0], 'true,true,true': [0.206, 6, 0], 'false,true,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [5.37e-08, 272, 0], 'true': [7.024, 101, 194], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 30, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.52, 34, 0], 'true,true,false,false': [0.0, 26, 0], 'true,false,false,true': [5.28, 92, 40], 'true,true,true': [1.182, 2, 154], 'true,true,false,true': [0.0, 6, 0], 'true,false,false,false': [1.2e-07, 248, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [2.63e-09, 7, 0], 'true': [6.468, 103, 194], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 267, 0], 'false,true,true,false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.557, 22, 0], 'true,true,false': [9.86e-09, 30, 0], 'true,true,true': [1.468, 3, 154], 'true,false,false,false': [1.05e-08, 218, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [5.297, 94, 40]}]]
[{'': [0.2237183892648769, 3.8106664871622534e-17], 'false,true': [2.7755575615628915e-18, -1.5692198227917407e-17], 'false': [3.8106664871622534e-17, nan], 'false,true,true': [0.0, -3.2653618371328133e-18]}, {'': [0.21820137904053993, -8.240830698248585e-17], 'true,true': [0.012656147271529541, 0.21301775147928967], 'true': [0.21820137904053993, nan], 'false': [-8.240830698248585e-17, nan]}, {'': [0.17728923918490697, -8.821974202408652e-17], 'false,true': [-1.7906822977825105e-17, -1.0350951507783414e-16], 'false': [-8.821974202408652e-17, nan]}, {'': [0.1777808518783508, -2.179578944049387e-17], 'true': [0.1777808518783508, nan], 'false': [-2.179578944049387e-17, nan]}, {'': [0.17533653277899613, 6.344131569286608e-17], 'false,true': [1.02798428206033e-18, 4.1520535880290405e-17], 'false': [6.344131569286608e-17, nan], 'false,true,true': [-1.3877787807814458e-18, -5.046468293750712e-18]}, {'': [0.1771434455811459, 3.700743415417188e-17], 'true,true': [0.007075663846643376, 0.17207862967738563], 'true': [0.1771434455811459, nan], 'false,true,true': [0.0, -9.570888143320315e-19], 'false,true': [-1.7906822977825105e-18, 3.486024514181379e-17], 'false': [3.700743415417188e-17, nan]}, {'': [0.16725125972924665, 3.676235180878002e-18], 'false,true': [-4.625929269271485e-18, 1.0612425970681643e-17], 'false': [3.676235180878002e-18, nan]}, {'': [0.08959133625094481, nan], 'true,true': [0.008949456104270954, -9.540979117872439e-18], 'true': [0.0319136533543296, 0.07025709374738824], 'true,true,false': [-1.1564823173178713e-18, -8.540177112501205e-18], 'true,false,false': [0.21120293847566501, 5.819717467793159e-17], 'true,false': [0.007940815581034226, 0.07583271312544179]}, {'': [0.14085355874327624, 3.5628141861914283e-07], 'false,true': [1.0103424940928078e-06, -2.5780459747850078e-17], 'false': [3.5628141861914283e-07, nan], 'false,true,true': [9.912705577010326e-19, -1.32169407693471e-18]}, {'': [0.08020108425820367, nan], 'true,true': [0.013717747071253556, 3.23815048849004e-18], 'true': [0.02471528814579433, 0.07784676685006192], 'true,false,false': [0.20940075740699432, 5.0927661680053055e-19], 'true,false': [0.01409068655373517, 0.0817178912191355]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.14185106490048766;  // std dev = 7,74e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.14185106490048832;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return -0.12544463852839194;  // std dev = 0,000, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 4,01e-08, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.5553664367462834;  // std dev = 4,08e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360635;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.11231637819360683;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831;  // std dev = 2,11e-08, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.41751358415830975;  // std dev = 2,58e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.10159632948783662;  // std dev = 0,000, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601502;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.32071184716015033;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926092;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926079;  // std dev = 2,28e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926092;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( female(B) )
%   | | | then return -0.0926912761892609;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.09269127618926082;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 3,36e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.08518475138839679;  // std dev = 2,28e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839675;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.08518475138839676;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.08518475138839676;  // std dev = 3,16e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325355;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.2097577156325356;  // std dev = 1,44e-08, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109144;  // std dev = 7,60e-08, 201,000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | | else return -0.07877675473109164;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.07877675473109162;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527733;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.16943294498480937;  // std dev = 0,427, 98,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=95 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333693;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07324622576333693;  // std dev = 5,27e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.11932510001252031;  // std dev = 0,761, 52,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=40 */
%   | | | else return -0.073246225763337;  // std dev = 9,42e-08, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15547972772596994;  // std dev = 0,004, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.15419346096685152;  // std dev = 0,002, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420265;  // std dev = 4,59e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07701953903716469;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420264;  // std dev = 2,08e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420261;  // std dev = 3,61e-09, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | | else if ( actor(A) )
%   | | | then return -0.07206601219300503;  // std dev = 0,034, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.06842697784420264;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13368985246442855;  // std dev = 5,58e-08, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.13030707590997131;  // std dev = 0,300, 97,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=95 */
%   | | else if ( actor(A) )
%   | | | then return -0.06397358512403845;  // std dev = 1,49e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.06419184008202615;  // std dev = 1,32e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202589;  // std dev = 1,29e-07, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
%   | | | else return 0.11223715007075165;  // std dev = 0,496, 46,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06346
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.642 seconds
Total inference time: 2.146 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065213
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.796 seconds
Refined model CLL: -0.065213


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06346
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.826 seconds
Total inference time: 2.146 seconds
AUC ROC: 1.0
Total revision time: 13.826
Best scored revision CLL: -0.065213


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:04:34
{'Learning time': 13.826, 'parameter_0.6': {'Learning time': 2.642, 'CLL': -0.185925, 'Recall': 1.0, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 1.0, 'Inference time': 1.982, 'AUC ROC': 1.0}, 'CLL': -0.06346, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 2.146, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.1418510649004879;  // std dev = 0,000, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839205;  // std dev = 0,000, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936065;  // std dev = 0,000, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,82e-07, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.542526382612824;  // std dev = 0,092, 104,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=102 */
%   | else return -0.11231637819360632;  // std dev = 2,11e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41915710779160015;  // std dev = 0,022, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783634;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.10330633406467414;  // std dev = 0,216, 361,000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3218271470184109;  // std dev = 0,019, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.09354681955258384;  // std dev = 0,159, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25593363681149833;  // std dev = 0,017, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0851847513883968;  // std dev = 2,17e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.08598319782487686;  // std dev = 0,148, 334,000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21029572086164836;  // std dev = 0,015, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.07929388397660618;  // std dev = 0,124, 328,000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17749119533951666;  // std dev = 0,013, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07350811837914371;  // std dev = 0,101, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15304334013924362;  // std dev = 0,012, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.06866118820506587;  // std dev = 0,095, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134240877390322;  // std dev = 0,010, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.0647632537696474;  // std dev = 0,127, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.949 seconds
Total inference time: 1.833 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 01:04:40
{'Learning time': 3.949, 'CLL': -0.063211, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.833, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.14185106490048785;  // std dev = 9,42e-08, 338,000 (wgt'ed) examples reached here.  /* #neg=338 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.311 seconds
Total inference time: 1.283 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 01:04:42
{'Learning time': 1.311, 'CLL': -0.152985, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.283, 'Precision': [nan, 0.5]}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.49607996958226674;  // std dev = 9,684, 406,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.14185106490048763;  // std dev = 1,09e-08, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7633458303582231;  // std dev = 2,210, 216,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=211 */
%   | | else return 0.06884691968284178;  // std dev = 5,869, 170,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839224;  // std dev = 0,000, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3696258674589347;  // std dev = 8,198, 384,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360624;  // std dev = 1,97e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.11231637819360663;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #neg=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2974501458901487;  // std dev = 0,407, 379,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783619;  // std dev = 7,45e-09, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21212762452884001;  // std dev = 8,107, 388,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=259 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926092;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.09269127618926044;  // std dev = 1,02e-08, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.44419064318160845;  // std dev = 0,268, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.1695795474797097;  // std dev = 7,948, 383,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839678;  // std dev = 9,13e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.08518475138839678;  // std dev = 6,25e-09, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1166783692992479;  // std dev = 8,090, 393,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.07877675473109143;  // std dev = 5,16e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3406758811233493;  // std dev = 1,198, 213,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=211 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( genre(A, F) )
%   | | then return -0.14817786131176836;  // std dev = 0,768, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.15156965234946598;  // std dev = 5,667, 145,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | | else return -0.07324622576333699;  // std dev = 9,77e-08, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.030809228997558696;  // std dev = 7,866, 425,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0684269778442027;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06380220308765709;  // std dev = 7,45e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.06842697784420311;  // std dev = 0,000, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.25357791799751295;  // std dev = 1,712, 215,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=211 */
%   | | else return -0.06419184008202615;  // std dev = 7,45e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( genre(A, E) )
%   | | then return -0.11982308415461984;  // std dev = 0,723, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.19168065766121445;  // std dev = 5,956, 184,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=48 */
%   | | | else return -0.06419184008202597;  // std dev = 1,14e-07, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.181495
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.575 seconds
Total inference time: 2.175 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.977279
   AUC PR    = 0.858915
   CLL	      = -0.18685
   Precision = 0.787313 at threshold = 0.5
   Recall    = 0.814672
   F1        = 0.800759


Total scoring time: 2.666 seconds
Parameter learned model CLL: -0.18685


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 4, 0], 'true': [9.684, 147, 259], 'false,false': [0.0, 0, 0], 'false,true,false': [1.09e-08, 337, 0], 'false,true,true,false': [3.16e-08, 33, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 381, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.869, 122, 48], 'true,true,true': [2.21, 5, 211]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 326, 0], 'true': [8.198, 125, 259], 'false,false': [0.0, 0, 0], 'false,true,true': [1.97e-08, 27, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [7.45e-09, 362, 0], 'true,true': [0.407, 120, 259], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 4, 0], 'true': [8.107, 129, 259], 'false,false': [0.0, 0, 0], 'false,true,false': [1.02e-08, 310, 0], 'false,true,true,false': [0.0, 40, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [6.25e-09, 313, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [7.948, 124, 259], 'false,true,true,false': [9.13e-09, 22, 0], 'true,true,true': [0.268, 16, 0], 'false,true,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [5.16e-08, 335, 0], 'true': [8.09, 134, 259], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.768, 42, 0], 'true,true,false,false': [0.0, 34, 0], 'true,false,false,true': [5.667, 97, 48], 'true,true,true': [1.198, 2, 211], 'true,true,false,true': [0.0, 4, 0], 'true,false,false,false': [9.77e-08, 304, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 2, 0], 'true': [7.866, 166, 259], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 323, 0], 'false,true,true,false': [7.45e-09, 37, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.723, 46, 0], 'true,true,false': [7.45e-09, 45, 0], 'true,true,true': [1.712, 4, 211], 'true,false,false,false': [1.14e-07, 299, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [5.956, 136, 48]}]]
[{'': [0.23097502972651957, 1.8760988009708529e-16], 'false,true': [3.900783600034334e-17, 1.1859949224482385e-16], 'false': [1.8760988009708529e-16, nan], 'false,true,true': [0.0, 3.027880976250427e-17]}, {'': [0.2207643158205633, -1.2355237859345575e-16], 'true,true': [0.022612311385458186, 0.20262975778546655], 'true': [0.2207643158205633, nan], 'false': [-1.2355237859345575e-16, nan]}, {'': [0.17501985894303762, -3.7741292621818353e-17], 'false,true': [1.439177994884462e-17, -4.904052624111121e-17], 'false': [-3.7741292621818353e-17, nan]}, {'': [0.16596493196880976, 5.643122556105768e-17], 'true': [0.16596493196880976, nan], 'false': [5.643122556105768e-17, nan]}, {'': [0.16939564148247266, 1.1039505781583478e-16], 'false,true': [-1.6401021954689813e-17, 1.0314330035227261e-16], 'false': [1.1039505781583478e-16, nan], 'false,true,true': [0.0, -1.3877787807814457e-17]}, {'': [0.17299670740926537, 3.9650822308041306e-17], 'true,true': [0.004501580139249672, 0.16492934866263576], 'true': [0.17299670740926537, nan], 'false,true,true': [0.0, 3.784851220313033e-18], 'false,true': [2.413528314402514e-18, 3.83080149071939e-17], 'false': [3.9650822308041306e-17, nan]}, {'': [0.16651579792116708, 2.7165031453594255e-17], 'false,true': [-1.3539305178355568e-18, 7.95383659432948e-18], 'false': [2.7165031453594255e-17, nan]}, {'': [0.0868497142995173, nan], 'true,true': [0.0067432851096496825, -9.495328500083576e-18], 'true': [0.027734059750906464, 0.06801787906665305], 'true,true,false': [0.0, -8.163404592832034e-18], 'true,false,false': [0.22145065398335337, 3.140762503873798e-17], 'true,false': [0.014036875014907317, 0.07285656417882239]}, {'': [0.14556823132488192, 1.962678276861852e-06], 'false,true': [1.040599654574444e-06, -6.874445972911186e-17], 'false': [1.962678276861852e-06, nan], 'false,true,true': [0.0, 1.50030138462859e-18]}, {'': [0.07795549560412403, nan], 'true,true': [0.013634827473140277, 1.2335811384723962e-18], 'true': [0.025727001790297233, 0.07155733370364883], 'true,false,false': [0.19281663516068057, 4.3814821707614875e-17], 'true,false': [0.011350724180268624, 0.07728695728389856]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048788;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.14185106490048752;  // std dev = 2,44e-07, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.1254446385283912;  // std dev = 5,48e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.12544463852839116;  // std dev = 6,41e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.12544463852839224;  // std dev = 0,000, 402,000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,21e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0.5553664367462834;  // std dev = 4,21e-08, 137,000 (wgt'ed) examples reached here.  /* #pos=137 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360617;  // std dev = 9,88e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | | else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360629;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360629;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.11231637819360629;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.11231637819360651;  // std dev = 0,000, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783644;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else if ( female(A) )
%   | then return -0.10159632948783644;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601498;  // std dev = 9,13e-09, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0.32071184716014955;  // std dev = 1,67e-08, 137,000 (wgt'ed) examples reached here.  /* #pos=137 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( genre(B, D) )
%   | then return -0.092691276189261;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.09269127618926082;  // std dev = 5,87e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #pos=137 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 1,67e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.08518475138839678;  // std dev = 4,37e-09, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.08518475138839678;  // std dev = 2,58e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 1,49e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | | else return -0.08518475138839678;  // std dev = 4,83e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253523;  // std dev = 1,37e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0.20975771563253526;  // std dev = 1,49e-08, 137,000 (wgt'ed) examples reached here.  /* #pos=137 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109175;  // std dev = 1,97e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109172;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109143;  // std dev = 2,28e-09, 332,000 (wgt'ed) examples reached here.  /* #neg=332 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527714;  // std dev = 4,21e-08, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | | else return 0.16768511716224688;  // std dev = 0,549, 133,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=128 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.12374476978442528;  // std dev = 0,801, 61,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=48 */
%   | | | else return -0.07324622576333724;  // std dev = 0,000, 412,000 (wgt'ed) examples reached here.  /* #neg=412 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15499212735906126;  // std dev = 0,003, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0.15434755069849995;  // std dev = 0,001, 137,000 (wgt'ed) examples reached here.  /* #pos=137 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420265;  // std dev = 4,94e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | | else return -0.0684269778442027;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07979257572558496;  // std dev = 0,020, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420262;  // std dev = 2,63e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420301;  // std dev = 0,000, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
%   | | else if ( actor(A) )
%   | | | then return -0.07298550628838697;  // std dev = 0,042, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.06842697784420267;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1337463349029455;  // std dev = 8,43e-08, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | | else return 0.1268571809760729;  // std dev = 0,470, 133,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=128 */
%   | | else if ( actor(A) )
%   | | | then return -0.06391854699977449;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.06419184008202619;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202558;  // std dev = 1,98e-07, 405,000 (wgt'ed) examples reached here.  /* #neg=405 */
%   | | | else return 0.09110192673764421;  // std dev = 0,714, 62,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=48 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063464
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.315 seconds
Total inference time: 2.256 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065171
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.901 seconds
Refined model CLL: -0.065171


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063464
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.457 seconds
Total inference time: 2.256 seconds
AUC ROC: 1.0
Total revision time: 15.457
Best scored revision CLL: -0.065171


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:05:03
{'parameter_0.8': {'Learning time': 2.575, 'CLL': -0.181495, 'Recall': 1.0, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 1.0, 'Inference time': 2.175, 'AUC ROC': 1.0}, 'Learning time': 15.457, 'CLL': -0.063464, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 2.256, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.14185106490048724;  // std dev = 2,80e-07, 478,000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1254446385283913;  // std dev = 2,79e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.12544463852839227;  // std dev = 0,000, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.11231637819360615;  // std dev = 0,000, 505,000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783633;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.10159632948783606;  // std dev = 1,93e-07, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.09269127618926128;  // std dev = 0,000, 478,000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.08518475138839678;  // std dev = 1,28e-07, 475,000 (wgt'ed) examples reached here.  /* #neg=475 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.07877675473109204;  // std dev = 0,000, 511,000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.0732462257633372;  // std dev = 0,000, 473,000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06842697784420272;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.06842697784420346;  // std dev = 0,000, 475,000 (wgt'ed) examples reached here.  /* #neg=475 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06419184008202569;  // std dev = 1,89e-07, 469,000 (wgt'ed) examples reached here.  /* #neg=469 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.428 seconds
Total inference time: 1.973 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 01:05:10
{'Learning time': 4.428, 'CLL': -0.063422, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.973, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.14185106490048738;  // std dev = 2,27e-07, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.651 seconds
Total inference time: 1.076 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 01:05:13
{'Learning time': 1.651, 'CLL': -0.152985, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.076, 'Precision': [nan, 0.5]}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5126943896449625;  // std dev = 10,580, 495,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.14185106490048718;  // std dev = 1,39e-08, 445,000 (wgt'ed) examples reached here.  /* #neg=445 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7799313881326979;  // std dev = 0,998, 266,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=265 */
%   | | else return 0.07576999454973214;  // std dev = 6,463, 202,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839233;  // std dev = 0,000, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3364230893224873;  // std dev = 9,546, 503,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360618;  // std dev = 3,33e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.112316378193606;  // std dev = 0,000, 450,000 (wgt'ed) examples reached here.  /* #neg=450 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.28761843134111265;  // std dev = 0,411, 482,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783552;  // std dev = 1,47e-08, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21988058417349748;  // std dev = 8,982, 481,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=324 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.0926912761892611;  // std dev = 5,10e-09, 431,000 (wgt'ed) examples reached here.  /* #neg=431 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4398649680707802;  // std dev = 0,274, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.17701724194475602;  // std dev = 8,767, 474,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.08518475138839678;  // std dev = 6,65e-09, 419,000 (wgt'ed) examples reached here.  /* #neg=419 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10954267912182161;  // std dev = 9,105, 499,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.07877675473109157;  // std dev = 2,11e-07, 425,000 (wgt'ed) examples reached here.  /* #neg=425 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.33642616702793554;  // std dev = 1,689, 269,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=265 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333707;  // std dev = 1,67e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( genre(A, F) )
%   | | then return -0.14655485422928322;  // std dev = 0,849, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.21517369788709922;  // std dev = 6,587, 223,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=59 */
%   | | | else return -0.07324622576333767;  // std dev = 0,000, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09422171667699784;  // std dev = 7,885, 473,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06389921636539926;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.0684269778442035;  // std dev = 0,000, 464,000 (wgt'ed) examples reached here.  /* #neg=464 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.24881032291384944;  // std dev = 1,492, 268,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=265 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( genre(A, E) )
%   | | then return -0.1290145417419034;  // std dev = 0,836, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.17267433521091538;  // std dev = 6,531, 213,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=59 */
%   | | | else return -0.0641918400820256;  // std dev = 1,95e-07, 398,000 (wgt'ed) examples reached here.  /* #neg=398 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.182245
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.981 seconds
Total inference time: 1.95 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.977686
   AUC PR    = 0.861626
   CLL	      = -0.187632
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total scoring time: 3.544 seconds
Parameter learned model CLL: -0.187632


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 5, 0], 'true': [10.58, 171, 324], 'false,false': [0.0, 0, 0], 'false,true,false': [1.39e-08, 445, 0], 'false,true,true,false': [5.37e-08, 50, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 485, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [6.463, 143, 59], 'true,true,true': [0.998, 1, 265]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 450, 0], 'true': [9.546, 179, 324], 'false,false': [0.0, 0, 0], 'false,true,true': [3.33e-08, 41, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [1.47e-08, 472, 0], 'true,true': [0.411, 158, 324], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 7, 0], 'true': [8.982, 157, 324], 'false,false': [0.0, 0, 0], 'false,true,false': [5.1e-09, 431, 0], 'false,true,true,false': [0.0, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [6.65e-09, 419, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [8.767, 150, 324], 'false,true,true,false': [1.05e-08, 35, 0], 'true,true,true': [0.274, 17, 0], 'false,true,true,true': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [2.11e-07, 425, 0], 'true': [9.105, 175, 324], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 39, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.849, 53, 0], 'true,true,false,false': [1.67e-08, 47, 0], 'true,false,false,true': [6.587, 164, 59], 'true,true,true': [1.689, 4, 265], 'true,true,false,true': [0.0, 4, 0], 'true,false,false,false': [0.0, 353, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 4, 0], 'true': [7.885, 149, 324], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 464, 0], 'false,true,true,false': [0.0, 37, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.836, 53, 0], 'true,true,false': [0.0, 44, 0], 'true,true,true': [1.492, 3, 265], 'true,false,false,false': [1.95e-07, 398, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [6.531, 154, 59]}]]
[{'': [0.22611570247934157, -2.842170943040401e-17], 'false,true': [6.055761952500853e-17, 1.9959065611238769e-16], 'false': [-2.842170943040401e-17, nan], 'false,true,true': [-2.7755575615628915e-18, 5.773159728050814e-17]}, {'': [0.2130177514792876, -1.3551588259342118e-16], 'true,true': [0.0037452654191889806, 0.2067689442211552], 'true': [0.2130177514792876, nan], 'false': [-1.3551588259342118e-16, nan]}, {'': [0.18116790483972775, -3.6178347034628316e-18], 'false,true': [2.7078610356711135e-17, -9.86864910777917e-18], 'false': [-3.6178347034628316e-18, nan]}, {'': [0.16902132102590117, 2.1639940310490338e-16], 'true': [0.16902132102590117, nan], 'false': [2.1639940310490338e-16, nan]}, {'': [0.16771696139241646, -1.4802973661668754e-17], 'false,true': [-5.664403186863044e-18, 2.6789604306500296e-17], 'false': [-1.4802973661668754e-17, nan], 'false,true,true': [0.0, -6.6084703846735505e-18]}, {'': [0.16940177848242563, 4.4408920985006264e-17], 'true,true': [0.004411810244139032, 0.1621434941074559], 'true': [0.16940177848242563, nan], 'false,true,true': [1.1564823173178713e-18, 3.1720657846433043e-18], 'false,true': [6.769652589177784e-18, 4.345503008079372e-17], 'false': [4.4408920985006264e-17, nan]}, {'': [0.1661418220773214, 5.74253288599219e-17], 'false,true': [0.0, 1.0449157878825003e-16], 'false': [5.74253288599219e-17, nan]}, {'': [0.09590275140265798, nan], 'true,true': [0.010599468250021057, 8.707631565687502e-18], 'true': [0.03139533355342485, 0.07453253409814856], 'true,true,false': [0.0, 5.9054416203465774e-18], 'true,false,false': [0.19457459430111204, -5.912802510751542e-17], 'true,false': [0.013614526019147312, 0.08010943037307529]}, {'': [0.13145777897925068, 1.3919764937168913e-06], 'false,true': [1.804932988293905e-06, -1.2346445704883206e-16], 'false': [1.3919764937168913e-06, nan], 'false,true,true': [0.0, -3.750753461571475e-18]}, {'': [0.07294880411808495, nan], 'true,true': [0.008301407418951728, -2.523234146875356e-18], 'true': [0.018998571022188448, 0.06780902771782663], 'true,false,false': [0.2002689060812455, 9.540107397532752e-17], 'true,false': [0.013198538606054145, 0.07248789908077578]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048807;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.1418510649004873;  // std dev = 2,98e-07, 414,000 (wgt'ed) examples reached here.  /* #neg=414 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
%   else return -0.12544463852839233;  // std dev = 0,000, 480,000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.1123163781936063;  // std dev = 3,16e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.11231637819360626;  // std dev = 4,47e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360629;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360622;  // std dev = 2,24e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.11231637819360629;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360601;  // std dev = 0,000, 446,000 (wgt'ed) examples reached here.  /* #neg=446 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1015963294878364;  // std dev = 0,000, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( female(B) )
%   | then return -0.10159632948783655;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else return -0.10159632948783663;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.09269127618926101;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926087;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.09269127618926125;  // std dev = 0,000, 457,000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.255172242569489;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.2551722425694886;  // std dev = 1,12e-08, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.08518475138839678;  // std dev = 4,37e-09, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839679;  // std dev = 1,32e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.08518475138839678;  // std dev = 3,16e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 7,45e-08, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253504;  // std dev = 1,77e-08, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.20975771563253498;  // std dev = 1,94e-08, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.07877675473109164;  // std dev = 4,21e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( genre(A, D) )
%   | then return -0.0787767547310917;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109143;  // std dev = 2,46e-09, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
%   | | else return -0.07877675473109168;  // std dev = 3,36e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527725;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | | else return 0.17110026484686774;  // std dev = 0,495, 167,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=163 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.13189572822288878;  // std dev = 0,817, 72,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=59 */
%   | | | else return -0.07324622576333698;  // std dev = 1,33e-07, 508,000 (wgt'ed) examples reached here.  /* #neg=508 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1546452429651367;  // std dev = 0,003, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.1538479400797883;  // std dev = 0,001, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420261;  // std dev = 2,98e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | | else return -0.06842697784420267;  // std dev = 1,18e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.07708484526727447;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420261;  // std dev = 2,79e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07398495909005752;  // std dev = 0,030, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07357208048322258;  // std dev = 0,034, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.06842697784420324;  // std dev = 0,000, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13378652942896874;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | | else return 0.12943887799895837;  // std dev = 0,424, 167,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=163 */
%   | | else if ( actor(A) )
%   | | | then return -0.06387111616646934;  // std dev = 6,76e-05, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.09526182012813371;  // std dev = 0,748, 74,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=59 */
%   | | | else return -0.06419083204570693;  // std dev = 0,000518, 514,000 (wgt'ed) examples reached here.  /* #neg=514 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063456
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.08 seconds
Total inference time: 2.043 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065123
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.461 seconds
Refined model CLL: -0.065123


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063456
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.066 seconds
Total inference time: 2.043 seconds
AUC ROC: 1.0
Total revision time: 16.066
Best scored revision CLL: -0.065123


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:05:34
{'Learning time': 16.066, 'CLL': -0.063456, 'parameter_1.0': {'Learning time': 2.981, 'CLL': -0.182245, 'Recall': 1.0, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'AUC PR': 1.0, 'Inference time': 1.95, 'AUC ROC': 1.0}, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 2.043, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.14185106490048843;  // std dev = 0,000, 605,000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.1254446385283923;  // std dev = 0,000, 623,000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360593;  // std dev = 0,000, 566,000 (wgt'ed) examples reached here.  /* #neg=566 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783548;  // std dev = 3,55e-07, 588,000 (wgt'ed) examples reached here.  /* #neg=588 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.09269127618926166;  // std dev = 0,000, 590,000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.08518475138839678;  // std dev = 1,55e-07, 642,000 (wgt'ed) examples reached here.  /* #neg=642 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0787767547310917;  // std dev = 2,98e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07877675473109239;  // std dev = 0,000, 592,000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527653;  // std dev = 2,73e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07324622576333695;  // std dev = 1,40e-07, 583,000 (wgt'ed) examples reached here.  /* #neg=583 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 2,11e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420361;  // std dev = 0,000, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.0641918400820255;  // std dev = 2,34e-07, 545,000 (wgt'ed) examples reached here.  /* #neg=545 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.087 seconds
Total inference time: 1.853 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 01:05:41
{'Learning time': 5.087, 'CLL': -0.063422, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.853, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.14185106490048804;  // std dev = 0,000, 559,000 (wgt'ed) examples reached here.  /* #neg=559 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.687 seconds
Total inference time: 1.11 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 01:05:44
{'Learning time': 1.687, 'CLL': -0.152985, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.11, 'Precision': [nan, 0.5]}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4930695700201471;  // std dev = 3,821, 63,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048768;  // std dev = 7,21e-09, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7869990524259941;  // std dev = 1,79e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.11300094757400563;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839152;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3591368973628539;  // std dev = 3,043, 60,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360626;  // std dev = 4,71e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3522056598306161;  // std dev = 0,350, 53,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.1015963294878362;  // std dev = 5,59e-09, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21705018578816404;  // std dev = 2,810, 58,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=40 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.37953117171387096;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.0991789322843657;  // std dev = 3,150, 66,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839679;  // std dev = 2,28e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09063330754564915;  // std dev = 3,078, 64,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109173;  // std dev = 2,36e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.35473876493060935;  // std dev = 8,43e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, F) )
%   | | then return -0.15357275658056702;  // std dev = 0,197, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.33422641507138057;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04366791149051864;  // std dev = 2,605, 66,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06348071531626694;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0684269778442027;  // std dev = 2,08e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.269594618041152;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.07098023591516779;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, E) )
%   | | then return -0.059809687691089956;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.25611076443766795;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.157894
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 1.535 seconds
Total inference time: 2.327 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.993487
   AUC PR    = 0.964962
   CLL	      = -0.147005
   Precision = 0.883721 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.915663


Total scoring time: 1.809 seconds
Parameter learned model CLL: -0.147005


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [3.821, 23, 40], 'false,false': [0.0, 0, 0], 'false,true,false': [7.21e-09, 49, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 48, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [1.342, 18, 2], 'true,true,true': [1.79e-07, 0, 38]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [4.71e-08, 62, 0], 'true': [3.043, 20, 40], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [5.59e-09, 60, 0], 'true,true': [0.35, 13, 40], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [2.81, 18, 40], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 52, 0], 'false,true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [2.28e-09, 56, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [3.15, 26, 40], 'false,true,true,false': [2.63e-09, 6, 0], 'true,true,true': [0.0, 3, 0], 'false,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [2.36e-08, 60, 0], 'true': [3.078, 24, 40], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.197, 3, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false,false,true': [1.348, 20, 2], 'true,true,true': [8.43e-08, 0, 38], 'true,true,false,true': [0.0, 0, 0], 'true,false,false,false': [1.05e-08, 51, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [2.605, 26, 40], 'false,false': [0.0, 0, 0], 'false,true,false': [2.08e-09, 53, 0], 'false,true,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.0, 1, 0], 'true,true,false': [0.03, 5, 0], 'true,true,true': [0.0, 0, 38], 'true,false,false,false': [0.0, 46, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [1.342, 18, 2]}]]
[{'': [0.2317964222726136, 5.659960517696876e-17], 'false,true': [0.0, 5.437827059388522e-17], 'false': [5.659960517696876e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.21403091557669543, -2.7755575615628914e-17], 'true,true': [8.414321870843291e-16, 0.09000000000000005], 'true': [0.21403091557669543, nan], 'false': [-2.7755575615628914e-17, nan]}, {'': [0.1543578733701727, 4.0371746350005693e-17], 'false,true': [0.0, 3.581364595565021e-17], 'false': [4.0371746350005693e-17, nan]}, {'': [0.12215356538210301, 3.14563190310461e-17], 'true': [0.12215356538210301, nan], 'false': [3.14563190310461e-17, nan]}, {'': [0.13617872699270497, -4.86939923081209e-18], 'false,true': [0.0, -5.337610695313253e-18], 'false': [-4.86939923081209e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.15335743664041498, 5.3720468933475315e-18], 'true,true': [-1.850371707708594e-17, 0.1503646047075879], 'true': [0.15335743664041498, nan], 'false,true,true': [nan, 1.1564823173178713e-18], 'false,true': [1.1564823173178713e-18, 5.9476233462061954e-18], 'false': [5.3720468933475315e-18, nan]}, {'': [0.14799643687080957, 1.4518301091252048e-17], 'false,true': [-6.938893903907229e-19, 9.25185853854297e-18], 'false': [1.4518301091252048e-17, nan]}, {'': [0.08187904585712479, nan], 'true,true': [1.8698493046318425e-16, 0.0], 'true': [0.004576268103782752, 0.038207309390276216], 'true,true,false': [nan, 0.0], 'true,false,false': [0.08264462809917346, 2.1769078914218755e-18], 'true,false': [0.012904703106262785, 0.039247031781255264]}, {'': [0.10283914117219761, 1.2404389560774102e-06], 'false,true': [-1.1564823173178713e-18, 4.7132109535973624e-18], 'false': [1.2404389560774102e-06, nan], 'false,true,true': [nan, -1.1564823173178713e-18]}, {'': [0.05513621882231924, nan], 'true,true': [-1.7529837230923525e-16, 0.00018432927194965697], 'true': [0.01194048929771167, 0.03458627962760926], 'true,false,false': [0.08999999999999996, -1.8101462358018856e-18], 'true,false': [0.0, 0.03505193839388432]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(A, E).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048782;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.719473412210955;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( actor(B), female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0435389716194778;  // std dev = 1,069, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return -0.12544463852839155;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.13029963138511105;  // std dev = 6,45e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.5664547279649758;  // std dev = 0,040, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5613370550948107;  // std dev = 0,030, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.4267760040604126;  // std dev = 0,043, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.42250047525266665;  // std dev = 0,032, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11623145211411733;  // std dev = 6,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(B) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3277227072149529;  // std dev = 0,041, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3244948668161077;  // std dev = 0,031, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14679309955150915;  // std dev = 0,314, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.2450129934456961;  // std dev = 0,226, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( director(B) )
%   | | then return 0.25886002217657256;  // std dev = 0,032, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09015969822106469;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, E) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.0851847513883968;  // std dev = 1,49e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07848852991458728;  // std dev = 0,000322, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08457141922782424;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.2140337186591315;  // std dev = 0,034, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.21179739514067272;  // std dev = 0,025, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1720069998856346;  // std dev = 1,29e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.1741333173567284;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07051567146661314;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A), actor(B) )
%   | | | then return -0.07324744872944693;  // std dev = 2,68e-05, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06067577471415318;  // std dev = 0,508, 55,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06843358173324658;  // std dev = 2,93e-05, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07220064934617847;  // std dev = 0,010, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.061272725420277056;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.15985379530083202;  // std dev = 0,040, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.15646421105403466;  // std dev = 0,030, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( genre(A, D) )
%   | then return -0.06860124153107384;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.06842690421758131;  // std dev = 1,80e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( female(B) )
%   | | | then return -0.06923263796054155;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06916258055912075;  // std dev = 0,001, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1297320116873047;  // std dev = 1,29e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.13156294625980178;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.06415871038066077;  // std dev = 3,83e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.062200941991371196;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06490738737952241;  // std dev = 0,009, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0.15955641419001151;  // std dev = 0,275, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084856
   Precision = 0.757447 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.861985


Total learning time: 3.441 seconds
Total inference time: 2.357 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06606
   Precision = 0.888889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.941176


Total scoring time: 1.864 seconds
Refined model CLL: -0.06606


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084856
   Precision = 0.757447 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.861985


Total learning time: 8.649000000000001 seconds
Total inference time: 2.357 seconds
AUC ROC: 1.0
Total revision time: 8.649000000000001
Best scored revision CLL: -0.06606


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:05:58
{'Learning time': 8.649000000000001, 'parameter_0.2': {'Learning time': 1.535, 'CLL': -0.157894, 'Recall': 0.724719, 'F1': 0.708791, 'Precision': [0.693548, 0.5], 'AUC PR': 0.81824, 'Inference time': 2.327, 'AUC ROC': 0.97199}, 'CLL': -0.084856, 'Recall': 1.0, 'F1': 0.861985, 'Precision': [0.757447, 0.5], 'AUC PR': 1.0, 'Inference time': 2.357, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.7867203636709403;  // std dev = 0,258, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.7286956618954937;  // std dev = 0,043, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else return -0.1271840690570693;  // std dev = 0,140, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11214307143126455;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.5645160951209827;  // std dev = 0,053, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( actor(B) )
%   | then return -0.11214307143126438;  // std dev = 4,34e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.44031886931221975;  // std dev = 0,024, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.101453471465514;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42437414498088444;  // std dev = 0,053, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.3308550547250184;  // std dev = 0,019, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2418306723517287;  // std dev = 0,194, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0.33085816576185617;  // std dev = 5,16e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( actor(A) )
%   | then return -0.09257164947332777;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.21577410493761426;  // std dev = 0,427, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08397185010916361;  // std dev = 0,027, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.26328032150541497;  // std dev = 0,010, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.3250292943788418;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07717849068423249;  // std dev = 0,013, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.21546966884279845;  // std dev = 0,009, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( actor(B) )
%   | then return -0.07811717339043837;  // std dev = 0,016, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.25811698123025456;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07281469385347536;  // std dev = 0,015, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1812751042507283;  // std dev = 0,008, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.21134732930259095;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06763265484320033;  // std dev = 0,022, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15590665224848638;  // std dev = 0,007, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.178691559662533;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641240923564462;  // std dev = 0,010, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13647152097221307;  // std dev = 0,006, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1541436532248939;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103413
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 2.653 seconds
Total inference time: 1.792 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:06:03
{'Learning time': 2.653, 'CLL': -0.103413, 'Recall': 1.0, 'F1': 0.770563, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.792, 'Precision': [0.626761, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,15e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.7867203636709403;  // std dev = 0,258, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */


Results
   AUC ROC   = 0.891758
   AUC PR    = 0.203944
   CLL	      = -0.234718
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.022 seconds
Total inference time: 0.973 seconds
AUC ROC: 0.891758


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:06:05
{'Learning time': 1.022, 'CLL': -0.234718, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.891758, 'AUC PR': 0.203944, 'Inference time': 0.973, 'Precision': [nan, 0.5]}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5445896130656124;  // std dev = 5,040, 118,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1418510649004877;  // std dev = 4,93e-09, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7782350197533392;  // std dev = 3,04e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | else return -0.1485942485393431;  // std dev = 1,667, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839105;  // std dev = 7,68e-09, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3392092470753241;  // std dev = 4,363, 124,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360643;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1123163781936062;  // std dev = 9,31e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.24503860482226483;  // std dev = 0,387, 129,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783662;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1962923604421258;  // std dev = 4,281, 127,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=81 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926089;  // std dev = 6,04e-09, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4055616684283866;  // std dev = 0,196, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.13832042518951387;  // std dev = 4,339, 130,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.10532993499071423;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839691;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839682;  // std dev = 5,67e-09, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15043624922606086;  // std dev = 3,990, 119,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109157;  // std dev = 6,32e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3561482273935549;  // std dev = 1,98e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333707;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(A, F) )
%   | | then return -0.15583017238573027;  // std dev = 0,302, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3545955982132358;  // std dev = 1,677, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | | else return -0.07324622576333707;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06788057262969763;  // std dev = 3,440, 127,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06334664205661543;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420264;  // std dev = 5,19e-09, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2657779496049399;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | else return -0.06419184008202622;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( genre(A, E) )
%   | | then return -0.05969039839638236;  // std dev = 3,23e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.26612459948994865;  // std dev = 1,658, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.154902
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 1.84 seconds
Total inference time: 2.135 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.995077
   AUC PR    = 0.972409
   CLL	      = -0.144955
   Precision = 0.928571 at threshold = 0.5
   Recall    = 0.962963
   F1        = 0.945455


Total scoring time: 2.35 seconds
Parameter learned model CLL: -0.144955


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [5.04, 37, 81], 'false,false': [0.0, 0, 0], 'false,true,false': [4.93e-09, 117, 0], 'false,true,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [7.68e-09, 118, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [1.667, 38, 3], 'true,true,true': [3.04e-07, 0, 78]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [9.31e-08, 127, 0], 'true': [4.363, 43, 81], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.0, 108, 0], 'true,true': [0.387, 48, 81], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [4.281, 46, 81], 'false,false': [0.0, 0, 0], 'false,true,false': [6.04e-09, 110, 0], 'false,true,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [5.67e-09, 105, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.339, 49, 81], 'false,true,true,false': [0.0, 6, 0], 'true,true,true': [0.196, 4, 0], 'false,true,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [6.32e-08, 109, 0], 'true': [3.99, 38, 81], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.302, 8, 0], 'true,true,false,false': [0.0, 7, 0], 'true,false,false,true': [1.677, 45, 3], 'true,true,true': [1.98e-07, 0, 78], 'true,true,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 86, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [3.44, 46, 81], 'false,false': [0.0, 0, 0], 'false,true,false': [5.19e-09, 116, 0], 'false,true,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [3.23e-09, 8, 0], 'true,true,false': [0.0, 9, 0], 'true,true,true': [0.0, 0, 78], 'true,false,false,false': [0.0, 104, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [1.658, 33, 3]}]]
[{'': [0.21523987359954205, -1.4210854715202004e-17], 'false,true': [-6.938893903907228e-18, 2.6569439905559303e-17], 'false': [-1.4210854715202004e-17, nan], 'false,true,true': [nan, -6.938893903907228e-18]}, {'': [0.21735753124779464, 5.457028426123651e-17], 'true,true': [1.1842378929335002e-15, 0.06781677572873304], 'true': [0.21735753124779464, nan], 'false': [5.457028426123651e-17, nan]}, {'': [0.15354128680478765, 6.896840001459306e-17], 'false,true': [0.0, 6.818692592186001e-17], 'false': [6.896840001459306e-17, nan]}, {'': [0.14997818062661, -3.700743415417188e-17], 'true': [0.14997818062661, nan], 'false': [-3.700743415417188e-17, nan]}, {'': [0.14428503181484967, 4.47821051949643e-17], 'false,true': [0.0, 3.633457171500512e-17], 'false': [4.47821051949643e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1493264313416848, 3.5911156635533492e-06], 'true,true': [0.00959972604037293, 0.14479563303670456], 'true': [0.1493264313416848, nan], 'false,true,true': [0.0, -1.1564823173178713e-18], 'false,true': [4.969327620870319e-05, 3.172065784643304e-17], 'false': [3.5911156635533492e-06, nan]}, {'': [0.1337722842188201, 3.765104170467922e-17], 'false,true': [-1.1564823173178713e-18, 3.66679164096382e-17], 'false': [3.765104170467922e-17, nan]}, {'': [0.08587483562251803, nan], 'true,true': [5.01023723933404e-16, -9.912705577010326e-19], 'true': [0.013933738357846918, 0.03763702445040791], 'true,true,false': [nan, -9.912705577010326e-19], 'true,false,false': [0.05859375000000013, -7.10026352957949e-18], 'true,false': [0.011366847066217146, 0.039186736110056956]}, {'': [0.09318954111668083, 1.2069086907924188e-06], 'false,true': [-1.1564823173178713e-18, 2.584139798696485e-17], 'false': [1.2069086907924188e-06, nan], 'false,true,true': [nan, -1.1564823173178713e-18]}, {'': [0.047888291038660234, nan], 'true,true': [-6.832141690000964e-17, 0.0], 'true': [0.010098269731596424, 0.026112056614352303], 'true,false,false': [0.076388888888889, -1.6012832085939756e-17], 'true,false': [1.3010426069826053e-18, 0.02743206563377209]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839144;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0.7194734122109544;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839127;  // std dev = 1,49e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.5553664367462838;  // std dev = 1,29e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.17877981520562825;  // std dev = 0,297, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360649;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360647;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.11231637819360647;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783634;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.1567576719920532;  // std dev = 0,273, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1015963294878363;  // std dev = 1,49e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.0829569065271474;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.32071184716015005;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A), female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08435231328698503;  // std dev = 0,011, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.2551722425694895;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.08518475138839679;  // std dev = 2,46e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07882510035779947;  // std dev = 0,000108, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07108489988688402;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 5,27e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527705;  // std dev = 2,11e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.16242082981753878;  // std dev = 0,726, 50,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return -0.06653177254181414;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B), actor(A) )
%   | | | then return -0.07325347374873824;  // std dev = 0,000227, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | | else return 0.1145108168681237;  // std dev = 0,217, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.15301974433707352;  // std dev = 0,001, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.15490248932366002;  // std dev = 0,001, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( actor(A) )
%   | | then return -0.06845070403451603;  // std dev = 2,58e-05, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.06251705988165239;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B), actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0684265158248005;  // std dev = 7,45e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.06842651582480044;  // std dev = 2,17e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07361992926344832;  // std dev = 0,014, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13397501687774052;  // std dev = 3,16e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.13546628744713907;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.06394976297826639;  // std dev = 0,000129, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06428237787860844;  // std dev = 0,012, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | | else return 0.08692132215743302;  // std dev = 0,188, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096399
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 3.955 seconds
Total inference time: 2.444 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065202
   Precision = 0.920455 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.95858


Total scoring time: 2.5 seconds
Refined model CLL: -0.065202


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096399
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 10.645 seconds
Total inference time: 2.444 seconds
AUC ROC: 1.0
Total revision time: 10.645
Best scored revision CLL: -0.065202


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:06:21
{'Learning time': 10.645, 'CLL': -0.096399, 'parameter_0.4': {'Learning time': 1.84, 'CLL': -0.154902, 'Recall': 0.724719, 'F1': 0.708791, 'Precision': [0.693548, 0.5], 'AUC PR': 0.81824, 'Inference time': 2.135, 'AUC ROC': 0.97199}, 'Recall': 1.0, 'F1': 0.770563, 'Precision': [0.626761, 0.5], 'AUC PR': 1.0, 'Inference time': 2.444, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048824;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839127;  // std dev = 5,58e-08, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11307428556438959;  // std dev = 0,115, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10152717274531044;  // std dev = 5,96e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 8,43e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09403007013144402;  // std dev = 0,192, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08650304307188603;  // std dev = 0,181, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07853425479295092;  // std dev = 4,99e-06, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07303584630710225;  // std dev = 5,27e-08, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527716;  // std dev = 3,65e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367116;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06969713558652299;  // std dev = 0,200, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080109;  // std dev = 5,58e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06394209758626308;  // std dev = 1,67e-05, 149,000 (wgt'ed) examples reached here.  /* #neg=149 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071427
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.821 seconds
Total inference time: 1.923 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:06:26
{'Learning time': 2.821, 'CLL': -0.071427, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.923, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048818;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.193993
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.141 seconds
Total inference time: 1.131 seconds
AUC ROC: 0.985041


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:06:28
{'Learning time': 1.141, 'CLL': -0.193993, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 0.985041, 'AUC PR': 0.626761, 'Inference time': 1.131, 'Precision': [nan, 0.5]}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5070851053122752;  // std dev = 6,544, 188,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.14185106490048824;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7846401566911821;  // std dev = 3,77e-07, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | else return -0.1591800680279193;  // std dev = 2,172, 89,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12561917497915856;  // std dev = 0,002, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3397470642417333;  // std dev = 5,440, 189,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11395867636503544;  // std dev = 0,014, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11229897784091376;  // std dev = 7,30e-08, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.22753004369482743;  // std dev = 0,393, 205,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10164705068690974;  // std dev = 0,001, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22097354760193383;  // std dev = 5,145, 187,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=122 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09267379695287621;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.09266788038142751;  // std dev = 2,81e-05, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.3398765707229725;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.19757733525838764;  // std dev = 4,827, 177,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08516991671951614;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0851623009221334;  // std dev = 3,13e-05, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08831668759152475;  // std dev = 5,352, 203,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0786446528926721;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07876494515845425;  // std dev = 3,02e-06, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3548234622921528;  // std dev = 0,866, 118,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=117 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0732351120891397;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( genre(A, F) )
%   | | then return -0.11067813894359473;  // std dev = 0,334, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3259761972401625;  // std dev = 2,144, 62,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=5 */
%   | | | else return -0.0732360305597338;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07137588828983761;  // std dev = 4,278, 192,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.09798033245320158;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06597490029550425;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06841799013283542;  // std dev = 2,17e-07, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2705035477474984;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | else return -0.06418321244258994;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(A, E) )
%   | | then return -0.11343236658191842;  // std dev = 0,421, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2525928010481688;  // std dev = 2,128, 53,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
%   | | | else return -0.06418397008450345;  // std dev = 6,50e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.154551
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 2.133 seconds
Total inference time: 2.17 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.994633
   AUC PR    = 0.967957
   CLL	      = -0.144523
   Precision = 0.92126 at threshold = 0.5
   Recall    = 0.959016
   F1        = 0.939759


Total scoring time: 2.276 seconds
Parameter learned model CLL: -0.144523


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [6.544, 66, 122], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 172, 0], 'false,true,true,false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.002, 188, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [2.172, 84, 5], 'true,true,true': [3.77e-07, 0, 117]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [7.3e-08, 166, 0], 'true': [5.44, 67, 122], 'false,false': [0.0, 0, 0], 'false,true,true': [0.014, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.001, 180, 0], 'true,true': [0.393, 83, 122], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [5.145, 65, 122], 'false,false': [0.0, 0, 0], 'false,true,false': [2.81e-05, 165, 0], 'false,true,true,false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [3.13e-05, 176, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.827, 55, 122], 'false,true,true,false': [0.0, 10, 0], 'true,true,true': [0.0, 5, 0], 'false,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [3.02e-06, 185, 0], 'true': [5.352, 81, 122], 'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.334, 17, 0], 'true,true,false,false': [6.45e-09, 13, 0], 'true,false,false,true': [2.144, 57, 5], 'true,true,true': [0.866, 1, 117], 'true,true,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 165, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 2, 0], 'true': [4.278, 70, 122], 'false,false': [0.0, 0, 0], 'false,true,false': [2.17e-07, 177, 0], 'false,true,true,false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.421, 21, 0], 'true,true,false': [0.0, 7, 0], 'true,true,true': [0.0, 0, 117], 'true,false,false,false': [6.5e-08, 152, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [2.128, 48, 5]}]]
[{'': [0.22781801720235798, -2.1124243495570547e-16], 'false,true': [-1.2810265668751807e-17, -1.8073398075293246e-16], 'false': [-2.1124243495570547e-16, nan], 'false,true,true': [nan, -1.2810265668751807e-17]}, {'': [0.2414930719200696, 2.833056456085627e-06], 'true,true': [1.2146029671112824e-15, 0.05302360813028641], 'true': [0.2414930719200696, nan], 'false': [2.833056456085627e-06, nan]}, {'': [0.15660599648609627, 1.2677002774807988e-06], 'false,true': [2.203679352777278e-05, 3.2102834446992477e-17], 'false': [1.2677002774807988e-06, nan]}, {'': [0.1545121479272514, 1.013959165273458e-06], 'true': [0.1545121479272514, nan], 'false': [1.013959165273458e-06, nan]}, {'': [0.14156735544114032, 7.387754475970342e-10], 'false,true': [-3.469446951953614e-18, 7.901312950721286e-10], 'false': [7.387754475970342e-10, nan], 'false,true,true': [nan, -3.469446951953614e-18]}, {'': [0.13575202319393473, 9.28861152868051e-10], 'true,true': [0.0, 0.13165120245367087], 'true': [0.13575202319393473, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 9.785190599717357e-10], 'false': [9.28861152868051e-10, nan]}, {'': [0.14111380050900113, 5.083739309149257e-10], 'false,true': [1.982541115402065e-18, 4.9265096506772084e-14], 'false': [5.083739309149257e-10, nan]}, {'': [0.07451723355632978, nan], 'true,true': [0.006349727701767901, 3.2025664171879517e-18], 'true': [0.02209866944416924, 0.03116027602458386], 'true,true,false': [nan, 3.2025664171879517e-18], 'true,false,false': [0.07414151925078001, -1.5475836100835516e-17], 'true,false': [0.006578793199550196, 0.03293165997008121]}, {'': [0.09530214239290948, 9.557413258842086e-06], 'false,true': [0.00016389563001615524, 4.706592930834647e-14], 'false': [9.557413258842086e-06, nan], 'false,true,true': [0.0, 1.734723475976807e-18]}, {'': [0.04994810772584113, nan], 'true,true': [-2.429205934222565e-16, -1.4869058365515489e-18], 'true': [0.005966471857356373, 0.026995069330231707], 'true,false,false': [0.08543965824136701, 2.7755575615628914e-17], 'true,false': [0.00845704143380757, 0.02889405994474665]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(A, E).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.14185106490048796;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.7194734122109552;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839155;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0.7194734122109547;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.1254446385283912;  // std dev = 5,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.12544463852839108;  // std dev = 7,60e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.555366436746284;  // std dev = 3,25e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0.5553664367462836;  // std dev = 3,94e-08, 77,000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360644;  // std dev = 3,95e-09, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.19777434675860694;  // std dev = 0,430, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1015963294878365;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.08491342825419355;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3207118471601498;  // std dev = 1,24e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926096;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07854372452604759;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.08518475138839679;  // std dev = 1,97e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( genre(B, E) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 5,27e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,39e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.08518475138839679;  // std dev = 7,45e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.07304403514330145;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return 0.2097577156325359;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0.20975771563253598;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109172;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07877675473109165;  // std dev = 3,80e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527741;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return -0.06824996744027786;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333666;  // std dev = 1,31e-07, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | | | else return 0.13537271049384167;  // std dev = 0,229, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.1529873330047822;  // std dev = 0,001, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0.15295729389237211;  // std dev = 0,001, 77,000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.06403564070257865;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(A), director(B) )
%   | | then return -0.07327902988137698;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420262;  // std dev = 6,75e-08, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | | else return -0.06988259345535498;  // std dev = 0,014, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13397877747025075;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return 0.13398226290066545;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | | else return -0.06409390190142598;  // std dev = 6,59e-05, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return -0.06030313626555871;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06419184008202618;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202626;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | | | else return 0.07701282041791666;  // std dev = 0,259, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106133
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 4.714 seconds
Total inference time: 1.924 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065753
   Precision = 0.917293 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.956863


Total scoring time: 2.852 seconds
Refined model CLL: -0.065753


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106133
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 11.975000000000001 seconds
Total inference time: 1.924 seconds
AUC ROC: 1.0
Total revision time: 11.975000000000001
Best scored revision CLL: -0.065753


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:06:45
{'Learning time': 11.975000000000001, 'parameter_0.6': {'Learning time': 2.133, 'CLL': -0.154551, 'Recall': 0.724719, 'F1': 0.708791, 'Precision': [0.693548, 0.5], 'AUC PR': 0.81824, 'Inference time': 2.17, 'AUC ROC': 0.97199}, 'CLL': -0.106133, 'Recall': 1.0, 'F1': 0.770563, 'Precision': [0.626761, 0.5], 'AUC PR': 1.0, 'Inference time': 1.924, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1418510649004885;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.1254446385283919;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,69e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.1123163781936068;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583093;  // std dev = 3,53e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.10159632948783656;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2,19e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926053;  // std dev = 6,66e-08, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08518475138839678;  // std dev = 7,60e-08, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325354;  // std dev = 1,93e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109143;  // std dev = 5,96e-08, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452781;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07324622576333674;  // std dev = 1,22e-07, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 3,65e-08, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936714;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080111;  // std dev = 5,16e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06419184008202625;  // std dev = 0,000, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065858
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.369 seconds
Total inference time: 1.656 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:06:51
{'Learning time': 3.369, 'CLL': -0.065858, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.656, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048846;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.213 seconds
Total inference time: 1.164 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:06:53
{'Learning time': 1.213, 'CLL': -0.188432, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.164, 'Precision': [nan, 0.5]}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4709308899867267;  // std dev = 7,945, 266,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.14185106490048843;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7906866129794595;  // std dev = 7,15e-07, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | | else return -0.1125391934721512;  // std dev = 2,851, 93,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.1254446385283917;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3346756847156652;  // std dev = 6,470, 258,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11319515874708608;  // std dev = 0,014, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.11231637819360683;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2942529010309357;  // std dev = 0,384, 243,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10164241168543833;  // std dev = 0,000837, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22701603645144955;  // std dev = 5,869, 243,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=163 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09268740076745491;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.09268429673913406;  // std dev = 1,48e-05, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.40185034138018033;  // std dev = 0,280, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.17966400892729695;  // std dev = 5,757, 240,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.10524281185765502;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.08518146234329384;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.08517821810768635;  // std dev = 1,50e-05, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12259466903058058;  // std dev = 5,905, 247,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08033212107180654;  // std dev = 0,023, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.07877437179083457;  // std dev = 1,35e-06, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.34427770708515787;  // std dev = 0,857, 155,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=154 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.08900400421937288;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324374577599609;  // std dev = 8,33e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( genre(A, F) )
%   | | then return -0.136859992275722;  // std dev = 0,462, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.33071809366948274;  // std dev = 2,848, 91,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=9 */
%   | | | else return -0.07324417669160245;  // std dev = 0,000, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04501151565352688;  // std dev = 5,251, 268,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08204645706475501;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06433294119106958;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.0684251474526349;  // std dev = 1,12e-07, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.26715405624865424;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | | else return -0.0641899043486027;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( genre(A, E) )
%   | | then return -0.15819862913167468;  // std dev = 0,483, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.26865834292633267;  // std dev = 2,857, 97,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=9 */
%   | | | else return -0.06419025980203234;  // std dev = 5,05e-08, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.15492
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 2.536 seconds
Total inference time: 2.371 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.992787
   AUC PR    = 0.95578
   CLL	      = -0.147471
   Precision = 0.927711 at threshold = 0.5
   Recall    = 0.944785
   F1        = 0.93617


Total scoring time: 2.772 seconds
Parameter learned model CLL: -0.147471


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [7.945, 103, 163], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 209, 0], 'false,true,true,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 207, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [2.851, 84, 9], 'true,true,true': [7.15e-07, 0, 154]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 245, 0], 'true': [6.47, 95, 163], 'false,false': [0.0, 0, 0], 'false,true,true': [0.014, 17, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.000837, 264, 0], 'true,true': [0.384, 80, 163], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [5.869, 80, 163], 'false,false': [0.0, 0, 0], 'false,true,false': [1.48e-05, 238, 0], 'false,true,true,false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [1.5e-05, 216, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.757, 77, 163], 'false,true,true,false': [0.0, 16, 0], 'true,true,true': [0.28, 10, 0], 'false,true,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [1.35e-06, 214, 0], 'true': [5.905, 84, 163], 'false,false': [0.0, 0, 0], 'false,true,true': [0.023, 21, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.462, 21, 0], 'true,true,false,false': [8.33e-09, 19, 0], 'true,false,false,true': [2.848, 82, 9], 'true,true,true': [0.857, 1, 154], 'true,true,false,true': [0.0, 3, 0], 'true,false,false,false': [0.0, 211, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 2, 0], 'true': [5.251, 105, 163], 'false,false': [0.0, 0, 0], 'false,true,false': [1.12e-07, 205, 0], 'false,true,true,false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.483, 20, 0], 'true,true,false': [0.0, 15, 0], 'true,true,true': [0.0, 0, 154], 'true,false,false,false': [5.05e-08, 189, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [2.857, 88, 9]}]]
[{'': [0.23728023065182255, -2.34156128830033e-16], 'false,true': [-1.0092936587501423e-17, -2.3798082058950725e-16], 'false': [-2.34156128830033e-16, nan], 'false,true,true': [nan, -1.0092936587501423e-17]}, {'': [0.2244259043747656, -5.363396254227809e-17], 'true,true': [3.322017985371897e-15, 0.08740894901144648], 'true': [0.2244259043747656, nan], 'false': [-5.363396254227809e-17, nan]}, {'': [0.16227143165811278, 8.485875253187545e-07], 'false,true': [1.2356084178789071e-05, -8.881784197001253e-17], 'false': [8.485875253187545e-07, nan]}, {'': [0.147464290900186, 6.998463226260864e-07], 'true': [0.147464290900186, nan], 'false': [6.998463226260864e-07, nan]}, {'': [0.14175197873838594, 2.064084843552353e-10], 'false,true': [-3.469446951953614e-18, 2.1967776244205656e-10], 'false': [2.064084843552353e-10, nan], 'false,true,true': [nan, -3.469446951953614e-18]}, {'': [0.1458787598993467, 3.4116464728450396e-06], 'true,true': [0.007821604182016873, 0.13810478380302774], 'true': [0.1458787598993467, nan], 'false,true,true': [0.0, -8.673617379884035e-19], 'false,true': [3.9748913020972045e-05, 2.2648817697855528e-10], 'false': [3.4116464728450396e-06, nan]}, {'': [0.141163299408752, 2.429482754070771e-06], 'false,true': [2.497732957651565e-05, 8.562205980567095e-15], 'false': [2.429482754070771e-06, nan]}, {'': [0.07802302146116256, nan], 'true,true': [0.004734189615340443, 2.9252040358505492e-05], 'true': [0.02331951789436345, 0.03883019784409719], 'true,true,false': [0.0, 3.652049423109067e-18], 'true,false,false': [0.08911967153725417, -4.3146108066001346e-17], 'true,false': [0.010170050762757706, 0.040810438249904026]}, {'': [0.10287088336141959, 2.779378876540052e-06], 'false,true': [3.25711395786134e-05, 1.253414716191445e-14], 'false': [2.779378876540052e-06, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.05837580186234226, nan], 'true,true': [-3.1143918612861535e-16, -4.625929269271485e-18], 'true': [0.008879667193658132, 0.03623927370680934], 'true,false,false': [0.08417472632585808, 1.3510650564221481e-17], 'true,false': [0.011650068532126828, 0.03791904983906216]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8,56e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.1418510649004882;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.7194734122109563;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839144;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( female(A) )
%   | | | then return 0.719473412210955;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.719473412210955;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839183;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462838;  // std dev = 3,33e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 98,000 (wgt'ed) examples reached here.  /* #pos=98 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360632;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1123163781936063;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.11231637819360678;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.41751358415830986;  // std dev = 2,41e-08, 98,000 (wgt'ed) examples reached here.  /* #pos=98 */
%   else return -0.10159632948783658;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.32071184716015044;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #pos=98 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926085;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926092;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926075;  // std dev = 2,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.09269127618926089;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0851847513883968;  // std dev = 1,83e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.19512525239541575;  // std dev = 0,602, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839678;  // std dev = 1,61e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 4,83e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | | else return -0.0851847513883968;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07115872390907581;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.20975771563253565;  // std dev = 1,34e-08, 98,000 (wgt'ed) examples reached here.  /* #pos=98 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109172;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109161;  // std dev = 3,73e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.0787767547310915;  // std dev = 6,99e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else return -0.07877675473109166;  // std dev = 1,61e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1770964977452777;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | | else return -0.07324622576333698;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( female(B) )
%   | | | then return -0.0665966178596096;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06659661785960959;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333707;  // std dev = 7,88e-08, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
%   | | | else return 0.15206222539441608;  // std dev = 0,237, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.06842697784420267;  // std dev = 2,89e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return -0.062477219231467165;  // std dev = 0,000337, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.15304551997087354;  // std dev = 0,000946, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.15284389902233547;  // std dev = 0,000563, 98,000 (wgt'ed) examples reached here.  /* #pos=98 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420267;  // std dev = 2,28e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420261;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420261;  // std dev = 1,05e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return -0.06842697784420262;  // std dev = 3,73e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13397202626969862;  // std dev = 5,16e-08, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.11464134790675376;  // std dev = 1,314, 97,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=95 */
%   | | else return -0.06419184008202614;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( female(B) )
%   | | then return -0.0634513240953187;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06321991284947262;  // std dev = 0,002, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202587;  // std dev = 1,33e-07, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */
%   | | | else return 0.13691123940763383;  // std dev = 3,37e-05, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11479
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 5.21 seconds
Total inference time: 2.008 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066052
   Precision = 0.926136 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.961652


Total scoring time: 2.996 seconds
Refined model CLL: -0.066052


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11479
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 13.514000000000001 seconds
Total inference time: 2.008 seconds
AUC ROC: 1.0
Total revision time: 13.514000000000001
Best scored revision CLL: -0.066052


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:07:12
{'parameter_0.8': {'Learning time': 2.536, 'CLL': -0.15492, 'Recall': 0.724719, 'F1': 0.708791, 'Precision': [0.693548, 0.5], 'AUC PR': 0.81824, 'Inference time': 2.371, 'AUC ROC': 0.97199}, 'Learning time': 13.514000000000001, 'CLL': -0.11479, 'Recall': 1.0, 'F1': 0.770563, 'Precision': [0.626761, 0.5], 'AUC PR': 1.0, 'Inference time': 2.008, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048807;  // std dev = 0,000, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.12544463852839205;  // std dev = 0,000, 325,000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.11231637819360682;  // std dev = 0,000, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.10159632948783658;  // std dev = 0,000, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.09269127618926047;  // std dev = 1,28e-07, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.08518475138839678;  // std dev = 1,01e-07, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07877675473109143;  // std dev = 4,21e-08, 332,000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07324622576333703;  // std dev = 8,82e-08, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06842697784420315;  // std dev = 0,000, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06419184008202618;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06419184008202618;  // std dev = 5,37e-08, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.646 seconds
Total inference time: 1.992 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:07:18
{'Learning time': 3.646, 'CLL': -0.065435, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.992, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.1418510649004878;  // std dev = 1,23e-07, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.279 seconds
Total inference time: 1.367 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:07:21
{'Learning time': 1.279, 'CLL': -0.188432, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.367, 'Precision': [nan, 0.5]}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4820021461086827;  // std dev = 8,760, 327,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.14185106490048813;  // std dev = 0,000, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7888484087217023;  // std dev = 9,39e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.12265601605705774;  // std dev = 3,019, 113,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12555152078488774;  // std dev = 0,001, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3239282063804009;  // std dev = 7,321, 328,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11337272626873371;  // std dev = 0,014, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11230572232354773;  // std dev = 0,000, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.27681413131184635;  // std dev = 0,389, 314,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10158085667641736;  // std dev = 2,46e-05, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19178271967975957;  // std dev = 7,026, 328,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=204 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.10522182442564523;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09268448506899475;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.09267950230690936;  // std dev = 2,05e-05, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.34341132893364407;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.1756899975963663;  // std dev = 6,624, 310,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08517898779616404;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.08517629798757136;  // std dev = 1,57e-05, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13640780735367172;  // std dev = 6,553, 310,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07869496761226437;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07877233057514584;  // std dev = 2,16e-06, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3554924439779121;  // std dev = 0,872, 195,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=194 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.08912044593047318;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324189677651317;  // std dev = 6,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( genre(A, F) )
%   | | then return -0.12752956427997966;  // std dev = 0,519, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3282783385455435;  // std dev = 3,019, 113,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=10 */
%   | | | else return -0.07324241757329852;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09555943922846197;  // std dev = 5,306, 301,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0821458373665583;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06498315268433866;  // std dev = 5,27e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.06842362387887518;  // std dev = 9,47e-08, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.25920465687442296;  // std dev = 0,886, 195,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=194 */
%   | | else return -0.06518618211113342;  // std dev = 0,016, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( genre(A, E) )
%   | | then return -0.15608253727557314;  // std dev = 0,468, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.28745125323398457;  // std dev = 3,043, 135,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=10 */
%   | | | else return -0.06418890025903326;  // std dev = 0,000, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.155556
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 2.325 seconds
Total inference time: 1.956 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.993632
   AUC PR    = 0.960741
   CLL	      = -0.145557
   Precision = 0.937198 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.944039


Total scoring time: 2.728 seconds
Parameter learned model CLL: -0.145557


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [8.76, 123, 204], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 262, 0], 'false,true,true,false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.001, 307, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [3.019, 103, 10], 'true,true,true': [9.39e-07, 0, 194]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 262, 0], 'true': [7.321, 124, 204], 'false,false': [0.0, 0, 0], 'false,true,true': [0.014, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [2.46e-05, 291, 0], 'true,true': [0.389, 110, 204], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [7.026, 124, 204], 'false,false': [0.0, 0, 0], 'false,true,false': [2.05e-05, 288, 0], 'false,true,true,false': [1.18e-08, 20, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [1.57e-05, 270, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [6.624, 106, 204], 'false,true,true,false': [0.0, 13, 0], 'true,true,true': [1.49e-08, 7, 0], 'false,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [2.16e-06, 280, 0], 'true': [6.553, 106, 204], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.519, 29, 0], 'true,true,false,false': [6.45e-09, 15, 0], 'true,false,false,true': [3.019, 103, 10], 'true,true,true': [0.872, 1, 194], 'true,true,false,true': [1.86e-09, 3, 0], 'true,false,false,false': [0.0, 241, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 2, 0], 'true': [5.306, 97, 204], 'false,false': [0.0, 0, 0], 'false,true,false': [9.47e-08, 288, 0], 'false,true,true,false': [5.27e-09, 17, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.468, 17, 0], 'true,true,false': [0.016, 24, 0], 'true,true,true': [0.886, 1, 194], 'true,false,false,false': [0.0, 258, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [3.043, 125, 10]}]]
[{'': [0.2346603821227214, -3.8616453030440226e-17], 'false,true': [-1.1895246692412391e-17, -8.474984920802722e-17], 'false': [-3.8616453030440226e-17, nan], 'false,true,true': [nan, -1.1895246692412391e-17]}, {'': [0.2229413574679914, 1.7421320548448174e-06], 'true,true': [4.541613362590331e-15, 0.08066410838750061], 'true': [0.2229413574679914, nan], 'false': [1.7421320548448174e-06, nan]}, {'': [0.16338443359690574, 8.05568825924224e-07], 'false,true': [1.4800466447548574e-05, -3.559493666737143e-17], 'false': [8.05568825924224e-07, nan]}, {'': [0.15131344554986892, 6.064690941119489e-10], 'true': [0.15131344554986892, nan], 'false': [6.064690941119489e-10, nan]}, {'': [0.15048386134281075, 5.078145071149411e-07], 'false,true': [7.12856590221969e-06, 4.2207470234916716e-10], 'false': [5.078145071149411e-07, nan], 'false,true,true': [0.0, 6.938893903907228e-18]}, {'': [0.14422307008725946, 2.3534074414410996e-10], 'true,true': [3.172065784643304e-17, 0.14152936261079976], 'true': [0.14422307008725946, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 2.463396186624533e-10], 'false': [2.3534074414410996e-10, nan]}, {'': [0.13853189843036132, 2.888652752026015e-10], 'false,true': [-9.251858538542971e-19, 1.673978416200888e-14], 'false': [2.888652752026015e-10, nan]}, {'': [0.08168147209441867, nan], 'true,true': [0.0038977958511717194, 3.501782267149327e-05], 'true': [0.01796827966131523, 0.03761821440952321], 'true,true,false': [1.1564823173178713e-18, 2.7755575615628915e-18], 'true,false,false': [0.08066410838750092, -4.330330469492312e-17], 'true,false': [0.009285223152470781, 0.03988357770861651]}, {'': [0.09352500006880654, 1.87193974620866e-06], 'false,true': [2.774228073973355e-05, 8.965821912059684e-15], 'false': [1.87193974620866e-06, nan], 'false,true,true': [0.0, 1.6326809185664067e-18]}, {'': [0.057183411203013554, nan], 'true,true': [0.004022721793789867, 1.0949709477322636e-05], 'true': [0.01385128656016105, 0.033901397024997455], 'true,false,false': [0.06858710562414262, -1.2048932050195497e-17], 'true,false': [0.012876012853126288, 0.0348013117245325]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(A, E).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048788;  // std dev = 0,000, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.14185106490048804;  // std dev = 0,000, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109543;  // std dev = 2,36e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return 0.711140078877622;  // std dev = 0,091, 120,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=119 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.1254446385283911;  // std dev = 7,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.719473412210955;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.125444638528392;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462848;  // std dev = 1,97e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.55735637514515;  // std dev = 0,000365, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.11231637819360692;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.10159632948783621;  // std dev = 4,21e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.41751358415831086;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.41899114454296804;  // std dev = 0,000360, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else return -0.1015963294878366;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601503;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.3217137664757833;  // std dev = 0,000322, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926087;  // std dev = 6,83e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.6782271792788072;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926083;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926079;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926089;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.09269127618926075;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 2,89e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.08518475138839682;  // std dev = 4,34e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( female(A) )
%   | | | then return 0.2551722425694897;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0.2558558113690742;  // std dev = 0,003, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else if ( genre(B, E) )
%   | then return -0.08518475138839675;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839676;  // std dev = 4,06e-09, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.08518475138839678;  // std dev = 3,49e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0787767547310918;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.07877675473109173;  // std dev = 2,58e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253592;  // std dev = 4,56e-09, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.2102404790907648;  // std dev = 0,000245, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109155;  // std dev = 5,27e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return -0.07877675473109146;  // std dev = 7,88e-08, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else return -0.07877675473109161;  // std dev = 1,86e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1770964977452772;  // std dev = 2,11e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | | else return 0.1714444825169089;  // std dev = 0,722, 120,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=119 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333696;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333696;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333724;  // std dev = 0,000, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
%   | | | else return 0.1540399510369719;  // std dev = 0,238, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15296665582603095;  // std dev = 0,000788, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.15386606091126098;  // std dev = 0,000210, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420265;  // std dev = 4,84e-09, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420271;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.2422801515178977;  // std dev = 0,602, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420265;  // std dev = 2,46e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420282;  // std dev = 0,000, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | | else if ( female(A) )
%   | | | then return -0.07002575572868591;  // std dev = 0,015, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420264;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13451287798438824;  // std dev = 0,000422, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.06415345060551451;  // std dev = 4,70e-05, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.05450647330936141;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202615;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202578;  // std dev = 1,53e-07, 341,000 (wgt'ed) examples reached here.  /* #neg=341 */
%   | | | else return 0.11676720863465669;  // std dev = 0,206, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.091658
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 5.727 seconds
Total inference time: 2.148 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064555
   Precision = 0.93578 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966825


Total scoring time: 3.645 seconds
Refined model CLL: -0.064555


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.091658
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 14.425 seconds
Total inference time: 2.148 seconds
AUC ROC: 1.0
Total revision time: 14.425
Best scored revision CLL: -0.064555


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:07:40
{'Learning time': 14.425, 'CLL': -0.091658, 'parameter_1.0': {'Learning time': 2.325, 'CLL': -0.155556, 'Recall': 0.724719, 'F1': 0.708791, 'Precision': [0.693548, 0.5], 'AUC PR': 0.81824, 'Inference time': 1.956, 'AUC ROC': 0.97199}, 'Recall': 1.0, 'F1': 0.770563, 'Precision': [0.626761, 0.5], 'AUC PR': 1.0, 'Inference time': 2.148, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048754;  // std dev = 2,40e-07, 386,000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.12544463852839224;  // std dev = 0,000, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.11231637819360658;  // std dev = 0,000, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783605;  // std dev = 1,88e-07, 383,000 (wgt'ed) examples reached here.  /* #neg=383 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4,00e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.0928229056180796;  // std dev = 0,054, 409,000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4,46e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08530674127751908;  // std dev = 0,050, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07875835129538371;  // std dev = 0,000, 395,000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07323026062583005;  // std dev = 0,000, 385,000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06852177635024032;  // std dev = 0,041, 381,000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06417297733348783;  // std dev = 0,000, 409,000 (wgt'ed) examples reached here.  /* #neg=409 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 1,38e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067171
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.95 seconds
Total inference time: 1.796 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:07:46
{'Learning time': 3.95, 'CLL': -0.067171, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.796, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.14185106490048738;  // std dev = 2,92e-07, 409,000 (wgt'ed) examples reached here.  /* #neg=409 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.644 seconds
Total inference time: 1.307 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:07:49
{'Learning time': 1.644, 'CLL': -0.188432, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.307, 'Precision': [nan, 0.5]}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.46723984419042236;  // std dev = 5,118, 110,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048763;  // std dev = 8,93e-09, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7912968304133796;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else return 0.08296349708004595;  // std dev = 3,149, 48,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839136;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3630464157267638;  // std dev = 4,254, 101,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360621;  // std dev = 7,60e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.30334317907152597;  // std dev = 0,409, 98,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2636657646326856;  // std dev = 3,780, 93,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=67 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4645400259302147;  // std dev = 0,152, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.19324140945096782;  // std dev = 3,824, 94,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0851847513883969;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839678;  // std dev = 4,17e-09, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10873375445937411;  // std dev = 4,083, 101,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109158;  // std dev = 5,96e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3183124162388311;  // std dev = 0,834, 54,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07924304633062715;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333707;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(A, F) )
%   | | then return -0.09724709269585263;  // std dev = 0,252, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.13658422400040454;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return -0.07324622576333707;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.008044846162732874;  // std dev = 4,159, 113,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07365058003812423;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06691280581518794;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06842697784420267;  // std dev = 4,27e-09, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2656269111490222;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else return -0.06457425335887056;  // std dev = 0,004, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( genre(A, E) )
%   | | then return -0.17608163138062166;  // std dev = 0,380, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.20894327183204237;  // std dev = 3,231, 55,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.195995
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.735 seconds
Total inference time: 1.725 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.975584
   AUC PR    = 0.840069
   CLL	      = -0.183401
   Precision = 0.828125 at threshold = 0.5
   Recall    = 0.791045
   F1        = 0.80916


Total scoring time: 2.022 seconds
Parameter learned model CLL: -0.183401


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [5.118, 43, 67], 'false,false': [0.0, 0, 0], 'false,true,false': [8.93e-09, 95, 0], 'false,true,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 98, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [3.149, 34, 14], 'true,true,true': [0.0, 0, 53]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [7.6e-08, 94, 0], 'true': [4.254, 34, 67], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.0, 118, 0], 'true,true': [0.409, 31, 67], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [3.78, 26, 67], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 79, 0], 'false,true,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [4.17e-09, 96, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [3.824, 27, 67], 'false,true,true,false': [0.0, 7, 0], 'true,true,true': [0.152, 4, 0], 'false,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [5.96e-08, 105, 0], 'true': [4.083, 34, 67], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.252, 11, 0], 'true,true,false,false': [0.0, 8, 0], 'true,false,false,true': [2.996, 25, 14], 'true,true,true': [0.834, 1, 53], 'true,true,false,true': [0.0, 2, 0], 'true,false,false,false': [0.0, 75, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [4.159, 46, 67], 'false,false': [0.0, 0, 0], 'false,true,false': [4.27e-09, 82, 0], 'false,true,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.38, 9, 0], 'true,true,false': [0.004, 12, 0], 'true,true,true': [0.0, 0, 53], 'true,false,false,false': [0.0, 60, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [3.231, 41, 14]}]]
[{'': [0.23809917355371835, 8.074349270001139e-17], 'false,true': [0.0, 7.946859544685331e-17], 'false': [8.074349270001139e-17, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.22331144005489498, -6.797283824235652e-18], 'true,true': [-1.2065820041209248e-15, 0.20659722222222188], 'true': [0.22331144005489498, nan], 'false': [-6.797283824235652e-18, nan]}, {'': [0.17918885860193123, 6.5953843047039e-17], 'false,true': [-1.982541115402065e-18, 6.141659285160441e-17], 'false': [6.5953843047039e-17, nan]}, {'': [0.16690047073605213, -1.881733940042638e-17], 'true': [0.16690047073605213, nan], 'false': [-1.881733940042638e-17, nan]}, {'': [0.15361042036907474, 4.989766402809692e-18], 'false,true': [0.0, -1.4053456007913374e-18], 'false': [4.989766402809692e-18, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.16635668560822897, 2.0479842201823276e-17], 'true,true': [0.005755643101920782, 0.15553051061595724], 'true': [0.16635668560822897, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 1.61907524424502e-17], 'false': [2.0479842201823276e-17, nan]}, {'': [0.16505541798716614, 3.463080994243608e-17], 'false,true': [0.0, 3.3835368369528583e-17], 'false': [3.463080994243608e-17, nan]}, {'': [0.08669229834189632, nan], 'true,true': [0.01288897503746149, 5.753897106603595e-06], 'true': [0.031212832022044307, 0.07312567971642144], 'true,true,false': [0.0, 0.0], 'true,false,false': [0.23011176857330712, -5.921189464667502e-18], 'true,false': [0.005760416135123206, 0.0796253579168519]}, {'': [0.15304147811578064, 5.125303804969855e-07], 'false,true': [4.085784133134318e-06, 1.8278061990780017e-17], 'false': [5.125303804969855e-07, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.09115405787809017, nan], 'true,true': [-3.35161667811368e-17, 1.608639057378361e-06], 'true': [0.01641328314542269, 0.09029873985425736], 'true,false,false': [0.18975206611570278, -3.23815048849004e-18], 'true,false': [0.016025563644281506, 0.09597933022767194]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.7194734122109546;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.7194734122109543;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( actor(A) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1281790429237408;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360635;  // std dev = 3,48e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.12054508679068252;  // std dev = 0,111, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D) )
%   | then return -0.11212185311909154;  // std dev = 0,000123, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.11231637819360624;  // std dev = 5,87e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11215297713101391;  // std dev = 0,000298, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10107805898314007;  // std dev = 0,001, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.13139935151237453;  // std dev = 0,048, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.10159632948783616;  // std dev = 6,32e-09, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( female(B) )
%   | | | then return -0.10161351779895447;  // std dev = 2,54e-06, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10136261141882119;  // std dev = 2,46e-06, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.1059199672509386;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09270489979733233;  // std dev = 8,08e-05, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.0923432084530709;  // std dev = 0,001, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.1140646860321535;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09262703057440133;  // std dev = 0,000545, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926108;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.09251842392925548;  // std dev = 0,000196, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08520583894121803;  // std dev = 4,33e-05, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08489063746045991;  // std dev = 0,001, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.09569598244700607;  // std dev = 0,081, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D) )
%   | then return -0.08518675406263158;  // std dev = 2,45e-06, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839689;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518885709214084;  // std dev = 4,91e-05, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839693;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.08517902386717738;  // std dev = 0,000163, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07878626769452157;  // std dev = 6,41e-05, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07857591752976854;  // std dev = 0,000940, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08791662662695772;  // std dev = 0,075, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07880187399754023;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07855659115923738;  // std dev = 0,000295, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.0787768121516143;  // std dev = 2,44e-06, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return -0.07877813031203279;  // std dev = 7,58e-06, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.07868003005283886;  // std dev = 0,000146, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527714;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.167021799005315;  // std dev = 0,317, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324926732669672;  // std dev = 3,78e-06, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0815456985534003;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07185640118906562;  // std dev = 0,002, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07321399157271365;  // std dev = 0,001, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | | else return 0.13291834080522524;  // std dev = 0,393, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.1545580305775355;  // std dev = 0,003, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return 0.1545661644322853;  // std dev = 0,001, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06844350801044966;  // std dev = 3,99e-05, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06817684818026792;  // std dev = 0,001, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.06363904516233677;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.08382240387074903;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.06853611214797822;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06829738900461689;  // std dev = 0,000237, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06841613998285938;  // std dev = 0,000106, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1344815449239446;  // std dev = 0,000577, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else if ( female(A) )
%   | | | then return -0.06419210547988129;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06955984750737793;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return -0.05995052415100821;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06421338030847722;  // std dev = 5,79e-05, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06414938853162787;  // std dev = 0,001, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | | else return 0.09083375235190573;  // std dev = 0,382, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064148
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.403 seconds
Total inference time: 1.692 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065842
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.328 seconds
Refined model CLL: -0.065842


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064148
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.488 seconds
Total inference time: 1.692 seconds
AUC ROC: 1.0
Total revision time: 10.488
Best scored revision CLL: -0.065842


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:08:04
{'Learning time': 10.488, 'parameter_0.2': {'Learning time': 1.735, 'CLL': -0.195995, 'Recall': 1.0, 'F1': 0.957447, 'Precision': [0.918367, 0.5], 'AUC PR': 1.0, 'Inference time': 1.725, 'AUC ROC': 1.0}, 'CLL': -0.064148, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 1.692, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048774;  // std dev = 4,71e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.1254446385283911;  // std dev = 7,60e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360624;  // std dev = 8,82e-08, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.10159632948783638;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.092691276189261;  // std dev = 4,21e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.08518475138839682;  // std dev = 6,66e-08, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07877675473109161;  // std dev = 6,05e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07324622576333716;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06842697784420265;  // std dev = 5,67e-08, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06419184008202626;  // std dev = 0,000, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.721 seconds
Total inference time: 1.423 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:08:09
{'Learning time': 2.721, 'CLL': -0.063847, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.423, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048766;  // std dev = 8,16e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.0 seconds
Total inference time: 0.949 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:08:11
{'Learning time': 1.0, 'CLL': -0.160469, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 0.949, 'Precision': [nan, 0.5]}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.508634371992713;  // std dev = 6,844, 206,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.14185106490048827;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7575925319051116;  // std dev = 1,709, 112,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=109 */
%   | | else return 0.05910352091609955;  // std dev = 4,258, 91,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839172;  // std dev = 0,000, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.40204657741043864;  // std dev = 5,553, 188,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.28232572886232865;  // std dev = 0,410, 198,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783653;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20096254865198215;  // std dev = 5,879, 203,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=134 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926092;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926087;  // std dev = 5,27e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.09269127618926057;  // std dev = 6,59e-09, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4487014517837141;  // std dev = 0,155, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.18565002765372815;  // std dev = 5,523, 192,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839678;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.08518475138839678;  // std dev = 5,27e-09, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10227825971334867;  // std dev = 5,882, 207,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07877675473109147;  // std dev = 7,74e-08, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.32268379398300545;  // std dev = 1,447, 112,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=109 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.073246225763337;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( genre(A, F) )
%   | | then return -0.14548009781732546;  // std dev = 0,494, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2275225770524522;  // std dev = 4,308, 97,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   | | | else return -0.07324622576333671;  // std dev = 1,02e-07, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0649037451213241;  // std dev = 5,374, 207,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0684269778442027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0639635342491496;  // std dev = 3,73e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.06842697784420262;  // std dev = 5,35e-09, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2558275232792331;  // std dev = 0,857, 110,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=109 */
%   | | else return -0.06419184008202614;  // std dev = 3,73e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( genre(A, E) )
%   | | then return -0.1347281528314541;  // std dev = 0,569, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.15070355877523264;  // std dev = 4,201, 85,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.194383
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 2.011 seconds
Total inference time: 1.637 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.977841
   AUC PR    = 0.856594
   CLL	      = -0.182977
   Precision = 0.813433 at threshold = 0.5
   Recall    = 0.813433
   F1        = 0.813433


Total scoring time: 2.233 seconds
Parameter learned model CLL: -0.182977


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [6.844, 72, 134], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 174, 0], 'false,true,true,false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 212, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.258, 66, 25], 'true,true,true': [1.709, 3, 109]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 170, 0], 'true': [5.553, 54, 134], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.0, 195, 0], 'true,true': [0.41, 64, 134], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [1.86e-09, 3, 0], 'true': [5.879, 69, 134], 'false,false': [0.0, 0, 0], 'false,true,false': [6.59e-09, 194, 0], 'false,true,true,false': [5.27e-09, 17, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [5.27e-09, 181, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.523, 58, 134], 'false,true,true,false': [7.45e-09, 19, 0], 'true,true,true': [0.155, 5, 0], 'false,true,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [7.74e-08, 183, 0], 'true': [5.882, 73, 134], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.494, 18, 0], 'true,true,false,false': [0.0, 18, 0], 'true,false,false,true': [4.308, 72, 25], 'true,true,true': [1.447, 3, 109], 'true,true,false,true': [0.0, 3, 0], 'true,false,false,false': [1.02e-07, 177, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [5.374, 73, 134], 'false,false': [0.0, 0, 0], 'false,true,false': [5.35e-09, 189, 0], 'false,true,true,false': [3.73e-09, 16, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.569, 24, 0], 'true,true,false': [3.73e-09, 20, 0], 'true,true,true': [0.857, 1, 109], 'true,false,false,false': [0.0, 144, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [4.201, 60, 25]}]]
[{'': [0.22735413328306595, -2.220446049250313e-16], 'false,true': [-6.938893903907228e-18, -1.8376105235175005e-16], 'false': [-2.220446049250313e-16, nan], 'false,true,true': [0.0, -1.4802973661668754e-17]}, {'': [0.22436846319978582, -4.3989968900242054e-17], 'true,true': [0.0260682397959165, 0.19925129815239756], 'true': [0.22436846319978582, nan], 'false': [-4.3989968900242054e-17, nan]}, {'': [0.16400377173734523, -2.804773956947764e-17], 'false,true': [-2.7755575615628915e-18, 0.0], 'false': [-2.804773956947764e-17, nan]}, {'': [0.16828031837758253, -9.109522253334617e-17], 'true': [0.16828031837758253, nan], 'false': [-9.109522253334617e-17, nan]}, {'': [0.17026010473764536, 4.46164393073661e-17], 'false,true': [2.7755575615628915e-18, 4.234871331044411e-17], 'false': [4.46164393073661e-17, nan], 'false,true,true': [1.1564823173178713e-18, 1.6326809185664067e-18]}, {'': [0.1649137589456993, 2.982688722873555e-17], 'true,true': [0.004781362807670631, 0.1588706297872302], 'true': [0.1649137589456993, nan], 'false,true,true': [0.0, 2.921639538487254e-18], 'false,true': [1.3877787807814458e-18, 2.821561278052884e-17], 'false': [2.982688722873555e-17, nan]}, {'': [0.1671622804026363, 2.6512788647764932e-17], 'false,true': [-3.854941057726238e-18, 3.276067941516855e-17], 'false': [2.6512788647764932e-17, nan]}, {'': [0.0917609207775958, nan], 'true,true': [0.018685981054787422, -1.32169407693471e-18], 'true': [0.036579075086979294, 0.06951208932484068], 'true,true,false': [0.0, -7.709882115452476e-19], 'true,false,false': [0.19130619619513234, 5.896099678800266e-17], 'true,false': [0.013566103906971133, 0.07316823961929819]}, {'': [0.13952936227987286, 1.4271816224160434e-06], 'false,true': [1.1029662962623344e-06, 2.878355989768924e-17], 'false': [1.4271816224160434e-06, nan], 'false,true,true': [0.0, 8.673617379884035e-19]}, {'': [0.07555889811941263, nan], 'true,true': [0.006671654770688029, 6.938893903907229e-19], 'true': [0.018977037139547768, 0.07273743694984555], 'true,false,false': [0.2076124567474043, -1.1564823173178714e-17], 'true,false': [0.013475237775525006, 0.07880826122378198]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048768;  // std dev = 5,96e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.14185106490048824;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.12544463852839177;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 3,49e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.5553664367462837;  // std dev = 3,49e-08, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D) )
%   | then return -0.1123163781936063;  // std dev = 1,86e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.11231637819360611;  // std dev = 8,69e-08, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | | else return -0.11231637819360629;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.11231637819360629;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.10159632948783653;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.3207118471601499;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926092;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926087;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09269127618926087;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.0851847513883968;  // std dev = 1,32e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253595;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.20975771563253595;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.07877675473109162;  // std dev = 3,65e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.17709649774527733;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.073246225763337;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.12233402697776805;  // std dev = 0,585, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | | else return -0.07324622576333664;  // std dev = 1,24e-07, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15493250297428204;  // std dev = 0,003, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.15327492633676051;  // std dev = 0,002, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420268;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07401434983171161;  // std dev = 0,028, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.0786039768214511;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420262;  // std dev = 2,36e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.06842697784420262;  // std dev = 2,58e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.1216546557523877;  // std dev = 0,332, 49,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=46 */
%   | | | else return 0.11676901094982842;  // std dev = 0,462, 69,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=63 */
%   | | else return -0.06419184008202619;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06419184008202616;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202626;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | | | else return 0.11704286950299754;  // std dev = 0,355, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064563
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.516 seconds
Total inference time: 1.815 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065433
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.122 seconds
Refined model CLL: -0.065433


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064563
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.882 seconds
Total inference time: 1.815 seconds
AUC ROC: 1.0
Total revision time: 10.882
Best scored revision CLL: -0.065433


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:08:26
{'Learning time': 10.882, 'CLL': -0.064563, 'parameter_0.4': {'Learning time': 2.011, 'CLL': -0.194383, 'Recall': 1.0, 'F1': 0.957447, 'Precision': [0.918367, 0.5], 'AUC PR': 1.0, 'Inference time': 1.637, 'AUC ROC': 1.0}, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 1.815, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.14185106490048846;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.1254446385283918;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.11231637819360675;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783648;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.09269127618926058;  // std dev = 5,37e-08, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 7,74e-08, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.07877675473109144;  // std dev = 6,32e-08, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07324622576333668;  // std dev = 1,18e-07, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.0684269778442027;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202619;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06419184008202623;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.166 seconds
Total inference time: 1.38 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:08:31
{'Learning time': 3.166, 'CLL': -0.063847, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.38, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048832;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.244 seconds
Total inference time: 0.983 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:08:33
{'Learning time': 1.244, 'CLL': -0.160469, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 0.983, 'Precision': [nan, 0.5]}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5248156017661751;  // std dev = 8,206, 303,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.14185106490048796;  // std dev = 0,000, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7694338176240785;  // std dev = 1,406, 164,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=162 */
%   | | else return 0.08697245102567709;  // std dev = 5,271, 131,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839205;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.35785072571317067;  // std dev = 7,314, 302,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.11231637819360679;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.24988304636803058;  // std dev = 0,424, 318,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783662;  // std dev = 0,000, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20120719519217337;  // std dev = 7,423, 311,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=202 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926087;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926086;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.09269127618926046;  // std dev = 7,45e-09, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4907624936842676;  // std dev = 0,207, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.1719589812032276;  // std dev = 7,135, 302,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.0851847513883968;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.08518475138839678;  // std dev = 5,89e-09, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09209950189870392;  // std dev = 7,569, 325,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.07877675473109141;  // std dev = 4,47e-08, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.35673063755944673;  // std dev = 0,835, 163,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=162 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( genre(A, F) )
%   | | then return -0.11220092050835771;  // std dev = 0,495, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.18953855357409383;  // std dev = 5,360, 142,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=40 */
%   | | | else return -0.07324622576333674;  // std dev = 1,23e-07, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09673009595822744;  // std dev = 6,371, 298,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420267;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0659851812360397;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.06842697784420292;  // std dev = 0,000, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.25448136572035157;  // std dev = 1,200, 164,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=162 */
%   | | else return -0.0641918400820261;  // std dev = 9,86e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( genre(A, E) )
%   | | then return -0.11958805764797797;  // std dev = 0,656, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.10630114553469483;  // std dev = 5,131, 117,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | | else return -0.06419184008202625;  // std dev = 1,83e-08, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.200735
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 2.504 seconds
Total inference time: 1.74 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.975846
   AUC PR    = 0.846811
   CLL	      = -0.191574
   Precision = 0.81 at threshold = 0.5
   Recall    = 0.80198
   F1        = 0.80597


Total scoring time: 2.709 seconds
Parameter learned model CLL: -0.191574


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 4, 0], 'true': [8.206, 101, 202], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 284, 0], 'false,true,true,false': [1.05e-08, 21, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 316, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.271, 91, 40], 'true,true,true': [1.406, 2, 162]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 235, 0], 'true': [7.314, 100, 202], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.0, 285, 0], 'true,true': [0.424, 116, 202], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [7.423, 109, 202], 'false,false': [0.0, 0, 0], 'false,true,false': [7.45e-09, 261, 0], 'false,true,true,false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [5.89e-09, 271, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [7.135, 100, 202], 'false,true,true,false': [0.0, 25, 0], 'true,true,true': [0.207, 6, 0], 'false,true,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [4.47e-08, 288, 0], 'true': [7.569, 123, 202], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.495, 31, 0], 'true,true,false,false': [0.0, 32, 0], 'true,false,false,true': [5.36, 102, 40], 'true,true,true': [0.835, 1, 162], 'true,true,false,true': [0.0, 3, 0], 'true,false,false,false': [1.23e-07, 241, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 2, 0], 'true': [6.371, 96, 202], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 284, 0], 'false,true,true,false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.656, 39, 0], 'true,true,false': [9.86e-09, 30, 0], 'true,true,true': [1.2, 2, 162], 'true,false,false,false': [1.83e-08, 232, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [5.131, 77, 40]}]]
[{'': [0.2222222222222269, 5.748727635599516e-17], 'false,true': [1.3322676295501878e-17, -1.2509555207044018e-17], 'false': [5.748727635599516e-17, nan], 'false,true,true': [0.0, 5.28677630773884e-18]}, {'': [0.21586900316001598, -8.994211845064559e-17], 'true,true': [0.012046400951811066, 0.2121088514655332], 'true': [0.21586900316001598, nan], 'false': [-8.994211845064559e-17, nan]}, {'': [0.177129425720721, -9.868649107779169e-17], 'false,true': [-1.0675221390626506e-17, -8.12588766959689e-17], 'false': [-9.868649107779169e-17, nan]}, {'': [0.17942180799765287, -5.609547913895528e-17], 'true': [0.17942180799765287, nan], 'false': [-5.609547913895528e-17, nan]}, {'': [0.1771803323716199, 7.375333167121181e-17], 'false,true': [-5.046468293750712e-18, 5.614921044081252e-17], 'false': [7.375333167121181e-17, nan], 'false,true,true': [0.0, -6.6084703846735505e-18]}, {'': [0.17381318398407888, 3.588599675556062e-17], 'true,true': [0.007133450014842298, 0.16856886252795433], 'true': [0.17381318398407888, nan], 'false,true,true': [0.0, -1.1102230246251566e-18], 'false,true': [-1.0675221390626506e-18, 3.441281699945135e-17], 'false': [3.588599675556062e-17, nan]}, {'': [0.17626075048109074, 1.4142968466562504e-18], 'false,true': [-3.2025664171879517e-18, 6.938893903907228e-18], 'false': [1.4142968466562504e-18, nan]}, {'': [0.09362305521513353, nan], 'true,true': [0.004282037612849991, -7.137148015447434e-18], 'true': [0.0304290243212835, 0.07291280534968263], 'true,true,false': [0.0, -6.071532165918825e-18], 'true,false,false': [0.20234080539575416, 6.265158977137813e-17], 'true,false': [0.007890834861924257, 0.07817438346799024]}, {'': [0.13618993648607355, 3.954633610782985e-07], 'false,true': [4.554588710556362e-07, -4.300159602421381e-17], 'false': [3.954633610782985e-07, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.07159731320399364, nan], 'true,true': [0.008774166635583575, 3.23815048849004e-18], 'true': [0.02069289343160367, 0.06946677803722665], 'true,false,false': [0.2249981737161229, 1.4356332214980472e-18], 'true,false': [0.011041927203095473, 0.07582435279335742]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048766;  // std dev = 7,88e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.14185106490048816;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return -0.12544463852839194;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,08e-08, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else return 0.5553664367462835;  // std dev = 4,01e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.11231637819360633;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.11231637819360686;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830964;  // std dev = 2,74e-08, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else return 0.4175135841583099;  // std dev = 2,30e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.1015963294878362;  // std dev = 5,37e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783662;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601502;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else return 0.3207118471601504;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926092;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926082;  // std dev = 1,32e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926078;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926079;  // std dev = 1,97e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.09269127618926089;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( female(A) )
%   | | then return -0.0851847513883968;  // std dev = 3,84e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.08518475138839679;  // std dev = 2,28e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.08518475138839678;  // std dev = 1,05e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.08518475138839675;  // std dev = 3,80e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 1,51e-08, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else return 0.20975771563253567;  // std dev = 1,29e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109143;  // std dev = 5,77e-08, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
%   | | | else return -0.07877675473109165;  // std dev = 5,27e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.07877675473109165;  // std dev = 9,31e-10, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527722;  // std dev = 8,43e-08, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | | | else return 0.16884344092631187;  // std dev = 0,426, 91,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=88 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333698;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333703;  // std dev = 8,69e-08, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
%   | | | else return 0.13111518118247079;  // std dev = 0,679, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15456908437595096;  // std dev = 0,003, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else return 0.15422955469606275;  // std dev = 0,001, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420267;  // std dev = 4,17e-09, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07087540437375664;  // std dev = 0,016, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420264;  // std dev = 2,08e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420262;  // std dev = 3,23e-09, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
%   | | else if ( actor(A) )
%   | | | then return -0.0704129423853013;  // std dev = 0,032, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.06842697784420264;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( director(A) )
%   | | | then return -0.0801807916962377;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.13433800471070553;  // std dev = 0,006, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | | else return -0.06409955918042701;  // std dev = 4,98e-05, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 1,32e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.06413533116290783;  // std dev = 7,15e-05, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.09942112596747096;  // std dev = 0,587, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | | | else return -0.0642287485180838;  // std dev = 0,013, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063879
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.94 seconds
Total inference time: 1.93 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0648
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.942 seconds
Refined model CLL: -0.0648


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063879
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.095 seconds
Total inference time: 1.93 seconds
AUC ROC: 1.0
Total revision time: 14.095
Best scored revision CLL: -0.0648


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:08:52
{'Learning time': 14.095, 'parameter_0.6': {'Learning time': 2.504, 'CLL': -0.200735, 'Recall': 1.0, 'F1': 0.957447, 'Precision': [0.918367, 0.5], 'AUC PR': 1.0, 'Inference time': 1.74, 'AUC ROC': 1.0}, 'CLL': -0.063879, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 1.93, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048785;  // std dev = 7,30e-08, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1254446385283913;  // std dev = 3,16e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.12544463852839208;  // std dev = 0,000, 349,000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.11231637819360653;  // std dev = 0,000, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.10159632948783655;  // std dev = 0,000, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926093;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.09269127618926083;  // std dev = 1,55e-07, 403,000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.07877675473109146;  // std dev = 2,98e-08, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07324622576333713;  // std dev = 6,14e-08, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.0684269778442032;  // std dev = 0,000, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.0641918400820259;  // std dev = 1,35e-07, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.922 seconds
Total inference time: 1.496 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:08:57
{'Learning time': 3.922, 'CLL': -0.063847, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.496, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.14185106490048768;  // std dev = 1,74e-07, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.555 seconds
Total inference time: 1.025 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:09:00
{'Learning time': 1.555, 'CLL': -0.160469, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.025, 'Precision': [nan, 0.5]}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4910901115700963;  // std dev = 9,937, 425,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.14185106490048754;  // std dev = 1,22e-08, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7783216745842222;  // std dev = 1,408, 222,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=220 */
%   | | else return 0.05955290581545199;  // std dev = 5,972, 180,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839224;  // std dev = 0,000, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3700144477440166;  // std dev = 8,311, 398,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360622;  // std dev = 2,47e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.11231637819360658;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2676428714742588;  // std dev = 0,417, 413,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783588;  // std dev = 1,14e-08, 407,000 (wgt'ed) examples reached here.  /* #neg=407 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21569702627568693;  // std dev = 8,274, 405,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=269 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926097;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.09269127618926055;  // std dev = 1,02e-08, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.43189397773212446;  // std dev = 0,281, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.17828363322296525;  // std dev = 8,017, 396,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0851847513883968;  // std dev = 1,49e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.08518475138839678;  // std dev = 6,32e-09, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12914544148813487;  // std dev = 8,067, 403,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.07877675473109143;  // std dev = 9,88e-08, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.33599806355774114;  // std dev = 1,467, 223,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=220 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( genre(A, F) )
%   | | then return -0.12773947653000348;  // std dev = 0,651, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.14901201439739312;  // std dev = 5,735, 149,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=49 */
%   | | | else return -0.07324622576333764;  // std dev = 0,000, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05248019704529733;  // std dev = 7,727, 421,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0684269778442027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06503395652354832;  // std dev = 1,39e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.06842697784420336;  // std dev = 0,000, 401,000 (wgt'ed) examples reached here.  /* #neg=401 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.24982135518453888;  // std dev = 1,716, 224,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=220 */
%   | | else return -0.06419184008202612;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( genre(A, E) )
%   | | then return -0.11649893703727277;  // std dev = 0,712, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.14950751218816613;  // std dev = 5,838, 161,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
%   | | | else return -0.06419184008202579;  // std dev = 1,53e-07, 340,000 (wgt'ed) examples reached here.  /* #neg=340 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.198737
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 2.845 seconds
Total inference time: 1.755 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.97783
   AUC PR    = 0.859339
   CLL	      = -0.189551
   Precision = 0.808824 at threshold = 0.5
   Recall    = 0.817844
   F1        = 0.813309


Total scoring time: 3.075 seconds
Parameter learned model CLL: -0.189551


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 3, 0], 'true': [9.937, 156, 269], 'false,false': [0.0, 0, 0], 'false,true,false': [1.22e-08, 351, 0], 'false,true,true,false': [4.34e-08, 41, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 389, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.972, 131, 49], 'true,true,true': [1.408, 2, 220]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 336, 0], 'true': [8.311, 129, 269], 'false,false': [0.0, 0, 0], 'false,true,true': [2.47e-08, 30, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [1.14e-08, 407, 0], 'true,true': [0.417, 144, 269], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [2.63e-09, 6, 0], 'true': [8.274, 136, 269], 'false,false': [0.0, 0, 0], 'false,true,false': [1.02e-08, 359, 0], 'false,true,true,false': [5.27e-09, 27, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [6.32e-09, 382, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [8.017, 127, 269], 'false,true,true,false': [1.49e-08, 31, 0], 'true,true,true': [0.281, 18, 0], 'false,true,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [9.88e-08, 374, 0], 'true': [8.067, 134, 269], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.651, 38, 0], 'true,true,false,false': [9.13e-09, 36, 0], 'true,false,false,true': [5.735, 100, 49], 'true,true,true': [1.467, 3, 220], 'true,true,false,true': [0.0, 1, 0], 'true,false,false,false': [0.0, 310, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 5, 0], 'true': [7.727, 152, 269], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 401, 0], 'false,true,true,false': [1.39e-08, 31, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.712, 46, 0], 'true,true,false': [7.45e-09, 24, 0], 'true,true,true': [1.716, 4, 220], 'true,false,false,false': [1.53e-07, 340, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [5.838, 112, 49]}]]
[{'': [0.23232664359861926, 2.24855296126614e-16], 'false,true': [4.794144879063176e-17, 1.4676452519261327e-16], 'false': [2.24855296126614e-16, nan], 'false,true,true': [0.0, 4.603363760640893e-17]}, {'': [0.22138684686022736, -1.2786116067662472e-16], 'true,true': [0.008927846765684377, 0.19811728395061656], 'true': [0.22138684686022736, nan], 'false': [-1.2786116067662472e-16, nan]}, {'': [0.173552119881749, -2.669388693087808e-17], 'false,true': [2.0354088784794535e-17, -3.700743415417188e-17], 'false': [-2.669388693087808e-17, nan]}, {'': [0.17419614247534787, 1.3093539356758603e-16], 'true': [0.17419614247534787, nan], 'false': [1.3093539356758603e-16, nan]}, {'': [0.16904257655634902, 6.230843505549347e-17], 'false,true': [-5.046468293750712e-18, 1.0143541840586388e-16], 'false': [6.230843505549347e-17, nan], 'false,true,true': [1.1564823173178713e-18, 1.02798428206033e-18]}, {'': [0.1709394514550598, 3.959349581795739e-17], 'true,true': [0.004386973985762389, 0.16232233526880482], 'true': [0.1709394514550598, nan], 'false,true,true': [0.0, 7.162729191130042e-18], 'false,true': [8.41078048958452e-18, 3.836372755249232e-17], 'false': [3.959349581795739e-17, nan]}, {'': [0.16147527103184348, 3.1032739965426065e-17], 'false,true': [0.0, 2.6122894697062506e-17], 'false': [3.1032739965426065e-17, nan]}, {'': [0.08686859837092409, nan], 'true,true': [0.009644793555195074, 2.250452076942885e-18], 'true': [0.02871434822543435, 0.06824568493666669], 'true,true,false': [0.0, 2.3129646346357427e-18], 'true,false,false': [0.22071077879374848, -6.231574396283137e-17], 'true,false': [0.011135678921695483, 0.07290539952031266]}, {'': [0.14181582902672268, 7.587488234370401e-07], 'false,true': [1.3768919913431345e-06, -1.1462152922563961e-16], 'false': [7.587488234370401e-07, nan], 'false,true,true': [0.0, 6.267388042238787e-18]}, {'': [0.07198773857160101, nan], 'true,true': [0.013153323167743354, 2.3129646346357427e-18], 'true': [0.020499318003047502, 0.06474394082824808], 'true,false,false': [0.2117202268431002, 6.922567094721564e-17], 'true,false': [0.011012803631266735, 0.06962523955544486]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048793;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.14185106490048752;  // std dev = 2,33e-07, 354,000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839124;  // std dev = 4,34e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.12544463852839116;  // std dev = 6,66e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.12544463852839222;  // std dev = 0,000, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,21e-08, 135,000 (wgt'ed) examples reached here.  /* #pos=135 */
%   | | else return 0.5553664367462834;  // std dev = 4,15e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.11231637819360626;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360629;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.11231637819360628;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.11231637819360656;  // std dev = 0,000, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783646;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
%   else if ( female(A) )
%   | then return -0.10159632948783648;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else return -0.10159632948783658;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926087;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926093;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.09269127618926093;  // std dev = 2,11e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.09269127618926076;  // std dev = 6,50e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694895;  // std dev = 0,000, 135,000 (wgt'ed) examples reached here.  /* #pos=135 */
%   | | else return 0.2551722425694895;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 1,32e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.08518475138839679;  // std dev = 2,95e-09, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.08518475138839678;  // std dev = 2,58e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 2,79e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.08518475138839678;  // std dev = 5,58e-08, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253512;  // std dev = 1,60e-08, 135,000 (wgt'ed) examples reached here.  /* #pos=135 */
%   | | else return 0.20975771563253515;  // std dev = 1,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 2,08e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07877675473109175;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109143;  // std dev = 2,11e-08, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527716;  // std dev = 2,98e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | | else return 0.1731540926506536;  // std dev = 0,351, 127,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=125 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.12460528152572937;  // std dev = 0,802, 62,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=49 */
%   | | | else return -0.07324622576333727;  // std dev = 0,000, 438,000 (wgt'ed) examples reached here.  /* #neg=438 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1547935052260689;  // std dev = 0,003, 135,000 (wgt'ed) examples reached here.  /* #pos=135 */
%   | | else return 0.15368505414908254;  // std dev = 0,002, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420261;  // std dev = 3,23e-09, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07017466517400395;  // std dev = 0,017, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420264;  // std dev = 1,61e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0716600268589618;  // std dev = 0,024, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07224377181995997;  // std dev = 0,026, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.06842697784420296;  // std dev = 0,000, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( director(A) )
%   | | | then return -0.08055116941391291;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1341025030725972;  // std dev = 0,004, 220,000 (wgt'ed) examples reached here.  /* #pos=220 */
%   | | else if ( actor(A) )
%   | | | then return -0.06397989119921595;  // std dev = 0,000100, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.06417392933061779;  // std dev = 3,95e-05, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.1128824604668546;  // std dev = 0,537, 56,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=49 */
%   | | | else return -0.06419160220032556;  // std dev = 0,000105, 441,000 (wgt'ed) examples reached here.  /* #neg=441 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063869
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.809 seconds
Total inference time: 1.791 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064767
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.222 seconds
Refined model CLL: -0.064767


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063869
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.950999999999999 seconds
Total inference time: 1.791 seconds
AUC ROC: 1.0
Total revision time: 15.950999999999999
Best scored revision CLL: -0.064767


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:09:21
{'parameter_0.8': {'Learning time': 2.845, 'CLL': -0.198737, 'Recall': 1.0, 'F1': 0.957447, 'Precision': [0.918367, 0.5], 'AUC PR': 1.0, 'Inference time': 1.755, 'AUC ROC': 1.0}, 'Learning time': 15.950999999999999, 'CLL': -0.063869, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 1.791, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.14185106490048785;  // std dev = 0,000, 539,000 (wgt'ed) examples reached here.  /* #neg=539 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.12544463852839224;  // std dev = 0,000, 499,000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.11231637819360592;  // std dev = 0,000, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.10159632948783594;  // std dev = 2,31e-07, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.09269127618926129;  // std dev = 0,000, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.08518475138839678;  // std dev = 1,37e-07, 519,000 (wgt'ed) examples reached here.  /* #neg=519 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.07877675473109201;  // std dev = 0,000, 509,000 (wgt'ed) examples reached here.  /* #neg=509 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333724;  // std dev = 0,000, 453,000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.06842697784420353;  // std dev = 0,000, 533,000 (wgt'ed) examples reached here.  /* #neg=533 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.06419184008202562;  // std dev = 2,08e-07, 497,000 (wgt'ed) examples reached here.  /* #neg=497 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.353 seconds
Total inference time: 1.344 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:09:27
{'Learning time': 4.353, 'CLL': -0.063847, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.344, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.141851064900488;  // std dev = 0,000, 548,000 (wgt'ed) examples reached here.  /* #neg=548 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.533 seconds
Total inference time: 0.889 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:09:29
{'Learning time': 1.533, 'CLL': -0.160469, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 0.889, 'Precision': [nan, 0.5]}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5137909584458115;  // std dev = 10,773, 514,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.14185106490048727;  // std dev = 1,45e-08, 420,000 (wgt'ed) examples reached here.  /* #neg=420 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7728286823821021;  // std dev = 1,723, 281,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=278 */
%   | | else return 0.038916094376981424;  // std dev = 6,628, 231,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839235;  // std dev = 0,000, 508,000 (wgt'ed) examples reached here.  /* #neg=508 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.35453231623416387;  // std dev = 9,462, 509,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360617;  // std dev = 3,33e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.11231637819360597;  // std dev = 0,000, 457,000 (wgt'ed) examples reached here.  /* #neg=457 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.26866207060323566;  // std dev = 0,415, 517,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783553;  // std dev = 1,45e-08, 468,000 (wgt'ed) examples reached here.  /* #neg=468 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.208471080077116;  // std dev = 9,332, 514,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=337 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.09269127618926107;  // std dev = 5,59e-09, 427,000 (wgt'ed) examples reached here.  /* #neg=427 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4479365097190513;  // std dev = 0,345, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.17332635195743656;  // std dev = 9,039, 502,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839685;  // std dev = 2,47e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.08518475138839678;  // std dev = 6,65e-09, 426,000 (wgt'ed) examples reached here.  /* #neg=426 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10251800043392285;  // std dev = 9,445, 533,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.0787767547310916;  // std dev = 2,10e-07, 428,000 (wgt'ed) examples reached here.  /* #neg=428 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3466248837256659;  // std dev = 1,462, 281,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=278 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333707;  // std dev = 1,49e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( genre(A, F) )
%   | | then return -0.16007832563999833;  // std dev = 0,812, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2140471786924643;  // std dev = 6,647, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
%   | | | else return -0.07324622576333764;  // std dev = 0,000, 448,000 (wgt'ed) examples reached here.  /* #neg=448 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08089257829157571;  // std dev = 8,252, 513,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06309504986433905;  // std dev = 1,49e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.06842697784420347;  // std dev = 0,000, 450,000 (wgt'ed) examples reached here.  /* #neg=450 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2585389624065668;  // std dev = 1,217, 280,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=278 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( genre(A, E) )
%   | | then return -0.11324858789996727;  // std dev = 0,739, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.12648654780242202;  // std dev = 6,400, 193,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=59 */
%   | | | else return -0.06419184008202555;  // std dev = 2,06e-07, 416,000 (wgt'ed) examples reached here.  /* #neg=416 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.191296
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 2.812 seconds
Total inference time: 1.587 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.978805
   AUC PR    = 0.865091
   CLL	      = -0.182509
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total scoring time: 3.509 seconds
Parameter learned model CLL: -0.182509


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 4, 0], 'true': [10.773, 177, 337], 'false,false': [0.0, 0, 0], 'false,true,false': [1.45e-08, 420, 0], 'false,true,true,false': [2.58e-08, 29, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 508, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [6.628, 172, 59], 'true,true,true': [1.723, 3, 278]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 457, 0], 'true': [9.462, 172, 337], 'false,false': [0.0, 0, 0], 'false,true,true': [3.33e-08, 47, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [1.45e-08, 468, 0], 'true,true': [0.415, 180, 337], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 5, 0], 'true': [9.332, 177, 337], 'false,false': [0.0, 0, 0], 'false,true,false': [5.59e-09, 427, 0], 'false,true,true,false': [0.0, 42, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [6.65e-09, 426, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [9.039, 165, 337], 'false,true,true,false': [2.47e-08, 45, 0], 'true,true,true': [0.345, 18, 0], 'false,true,true,true': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [2.1e-07, 428, 0], 'true': [9.445, 196, 337], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 34, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.812, 48, 0], 'true,true,false,false': [1.49e-08, 39, 0], 'true,false,false,true': [6.647, 176, 59], 'true,true,true': [1.462, 3, 278], 'true,true,false,true': [0.0, 4, 0], 'true,false,false,false': [0.0, 448, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 4, 0], 'true': [8.252, 176, 337], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 450, 0], 'false,true,true,false': [1.49e-08, 40, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.739, 54, 0], 'true,true,false': [0.0, 38, 0], 'true,true,true': [1.217, 2, 278], 'true,false,false,false': [2.06e-07, 416, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [6.4, 134, 59]}]]
[{'': [0.22577556056867135, 1.8430192373468383e-16], 'false,true': [3.027880976250427e-17, 2.157004733557447e-16], 'false': [1.8430192373468383e-16, nan], 'false,true,true': [0.0, 2.2970131543968756e-17]}, {'': [0.2249717712402232, -1.3987061727561027e-16], 'true,true': [0.010562176264221313, 0.19017634602050013], 'true': [0.2249717712402232, nan], 'false': [-1.3987061727561027e-16, nan]}, {'': [0.17590793649512182, -1.76225876924628e-18], 'false,true': [2.362176648138631e-17, -9.717488180526534e-18], 'false': [-1.76225876924628e-18, nan]}, {'': [0.1722202863307389, 2.1065770210836303e-16], 'true': [0.1722202863307389, nan], 'false': [2.1065770210836303e-16, nan]}, {'': [0.16942527182727427, -1.1242764806330699e-17], 'false,true': [-4.724353296277262e-18, 3.016062549332978e-17], 'false': [-1.1242764806330699e-17, nan], 'false,true,true': [0.0, -6.6084703846735505e-18]}, {'': [0.1702533535713445, 4.5428750068169245e-17], 'true,true': [0.006597337029311707, 0.16276108263044883], 'true': [0.1702533535713445, nan], 'false,true,true': [1.734723475976807e-18, 1.3569392523196357e-17], 'false,true': [1.5710703178657875e-17, 4.378344322465406e-17], 'false': [4.5428750068169245e-17, nan]}, {'': [0.1673871994177129, 5.959638746905603e-17], 'false,true': [0.0, 1.0272156956812196e-16], 'false': [5.959638746905603e-17, nan]}, {'': [0.0903958022599672, nan], 'true,true': [0.007611523382444015, 6.454785026890445e-18], 'true': [0.026892972993503322, 0.06562127955561554], 'true,true,false': [0.0, 5.693451408334136e-18], 'true,false,false': [0.18803078315980118, -5.352861011585576e-17], 'true,false': [0.013749071802276802, 0.0691700065847302]}, {'': [0.1327481649173835, 2.1155850801206685e-06], 'false,true': [2.349541816737915e-06, -1.2434497875801754e-16], 'false': [2.1155850801206685e-06, nan], 'false,true,true': [0.0, 5.551115123125783e-18]}, {'': [0.0684943916460899, nan], 'true,true': [0.005287738744279645, -1.460819769243627e-18], 'true': [0.015614802380245577, 0.06344592393951544], 'true,false,false': [0.21224730865258162, 1.0248212535001446e-16], 'true,false': [0.010123804485528222, 0.06810400098013038]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048818;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.14185106490048752;  // std dev = 1,63e-07, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   else return -0.12544463852839235;  // std dev = 0,000, 517,000 (wgt'ed) examples reached here.  /* #neg=517 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360622;  // std dev = 6,05e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.11231637819360624;  // std dev = 5,58e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.11231637819360635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360628;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.11231637819360625;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.11231637819360592;  // std dev = 0,000, 470,000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783652;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
%   else if ( female(B) )
%   | then return -0.10159632948783653;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else return -0.10159632948783663;  // std dev = 0,000, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926087;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.09269127618926147;  // std dev = 0,000, 502,000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948884;  // std dev = 6,45e-09, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.25517224256948856;  // std dev = 1,18e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 1,32e-09, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.08518475138839678;  // std dev = 4,27e-09, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839679;  // std dev = 2,63e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return -0.08518475138839678;  // std dev = 5,27e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 2,79e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return -0.08518475138839678;  // std dev = 7,30e-08, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253504;  // std dev = 1,81e-08, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.20975771563253495;  // std dev = 1,97e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.07877675473109169;  // std dev = 2,36e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109169;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.07877675473109184;  // std dev = 0,000, 464,000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return 0.17560636248629788;  // std dev = 0,250, 168,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=167 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.07324622576333698;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.11371859305955238;  // std dev = 0,968, 79,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=59 */
%   | | | else return -0.0732462257633369;  // std dev = 1,55e-07, 522,000 (wgt'ed) examples reached here.  /* #neg=522 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1552747682299681;  // std dev = 0,004, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.15344296769024057;  // std dev = 0,002, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420261;  // std dev = 4,08e-08, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | | else return -0.06842697784420267;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.07824344001657767;  // std dev = 0,009, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420261;  // std dev = 2,46e-09, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420328;  // std dev = 0,000, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
%   | | else if ( actor(A) )
%   | | | then return -0.07160108589596083;  // std dev = 0,042, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.0684269778442027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1337135920151765;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return 0.1315635286504773;  // std dev = 0,301, 169,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=167 */
%   | | else if ( actor(A) )
%   | | | then return -0.06400143100402528;  // std dev = 1,29e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.06419184008202615;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.10201091416410916;  // std dev = 0,710, 72,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=59 */
%   | | | else return -0.06419077443693362;  // std dev = 0,000587, 551,000 (wgt'ed) examples reached here.  /* #neg=551 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063908
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.628 seconds
Total inference time: 1.754 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064837
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.572 seconds
Refined model CLL: -0.064837


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063908
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.521 seconds
Total inference time: 1.754 seconds
AUC ROC: 1.0
Total revision time: 16.521
Best scored revision CLL: -0.064837


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:09:50
{'Learning time': 16.521, 'CLL': -0.063908, 'parameter_1.0': {'Learning time': 2.812, 'CLL': -0.191296, 'Recall': 1.0, 'F1': 0.957447, 'Precision': [0.918367, 0.5], 'AUC PR': 1.0, 'Inference time': 1.587, 'AUC ROC': 1.0}, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 1.754, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.1418510649004886;  // std dev = 0,000, 627,000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.12544463852839233;  // std dev = 0,000, 612,000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.11231637819360597;  // std dev = 0,000, 631,000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783623;  // std dev = 3,33e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783531;  // std dev = 3,99e-07, 635,000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926173;  // std dev = 0,000, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.08518475138839678;  // std dev = 1,52e-07, 618,000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.0787767547310924;  // std dev = 0,000, 599,000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07324622576333667;  // std dev = 2,23e-07, 654,000 (wgt'ed) examples reached here.  /* #neg=654 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06842697784420365;  // std dev = 0,000, 634,000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06419184008202541;  // std dev = 2,48e-07, 633,000 (wgt'ed) examples reached here.  /* #neg=633 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.235 seconds
Total inference time: 1.439 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:09:57
{'Learning time': 5.235, 'CLL': -0.063847, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.439, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.14185106490048863;  // std dev = 0,000, 635,000 (wgt'ed) examples reached here.  /* #neg=635 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.838 seconds
Total inference time: 0.863 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:10:00
{'Learning time': 1.838, 'CLL': -0.160469, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 0.863, 'Precision': [nan, 0.5]}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5150116801975524;  // std dev = 4,795, 102,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7440820160961884;  // std dev = 1,386, 51,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | else return 0.17460205019678476;  // std dev = 3,310, 46,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839133;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34434776986457427;  // std dev = 4,453, 103,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11231637819360621;  // std dev = 7,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2626242389441135;  // std dev = 0,436, 104,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783617;  // std dev = 6,18e-09, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19346744659707596;  // std dev = 4,490, 105,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=67 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926101;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926108;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.423127720971535;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.18984884555739354;  // std dev = 4,159, 98,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839689;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518475138839682;  // std dev = 5,43e-09, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15446840833338807;  // std dev = 4,054, 97,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.07877675473109164;  // std dev = 4,71e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3200835999596073;  // std dev = 1,180, 51,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333707;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.17525843079903838;  // std dev = 3,464, 54,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return -0.07324622576333707;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08124728495578108;  // std dev = 3,967, 100,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07924304633062715;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06842697784420267;  // std dev = 4,27e-09, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.25062919287397645;  // std dev = 0,856, 50,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | | else return -0.0657682967413759;  // std dev = 0,012, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( genre(A, E) )
%   | | then return -0.1961497868790165;  // std dev = 0,443, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.11774730275690204;  // std dev = 3,375, 49,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.21066
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total learning time: 1.754 seconds
Total inference time: 1.617 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.966321
   AUC PR    = 0.788033
   CLL	      = -0.209129
   Precision = 0.7 at threshold = 0.5
   Recall    = 0.731343
   F1        = 0.715328


Total scoring time: 1.655 seconds
Parameter learned model CLL: -0.209129


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [4.795, 35, 67], 'false,false': [0.0, 0, 0], 'false,true,false': [8.12e-09, 68, 0], 'false,true,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 99, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [3.31, 28, 18], 'true,true,true': [1.386, 2, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [7.15e-08, 88, 0], 'true': [4.453, 36, 67], 'false,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [6.18e-09, 84, 0], 'true,true': [0.436, 37, 67], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [4.49, 38, 67], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 80, 0], 'false,true,true,false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [5.43e-09, 95, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.159, 31, 67], 'false,true,true,false': [3.73e-09, 11, 0], 'true,true,true': [0.0, 3, 0], 'false,true,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [4.71e-08, 83, 0], 'true': [4.054, 30, 67], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [3.73e-09, 12, 0], 'true,true,false,false': [2.63e-09, 10, 0], 'true,false,false,true': [3.464, 36, 18], 'true,true,true': [1.18, 2, 49], 'true,true,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 77, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 2, 0], 'true': [3.967, 33, 67], 'false,false': [0.0, 0, 0], 'false,true,false': [4.27e-09, 83, 0], 'false,true,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.443, 9, 0], 'true,true,false': [0.012, 12, 0], 'true,true,true': [0.856, 1, 49], 'true,false,false,false': [0.0, 83, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [3.375, 31, 18]}]]
[{'': [0.22539407920030682, 7.401486830834377e-17], 'false,true': [-1.1102230246251566e-17, 6.857259857978908e-17], 'false': [7.401486830834377e-17, nan], 'false,true,true': [0.0, -9.25185853854297e-18]}, {'': [0.21362525241789898, -2.2428747972225387e-18], 'true,true': [0.03767781622452875, 0.23818525519848785], 'true': [0.21362525241789898, nan], 'false': [-2.2428747972225387e-18, nan]}, {'': [0.19251479395453566, 6.280049432223107e-17], 'false,true': [5.046468293750712e-18, 5.803438537813318e-17], 'false': [6.280049432223107e-17, nan]}, {'': [0.1904988719293434, 3.700743415417188e-17], 'true': [0.1904988719293434, nan], 'false': [3.700743415417188e-17, nan]}, {'': [0.1919955814332768, 3.742324802107269e-18], 'false,true': [3.0839528461809902e-18, 0.0], 'false': [3.742324802107269e-18, nan], 'false,true,true': [nan, 3.0839528461809902e-18]}, {'': [0.1821209671684408, 5.216943791149071e-07], 'true,true': [0.0, 0.1765354967041693], 'true': [0.1821209671684408, nan], 'false,true,true': [0.0, 1.261617073437678e-18], 'false,true': [4.304354586430932e-06, 2.921639538487254e-17], 'false': [5.216943791149071e-07, nan]}, {'': [0.1694436687601923, 3.122502256758253e-17], 'false,true': [0.0, 2.6752362039160398e-17], 'false': [3.122502256758253e-17, nan]}, {'': [0.10199191022870792, nan], 'true,true': [0.027297968766948708, 6.938893903907229e-19], 'true': [0.044027207808016916, 0.08636185587685619], 'true,true,false': [nan, 6.938893903907229e-19], 'true,false,false': [0.22222222222222235, -5.767392335715099e-18], 'true,false': [1.1564823173178713e-18, 0.0941244790700557]}, {'': [0.15735553100198954, 2.436132876949265e-06], 'false,true': [1.7403075000450094e-05, 1.8726653427412278e-17], 'false': [2.436132876949265e-06, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.0831070048874701, nan], 'true,true': [0.014656302604774104, 1.2426077994040033e-05], 'true': [0.02744750414614084, 0.08353090092551871], 'true,false,false': [0.23240316534777192, -1.203856291762218e-17], 'true,false': [0.02176612465359665, 0.08694034621020902]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;true;genre(A, E).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14185106490048774;  // std dev = 2,36e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.7194734122109547;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.12544463852839133;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11740767397251903;  // std dev = 0,071, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783635;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014955;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.1017345315787659;  // std dev = 0,025, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.10006344774834608;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.2551722425694894;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.09062357027334556;  // std dev = 0,088, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( genre(B, E) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,83e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07851927190697494;  // std dev = 0,000955, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.07620713953548838;  // std dev = 0,000729, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.13923060558639366;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.1770964977452773;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( actor(B) )
%   | | then return -0.07229120670054734;  // std dev = 0,001, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07320079351481823;  // std dev = 0,001, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return 0.13157963892552915;  // std dev = 0,453, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15553640618864512;  // std dev = 0,003, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.15339078043227497;  // std dev = 0,002, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0684462896071535;  // std dev = 4,56e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06810031583023765;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.07835786699296864;  // std dev = 0,066, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.0684696096123953;  // std dev = 2,79e-05, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then return -0.06842987396724562;  // std dev = 4,66e-09, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( actor(A) )
%   | | | then return -0.07250354104021796;  // std dev = 0,017, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13368328827824238;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.12684633387606314;  // std dev = 0,237, 34,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.06400114351949937;  // std dev = 0,000101, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return -0.06147528603753288;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06423784074832861;  // std dev = 2,07e-05, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.09974405026774026;  // std dev = 0,392, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return -0.06600020200979069;  // std dev = 0,111, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064084
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.863 seconds
Total inference time: 1.767 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065387
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.03 seconds
Refined model CLL: -0.065387


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064084
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.302 seconds
Total inference time: 1.767 seconds
AUC ROC: 1.0
Total revision time: 9.302
Best scored revision CLL: -0.065387


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:10:13
{'Learning time': 9.302, 'parameter_0.2': {'Learning time': 1.754, 'CLL': -0.21066, 'Recall': 0.777778, 'F1': 0.853659, 'Precision': [0.945946, 0.5], 'AUC PR': 0.823063, 'Inference time': 1.617, 'AUC ROC': 0.971565}, 'CLL': -0.064084, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 1.767, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048766;  // std dev = 8,69e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839133;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.11231637819360622;  // std dev = 9,31e-08, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783637;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.092691276189261;  // std dev = 3,65e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.08518475138839679;  // std dev = 5,77e-08, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0787767547310916;  // std dev = 6,05e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07324622576333717;  // std dev = 0,000, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06842697784420265;  // std dev = 5,48e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063738
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.68 seconds
Total inference time: 1.508 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:10:18
{'Learning time': 2.68, 'CLL': -0.063738, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.508, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048766;  // std dev = 8,16e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.016 seconds
Total inference time: 0.931 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:10:20
{'Learning time': 1.016, 'CLL': -0.158221, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 0.931, 'Precision': [nan, 0.5]}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5215152717331726;  // std dev = 6,716, 202,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.14185106490048843;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7821917332605142;  // std dev = 3,77e-07, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | | else return 0.05393086369529718;  // std dev = 4,267, 92,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839172;  // std dev = 0,000, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.39461472914686363;  // std dev = 5,518, 189,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.11231637819360651;  // std dev = 0,000, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2666198779235106;  // std dev = 0,412, 202,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783646;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19430204051010636;  // std dev = 5,918, 205,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=134 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926092;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926087;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.09269127618926061;  // std dev = 6,18e-09, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4345040626948382;  // std dev = 0,167, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.19002467232064899;  // std dev = 5,458, 191,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.08518475138839678;  // std dev = 5,27e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.08518475138839678;  // std dev = 5,19e-09, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11302276918216982;  // std dev = 5,752, 203,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07877675473109146;  // std dev = 6,99e-08, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.30295914554138426;  // std dev = 1,858, 114,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=109 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( genre(A, F) )
%   | | then return -0.203584206022219;  // std dev = 0,553, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.22578157603828808;  // std dev = 4,308, 97,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   | | | else return -0.0732462257633368;  // std dev = 8,09e-08, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08039002397975845;  // std dev = 5,244, 200,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0684269778442027;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06057160394883709;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.06842697784420261;  // std dev = 4,17e-09, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2600631682773295;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | | else return -0.06419184008202615;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( genre(A, E) )
%   | | then return -0.12200128556605795;  // std dev = 0,569, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.20926026921519694;  // std dev = 4,364, 105,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=25 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.184507
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total learning time: 2.292 seconds
Total inference time: 1.725 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.977264
   AUC PR    = 0.855761
   CLL	      = -0.18143
   Precision = 0.77305 at threshold = 0.5
   Recall    = 0.813433
   F1        = 0.792727


Total scoring time: 2.137 seconds
Parameter learned model CLL: -0.18143


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 3, 0], 'true': [6.716, 68, 134], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 206, 0], 'false,true,true,false': [1.05e-08, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 212, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.267, 67, 25], 'true,true,true': [3.77e-07, 0, 109]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 186, 0], 'true': [5.518, 55, 134], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 32, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.0, 163, 0], 'true,true': [0.412, 68, 134], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [5.918, 71, 134], 'false,false': [0.0, 0, 0], 'false,true,false': [6.18e-09, 183, 0], 'false,true,true,false': [5.27e-09, 13, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [5.19e-09, 168, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.458, 57, 134], 'false,true,true,false': [5.27e-09, 23, 0], 'true,true,true': [0.167, 7, 0], 'false,true,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [6.99e-08, 212, 0], 'true': [5.752, 69, 134], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.553, 18, 0], 'true,true,false,false': [0.0, 23, 0], 'true,false,false,true': [4.308, 72, 25], 'true,true,true': [1.858, 5, 109], 'true,true,false,true': [0.0, 2, 0], 'true,false,false,false': [8.09e-08, 154, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 4, 0], 'true': [5.244, 66, 134], 'false,false': [0.0, 0, 0], 'false,true,false': [4.17e-09, 172, 0], 'false,true,true,false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.569, 27, 0], 'true,true,false': [0.0, 17, 0], 'true,true,true': [0.0, 0, 109], 'true,false,false,false': [0.0, 185, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [4.364, 80, 25]}]]
[{'': [0.22331144005490106, -2.0762612408574356e-16], 'false,true': [1.3322676295501878e-17, -2.3713501496848003e-16], 'false': [-2.0762612408574356e-16, nan], 'false,true,true': [0.0, 5.046468293750712e-18]}, {'': [0.22222222222222157, -5.86532918669894e-17], 'true,true': [1.3037481390093582e-15, 0.1978969754253301], 'true': [0.22222222222222157, nan], 'false': [-5.86532918669894e-17, nan]}, {'': [0.16113074476754563, -5.907608754886154e-17], 'false,true': [-1.214306433183765e-17, -2.3875763970433474e-17], 'false': [-5.907608754886154e-17, nan]}, {'': [0.1695779862844286, -7.492302620169768e-17], 'true': [0.1695779862844286, nan], 'false': [-7.492302620169768e-17, nan]}, {'': [0.1708708547975215, 3.944954909835582e-17], 'false,true': [2.9738116731030977e-18, 3.8827471899459027e-17], 'false': [3.944954909835582e-17, nan], 'false,true,true': [0.0, 2.135044278125301e-18]}, {'': [0.16390440327902858, 2.8762254523967783e-17], 'true,true': [0.0039708219242236, 0.15597668693834094], 'true': [0.16390440327902858, nan], 'false,true,true': [0.0, 1.206764157201257e-18], 'false,true': [0.0, 2.7755575615628914e-17], 'false': [2.8762254523967783e-17, nan]}, {'': [0.16299621989181434, 1.7227598657976568e-17], 'false,true': [-4.8572257327350596e-18, 2.3042364662031552e-17], 'false': [1.7227598657976568e-17, nan]}, {'': [0.09653530612494739, nan], 'true,true': [0.0302748397890279, -3.3306690738754695e-18], 'true': [0.04570658782064697, 0.07558660550962853], 'true,true,false': [0.0, -1.8101462358018856e-18], 'true,false,false': [0.19130619619513273, 4.2534518475898856e-17], 'true,false': [0.016987989097964656, 0.07944786430317322]}, {'': [0.13749321087502012, 6.516248538216418e-06], 'false,true': [7.5559468207313045e-06, 1.7427919572604202e-17], 'false': [6.516248538216418e-06, nan], 'false,true,true': [0.0, -1.734723475976807e-18]}, {'': [0.07303596138773712, nan], 'true,true': [-1.385232397697443e-16, -8.163404592832033e-19], 'true': [0.01227178434471323, 0.06555752992262247], 'true,false,false': [0.18140589569161056, -4.800964430811488e-18], 'true,false': [0.011992076464006355, 0.07054227964545108]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004877;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.14185106490048813;  // std dev = 0,000, 158,000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109551;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return 0.7072282230698043;  // std dev = 0,101, 69,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=68 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.7194734122109545;  // std dev = 7,30e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.7194734122109548;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.12544463852839127;  // std dev = 3,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.12544463852839172;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462843;  // std dev = 2,89e-08, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.5582202399643185;  // std dev = 0,000692, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.18015055804565075;  // std dev = 0,124, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360635;  // std dev = 3,23e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360614;  // std dev = 3,95e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360614;  // std dev = 3,94e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.11231637819360629;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.41963375369311484;  // std dev = 0,000683, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783617;  // std dev = 4,83e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1621781625803542;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783656;  // std dev = 0,000, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601499;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.3221497188418922;  // std dev = 0,000611, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.08976283274877997;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926092;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926089;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.25615323014065566;  // std dev = 0,000533, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,83e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.08541323742833519;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12567809492505794;  // std dev = 0,091, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839679;  // std dev = 1,86e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.08518475138839678;  // std dev = 1,05e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.209757715632536;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.2104504912642276;  // std dev = 0,000465, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.0917342625245236;  // std dev = 0,057, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.07877675473109164;  // std dev = 3,16e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17747517918651246;  // std dev = 0,003, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.0830244522864116;  // std dev = 0,054, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return -0.07255297153080625;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.0732431851745975;  // std dev = 0,000692, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | | | else return 0.1424043610355917;  // std dev = 0,465, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1542505193148792;  // std dev = 0,002, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.15339964332896205;  // std dev = 0,000684, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( female(B) )
%   | | then return -0.06839100616888033;  // std dev = 0,000149, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( director(A), actor(B) )
%   | | | then return -0.06781981520969459;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06859113145499043;  // std dev = 0,003, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06780629172096407;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0684269778442027;  // std dev = 1,32e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( actor(B) )
%   | | then return -0.06842717166595462;  // std dev = 6,25e-09, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | else return -0.07166115240054156;  // std dev = 0,006, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.10149676056161604;  // std dev = 0,512, 49,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=41 */
%   | | | else return 0.10674925884170329;  // std dev = 0,610, 79,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=68 */
%   | | else return -0.07770336454662831;  // std dev = 0,023, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return -0.06364128254471998;  // std dev = 1,68e-05, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06419184008202618;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.11462894502073527;  // std dev = 0,353, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return -0.06419950605680652;  // std dev = 0,002, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064548
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.589 seconds
Total inference time: 2.03 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065738
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.467 seconds
Refined model CLL: -0.065738


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064548
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.485000000000001 seconds
Total inference time: 2.03 seconds
AUC ROC: 1.0
Total revision time: 11.485000000000001
Best scored revision CLL: -0.065738


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:10:36
{'Learning time': 11.485000000000001, 'CLL': -0.064548, 'parameter_0.4': {'Learning time': 2.292, 'CLL': -0.184507, 'Recall': 0.777778, 'F1': 0.853659, 'Precision': [0.945946, 0.5], 'AUC PR': 0.823063, 'Inference time': 1.725, 'AUC ROC': 0.971565}, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 2.03, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.14185106490048843;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.12544463852839177;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360674;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.1015963294878365;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926094;  // std dev = 1,05e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.09269127618926057;  // std dev = 6,32e-08, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839683;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08518475138839678;  // std dev = 8,16e-08, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109146;  // std dev = 6,83e-08, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333675;  // std dev = 1,21e-07, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06842697784420265;  // std dev = 3,94e-08, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.06419184008202625;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.339 seconds
Total inference time: 1.418 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:10:41
{'Learning time': 3.339, 'CLL': -0.063719, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.418, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1418510649004884;  // std dev = 0,000, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.328 seconds
Total inference time: 0.905 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:10:43
{'Learning time': 1.328, 'CLL': -0.158221, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 0.905, 'Precision': [nan, 0.5]}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5118706179474048;  // std dev = 8,364, 309,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.14185106490048835;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7664893589288537;  // std dev = 1,717, 173,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=170 */
%   | | else return 0.006052621613505835;  // std dev = 4,989, 144,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839202;  // std dev = 0,000, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.37649108339310355;  // std dev = 7,029, 295,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.11231637819360679;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2596304931840737;  // std dev = 0,412, 314,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783662;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21668532317595357;  // std dev = 7,036, 304,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=202 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926079;  // std dev = 1,29e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.09269127618926044;  // std dev = 8,33e-09, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.4568815533051662;  // std dev = 0,343, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.17645018548413463;  // std dev = 6,862, 298,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.09269127618926087;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839675;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.08518475138839678;  // std dev = 5,82e-09, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14242352165295827;  // std dev = 6,718, 296,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07923446877804212;  // std dev = 0,009, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.07877675473109143;  // std dev = 5,77e-08, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.32828979933636215;  // std dev = 1,455, 173,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=170 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07920965630347399;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.073246225763337;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( genre(A, F) )
%   | | then return -0.12656680446731963;  // std dev = 0,541, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2057622906653886;  // std dev = 4,844, 120,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | | else return -0.07324622576333681;  // std dev = 1,16e-07, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06058424522065523;  // std dev = 6,408, 315,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07362163527136484;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06507744273914319;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.06842697784420294;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.24642211176849171;  // std dev = 1,479, 173,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=170 */
%   | | else return -0.06439927824556174;  // std dev = 0,004, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( genre(A, E) )
%   | | then return -0.11816456974988859;  // std dev = 0,649, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.19585047389745788;  // std dev = 4,930, 133,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=32 */
%   | | | else return -0.06419184008202618;  // std dev = 5,37e-08, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.181784
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total learning time: 2.445 seconds
Total inference time: 1.601 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.980521
   AUC PR    = 0.878199
   CLL	      = -0.179782
   Precision = 0.809524 at threshold = 0.5
   Recall    = 0.841584
   F1        = 0.825243


Total scoring time: 2.652 seconds
Parameter learned model CLL: -0.179782


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 1, 0], 'true': [8.364, 107, 202], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 240, 0], 'false,true,true,false': [2.58e-08, 29, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 304, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.989, 112, 32], 'true,true,true': [1.717, 3, 170]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 236, 0], 'true': [7.029, 93, 202], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [0.0, 288, 0], 'true,true': [0.412, 112, 202], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 0, 0], 'true': [7.036, 102, 202], 'false,false': [0.0, 0, 0], 'false,true,false': [8.33e-09, 277, 0], 'false,true,true,false': [1.29e-08, 30, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [5.82e-09, 255, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [6.862, 96, 202], 'false,true,true,false': [0.0, 25, 0], 'true,true,true': [0.343, 15, 0], 'false,true,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [5.77e-08, 255, 0], 'true': [6.718, 94, 202], 'false,false': [0.0, 0, 0], 'false,true,true': [0.009, 28, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.541, 28, 0], 'true,true,false,false': [0.0, 27, 0], 'true,false,false,true': [4.844, 88, 32], 'true,true,true': [1.455, 3, 170], 'true,true,false,true': [0.0, 2, 0], 'true,false,false,false': [1.16e-07, 257, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [2.63e-09, 6, 0], 'true': [6.408, 113, 202], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 287, 0], 'false,true,true,false': [0.0, 27, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.649, 39, 0], 'true,true,false': [0.004, 22, 0], 'true,true,true': [1.479, 3, 170], 'true,false,false,false': [5.37e-08, 261, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [4.93, 101, 32]}]]
[{'': [0.22636964422241534, -5.592234494408195e-17], 'false,true': [2.590520390792032e-17, -1.6653345369377348e-16], 'false': [-5.592234494408195e-17, nan], 'false,true,true': [0.0, 2.2970131543968756e-17]}, {'': [0.23116958075012725, -8.472754661613037e-17], 'true,true': [0.017040328778108706, 0.1728395061728405], 'true': [0.23116958075012725, nan], 'false': [-8.472754661613037e-17, nan]}, {'': [0.16746158290946084, -1.0169981904963266e-16], 'false,true': [-1.0675221390626506e-17, -8.279629336187608e-17], 'false': [-1.0169981904963266e-16, nan]}, {'': [0.16992769695774385, -5.705312765434832e-17], 'true': [0.16992769695774385, nan], 'false': [-5.705312765434832e-17, nan]}, {'': [0.16284411021332992, 8.82392241070157e-17], 'false,true': [5.551115123125783e-18, 6.893803618611081e-17], 'false': [8.82392241070157e-17, nan], 'false,true,true': [nan, 5.551115123125783e-18]}, {'': [0.16910509392633064, 1.9981276943030266e-07], 'true,true': [0.007832727510839426, 0.15800035007435698], 'true': [0.16910509392633064, nan], 'false,true,true': [0.0, -2.220446049250313e-18], 'false,true': [2.0838725808397943e-06, 3.395976310618126e-17], 'false': [1.9981276943030266e-07, nan]}, {'': [0.15244914348671615, 2.881429496260626e-07], 'false,true': [2.7235279340804907e-06, 1.3061447348531253e-17], 'false': [2.881429496260626e-07, nan]}, {'': [0.08482657043104957, nan], 'true,true': [0.012229432268884888, 2.2834425749962417e-06], 'true': [0.03033863858111859, 0.06221887987535047], 'true,true,false': [0.0, -1.02798428206033e-17], 'true,false,false': [0.19555555555555493, 5.270319416508525e-17], 'true,false': [0.010436791903217708, 0.06605618405329634]}, {'': [0.13034087845781672, 1.4182889678908406e-06], 'false,true': [1.0859984037176087e-05, -4.642047489721909e-17], 'false': [1.4182889678908406e-06, nan], 'false,true,true': [1.1564823173178713e-18, 0.0]}, {'': [0.07032874917372968, nan], 'true,true': [0.01264373371891042, 9.036424255171543e-07], 'true': [0.020887249228544538, 0.06062955276654287], 'true,false,false': [0.18271242014811517, 1.1059692965614586e-17], 'true,false': [0.010805803394981307, 0.0655531657529526]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.14185106490048816;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else return -0.12544463852839202;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | else return 0.5553664367462834;  // std dev = 4,15e-08, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.11231637819360692;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583101;  // std dev = 1,90e-08, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | else return 0.41751358415830947;  // std dev = 2,93e-08, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.1015963294878363;  // std dev = 1,49e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783662;  // std dev = 0,000, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015033;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | else return 0.3207118471601501;  // std dev = 1,58e-08, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return -0.09269127618926083;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.0926912761892608;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926092;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926086;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.09269127618926089;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( female(B) )
%   | | then return -0.0851847513883968;  // std dev = 3,73e-09, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.08518475138839679;  // std dev = 2,08e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839675;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.08518475138839675;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.08518475138839676;  // std dev = 5,27e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253573;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | else return 0.20975771563253548;  // std dev = 1,60e-08, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09778551382430982;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109143;  // std dev = 3,61e-09, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
%   | | else return -0.07877675473109162;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.15563855001596755;  // std dev = 0,586, 70,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=64 */
%   | | | else return 0.14426466515398353;  // std dev = 0,933, 122,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=106 */
%   | | else return -0.08039798687182198;  // std dev = 0,011, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return -0.07253516110352508;  // std dev = 0,000636, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 8,43e-08, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
%   | | | else return 0.1113089756468158;  // std dev = 0,737, 43,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15724942717230556;  // std dev = 0,003, 90,000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | else return 0.15727770313488107;  // std dev = 0,000993, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420265;  // std dev = 4,56e-09, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( female(B) )
%   | | | then return -0.06846325027166134;  // std dev = 4,06e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07661714319693844;  // std dev = 0,041, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.06841074633148812;  // std dev = 8,43e-05, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420261;  // std dev = 4,17e-09, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | | else if ( actor(A) )
%   | | | then return -0.083572116356745;  // std dev = 0,007, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.06797249548819613;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13598657364693523;  // std dev = 2,98e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0.13524532870950365;  // std dev = 0,221, 107,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=106 */
%   | | else if ( actor(A) )
%   | | | then return -0.07778848897325273;  // std dev = 0,002, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06378023132531152;  // std dev = 2,87e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.06404305676728723;  // std dev = 0,000466, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.09799286151450999;  // std dev = 0,548, 40,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=32 */
%   | | | else return -0.0642954575737486;  // std dev = 0,037, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064528
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.277 seconds
Total inference time: 1.642 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065753
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.373 seconds
Refined model CLL: -0.065753


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064528
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.747 seconds
Total inference time: 1.642 seconds
AUC ROC: 1.0
Total revision time: 13.747
Best scored revision CLL: -0.065753


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:11:01
{'Learning time': 13.747, 'parameter_0.6': {'Learning time': 2.445, 'CLL': -0.181784, 'Recall': 0.777778, 'F1': 0.853659, 'Precision': [0.945946, 0.5], 'AUC PR': 0.823063, 'Inference time': 1.601, 'AUC ROC': 0.971565}, 'CLL': -0.064528, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 1.642, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.1418510649004877;  // std dev = 1,69e-07, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.1254446385283922;  // std dev = 0,000, 411,000 (wgt'ed) examples reached here.  /* #neg=411 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360639;  // std dev = 0,000, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.10159632948783655;  // std dev = 0,000, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.0926912761892609;  // std dev = 1,41e-07, 416,000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07877675473109148;  // std dev = 2,98e-08, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333717;  // std dev = 4,71e-08, 388,000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.06842697784420325;  // std dev = 0,000, 392,000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06419184008202596;  // std dev = 1,17e-07, 361,000 (wgt'ed) examples reached here.  /* #neg=361 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.03 seconds
Total inference time: 1.463 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:11:07
{'Learning time': 4.03, 'CLL': -0.063719, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.463, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1418510649004877;  // std dev = 1,66e-07, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.43 seconds
Total inference time: 1.036 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:11:10
{'Learning time': 1.43, 'CLL': -0.158221, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.036, 'Precision': [nan, 0.5]}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5142464960751179;  // std dev = 9,618, 410,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.1418510649004875;  // std dev = 1,29e-08, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7706616009664619;  // std dev = 1,721, 235,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=232 */
%   | | else return -0.007532893564132349;  // std dev = 5,410, 177,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839224;  // std dev = 0,000, 418,000 (wgt'ed) examples reached here.  /* #neg=418 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3526065180362305;  // std dev = 8,348, 408,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360618;  // std dev = 3,16e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.1123163781936066;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2720344618740065;  // std dev = 0,408, 410,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783574;  // std dev = 1,28e-08, 428,000 (wgt'ed) examples reached here.  /* #neg=428 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18617284567029302;  // std dev = 8,480, 428,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=269 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.0926912761892607;  // std dev = 9,03e-09, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.42678089009698295;  // std dev = 0,335, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.18529903584947321;  // std dev = 7,828, 396,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0851847513883968;  // std dev = 1,49e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.08518475138839678;  // std dev = 6,25e-09, 345,000 (wgt'ed) examples reached here.  /* #neg=345 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1195462135665624;  // std dev = 8,119, 412,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.07877675473109143;  // std dev = 5,16e-08, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.35056014280828485;  // std dev = 0,850, 233,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=232 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( genre(A, F) )
%   | | then return -0.15460292586446361;  // std dev = 0,776, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2122885079106671;  // std dev = 5,291, 152,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=37 */
%   | | | else return -0.07324622576333707;  // std dev = 8,43e-08, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08417993101285888;  // std dev = 7,030, 403,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06341949834466026;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.0684269778442032;  // std dev = 0,000, 347,000 (wgt'ed) examples reached here.  /* #neg=347 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.25099717957911327;  // std dev = 1,491, 235,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=232 */
%   | | else return -0.06419184008202615;  // std dev = 9,13e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( genre(A, E) )
%   | | then return -0.10338812625223996;  // std dev = 0,644, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.18848710741109762;  // std dev = 5,318, 157,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=37 */
%   | | | else return -0.06419184008202591;  // std dev = 1,26e-07, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.17765
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total learning time: 3.0 seconds
Total inference time: 1.68 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.982983
   AUC PR    = 0.89419
   CLL	      = -0.176253
   Precision = 0.794521 at threshold = 0.5
   Recall    = 0.862454
   F1        = 0.827094


Total scoring time: 3.127 seconds
Parameter learned model CLL: -0.176253


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 2, 0], 'true': [9.618, 141, 269], 'false,false': [0.0, 0, 0], 'false,true,false': [1.29e-08, 360, 0], 'false,true,true,false': [3.33e-08, 34, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 418, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.41, 140, 37], 'true,true,true': [1.721, 3, 232]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 333, 0], 'true': [8.348, 139, 269], 'false,false': [0.0, 0, 0], 'false,true,true': [3.16e-08, 40, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [1.28e-08, 428, 0], 'true,true': [0.408, 141, 269], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [2.63e-09, 3, 0], 'true': [8.48, 159, 269], 'false,false': [0.0, 0, 0], 'false,true,false': [9.03e-09, 376, 0], 'false,true,true,false': [0.0, 34, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [6.25e-09, 345, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [7.828, 127, 269], 'false,true,true,false': [1.49e-08, 30, 0], 'true,true,true': [0.335, 17, 0], 'false,true,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [5.16e-08, 336, 0], 'true': [8.119, 143, 269], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.776, 47, 0], 'true,true,false,false': [1.05e-08, 38, 0], 'true,false,false,true': [5.291, 115, 37], 'true,true,true': [0.85, 1, 232], 'true,true,false,true': [2.63e-09, 10, 0], 'true,false,false,false': [8.43e-08, 331, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 3, 0], 'true': [7.03, 134, 269], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 347, 0], 'false,true,true,false': [0.0, 36, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.644, 49, 0], 'true,true,false': [9.13e-09, 42, 0], 'true,true,true': [1.491, 3, 232], 'true,false,false,false': [1.26e-07, 310, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [5.318, 120, 37]}]]
[{'': [0.22563355145746922, 2.2653035451947636e-16], 'false,true': [3.700743415417188e-17, 1.652998725553011e-16], 'false': [2.2653035451947636e-16, nan], 'false,true,true': [0.0, 3.2653618371328135e-17]}, {'': [0.22661773022904394, -1.2536489656054398e-16], 'true,true': [0.01260298777727238, 0.16534201538510646], 'true': [0.22661773022904394, nan], 'false': [-1.2536489656054398e-16, nan]}, {'': [0.17081995693782684, -2.6192929267295917e-17], 'false,true': [2.4980018054066023e-17, -3.734083446186713e-17], 'false': [-2.6192929267295917e-17, nan]}, {'': [0.1667312228819315, 1.6186429144067702e-16], 'true': [0.1667312228819315, nan], 'false': [1.6186429144067702e-16, nan]}, {'': [0.16800998747051293, 3.978523187518721e-17], 'false,true': [-1.050210969240013e-17, 8.031400603671346e-17], 'false': [3.978523187518721e-17, nan], 'false,true,true': [2.3129646346357427e-18, -6.530723674265627e-18]}, {'': [0.16341554808161024, 3.866739821913474e-17], 'true,true': [0.0066141846223906325, 0.15472582723269088], 'true': [0.16341554808161024, nan], 'false,true,true': [0.0, 7.401486830834377e-18], 'false,true': [9.79608551139844e-18, 3.99036681314549e-17], 'false': [3.866739821913474e-17, nan]}, {'': [0.15999061339096168, 2.70929756672452e-17], 'false,true': [0.0, 7.93016446160826e-18], 'false': [2.70929756672452e-17, nan]}, {'': [0.08348137207826345, nan], 'true,true': [0.003097261851699723, 3.469446951953614e-18], 'true': [0.028008330971955514, 0.057868904181832555], 'true,true,false': [6.938893903907229e-19, 2.921639538487254e-18], 'true,false,false': [0.1841672437673132, 2.1466547908160126e-17], 'true,false': [0.012824143261980269, 0.0621267697988331]}, {'': [0.12263384648833257, 2.120480561953602e-06], 'false,true': [1.7804627885187044e-06, -8.44665355910782e-17], 'false': [2.120480561953602e-06, nan], 'false,true,true': [-5.782411586589357e-19, 0.0]}, {'': [0.06717623444642133, nan], 'true,true': [0.009458492283068288, 1.982541115402065e-18], 'true': [0.020803438086784375, 0.05873113799455495], 'true,false,false': [0.1801290113189177, 5.08553772570233e-17], 'true,false': [0.008461467247053295, 0.06400504870939414]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048793;  // std dev = 0,000, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.1418510649004877;  // std dev = 1,63e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.12544463852839108;  // std dev = 8,16e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1254446385283922;  // std dev = 0,000, 403,000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,21e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0.5553664367462833;  // std dev = 4,41e-08, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.11231637819360625;  // std dev = 5,58e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360629;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360624;  // std dev = 1,97e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.11231637819360629;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.11231637819360633;  // std dev = 0,000, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1015963294878364;  // std dev = 0,000, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( female(A) )
%   | then return -0.1015963294878364;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else return -0.1015963294878366;  // std dev = 0,000, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926087;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.09269127618926097;  // std dev = 1,83e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926103;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.09269127618926072;  // std dev = 6,99e-08, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0.2551722425694891;  // std dev = 9,86e-09, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 3,36e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,83e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return -0.08518475138839682;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 3,95e-09, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 2,98e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.08518475138839678;  // std dev = 6,83e-08, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253529;  // std dev = 1,21e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0.20975771563253506;  // std dev = 1,77e-08, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.07877675473109162;  // std dev = 4,59e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109144;  // std dev = 4,94e-08, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( director(A) )
%   | | | then return -0.07324622576333702;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.17709649774527716;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #pos=232 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333711;  // std dev = 8,69e-08, 462,000 (wgt'ed) examples reached here.  /* #neg=462 */
%   | | | else return 0.11200738963303772;  // std dev = 0,776, 50,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1550661811800026;  // std dev = 0,004, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0.15307951015265103;  // std dev = 0,002, 154,000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420264;  // std dev = 5,58e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | | else return -0.0684269778442027;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.0720827960279262;  // std dev = 0,006, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420262;  // std dev = 2,63e-09, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07075340759748122;  // std dev = 0,023, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.07343385926973701;  // std dev = 0,030, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.06842697784420301;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.13388468830219874;  // std dev = 0,002, 232,000 (wgt'ed) examples reached here.  /* #pos=232 */
%   | | | else return -0.06395085908127184;  // std dev = 0,000477, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.0641519746305947;  // std dev = 8,46e-05, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202615;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.06419184008202614;  // std dev = 9,31e-10, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202548;  // std dev = 2,20e-07, 441,000 (wgt'ed) examples reached here.  /* #neg=441 */
%   | | | else return 0.08495424777622845;  // std dev = 0,675, 50,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064154
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.239 seconds
Total inference time: 1.989 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064671
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.807 seconds
Refined model CLL: -0.064671


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064154
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.173 seconds
Total inference time: 1.989 seconds
AUC ROC: 1.0
Total revision time: 15.173
Best scored revision CLL: -0.064671


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:11:29
{'parameter_0.8': {'Learning time': 3.0, 'CLL': -0.17765, 'Recall': 0.777778, 'F1': 0.853659, 'Precision': [0.945946, 0.5], 'AUC PR': 0.823063, 'Inference time': 1.68, 'AUC ROC': 0.971565}, 'Learning time': 15.173, 'CLL': -0.064154, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 1.989, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.14185106490048718;  // std dev = 2,98e-07, 470,000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839233;  // std dev = 0,000, 532,000 (wgt'ed) examples reached here.  /* #neg=532 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.11231637819360586;  // std dev = 0,000, 508,000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783627;  // std dev = 2,36e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783581;  // std dev = 2,68e-07, 504,000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.09269127618926132;  // std dev = 0,000, 491,000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0851847513883968;  // std dev = 1,67e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.08518475138839679;  // std dev = 1,35e-07, 464,000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07877675473109196;  // std dev = 1,52e-07, 498,000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333718;  // std dev = 5,16e-08, 450,000 (wgt'ed) examples reached here.  /* #neg=450 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1734284724924037;  // std dev = 0,497, 273,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15321915374851391;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.06870285385494838;  // std dev = 0,046, 444,000 (wgt'ed) examples reached here.  /* #neg=444 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13437797669325546;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06434065384525091;  // std dev = 0,037, 499,000 (wgt'ed) examples reached here.  /* #neg=499 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.478 seconds
Total inference time: 1.434 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:11:35
{'Learning time': 4.478, 'CLL': -0.063726, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.434, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048746;  // std dev = 1,93e-07, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.666 seconds
Total inference time: 0.934 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:11:38
{'Learning time': 1.666, 'CLL': -0.158221, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 0.934, 'Precision': [nan, 0.5]}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,false,true;author(J, I), venue(J, A).;false;false
1;false,true;haswordtitle(M, K).;false;false
1;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
1;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;haswordauthor(F, D).;true;true
2;false,true,false;title(H, E), venue(H, A).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;author(G, F), title(G, E).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true;haswordtitle(F, C).;true;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;true,true,true;haswordtitle(F, D).;false;false
3;false,true;haswordauthor(L, J).;false;false
3;true,false,true;haswordtitle(I, G).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true;haswordauthor(F, C).;false;true
5;false,true,false;haswordtitle(L, H).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;true,true,false;author(G, E), venue(G, A).;false;false
5;false,true,true;samebib(J, K), venue(K, A).;false;false
5;false,true;author(J, I), venue(J, B).;true;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;false;true
6;false,true,false;title(G, E), venue(G, A).;false;false
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
6;false,false,true;title(J, I), venue(J, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,true;haswordvenue(B, C).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;true,true,false;samebib(E, F), venue(F, A).;false;false
7;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
7;true,false,false;haswordvenue(B, C).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
7;true,false;title(G, D), venue(G, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;title(F, E), venue(F, A).;true;true
8;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false,true;title(L, K), venue(L, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;title(I, H), venue(I, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5074745613037469;  // std dev = 10,871, 519,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.1418510649004873;  // std dev = 1,19e-08, 461,000 (wgt'ed) examples reached here.  /* #neg=461 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7708757089927184;  // std dev = 1,986, 292,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=288 */
%   | | else return 0.013546301746526625;  // std dev = 6,147, 214,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.12544463852839235;  // std dev = 0,000, 498,000 (wgt'ed) examples reached here.  /* #neg=498 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.35415918005336733;  // std dev = 9,386, 510,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360617;  // std dev = 3,33e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.112316378193606;  // std dev = 0,000, 450,000 (wgt'ed) examples reached here.  /* #neg=450 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2715951016100821;  // std dev = 0,410, 515,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783541;  // std dev = 1,55e-08, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21222761723467495;  // std dev = 9,138, 512,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=337 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926108;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.09269127618926105;  // std dev = 5,74e-09, 426,000 (wgt'ed) examples reached here.  /* #neg=426 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.43636579101183487;  // std dev = 0,399, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.21355025612148656;  // std dev = 8,250, 468,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839687;  // std dev = 1,49e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.08518475138839678;  // std dev = 6,59e-09, 424,000 (wgt'ed) examples reached here.  /* #neg=424 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11319185242803173;  // std dev = 9,012, 513,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07877675473109154;  // std dev = 2,16e-07, 421,000 (wgt'ed) examples reached here.  /* #neg=421 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.33300615188567034;  // std dev = 1,674, 292,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=288 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333707;  // std dev = 1,67e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( genre(A, F) )
%   | | then return -0.1229740465163245;  // std dev = 0,756, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.23127117187600166;  // std dev = 6,102, 204,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=49 */
%   | | | else return -0.07324622576333771;  // std dev = 0,000, 418,000 (wgt'ed) examples reached here.  /* #neg=418 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.055293907119366735;  // std dev = 8,296, 530,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06532431761936154;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.06842697784420344;  // std dev = 0,000, 441,000 (wgt'ed) examples reached here.  /* #neg=441 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.24819244805323956;  // std dev = 1,900, 293,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=288 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( genre(A, E) )
%   | | then return -0.10174835545455187;  // std dev = 0,698, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1989750114415708;  // std dev = 6,147, 214,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=49 */
%   | | | else return -0.06419184008202551;  // std dev = 2,14e-07, 430,000 (wgt'ed) examples reached here.  /* #neg=430 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.178287
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total learning time: 3.077 seconds
Total inference time: 1.735 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.982257
   AUC PR    = 0.888508
   CLL	      = -0.175631
   Precision = 0.808989 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.831169


Total scoring time: 3.451 seconds
Parameter learned model CLL: -0.175631


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 7, 0], 'true': [10.871, 182, 337], 'false,false': [0.0, 0, 0], 'false,true,false': [1.19e-08, 461, 0], 'false,true,true,false': [5.16e-08, 49, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,true': [0.0, 498, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [6.147, 165, 49], 'true,true,true': [1.986, 4, 288]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 450, 0], 'true': [9.386, 173, 337], 'false,false': [0.0, 0, 0], 'false,true,true': [3.33e-08, 48, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,true': [1.55e-08, 494, 0], 'true,true': [0.41, 178, 337], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,true': [0.0, 5, 0], 'true': [9.138, 175, 337], 'false,false': [0.0, 0, 0], 'false,true,false': [5.74e-09, 426, 0], 'false,true,true,false': [0.0, 52, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, H)', 'false,true': 'genre(B, G)', 'false': 'movie(F, A)'}, {'false,true,false': [6.59e-09, 424, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [8.25, 131, 337], 'false,true,true,false': [1.49e-08, 37, 0], 'true,true,true': [0.399, 25, 0], 'false,true,true,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [2.16e-07, 421, 0], 'true': [9.012, 176, 337], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 49, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, F)'}, {'true,false,true': [0.756, 59, 0], 'true,true,false,false': [1.67e-08, 45, 0], 'true,false,false,true': [6.102, 155, 49], 'true,true,true': [1.674, 4, 288], 'true,true,false,true': [0.0, 2, 0], 'true,false,false,false': [0.0, 418, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [1.86e-09, 5, 0], 'true': [8.296, 193, 337], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 441, 0], 'false,true,true,false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,false,true': [0.698, 60, 0], 'true,true,false': [0.0, 53, 0], 'true,true,true': [1.9, 5, 288], 'true,false,false,false': [2.14e-07, 430, 0], 'false': [0.0, 0, 0], 'true,false,false,true': [6.147, 165, 49]}]]
[{'': [0.2277018573587145, -9.620501257873697e-17], 'false,true': [5.947623346206196e-17, 1.4642420801997727e-16], 'false': [-9.620501257873697e-17, nan], 'false,true,true': [-7.93016446160826e-18, 5.437827059388522e-17]}, {'': [0.22244137543157613, -1.3911228260363408e-16], 'true,true': [0.013510977669351101, 0.17654380295222186], 'true': [0.22244137543157613, nan], 'false': [-1.3911228260363408e-16, nan]}, {'': [0.17272265877943535, -3.566981605221386e-18], 'false,true': [2.312964634635743e-17, -9.86864910777917e-18], 'false': [-3.566981605221386e-18, nan]}, {'': [0.16803671173315265, 2.391249591500337e-16], 'true': [0.16803671173315265, nan], 'false': [2.391249591500337e-16, nan]}, {'': [0.16309221372864333, -1.838878715735249e-17], 'false,true': [-2.921639538487254e-18, 3.1273888017610045e-17], 'false': [-1.838878715735249e-17, nan], 'false,true,true': [0.0, -3.2025664171879517e-18]}, {'': [0.15871588075301774, 4.479011343981318e-17], 'true,true': [0.0063733490578711735, 0.14543442127668332], 'true': [0.15871588075301774, nan], 'false,true,true': [0.0, 6.00120553851436e-18], 'false,true': [7.93016446160826e-18, 4.3989968900242054e-17], 'false': [4.479011343981318e-17, nan]}, {'': [0.15832027880210545, 5.0078144940538974e-17], 'false,true': [-1.1328806373726086e-18, 1.1075859153030065e-16], 'false': [5.0078144940538974e-17, nan]}, {'': [0.0854984751471885, nan], 'true,true': [0.009597952330413903, 5.9054416203465774e-18], 'true': [0.02797665101835427, 0.06053677288650408], 'true,true,false': [0.0, 6.1679056923619804e-18], 'true,false,false': [0.1825019223375625, -6.374486265790372e-17], 'true,false': [0.009685353280961583, 0.06535991764815391]}, {'': [0.12987095484400688, 7.422141493412724e-07], 'false,true': [9.326241004295345e-07, -1.2486862136373643e-16], 'false': [7.422141493412724e-07, nan], 'false,true,true': [6.938893903907229e-19, -5.415722071342227e-18]}, {'': [0.06758461448500881, nan], 'true,true': [0.012320603821961137, -3.142140635731575e-18], 'true': [0.023091476765570943, 0.05804868794223716], 'true,false,false': [0.17654380295222147, 1.0689124004530577e-16], 'true,false': [0.008120885732669376, 0.06269588938420761]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(A, H).;true;true
5;false;genre(B, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false,false;movie(C, B).;true;true
7;false;genre(A, F).;true;true
7;true,false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048818;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.1418510649004872;  // std dev = 2,98e-07, 431,000 (wgt'ed) examples reached here.  /* #neg=431 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else return -0.12544463852839238;  // std dev = 0,000, 543,000 (wgt'ed) examples reached here.  /* #neg=543 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360615;  // std dev = 1,02e-07, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | | else return -0.1123163781936063;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.11231637819360632;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360629;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360629;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360629;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.11231637819360606;  // std dev = 0,000, 435,000 (wgt'ed) examples reached here.  /* #neg=435 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783646;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( female(A) )
%   | then return -0.10159632948783652;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783638;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else return -0.10159632948783658;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( genre(B, D) )
%   | then return -0.092691276189261;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926047;  // std dev = 2,01e-07, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926093;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948906;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.25517224256948845;  // std dev = 1,29e-08, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.08518475138839678;  // std dev = 3,36e-09, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839678;  // std dev = 2,63e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.08518475138839678;  // std dev = 5,48e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839679;  // std dev = 6,23e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | | else return -0.08518475138839678;  // std dev = 7,45e-08, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253506;  // std dev = 1,75e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.20975771563253492;  // std dev = 1,94e-08, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07877675473109169;  // std dev = 2,47e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( genre(A, D) )
%   | then return -0.0787767547310917;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109153;  // std dev = 6,59e-09, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else return -0.07877675473109144;  // std dev = 2,11e-08, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17709649774527672;  // std dev = 1,98e-07, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | | else return -0.07324622576333704;  // std dev = 1,18e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.07324622576333699;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.10984024366833636;  // std dev = 0,908, 67,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=49 */
%   | | | else return -0.07324622576333718;  // std dev = 5,58e-08, 521,000 (wgt'ed) examples reached here.  /* #neg=521 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15528915746224703;  // std dev = 0,004, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.1530720677490931;  // std dev = 0,002, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420262;  // std dev = 1,86e-09, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return -0.06842697784420261;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420267;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420262;  // std dev = 2,28e-09, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07079581281057681;  // std dev = 0,028, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06995834590327285;  // std dev = 0,024, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.06842697784420332;  // std dev = 0,000, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13371192525778272;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | | else return 0.12869871245695919;  // std dev = 0,437, 188,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=183 */
%   | | else if ( actor(A) )
%   | | | then return -0.06407799510555835;  // std dev = 0,000185, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.06419184008202619;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202532;  // std dev = 2,48e-07, 539,000 (wgt'ed) examples reached here.  /* #neg=539 */
%   | | | else return 0.08832734070279226;  // std dev = 0,754, 65,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064171
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.5 seconds
Total inference time: 2.056 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.65 seconds
Refined model CLL: -0.064726


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064171
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.678 seconds
Total inference time: 2.056 seconds
AUC ROC: 1.0
Total revision time: 16.678
Best scored revision CLL: -0.064726


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:11:59
{'Learning time': 16.678, 'CLL': -0.064171, 'parameter_1.0': {'Learning time': 3.077, 'CLL': -0.178287, 'Recall': 0.777778, 'F1': 0.853659, 'Precision': [0.945946, 0.5], 'AUC PR': 0.823063, 'Inference time': 1.735, 'AUC ROC': 0.971565}, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Inference time': 2.056, 'AUC ROC': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048863;  // std dev = 0,000, 628,000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.12544463852839233;  // std dev = 0,000, 625,000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360578;  // std dev = 0,000, 597,000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783627;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.10159632948783548;  // std dev = 3,65e-07, 616,000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.09269127618926168;  // std dev = 0,000, 575,000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.08518475138839678;  // std dev = 1,49e-07, 611,000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0787767547310917;  // std dev = 2,98e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07877675473109236;  // std dev = 0,000, 584,000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333673;  // std dev = 2,10e-07, 649,000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 1,97e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06842697784420364;  // std dev = 0,000, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06419184008202546;  // std dev = 2,48e-07, 592,000 (wgt'ed) examples reached here.  /* #neg=592 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.253 seconds
Total inference time: 1.517 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:12:06
{'Learning time': 5.253, 'CLL': -0.063719, 'Recall': 1.0, 'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.517, 'Precision': [1.0, 0.5]}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.14185106490048868;  // std dev = 0,000, 644,000 (wgt'ed) examples reached here.  /* #neg=644 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.707 seconds
Total inference time: 1.34 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:12:10
{'Learning time': 1.707, 'CLL': -0.158221, 'Recall': 0.0, 'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Inference time': 1.34, 'Precision': [nan, 0.5]}


