Starting experiment #3 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.41529179224236884;  // std dev = 4,156, 70,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | | | else return 0.029035011048878824;  // std dev = 4,731, 158,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=27 */
%   | else return 0.2149224614697243;  // std dev = 0,479, 7.736,000 (wgt'ed) examples reached here.  /* #neg=4.976 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.1914822684328457;  // std dev = 0,471, 51,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( title(K, I), venue(K, A) )
%   | | | then return 0.07261921933723868;  // std dev = 8,075, 387,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=83 */
%   | | | else return -0.051722309535680897;  // std dev = 4,371, 233,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=21 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.036700850308213157;  // std dev = 0,307, 466,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=49 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6325168904718238;  // std dev = 0,282, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2498074781120462;  // std dev = 4,754, 93,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=39 */
%   | | | else return 0.04607549255877895;  // std dev = 4,600, 125,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=27 */
%   | else return 0.1905840286427481;  // std dev = 0,480, 7.657,000 (wgt'ed) examples reached here.  /* #neg=4.897 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.8142294638071818;  // std dev = 1,701, 87,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | | else return -0.1481304119900393;  // std dev = 0,999, 324,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=1 */
%   | | else if ( haswordauthor(L, H) )
%   | | | then return 0.18204270053387456;  // std dev = 3,125, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.0552110348191758;  // std dev = 4,394, 261,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=21 */
%   | else return -0.02162124707537664;  // std dev = 0,320, 424,000 (wgt'ed) examples reached here.  /* #neg=375 #pos=49 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.24153686351200065;  // std dev = 5,776, 151,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=69 */
%   | | | else return 0.662591797814181;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.047363457063382644;  // std dev = 0,313, 81,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=13 */
%   | else return 0.16314348699076167;  // std dev = 0,480, 7.633,000 (wgt'ed) examples reached here.  /* #neg=4.873 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.41009736379177997;  // std dev = 0,683, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1294525863736556;  // std dev = 3,178, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else return 0.005597905933329643;  // std dev = 0,322, 659,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=104 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.009257719419442298;  // std dev = 0,331, 390,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=49 */
%   | | else return -0.12309175481919944;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.4974148205984516;  // std dev = 0,217, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2775297607113958;  // std dev = 4,350, 76,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return 0.03580895511020253;  // std dev = 4,536, 114,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=27 */
%   | else return 0.13615600499727248;  // std dev = 0,480, 7.627,000 (wgt'ed) examples reached here.  /* #neg=4.867 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), venue(K, B) )
%   | | | then return 0.014227343510130672;  // std dev = 1,249, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.09019120300644087;  // std dev = 2,784, 56,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else return -0.01304501458746484;  // std dev = 0,296, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.010141246776008769;  // std dev = 0,326, 788,000 (wgt'ed) examples reached here.  /* #neg=684 #pos=104 */
%   | | else return 0.010048557970468424;  // std dev = 0,322, 275,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=47 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11209908374810264;  // std dev = 0,479, 7.841,000 (wgt'ed) examples reached here.  /* #neg=4.994 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.12996579152423207;  // std dev = 0,463, 49,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.04869358588742975;  // std dev = 6,834, 379,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=83 */
%   | | | else return -0.035934141836408584;  // std dev = 4,365, 225,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.008764067230690325;  // std dev = 6,417, 379,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=47 */
%   | | | else return -0.09557105209484615;  // std dev = 1,389, 52,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=2 */
%   | | else return -0.11140043102158052;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then if ( author(F, D), title(F, E) )
%   | | | then return 0.3677883493139025;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26778834931390244;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4371304401952649;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08020997675647608;  // std dev = 0,477, 8.033,000 (wgt'ed) examples reached here.  /* #neg=5.207 #pos=2.826 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then if ( author(J, I), title(J, H) )
%   | | | then return 0.08356701937659569;  // std dev = 0,853, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.14188856183421944;  // std dev = 3,049, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else if ( title(K, H), venue(K, A) )
%   | | | then return 0.023705364050412934;  // std dev = 6,892, 421,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=83 */
%   | | | else return -0.0453240323606811;  // std dev = 4,397, 262,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=21 */
%   | else return -0.017990213373627367;  // std dev = 0,315, 438,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=49 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.08329210396452597;  // std dev = 5,891, 165,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=69 */
%   | | | else return 0.4765433804689316;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.1064331247590466;  // std dev = 0,290, 74,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=13 */
%   | else return 0.06763828175944339;  // std dev = 0,479, 7.754,000 (wgt'ed) examples reached here.  /* #neg=4.994 #pos=2.760 */
%   else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.7503015531905246;  // std dev = 0,138, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13669703179485157;  // std dev = 0,016, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(K, G) )
%   | | | then return 0.08440484808346436;  // std dev = 2,672, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.14054418178771153;  // std dev = 0,072, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.0017348096094633315;  // std dev = 0,324, 1.046,000 (wgt'ed) examples reached here.  /* #neg=895 #pos=151 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05935958299006082;  // std dev = 0,479, 7.861,000 (wgt'ed) examples reached here.  /* #neg=5.014 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6270953341500285;  // std dev = 2,171, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.14256619236195636;  // std dev = 1,032, 307,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.05616881196693631;  // std dev = 3,572, 160,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=17 */
%   | | | else return 0.02706483506866834;  // std dev = 4,027, 129,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.0028850633560923975;  // std dev = 6,393, 370,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=47 */
%   | | | else return -0.08368314712366459;  // std dev = 1,389, 54,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=2 */
%   | | else return -0.09793795523368785;  // std dev = 0,013, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04743226480159305;  // std dev = 0,479, 7.843,000 (wgt'ed) examples reached here.  /* #neg=4.996 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6187426437755499;  // std dev = 0,505, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17862363951566243;  // std dev = 0,126, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03292229563415022;  // std dev = 3,221, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return -0.12478017177676819;  // std dev = 0,039, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.005156478166827995;  // std dev = 7,621, 554,000 (wgt'ed) examples reached here.  /* #neg=486 #pos=68 */
%   | | | else return -0.028649444068316876;  // std dev = 3,783, 244,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=35 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004545935322104601;  // std dev = 4,331, 270,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=48 */
%   | | | else return -0.0896209307623232;  // std dev = 0,012, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.021977032727337902;  // std dev = 0,474, 7.513,000 (wgt'ed) examples reached here.  /* #neg=4.904 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.6767781793044192;  // std dev = 3,783, 147,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=133 */
%   | | | else return -0.13327241374651685;  // std dev = 1,584, 560,000 (wgt'ed) examples reached here.  /* #neg=558 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.14283345216481408;  // std dev = 4,697, 148,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=27 */
%   | | | else return -0.08166812382769184;  // std dev = 0,982, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3920704817847772;  // std dev = 4,578, 107,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=78 */
%   | | | else return 0.037163184844830964;  // std dev = 4,537, 206,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5222263602611051;  // std dev = 0,346, 79,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=68 */
%   | else return -0.0042658678413551206;  // std dev = 0,267, 270,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=49 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5017132915351568;  // std dev = 4,813, 101,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048766;  // std dev = 7,88e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.785546497676662;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else return 0.004600543951390423;  // std dev = 3,056, 56,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3491500553588154;  // std dev = 0,414, 101,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360622;  // std dev = 6,83e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5250787274755392;  // std dev = 0,841, 54,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | else return 0.04741856270187138;  // std dev = 2,824, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10460523740658254;  // std dev = 0,015, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10159632948783615;  // std dev = 5,96e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16820359030615753;  // std dev = 3,902, 109,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09367518655124747;  // std dev = 0,010, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.0926685581642666;  // std dev = 0,000682, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14939390394859037;  // std dev = 0,371, 104,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08510810820457915;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08516112757232516;  // std dev = 0,000663, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10864318118943686;  // std dev = 0,375, 105,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.0880599857740788;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07856202653123347;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877406468529345;  // std dev = 1,95e-05, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06688277707603585;  // std dev = 3,959, 109,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07318484566631679;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07323079892879802;  // std dev = 5,66e-05, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06582802547716386;  // std dev = 3,840, 107,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=65 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08124009233568573;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06837324803527843;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.06841789571014449;  // std dev = 4,66e-05, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2725485645053543;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07537894067543556;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06414443211414832;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.28486823955488033;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return -0.06402844034821077;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.08292169629793907;  // std dev = 2,828, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.06419625791456253;  // std dev = 1,05e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.185477
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.131 seconds
Total inference time: 1.534 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.976342
   AUC PR    = 0.859468
   CLL	      = -0.185374
   Precision = 0.84127 at threshold = 0.5
   Recall    = 0.815385
   F1        = 0.828125


Total scoring time: 1.574 seconds
Parameter learned model CLL: -0.185374


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 3, 0], 'true,true,false': [4.813, 36, 65], 'false,true,true': [0.0, 6, 0], 'false,true,false': [7.88e-08, 83, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 53], 'true,true,false': [3.056, 44, 12], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [5.27e-09, 12, 0], 'false,true,false': [0.0, 82, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.414, 36, 65], 'false,true,true': [0.0, 7, 0], 'false,true,false': [6.83e-08, 83, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.841, 1, 53], 'true,true,false': [2.824, 26, 12], 'false,true,true': [0.015, 8, 0], 'false,true,false': [5.96e-08, 80, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.01, 11, 0], 'false,true,false': [0.000682, 89, 0], 'true': [3.902, 44, 65]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'false,true,false': [0.000663, 83, 0], 'true': [0.371, 39, 65]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.375, 40, 65], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 7, 0], 'false,true,false': [1.95e-05, 80, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 11, 0], 'false,true,false': [5.66e-05, 91, 0], 'true': [3.959, 44, 65]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 12, 0], 'false,true,false': [4.66e-05, 81, 0], 'true': [3.84, 42, 65]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 53], 'true,false,false,false': [1.05e-08, 67, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 3, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [3.73e-09, 10, 0], 'true,true,false,false': [0.0, 7, 0], 'true,false,false,true': [2.828, 24, 12]}]]
[{'': [0.2343749999999994, 7.734137924355023e-17], 'true,true': [0.0, 0.22938927556121883], 'false': [7.734137924355023e-17, nan], 'false,true': [-6.938893903907228e-18, 7.490661370964911e-17], 'true': [0.2343749999999994, nan]}, {'': [0.23801076701213614, -9.448706592554524e-18], 'false': [-9.448706592554524e-18, nan], 'true': [0.23801076701213614, nan], 'true,true': [-6.703233356227361e-16, 0.16672546290892215], 'false,true,true': [nan, 2.3129646346357427e-18], 'false,true': [2.3129646346357427e-18, -2.166288828536891e-17]}, {'': [0.1715455930872936, 5.921189464667501e-17], 'false,true': [-1.982541115402065e-18, 5.617996028223683e-17], 'false': [5.921189464667501e-17, nan], 'true': [0.1715455930872936, nan]}, {'': [0.1496984680550139, 3.2173690506938484e-06], 'true,true': [0.013110354695601265, 0.20987781617565004], 'false': [3.2173690506938484e-06, nan], 'false,true': [2.716058059047677e-05, 4.4408920985006264e-17], 'true': [0.1496984680550139, nan]}, {'': [0.13971306282034535, 1.1687404841065341e-06], 'false,true': [9.680796004241603e-06, 5.225600186023315e-09], 'false': [1.1687404841065341e-06, nan]}, {'': [0.13738914070674113, 5.121510310727449e-09], 'false,true': [-1.1564823173178713e-18, 5.302230754857191e-09], 'false': [5.121510310727449e-09, nan]}, {'': [0.14043373627682526, 1.9047327914537473e-06], 'false,true': [1.5592064406205137e-05, 3.8211368652563136e-10], 'false': [1.9047327914537473e-06, nan], 'false,true,true': [0.0, -9.912705577010326e-19], 'true': [0.14043373627682526, nan]}, {'': [0.14380493634227814, 3.062463180650995e-09], 'false,true': [6.30808536718839e-19, 3.2049184307657463e-09], 'false': [3.062463180650995e-09, nan], 'false,true,true': [nan, 6.30808536718839e-19]}, {'': [0.1378263844643249, 1.7340735269986e-06], 'false,true': [1.1755433059235953e-05, 2.1750811241279993e-09], 'false': [1.7340735269986e-06, nan], 'false,true,true': [0.0, -5.782411586589357e-19]}, {'': [0.07271127764600503, nan], 'true,false': [0.016255055031776867, 0.0777496228303204], 'true,false,true': [0.0, 1.3877787807814458e-18], 'true': [0.007965972863030128, 0.07563724413717897], 'true,true,false': [0.0, -4.956352788505163e-19], 'true,true': [-1.850371707708594e-17, 2.181479699494729e-05], 'true,false,false': [0.222222222222222, 1.6570492904853082e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.14185106490048763;  // std dev = 8,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109542;  // std dev = 1,05e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6983504609424711;  // std dev = 0,132, 40,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.7194734122109542;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( actor(A) )
%   | | | then return -0.12544463852839136;  // std dev = 1,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.17713862161527616;  // std dev = 0,127, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.10726477876125251;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.5604458944094263;  // std dev = 0,000813, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.09741747955928036;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.4212918442470892;  // std dev = 0,000803, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(B), actor(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09198928979211847;  // std dev = 0,004, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.32327464059668365;  // std dev = 0,000719, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.0852257917973857;  // std dev = 8,21e-05, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.0819862186761484;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694891;  // std dev = 6,45e-09, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.25692033559982436;  // std dev = 0,000627, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839686;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 1,32e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253554;  // std dev = 2,63e-09, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.21099186689773536;  // std dev = 0,000546, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877484011537395;  // std dev = 5,34e-06, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0788055420425172;  // std dev = 7,43e-05, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.17660703317184734;  // std dev = 0,450, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.1780012130498287;  // std dev = 0,000479, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324422539034212;  // std dev = 4,87e-06, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07327330996899495;  // std dev = 8,84e-05, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.06450974165871722;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333702;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.15342986375688533;  // std dev = 0,000425, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842514868323195;  // std dev = 6,29e-06, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06844694600072576;  // std dev = 6,76e-05, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.1978662657476703;  // std dev = 0,475, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420271;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06304020416141679;  // std dev = 0,004, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.18075694741000703;  // std dev = 0,404, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.09903075881565163;  // std dev = 0,312, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return 0.12040375810563213;  // std dev = 0,332, 42,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.10556110648542186;  // std dev = 0,259, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.06871178383889047;  // std dev = 0,495, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063902
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.605 seconds
Total inference time: 1.724 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070144
   Precision = 0.878378 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.935252


Total scoring time: 1.427 seconds
Refined model CLL: -0.070144


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063902
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.737 seconds
Total inference time: 1.724 seconds
AUC ROC: 1.0
Total revision time: 7.737
Best scored revision CLL: -0.070144


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 15:44:05
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.724, 'CLL': -0.063902, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.737, 'parameter_0.2': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.534, 'CLL': -0.185477, 'Recall': 1.0, 'F1': 0.973913, 'Learning time': 1.131}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048774;  // std dev = 4,71e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1254446385283911;  // std dev = 7,45e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.11231637819360629;  // std dev = 6,66e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.10159632948783641;  // std dev = 0,000, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926105;  // std dev = 1,05e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.08518475138839679;  // std dev = 3,49e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07877675473109164;  // std dev = 5,77e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07324622576333704;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,94e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0684269778442027;  // std dev = 3,65e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06419184008202626;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.101 seconds
Total inference time: 1.376 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 15:44:09
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.376, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 2.101, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.759 seconds
Total inference time: 0.832 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 15:44:11
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.832, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 0.759, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.5387772073508182;  // std dev = 6,443, 191,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.14185106490048816;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7792365329034592;  // std dev = 2,92e-07, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | else return 0.019766257101510476;  // std dev = 4,170, 98,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.1254446385283913;  // std dev = 3,73e-09, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3623359141744238;  // std dev = 0,408, 194,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.1123163781936065;  // std dev = 2,11e-08, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5298769511809952;  // std dev = 2,67e-07, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | else return -0.017568597263278533;  // std dev = 4,068, 86,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.10159632948783649;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.199591623907422;  // std dev = 5,098, 200,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926097;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.09269127618926064;  // std dev = 8,30e-08, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1515113840286381;  // std dev = 0,361, 201,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839678;  // std dev = 7,60e-08, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1580471253393051;  // std dev = 0,351, 184,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=130 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07877675473109147;  // std dev = 5,67e-09, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08397308414291965;  // std dev = 5,129, 200,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07324622576333677;  // std dev = 7,33e-09, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.053672404464822854;  // std dev = 5,255, 205,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=130 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.06842697784420262;  // std dev = 5,89e-09, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.31383727305705256;  // std dev = 0,294, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.25787892201249135;  // std dev = 1,49e-07, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.16074125501799982;  // std dev = 4,078, 83,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.186219
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.713 seconds
Total inference time: 1.601 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.978507
   AUC PR    = 0.866361
   CLL	      = -0.179602
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.823077
   F1        = 0.832685


Total scoring time: 1.89 seconds
Parameter learned model CLL: -0.179602


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 10, 0], 'true,true,false': [6.443, 61, 130], 'false,true,true': [1.49e-08, 24, 0], 'false,true,false': [0.0, 160, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.92e-07, 0, 107], 'true,true,false': [4.17, 75, 23], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 18, 0], 'false,true,false': [3.73e-09, 152, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.408, 64, 130], 'false,true,true': [1.67e-08, 18, 0], 'false,true,false': [2.11e-08, 180, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.67e-07, 0, 107], 'true,true,false': [4.068, 63, 23], 'false,true,true': [0.0, 23, 0], 'false,true,false': [0.0, 168, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 27, 0], 'false,true,false': [8.3e-08, 175, 0], 'true': [5.098, 70, 130]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 15, 0], 'false,true,false': [7.6e-08, 183, 0], 'true': [0.361, 71, 130]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.351, 54, 130], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 15, 0], 'false,true,false': [5.67e-09, 190, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.63e-09, 11, 0], 'false,true,false': [7.33e-09, 161, 0], 'true': [5.129, 70, 130]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 3, 0], 'false,true,true,false': [0.0, 20, 0], 'false,true,false': [5.89e-09, 199, 0], 'true': [5.255, 75, 130]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.49e-07, 0, 107], 'true,false,false,false': [0.0, 152, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.294, 10, 0], 'true,true,false,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 23, 0], 'true,true,false,false': [0.0, 8, 0], 'true,false,false,true': [4.078, 60, 23]}]]
[{'': [0.22845969159179655, -2.0756343503861623e-16], 'true,true': [-1.1102230246251566e-17, 0.2173734272635114], 'false': [-2.0756343503861623e-16, nan], 'false,true': [9.25185853854297e-18, -1.4432899320127036e-16], 'true': [0.22845969159179655, nan]}, {'': [0.22872459079726104, -1.2761184191093753e-17], 'false': [-1.2761184191093753e-17, nan], 'true': [0.22872459079726104, nan], 'true,true': [7.968703578617946e-16, 0.17739559539432834], 'false,true,true': [0.0, 0.0], 'false,true': [-2.523234146875356e-18, 1.460819769243627e-17]}, {'': [0.16628872825317542, -2.4671622769447922e-17], 'false,true': [1.5419764230904953e-17, 2.4671622769447924e-18], 'false': [-2.4671622769447922e-17, nan], 'true': [0.16628872825317542, nan]}, {'': [0.15976092971999412, -9.067790148770912e-17], 'true,true': [6.640586315514955e-16, 0.1923801961427678], 'false': [-9.067790148770912e-17, nan], 'false,true': [-1.0860877414811314e-17, -7.533656238527848e-17], 'true': [0.15976092971999412, nan]}, {'': [0.12993872607222598, 4.286999798057535e-17], 'false,true': [1.02798428206033e-18, 3.933361572957697e-17], 'false': [4.286999798057535e-17, nan]}, {'': [0.1305477171044679, 3.027880976250427e-17], 'false,true': [-4.625929269271485e-18, 3.154732091831046e-17], 'false': [3.027880976250427e-17, nan]}, {'': [0.12295058704883076, 2.7078610356711135e-17], 'false,true': [0.0, 3.272236283105724e-17], 'false': [2.7078610356711135e-17, nan], 'false,true,true': [nan, 0.0], 'true': [0.12295058704883076, nan]}, {'': [0.13150870371210527, 1.7578004998075282e-07], 'false,true': [2.3364878978815915e-06, 5.3097622916855314e-17], 'false': [1.7578004998075282e-07, nan], 'false,true,true': [0.0, 6.30808536718839e-19]}, {'': [0.134694511244011, 3.096121232866318e-07], 'false,true': [2.634232571573865e-06, 3.4031962061374145e-17], 'false': [3.096121232866318e-07, nan], 'false,true,true': [1.1564823173178713e-18, -2.7755575615628915e-18]}, {'': [0.07182519590403165, nan], 'true,false': [0.015105235860018273, 0.07288062675062862], 'true,false,true': [2.0751832235984234e-16, -3.620292471603771e-18], 'true': [0.019527196429163268, 0.07282973745552973], 'true,true,false': [-5.782411586589357e-19, 0.0], 'true,true': [0.008659282788283007, 3.5576314442213976e-06], 'true,false,false': [0.20031934968790802, -9.495328500083576e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
3;true;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.14185106490048766;  // std dev = 5,96e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.1418510649004883;  // std dev = 0,000, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109545;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.38150619191521623;  // std dev = 0,926, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.12544463852839105;  // std dev = 8,16e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462848;  // std dev = 1,49e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return 0.5583725810697551;  // std dev = 0,015, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360635;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360633;  // std dev = 6,32e-09, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else return -0.11231637819360635;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583105;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.3978671040447657;  // std dev = 0,118, 80,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=78 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return 0.41751358415831047;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.5004930728190444;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( genre(B, E) )
%   | then if ( actor(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10159632948783652;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014944;  // std dev = 5,27e-09, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return 0.32633078712897357;  // std dev = 0,010, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.41496801189498494;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return 0.2590304664984354;  // std dev = 0,009, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.08518475138839683;  // std dev = 2,63e-09, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.2856823481900248;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839682;  // std dev = 1,61e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 1,32e-09, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,39e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.08518475138839678;  // std dev = 3,16e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325359;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return 0.2124966042569831;  // std dev = 0,008, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109173;  // std dev = 2,36e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.26441498765607746;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109172;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109172;  // std dev = 2,28e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07877675473109164;  // std dev = 3,94e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return 0.1791137747425552;  // std dev = 0,007, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09862892915361283;  // std dev = 0,142, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return 0.15427982470821539;  // std dev = 0,006, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.06769952509890555;  // std dev = 0,003, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.20918711529859776;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420262;  // std dev = 2,79e-09, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420265;  // std dev = 1,83e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.06842697784420265;  // std dev = 2,58e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06419669706540827;  // std dev = 1,37e-05, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06391274420437368;  // std dev = 0,000575, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.07950234073325088;  // std dev = 0,560, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.10766814754794013;  // std dev = 0,639, 90,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=78 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06418495094374227;  // std dev = 0,001, 200,000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | | else return 0.09074608045521325;  // std dev = 0,471, 30,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063934
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.831 seconds
Total inference time: 2.18 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066274
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.964 seconds
Refined model CLL: -0.066274


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063934
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.398 seconds
Total inference time: 2.18 seconds
AUC ROC: 1.0
Total revision time: 9.398
Best scored revision CLL: -0.066274


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 15:44:25
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.601, 'CLL': -0.186219, 'Recall': 1.0, 'F1': 0.973913, 'Learning time': 1.713}, 'Inference time': 2.18, 'CLL': -0.063934, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.398}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048835;  // std dev = 0,000, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839174;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.11231637819360657;  // std dev = 0,000, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 3,86e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.10159632948783648;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2,53e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926062;  // std dev = 8,94e-08, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5,96e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839683;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08518475138839678;  // std dev = 6,50e-08, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2,11e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07877675473109147;  // std dev = 7,15e-08, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333674;  // std dev = 1,10e-07, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06842697784420261;  // std dev = 6,66e-08, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.06419184008202626;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.964 seconds
Total inference time: 1.318 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 15:44:29
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.318, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 2.964, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.14185106490048843;  // std dev = 0,000, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.94 seconds
Total inference time: 0.851 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 15:44:31
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.851, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 0.94, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.5259571542775907;  // std dev = 8,048, 292,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.14185106490048818;  // std dev = 0,000, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7702379979280636;  // std dev = 1,275, 162,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=160 */
%   | | else return 0.06366894281787398;  // std dev = 5,007, 125,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.12544463852839194;  // std dev = 0,000, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3558994327880322;  // std dev = 0,413, 295,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360625;  // std dev = 1,97e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.11231637819360689;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5264944832532483;  // std dev = 1,186, 162,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=160 */
%   | | else return -0.05797584026211436;  // std dev = 5,149, 148,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.1015963294878366;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22030117807516314;  // std dev = 6,150, 289,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.09269127618926047;  // std dev = 1,03e-07, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18035279473986185;  // std dev = 0,356, 284,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839678;  // std dev = 5,27e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.08518475138839678;  // std dev = 8,82e-08, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.13958861553360816;  // std dev = 0,357, 284,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=195 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.07877675473109144;  // std dev = 3,73e-09, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.051569817004100085;  // std dev = 6,679, 320,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.07324622576333686;  // std dev = 6,84e-09, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07450980069889603;  // std dev = 6,328, 296,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=195 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420265;  // std dev = 1,34e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.06842697784420282;  // std dev = 0,000, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3203038179726531;  // std dev = 0,289, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06419184008202619;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2602034724537602;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #pos=160 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.16099895511786577;  // std dev = 5,028, 126,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=35 */
%   | | | else return -0.06419184008202625;  // std dev = 2,58e-08, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.18665
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.925 seconds
Total inference time: 1.909 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.978454
   AUC PR    = 0.864153
   CLL	      = -0.1785
   Precision = 0.808081 at threshold = 0.5
   Recall    = 0.820513
   F1        = 0.814249


Total scoring time: 1.859 seconds
Parameter learned model CLL: -0.1785


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 18, 0], 'true,true,false': [8.048, 97, 195], 'false,true,true': [2.98e-08, 32, 0], 'false,true,false': [0.0, 256, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.275, 2, 160], 'true,true,false': [5.007, 90, 35], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 21, 0], 'false,true,false': [0.0, 275, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.413, 100, 195], 'false,true,true': [1.97e-08, 34, 0], 'false,true,false': [0.0, 257, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.186, 2, 160], 'true,true,false': [5.149, 113, 35], 'false,true,true': [0.0, 34, 0], 'false,true,false': [0.0, 267, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 37, 0], 'false,true,false': [1.03e-07, 248, 0], 'true': [6.15, 94, 195]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 26, 0], 'false,true,false': [8.82e-08, 236, 0], 'true': [0.356, 89, 195]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.357, 89, 195], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 26, 0], 'false,true,false': [3.73e-09, 251, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 28, 0], 'false,true,false': [6.84e-09, 268, 0], 'true': [6.679, 125, 195]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 5, 0], 'false,true,true,false': [1.34e-08, 25, 0], 'false,true,false': [0.0, 264, 0], 'true': [6.328, 101, 195]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 160], 'true,false,false,false': [2.58e-08, 244, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.289, 9, 0], 'true,true,false,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 28, 0], 'true,true,false,false': [0.0, 19, 0], 'true,false,false,true': [5.028, 91, 35]}]]
[{'': [0.2333506763787768, 0.0], 'true,true': [-3.0839528461809902e-18, 0.22184040157628565], 'false': [0.0, nan], 'false,true': [2.7755575615628914e-17, -1.0408340855860843e-16], 'true': [0.2333506763787768, nan]}, {'': [0.2157442768064496, -8.614439522175128e-17], 'false': [-8.614439522175128e-17, nan], 'true': [0.2157442768064496, nan], 'true,true': [0.010028092315613716, 0.20055157245859653], 'false,true,true': [0.0, -2.64338815386942e-18], 'false,true': [-4.625929269271485e-18, -7.428401328401047e-17]}, {'': [0.17083298263798086, -1.0529950336650969e-16], 'false,true': [1.1428766429964846e-17, -9.849449401343801e-17], 'false': [-1.0529950336650969e-16, nan], 'true': [0.17083298263798086, nan]}, {'': [0.17527628558317113, -5.458903908455919e-17], 'true,true': [0.0086771276247273, 0.179118369898935], 'false': [-5.458903908455919e-17, nan], 'false,true': [-9.79608551139844e-18, -6.320370776892276e-17], 'true': [0.17527628558317113, nan]}, {'': [0.13085823175283073, 7.791038769299344e-17], 'false,true': [-6.00120553851436e-18, 4.297637514678025e-17], 'false': [7.791038769299344e-17, nan]}, {'': [0.12675315278448546, 3.474743817529116e-17], 'false,true': [1.0675221390626506e-18, 3.293034395074617e-17], 'false': [3.474743817529116e-17, nan]}, {'': [0.12718443845786684, 7.188494404047776e-18], 'false,true': [-5.13992141030165e-18, 1.2384958043627244e-17], 'false': [7.188494404047776e-18, nan], 'false,true,true': [0.0, -2.135044278125301e-18], 'true': [0.12718443845786684, nan]}, {'': [0.13939416351311934, 3.203999332810855e-17], 'false,true': [-6.47630097698008e-18, 4.639738013358863e-17], 'false': [3.203999332810855e-17, nan], 'false,true,true': [0.0, -5.9476233462061954e-18]}, {'': [0.13529876481521258, -5.2112509319140003e-17], 'false,true': [8.326672684688674e-18, -2.2709107321878203e-17], 'false': [-5.2112509319140003e-17, nan], 'false,true,true': [6.938893903907229e-19, 7.216449660063518e-18]}, {'': [0.07039431636416339, nan], 'true,false': [0.013338637058693058, 0.0704229275884636], 'true,false,true': [-4.4408920985006264e-17, -4.956352788505163e-19], 'true': [0.015548599667945128, 0.07252768504743314], 'true,true,false': [0.0, -7.304098846218135e-19], 'true,true': [0.009307281047399541, -1.734723475976807e-18], 'true,false,false': [0.2006172839506169, 2.7300566179307128e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.14185106490048763;  // std dev = 8,16e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.1418510649004882;  // std dev = 0,000, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.12544463852839186;  // std dev = 0,000, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,87e-08, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else return 0.5553664367462834;  // std dev = 4,15e-08, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360629;  // std dev = 1,32e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360629;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360693;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831036;  // std dev = 1,05e-08, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else return 0.41751358415830947;  // std dev = 2,93e-08, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.1015963294878366;  // std dev = 0,000, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601501;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else return 0.3207118471601501;  // std dev = 1,58e-08, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926089;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.09269127618926092;  // std dev = 1,32e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926092;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926083;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return -0.0926912761892608;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( female(B) )
%   | | then return -0.0851847513883968;  // std dev = 3,73e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.08518475138839679;  // std dev = 1,86e-09, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839678;  // std dev = 1,32e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.08518475138839675;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.08518475138839676;  // std dev = 4,59e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253565;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else return 0.20975771563253548;  // std dev = 1,60e-08, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 9,31e-10, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109146;  // std dev = 7,88e-08, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.07877675473109162;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333698;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07324622576333699;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.07324622576333693;  // std dev = 3,94e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367136;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.06842697784420271;  // std dev = 7,45e-09, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0684269778442027;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.06842697784420268;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202616;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06419184008202616;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.11396444763935554;  // std dev = 0,797, 178,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=160 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.09049996096385635;  // std dev = 0,525, 41,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   | | | else return -0.06237350182431948;  // std dev = 0,342, 327,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06394
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.97 seconds
Total inference time: 1.68 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065201
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.472 seconds
Refined model CLL: -0.065201


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06394
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.225999999999999 seconds
Total inference time: 1.68 seconds
AUC ROC: 1.0
Total revision time: 10.225999999999999
Best scored revision CLL: -0.065201


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 15:44:46
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.68, 'parameter_0.6': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.909, 'CLL': -0.18665, 'Recall': 1.0, 'F1': 0.973913, 'Learning time': 1.925}, 'CLL': -0.06394, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.225999999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.14185106490048782;  // std dev = 1,15e-07, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.12544463852839205;  // std dev = 0,000, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.11231637819360672;  // std dev = 0,000, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783633;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.1015963294878365;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 4,00e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926054;  // std dev = 1,74e-07, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0851847513883968;  // std dev = 2,04e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.08518475138839678;  // std dev = 1,01e-07, 345,000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07877675473109144;  // std dev = 4,21e-08, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07324622576333714;  // std dev = 5,96e-08, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.06842697784420305;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.06419184008202601;  // std dev = 1,12e-07, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.221 seconds
Total inference time: 1.418 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 15:44:51
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.418, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 3.221, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.14185106490048796;  // std dev = 0,000, 349,000 (wgt'ed) examples reached here.  /* #neg=349 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.213 seconds
Total inference time: 1.028 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 15:44:53
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 1.028, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 1.213, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.5478041075133013;  // std dev = 8,983, 377,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.14185106490048768;  // std dev = 1,71e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.757154194934944;  // std dev = 1,996, 220,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=215 */
%   | | else return 0.055767142859610236;  // std dev = 5,681, 166,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.12544463852839216;  // std dev = 0,000, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3616494153773644;  // std dev = 0,411, 387,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360621;  // std dev = 2,98e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.11231637819360646;  // std dev = 0,000, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5217608771479336;  // std dev = 1,442, 218,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=215 */
%   | | else return -0.03380836082359738;  // std dev = 5,720, 172,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.10159632948783617;  // std dev = 1,49e-07, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2031654007601096;  // std dev = 7,229, 395,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.09269127618926043;  // std dev = 2,04e-07, 343,000 (wgt'ed) examples reached here.  /* #neg=343 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15836816208948792;  // std dev = 0,363, 393,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.08518475138839678;  // std dev = 1,19e-07, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.12004406744509322;  // std dev = 0,363, 396,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.07877675473109141;  // std dev = 4,06e-09, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08229166662352466;  // std dev = 7,398, 404,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.07324622576333709;  // std dev = 4,47e-09, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07560365951477643;  // std dev = 7,254, 396,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=260 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.06842697784420314;  // std dev = 0,000, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3225262629190096;  // std dev = 0,395, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2635027783832078;  // std dev = 2,80e-07, 215,000 (wgt'ed) examples reached here.  /* #pos=215 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1766983811656437;  // std dev = 5,746, 169,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=45 */
%   | | | else return -0.06419184008202576;  // std dev = 1,59e-07, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.186791
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 2.301 seconds
Total inference time: 1.661 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.97935
   AUC PR    = 0.869319
   CLL	      = -0.178032
   Precision = 0.814394 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.820611


Total scoring time: 2.427 seconds
Parameter learned model CLL: -0.178032


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 19, 0], 'true,true,false': [8.983, 117, 260], 'false,true,true': [3.16e-08, 33, 0], 'false,true,false': [1.71e-07, 324, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.996, 5, 215], 'true,true,false': [5.681, 121, 45], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 32, 0], 'false,true,false': [0.0, 339, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.411, 127, 260], 'false,true,true': [2.98e-08, 43, 0], 'false,true,false': [0.0, 352, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.442, 3, 215], 'true,true,false': [5.72, 127, 45], 'false,true,true': [0.0, 42, 0], 'false,true,false': [1.49e-07, 365, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 44, 0], 'false,true,false': [2.04e-07, 343, 0], 'true': [7.229, 135, 260]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.24e-08, 44, 0], 'false,true,false': [1.19e-07, 360, 0], 'true': [0.363, 133, 260]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.363, 136, 260], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 41, 0], 'false,true,false': [4.06e-09, 351, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 6, 0], 'false,true,true,false': [9.13e-09, 36, 0], 'false,true,false': [4.47e-09, 336, 0], 'true': [7.398, 144, 260]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 5, 0], 'false,true,true,false': [0.0, 33, 0], 'false,true,false': [0.0, 329, 0], 'true': [7.254, 136, 260]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [2.8e-07, 0, 215], 'true,false,false,false': [1.59e-07, 348, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.395, 16, 0], 'true,true,false,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 33, 0], 'true,true,false,false': [0.0, 41, 0], 'true,false,false,true': [5.746, 124, 45]}]]
[{'': [0.22548719518416843, 1.5673736818237505e-16], 'true,true': [0.0, 0.21403091557669807], 'false': [1.5673736818237505e-16, nan], 'false,true': [3.027880976250427e-17, 9.046261682130905e-17], 'true': [0.22548719518416843, nan]}, {'': [0.21451912109352209, -1.2552921665095104e-16], 'false': [-1.2552921665095104e-16, nan], 'true': [0.21451912109352209, nan], 'true,true': [0.01811583025187796, 0.19443016420552037], 'false,true,true': [0.0, -6.938893903907228e-18], 'false,true': [9.25185853854297e-18, -1.1789979022568035e-16]}, {'': [0.16867696074971789, -2.6982635535193677e-17], 'false,true': [2.0655312086049424e-17, -3.7848512203130334e-17], 'false': [-2.6982635535193677e-17, nan], 'true': [0.16867696074971789, nan]}, {'': [0.16532934310764613, 1.3093539356758603e-16], 'true,true': [0.00954038060690385, 0.19025134726336843], 'false': [1.3093539356758603e-16, nan], 'false,true': [-5.28677630773884e-18, 6.083413833562501e-17], 'true': [0.16532934310764613, nan]}, {'': [0.13230445270004249, 6.65560056106037e-17], 'false,true': [-3.784851220313033e-18, 1.2170374847202881e-16], 'false': [6.65560056106037e-17, nan]}, {'': [0.1320261128393508, 3.95723058282234e-17], 'false,true': [1.1354553660939102e-17, 3.947459643111668e-17], 'false': [3.95723058282234e-17, nan]}, {'': [0.13202158364624383, 3.485257089962517e-17], 'false,true': [0.0, 1.644774851296528e-17], 'false': [3.485257089962517e-17, nan], 'false,true,true': [0.0, 0.0], 'true': [0.13202158364624383, nan]}, {'': [0.1354743229716798, 5.8741958974876004e-18], 'false,true': [3.3042351923367752e-18, 1.9825411154020653e-17], 'false': [5.8741958974876004e-18, nan], 'false,true,true': [0.0, 2.3129646346357427e-18]}, {'': [0.13287905903436834, -9.680418743325616e-17], 'false,true': [-7.304098846218135e-19, -7.154020705791282e-17], 'false': [-9.680418743325616e-17, nan], 'false,true,true': [6.938893903907229e-19, -3.3643121958338078e-18]}, {'': [0.06855711268603014, nan], 'true,false': [0.012387613785766626, 0.06664922031399127], 'true,false,true': [3.6353349271446986e-16, -1.6821560979169039e-18], 'true': [0.01512023704628573, 0.07161489748420516], 'true,true,false': [-5.782411586589357e-19, -2.030895776753335e-18], 'true,true': [0.009748255924380028, -2.362176648138631e-18], 'true,false,false': [0.1953713105283429, 7.273874988923439e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.14185106490048768;  // std dev = 6,32e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.14185106490048766;  // std dev = 1,88e-07, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839133;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.1254446385283922;  // std dev = 0,000, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,15e-08, 113,000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else return 0.5553664367462833;  // std dev = 4,34e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360629;  // std dev = 1,32e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.11231637819360626;  // std dev = 3,48e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783638;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014994;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else return 0.3207118471601494;  // std dev = 2,07e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.09269127618926107;  // std dev = 1,32e-09, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( genre(A, D) )
%   | then return -0.092691276189261;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926093;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.09269127618926074;  // std dev = 6,99e-08, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else return 0.2551722425694892;  // std dev = 8,33e-09, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 2,63e-09, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.08518475138839679;  // std dev = 3,09e-09, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839679;  // std dev = 2,95e-09, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.08518475138839678;  // std dev = 1,83e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 2,36e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.08518475138839678;  // std dev = 5,27e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253529;  // std dev = 1,18e-08, 113,000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else return 0.2097577156325352;  // std dev = 1,99e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07877675473109169;  // std dev = 3,33e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109144;  // std dev = 5,16e-08, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else return 0.17709649774527764;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333689;  // std dev = 1,07e-07, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333698;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367155;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0684269778442027;  // std dev = 1,39e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0684269778442027;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.06842697784420307;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.06419184008202619;  // std dev = 9,31e-10, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1189539512669953;  // std dev = 0,467, 79,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=73 */
%   | | | else return 0.10535177168174066;  // std dev = 0,898, 166,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=142 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.0895831453326577;  // std dev = 0,629, 58,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=45 */
%   | | | else return -0.06419184008202565;  // std dev = 1,87e-07, 402,000 (wgt'ed) examples reached here.  /* #neg=402 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06384
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.483 seconds
Total inference time: 1.853 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06534
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.976 seconds
Refined model CLL: -0.06534


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06384
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.186999999999998 seconds
Total inference time: 1.853 seconds
AUC ROC: 1.0
Total revision time: 12.186999999999998
Best scored revision CLL: -0.06534


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 15:45:09
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.853, 'parameter_0.8': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.661, 'CLL': -0.186791, 'Recall': 1.0, 'F1': 0.973913, 'Learning time': 2.301}, 'CLL': -0.06384, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.186999999999998}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004876;  // std dev = 1,12e-07, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.8581489350995108;  // std dev = 5,84e-07, 113,000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else if ( actor(A) )
%   | | | then return 0.85814893509951;  // std dev = 9,00e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109574;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.12544463852839227;  // std dev = 0,000, 471,000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,37e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.11231637819360589;  // std dev = 0,000, 497,000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831097;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783631;  // std dev = 1,83e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.10159632948783578;  // std dev = 2,73e-07, 508,000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 1,79e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.09269127618926111;  // std dev = 9,88e-08, 455,000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,10e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0851847513883968;  // std dev = 1,90e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.08518475138839678;  // std dev = 1,26e-07, 467,000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253479;  // std dev = 2,60e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.07877675473109169;  // std dev = 5,16e-08, 455,000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527692;  // std dev = 1,58e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07324622576333725;  // std dev = 0,000, 458,000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367155;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.06842697784420339;  // std dev = 0,000, 441,000 (wgt'ed) examples reached here.  /* #neg=441 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06419184008202572;  // std dev = 1,90e-07, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.723 seconds
Total inference time: 1.402 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 15:45:15
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.402, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 3.723, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.14185106490048724;  // std dev = 2,76e-07, 473,000 (wgt'ed) examples reached here.  /* #neg=473 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.22 seconds
Total inference time: 0.841 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 15:45:17
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.841, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 1.22, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.5547301316807046;  // std dev = 9,946, 468,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.14185106490048724;  // std dev = 2,70e-07, 458,000 (wgt'ed) examples reached here.  /* #neg=458 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7664585942179135;  // std dev = 1,553, 270,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=267 */
%   | | else return 0.052240349330390665;  // std dev = 6,514, 220,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.12544463852839227;  // std dev = 0,000, 426,000 (wgt'ed) examples reached here.  /* #neg=426 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3316018212727359;  // std dev = 0,420, 510,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360629;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.11231637819360621;  // std dev = 0,000, 401,000 (wgt'ed) examples reached here.  /* #neg=401 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.527430789665199;  // std dev = 1,442, 270,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=267 */
%   | | else return -0.005908948729262221;  // std dev = 6,443, 209,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.10159632948783552;  // std dev = 3,17e-07, 470,000 (wgt'ed) examples reached here.  /* #neg=470 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21762576383919754;  // std dev = 7,968, 483,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926108;  // std dev = 1,29e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.09269127618926114;  // std dev = 8,94e-08, 440,000 (wgt'ed) examples reached here.  /* #neg=440 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15832588605632913;  // std dev = 0,366, 491,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839685;  // std dev = 3,25e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.08518475138839678;  // std dev = 1,35e-07, 418,000 (wgt'ed) examples reached here.  /* #neg=418 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.12255354830439326;  // std dev = 0,366, 492,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=326 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.07877675473109168;  // std dev = 9,41e-09, 440,000 (wgt'ed) examples reached here.  /* #neg=440 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0981462952231229;  // std dev = 8,076, 490,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333707;  // std dev = 2,11e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.07324622576333759;  // std dev = 0,000, 450,000 (wgt'ed) examples reached here.  /* #neg=450 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09602183328238356;  // std dev = 7,800, 471,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=326 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420274;  // std dev = 1,58e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.06842697784420337;  // std dev = 0,000, 411,000 (wgt'ed) examples reached here.  /* #neg=411 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.317917582285875;  // std dev = 0,286, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2548529890734698;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | | else return -0.06419184008202612;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1686399648535879;  // std dev = 6,482, 205,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=59 */
%   | | | else return -0.06419184008202564;  // std dev = 1,87e-07, 386,000 (wgt'ed) examples reached here.  /* #neg=386 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.193566
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 2.342 seconds
Total inference time: 1.595 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.978388
   AUC PR    = 0.863056
   CLL	      = -0.183731
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total scoring time: 2.826 seconds
Parameter learned model CLL: -0.183731


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 13, 0], 'true,true,false': [9.946, 142, 326], 'false,true,true': [4.94e-08, 47, 0], 'false,true,false': [2.7e-07, 458, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.553, 3, 267], 'true,true,false': [6.514, 161, 59], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 38, 0], 'false,true,false': [0.0, 426, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.42, 184, 326], 'false,true,true': [3.33e-08, 55, 0], 'false,true,false': [0.0, 401, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.442, 3, 267], 'true,true,false': [6.443, 150, 59], 'false,true,true': [0.0, 40, 0], 'false,true,false': [3.17e-07, 470, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.29e-08, 47, 0], 'false,true,false': [8.94e-08, 440, 0], 'true': [7.968, 157, 326]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [3.25e-08, 51, 0], 'false,true,false': [1.35e-07, 418, 0], 'true': [0.366, 165, 326]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.366, 166, 326], 'false,true,true,true': [0.0, 6, 0], 'false,true,true,false': [0.0, 51, 0], 'false,true,false': [9.41e-09, 440, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 3, 0], 'false,true,true,false': [2.11e-08, 51, 0], 'false,true,false': [0.0, 450, 0], 'true': [8.076, 164, 326]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [1.58e-08, 47, 0], 'false,true,false': [0.0, 411, 0], 'true': [7.8, 145, 326]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 267], 'true,false,false,false': [1.87e-07, 386, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.286, 13, 0], 'true,true,false,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 45, 0], 'true,true,false,false': [0.0, 50, 0], 'true,false,false,true': [6.482, 146, 59]}]]
[{'': [0.2184032745363334, -4.924553614178912e-17], 'true,true': [-1.2810265668751807e-17, 0.21135583315070772], 'false': [-4.924553614178912e-17, nan], 'false,true': [5.196788625904988e-17, 1.5901884370176915e-16], 'true': [0.2184032745363334, nan]}, {'': [0.217723921487023, -1.3445771385652217e-16], 'false': [-1.3445771385652217e-16, nan], 'true': [0.217723921487023, nan], 'true,true': [0.008938105354867313, 0.1928813056731931], 'false,true,true': [0.0, -2.0451476769410777e-17], 'false,true': [-2.840105411831796e-17, -1.292654038061215e-16]}, {'': [0.17600754566876442, -9.73879846162418e-18], 'false,true': [2.0185873175002847e-17, -1.993417899576341e-17], 'false': [-9.73879846162418e-18, nan], 'true': [0.17600754566876442, nan]}, {'': [0.16096919606303747, 2.5600436803121254e-16], 'true,true': [0.007706313914758154, 0.19862642666190045], 'false': [2.5600436803121254e-16, nan], 'false,true': [-5.551115123125783e-18, 2.1354076899173222e-16], 'true': [0.16096919606303747, nan]}, {'': [0.13146357364118247, -2.0061524880290305e-17], 'false,true': [3.543264972207946e-18, 1.816728585750256e-17], 'false': [-2.0061524880290305e-17, nan]}, {'': [0.13422964739849416, 4.4503609515891136e-17], 'false,true': [2.0680624968507818e-17, 4.355898948290088e-17], 'false': [4.4503609515891136e-17, nan]}, {'': [0.1340166671131875, 2.4125570756442034e-17], 'false,true': [4.86939923081209e-18, 8.881784197001253e-17], 'false': [2.4125570756442034e-17, nan], 'false,true,true': [-1.1564823173178713e-18, -2.1769078914218755e-18], 'true': [0.1340166671131875, nan]}, {'': [0.1331183781065346, 0.0], 'false,true': [9.25185853854297e-18, -5.033011044967376e-17], 'false': [0.0, nan], 'false,true,true': [1.1564823173178713e-18, 8.707631565687502e-18]}, {'': [0.12918165940387646, -1.2330459622734928e-16], 'false,true': [4.996003610813204e-18, -1.1993650193030888e-16], 'false': [-1.2330459622734928e-16, nan], 'false,true,true': [-5.782411586589357e-19, 5.3148974583119196e-18]}, {'': [0.07056593930376481, nan], 'true,false': [0.01256371301955439, 0.07357054457990084], 'true,false,true': [-6.653021870412923e-17, -5.551115123125783e-18], 'true': [0.011031707812399205, 0.0741194681356162], 'true,true,false': [-5.782411586589357e-19, -3.3306690738754695e-18], 'true,true': [0.006305111763449014, -3.96508223080413e-18], 'true,false,false': [0.20497323022010738, 9.088872429573821e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.141851064900488;  // std dev = 0,000, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.1418510649004874;  // std dev = 2,73e-07, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.1254446385283923;  // std dev = 0,000, 448,000 (wgt'ed) examples reached here.  /* #neg=448 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360617;  // std dev = 1,02e-07, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | | else return -0.11231637819360633;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.11231637819360633;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.11231637819360607;  // std dev = 0,000, 433,000 (wgt'ed) examples reached here.  /* #neg=433 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783648;  // std dev = 0,000, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783648;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | | else return -0.10159632948783663;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926098;  // std dev = 1,05e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return -0.09269127618926092;  // std dev = 1,05e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926104;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.09269127618926043;  // std dev = 2,02e-07, 341,000 (wgt'ed) examples reached here.  /* #neg=341 */
%   | | | else return -0.092691276189261;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09269127618926089;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948917;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.2551722425694885;  // std dev = 1,24e-08, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 9,31e-10, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.08518475138839678;  // std dev = 4,37e-09, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839679;  // std dev = 2,28e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( female(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 5,87e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | | else return -0.08518475138839682;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 3,49e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.08518475138839678;  // std dev = 7,74e-08, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253504;  // std dev = 1,67e-08, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.20975771563253492;  // std dev = 1,97e-08, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109147;  // std dev = 8,02e-08, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109175;  // std dev = 1,61e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109144;  // std dev = 2,98e-08, 325,000 (wgt'ed) examples reached here.  /* #neg=325 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07877675473109175;  // std dev = 1,61e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527741;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.17709649774527775;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.07324622576333736;  // std dev = 0,000, 443,000 (wgt'ed) examples reached here.  /* #neg=443 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(A) )
%   | | then return -0.0684269778442027;  // std dev = 2,08e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.06842697784420267;  // std dev = 2,58e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.06842697784420343;  // std dev = 0,000, 434,000 (wgt'ed) examples reached here.  /* #neg=434 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 9,31e-10, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.11343922273451636;  // std dev = 0,622, 106,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=95 */
%   | | | else return 0.10885488913364084;  // std dev = 0,926, 197,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=172 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.09172460438880291;  // std dev = 0,703, 75,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=59 */
%   | | | else return -0.06419184008202536;  // std dev = 2,46e-07, 517,000 (wgt'ed) examples reached here.  /* #neg=517 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06384
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.816 seconds
Total inference time: 1.567 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065334
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.419 seconds
Refined model CLL: -0.065334


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06384
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.403 seconds
Total inference time: 1.567 seconds
AUC ROC: 1.0
Total revision time: 13.403
Best scored revision CLL: -0.065334


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 15:45:34
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.595, 'CLL': -0.193566, 'Recall': 1.0, 'F1': 0.973913, 'Learning time': 2.342}, 'Inference time': 1.567, 'CLL': -0.06384, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.403}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.14185106490048827;  // std dev = 0,000, 587,000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839233;  // std dev = 0,000, 611,000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360632;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1123163781936059;  // std dev = 0,000, 579,000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783628;  // std dev = 2,47e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.10159632948783542;  // std dev = 3,79e-07, 630,000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.09269127618926176;  // std dev = 0,000, 602,000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839678;  // std dev = 1,43e-07, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,46e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0787767547310917;  // std dev = 2,98e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07877675473109241;  // std dev = 0,000, 593,000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452765;  // std dev = 2,76e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333693;  // std dev = 1,48e-07, 594,000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06842697784420361;  // std dev = 0,000, 592,000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202544;  // std dev = 2,48e-07, 596,000 (wgt'ed) examples reached here.  /* #neg=596 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.364 seconds
Total inference time: 1.192 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 15:45:40
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.192, 'CLL': -0.063421, 'Recall': 1.0, 'Learning time': 4.364, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048854;  // std dev = 0,000, 623,000 (wgt'ed) examples reached here.  /* #neg=623 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.428 seconds
Total inference time: 0.859 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 15:45:43
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.859, 'CLL': -0.152968, 'Recall': 0.0, 'Learning time': 1.428, 'F1': nan}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.593781119007559;  // std dev = 4,113, 87,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7524162807358852;  // std dev = 0,886, 52,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | else return 0.049924808319619596;  // std dev = 3,038, 49,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.40780234026912066;  // std dev = 0,386, 88,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360625;  // std dev = 5,27e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.49562368753363917;  // std dev = 0,817, 52,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | else return -0.035851435716009815;  // std dev = 3,038, 47,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20520376801854232;  // std dev = 3,600, 94,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0949117904236555;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17852756496709987;  // std dev = 0,360, 91,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08569715900533906;  // std dev = 0,010, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839679;  // std dev = 2,79e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.12069471713680234;  // std dev = 0,363, 95,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.08815505375630206;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0787538165309688;  // std dev = 6,34e-05, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.054059054751365763;  // std dev = 3,849, 102,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08132135165670609;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07306248138931856;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07324766437740099;  // std dev = 4,13e-07, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09537501786272266;  // std dev = 3,479, 92,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=64 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06826611887540505;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0684282021219579;  // std dev = 4,39e-07, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.4435014876854927;  // std dev = 0,209, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07544915036157054;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06404989512592968;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2490877512018058;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return -0.06419168011897762;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.061175442937392036;  // std dev = 2,778, 32,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return -0.06419305805585657;  // std dev = 1,67e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.19915
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.367 seconds
Total inference time: 1.681 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.977264
   AUC PR    = 0.848319
   CLL	      = -0.189825
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.796875
   F1        = 0.886957


Total scoring time: 1.388 seconds
Parameter learned model CLL: -0.189825


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 7, 0], 'true,true,false': [4.113, 23, 64], 'false,true,true': [0.0, 14, 0], 'false,true,false': [6.66e-08, 65, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.886, 1, 51], 'true,true,false': [3.038, 36, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [5.27e-09, 11, 0], 'false,true,false': [0.0, 91, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.386, 24, 64], 'false,true,true': [0.0, 2, 0], 'false,true,false': [5.27e-08, 67, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.817, 1, 51], 'true,true,false': [3.038, 34, 13], 'false,true,true': [0.0, 12, 0], 'false,true,false': [0.0, 106, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.01, 5, 0], 'false,true,false': [0.0, 80, 0], 'true': [3.6, 30, 64]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.01, 15, 0], 'false,true,false': [2.79e-08, 79, 0], 'true': [0.36, 27, 64]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.363, 31, 64], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false': [6.34e-05, 95, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 14, 0], 'false,true,false': [4.13e-07, 92, 0], 'true': [3.849, 38, 64]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 5, 0], 'false,true,false': [4.39e-07, 90, 0], 'true': [3.479, 28, 64]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 51], 'true,false,false,false': [1.67e-08, 90, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.209, 2, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 6, 0], 'true,true,false,false': [0.0, 3, 0], 'true,false,false,true': [2.778, 19, 13]}]]
[{'': [0.21729289271163355, 7.307797124114954e-17], 'true,true': [-7.93016446160826e-18, 0.19447747390672399], 'false': [7.307797124114954e-17, nan], 'false,true': [-1.1895246692412391e-17, 6.832141690000964e-17], 'true': [0.21729289271163355, nan]}, {'': [0.22240434397000566, -4.353815782843751e-18], 'false': [-4.353815782843751e-18, nan], 'true': [0.22240434397000566, nan], 'true,true': [0.015110584187675764, 0.1883133012198771], 'false,true,true': [nan, 2.523234146875356e-18], 'false,true': [2.523234146875356e-18, -1.4640303621430636e-17]}, {'': [0.14919303874376727, 4.344350965924526e-17], 'false,true': [0.0, 4.142623226213271e-17], 'false': [4.344350965924526e-17, nan], 'true': [0.14919303874376727, nan]}, {'': [0.17042098981221898, -1.881733940042638e-17], 'true,true': [0.012851744423737505, 0.19638704264873003], 'false': [-1.881733940042638e-17, nan], 'false,true': [-8.0953762212251e-18, 0.0], 'true': [0.17042098981221898, nan]}, {'': [0.13784782617162175, 1.4331398306990111e-06], 'false,true': [1.9722733860595697e-05, -5.551115123125783e-18], 'false': [1.4331398306990111e-06, nan]}, {'': [0.12984526481866163, 1.0843662676402265e-06], 'false,true': [6.574698500105836e-06, 9.837419205539362e-18], 'false': [1.0843662676402265e-06, nan]}, {'': [0.1321248298733961, 8.450561268279306e-07], 'false,true': [8.686665936418696e-06, 4.0179569461036645e-09], 'false': [8.450561268279306e-07, nan], 'false,true,true': [0.0, 0.0], 'true': [0.1321248298733961, nan]}, {'': [0.1452106158342137, 1.195812366634998e-06], 'false,true': [7.460352603978933e-06, 1.7044698985557716e-13], 'false': [1.195812366634998e-06, nan], 'false,true,true': [0.0, -2.9738116731030977e-18]}, {'': [0.1315626559046806, 1.3100925887991814e-09], 'false,true': [-6.938893903907229e-19, 1.9241460276949358e-13], 'false': [1.3100925887991814e-09, nan], 'false,true,true': [nan, -6.938893903907229e-19]}, {'': [0.06372807910986815, nan], 'true,false': [0.009243479421093782, 0.06327020460110787], 'true,false,true': [-1.1319921035393752e-16, -5.782411586589357e-19], 'true': [0.038779784084556776, 0.06302246629314856], 'true,true,false': [0.0, -5.782411586589357e-19], 'true,true': [0.021738023782427174, 2.436431623636503e-05], 'true,false,false': [0.24121093750000014, 3.0839528461809902e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.14185106490048766;  // std dev = 7,74e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( female(A) )
%   | | then return 0.7194734122109546;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.7194734122109546;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.5553664367462844;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( actor(A) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.2018201992774415;  // std dev = 0,289, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.12075680274367888;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601498;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.11933366576743261;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.25517224256948934;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.14621545839441744;  // std dev = 0,228, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839682;  // std dev = 9,13e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,29e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.09253240820738927;  // std dev = 0,083, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527703;  // std dev = 5,27e-09, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.17709649774527703;  // std dev = 5,27e-09, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( director(A), actor(B) )
%   | | then return -0.0633629638217352;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0762209098640501;  // std dev = 0,055, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333703;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06823760068043831;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.13048443016362554;  // std dev = 0,247, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420271;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.06842697784420268;  // std dev = 2,08e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06538722700396345;  // std dev = 0,013, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1340070300080108;  // std dev = 4,83e-08, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), female(A) )
%   | | | then return 0.13400703000801095;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.06403628763470322;  // std dev = 0,270, 107,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063257
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.496 seconds
Total inference time: 1.567 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064983
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.643 seconds
Refined model CLL: -0.064983


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063257
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.893999999999999 seconds
Total inference time: 1.567 seconds
AUC ROC: 1.0
Total revision time: 7.893999999999999
Best scored revision CLL: -0.064983


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 15:45:55
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.567, 'CLL': -0.063257, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.893999999999999, 'parameter_0.2': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.681, 'CLL': -0.19915, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.367}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048766;  // std dev = 8,43e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839147;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360621;  // std dev = 8,82e-08, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783628;  // std dev = 2,98e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.09269127618926098;  // std dev = 4,21e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839683;  // std dev = 5,58e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 6,05e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( actor(A) )
%   | | then return 0.20975771563253567;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333718;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06842697784420267;  // std dev = 4,34e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06419184008202618;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06419184008202626;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.154 seconds
Total inference time: 1.279 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 15:45:58
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.279, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 2.154, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.805 seconds
Total inference time: 0.899 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 15:46:00
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.899, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 0.805, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.526542717482929;  // std dev = 6,540, 193,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.14185106490048816;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7648471188061815;  // std dev = 1,271, 110,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=108 */
%   | | else return 0.005517208007067897;  // std dev = 4,024, 97,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.12544463852839127;  // std dev = 4,56e-09, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.33367538555252235;  // std dev = 0,420, 203,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.11231637819360632;  // std dev = 8,30e-08, 158,000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5358751965765428;  // std dev = 0,841, 109,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=108 */
%   | | else return 0.007808766163727765;  // std dev = 3,838, 76,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10159632948783648;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22913282832788043;  // std dev = 4,874, 188,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.09269127618926061;  // std dev = 8,69e-08, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22923805265035307;  // std dev = 0,329, 171,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.08518475138839678;  // std dev = 7,74e-08, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.07989892401552444;  // std dev = 0,364, 209,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07877675473109148;  // std dev = 6,11e-09, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08208095850839736;  // std dev = 5,099, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.0732462257633367;  // std dev = 8,12e-09, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05384032450993404;  // std dev = 5,237, 202,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=129 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.06842697784420262;  // std dev = 5,74e-09, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.36128540238654155;  // std dev = 0,375, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06419184008202622;  // std dev = 3,73e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.26209046479357306;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.19020730128067823;  // std dev = 3,976, 85,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=21 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.173931
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.846 seconds
Total inference time: 1.612 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.981519
   AUC PR    = 0.879055
   CLL	      = -0.170208
   Precision = 0.84375 at threshold = 0.5
   Recall    = 0.837209
   F1        = 0.840467


Total scoring time: 1.876 seconds
Parameter learned model CLL: -0.170208


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 4, 0], 'true,true,false': [6.54, 64, 129], 'false,true,true': [1.05e-08, 21, 0], 'false,true,false': [0.0, 161, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.271, 2, 108], 'true,true,false': [4.024, 76, 21], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [7.45e-09, 15, 0], 'false,true,false': [4.56e-09, 147, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.42, 74, 129], 'false,true,true': [1.49e-08, 17, 0], 'false,true,false': [8.3e-08, 158, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.841, 1, 108], 'true,true,false': [3.838, 55, 21], 'false,true,true': [0.0, 13, 0], 'false,true,false': [0.0, 162, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 16, 0], 'false,true,false': [8.69e-08, 183, 0], 'true': [4.874, 59, 129]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.97e-08, 29, 0], 'false,true,false': [7.74e-08, 184, 0], 'true': [0.329, 42, 129]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.364, 80, 129], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 18, 0], 'false,true,false': [6.11e-09, 178, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 21, 0], 'false,true,false': [8.12e-09, 181, 0], 'true': [5.099, 70, 129]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 3, 0], 'false,true,true,false': [0.0, 20, 0], 'false,true,false': [5.74e-09, 192, 0], 'true': [5.237, 73, 129]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 108], 'true,false,false,false': [0.0, 155, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.375, 8, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 15, 0], 'true,true,false,false': [3.73e-09, 23, 0], 'true,false,false,true': [3.976, 64, 21]}]]
[{'': [0.22603004457729303, -2.049642507000289e-16], 'true,true': [0.0, 0.22164353405460976], 'false': [-2.049642507000289e-16, nan], 'false,true': [5.28677630773884e-18, -1.5170749404815803e-16], 'true': [0.22603004457729303, nan]}, {'': [0.2296111608739745, 0.0], 'false': [0.0, nan], 'true': [0.2296111608739745, nan], 'true,true': [0.014678137281072427, 0.16695345535415557], 'false,true,true': [0.0, 3.7007434154171884e-18], 'false,true': [3.469446951953614e-18, 2.114710523095536e-17]}, {'': [0.1764704593423545, 1.0150610510858574e-17], 'false,true': [1.3061447348531253e-17, 4.356571362453146e-17], 'false': [1.0150610510858574e-17, nan], 'true': [0.1764704593423545, nan]}, {'': [0.15094735634528617, -7.866723145915394e-17], 'true,true': [0.006482246647692167, 0.1938428839143279], 'false': [-7.866723145915394e-17, nan], 'false,true': [-2.135044278125301e-18, -6.853228547068867e-17], 'true': [0.15094735634528617, nan]}, {'': [0.1263767676448192, 4.2400477322367786e-17], 'false,true': [1.734723475976807e-18, 4.125418889317522e-17], 'false': [4.2400477322367786e-17, nan]}, {'': [0.10792056955166837, 3.3358813885450714e-17], 'false,true': [1.3399243400648442e-17, 3.2582632244433945e-17], 'false': [3.3358813885450714e-17, nan]}, {'': [0.13227548701584402, 2.9157372363893e-17], 'false,true': [0.0, 3.742324802107269e-17], 'false': [2.9157372363893e-17, nan], 'false,true,true': [0.0, 0.0], 'true': [0.13227548701584402, nan]}, {'': [0.1306612140029572, 7.584691950409486e-17], 'false,true': [-1.32169407693471e-18, 6.501858597252297e-17], 'false': [7.584691950409486e-17, nan], 'false,true,true': [nan, -1.32169407693471e-18]}, {'': [0.13576255711611543, 3.195499345256123e-07], 'false,true': [2.634232571573262e-06, 3.353798720221827e-17], 'false': [3.195499345256123e-07, nan], 'false,true,true': [1.1564823173178713e-18, -2.7755575615628915e-18]}, {'': [0.07138300807933193, nan], 'true,false': [0.011399658325691524, 0.06951460356400824], 'true,false,true': [-2.631639762074445e-16, -1.8503717077085942e-18], 'true': [0.0204261764093938, 0.0743856743175948], 'true,true,false': [0.0, 6.033820786006285e-19], 'true,true': [0.017539168675168776, 1.3201184412353629e-06], 'true,false,false': [0.18602076124567488, -9.311547948469056e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.1418510649004882;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( actor(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.12544463852839105;  // std dev = 8,16e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | | else return -0.12544463852839136;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(B) )
%   | | | then return -0.12544463852839133;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839133;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 3,41e-08, 61,000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else return 0.5553664367462837;  // std dev = 3,49e-08, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360633;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14103664389351314;  // std dev = 0,128, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360621;  // std dev = 1,00e-07, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.11231637819360633;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.11764632028683314;  // std dev = 0,042, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783652;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601498;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else return 0.3207118471601499;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.0913502736513345;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,28e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( actor(A) )
%   | | then return -0.0851847513883968;  // std dev = 1,61e-09, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( female(B) )
%   | | | then return -0.08404547663825274;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10711585739182282;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,29e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.0851847513883968;  // std dev = 1,29e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,05e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253565;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else return 0.2097577156325357;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0787767547310917;  // std dev = 2,36e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.07697802465999885;  // std dev = 0,003, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.24742695066190357;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109172;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109169;  // std dev = 3,61e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.07877675473109173;  // std dev = 1,29e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.09390948542660767;  // std dev = 0,121, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333702;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15274385809367066;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( actor(A) )
%   | | then return -0.0684269778442027;  // std dev = 1,86e-09, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( female(B) )
%   | | | then return -0.06638818314161404;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08037825173804687;  // std dev = 0,116, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06842697784420265;  // std dev = 2,69e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420264;  // std dev = 2,79e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.06842697784420268;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(B) )
%   | | | then return -0.062389955117528526;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06025685224316222;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06419184008202619;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F) )
%   | then if ( movie(D, B) )
%   | | then return 0.10174209766777226;  // std dev = 0,073, 129,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=108 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06417682437398879;  // std dev = 0,003, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
%   | | | else return 0.08577012765602797;  // std dev = 0,480, 27,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063953
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.46 seconds
Total inference time: 2.347 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06586
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.993 seconds
Refined model CLL: -0.06586


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063953
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.175 seconds
Total inference time: 2.347 seconds
AUC ROC: 1.0
Total revision time: 10.175
Best scored revision CLL: -0.06586


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 15:46:15
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.935484, 0.5], 'Inference time': 1.612, 'CLL': -0.173931, 'Recall': 1.0, 'F1': 0.966667, 'Learning time': 1.846}, 'Inference time': 2.347, 'CLL': -0.063953, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.175}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.1418510649004884;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.12544463852839183;  // std dev = 0,000, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.11231637819360671;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783649;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.09269127618926055;  // std dev = 5,77e-08, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08518475138839678;  // std dev = 7,60e-08, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07877675473109146;  // std dev = 7,30e-08, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07324622576333673;  // std dev = 1,14e-07, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06842697784420261;  // std dev = 5,96e-08, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06419184008202626;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.771 seconds
Total inference time: 1.243 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 15:46:19
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.243, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 2.771, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.14185106490048835;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.989 seconds
Total inference time: 0.855 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 15:46:21
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.855, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 0.989, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.5436613025906747;  // std dev = 7,811, 283,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.14185106490048802;  // std dev = 0,000, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7674395567905096;  // std dev = 1,270, 165,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=163 */
%   | | else return 0.03668203143899322;  // std dev = 4,782, 123,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=31 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.12544463852839194;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.37225664009876436;  // std dev = 0,404, 283,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360626;  // std dev = 2,11e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.11231637819360685;  // std dev = 0,000, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5240136301855925;  // std dev = 0,836, 164,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=163 */
%   | | else return -0.0385849478968145;  // std dev = 4,780, 120,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.10159632948783662;  // std dev = 0,000, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1974325351680912;  // std dev = 6,220, 294,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926094;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.09269127618926043;  // std dev = 1,38e-07, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15112319987428807;  // std dev = 0,361, 296,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839678;  // std dev = 9,13e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.08518475138839678;  // std dev = 8,82e-08, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.11258322215161501;  // std dev = 0,359, 301,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=194 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.07877675473109143;  // std dev = 3,09e-09, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08740894421075102;  // std dev = 6,278, 299,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.0732462257633367;  // std dev = 8,23e-09, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0591049490712025;  // std dev = 6,378, 306,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=194 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420265;  // std dev = 1,34e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.06842697784420287;  // std dev = 0,000, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3143005513584938;  // std dev = 0,286, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2659978014980873;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.16129750820611352;  // std dev = 4,759, 115,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | | else return -0.06419184008202625;  // std dev = 2,36e-08, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.174264
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.178 seconds
Total inference time: 1.62 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.981439
   AUC PR    = 0.880634
   CLL	      = -0.172421
   Precision = 0.835897 at threshold = 0.5
   Recall    = 0.840206
   F1        = 0.838046


Total scoring time: 1.989 seconds
Parameter learned model CLL: -0.172421


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 11, 0], 'true,true,false': [7.811, 89, 194], 'false,true,true': [2.79e-08, 31, 0], 'false,true,false': [0.0, 275, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.27, 2, 163], 'true,true,false': [4.782, 92, 31], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 32, 0], 'false,true,false': [0.0, 270, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.404, 89, 194], 'false,true,true': [2.11e-08, 36, 0], 'false,true,false': [0.0, 247, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.836, 1, 163], 'true,true,false': [4.78, 89, 31], 'false,true,true': [0.0, 35, 0], 'false,true,false': [0.0, 284, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 30, 0], 'false,true,false': [1.38e-07, 280, 0], 'true': [6.22, 100, 194]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [9.13e-09, 27, 0], 'false,true,false': [8.82e-08, 240, 0], 'true': [0.361, 102, 194]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.359, 107, 194], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 26, 0], 'false,true,false': [3.09e-09, 276, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 31, 0], 'false,true,false': [8.23e-09, 234, 0], 'true': [6.278, 105, 194]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [1.34e-08, 25, 0], 'false,true,false': [0.0, 276, 0], 'true': [6.378, 112, 194]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 163], 'true,false,false,false': [2.36e-08, 240, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.286, 8, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 29, 0], 'true,true,false,false': [0.0, 32, 0], 'true,false,false,true': [4.759, 84, 31]}]]
[{'': [0.22444351890416514, 4.9343245538895844e-17], 'true,true': [-1.0092936587501423e-17, 0.21558516150782756], 'false': [4.9343245538895844e-17, nan], 'false,true': [2.5069552168955147e-17, -4.198661620400592e-17], 'true': [0.22444351890416514, nan]}, {'': [0.21567086929468504, -8.707631565687502e-17], 'false': [-8.707631565687502e-17, nan], 'true': [0.21567086929468504, nan], 'true,true': [0.009782112714725427, 0.18592184490638822], 'false,true,true': [0.0, -6.938893903907228e-18], 'false,true': [9.25185853854297e-18, -7.237009345704725e-17]}, {'': [0.1635078045492753, -1.1769148670938055e-16], 'false,true': [1.2335811384723961e-17, -9.169453320790767e-17], 'false': [-1.1769148670938055e-16, nan], 'true': [0.1635078045492753, nan]}, {'': [0.16013442649205484, -3.897961716552274e-17], 'true,true': [0.004262901432104553, 0.19038132910955916], 'false': [-3.897961716552274e-17, nan], 'false,true': [-7.93016446160826e-18, -5.785669283257858e-17], 'true': [0.16013442649205484, nan]}, {'': [0.13160901198318345, 9.454802532291655e-17], 'false,true': [0.0, 6.819941436983105e-17], 'false': [9.454802532291655e-17, nan]}, {'': [0.13008519902165067, 3.409673708586623e-17], 'false,true': [3.0839528461809902e-18, 3.23815048849004e-17], 'false': [3.409673708586623e-17, nan]}, {'': [0.12863605846096576, 3.640075490574284e-18], 'false,true': [-9.570888143320315e-19, 9.654113257610057e-18], 'false': [3.640075490574284e-18, nan], 'false,true,true': [0.0, -2.135044278125301e-18], 'true': [0.12863605846096576, nan]}, {'': [0.13181303700468816, 4.622489916654927e-17], 'false,true': [-7.137148015447434e-18, 6.737250833195394e-17], 'false': [4.622489916654927e-17, nan], 'false,true,true': [0.0, -7.162729191130042e-18]}, {'': [0.13295277806388198, -5.989361053898871e-17], 'false,true': [7.93016446160826e-18, -3.37893964016352e-17], 'false': [-5.989361053898871e-17, nan], 'false,true,true': [-5.782411586589357e-19, 7.216449660063518e-18]}, {'': [0.06668119718425314, nan], 'true,false': [0.013980092165688704, 0.06584954794832042], 'true,false,true': [-2.6154947328592647e-16, -4.785444071660157e-19], 'true': [0.011590351521381855, 0.06978599764211035], 'true,true,false': [0.0, -1.734723475976807e-18], 'true,true': [0.01021009564161747, -1.6326809185664067e-18], 'true,false,false': [0.19689981096408343, 2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.14185106490048763;  // std dev = 8,16e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.14185106490048793;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.1254446385283919;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.5553664367462835;  // std dev = 4,01e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( genre(B, D) )
%   | then return -0.1123163781936063;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.11231637819360682;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2,24e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.4175135841583098;  // std dev = 2,41e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.10159632948783631;  // std dev = 1,67e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10159632948783659;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601504;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.3207118471601504;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926094;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926083;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( female(A) )
%   | | | then return -0.0926912761892609;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return -0.09269127618926085;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | else if ( female(A) )
%   | | then return -0.0851847513883968;  // std dev = 2,79e-09, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.08518475138839679;  // std dev = 1,86e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839678;  // std dev = 1,32e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.08518475138839678;  // std dev = 3,65e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253498;  // std dev = 1,86e-08, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109144;  // std dev = 7,45e-08, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109168;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109168;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333698;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07324622576333699;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0684269778442027;  // std dev = 1,18e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.0684269778442027;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.06842697784420287;  // std dev = 0,000, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202615;  // std dev = 1,32e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return -0.06419184008202612;  // std dev = 6,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202598;  // std dev = 1,08e-07, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | | | else return 0.07869571742474492;  // std dev = 0,583, 43,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.492 seconds
Total inference time: 1.641 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06453
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.109 seconds
Refined model CLL: -0.06453


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.767999999999999 seconds
Total inference time: 1.641 seconds
AUC ROC: 1.0
Total revision time: 10.767999999999999
Best scored revision CLL: -0.06453


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 15:46:36
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.641, 'parameter_0.6': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.935484, 0.5], 'Inference time': 1.62, 'CLL': -0.174264, 'Recall': 1.0, 'F1': 0.966667, 'Learning time': 2.178}, 'CLL': -0.063422, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.767999999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.1418510649004879;  // std dev = 0,000, 345,000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839208;  // std dev = 0,000, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1123163781936068;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.10159632948783655;  // std dev = 0,000, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.09269127618926049;  // std dev = 1,55e-07, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07877675473109146;  // std dev = 2,98e-08, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07324622576333706;  // std dev = 8,02e-08, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.068426977844203;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06419184008202611;  // std dev = 7,60e-08, 328,000 (wgt'ed) examples reached here.  /* #neg=328 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.18 seconds
Total inference time: 1.582 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 15:46:41
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.582, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 3.18, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.14185106490048777;  // std dev = 1,43e-07, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.198 seconds
Total inference time: 0.897 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 15:46:43
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.897, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 1.198, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.5756004586452146;  // std dev = 8,555, 361,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.1418510649004875;  // std dev = 2,48e-07, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7686781494768631;  // std dev = 0,896, 216,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=215 */
%   | | else return 0.06317471407634488;  // std dev = 5,576, 154,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.12544463852839216;  // std dev = 0,000, 334,000 (wgt'ed) examples reached here.  /* #neg=334 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.35931211668382507;  // std dev = 0,407, 382,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.11231637819360649;  // std dev = 0,000, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5126457949856571;  // std dev = 1,430, 218,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=215 */
%   | | else return -0.04079595824491255;  // std dev = 5,655, 169,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.10159632948783663;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19794490276772853;  // std dev = 7,168, 393,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.09269127618926051;  // std dev = 1,95e-07, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1560055269891659;  // std dev = 0,361, 390,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 1,83e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.08518475138839678;  // std dev = 1,15e-07, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.11744521505828966;  // std dev = 0,364, 391,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.07877675473109143;  // std dev = 2,46e-09, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08965716679707185;  // std dev = 7,229, 393,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.07324622576333707;  // std dev = 4,47e-09, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06790699698866311;  // std dev = 7,238, 397,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=259 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.06842697784420305;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3386554910119549;  // std dev = 0,466, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.260148603968482;  // std dev = 4,11e-07, 215,000 (wgt'ed) examples reached here.  /* #pos=215 */
%   | | | else return -0.06419184008202611;  // std dev = 1,18e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1879417860973718;  // std dev = 5,711, 170,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=44 */
%   | | | else return -0.06419184008202584;  // std dev = 1,40e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.177824
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.466 seconds
Total inference time: 1.556 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.979653
   AUC PR    = 0.87178
   CLL	      = -0.178348
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.830116
   F1        = 0.907173


Total scoring time: 1.968 seconds
Parameter learned model CLL: -0.178348


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 12, 0], 'true,true,false': [8.555, 102, 259], 'false,true,true': [4.94e-08, 46, 0], 'false,true,false': [2.48e-07, 363, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.896, 1, 215], 'true,true,false': [5.576, 110, 44], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 23, 0], 'false,true,false': [0.0, 334, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.407, 123, 259], 'false,true,true': [0.0, 37, 0], 'false,true,false': [0.0, 351, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.43, 3, 215], 'true,true,false': [5.655, 125, 44], 'false,true,true': [0.0, 27, 0], 'false,true,false': [0.0, 305, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.18e-08, 23, 0], 'false,true,false': [1.95e-07, 357, 0], 'true': [7.168, 134, 259]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.83e-08, 37, 0], 'false,true,false': [1.15e-07, 342, 0], 'true': [0.361, 131, 259]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.364, 132, 259], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [0.0, 30, 0], 'false,true,false': [2.46e-09, 333, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 26, 0], 'false,true,false': [4.47e-09, 333, 0], 'true': [7.229, 134, 259]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 5, 0], 'false,true,true,false': [5.27e-09, 40, 0], 'false,true,false': [0.0, 311, 0], 'true': [7.238, 138, 259]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [4.11e-07, 0, 215], 'true,false,false,false': [1.4e-07, 324, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.466, 16, 0], 'true,true,false,true': [0.0, 6, 0], 'true,false,true,false': [1.18e-08, 33, 0], 'true,true,false,false': [0.0, 31, 0], 'true,false,false,true': [5.711, 126, 44]}]]
[{'': [0.2122203135219869, 2.2150170858047134e-16], 'true,true': [-1.1564823173178714e-17, 0.2027148349076549], 'false': [2.2150170858047134e-16, nan], 'false,true': [5.3097622916855314e-17, 1.6882730291820563e-16], 'true': [0.2122203135219869, nan]}, {'': [0.20713982789612506, -1.2022304576051418e-16], 'false': [-1.2022304576051418e-16, nan], 'true': [0.20713982789612506, nan], 'true,true': [0.003718397953627067, 0.20188851870619579], 'false,true,true': [0.0, -7.240584943207542e-18], 'false,true': [-7.93016446160826e-18, -1.1700554031977699e-16]}, {'': [0.16534815130003228, -2.2891196384023845e-17], 'false,true': [-1.800361661554308e-17, -3.036507417778206e-17], 'false': [-2.2891196384023845e-17, nan], 'true': [0.16534815130003228, nan]}, {'': [0.16324684466602704, -6.6880905097900996e-18], 'true,true': [0.009375786293975346, 0.18919157369746442], 'false': [-6.6880905097900996e-18, nan], 'false,true': [-1.439177994884462e-17, -5.0961056868039973e-17], 'true': [0.16324684466602704, nan]}, {'': [0.1307377947951083, 7.82999396314584e-17], 'false,true': [6.033820786006285e-18, 1.069794735213036e-16], 'false': [7.82999396314584e-17, nan]}, {'': [0.13006975213003005, 3.866739821913474e-17], 'false,true': [9.00180830777154e-18, 3.895519384649672e-17], 'false': [3.866739821913474e-17, nan]}, {'': [0.13233523977105613, 2.5205063261760312e-17], 'false,true': [-3.00060276925718e-18, 6.668006153904844e-18], 'false': [2.5205063261760312e-17, nan], 'false,true,true': [-2.9738116731030977e-18, -1.8503717077085942e-18], 'true': [0.13233523977105613, nan]}, {'': [0.13297990091418682, 1.2301640162051596e-17], 'false,true': [9.912705577010326e-19, 2.0670819077105016e-17], 'false': [1.2301640162051596e-17, nan], 'false,true,true': [0.0, -1.0675221390626506e-18]}, {'': [0.13197020532135384, -8.981579525057446e-17], 'false,true': [2.4671622769447924e-18, -5.783155305121394e-17], 'false': [-8.981579525057446e-17, nan], 'false,true,true': [6.938893903907229e-19, 6.938893903907229e-19]}, {'': [0.07142886058767989, nan], 'true,false': [0.012135320536463544, 0.06947216636590911], 'true,false,true': [7.849018592698781e-16, 4.20539024479226e-18], 'true': [0.01997461456106573, 0.07363431906613974], 'true,true,false': [-5.782411586589357e-19, -8.953411488912552e-19], 'true,true': [0.013576836389642091, -1.50030138462859e-18], 'true,false,false': [0.19183391003460173, 6.030841121420603e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.14185106490048782;  // std dev = 0,000, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.14185106490048754;  // std dev = 2,33e-07, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.12544463852839108;  // std dev = 7,74e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.12544463852839222;  // std dev = 0,000, 369,000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,21e-08, 126,000 (wgt'ed) examples reached here.  /* #pos=126 */
%   | | else return 0.5553664367462834;  // std dev = 4,21e-08, 133,000 (wgt'ed) examples reached here.  /* #pos=133 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360649;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.11231637819360647;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360649;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.11231637819360633;  // std dev = 3,33e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1015963294878364;  // std dev = 0,000, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( female(B) )
%   | | then return -0.1015963294878365;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else return -0.10159632948783655;  // std dev = 0,000, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 1,18e-08, 126,000 (wgt'ed) examples reached here.  /* #pos=126 */
%   | | else return 0.3207118471601496;  // std dev = 1,54e-08, 133,000 (wgt'ed) examples reached here.  /* #pos=133 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.09269127618926098;  // std dev = 4,17e-09, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.09269127618926078;  // std dev = 6,50e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948795;  // std dev = 2,01e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 2,46e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839679;  // std dev = 2,63e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( female(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 4,47e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | | else return -0.08518475138839678;  // std dev = 8,33e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 2,11e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return -0.08518475138839678;  // std dev = 4,21e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253537;  // std dev = 1,81e-08, 126,000 (wgt'ed) examples reached here.  /* #pos=126 */
%   | | else return 0.2097577156325353;  // std dev = 1,86e-08, 133,000 (wgt'ed) examples reached here.  /* #pos=133 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07877675473109177;  // std dev = 1,05e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109143;  // std dev = 9,31e-10, 317,000 (wgt'ed) examples reached here.  /* #neg=317 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527814;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #pos=126 */
%   | | else return 0.17709649774527814;  // std dev = 0,000, 133,000 (wgt'ed) examples reached here.  /* #pos=133 */
%   | else return -0.07324622576333704;  // std dev = 4,84e-09, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333698;  // std dev = 9,77e-08, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.0684269778442027;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.0684269778442032;  // std dev = 0,000, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.06419184008202619;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.09474121612224881;  // std dev = 0,813, 106,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=85 */
%   | | | else return 0.10311889440956375;  // std dev = 0,892, 154,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=130 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202553;  // std dev = 2,13e-07, 427,000 (wgt'ed) examples reached here.  /* #neg=427 */
%   | | | else return 0.09153584356014591;  // std dev = 0,609, 56,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063991
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.661 seconds
Total inference time: 1.722 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065322
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.389 seconds
Refined model CLL: -0.065322


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063991
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.483999999999998 seconds
Total inference time: 1.722 seconds
AUC ROC: 1.0
Total revision time: 11.483999999999998
Best scored revision CLL: -0.065322


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 15:46:59
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.722, 'parameter_0.8': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.556, 'CLL': -0.177824, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.466}, 'CLL': -0.063991, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.483999999999998}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.14185106490048724;  // std dev = 2,98e-07, 456,000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.12544463852839227;  // std dev = 0,000, 469,000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360633;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.11231637819360625;  // std dev = 0,000, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783628;  // std dev = 1,49e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.10159632948783591;  // std dev = 2,38e-07, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.09269127618926123;  // std dev = 4,21e-08, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.08518475138839678;  // std dev = 1,26e-07, 473,000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07877675473109201;  // std dev = 0,000, 506,000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.07324622576333718;  // std dev = 0,000, 479,000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.0684269778442027;  // std dev = 1,18e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06842697784420344;  // std dev = 0,000, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.0641918400820256;  // std dev = 2,14e-07, 502,000 (wgt'ed) examples reached here.  /* #neg=502 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.86 seconds
Total inference time: 1.306 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 15:47:04
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.306, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 3.86, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.14185106490048732;  // std dev = 2,56e-07, 473,000 (wgt'ed) examples reached here.  /* #neg=473 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.267 seconds
Total inference time: 0.836 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 15:47:06
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.836, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 1.267, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0.5445896130656097;  // std dev = 10,079, 472,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.14185106490048716;  // std dev = 2,95e-07, 450,000 (wgt'ed) examples reached here.  /* #neg=450 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7748377278049116;  // std dev = 0,902, 266,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=265 */
%   | | else return 0.06337007210511775;  // std dev = 6,469, 213,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.1254446385283923;  // std dev = 0,000, 431,000 (wgt'ed) examples reached here.  /* #neg=431 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.34325118578370506;  // std dev = 0,416, 497,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.11231637819360617;  // std dev = 0,000, 411,000 (wgt'ed) examples reached here.  /* #neg=411 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5156955146663239;  // std dev = 2,033, 271,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=265 */
%   | | else return -0.02619863914388987;  // std dev = 6,527, 222,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783627;  // std dev = 2,36e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.10159632948783603;  // std dev = 1,91e-07, 384,000 (wgt'ed) examples reached here.  /* #neg=384 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19925556320955842;  // std dev = 8,266, 497,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926108;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.09269127618926101;  // std dev = 1,28e-07, 418,000 (wgt'ed) examples reached here.  /* #neg=418 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15240969923672992;  // std dev = 0,369, 500,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839683;  // std dev = 3,16e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.08518475138839678;  // std dev = 1,32e-07, 435,000 (wgt'ed) examples reached here.  /* #neg=435 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.11241196499676455;  // std dev = 0,369, 507,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=324 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.07877675473109154;  // std dev = 4,93e-09, 422,000 (wgt'ed) examples reached here.  /* #neg=422 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09317236685434145;  // std dev = 8,254, 500,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07324622576333707;  // std dev = 1,49e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.07324622576333767;  // std dev = 0,000, 438,000 (wgt'ed) examples reached here.  /* #neg=438 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08491512076273904;  // std dev = 8,077, 489,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=324 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420271;  // std dev = 1,18e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.0684269778442034;  // std dev = 0,000, 419,000 (wgt'ed) examples reached here.  /* #neg=419 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.36628472768348;  // std dev = 0,622, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2649224706075298;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | | else return -0.06419184008202608;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.19311059948941722;  // std dev = 6,657, 237,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=59 */
%   | | | else return -0.06419184008202561;  // std dev = 1,93e-07, 395,000 (wgt'ed) examples reached here.  /* #neg=395 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.175496
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.661 seconds
Total inference time: 1.496 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.977686
   AUC PR    = 0.861626
   CLL	      = -0.178788
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total scoring time: 2.799 seconds
Parameter learned model CLL: -0.178788


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.36e-08, 27, 0], 'true,true,false': [10.079, 148, 324], 'false,true,true': [4.08e-08, 39, 0], 'false,true,false': [2.95e-07, 450, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.902, 1, 265], 'true,true,false': [6.469, 154, 59], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 50, 0], 'false,true,false': [0.0, 431, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.416, 173, 324], 'false,true,true': [0.0, 38, 0], 'false,true,false': [0.0, 411, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.033, 6, 265], 'true,true,false': [6.527, 163, 59], 'false,true,true': [2.36e-08, 49, 0], 'false,true,false': [1.91e-07, 384, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 43, 0], 'false,true,false': [1.28e-07, 418, 0], 'true': [8.266, 173, 324]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [3.16e-08, 54, 0], 'false,true,false': [1.32e-07, 435, 0], 'true': [0.369, 176, 324]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.369, 183, 324], 'false,true,true,true': [0.0, 9, 0], 'false,true,true,false': [0.0, 46, 0], 'false,true,false': [4.93e-09, 422, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [2.63e-09, 9, 0], 'false,true,true,false': [1.49e-08, 47, 0], 'false,true,false': [0.0, 438, 0], 'true': [8.254, 176, 324]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [1.18e-08, 49, 0], 'false,true,false': [0.0, 419, 0], 'true': [8.077, 165, 324]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 265], 'true,false,false,false': [1.93e-07, 395, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.622, 22, 0], 'true,true,false,true': [0.0, 7, 0], 'true,false,true,false': [1.05e-08, 34, 0], 'true,true,false,false': [0.0, 31, 0], 'true,false,false,true': [6.657, 178, 59]}]]
[{'': [0.2277099288757903, 1.8163157867078227e-17], 'true,true': [2.05596856412066e-17, 0.21523987359954314], 'false': [1.8163157867078227e-17, nan], 'false,true': [4.2700885562506023e-17, 1.934255225124717e-16], 'true': [0.2277099288757903, nan]}, {'': [0.21406457541888393, -1.3551588259342118e-16], 'false': [-1.3551588259342118e-16, nan], 'true': [0.21406457541888393, nan], 'true,true': [0.0030585220344570793, 0.19647733031526565], 'false,true,true': [0.0, -3.3306690738754695e-17], 'false,true': [-3.700743415417188e-17, -1.2982654394688606e-16]}, {'': [0.17309505890830143, -9.890628281738588e-18], 'false,true': [-8.764918615461762e-18, -1.7288144422386866e-17], 'false': [-9.890628281738588e-18, nan], 'true': [0.17309505890830143, nan]}, {'': [0.16748966638893314, 1.6820007024344172e-16], 'true,true': [0.015248711022258525, 0.1919156001046963], 'false': [1.6820007024344172e-16, nan], 'false,true': [1.1328806373726087e-17, 9.483155002006545e-17], 'true': [0.16748966638893314, nan]}, {'': [0.1374762423206185, 0.0], 'false,true': [-6.454785026890445e-18, 3.9309331972373965e-17], 'false': [0.0, nan]}, {'': [0.1362015590840209, 4.268342098763383e-17], 'false,true': [1.850371707708594e-17, 3.981489467621251e-17], 'false': [4.268342098763383e-17, nan]}, {'': [0.13651050758193964, -2.2344111187424535e-17], 'false,true': [2.0185873175002845e-18, 2.3151570181756818e-17], 'false': [-2.2344111187424535e-17, nan], 'false,true,true': [0.0, -2.413528314402514e-18], 'true': [0.13651050758193964, nan]}, {'': [0.13624545715956382, -7.191728094737856e-18], 'false,true': [-9.912705577010326e-19, -6.286194294681251e-17], 'false': [-7.191728094737856e-18, nan], 'false,true,true': [7.709882115452476e-19, 4.724353296277262e-18]}, {'': [0.13342007322027213, -1.232535730727928e-16], 'false,true': [3.6658307416868376e-18, -1.2559563572131842e-16], 'false': [-1.232535730727928e-16, nan], 'false,true,true': [0.0, 2.832201593431522e-18]}, {'': [0.07752274037533559, nan], 'true,false': [0.010916312209045985, 0.0740096213271399], 'true,false,true': [-8.043880027472832e-16, 3.2653618371328133e-18], 'true': [0.027635860240357222, 0.07895436356194967], 'true,true,false': [-4.956352788505163e-19, -8.953411488912552e-19], 'true,true': [0.01757245652663676, -1.460819769243627e-18], 'true,false,false': [0.18697146112624344, 9.443922437317787e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.14185106490048796;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.14185106490048724;  // std dev = 2,98e-07, 423,000 (wgt'ed) examples reached here.  /* #neg=423 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.12544463852839227;  // std dev = 0,000, 425,000 (wgt'ed) examples reached here.  /* #neg=425 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.11231637819360625;  // std dev = 4,94e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.11231637819360607;  // std dev = 0,000, 431,000 (wgt'ed) examples reached here.  /* #neg=431 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783644;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783653;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else return -0.10159632948783662;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926094;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.09269127618926055;  // std dev = 1,91e-07, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.255172242569489;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.2551722425694886;  // std dev = 1,12e-08, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 2,46e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.08518475138839679;  // std dev = 1,05e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( genre(A, D) )
%   | then return -0.0851847513883968;  // std dev = 2,63e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 1,21e-07, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.0851847513883968;  // std dev = 1,32e-09, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253504;  // std dev = 1,77e-08, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.20975771563253498;  // std dev = 1,94e-08, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.07877675473109165;  // std dev = 3,57e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 455,000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527764;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.17709649774527775;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.07324622576333725;  // std dev = 0,000, 418,000 (wgt'ed) examples reached here.  /* #neg=418 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420262;  // std dev = 1,58e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.06842697784420264;  // std dev = 1,18e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420262;  // std dev = 1,49e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.06842697784420347;  // std dev = 0,000, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.06419184008202618;  // std dev = 1,61e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801115;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | | else return -0.0641918400820261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.08967307222471305;  // std dev = 0,720, 76,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=59 */
%   | | | else return -0.06419184008202546;  // std dev = 2,37e-07, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.208 seconds
Total inference time: 1.527 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064509
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.315 seconds
Refined model CLL: -0.064509


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.982999999999999 seconds
Total inference time: 1.527 seconds
AUC ROC: 1.0
Total revision time: 13.982999999999999
Best scored revision CLL: -0.064509


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 15:47:24
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.496, 'CLL': -0.175496, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.661}, 'Inference time': 1.527, 'CLL': -0.063422, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.982999999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1418510649004886;  // std dev = 0,000, 634,000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.12544463852839233;  // std dev = 0,000, 601,000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.11231637819360589;  // std dev = 0,000, 578,000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.10159632948783548;  // std dev = 3,50e-07, 571,000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.09269127618926186;  // std dev = 0,000, 651,000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.08518475138839678;  // std dev = 1,49e-07, 599,000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109245;  // std dev = 0,000, 616,000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527653;  // std dev = 2,73e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333695;  // std dev = 9,42e-08, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06842697784420362;  // std dev = 0,000, 596,000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202548;  // std dev = 2,14e-07, 572,000 (wgt'ed) examples reached here.  /* #neg=572 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.118 seconds
Total inference time: 1.322 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 15:47:30
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.322, 'CLL': -0.063422, 'Recall': 1.0, 'Learning time': 4.118, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048843;  // std dev = 0,000, 596,000 (wgt'ed) examples reached here.  /* #neg=596 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.541 seconds
Total inference time: 0.896 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 15:47:33
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.896, 'CLL': -0.152985, 'Recall': 0.0, 'Learning time': 1.541, 'F1': nan}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.4378590800270483;  // std dev = 4,100, 69,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7961074329881545;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.09394799813743683;  // std dev = 1,633, 28,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.39397718245096597;  // std dev = 0,385, 58,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5429082758524306;  // std dev = 9,42e-08, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.11623843364702119;  // std dev = 1,604, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783631;  // std dev = 1,83e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20715831353397357;  // std dev = 2,530, 61,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12324678189626224;  // std dev = 0,330, 67,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0851847513883968;  // std dev = 1,97e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.12026469141296355;  // std dev = 0,325, 63,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1385966302046588;  // std dev = 2,337, 57,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 1,61e-09, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05371534126606202;  // std dev = 2,633, 65,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=40 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08837498363954006;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420271;  // std dev = 1,32e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2469253015637757;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0815092903748749;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.266230254259394;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.24426566415296844;  // std dev = 1,620, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.151697
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 1.179 seconds
Total inference time: 1.446 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.990371
   AUC PR    = 0.944723
   CLL	      = -0.149532
   Precision = 0.973684 at threshold = 0.5
   Recall    = 0.925
   F1        = 0.948718


Total scoring time: 1.471 seconds
Parameter learned model CLL: -0.149532


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false': [4.1, 29, 40], 'false,true,true': [0.0, 7, 0], 'false,true,false': [4.47e-08, 43, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 37], 'true,true,false': [1.633, 25, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 3, 0], 'false,true,false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.385, 18, 40], 'false,true,true': [0.0, 2, 0], 'false,true,false': [3.65e-08, 54, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [9.42e-08, 0, 37], 'true,true,false': [1.604, 19, 3], 'false,true,true': [0.0, 5, 0], 'false,true,false': [1.83e-08, 43, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'false,true,false': [0.0, 44, 0], 'true': [2.53, 21, 40]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0], 'false,true,false': [1.97e-08, 47, 0], 'true': [0.33, 27, 40]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.325, 23, 40], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false': [0.0, 45, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false': [1.61e-09, 51, 0], 'true': [2.337, 17, 40]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.86e-09, 6, 0], 'false,true,false': [1.32e-09, 42, 0], 'true': [2.633, 25, 40]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 37], 'true,false,false,false': [0.0, 44, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 3, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,false': [0.0, 7, 0], 'true,false,false,true': [1.62, 21, 3]}]]
[{'': [0.24598293989287942, 5.773159728050814e-17], 'true,true': [0.0, 0.24364629279563216], 'false': [5.773159728050814e-17, nan], 'false,true': [-7.93016446160826e-18, 4.6474452193611206e-17], 'true': [0.24598293989287942, nan]}, {'': [0.2352942074982857, -2.834611977766357e-17], 'false': [-2.834611977766357e-17, nan], 'true': [0.2352942074982857, nan], 'true,true': [-1.1522314633947571e-15, 0.09527483739942558], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -2.7755575615628914e-17]}, {'': [0.14827291103521809, 2.7755575615628914e-17], 'false,true': [0.0, 2.4671622769447922e-17], 'false': [2.7755575615628914e-17, nan], 'true': [0.14827291103521809, nan]}, {'': [0.14521893239969005, 1.5034270125132327e-17], 'true,true': [2.400482215405744e-16, 0.11698378627360696], 'false': [1.5034270125132327e-17, nan], 'false,true': [0.0, 7.745742032268534e-18], 'true': [0.14521893239969005, nan]}, {'': [0.10493783511784967, -4.440892098500626e-18], 'false,true': [0.0, -3.784851220313033e-18], 'false': [-4.440892098500626e-18, nan]}, {'': [0.10875568104609294, 7.472654973438553e-18], 'false,true': [0.0, 8.267618268485208e-18], 'false': [7.472654973438553e-18, nan]}, {'': [0.10542597279742388, -1.1810883240693154e-18], 'false,true': [0.0, 0.0], 'false': [-1.1810883240693154e-18, nan], 'false,true,true': [nan, 0.0], 'true': [0.10542597279742388, nan]}, {'': [0.09585361500530877, 1.047380211910525e-18], 'false,true': [0.0, 2.1769078914218755e-18], 'false': [1.047380211910525e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1066243089542992, 7.955144060861279e-06], 'false,true': [4.8725257372753526e-05, 1.32169407693471e-18], 'false': [7.955144060861279e-06, nan], 'false,true,true': [0.0, 5.782411586589357e-19]}, {'': [0.06053898391673709, nan], 'true,false': [0.0027975167145926775, 0.04600831979109039], 'true,false,true': [-4.800964430811488e-17, 0.0], 'true': [0.006490979386054537, 0.06465570899346162], 'true,true,false': [0.0, -4.956352788505163e-19], 'true,true': [0.0, 3.28009155080777e-05], 'true,false,false': [0.10937499999999996, -2.523234146875356e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
3;true;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.7194734122109548;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( genre(B, E) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014944;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3207118471601494;  // std dev = 5,27e-09, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2097577156325355;  // std dev = 4,56e-09, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06419184008202619;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.11876096307800808;  // std dev = 0,190, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.11932563222356368;  // std dev = 0,270, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202625;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.988073
   AUC PR    = 0.631126
   CLL	      = -0.11202
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 2.421 seconds
Total inference time: 1.847 seconds
AUC ROC: 0.988073


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064587
   Precision = 0.97561 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.987654


Total scoring time: 1.694 seconds
Refined model CLL: -0.064587


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988073
   AUC PR    = 0.631126
   CLL	      = -0.11202
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 6.765 seconds
Total inference time: 1.847 seconds
AUC ROC: 0.988073
Total revision time: 6.765
Best scored revision CLL: -0.064587


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 15:47:44
{'AUC PR': 0.631126, 'AUC ROC': 0.988073, 'Precision': [0.626761, 0.5], 'Inference time': 1.847, 'CLL': -0.11202, 'Recall': 1.0, 'F1': 0.770563, 'Learning time': 6.765, 'parameter_0.2': {'AUC PR': 0.81824, 'AUC ROC': 0.97199, 'Precision': [0.693548, 0.5], 'Inference time': 1.446, 'CLL': -0.151697, 'Recall': 0.724719, 'F1': 0.708791, 'Learning time': 1.179}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5108542490836253;  // std dev = 0,167, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.5306374436003628;  // std dev = 0,126, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   else return -0.11231637819360625;  // std dev = 6,32e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5,27e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4252326164005728;  // std dev = 0,015, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.17630566008952003;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3259516426128458;  // std dev = 0,013, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1510842461934807;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,36e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( female(A) )
%   | then return 0.23500444723050332;  // std dev = 0,098, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.2429102446120617;  // std dev = 0,074, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109166;  // std dev = 3,80e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21541077514107795;  // std dev = 0,014, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1641028871722028;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( female(A) )
%   | then return 0.16229732787949522;  // std dev = 0,081, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.16781130205145783;  // std dev = 0,061, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 3,73e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( female(A) )
%   | then return 0.1393343068135753;  // std dev = 0,080, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.1444355819113126;  // std dev = 0,061, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13985617014167773;  // std dev = 0,014, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.18533967983899235;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.14459797472293617;  // std dev = 0,440, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10293
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.884 seconds
Total inference time: 1.282 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 15:47:47
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.626761, 0.5], 'Inference time': 1.282, 'CLL': -0.10293, 'Recall': 1.0, 'Learning time': 1.884, 'F1': 0.770563}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.7867203636709403;  // std dev = 0,258, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */


Results
   AUC ROC   = 0.891758
   AUC PR    = 0.203944
   CLL	      = -0.234718
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.782 seconds
Total inference time: 0.86 seconds
AUC ROC: 0.891758


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 15:47:49
{'AUC PR': 0.203944, 'AUC ROC': 0.891758, 'Precision': [nan, 0.5], 'Inference time': 0.86, 'CLL': -0.234718, 'Recall': 0.0, 'Learning time': 0.782, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5113747415511237;  // std dev = 5,300, 124,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048774;  // std dev = 4,21e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7719491583876187;  // std dev = 0,903, 76,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=75 */
%   | | else return -0.06891221229833656;  // std dev = 2,260, 42,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12544463852839105;  // std dev = 7,45e-09, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.351557471376632;  // std dev = 0,401, 123,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360642;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1123163781936062;  // std dev = 8,69e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5411861242358069;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return -0.07940981272357397;  // std dev = 2,203, 33,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10159632948783665;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17656051895454514;  // std dev = 3,838, 130,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.09269127618926089;  // std dev = 6,50e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.185228402301592;  // std dev = 0,318, 117,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839682;  // std dev = 5,77e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1424644334959059;  // std dev = 0,320, 117,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0787767547310918;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109158;  // std dev = 5,82e-09, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04289909213650515;  // std dev = 3,960, 138,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333707;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08343697408277367;  // std dev = 3,575, 124,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=81 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06842697784420265;  // std dev = 4,93e-09, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3613091550122934;  // std dev = 0,277, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.26763460702934583;  // std dev = 4,21e-08, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2657710585028095;  // std dev = 2,295, 49,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.151971
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.840391


Total learning time: 1.698 seconds
Total inference time: 1.461 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.990743
   AUC PR    = 0.941725
   CLL	      = -0.151755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.925926
   F1        = 0.961538


Total scoring time: 1.677 seconds
Parameter learned model CLL: -0.151755


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 3, 0], 'true,true,false': [5.3, 43, 81], 'false,true,true': [0.0, 8, 0], 'false,true,false': [4.21e-08, 120, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.903, 1, 75], 'true,true,false': [2.26, 36, 6], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false': [7.45e-09, 114, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.401, 42, 81], 'false,true,true': [3.73e-09, 7, 0], 'false,true,false': [8.69e-08, 114, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 75], 'true,true,false': [2.203, 27, 6], 'false,true,true': [0.0, 8, 0], 'false,true,false': [0.0, 126, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 13, 0], 'false,true,false': [6.5e-08, 110, 0], 'true': [3.838, 49, 81]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [5.77e-08, 107, 0], 'true': [0.318, 36, 81]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.32, 36, 81], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 5, 0], 'false,true,false': [5.82e-09, 107, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 6, 0], 'false,true,false': [0.0, 108, 0], 'true': [3.96, 57, 81]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 11, 0], 'false,true,false': [4.93e-09, 109, 0], 'true': [3.575, 43, 81]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [4.21e-08, 0, 75], 'true,false,false,false': [0.0, 98, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.277, 3, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 7, 0], 'true,true,false,false': [0.0, 6, 0], 'true,false,false,true': [2.295, 43, 6]}]]
[{'': [0.23101246202492545, -2.7755575615628914e-17], 'true,true': [0.0, 0.22652185223725438], 'false': [-2.7755575615628914e-17, nan], 'false,true': [-6.938893903907228e-18, 1.4802973661668754e-17], 'true': [0.23101246202492545, nan]}, {'': [0.2122797286689025, 5.551115123125783e-17], 'false': [5.551115123125783e-17, nan], 'true': [0.2122797286689025, nan], 'true,true': [0.010737541689911555, 0.12158836718934453], 'false,true,true': [0.0, 0.0], 'false,true': [2.7755575615628915e-18, 5.648503107742025e-17]}, {'': [0.16056981679355264, 6.789793704319139e-17], 'false,true': [1.982541115402065e-18, 6.622382953904442e-17], 'false': [6.789793704319139e-17, nan], 'true': [0.16056981679355264, nan]}, {'': [0.12665371829204183, -3.645508439067678e-17], 'true,true': [-3.789561257387201e-16, 0.14704521903939735], 'false': [-3.645508439067678e-17, nan], 'false,true': [-5.204170427930421e-18, -2.995839907718676e-17], 'true': [0.12665371829204183, nan]}, {'': [0.11329164572575671, 4.332577657073782e-17], 'false,true': [2.135044278125301e-18, 3.835315903250541e-17], 'false': [4.332577657073782e-17, nan]}, {'': [0.10130470283534282, 3.2823985075874195e-17], 'false,true': [-4.336808689942018e-18, 3.112774835397635e-17], 'false': [3.2823985075874195e-17, nan]}, {'': [0.10228849696091433, 3.6677010634938206e-17], 'false,true': [-6.938893903907229e-19, 3.5278114801173196e-17], 'false': [3.6677010634938206e-17, nan], 'false,true,true': [nan, -6.938893903907229e-19], 'true': [0.10228849696091433, nan]}, {'': [0.11361490270937326, 2.636589471107497e-07], 'false,true': [3.745316407734773e-06, -3.0839528461809902e-18], 'false': [2.636589471107497e-07, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.10306769105468112, 2.6830389761774617e-17], 'false,true': [6.30808536718839e-19, 2.4445277606425466e-17], 'false': [2.6830389761774617e-17, nan], 'false,true,true': [nan, 6.30808536718839e-19]}, {'': [0.06310330086189989, nan], 'true,false': [0.00859713195662426, 0.04484822706272564], 'true,false,true': [2.3684757858670008e-17, -4.956352788505163e-19], 'true': [0.028140721144986836, 0.06345305369367682], 'true,true,false': [nan, -5.782411586589357e-19], 'true,true': [0.02556969754737944, -5.782411586589357e-19], 'true,false,false': [0.10745522698875472, -1.4727448285843914e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
3;true;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( director(B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109546;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.12544463852839122;  // std dev = 5,27e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462836;  // std dev = 2,89e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831047;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.4014140099794951;  // std dev = 0,109, 47,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0.4175135841583102;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( genre(B, E) )
%   | then return -0.1036022681003338;  // std dev = 0,011, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.1015963294878362;  // std dev = 4,34e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3227094181657221;  // std dev = 0,002, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.09253676206291406;  // std dev = 4,66e-05, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2547927711950235;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return 0.257673807666564;  // std dev = 0,000736, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839679;  // std dev = 3,36e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.22821455869143445;  // std dev = 0,350, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08663117383173943;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08518535347821962;  // std dev = 1,17e-05, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.08518226573979985;  // std dev = 1,88e-05, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.06900247495705757;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.20948962634625892;  // std dev = 4,56e-09, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return 0.21152334799265743;  // std dev = 0,000641, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( genre(B, D) )
%   | then return -0.08179419981818742;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877688551104153;  // std dev = 5,09e-07, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.07877683733670268;  // std dev = 8,24e-07, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.07868496341803954;  // std dev = 3,47e-05, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.17689984200122105;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return 0.1783904977398706;  // std dev = 0,000563, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 1,61e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.06469935922028773;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07317613201107814;  // std dev = 4,08e-05, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then return -0.0732463374842325;  // std dev = 8,46e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( female(A) )
%   | | | then return -0.07300144181408517;  // std dev = 0,000295, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07291657495627331;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.060892720822018395;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.15259465858880328;  // std dev = 1,86e-09, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return 0.15372482712456415;  // std dev = 0,000500, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( genre(A, D) )
%   | then return -0.06835538042246903;  // std dev = 2,90e-05, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0684269386202632;  // std dev = 1,21e-07, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.0684271220499394;  // std dev = 2,04e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.06813710963728209;  // std dev = 2,32e-06, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06197133986963171;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06317376857733056;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.11534468445993239;  // std dev = 0,326, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return 0.10862700292476409;  // std dev = 0,490, 53,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=46 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419191538246945;  // std dev = 5,66e-06, 151,000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | | else return 0.13345481801706355;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10166
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 3.53 seconds
Total inference time: 1.929 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06548
   Precision = 0.920455 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.95858


Total scoring time: 1.866 seconds
Refined model CLL: -0.06548


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10166
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 8.770999999999999 seconds
Total inference time: 1.929 seconds
AUC ROC: 1.0
Total revision time: 8.770999999999999
Best scored revision CLL: -0.06548


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 15:48:02
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.626761, 0.5], 'parameter_0.4': {'AUC PR': 0.81824, 'AUC ROC': 0.97199, 'Precision': [1.0, 0.5], 'Inference time': 1.461, 'CLL': -0.151971, 'Recall': 0.724719, 'F1': 0.840391, 'Learning time': 1.698}, 'Inference time': 1.929, 'CLL': -0.10166, 'Recall': 1.0, 'F1': 0.770563, 'Learning time': 8.770999999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048818;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839147;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360625;  // std dev = 8,94e-08, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783646;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 8,43e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09400998704891646;  // std dev = 0,225, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08658254262828846;  // std dev = 0,212, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07857984095838322;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527716;  // std dev = 3,65e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07307520474898736;  // std dev = 1,87e-05, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367116;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06827734093799569;  // std dev = 1,25e-05, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080109;  // std dev = 5,58e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0640597964408159;  // std dev = 1,18e-05, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07297
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.172 seconds
Total inference time: 1.444 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 15:48:06
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.444, 'CLL': -0.07297, 'Recall': 1.0, 'Learning time': 2.172, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048824;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.904 seconds
Total inference time: 0.938 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 15:48:08
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.938, 'CLL': -0.188432, 'Recall': 0.0, 'Learning time': 0.904, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.5552917922423667;  // std dev = 6,079, 175,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.14185106490048818;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7763824825730309;  // std dev = 3,77e-07, 114,000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | | else return -0.10198430705603599;  // std dev = 2,649, 69,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3423351464864296;  // std dev = 0,395, 186,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.1123163781936063;  // std dev = 1,05e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11231637819360621;  // std dev = 9,54e-08, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5314560455537727;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | | else return -0.15817548680856922;  // std dev = 2,669, 79,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783645;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21780104131449507;  // std dev = 4,179, 178,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926068;  // std dev = 7,74e-08, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17887105290041241;  // std dev = 0,305, 175,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839678;  // std dev = 6,99e-08, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.11274018743621293;  // std dev = 0,318, 185,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07877675473109148;  // std dev = 6,32e-09, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0998921730806633;  // std dev = 4,203, 181,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333677;  // std dev = 7,33e-09, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07489802803955732;  // std dev = 4,250, 183,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=122 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06842697784420262;  // std dev = 5,67e-09, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2358670975846403;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.25168081080007526;  // std dev = 1,55e-07, 114,000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | | | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2576464609166032;  // std dev = 2,646, 64,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=8 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.152487
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 2.094 seconds
Total inference time: 1.56 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.991674
   AUC PR    = 0.947879
   CLL	      = -0.151716
   Precision = 0.942149 at threshold = 0.5
   Recall    = 0.934426
   F1        = 0.938272


Total scoring time: 1.943 seconds
Parameter learned model CLL: -0.151716


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 7, 0], 'true,true,false': [6.079, 53, 122], 'false,true,true': [0.0, 11, 0], 'false,true,false': [0.0, 162, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [3.77e-07, 0, 114], 'true,true,false': [2.649, 61, 8], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false': [0.0, 174, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.395, 64, 122], 'false,true,true': [1.05e-08, 14, 0], 'false,true,false': [9.54e-08, 148, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 114], 'true,true,false': [2.669, 71, 8], 'false,true,true': [0.0, 7, 0], 'false,true,false': [0.0, 145, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [7.74e-08, 153, 0], 'true': [4.179, 56, 122]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 12, 0], 'false,true,false': [6.99e-08, 166, 0], 'true': [0.305, 53, 122]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.318, 63, 122], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 9, 0], 'false,true,false': [6.32e-09, 173, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 10, 0], 'false,true,false': [7.33e-09, 161, 0], 'true': [4.203, 59, 122]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 7, 0], 'false,true,false': [5.67e-09, 162, 0], 'true': [4.25, 61, 122]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.55e-07, 0, 114], 'true,false,false,false': [0.0, 146, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 4, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [3.73e-09, 10, 0], 'true,true,false,false': [5.27e-09, 11, 0], 'true,false,false,true': [2.646, 56, 8]}]]
[{'': [0.22098780340538984, -1.8225626531418756e-16], 'true,true': [-7.93016446160826e-18, 0.21113469387755507], 'false': [-1.8225626531418756e-16, nan], 'false,true': [-1.0092936587501423e-17, -1.507710280355151e-16], 'true': [0.22098780340538984, nan]}, {'': [0.2195671419489194, -1.9413735949729513e-17], 'false': [-1.9413735949729513e-17, nan], 'true': [0.2195671419489194, nan], 'true,true': [1.246566203087895e-15, 0.1017061107813089], 'false,true,true': [0.0, 0.0], 'false,true': [0.0, -1.2761184191093753e-17]}, {'': [0.1556427810549204, 3.289549702593056e-17], 'false,true': [7.93016446160826e-18, 6.151235676977219e-17], 'false': [3.289549702593056e-17, nan], 'true': [0.1556427810549204, nan]}, {'': [0.1518964816346467, -6.135443030823234e-17], 'true,true': [-1.745192684323053e-15, 0.09016945239395131], 'false': [-6.135443030823234e-17, nan], 'false,true': [-3.96508223080413e-18, -5.5128315705525014e-17], 'true': [0.1518964816346467, nan]}, {'': [0.09810124303994938, 4.13747711040431e-17], 'false,true': [0.0, 3.918434204559376e-17], 'false': [4.13747711040431e-17, nan]}, {'': [0.09331676749123917, 3.118604001756058e-17], 'false,true': [2.3129646346357427e-18, 2.942759824307644e-17], 'false': [3.118604001756058e-17, nan]}, {'': [0.10128632991182063, 3.499616055883646e-17], 'false,true': [-1.261617073437678e-18, 3.978833961084376e-17], 'false': [3.499616055883646e-17, nan], 'false,true,true': [0.0, -1.5419764230904951e-18], 'true': [0.10128632991182063, nan]}, {'': [0.09761095082036719, 5.973129723129497e-17], 'false,true': [6.938893903907229e-19, 5.3097622916855314e-17], 'false': [5.973129723129497e-17, nan], 'false,true,true': [nan, 6.938893903907229e-19]}, {'': [0.09871045831271731, 3.153296164615829e-17], 'false,true': [9.912705577010326e-19, 3.152485131651679e-17], 'false': [3.153296164615829e-17, nan], 'false,true,true': [nan, 9.912705577010326e-19]}, {'': [0.05552835948533648, nan], 'true,false': [0.0073975094950460354, 0.04126295479299539], 'true,false,true': [2.1035804677108228e-16, 1.3877787807814458e-18], 'true': [0.005763490389768489, 0.05717973639739833], 'true,true,false': [nan, 2.523234146875356e-18], 'true,true': [0.0, 2.523234146875356e-18], 'true,false,false': [0.10937499999999964, -1.0645974208734377e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
3;true;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(B) )
%   | | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14185106490048838;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #neg=195 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.7194734122109551;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839158;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109547;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7194734122109547;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839124;  // std dev = 4,08e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.1254446385283911;  // std dev = 7,15e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462839;  // std dev = 3,41e-08, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else return 0.5553664367462836;  // std dev = 3,94e-08, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else if ( actor(A) )
%   | | then return -0.11231637819360626;  // std dev = 6,32e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13151669825345078;  // std dev = 0,105, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360632;  // std dev = 1,32e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360635;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360633;  // std dev = 1,49e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.11231637819360628;  // std dev = 3,94e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783619;  // std dev = 4,59e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.10072675801588211;  // std dev = 0,003, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(A) )
%   | | | then return 0.4175135841583105;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41751358415831064;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( genre(B, E) )
%   | then return -0.10159632948783626;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.10159632948783649;  // std dev = 0,000, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.09223000007482456;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601495;  // std dev = 1,34e-08, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else return 0.32071184716015;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.0851847513883968;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(B) )
%   | | | then return -0.08528851936143521;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08380249639407593;  // std dev = 4,56e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.2551722425694897;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,67e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.08518475138839679;  // std dev = 1,05e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.209757715632536;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else return 0.20975771563253573;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.07801431042494152;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( female(A) )
%   | | then return -0.0787767547310917;  // std dev = 1,32e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.07877675473109168;  // std dev = 3,07e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.15046513689301394;  // std dev = 0,349, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333702;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.06299715443912925;  // std dev = 0,000909, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.15274385809367094;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420271;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420267;  // std dev = 1,24e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06842697784420262;  // std dev = 1,90e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420261;  // std dev = 1,49e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | | else return -0.06842697784420267;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06256481468447542;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11277177465980796;  // std dev = 0,132, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801084;  // std dev = 7,60e-08, 114,000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202626;  // std dev = 0,000, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | | | else return 0.11198493333134037;  // std dev = 0,187, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.089675
   Precision = 0.784141 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.879012


Total learning time: 3.65 seconds
Total inference time: 1.613 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064115
   Precision = 0.99187 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.995918


Total scoring time: 2.16 seconds
Refined model CLL: -0.064115


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.089675
   Precision = 0.784141 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.879012


Total learning time: 9.847 seconds
Total inference time: 1.613 seconds
AUC ROC: 1.0
Total revision time: 9.847
Best scored revision CLL: -0.064115


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 15:48:21
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.784141, 0.5], 'Inference time': 1.613, 'parameter_0.6': {'AUC PR': 0.81824, 'AUC ROC': 0.97199, 'Precision': [0.693548, 0.5], 'Inference time': 1.56, 'CLL': -0.152487, 'Recall': 0.724719, 'F1': 0.708791, 'Learning time': 2.094}, 'CLL': -0.089675, 'Recall': 1.0, 'F1': 0.879012, 'Learning time': 9.847}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048846;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839188;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,69e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.11231637819360649;  // std dev = 0,000, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783659;  // std dev = 0,000, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583093;  // std dev = 3,53e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2,19e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.0926912761892605;  // std dev = 9,19e-08, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839678;  // std dev = 7,74e-08, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325354;  // std dev = 1,93e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07877675473109143;  // std dev = 6,66e-08, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452781;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0734350753221087;  // std dev = 0,044, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936714;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06841494066181529;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080111;  // std dev = 5,16e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.0641812195603646;  // std dev = 8,49e-08, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066575
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.629 seconds
Total inference time: 1.66 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 15:48:26
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.66, 'CLL': -0.066575, 'Recall': 1.0, 'Learning time': 2.629, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004885;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.193993
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.962 seconds
Total inference time: 0.868 seconds
AUC ROC: 0.985041


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 15:48:28
{'AUC PR': 0.626761, 'AUC ROC': 0.985041, 'Precision': [nan, 0.5], 'Inference time': 0.868, 'CLL': -0.193993, 'Recall': 0.0, 'Learning time': 0.962, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5459126481796777;  // std dev = 7,134, 237,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.14185106490048835;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7721400328447934;  // std dev = 0,901, 154,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=153 */
%   | | else return -0.10177416689287694;  // std dev = 2,964, 88,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.12544463852839172;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.34026443398943096;  // std dev = 0,395, 251,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.1136292042270848;  // std dev = 0,012, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360672;  // std dev = 0,000, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5353615868693139;  // std dev = 2,38e-07, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   | | else return -0.15470001318983365;  // std dev = 2,981, 100,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.1014765645863298;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10159632948783655;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18939038299000366;  // std dev = 5,134, 255,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926089;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.09268554549084515;  // std dev = 0,000337, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13808606049624775;  // std dev = 0,321, 261,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08703840068831009;  // std dev = 0,013, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518040408493062;  // std dev = 0,000326, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.11638079657547819;  // std dev = 0,318, 256,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=163 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.08812983351602384;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07869094725667423;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07877051420852385;  // std dev = 2,99e-05, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07829484665261364;  // std dev = 5,213, 265,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0812997958429472;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07312092023385652;  // std dev = 5,27e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.0732436925051789;  // std dev = 1,62e-05, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08609490643298406;  // std dev = 4,973, 249,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=163 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07543052659326135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06831728439632033;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06842272213754019;  // std dev = 1,89e-05, 208,000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.22273236951126457;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0703355295430056;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06409504864989889;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2685629752531332;  // std dev = 1,63e-07, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   | | | else return -0.0641263703106617;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.26307323785969117;  // std dev = 3,000, 100,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=10 */
%   | | | else return -0.06419322819171758;  // std dev = 6,23e-08, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.148157
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 1.781 seconds
Total inference time: 1.837 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.992168
   AUC PR    = 0.950911
   CLL	      = -0.144993
   Precision = 0.932927 at threshold = 0.5
   Recall    = 0.93865
   F1        = 0.93578


Total scoring time: 1.946 seconds
Parameter learned model CLL: -0.144993


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 4, 0], 'true,true,false': [7.134, 74, 163], 'false,true,true': [0.0, 16, 0], 'false,true,false': [0.0, 240, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.901, 1, 153], 'true,true,false': [2.964, 78, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [7.45e-09, 14, 0], 'false,true,false': [0.0, 213, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.395, 88, 163], 'false,true,true': [0.012, 10, 0], 'false,true,false': [0.0, 217, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.38e-07, 0, 153], 'true,true,false': [2.981, 90, 10], 'false,true,true': [0.0, 13, 0], 'false,true,false': [0.0, 221, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 12, 0], 'false,true,false': [0.000337, 210, 0], 'true': [5.134, 92, 163]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.013, 11, 0], 'false,true,false': [0.000326, 252, 0], 'true': [0.321, 98, 163]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.318, 93, 163], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 10, 0], 'false,true,false': [2.99e-05, 252, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [5.27e-09, 17, 0], 'false,true,false': [1.62e-05, 249, 0], 'true': [5.213, 102, 163]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 11, 0], 'false,true,false': [1.89e-05, 208, 0], 'true': [4.973, 86, 163]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [1.63e-07, 0, 153], 'true,false,false,false': [6.23e-08, 186, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 7, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 15, 0], 'true,true,false,false': [0.0, 13, 0], 'true,false,false,true': [3.0, 90, 10]}]]
[{'': [0.21890118971781328, -1.0408340855860843e-16], 'true,true': [0.0, 0.21474478805035346], 'false': [-1.0408340855860843e-16, nan], 'false,true': [-6.938893903907228e-18, -1.6653345369377348e-16], 'true': [0.21890118971781328, nan]}, {'': [0.2163788310428161, -5.0864843418949904e-17], 'false': [-5.0864843418949904e-17, nan], 'true': [0.2163788310428161, nan], 'true,true': [0.0052657401456449055, 0.09981926742905949], 'false,true,true': [nan, 3.96508223080413e-18], 'false,true': [3.96508223080413e-18, -4.378344322465406e-17]}, {'': [0.15594126060243746, 7.559117309580901e-07], 'false,true': [1.551160974761212e-05, -6.753430380208326e-17], 'false': [7.559117309580901e-07, nan], 'true': [0.15594126060243746, nan]}, {'': [0.14895594126610762, 7.525978833485929e-10], 'true,true': [3.7152561346933344e-16, 0.08888893924096784], 'false': [7.525978833485929e-10, nan], 'false,true': [-4.270088556250602e-18, -8.238759096765868e-17], 'true': [0.14895594126610762, nan]}, {'': [0.10338040620111048, 5.142636376802628e-10], 'false,true': [2.3129646346357427e-18, 5.418749428001558e-10], 'false': [5.142636376802628e-10, nan]}, {'': [0.10321785424692534, 7.854549900812886e-07], 'false,true': [1.546207077180526e-05, 4.22503549782922e-10], 'false': [7.854549900812886e-07, nan]}, {'': [0.10102565458043763, 3.331046254122792e-07], 'false,true': [7.363022629496891e-06, 8.936272330583081e-10], 'false': [3.331046254122792e-07, nan], 'false,true,true': [0.0, -6.938893903907229e-19], 'true': [0.10102565458043763, nan]}, {'': [0.102536966223636, 4.827950423253317e-07], 'false,true': [6.300266514642246e-06, 2.618215809262889e-10], 'false': [4.827950423253317e-07, nan], 'false,true,true': [0.0, 1.6326809185664067e-18]}, {'': [0.09932693237733597, 2.2341136856366104e-07], 'false,true': [3.865141389412218e-06, 3.574009992871693e-10], 'false': [2.2341136856366104e-07, nan], 'false,true,true': [0.0, -3.1540426835941946e-18]}, {'': [0.05934546717397949, nan], 'true,false': [0.008999987616765046, 0.04046274394061958], 'true,false,true': [1.7415263131375004e-16, -4.625929269271486e-19], 'true': [0.005562738334525686, 0.061181486572282215], 'true,true,false': [0.0, -3.2025664171879517e-18], 'true,true': [-1.586032892321652e-17, 2.582993995425137e-06], 'true,false,false': [0.09000000000000068, 2.089129347412929e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
3;true;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(B) )
%   | | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.1418510649004885;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.1254446385283918;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 3,49e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.5553664367462835;  // std dev = 4,01e-08, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360629;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360632;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11231637819360675;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.41751358415830997;  // std dev = 2,17e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783616;  // std dev = 5,27e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return 0.41751358415831025;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4175135841583104;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( genre(B, E) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783621;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783623;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.3207118471601504;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.0926912761892609;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0926912761892609;  // std dev = 1,86e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926092;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else return -0.09269127618926074;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839679;  // std dev = 2,63e-09, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return -0.13926116165028127;  // std dev = 0,143, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.08518475138839676;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.08518475138839676;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.20975771563253567;  // std dev = 1,29e-08, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.07494069032838385;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, D) )
%   | then return -0.0787767547310917;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109155;  // std dev = 4,83e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.07877675473109151;  // std dev = 6,32e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527772;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.12162594425545804;  // std dev = 0,146, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333699;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15274385809367122;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( female(B) )
%   | | | then return -0.06240179382033414;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06240179382033413;  // std dev = 3,23e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.0684269778442027;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420261;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420261;  // std dev = 3,16e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | | else return -0.06842697784420267;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return -0.058848970963283176;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06445907414515355;  // std dev = 0,001, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.1340070300080108;  // std dev = 9,19e-08, 153,000 (wgt'ed) examples reached here.  /* #pos=153 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06417493226835898;  // std dev = 0,005, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | | | else return 0.1159889509089168;  // std dev = 0,189, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096015
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 4.547 seconds
Total inference time: 1.606 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064548
   Precision = 0.931429 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.964497


Total scoring time: 2.238 seconds
Refined model CLL: -0.064548


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096015
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 10.511999999999999 seconds
Total inference time: 1.606 seconds
AUC ROC: 1.0
Total revision time: 10.511999999999999
Best scored revision CLL: -0.064548


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 15:48:43
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.626761, 0.5], 'Inference time': 1.606, 'parameter_0.8': {'AUC PR': 0.81824, 'AUC ROC': 0.97199, 'Precision': [0.693548, 0.5], 'Inference time': 1.837, 'CLL': -0.148157, 'Recall': 0.724719, 'F1': 0.708791, 'Learning time': 1.781}, 'CLL': -0.096015, 'Recall': 1.0, 'F1': 0.770563, 'Learning time': 10.511999999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048774;  // std dev = 1,49e-07, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.125444638528392;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.11231637819360689;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.10159632948783663;  // std dev = 0,000, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.09269127618926047;  // std dev = 1,35e-07, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839678;  // std dev = 9,88e-08, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07877675473109143;  // std dev = 2,98e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07324622576333703;  // std dev = 8,94e-08, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442031;  // std dev = 0,000, 322,000 (wgt'ed) examples reached here.  /* #neg=322 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06419184008202612;  // std dev = 7,30e-08, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065858
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.889 seconds
Total inference time: 1.424 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 15:48:47
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.424, 'CLL': -0.065858, 'Recall': 1.0, 'Learning time': 2.889, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048774;  // std dev = 1,52e-07, 341,000 (wgt'ed) examples reached here.  /* #neg=341 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.217 seconds
Total inference time: 1.012 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 15:48:50
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 1.012, 'CLL': -0.188432, 'Recall': 0.0, 'Learning time': 1.217, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.5119950889456623;  // std dev = 8,403, 312,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.14185106490048838;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7745312067446941;  // std dev = 1,279, 196,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=194 */
%   | | else return -0.12529265425057465;  // std dev = 3,015, 118,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12544463852839194;  // std dev = 0,000, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3458390137596935;  // std dev = 0,394, 314,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360628;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.11231637819360688;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5418108066509585;  // std dev = 7,63e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.17949743453172304;  // std dev = 3,041, 135,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10323755198897051;  // std dev = 0,019, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.10159632948783659;  // std dev = 0,000, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21178256514020397;  // std dev = 5,417, 306,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09337565136270243;  // std dev = 0,011, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.09268573869596133;  // std dev = 0,000448, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14587519826669765;  // std dev = 0,311, 321,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0863256360771922;  // std dev = 0,013, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.0851771106280622;  // std dev = 0,000525, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.12094411917540489;  // std dev = 0,308, 317,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.08809610523041304;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07865868696182331;  // std dev = 3,73e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07877079844183657;  // std dev = 2,96e-05, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07405693499780809;  // std dev = 5,721, 334,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0812709668495389;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07312282506589186;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07323965533341116;  // std dev = 2,75e-05, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06495221585612357;  // std dev = 5,667, 327,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=204 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0754056179490816;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06831895206974661;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.06842399615207764;  // std dev = 2,07e-05, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.21700751627088577;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07031380367280322;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06409652030553946;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.27055922671095795;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.06410176663446898;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2524209874016129;  // std dev = 3,008, 105,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=10 */
%   | | | else return -0.06419356334732705;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.14604
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 1.942 seconds
Total inference time: 2.193 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.993632
   AUC PR    = 0.960741
   CLL	      = -0.141807
   Precision = 0.937198 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.944039


Total scoring time: 2.987 seconds
Parameter learned model CLL: -0.141807


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 12, 0], 'true,true,false': [8.403, 108, 204], 'false,true,true': [1.05e-08, 22, 0], 'false,true,false': [0.0, 237, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.279, 2, 194], 'true,true,false': [3.015, 108, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false': [0.0, 272, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.394, 110, 204], 'false,true,true': [1.05e-08, 22, 0], 'false,true,false': [0.0, 257, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [7.63e-07, 0, 194], 'true,true,false': [3.041, 125, 10], 'false,true,true': [0.019, 22, 0], 'false,true,false': [0.0, 263, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.011, 16, 0], 'false,true,false': [0.000448, 274, 0], 'true': [5.417, 102, 204]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.013, 17, 0], 'false,true,false': [0.000525, 285, 0], 'true': [0.311, 117, 204]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.308, 113, 204], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.73e-09, 19, 0], 'false,true,false': [2.96e-05, 270, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 15, 0], 'false,true,false': [2.75e-05, 290, 0], 'true': [5.721, 130, 204]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 20, 0], 'false,true,false': [2.07e-05, 253, 0], 'true': [5.667, 123, 204]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 194], 'true,false,false,false': [0.0, 251, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 4, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 16, 0], 'true,true,false,false': [0.0, 15, 0], 'true,false,false,true': [3.008, 95, 10]}]]
[{'': [0.23319615912208952, -9.259002830850726e-17], 'true,true': [-1.1564823173178714e-17, 0.22633136094675016], 'false': [-9.259002830850726e-17, nan], 'false,true': [5.046468293750712e-18, -1.7988423690129118e-16], 'true': [0.23319615912208952, nan]}, {'': [0.22409418267680187, -7.612957883143931e-17], 'false': [-7.612957883143931e-17, nan], 'true': [0.22409418267680187, nan], 'true,true': [0.008350067237890038, 0.0770416041452748], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -7.18379604169219e-17]}, {'': [0.15555729964209744, -1.1301194946005178e-16], 'false,true': [5.046468293750712e-18, -9.676652043425489e-17], 'false': [-1.1301194946005178e-16, nan], 'true': [0.15555729964209744, nan]}, {'': [0.15398801462494352, 1.5087539503794838e-06], 'true,true': [3.0033249655839286e-15, 0.06847995907457402], 'false': [1.5087539503794838e-06, nan], 'false,true': [1.705953822212452e-05, -6.585353301959103e-17], 'true': [0.15398801462494352, nan]}, {'': [0.09590985262595472, 4.131207900123492e-07], 'false,true': [7.025540670351285e-06, 7.331444016355435e-10], 'false': [4.131207900123492e-07, nan]}, {'': [0.09701968174729364, 6.730730073392882e-07], 'false,true': [1.069588366419911e-05, 9.665673485764065e-10], 'false': [6.730730073392882e-07, nan]}, {'': [0.0945621788822214, 3.00888130648539e-07], 'false,true': [4.230581019876167e-06, 8.737788311826741e-10], 'false': [3.00888130648539e-07, nan], 'false,true,true': [0.0, 7.304098846218135e-19], 'true': [0.0945621788822214, nan]}, {'': [0.09797767850591059, 2.117537115776792e-07], 'false,true': [3.8901688199071555e-06, 7.543730077390008e-10], 'false': [2.117537115776792e-07, nan], 'false,true,true': [0.0, -1.8503717077085942e-18]}, {'': [0.09820959089411865, 1.7877829584941176e-07], 'false,true': [2.2775888111218175e-06, 4.2871617279503636e-10], 'false': [1.7877829584941176e-07, nan], 'false,true,true': [0.0, -4.163336342344337e-18]}, {'': [0.05326237132164333, nan], 'true,false': [0.007883032457356063, 0.03278230745956347], 'true,false,true': [-2.655378780546766e-16, -8.673617379884035e-19], 'true': [0.003723905904192791, 0.054595219337458485], 'true,true,false': [0.0, 0.0], 'true,true': [0.0, 2.264918699346717e-06], 'true,false,false': [0.0861678004535142, -6.015551049761804e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
3;true;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.14185106490048802;  // std dev = 0,000, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.12544463852839188;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462836;  // std dev = 3,80e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.5553664367462834;  // std dev = 4,15e-08, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.13151669825345083;  // std dev = 0,105, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360629;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1123163781936063;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.11231637819360692;  // std dev = 0,000, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return 0.41751358415830936;  // std dev = 3,16e-08, 119,000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.41751358415831036;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return -0.13892983457133176;  // std dev = 0,292, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, E) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.10159632948783659;  // std dev = 0,000, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.3207118471601499;  // std dev = 1,97e-08, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.10955469149242615;  // std dev = 0,061, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926093;  // std dev = 1,86e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926076;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926082;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.09269127618926075;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.2551722425694898;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 3,65e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return -0.07963644447885886;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.26000636789521664;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839678;  // std dev = 2,28e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 2,63e-09, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.08518475138839678;  // std dev = 4,59e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.07877675473109175;  // std dev = 1,97e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.07399148766033369;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.2097577156325354;  // std dev = 1,77e-08, 123,000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109155;  // std dev = 5,27e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return -0.07877675473109147;  // std dev = 8,43e-08, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1770964977452776;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return -0.10938484121948058;  // std dev = 0,075, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333698;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.0684269778442027;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.06236773822289563;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.15274385809367136;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420267;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420268;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.0684269778442029;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06311719565188444;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07749939744567967;  // std dev = 0,052, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801087;  // std dev = 9,88e-08, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06416302923939453;  // std dev = 0,008, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
%   | | | else return 0.11598895090891675;  // std dev = 0,189, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074723
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.546 seconds
Total inference time: 1.75 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06376
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.449 seconds
Refined model CLL: -0.06376


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074723
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.924000000000001 seconds
Total inference time: 1.75 seconds
AUC ROC: 1.0
Total revision time: 12.924000000000001
Best scored revision CLL: -0.06376


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 15:49:07
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.81824, 'AUC ROC': 0.97199, 'Precision': [0.693548, 0.5], 'Inference time': 2.193, 'CLL': -0.14604, 'Recall': 0.724719, 'F1': 0.708791, 'Learning time': 1.942}, 'Inference time': 1.75, 'CLL': -0.074723, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.924000000000001}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.1418510649004875;  // std dev = 2,58e-07, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839227;  // std dev = 0,000, 444,000 (wgt'ed) examples reached here.  /* #neg=444 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 0,000, 408,000 (wgt'ed) examples reached here.  /* #neg=408 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783619;  // std dev = 1,46e-07, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4,00e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.09312088600641195;  // std dev = 0,158, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4,46e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.0859652431320023;  // std dev = 0,210, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07868898122865267;  // std dev = 1,94e-07, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07362294792065073;  // std dev = 0,183, 405,000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06833146946788524;  // std dev = 5,58e-06, 410,000 (wgt'ed) examples reached here.  /* #neg=410 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 1,38e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06498313415340887;  // std dev = 0,235, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070604
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.192 seconds
Total inference time: 1.335 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 15:49:12
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.335, 'CLL': -0.070604, 'Recall': 1.0, 'Learning time': 3.192, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048754;  // std dev = 2,33e-07, 383,000 (wgt'ed) examples reached here.  /* #neg=383 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.19 seconds
Total inference time: 0.937 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 15:49:14
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.937, 'CLL': -0.188432, 'Recall': 0.0, 'Learning time': 1.19, 'F1': nan}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.5086343719927171;  // std dev = 4,839, 103,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7843782461908241;  // std dev = 1,19e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0.061204478703586626;  // std dev = 2,940, 44,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.415645060369159;  // std dev = 0,389, 92,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11395741073545451;  // std dev = 0,012, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360622;  // std dev = 6,50e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.4655028140522143;  // std dev = 1,633, 59,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=55 */
%   | | else return -0.014246053521045778;  // std dev = 2,913, 41,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10316380559655923;  // std dev = 0,011, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1015963294878363;  // std dev = 1,49e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21212138462881044;  // std dev = 3,642, 100,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.092691276189261;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.09266039805479441;  // std dev = 0,000841, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1349736789584271;  // std dev = 0,372, 106,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08515834529585427;  // std dev = 0,000705, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1349824859631886;  // std dev = 0,361, 100,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.08811683179774416;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0785483706328537;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07878049627649389;  // std dev = 1,25e-06, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12087143983570992;  // std dev = 3,499, 97,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08128868290401248;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324597178309032;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07322692933527103;  // std dev = 6,40e-05, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04311402624789108;  // std dev = 3,902, 106,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07542092499802318;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0684267555306502;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842097519489576;  // std dev = 4,36e-05, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3029721322845971;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07032715492356516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419164393456732;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2649838661245489;  // std dev = 2,11e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.06401800080487614;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.101510667279015;  // std dev = 2,787, 34,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return -0.06419657636759862;  // std dev = 1,67e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.202324
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.539 seconds
Total inference time: 1.221 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.9786
   AUC PR    = 0.861947
   CLL	      = -0.188461
   Precision = 0.753425 at threshold = 0.5
   Recall    = 0.820896
   F1        = 0.785714


Total scoring time: 1.403 seconds
Parameter learned model CLL: -0.188461


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false': [4.839, 36, 67], 'false,true,true': [0.0, 10, 0], 'false,true,false': [8.16e-08, 88, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.19e-07, 0, 55], 'true,true,false': [2.94, 32, 12], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [5.27e-09, 12, 0], 'false,true,false': [0.0, 84, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.389, 25, 67], 'false,true,true': [0.012, 8, 0], 'false,true,false': [6.5e-08, 81, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.633, 4, 55], 'true,true,false': [2.913, 29, 12], 'false,true,true': [0.011, 7, 0], 'false,true,false': [1.49e-08, 105, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 13, 0], 'false,true,false': [0.000841, 96, 0], 'true': [3.642, 33, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false': [0.000705, 78, 0], 'true': [0.372, 39, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.361, 33, 67], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [3.73e-09, 8, 0], 'false,true,false': [1.25e-06, 100, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false': [6.4e-05, 88, 0], 'true': [3.499, 30, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.86e-09, 5, 0], 'false,true,false': [4.36e-05, 89, 0], 'true': [3.902, 39, 67]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [2.11e-08, 0, 55], 'true,false,false,false': [1.67e-08, 77, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 8, 0], 'true,true,false,false': [0.0, 10, 0], 'true,false,false,true': [2.787, 22, 12]}]]
[{'': [0.23092970521541878, 7.703588334133739e-17], 'true,true': [0.0, 0.2273541332830608], 'false': [7.703588334133739e-17, nan], 'false,true': [-1.1102230246251566e-17, 7.569702440626067e-17], 'true': [0.23092970521541878, nan]}, {'': [0.21644833425732948, -4.625929269271485e-18], 'false': [-4.625929269271485e-18, nan], 'true': [0.21644833425732948, nan], 'true,true': [2.583791766400364e-16, 0.19646414208917012], 'false,true,true': [nan, 2.3129646346357427e-18], 'false,true': [2.3129646346357427e-18, -2.114710523095536e-17]}, {'': [0.15100360696846146, 1.9147717850302555e-06], 'false,true': [1.885091462383061e-05, 5.208453695772339e-17], 'false': [1.9147717850302555e-06, nan], 'true': [0.15100360696846146, nan]}, {'': [0.16720491145294442, 1.2497066025966643e-06], 'true,true': [0.04517187524253707, 0.20701963117192154], 'false': [1.2497066025966643e-06, nan], 'false,true': [1.7691885624726567e-05, 2.1147105230955365e-18], 'true': [0.16720491145294442, nan]}, {'': [0.13265835017160715, 6.589082892964424e-09], 'false,true': [-1.0675221390626506e-18, 7.367639200117626e-09], 'false': [6.589082892964424e-09, nan]}, {'': [0.13823889713350054, 5.831300223053206e-09], 'false,true': [1.734723475976807e-18, 6.364518877733671e-09], 'false': [5.831300223053206e-09, nan]}, {'': [0.13028398787127285, 1.565408457856768e-06], 'false,true': [1.4648871850243828e-05, 1.5555023935576173e-12], 'false': [1.565408457856768e-06, nan], 'false,true,true': [0.0, 1.734723475976807e-18], 'true': [0.13028398787127285, nan]}, {'': [0.12619820671925594, 1.3024946969490153e-06], 'false,true': [1.0349632347934207e-05, 4.101499041281825e-09], 'false': [1.3024946969490153e-06, nan], 'false,true,true': [0.0, -1.734723475976807e-18]}, {'': [0.14366874248981445, 5.120934019527197e-07], 'false,true': [6.7942231303247625e-06, 1.9040327086530277e-09], 'false': [5.120934019527197e-07, nan], 'false,true,true': [0.0, 6.938893903907229e-19]}, {'': [0.06660780199475426, nan], 'true,false': [0.011999642357002021, 0.07024815377610925], 'true,false,true': [8.074349270001138e-18, 0.0], 'true': [0.007390214486787955, 0.06978437170108058], 'true,true,false': [0.0, -3.469446951953614e-18], 'true,true': [0.0, 3.1111152971973803e-06], 'true,false,false': [0.2283737024221452, 3.6046202098219365e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.14185106490048766;  // std dev = 7,88e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.6892515007333601;  // std dev = 0,158, 57,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.7194734122109542;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7194734122109543;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.12544463852839133;  // std dev = 2,11e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.18260743040597494;  // std dev = 0,120, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5610180104642248;  // std dev = 0,003, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.5618360013970846;  // std dev = 0,003, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.15271371185278862;  // std dev = 0,110, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.4217240230487057;  // std dev = 0,003, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.42233269652566957;  // std dev = 0,002, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.16187142805817434;  // std dev = 0,112, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.32357125300243283;  // std dev = 0,003, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.3239829930152418;  // std dev = 0,002, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.08765164805866911;  // std dev = 0,013, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08515079035685194;  // std dev = 0,000166, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( female(A) )
%   | | then return 0.25712451542474946;  // std dev = 0,002, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.2574043824003774;  // std dev = 0,002, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08518475138839682;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2111370975656354;  // std dev = 0,002, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.21133402325807762;  // std dev = 0,002, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(A) )
%   | | then return -0.07877921935160939;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(B) )
%   | | | then return -0.07798859403255709;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13846559378819037;  // std dev = 0,269, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1781083505712833;  // std dev = 0,002, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.1782522828730846;  // std dev = 0,001, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(A) )
%   | | then return -0.07324836380676046;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.06806896304116458;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1365350877412307;  // std dev = 0,166, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15351154636219272;  // std dev = 0,002, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.15362040207813776;  // std dev = 0,001, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.07260843191656433;  // std dev = 0,027, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0684269778442027;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06842697784420272;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06412358126521572;  // std dev = 0,000181, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10378361256811756;  // std dev = 0,145, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13527106355221358;  // std dev = 0,001, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.06419184008202618;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06405555630677105;  // std dev = 0,008, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | | else return 0.09194368040899781;  // std dev = 0,384, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064119
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.418 seconds
Total inference time: 1.395 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066181
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.468 seconds
Refined model CLL: -0.066181


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064119
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.828 seconds
Total inference time: 1.395 seconds
AUC ROC: 1.0
Total revision time: 7.828
Best scored revision CLL: -0.066181


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 15:49:26
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.395, 'CLL': -0.064119, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.828, 'parameter_0.2': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.918367, 0.5], 'Inference time': 1.221, 'CLL': -0.202324, 'Recall': 1.0, 'F1': 0.957447, 'Learning time': 1.539}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048766;  // std dev = 8,94e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.11231637819360621;  // std dev = 8,56e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.1015963294878363;  // std dev = 2,58e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926086;  // std dev = 7,45e-08, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839683;  // std dev = 6,32e-08, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07877675473109164;  // std dev = 5,67e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07324622576333716;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420267;  // std dev = 5,05e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06419184008202626;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.212 seconds
Total inference time: 1.131 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 15:49:29
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.131, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 2.212, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.813 seconds
Total inference time: 0.73 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 15:49:31
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.73, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 0.813, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.5560656017661759;  // std dev = 6,362, 192,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.14185106490048827;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7600013944615523;  // std dev = 1,264, 111,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=109 */
%   | | else return 0.02961289783993861;  // std dev = 4,310, 101,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.12544463852839163;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.37351043564874403;  // std dev = 0,406, 196,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11517034783160301;  // std dev = 0,026, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.11231637819360646;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5051895333580573;  // std dev = 1,428, 112,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=109 */
%   | | else return -0.05723508333592955;  // std dev = 4,332, 107,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.1013361308231988;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.10159632948783652;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2187453382473318;  // std dev = 5,069, 200,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09497791716835188;  // std dev = 0,019, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.09267198253691857;  // std dev = 0,000858, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15512617428554978;  // std dev = 0,364, 205,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08500672626279286;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08516702501131637;  // std dev = 0,000815, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.16839943581165107;  // std dev = 0,348, 186,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.08799686915218088;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07859140852745262;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.07876444616392206;  // std dev = 4,59e-05, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11088932864420317;  // std dev = 4,984, 193,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08118613675605725;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07310405311598278;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.07323822285888813;  // std dev = 4,16e-05, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08027420163354038;  // std dev = 5,044, 196,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0753323169361581;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06830251706982837;  // std dev = 3,73e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.06841669755529733;  // std dev = 4,42e-05, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.29681137458921286;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07024986380283402;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06408201689220669;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.24449317077974547;  // std dev = 2,04e-07, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | | | else return -0.06405063001203361;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.14248406204048253;  // std dev = 4,134, 79,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return -0.0641959017262886;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.199304
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.815 seconds
Total inference time: 1.383 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.977935
   AUC PR    = 0.856243
   CLL	      = -0.185569
   Precision = 0.778571 at threshold = 0.5
   Recall    = 0.813433
   F1        = 0.79562


Total scoring time: 1.709 seconds
Parameter learned model CLL: -0.185569


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 6, 0], 'true,true,false': [6.362, 58, 134], 'false,true,true': [1.05e-08, 21, 0], 'false,true,false': [0.0, 178, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.264, 2, 109], 'true,true,false': [4.31, 76, 25], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 18, 0], 'false,true,false': [0.0, 197, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.406, 62, 134], 'false,true,true': [0.026, 23, 0], 'false,true,false': [0.0, 179, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.428, 3, 109], 'true,true,false': [4.332, 82, 25], 'false,true,true': [0.0, 12, 0], 'false,true,false': [0.0, 185, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.019, 19, 0], 'false,true,false': [0.000858, 192, 0], 'true': [5.069, 66, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 15, 0], 'false,true,false': [0.000815, 189, 0], 'true': [0.364, 71, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.348, 52, 134], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 16, 0], 'false,true,false': [4.59e-05, 166, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 13, 0], 'false,true,false': [4.16e-05, 188, 0], 'true': [4.984, 59, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.73e-09, 20, 0], 'false,true,false': [4.42e-05, 177, 0], 'true': [5.044, 62, 134]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [2.04e-07, 0, 109], 'true,false,false,false': [0.0, 172, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 12, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 13, 0], 'true,true,false,false': [0.0, 12, 0], 'true,false,false,true': [4.134, 54, 25]}]]
[{'': [0.21875318845016267, -2.410132395166169e-16], 'true,true': [-6.938893903907228e-18, 0.21082899305556013], 'false': [-2.410132395166169e-16, nan], 'false,true': [5.28677630773884e-18, -1.9709577291098283e-16], 'true': [0.21875318845016267, nan]}, {'': [0.2282173686646305, -4.337615538070379e-17], 'false': [-4.337615538070379e-17, nan], 'true': [0.2282173686646305, nan], 'true,true': [0.014385590409863643, 0.1839051548502641], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -3.1559639278684655e-17]}, {'': [0.1645121014876936, 4.160522280280657e-06], 'false,true': [2.9322513700599675e-05, -1.2404726532124653e-17], 'false': [4.160522280280657e-06, nan], 'true': [0.1645121014876936, nan]}, {'': [0.17402726039342778, 3.8728496642034325e-09], 'true,true': [0.018211236851269463, 0.175352706348831], 'false': [3.8728496642034325e-09, nan], 'false,true': [-8.0953762212251e-18, -8.761760086230966e-17], 'true': [0.17402726039342778, nan]}, {'': [0.12846401115417702, 2.2048078368107318e-06], 'false,true': [1.9607726127226032e-05, 3.831934080230266e-09], 'false': [2.2048078368107318e-06, nan]}, {'': [0.13231258638713225, 5.005154305176671e-09], 'false,true': [-5.551115123125783e-18, 3.5129998968608303e-09], 'false': [5.005154305176671e-09, nan]}, {'': [0.12143942214966227, 1.80379276700531e-06], 'false,true': [1.4154030330131017e-05, 2.108022074167791e-09], 'false': [1.80379276700531e-06, nan], 'false,true,true': [0.0, 0.0], 'true': [0.12143942214966227, nan]}, {'': [0.1286928735316572, 9.199709004342204e-07], 'false,true': [9.951105322815804e-06, 1.7345952369498446e-09], 'false': [9.199709004342204e-07, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.12982722496692875, 2.440607382488598e-07], 'false,true': [2.2411830458351517e-06, 1.95396760792842e-09], 'false': [2.440607382488598e-07, nan], 'false,true,true': [0.0, 6.938893903907229e-19]}, {'': [0.06788052621037166, nan], 'true,false': [0.00906324748179099, 0.06940400704931243], 'true,false,true': [3.8297601583399897e-16, -5.337610695313253e-19], 'true': [0.013361392335255086, 0.06953642686980595], 'true,true,false': [0.0, -2.8912057932946786e-18], 'true,true': [-3.700743415417188e-17, 4.658245164846404e-06], 'true,false,false': [0.21631148854350218, -5.809306524201401e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.1418510649004883;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(A) )
%   | | then return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.1254446385283915;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462838;  // std dev = 3,16e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0.5553664367462836;  // std dev = 3,73e-08, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return -0.1123163781936063;  // std dev = 1,86e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.11231637819360636;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11231637819360656;  // std dev = 0,000, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783626;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783626;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.10159632948783648;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0.32071184716015005;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,49e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.08518475138839686;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839683;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253592;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0.20975771563253598;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109164;  // std dev = 1,29e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109169;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.07877675473109164;  // std dev = 2,98e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527755;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367072;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06842697784420272;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0684269778442027;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420262;  // std dev = 9,31e-10, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else return -0.06842697784420261;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202619;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.06419184008202619;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801087;  // std dev = 7,15e-08, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202625;  // std dev = 1,49e-08, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | | | else return 0.085958819077093;  // std dev = 0,488, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.121 seconds
Total inference time: 1.544 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064338
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.683 seconds
Refined model CLL: -0.064338


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.328 seconds
Total inference time: 1.544 seconds
AUC ROC: 1.0
Total revision time: 10.328
Best scored revision CLL: -0.064338


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 15:49:45
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.918367, 0.5], 'Inference time': 1.383, 'CLL': -0.199304, 'Recall': 1.0, 'F1': 0.957447, 'Learning time': 1.815}, 'Inference time': 1.544, 'CLL': -0.063847, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.328}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048838;  // std dev = 0,000, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839133;  // std dev = 1,83e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.12544463852839183;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360682;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1015963294878365;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.09269127618926053;  // std dev = 7,30e-08, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839678;  // std dev = 8,16e-08, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07877675473109144;  // std dev = 6,83e-08, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.0732462257633367;  // std dev = 1,21e-07, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.06842697784420268;  // std dev = 2,58e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0641918400820262;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.06419184008202623;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.967 seconds
Total inference time: 1.154 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 15:49:49
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.154, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 2.967, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048832;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.958 seconds
Total inference time: 0.764 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 15:49:51
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.764, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 0.958, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.5428946978113729;  // std dev = 7,980, 295,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.14185106490048782;  // std dev = 1,15e-07, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7731143930008035;  // std dev = 0,901, 167,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=166 */
%   | | else return 0.06427870994562028;  // std dev = 5,060, 128,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.1254446385283919;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3793974058825571;  // std dev = 0,403, 291,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.11231637819360699;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5211039941075409;  // std dev = 0,836, 167,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=166 */
%   | | else return -0.05464213516259518;  // std dev = 5,174, 147,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.1015963294878366;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19547022574213754;  // std dev = 6,411, 310,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926089;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.09269127618926044;  // std dev = 1,41e-07, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16484677301992615;  // std dev = 0,362, 300,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839678;  // std dev = 5,27e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.08518475138839678;  // std dev = 9,54e-08, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10264916451963323;  // std dev = 0,368, 317,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07877675473109143;  // std dev = 2,46e-09, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10733119789849725;  // std dev = 6,212, 301,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.07324622576333689;  // std dev = 6,59e-09, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09270653356006352;  // std dev = 6,138, 295,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420265;  // std dev = 1,49e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.06842697784420292;  // std dev = 0,000, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3677188148432074;  // std dev = 0,459, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.25359792568985534;  // std dev = 0,000, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.17198897299889318;  // std dev = 5,102, 130,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=36 */
%   | | | else return -0.06419184008202625;  // std dev = 2,11e-08, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.191296
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 2.134 seconds
Total inference time: 1.541 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.978574
   AUC PR    = 0.862549
   CLL	      = -0.18035
   Precision = 0.78673 at threshold = 0.5
   Recall    = 0.821782
   F1        = 0.803874


Total scoring time: 2.277 seconds
Parameter learned model CLL: -0.18035


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 12, 0], 'true,true,false': [7.98, 93, 202], 'false,true,true': [0.0, 19, 0], 'false,true,false': [1.15e-07, 304, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.901, 1, 166], 'true,true,false': [5.06, 92, 36], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 24, 0], 'false,true,false': [0.0, 267, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.403, 89, 202], 'false,true,true': [0.0, 28, 0], 'false,true,false': [0.0, 279, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.836, 1, 166], 'true,true,false': [5.174, 111, 36], 'false,true,true': [0.0, 25, 0], 'false,true,false': [0.0, 278, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 19, 0], 'false,true,false': [1.41e-07, 279, 0], 'true': [6.411, 108, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 26, 0], 'false,true,false': [9.54e-08, 262, 0], 'true': [0.362, 98, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.368, 115, 202], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 22, 0], 'false,true,false': [2.46e-09, 290, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 27, 0], 'false,true,false': [6.59e-09, 276, 0], 'true': [6.212, 99, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.49e-08, 27, 0], 'false,true,false': [0.0, 284, 0], 'true': [6.138, 93, 202]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 166], 'true,false,false,false': [2.11e-08, 243, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.459, 12, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 29, 0], 'true,true,false,false': [0.0, 17, 0], 'true,false,false,true': [5.102, 94, 36]}]]
[{'': [0.2250421755138032, 8.799290845326319e-17], 'true,true': [-1.1564823173178714e-17, 0.21586900316001625], 'false': [8.799290845326319e-17, nan], 'false,true': [0.0, 4.382459307730881e-17], 'true': [0.2250421755138032, nan]}, {'': [0.2129620592211549, -8.401687753920104e-17], 'false': [-8.401687753920104e-17, nan], 'true': [0.2129620592211549, nan], 'true,true': [0.004863905621339843, 0.20002844011259913], 'false,true,true': [0.0, -4.625929269271485e-18], 'false,true': [-5.742532885992189e-18, -6.985672963933569e-17]}, {'': [0.16280662123195114, -5.930833095717449e-17], 'false,true': [-1.3877787807814457e-17, -1.0186992627384949e-16], 'false': [-5.930833095717449e-17, nan], 'true': [0.16280662123195114, nan]}, {'': [0.17000179688437264, -5.27630744376312e-17], 'true,true': [0.004184215771276183, 0.18208098771134856], 'false': [-5.27630744376312e-17, nan], 'false,true': [-1.3322676295501878e-17, -5.910539843328172e-17], 'true': [0.17000179688437264, nan]}, {'': [0.13256779438267555, 8.792370262132112e-17], 'false,true': [0.0, 7.162729191130042e-17], 'false': [8.792370262132112e-17, nan]}, {'': [0.13087034272776207, 3.5465457731081387e-17], 'false,true': [1.0675221390626506e-18, 3.474743817529116e-17], 'false': [3.5465457731081387e-17, nan]}, {'': [0.13554767826964784, 1.4053456007913374e-18], 'false,true': [-4.270088556250602e-18, 5.359697360259376e-18], 'false': [1.4053456007913374e-18, nan], 'false,true,true': [0.0, -3.784851220313033e-18], 'true': [0.13554767826964784, nan]}, {'': [0.12822021227524083, 2.912060392459427e-17], 'false,true': [-5.742532885992189e-18, 4.1834490782976914e-17], 'false': [2.912060392459427e-17, nan], 'false,true,true': [0.0, -5.13992141030165e-18]}, {'': [0.12769948374712115, -6.618637262188433e-17], 'false,true': [7.93016446160826e-18, -4.300159602421381e-17], 'false': [-6.618637262188433e-17, nan], 'false,true,true': [0.0, 8.22387425648264e-18]}, {'': [0.07273115586103464, nan], 'true,false': [0.012785469396293773, 0.0724260199656101], 'true,false,true': [-6.420566889398495e-17, -2.392722035830079e-18], 'true': [0.028666461496744927, 0.07335146796389136], 'true,true,false': [0.0, -8.163404592832033e-19], 'true,true': [0.017589094444682856, -1.460819769243627e-18], 'true,false,false': [0.20023668639053346, 1.827527612551698e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.14185106490048766;  // std dev = 7,45e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.14185106490048804;  // std dev = 0,000, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839144;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.12544463852839197;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.5553664367462834;  // std dev = 4,15e-08, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.11231637819360633;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360629;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360629;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.1123163781936063;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.11231637819360693;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2,24e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.4175135841583096;  // std dev = 2,79e-08, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.10159632948783634;  // std dev = 7,45e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783631;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.10159632948783659;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601504;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.3207118471601502;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926092;  // std dev = 1,86e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926078;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926086;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.09269127618926093;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( female(B) )
%   | | then return -0.0851847513883968;  // std dev = 3,23e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.08518475138839679;  // std dev = 1,86e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.08518475138839678;  // std dev = 1,49e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839676;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.08518475138839676;  // std dev = 3,65e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07877675473109172;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return 0.2097577156325357;  // std dev = 1,26e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.20975771563253554;  // std dev = 1,54e-08, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109144;  // std dev = 6,66e-08, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.07877675473109164;  // std dev = 1,32e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.09540755620869842;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.073246225763337;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367153;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420265;  // std dev = 4,01e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | | else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.08748523105757919;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420268;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420267;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420293;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202612;  // std dev = 1,86e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.0704006113658419;  // std dev = 0,008, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1340070300080108;  // std dev = 9,42e-08, 166,000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | | | else return -0.06419184008202612;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.10174209766777248;  // std dev = 0,480, 43,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=36 */
%   | | | else return -0.06437529408117822;  // std dev = 0,033, 361,000 (wgt'ed) examples reached here.  /* #neg=361 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063869
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.383 seconds
Total inference time: 1.505 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064469
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.569 seconds
Refined model CLL: -0.064469


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063869
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.363 seconds
Total inference time: 1.505 seconds
AUC ROC: 1.0
Total revision time: 11.363
Best scored revision CLL: -0.064469


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 15:50:06
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.505, 'parameter_0.6': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.918367, 0.5], 'Inference time': 1.541, 'CLL': -0.191296, 'Recall': 1.0, 'F1': 0.957447, 'Learning time': 2.134}, 'CLL': -0.063869, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.363}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.14185106490048757;  // std dev = 2,31e-07, 409,000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.12544463852839216;  // std dev = 0,000, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.11231637819360678;  // std dev = 0,000, 354,000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.10159632948783656;  // std dev = 0,000, 347,000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.0926912761892605;  // std dev = 1,86e-07, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839679;  // std dev = 1,97e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07877675473109147;  // std dev = 3,65e-08, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.07324622576333716;  // std dev = 5,58e-08, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.06842697784420314;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06419184008202584;  // std dev = 1,46e-07, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.116 seconds
Total inference time: 1.141 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 15:50:11
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.141, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 3.116, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.14185106490048788;  // std dev = 5,96e-08, 343,000 (wgt'ed) examples reached here.  /* #neg=343 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.156 seconds
Total inference time: 0.82 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 15:50:13
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.82, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 1.156, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.5550401268093528;  // std dev = 9,030, 386,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.1418510649004875;  // std dev = 2,51e-07, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7682273463062076;  // std dev = 1,270, 220,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=218 */
%   | | else return 0.03552776929684362;  // std dev = 6,133, 201,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=51 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839127;  // std dev = 3,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.12544463852839222;  // std dev = 0,000, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.34076036926480635;  // std dev = 0,417, 415,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.11231637819360647;  // std dev = 0,000, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5188600289620828;  // std dev = 1,659, 222,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=218 */
%   | | else return -0.02266790834604127;  // std dev = 6,062, 195,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=51 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.1015963294878362;  // std dev = 1,40e-07, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21098463781135807;  // std dev = 7,373, 407,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.09269127618926054;  // std dev = 1,93e-07, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14810190161967943;  // std dev = 0,370, 419,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.08518475138839678;  // std dev = 1,21e-07, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.12107168440790464;  // std dev = 0,366, 416,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.07877675473109141;  // std dev = 6,32e-09, 407,000 (wgt'ed) examples reached here.  /* #neg=407 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09787683253929108;  // std dev = 7,434, 412,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333707;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.07324622576333717;  // std dev = 2,63e-09, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08850825953275379;  // std dev = 7,303, 400,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.06842697784420317;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3544493778091641;  // std dev = 0,460, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.25933434343638406;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #pos=218 */
%   | | | else return -0.06419184008202611;  // std dev = 9,13e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.13115295364475948;  // std dev = 5,920, 163,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=51 */
%   | | | else return -0.0641918400820258;  // std dev = 1,49e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.193531
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.513 seconds
Total inference time: 1.382 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.977136
   AUC PR    = 0.853658
   CLL	      = -0.1828
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.810409
   F1        = 0.895277


Total scoring time: 2.479 seconds
Parameter learned model CLL: -0.1828


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 13, 0], 'true,true,false': [9.03, 117, 269], 'false,true,true': [2.58e-08, 29, 0], 'false,true,false': [2.51e-07, 365, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.27, 2, 218], 'true,true,false': [6.133, 150, 51], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [3.49e-08, 42, 0], 'false,true,false': [0.0, 370, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.417, 146, 269], 'false,true,true': [0.0, 31, 0], 'false,true,false': [0.0, 352, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.659, 4, 218], 'true,true,false': [6.062, 144, 51], 'false,true,true': [0.0, 37, 0], 'false,true,false': [1.4e-07, 362, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 34, 0], 'false,true,false': [1.93e-07, 358, 0], 'true': [7.373, 138, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.24e-08, 38, 0], 'false,true,false': [1.21e-07, 373, 0], 'true': [0.37, 150, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.366, 147, 269], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 33, 0], 'false,true,false': [6.32e-09, 407, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [1.05e-08, 35, 0], 'false,true,false': [2.63e-09, 377, 0], 'true': [7.434, 143, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 5, 0], 'false,true,true,false': [0.0, 32, 0], 'false,true,false': [0.0, 337, 0], 'true': [7.303, 131, 269]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 218], 'true,false,false,false': [1.49e-07, 336, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.46, 13, 0], 'true,true,false,true': [1.32e-09, 3, 0], 'true,false,true,false': [9.13e-09, 27, 0], 'true,true,false,false': [0.0, 29, 0], 'true,false,false,true': [5.92, 112, 51]}]]
[{'': [0.21965942424985116, 2.2317173489927e-16], 'true,true': [-1.2810265668751807e-17, 0.21123385862708077], 'false': [2.2317173489927e-16, nan], 'false,true': [2.2970131543968756e-17, 1.7276895287317505e-16], 'true': [0.21965942424985116, nan]}, {'': [0.22710748898846045, -1.284113377879699e-16], 'false': [-1.284113377879699e-16, nan], 'true': [0.22710748898846045, nan], 'true,true': [0.007327060701627566, 0.1871246841753134], 'false,true,true': [0.0, 2.9077269692563625e-17], 'false,true': [3.700743415417188e-17, -1.248250752010987e-16]}, {'': [0.17430037395233694, -2.3190037067888386e-17], 'false,true': [-1.7906822977825105e-17, -3.2802043909379627e-17], 'false': [-2.3190037067888386e-17, nan], 'true': [0.17430037395233694, nan]}, {'': [0.16773961592429035, 1.2020459815490416e-16], 'true,true': [0.012394855217281269, 0.18847361155401435], 'false': [1.2020459815490416e-16, nan], 'false,true': [-1.050210969240013e-17, 5.3977694014924736e-17], 'true': [0.16773961592429035, nan]}, {'': [0.1335817897312107, 6.230843505549347e-17], 'false,true': [-4.89804275569922e-18, 1.041997028698471e-16], 'false': [6.230843505549347e-17, nan]}, {'': [0.13671804398026957, 3.997883397676963e-17], 'false,true': [1.3147377923192643e-17, 3.928939390094388e-17], 'false': [3.997883397676963e-17, nan]}, {'': [0.13379445852143274, 3.00060276925718e-18], 'false,true': [-2.250452076942885e-18, 3.8189489790545927e-17], 'false': [3.00060276925718e-18, nan], 'false,true,true': [0.0, -2.523234146875356e-18], 'true': [0.13379445852143274, nan]}, {'': [0.1341210142597608, -8.581434006764495e-18], 'false,true': [3.750753461571475e-18, 7.067732782759617e-18], 'false': [-8.581434006764495e-18, nan], 'false,true,true': [0.0, 3.1720657846433043e-18]}, {'': [0.13332909088051312, -1.0211677017942616e-16], 'false,true': [-2.250452076942885e-18, -7.97252142312427e-17], 'false': [-1.0211677017942616e-16, nan], 'false,true,true': [6.938893903907229e-19, -5.204170427930421e-18]}, {'': [0.07090772288605449, nan], 'true,false': [0.010263771107201735, 0.07121255616856709], 'true,false,true': [-5.866866625542112e-16, 3.0839528461809902e-18], 'true': [0.022003866407489414, 0.07233202564070654], 'true,true,false': [5.782411586589357e-19, -4.785444071660157e-19], 'true,true': [0.016256518257912703, -8.673617379884035e-19], 'true,false,false': [0.21498739132071218, 6.608470384673551e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.1418510649004879;  // std dev = 0,000, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.14185106490048746;  // std dev = 2,55e-07, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839113;  // std dev = 7,60e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.12544463852839222;  // std dev = 0,000, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0.5553664367462834;  // std dev = 4,21e-08, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.11231637819360643;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( female(A) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.11231637819360632;  // std dev = 3,49e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.11231637819360635;  // std dev = 0,000, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783645;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.10159632948783646;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926096;  // std dev = 1,86e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.09269127618926093;  // std dev = 2,98e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.09269127618926079;  // std dev = 6,50e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0.2551722425694894;  // std dev = 3,73e-09, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 2,28e-09, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.08518475138839679;  // std dev = 2,08e-09, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( genre(A, D) )
%   | then return -0.0851847513883968;  // std dev = 3,73e-09, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.08518475138839678;  // std dev = 3,65e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.08518475138839678;  // std dev = 5,48e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253517;  // std dev = 1,49e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0.2097577156325351;  // std dev = 1,67e-08, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 2,63e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109143;  // std dev = 5,58e-08, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1770964977452775;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0.17709649774527758;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.073246225763337;  // std dev = 9,42e-08, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936714;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06842697784420268;  // std dev = 2,47e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420304;  // std dev = 0,000, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.09510818634548014;  // std dev = 0,814, 107,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=86 */
%   | | | else return 0.10569290570943436;  // std dev = 0,861, 154,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=132 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.08896183226027515;  // std dev = 0,675, 66,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=51 */
%   | | | else return -0.06419184008202557;  // std dev = 2,09e-07, 437,000 (wgt'ed) examples reached here.  /* #neg=437 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064585
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.751 seconds
Total inference time: 1.373 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065038
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.104 seconds
Refined model CLL: -0.065038


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064585
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.847000000000001 seconds
Total inference time: 1.373 seconds
AUC ROC: 1.0
Total revision time: 12.847000000000001
Best scored revision CLL: -0.065038


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 15:50:29
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.373, 'parameter_0.8': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.382, 'CLL': -0.193531, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.513}, 'CLL': -0.064585, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.847000000000001}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.1418510649004882;  // std dev = 0,000, 571,000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839122;  // std dev = 5,27e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839224;  // std dev = 0,000, 510,000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360649;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.112316378193606;  // std dev = 0,000, 526,000 (wgt'ed) examples reached here.  /* #neg=526 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783624;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1015963294878357;  // std dev = 2,86e-07, 506,000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.09269127618926133;  // std dev = 0,000, 492,000 (wgt'ed) examples reached here.  /* #neg=492 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.08518475138839678;  // std dev = 1,33e-07, 522,000 (wgt'ed) examples reached here.  /* #neg=522 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07877675473109193;  // std dev = 0,000, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.0732462257633372;  // std dev = 0,000, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.06842697784420357;  // std dev = 0,000, 550,000 (wgt'ed) examples reached here.  /* #neg=550 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.06419184008202561;  // std dev = 2,06e-07, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.564 seconds
Total inference time: 1.064 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 15:50:34
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.064, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 3.564, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.1418510649004875;  // std dev = 1,79e-07, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.367 seconds
Total inference time: 0.788 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 15:50:36
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.788, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 1.367, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.5587726357232087;  // std dev = 10,044, 481,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.14185106490048718;  // std dev = 2,98e-07, 440,000 (wgt'ed) examples reached here.  /* #neg=440 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7661559929784135;  // std dev = 1,553, 281,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=278 */
%   | | else return 0.03732595426005711;  // std dev = 6,580, 232,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.12544463852839233;  // std dev = 0,000, 471,000 (wgt'ed) examples reached here.  /* #neg=471 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.346964349362935;  // std dev = 0,413, 513,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360633;  // std dev = 1,49e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.11231637819360599;  // std dev = 0,000, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5260123372842719;  // std dev = 1,178, 280,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=278 */
%   | | else return -0.008365123738503025;  // std dev = 6,458, 208,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.10159632948783562;  // std dev = 2,95e-07, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19820743756979933;  // std dev = 8,313, 514,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926108;  // std dev = 1,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.09269127618926105;  // std dev = 1,17e-07, 425,000 (wgt'ed) examples reached here.  /* #neg=425 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1604883396514975;  // std dev = 0,362, 508,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839689;  // std dev = 1,97e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.08518475138839678;  // std dev = 1,40e-07, 442,000 (wgt'ed) examples reached here.  /* #neg=442 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.11917898581935027;  // std dev = 0,363, 514,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07877675473109175;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.07877675473109173;  // std dev = 9,03e-09, 443,000 (wgt'ed) examples reached here.  /* #neg=443 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08711628070364619;  // std dev = 8,319, 521,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333707;  // std dev = 1,18e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.0732462257633377;  // std dev = 0,000, 433,000 (wgt'ed) examples reached here.  /* #neg=433 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07588352601079996;  // std dev = 8,249, 510,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420274;  // std dev = 1,39e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.06842697784420354;  // std dev = 0,000, 492,000 (wgt'ed) examples reached here.  /* #neg=492 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.29970939380242545;  // std dev = 0,292, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2613854845065332;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | | else return -0.06419184008202611;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.18871615902032682;  // std dev = 6,628, 231,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=59 */
%   | | | else return -0.0641918400820256;  // std dev = 1,94e-07, 397,000 (wgt'ed) examples reached here.  /* #neg=397 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.187875
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 2.666 seconds
Total inference time: 1.312 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.978805
   AUC PR    = 0.865091
   CLL	      = -0.178263
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total scoring time: 2.721 seconds
Parameter learned model CLL: -0.178263


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [7.45e-09, 20, 0], 'true,true,false': [10.044, 144, 337], 'false,true,true': [4.08e-08, 39, 0], 'false,true,false': [2.98e-07, 440, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.553, 3, 278], 'true,true,false': [6.58, 173, 59], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 45, 0], 'false,true,false': [0.0, 471, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.413, 176, 337], 'false,true,true': [1.49e-08, 47, 0], 'false,true,false': [0.0, 452, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.178, 2, 278], 'true,true,false': [6.458, 149, 59], 'false,true,true': [0.0, 38, 0], 'false,true,false': [2.95e-07, 452, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 48, 0], 'false,true,false': [1.17e-07, 425, 0], 'true': [8.313, 177, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.97e-08, 40, 0], 'false,true,false': [1.4e-07, 442, 0], 'true': [0.362, 171, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.363, 177, 337], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [7.45e-09, 54, 0], 'false,true,false': [9.03e-09, 443, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 6, 0], 'false,true,true,false': [1.18e-08, 28, 0], 'false,true,false': [0.0, 433, 0], 'true': [8.319, 184, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [1.39e-08, 44, 0], 'false,true,false': [0.0, 492, 0], 'true': [8.249, 173, 337]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 278], 'true,false,false,false': [1.94e-07, 397, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.292, 19, 0], 'true,true,false,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 40, 0], 'true,true,false,false': [0.0, 45, 0], 'true,false,false,true': [6.628, 172, 59]}]]
[{'': [0.2201903578073421, 6.304397968643895e-17], 'true,true': [2.7755575615628915e-18, 0.20975013074805443], 'false': [6.304397968643895e-17, nan], 'false,true': [4.2700885562506023e-17, 2.0185873175002846e-16], 'true': [0.2201903578073421, nan]}, {'': [0.22068207140284543, -1.568376480084674e-16], 'false': [-1.568376480084674e-16, nan], 'true': [0.22068207140284543, nan], 'true,true': [0.00857861531766613, 0.18661775029305902], 'false,true,true': [0.0, -2.960594732333751e-17], 'false,true': [-3.3306690738754695e-17, -1.3388676815012503e-16]}, {'': [0.17068505127655045, -3.5598333454914836e-18], 'false,true': [4.724353296277262e-18, -9.824982518806695e-18], 'false': [-3.5598333454914836e-18, nan], 'true': [0.17068505127655045, nan]}, {'': [0.15814490009349483, 2.3382656355370643e-16], 'true,true': [0.004955229691162596, 0.2005162808225355], 'false': [2.3382656355370643e-16, nan], 'false,true': [-8.764918615461762e-18, 1.9256965736861123e-16], 'true': [0.15814490009349483, nan]}, {'': [0.13443472472710125, -9.388778220931556e-18], 'false,true': [2.3129646346357427e-18, 3.2392389424357507e-17], 'false': [-9.388778220931556e-18, nan]}, {'': [0.131203294152218, 4.514599851172836e-17], 'false,true': [9.714451465470119e-18, 4.42079756411827e-17], 'false': [4.514599851172836e-17, nan]}, {'': [0.1318996927203408, 1.779916672745742e-17], 'false,true': [3.96508223080413e-18, 8.019669703838603e-17], 'false': [1.779916672745742e-17, nan], 'false,true,true': [0.0, 1.02798428206033e-18], 'true': [0.1318996927203408, nan]}, {'': [0.13282137365134813, -3.1381036242081515e-17], 'false,true': [4.081702296416017e-18, -6.358783143349627e-17], 'false': [-3.1381036242081515e-17, nan], 'false,true,true': [0.0, 4.956352788505163e-18]}, {'': [0.1334321700800615, -1.1842378929335003e-16], 'false,true': [4.625929269271485e-18, -1.2185374660520012e-16], 'false': [-1.1842378929335003e-16, nan], 'false,true,true': [0.0, 4.4156597570318725e-18]}, {'': [0.0735736696450686, nan], 'true,false': [0.01165624983646804, 0.07355911743247842], 'true,false,true': [-7.795522820389588e-16, -2.0816681711721684e-18], 'true': [0.011957578301401825, 0.07711494680338528], 'true,true,false': [0.0, -3.0839528461809902e-18], 'true,true': [0.004481935802085382, -3.6658307416868376e-18], 'true,false,false': [0.19017634602050243, 9.508207263792272e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1418510649004881;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.14185106490048754;  // std dev = 1,40e-07, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.12544463852839136;  // std dev = 3,65e-08, 158,000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(B) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283923;  // std dev = 0,000, 459,000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360632;  // std dev = 8,30e-08, 158,000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | | | else return -0.11231637819360636;  // std dev = 1,29e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360629;  // std dev = 1,86e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360626;  // std dev = 1,29e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.11231637819360633;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else return -0.11231637819360689;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783649;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783652;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | | else return -0.10159632948783659;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.09269127618926075;  // std dev = 1,62e-07, 387,000 (wgt'ed) examples reached here.  /* #neg=387 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.09269127618926086;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948884;  // std dev = 6,45e-09, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.25517224256948856;  // std dev = 1,18e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.08518475138839678;  // std dev = 4,37e-09, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839678;  // std dev = 9,31e-10, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.08518475138839678;  // std dev = 5,27e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 3,16e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return -0.08518475138839678;  // std dev = 6,14e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253504;  // std dev = 1,81e-08, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.20975771563253495;  // std dev = 1,97e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0787767547310917;  // std dev = 2,58e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.07877675473109162;  // std dev = 4,21e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( female(A) )
%   | | then return -0.0787767547310915;  // std dev = 6,45e-09, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else return -0.07877675473109143;  // std dev = 2,28e-09, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1770964977452777;  // std dev = 0,000, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333722;  // std dev = 0,000, 405,000 (wgt'ed) examples reached here.  /* #neg=405 */
%   | | | else return -0.07324622576333699;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420264;  // std dev = 2,36e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.06842697784420271;  // std dev = 7,45e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420262;  // std dev = 1,97e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.06842697784420271;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420268;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.06842697784420344;  // std dev = 0,000, 443,000 (wgt'ed) examples reached here.  /* #neg=443 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202619;  // std dev = 9,31e-10, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801126;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | | else return -0.06419184008202611;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.09822112290842082;  // std dev = 0,647, 72,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=59 */
%   | | | else return -0.06419184008202533;  // std dev = 2,45e-07, 539,000 (wgt'ed) examples reached here.  /* #neg=539 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.219 seconds
Total inference time: 1.605 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.165 seconds
Refined model CLL: -0.06432


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.771 seconds
Total inference time: 1.605 seconds
AUC ROC: 1.0
Total revision time: 13.771
Best scored revision CLL: -0.06432


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 15:50:54
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [0.918367, 0.5], 'Inference time': 1.312, 'CLL': -0.187875, 'Recall': 1.0, 'F1': 0.957447, 'Learning time': 2.666}, 'Inference time': 1.605, 'CLL': -0.063847, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.771}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.14185106490048874;  // std dev = 0,000, 648,000 (wgt'ed) examples reached here.  /* #neg=648 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839235;  // std dev = 0,000, 705,000 (wgt'ed) examples reached here.  /* #neg=705 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.11231637819360567;  // std dev = 2,98e-08, 578,000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783621;  // std dev = 3,80e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783542;  // std dev = 3,76e-07, 618,000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.09269127618926176;  // std dev = 0,000, 606,000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.08518475138839678;  // std dev = 1,52e-07, 624,000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07877675473109243;  // std dev = 0,000, 588,000 (wgt'ed) examples reached here.  /* #neg=588 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.0732462257633369;  // std dev = 1,55e-07, 577,000 (wgt'ed) examples reached here.  /* #neg=577 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420361;  // std dev = 0,000, 598,000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202543;  // std dev = 2,47e-07, 608,000 (wgt'ed) examples reached here.  /* #neg=608 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.308 seconds
Total inference time: 1.18 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 15:51:00
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.18, 'CLL': -0.063847, 'Recall': 1.0, 'Learning time': 4.308, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.14185106490048857;  // std dev = 0,000, 623,000 (wgt'ed) examples reached here.  /* #neg=623 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.33 seconds
Total inference time: 0.741 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 15:51:02
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.741, 'CLL': -0.160469, 'Recall': 0.0, 'Learning time': 1.33, 'F1': nan}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.53491661186719;  // std dev = 4,654, 99,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048763;  // std dev = 7,88e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7502165144939423;  // std dev = 1,259, 61,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | | else return -0.04948941417081035;  // std dev = 2,573, 48,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3174156001137071;  // std dev = 0,416, 109,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1123163781936062;  // std dev = 8,02e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5492030654755017;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.10169688060862508;  // std dev = 2,574, 51,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10159632948783616;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19427214427875206;  // std dev = 3,586, 107,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926094;  // std dev = 5,16e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1817431499060902;  // std dev = 0,341, 99,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0851847513883969;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08518475138839682;  // std dev = 5,16e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.15561467584724298;  // std dev = 0,336, 96,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109168;  // std dev = 4,37e-09, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1422430625425701;  // std dev = 3,109, 93,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333706;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.022268239054544944;  // std dev = 3,739, 113,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06842697784420265;  // std dev = 4,66e-09, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.25962989564322214;  // std dev = 5,16e-08, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.21884255088330065;  // std dev = 2,558, 44,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.16592
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total learning time: 1.327 seconds
Total inference time: 1.329 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.985007
   AUC PR    = 0.908656
   CLL	      = -0.165215
   Precision = 0.776316 at threshold = 0.5
   Recall    = 0.880597
   F1        = 0.825175


Total scoring time: 1.449 seconds
Parameter learned model CLL: -0.165215


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 4, 0], 'true,true,false': [4.654, 32, 67], 'false,true,true': [0.0, 8, 0], 'false,true,false': [7.88e-08, 86, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.259, 2, 59], 'true,true,false': [2.573, 40, 8], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 5, 0], 'false,true,false': [0.0, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.416, 42, 67], 'false,true,true': [0.0, 6, 0], 'false,true,false': [8.02e-08, 100, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 59], 'true,true,false': [2.574, 43, 8], 'false,true,true': [3.73e-09, 8, 0], 'false,true,false': [5.77e-08, 82, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 7, 0], 'false,true,false': [5.16e-08, 101, 0], 'true': [3.586, 40, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 10, 0], 'false,true,false': [5.16e-08, 94, 0], 'true': [0.341, 32, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.336, 29, 67], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,true,false': [4.37e-09, 71, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 6, 0], 'false,true,false': [0.0, 101, 0], 'true': [3.109, 26, 67]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.63e-09, 11, 0], 'false,true,false': [4.66e-09, 92, 0], 'true': [3.739, 46, 67]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [5.16e-08, 0, 59], 'true,false,false,false': [0.0, 78, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 7, 0], 'true,true,false,false': [0.0, 5, 0], 'true,false,false,true': [2.558, 36, 8]}]]
[{'': [0.2273541332830608, 7.795182938857482e-17], 'true,true': [0.0, 0.21875318845015737], 'false': [7.795182938857482e-17, nan], 'false,true': [-6.938893903907228e-18, 7.229359230117299e-17], 'true': [0.2273541332830608, nan]}, {'': [0.23289518964310327, -1.686414720949605e-17], 'false': [-1.686414720949605e-17, nan], 'true': [0.23289518964310327, nan], 'true,true': [0.02599262559025142, 0.137931994033647], 'false,true,true': [0.0, 0.0], 'false,true': [-1.982541115402065e-18, -3.0839528461809905e-17]}, {'': [0.17345612845000236, 6.70323335622736e-17], 'false,true': [0.0, 6.439293542825907e-17], 'false': [6.70323335622736e-17, nan], 'true': [0.17345612845000236, nan]}, {'': [0.1655957076477984, 2.837236618486511e-17], 'true,true': [-8.430168051391019e-16, 0.12992563394707485], 'false': [2.837236618486511e-17, nan], 'false,true': [1.734723475976807e-18, 4.06179155350667e-17], 'true': [0.1655957076477984, nan]}, {'': [0.12015699410973442, 3.4951465590051226e-17], 'false,true': [-9.912705577010326e-19, 2.63815372188156e-17], 'false': [3.4951465590051226e-17, nan]}, {'': [0.11657562808427539, 2.9890619893754213e-17], 'false,true': [1.3877787807814458e-18, 2.834611977766357e-17], 'false': [2.9890619893754213e-17, nan]}, {'': [0.11262548713802811, 1.9984014443252817e-17], 'false,true': [0.0, 1.8764332810566026e-17], 'false': [1.9984014443252817e-17, nan], 'false,true,true': [nan, 0.0], 'true': [0.11262548713802811, nan]}, {'': [0.10393565998528415, 5.509270803729975e-07], 'false,true': [5.73501574934604e-06, -4.3969228698026e-18], 'false': [5.509270803729975e-07, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.12371531235324368, 2.2117145916901342e-07], 'false,true': [1.7741434414370733e-06, 2.1118372751022e-17], 'false': [2.2117145916901342e-07, nan], 'false,true,true': [0.0, 6.30808536718839e-19]}, {'': [0.06736047452659581, nan], 'true,false': [0.009942009487169572, 0.059166088248807404], 'true,false,true': [4.516161456102332e-17, -4.956352788505163e-19], 'true': [0.0, 0.06904106737270278], 'true,true,false': [nan, 0.0], 'true,true': [nan, 0.0], 'true,false,false': [0.14876033057851235, -9.25185853854297e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
3;true;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.14185106490048763;  // std dev = 8,69e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.7194734122109547;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.21849380808478394;  // std dev = 0,170, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( actor(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.17098655432858947;  // std dev = 0,135, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return 0.41751358415831036;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.08856113413671628;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.41751358415830975;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.11512738360977227;  // std dev = 0,103, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, E) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.08423172506882842;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.08034702244167018;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.25517224256948934;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839682;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,05e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.11574184770755458;  // std dev = 0,120, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527705;  // std dev = 4,56e-09, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.17709649774527697;  // std dev = 6,97e-09, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07430111431515311;  // std dev = 0,012, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06837162598114996;  // std dev = 0,000106, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.06548968296768544;  // std dev = 0,016, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.0684269778442027;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return -0.05881572072541751;  // std dev = 5,06e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, E) )
%   | then if ( movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1111379296130066;  // std dev = 0,323, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.12357551052958782;  // std dev = 0,273, 38,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06418377682325517;  // std dev = 0,000217, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | | else return 0.07995279271072811;  // std dev = 0,293, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064196
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.986 seconds
Total inference time: 1.76 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065732
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.432 seconds
Refined model CLL: -0.065732


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064196
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.194000000000001 seconds
Total inference time: 1.76 seconds
AUC ROC: 1.0
Total revision time: 7.194000000000001
Best scored revision CLL: -0.065732


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 15:51:13
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.76, 'CLL': -0.064196, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.194000000000001, 'parameter_0.2': {'AUC PR': 0.823063, 'AUC ROC': 0.971565, 'Precision': [0.945946, 0.5], 'Inference time': 1.329, 'CLL': -0.16592, 'Recall': 0.777778, 'F1': 0.853659, 'Learning time': 1.327}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048785;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839108;  // std dev = 8,69e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360628;  // std dev = 6,66e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1015963294878364;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.0926912761892609;  // std dev = 6,66e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839683;  // std dev = 5,58e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109165;  // std dev = 4,83e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333704;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420267;  // std dev = 4,59e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06419184008202626;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.892 seconds
Total inference time: 1.237 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 15:51:16
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.237, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 1.892, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.141851064900488;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.795 seconds
Total inference time: 0.788 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 15:51:18
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.788, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 0.795, 'F1': nan}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.5597196157277815;  // std dev = 6,324, 191,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.14185106490048827;  // std dev = 0,000, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.767845078766928;  // std dev = 0,897, 116,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=115 */
%   | | else return 0.03422308456079808;  // std dev = 3,745, 75,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.12544463852839163;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.33994715736035563;  // std dev = 0,412, 205,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360628;  // std dev = 1,83e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5187854465704266;  // std dev = 1,172, 117,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=115 */
%   | | else return -0.0856629058970305;  // std dev = 3,862, 95,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.10159632948783652;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1996778524952326;  // std dev = 5,084, 205,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.09269127618926064;  // std dev = 8,16e-08, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17757399752322886;  // std dev = 0,345, 196,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839683;  // std dev = 5,27e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.08518475138839678;  // std dev = 7,74e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.09699836248548162;  // std dev = 0,362, 212,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07877675473109147;  // std dev = 5,27e-09, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09099698397808817;  // std dev = 5,088, 207,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07324622576333673;  // std dev = 7,45e-09, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04091136222994738;  // std dev = 5,406, 220,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=134 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.06842697784420262;  // std dev = 5,82e-09, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.32225535830172464;  // std dev = 0,279, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.27042727288130575;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.19605549377007325;  // std dev = 3,854, 87,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=19 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.171653
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total learning time: 1.849 seconds
Total inference time: 1.301 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.982487
   AUC PR    = 0.890846
   CLL	      = -0.168028
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.858209
   F1        = 0.923695


Total scoring time: 1.618 seconds
Parameter learned model CLL: -0.168028


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 9, 0], 'true,true,false': [6.324, 57, 134], 'false,true,true': [7.45e-09, 20, 0], 'false,true,false': [0.0, 175, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.897, 1, 115], 'true,true,false': [3.745, 56, 19], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 18, 0], 'false,true,false': [0.0, 198, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.412, 71, 134], 'false,true,true': [1.83e-08, 35, 0], 'false,true,false': [0.0, 175, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.172, 2, 115], 'true,true,false': [3.862, 76, 19], 'false,true,true': [0.0, 16, 0], 'false,true,false': [0.0, 179, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.18e-08, 22, 0], 'false,true,false': [8.16e-08, 166, 0], 'true': [5.084, 71, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 20, 0], 'false,true,false': [7.74e-08, 193, 0], 'true': [0.345, 62, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.362, 78, 134], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 11, 0], 'false,true,false': [5.27e-09, 203, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 20, 0], 'false,true,false': [7.45e-09, 173, 0], 'true': [5.088, 73, 134]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 21, 0], 'false,true,false': [5.82e-09, 213, 0], 'true': [5.406, 86, 134]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 115], 'true,false,false,false': [0.0, 145, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.279, 5, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [5.89e-09, 12, 0], 'true,true,false,false': [7.9e-09, 15, 0], 'true,false,false,true': [3.854, 68, 19]}]]
[{'': [0.22110000000000446, -2.3229281746003277e-16], 'true,true': [-9.25185853854297e-18, 0.20936926071105963], 'false': [-2.3229281746003277e-16, nan], 'false,true': [2.7755575615628915e-18, -1.9032394707859825e-16], 'true': [0.22110000000000446, nan]}, {'': [0.2059845218555603, -4.481634227844669e-17], 'false': [-4.481634227844669e-17, nan], 'true': [0.2059845218555603, nan], 'true,true': [0.006938839295874436, 0.18697617550027096], 'false,true,true': [0.0, 0.0], 'false,true': [0.0, -3.140024716111554e-17]}, {'': [0.16952809692730353, -5.075305255429287e-17], 'false,true': [9.516197353929913e-18, -7.612957883143931e-18], 'false': [-5.075305255429287e-17, nan], 'true': [0.16952809692730353, nan]}, {'': [0.16719526085366176, -9.109522253334617e-17], 'true,true': [0.011738820295206391, 0.15701598997794128], 'false': [-9.109522253334617e-17, nan], 'false,true': [-1.0408340855860843e-17, -8.311166776523518e-17], 'true': [0.16719526085366176, nan]}, {'': [0.1260670282342143, 3.897591469428741e-17], 'false,true': [6.308085367188389e-18, 4.01285430587406e-17], 'false': [3.897591469428741e-17, nan]}, {'': [0.11928825524598262, 3.2316350951530376e-17], 'false,true': [1.3877787807814458e-18, 3.106323488588521e-17], 'false': [3.2316350951530376e-17, nan]}, {'': [0.13084163851284303, 2.2408171139223344e-17], 'false,true': [-9.251858538542971e-19, 2.73453946952009e-17], 'false': [2.2408171139223344e-17, nan], 'false,true,true': [0.0, 0.0], 'true': [0.13084163851284303, nan]}, {'': [0.12506020580165864, 6.752902933287034e-17], 'false,true': [-1.32169407693471e-18, 5.583202493779689e-17], 'false': [6.752902933287034e-17, nan], 'false,true,true': [0.0, -1.3877787807814458e-18]}, {'': [0.13283608766024194, 2.2676895822130856e-17], 'false,true': [-3.784851220313033e-18, 3.388004535241088e-17], 'false': [2.2676895822130856e-17, nan], 'false,true,true': [0.0, -2.64338815386942e-18]}, {'': [0.07326735009453382, nan], 'true,false': [0.009580168147392926, 0.06808641582837939], 'true,false,true': [-3.089316242435218e-16, 2.8912057932946786e-18], 'true': [0.015245643530026243, 0.07578794809086807], 'true,true,false': [0.0, 4.163336342344337e-18], 'true,true': [0.015619683786170624, 3.2653618371328133e-18], 'true,false,false': [0.1706962610648695, -1.1485065771984378e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.14185106490048827;  // std dev = 0,000, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.16421512584355483;  // std dev = 0,134, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A) )
%   | | then return -0.12544463852839155;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 3,49e-08, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.5553664367462836;  // std dev = 3,73e-08, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10850861618730674;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360632;  // std dev = 2,28e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360615;  // std dev = 1,01e-07, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11231637819360633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.4175135841583106;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783624;  // std dev = 2,79e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.10159632948783628;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.18541148859051215;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783626;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.1015963294878363;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783652;  // std dev = 0,000, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.32071184716015;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.10138304667112187;  // std dev = 0,031, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09269127618926096;  // std dev = 1,32e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.0851847513883968;  // std dev = 1,75e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( female(B) )
%   | | | then return -0.08450985398524537;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0820105356411537;  // std dev = 0,010, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,67e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253595;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.20975771563253598;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109175;  // std dev = 1,61e-09, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( female(B) )
%   | | | then return -0.07819692354763673;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09932190854216907;  // std dev = 0,082, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109165;  // std dev = 3,61e-09, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.07877675473109166;  // std dev = 2,36e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527755;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.06941381317348401;  // std dev = 0,009, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333702;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367072;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420268;  // std dev = 1,97e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.067512654492767;  // std dev = 0,002, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.11850946522345458;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0684269778442027;  // std dev = 1,32e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420267;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06842697784420262;  // std dev = 1,67e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.06842697784420261;  // std dev = 1,32e-09, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06383016300551864;  // std dev = 0,000566, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.056644041139113234;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.09271559873925338;  // std dev = 0,394, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return -0.06449830555961038;  // std dev = 0,069, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063897
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.101 seconds
Total inference time: 1.495 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06453
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.39 seconds
Refined model CLL: -0.06453


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063897
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.958 seconds
Total inference time: 1.495 seconds
AUC ROC: 1.0
Total revision time: 9.958
Best scored revision CLL: -0.06453


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 15:51:31
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_0.4': {'AUC PR': 0.823063, 'AUC ROC': 0.971565, 'Precision': [1.0, 0.5], 'Inference time': 1.301, 'CLL': -0.171653, 'Recall': 0.777778, 'F1': 0.875, 'Learning time': 1.849}, 'Inference time': 1.495, 'CLL': -0.063897, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.958}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048832;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.12544463852839186;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.11231637819360675;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1015963294878365;  // std dev = 0,000, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.09269127618926053;  // std dev = 7,60e-08, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839678;  // std dev = 8,30e-08, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109146;  // std dev = 6,83e-08, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07324622576333678;  // std dev = 1,18e-07, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06842697784420261;  // std dev = 6,32e-08, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06419184008202623;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.838 seconds
Total inference time: 1.134 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 15:51:36
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.134, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 2.838, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048832;  // std dev = 0,000, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.013 seconds
Total inference time: 0.769 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 15:51:38
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.769, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 1.013, 'F1': nan}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.5382836152341887;  // std dev = 8,038, 297,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.14185106490048804;  // std dev = 0,000, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7431307895156273;  // std dev = 2,345, 175,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=168 */
%   | | else return 0.062731167427;  // std dev = 4,914, 124,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.12544463852839197;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3637425265369214;  // std dev = 0,412, 301,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360624;  // std dev = 1,97e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.11231637819360686;  // std dev = 0,000, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5143206823381679;  // std dev = 1,854, 173,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=168 */
%   | | else return -0.008595189978187397;  // std dev = 4,882, 119,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.10159632948783656;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20610904697165428;  // std dev = 6,417, 304,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926089;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.09269127618926044;  // std dev = 1,26e-07, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1546586347689817;  // std dev = 0,367, 307,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.08518475138839678;  // std dev = 9,66e-08, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10230321278560409;  // std dev = 0,370, 320,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07877675473109143;  // std dev = 2,46e-09, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07049314759384137;  // std dev = 6,777, 323,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.07324622576333688;  // std dev = 6,59e-09, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06470122362439505;  // std dev = 6,632, 319,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=202 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06842697784420265;  // std dev = 1,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3471660494585728;  // std dev = 0,503, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2773303355415494;  // std dev = 7,30e-08, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.16691352773312415;  // std dev = 4,975, 125,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
%   | | | else return -0.06419184008202602;  // std dev = 1,00e-07, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.183996
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total learning time: 1.95 seconds
Total inference time: 1.341 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.979488
   AUC PR    = 0.870575
   CLL	      = -0.179124
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.831683
   F1        = 0.908108


Total scoring time: 2.219 seconds
Parameter learned model CLL: -0.179124


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 16, 0], 'true,true,false': [8.038, 95, 202], 'false,true,true': [2.98e-08, 32, 0], 'false,true,false': [0.0, 273, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.345, 7, 168], 'true,true,false': [4.914, 90, 34], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 22, 0], 'false,true,false': [0.0, 283, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.412, 99, 202], 'false,true,true': [1.97e-08, 26, 0], 'false,true,false': [0.0, 254, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.854, 5, 168], 'true,true,false': [4.882, 85, 34], 'false,true,true': [0.0, 21, 0], 'false,true,false': [0.0, 229, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [1.18e-08, 22, 0], 'false,true,false': [1.26e-07, 268, 0], 'true': [6.417, 102, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 19, 0], 'false,true,false': [9.66e-08, 277, 0], 'true': [0.367, 105, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.37, 118, 202], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 19, 0], 'false,true,false': [2.46e-09, 287, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 30, 0], 'false,true,false': [6.59e-09, 273, 0], 'true': [6.777, 121, 202]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [1.58e-08, 29, 0], 'false,true,false': [0.0, 249, 0], 'true': [6.632, 117, 202]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [7.3e-08, 0, 168], 'true,false,false,false': [1e-07, 286, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.503, 18, 0], 'true,true,false,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 32, 0], 'true,true,false,false': [0.0, 29, 0], 'true,false,false,true': [4.975, 91, 34]}]]
[{'': [0.2288683154875568, 4.3680905886891404e-17], 'true,true': [-6.938893903907228e-18, 0.21755149701278126], 'false': [4.3680905886891404e-17, nan], 'false,true': [2.7755575615628914e-17, -4.554761126667309e-17], 'true': [0.2288683154875568, nan]}, {'': [0.21153269098499078, -8.679267944952364e-17], 'false': [-8.679267944952364e-17, nan], 'true': [0.21153269098499078, nan], 'true,true': [0.0314343030917401, 0.19475016412104507], 'false,true,true': [0.0, -2.523234146875356e-18], 'false,true': [-4.625929269271485e-18, -7.846099113958704e-17]}, {'': [0.170119514593181, -1.126083353548373e-16], 'false,true': [1.4945309946877107e-17, -9.441266666103694e-17], 'false': [-1.126083353548373e-16, nan], 'true': [0.170119514593181, nan]}, {'': [0.15942658702510049, -7.105427357601002e-17], 'true,true': [0.01986157482350482, 0.20031918784758365], 'false': [-7.105427357601002e-17, nan], 'false,true': [-1.7182023000151233e-17, -7.950942185088457e-17], 'true': [0.15942658702510049, nan]}, {'': [0.1354489341554055, 8.269247355828753e-17], 'false,true': [6.308085367188389e-18, 5.96537744574711e-17], 'false': [8.269247355828753e-17, nan]}, {'': [0.13505535097051352, 3.600723323108616e-17], 'false,true': [0.0, 3.366741302112388e-17], 'false': [3.600723323108616e-17, nan]}, {'': [0.13685347383244423, 2.865091676452017e-18], 'false,true': [-3.620292471603771e-18, 6.189396652962545e-18], 'false': [2.865091676452017e-18, nan], 'false,true,true': [0.0, -4.382459307730881e-18], 'true': [0.13685347383244423, nan]}, {'': [0.14218870162557817, 2.8930893149841213e-17], 'false,true': [-6.530723674265627e-18, 4.3920910864291905e-17], 'false': [2.8930893149841213e-17, nan], 'false,true,true': [0.0, -6.47630097698008e-18]}, {'': [0.13786289849363773, -3.8064789415719653e-17], 'false,true': [8.953411488912552e-18, -4.458727006526733e-18], 'false': [-3.8064789415719653e-17, nan], 'false,true,true': [0.0, 8.613799328988284e-18]}, {'': [0.06799157929393417, nan], 'true,false': [0.01567606608189344, 0.06245698810580994], 'true,false,true': [3.172065784643304e-17, -8.673617379884035e-19], 'true': [0.02324747044047224, 0.06942696753472487], 'true,true,false': [0.0, -2.392722035830079e-18], 'true,true': [0.014054983803195044, -1.6821560979169039e-18], 'true,false,false': [0.1980159999999993, 3.4937088187504926e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.14185106490048766;  // std dev = 8,30e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.14185106490048816;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.1254446385283919;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.5553664367462834;  // std dev = 4,08e-08, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360629;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360629;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360629;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360697;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830997;  // std dev = 2,17e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.4175135841583096;  // std dev = 2,79e-08, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.10159632948783658;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601504;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( genre(A, D) )
%   | then return -0.092691276189261;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926087;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926071;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | | else return -0.09269127618926083;  // std dev = 7,45e-09, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.08518475138839682;  // std dev = 5,27e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.08518475138839679;  // std dev = 1,86e-09, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839676;  // std dev = 2,28e-09, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.08518475138839678;  // std dev = 5,16e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253573;  // std dev = 1,21e-08, 93,000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.2097577156325355;  // std dev = 1,56e-08, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109144;  // std dev = 6,99e-08, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.07877675473109165;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333698;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07324622576333699;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.073246225763337;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367153;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.0684269778442027;  // std dev = 1,18e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420268;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420268;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202616;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.06419184008202615;  // std dev = 1,32e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1340070300080108;  // std dev = 9,66e-08, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | | | else return -0.06419184008202611;  // std dev = 1,18e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.09625486427657545;  // std dev = 0,504, 42,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else return -0.06419184008202587;  // std dev = 1,34e-07, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063904
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.006 seconds
Total inference time: 1.471 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064323
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.478 seconds
Refined model CLL: -0.064323


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063904
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.653 seconds
Total inference time: 1.471 seconds
AUC ROC: 1.0
Total revision time: 10.653
Best scored revision CLL: -0.064323


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 15:51:52
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.471, 'parameter_0.6': {'AUC PR': 0.823063, 'AUC ROC': 0.971565, 'Precision': [1.0, 0.5], 'Inference time': 1.341, 'CLL': -0.183996, 'Recall': 0.777778, 'F1': 0.875, 'Learning time': 1.95}, 'CLL': -0.063904, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.653}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.14185106490048777;  // std dev = 1,43e-07, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.1254446385283921;  // std dev = 0,000, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.11231637819360654;  // std dev = 0,000, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.10159632948783655;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.09269127618926051;  // std dev = 1,71e-07, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2,04e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.08518475138839678;  // std dev = 1,12e-07, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.07877675473109147;  // std dev = 2,98e-08, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07324622576333713;  // std dev = 6,50e-08, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06842697784420333;  // std dev = 0,000, 407,000 (wgt'ed) examples reached here.  /* #neg=407 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.06419184008202583;  // std dev = 1,49e-07, 395,000 (wgt'ed) examples reached here.  /* #neg=395 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.382 seconds
Total inference time: 1.112 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 15:51:57
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.112, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 3.382, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.14185106490048785;  // std dev = 9,42e-08, 356,000 (wgt'ed) examples reached here.  /* #neg=356 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.128 seconds
Total inference time: 0.791 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 15:51:59
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.791, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 1.128, 'F1': nan}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.532334398758656;  // std dev = 9,362, 399,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.14185106490048746;  // std dev = 2,55e-07, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7725005593206139;  // std dev = 1,275, 231,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=229 */
%   | | else return -0.00583238224237188;  // std dev = 5,590, 195,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.12544463852839222;  // std dev = 0,000, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3814096619570376;  // std dev = 0,396, 390,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.11231637819360656;  // std dev = 0,000, 340,000 (wgt'ed) examples reached here.  /* #neg=340 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5139701195610529;  // std dev = 1,668, 233,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=229 */
%   | | else return -0.07075851531511579;  // std dev = 5,568, 191,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.10159632948783616;  // std dev = 1,56e-07, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21907468921421333;  // std dev = 6,926, 397,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.09269127618926067;  // std dev = 1,79e-07, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1537888130119456;  // std dev = 0,351, 411,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839679;  // std dev = 2,11e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.08518475138839678;  // std dev = 1,15e-07, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1158165568808671;  // std dev = 0,352, 414,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=269 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.07877675473109141;  // std dev = 4,75e-09, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11041316179438156;  // std dev = 6,902, 398,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.07324622576333713;  // std dev = 3,61e-09, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06108717159760666;  // std dev = 7,280, 419,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=269 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.06842697784420315;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3905543500672239;  // std dev = 0,513, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2572339516816631;  // std dev = 2,56e-07, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   | | | else return -0.06419184008202611;  // std dev = 9,86e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.19369190562117158;  // std dev = 5,545, 173,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=40 */
%   | | | else return -0.0641918400820259;  // std dev = 1,27e-07, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.175545
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total learning time: 2.126 seconds
Total inference time: 1.381 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.981902
   AUC PR    = 0.886022
   CLL	      = -0.170651
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.851301
   F1        = 0.919679


Total scoring time: 2.524 seconds
Parameter learned model CLL: -0.170651


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 9, 0], 'true,true,false': [9.362, 130, 269], 'false,true,true': [5.05e-08, 48, 0], 'false,true,false': [2.55e-07, 367, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.275, 2, 229], 'true,true,false': [5.59, 155, 40], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 27, 0], 'false,true,false': [0.0, 372, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.396, 121, 269], 'false,true,true': [0.0, 28, 0], 'false,true,false': [0.0, 340, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.668, 4, 229], 'true,true,false': [5.568, 151, 40], 'false,true,true': [0.0, 35, 0], 'false,true,false': [1.56e-07, 368, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 36, 0], 'false,true,false': [1.79e-07, 372, 0], 'true': [6.926, 128, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.11e-08, 42, 0], 'false,true,false': [1.15e-07, 344, 0], 'true': [0.351, 142, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.352, 145, 269], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 34, 0], 'false,true,false': [4.75e-09, 366, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 3, 0], 'false,true,true,false': [9.13e-09, 37, 0], 'false,true,false': [3.61e-09, 357, 0], 'true': [6.902, 129, 269]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [0.0, 38, 0], 'false,true,false': [0.0, 333, 0], 'true': [7.28, 150, 269]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [2.56e-07, 0, 229], 'true,false,false,false': [1.27e-07, 311, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.513, 11, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [9.86e-09, 29, 0], 'true,true,false,false': [0.0, 36, 0], 'true,false,false,true': [5.545, 133, 40]}]]
[{'': [0.22461913687043789, 2.1829927423954886e-16], 'true,true': [-9.25185853854297e-18, 0.21965942424985116], 'false': [2.1829927423954886e-16, nan], 'false,true': [5.3198186596622086e-17, 1.7666764206569248e-16], 'true': [0.22461913687043789, nan]}, {'': [0.22753061952970213, -1.275107632242754e-16], 'false': [-1.275107632242754e-16, nan], 'true': [0.22753061952970213, nan], 'true,true': [0.007041970116504202, 0.16022650709566774], 'false,true,true': [0.0, -6.1679056923619804e-18], 'false,true': [-1.0408340855860843e-17, -1.2415397264625405e-16]}, {'': [0.15718461895859917, -2.6548811458427657e-17], 'false,true': [-1.3877787807814457e-17, -3.657205257588751e-17], 'false': [-2.6548811458427657e-17, nan], 'true': [0.15718461895859917, nan]}, {'': [0.16430654733282285, 1.2562325042904997e-16], 'true,true': [0.011934258795375597, 0.16229689424947363], 'false': [1.2562325042904997e-16, nan], 'false,true': [-1.1102230246251566e-17, 6.637202864606914e-17], 'true': [0.16430654733282285, nan]}, {'': [0.1208127418123701, 4.5715065719859385e-17], 'false,true': [-7.709882115452476e-18, 8.59527502935605e-17], 'false': [4.5715065719859385e-17, nan]}, {'': [0.12324288583543838, 3.9116666152596186e-17], 'false,true': [1.057355261547768e-17, 3.872871016134267e-17], 'false': [3.9116666152596186e-17, nan]}, {'': [0.12418225179047944, 3.746658346129561e-17], 'false,true': [-2.250452076942885e-18, 2.3053811440303798e-17], 'false': [3.746658346129561e-17, nan], 'false,true,true': [0.0, -2.44902137784961e-18], 'true': [0.12418225179047944, nan]}, {'': [0.11969516186823752, 1.1186126192696791e-18], 'false,true': [2.7755575615628915e-18, 1.3061447348531253e-17], 'false': [1.1186126192696791e-18, nan], 'false,true,true': [1.1564823173178713e-18, 2.250452076942885e-18]}, {'': [0.12649491056306236, -1.0362081563168128e-16], 'false,true': [1.32169407693471e-18, -7.734887138529619e-17], 'false': [-1.0362081563168128e-16, nan], 'false,true,true': [0.0, -7.304098846218135e-19]}, {'': [0.0707309265239072, nan], 'true,false': [0.010307551492640066, 0.06738777276143203], 'true,false,true': [2.8700962033977844e-16, 3.3498108501621104e-18], 'true': [0.024308733264026338, 0.07247760040964707], 'true,true,false': [0.0, -7.709882115452476e-19], 'true,true': [0.023971096316883624, -1.50030138462859e-18], 'true,false,false': [0.1777540178422265, 5.2119794725168124e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( actor(B) )
%   | | then return -0.14185106490048768;  // std dev = 6,32e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.14185106490048768;  // std dev = 1,71e-07, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.12544463852839227;  // std dev = 0,000, 406,000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 4,15e-08, 118,000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.5553664367462833;  // std dev = 4,28e-08, 151,000 (wgt'ed) examples reached here.  /* #pos=151 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360617;  // std dev = 9,42e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.14821671031848974;  // std dev = 0,062, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360629;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.1123163781936063;  // std dev = 5,27e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.11669246497186798;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360665;  // std dev = 0,000, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783648;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else return -0.15051051408315394;  // std dev = 0,143, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.10569548037367614;  // std dev = 0,006, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783638;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else return -0.10159632948783656;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926089;  // std dev = 4,75e-09, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09072250668438889;  // std dev = 0,008, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926094;  // std dev = 1,86e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.09991306551801252;  // std dev = 0,005, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926049;  // std dev = 1,05e-08, 354,000 (wgt'ed) examples reached here.  /* #neg=354 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926087;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.0919809683237474;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694879;  // std dev = 2,04e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 5,67e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | | else return -0.08524446458850313;  // std dev = 0,000318, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.10645140122988477;  // std dev = 0,095, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 1,86e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.09202191715885835;  // std dev = 0,004, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839678;  // std dev = 6,11e-09, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839678;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08458158935795486;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2097577156325348;  // std dev = 1,75e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(B) )
%   | | then return -0.07878041156883057;  // std dev = 2,31e-05, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else return -0.12236664891832624;  // std dev = 0,051, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.08657628010678974;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07825858362563741;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109143;  // std dev = 3,23e-09, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
%   | | else if ( actor(A) )
%   | | | then return -0.0787767547310917;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0777625056617935;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527714;  // std dev = 5,89e-09, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(B) )
%   | | then return -0.07325260960631792;  // std dev = 2,91e-05, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else return -0.10084243987641628;  // std dev = 0,101, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07997032673404905;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.07236564979878785;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333713;  // std dev = 3,48e-09, 353,000 (wgt'ed) examples reached here.  /* #neg=353 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07309632616660303;  // std dev = 0,000519, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(B) )
%   | | then return -0.06843452326967976;  // std dev = 3,08e-05, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else return -0.09224349929562682;  // std dev = 0,094, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07428065165526153;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06836269948416697;  // std dev = 0,001, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420321;  // std dev = 0,000, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
%   | | else if ( actor(B) )
%   | | | then return -0.06843359348596043;  // std dev = 1,59e-05, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.0680141971706477;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return -0.06287537050237278;  // std dev = 0,004, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.06435386541378248;  // std dev = 0,001, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.08896183226027542;  // std dev = 0,871, 110,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=85 */
%   | | | else return 0.1017505702635646;  // std dev = 0,959, 172,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=144 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419189650274337;  // std dev = 0,000116, 449,000 (wgt'ed) examples reached here.  /* #neg=449 */
%   | | | else return 0.09760315590984114;  // std dev = 0,537, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064283
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.654 seconds
Total inference time: 1.436 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065457
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.534 seconds
Refined model CLL: -0.065457


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064283
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.838000000000001 seconds
Total inference time: 1.436 seconds
AUC ROC: 1.0
Total revision time: 11.838000000000001
Best scored revision CLL: -0.065457


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 15:52:14
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.436, 'parameter_0.8': {'AUC PR': 0.823063, 'AUC ROC': 0.971565, 'Precision': [1.0, 0.5], 'Inference time': 1.381, 'CLL': -0.175545, 'Recall': 0.777778, 'F1': 0.875, 'Learning time': 2.126}, 'CLL': -0.064283, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.838000000000001}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.14185106490048732;  // std dev = 2,49e-07, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839227;  // std dev = 0,000, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.11231637819360599;  // std dev = 0,000, 478,000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.10159632948783599;  // std dev = 2,21e-07, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.092691276189261;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.09269127618926126;  // std dev = 0,000, 480,000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.08518475138839678;  // std dev = 1,37e-07, 522,000 (wgt'ed) examples reached here.  /* #neg=522 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07877675473109187;  // std dev = 0,000, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333718;  // std dev = 2,11e-08, 479,000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420271;  // std dev = 1,05e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.0684269778442035;  // std dev = 0,000, 498,000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.06419184008202568;  // std dev = 1,94e-07, 492,000 (wgt'ed) examples reached here.  /* #neg=492 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.524 seconds
Total inference time: 1.066 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 15:52:19
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.066, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 3.524, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.14185106490048718;  // std dev = 2,98e-07, 453,000 (wgt'ed) examples reached here.  /* #neg=453 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.24 seconds
Total inference time: 0.796 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 15:52:21
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.796, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 1.24, 'F1': nan}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordauthor(J, H).;false;true
0;false,true,false;title(K, I), venue(K, A).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true,true;samebib(J, K), venue(K, B).;false;false
1;false,true;title(J, I), venue(J, A).;true;true
1;false,true,false;haswordauthor(L, H).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
2;true,true,true;haswordtitle(F, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,true;author(J, I), venue(J, B).;false;false
2;false,true;haswordauthor(I, G).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true,true;haswordauthor(F, C).;false;true
3;false,true,true;author(K, I), venue(K, B).;false;false
3;false,true;haswordtitle(J, H).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(J, I), venue(J, B).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;true,true;haswordtitle(E, C).;true;false
5;false,true,true;author(J, I), title(J, H).;false;false
5;false,true;haswordauthor(I, G).;true;true
5;false,true,false;title(K, H), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false;haswordvenue(A, G), haswordauthor(H, G).;true;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true;haswordtitle(F, D).;true;false
6;false,true,true;samebib(I, J), venue(J, A).;false;false
6;false,true;author(I, H), venue(I, B).;true;true
6;false,true,false;haswordtitle(K, G).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.5417189148155324;  // std dev = 10,327, 493,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.14185106490048727;  // std dev = 3,01e-07, 415,000 (wgt'ed) examples reached here.  /* #neg=415 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7694086755620744;  // std dev = 1,558, 291,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=288 */
%   | | else return 0.015341900078593944;  // std dev = 6,092, 216,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.1254446385283923;  // std dev = 0,000, 448,000 (wgt'ed) examples reached here.  /* #neg=448 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3284535779133771;  // std dev = 0,416, 532,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360629;  // std dev = 3,65e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.11231637819360606;  // std dev = 0,000, 436,000 (wgt'ed) examples reached here.  /* #neg=436 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5313517659003375;  // std dev = 1,449, 291,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=288 */
%   | | else return -0.07738521933029398;  // std dev = 6,217, 241,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.1015963294878357;  // std dev = 2,73e-07, 436,000 (wgt'ed) examples reached here.  /* #neg=436 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2006333983723917;  // std dev = 8,121, 523,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926108;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.0926912761892611;  // std dev = 1,03e-07, 433,000 (wgt'ed) examples reached here.  /* #neg=433 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1577572393090306;  // std dev = 0,354, 519,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839685;  // std dev = 2,98e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.08518475138839678;  // std dev = 1,37e-07, 426,000 (wgt'ed) examples reached here.  /* #neg=426 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.11463729920058406;  // std dev = 0,357, 528,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=337 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07877675473109177;  // std dev = 8,69e-09, 454,000 (wgt'ed) examples reached here.  /* #neg=454 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08399044812833834;  // std dev = 8,259, 537,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333707;  // std dev = 1,39e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.07324622576333757;  // std dev = 0,000, 451,000 (wgt'ed) examples reached here.  /* #neg=451 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07810872748494883;  // std dev = 8,101, 521,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=337 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420271;  // std dev = 1,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.06842697784420353;  // std dev = 0,000, 490,000 (wgt'ed) examples reached here.  /* #neg=490 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3224051459090959;  // std dev = 0,641, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.26775161351625304;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.16796695434114392;  // std dev = 6,087, 201,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=49 */
%   | | | else return -0.06419184008202562;  // std dev = 1,90e-07, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.173159
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total learning time: 2.895 seconds
Total inference time: 1.265 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.982257
   AUC PR    = 0.888508
   CLL	      = -0.168673
   Precision = 0.808989 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.831169


Total scoring time: 2.448 seconds
Parameter learned model CLL: -0.168673


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 19, 0], 'true,true,false': [10.327, 156, 337], 'false,true,true': [5.05e-08, 48, 0], 'false,true,false': [3.01e-07, 415, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true,true': 'genre(B, H)', 'false,true': 'genre(A, G)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.558, 3, 288], 'true,true,false': [6.092, 167, 49], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 46, 0], 'false,true,false': [0.0, 448, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.416, 195, 337], 'false,true,true': [3.65e-08, 57, 0], 'false,true,false': [0.0, 436, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'false': 'movie(F, A)', 'false,true': 'genre(B, G)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.449, 3, 288], 'true,true,false': [6.217, 192, 49], 'false,true,true': [0.0, 40, 0], 'false,true,false': [2.73e-07, 436, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 46, 0], 'false,true,false': [1.03e-07, 433, 0], 'true': [8.121, 186, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true': [2.98e-08, 52, 0], 'false,true,false': [1.37e-07, 426, 0], 'true': [0.354, 182, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)', 'false,true,true': 'genre(A, G)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.357, 191, 337], 'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [0.0, 49, 0], 'false,true,false': [8.69e-09, 454, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 3, 0], 'false,true,true,false': [1.39e-08, 45, 0], 'false,true,false': [0.0, 451, 0], 'true': [8.259, 200, 337]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [2.63e-09, 7, 0], 'false,true,true,false': [1.05e-08, 48, 0], 'false,true,false': [0.0, 490, 0], 'true': [8.101, 184, 337]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 0, 288], 'true,false,false,false': [1.9e-07, 389, 0], 'false': [0.0, 0, 0], 'true,true,true': [0.641, 26, 0], 'true,true,false,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 51, 0], 'true,true,false,false': [0.0, 49, 0], 'true,false,false,true': [6.087, 152, 49]}]]
[{'': [0.22497177124023698, 1.3811845835509507e-16], 'true,true': [0.0, 0.21630206254706105], 'false': [1.3811845835509507e-16, nan], 'false,true': [5.3198186596622086e-17, 2.1829927423954886e-16], 'true': [0.22497177124023698, nan]}, {'': [0.2170247412643288, -1.3883350047416786e-16], 'false': [-1.3883350047416786e-16, nan], 'true': [0.2170247412643288, nan], 'true,true': [0.008341275559781565, 0.1718019443633168], 'false,true,true': [0.0, -3.137586808723268e-17], 'false,true': [-3.2653618371328135e-17, -1.3283025473193837e-16]}, {'': [0.17274862943596037, -3.603157889250001e-18], 'false,true': [2.337311630789803e-17, -1.2222638803212733e-17], 'false': [-3.603157889250001e-18, nan], 'true': [0.17274862943596037, nan]}, {'': [0.16842823117717987, 2.2017868387524114e-16], 'true,true': [0.007211483536029743, 0.16039851070430614], 'false': [2.2017868387524114e-16, nan], 'false,true': [-5.551115123125783e-18, 1.7111694324497827e-16], 'true': [0.16842823117717987, nan]}, {'': [0.12610216001363092, -1.4833877573279752e-17], 'false,true': [-4.827056628805028e-18, 2.4614644425869523e-17], 'false': [-1.4833877573279752e-17, nan]}, {'': [0.12559580211205207, 4.4594732369880764e-17], 'false,true': [1.708035422500241e-17, 4.378344322465406e-17], 'false': [4.4594732369880764e-17, nan]}, {'': [0.12714622004380843, 1.9232209875396412e-17], 'false,true': [1.02798428206033e-18, 7.531909506267582e-17], 'false': [1.9232209875396412e-17, nan], 'false,true,true': [-6.938893903907229e-19, -2.2657612747452172e-18], 'true': [0.12714622004380843, nan]}, {'': [0.12701535287105314, -3.5598333454914836e-18], 'false,true': [3.469446951953614e-18, -4.9233837012202066e-17], 'false': [-3.5598333454914836e-18, nan], 'false,true,true': [1.1564823173178713e-18, 4.3175339846533866e-18]}, {'': [0.12594800580374532, -1.181521750977231e-16], 'false,true': [5.046468293750712e-18, -1.2235110883624173e-16], 'false': [-1.181521750977231e-16, nan], 'false,true,true': [9.912705577010326e-19, 2.3129646346357427e-18]}, {'': [0.06796243181281666, nan], 'true,false': [0.014082880164709492, 0.06522357755973689], 'true,false,true': [-8.758426083154013e-16, -8.707631565687502e-18], 'true': [0.019918337775679286, 0.06990302752550819], 'true,true,false': [0.0, -4.5315225494904345e-18], 'true,true': [0.015790370339897095, -4.7132109535973624e-18], 'true,false,false': [0.18435187247840298, 9.247101798934466e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, G).;true;true
6;false;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.14185106490048807;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.1418510649004872;  // std dev = 2,98e-07, 435,000 (wgt'ed) examples reached here.  /* #neg=435 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.1254446385283923;  // std dev = 0,000, 450,000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360629;  // std dev = 8,43e-08, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.11231637819360636;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.11231637819360632;  // std dev = 2,28e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.11231637819360601;  // std dev = 0,000, 445,000 (wgt'ed) examples reached here.  /* #neg=445 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783653;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #neg=195 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783652;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | else return -0.1015963294878366;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.09269127618926096;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.09269127618926067;  // std dev = 1,79e-07, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948906;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.25517224256948845;  // std dev = 1,29e-08, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,83e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.08518475138839679;  // std dev = 2,36e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( genre(A, D) )
%   | then return -0.0851847513883968;  // std dev = 3,73e-09, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 1,23e-07, 396,000 (wgt'ed) examples reached here.  /* #neg=396 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.08518475138839679;  // std dev = 1,61e-09, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253506;  // std dev = 1,75e-08, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.20975771563253492;  // std dev = 1,94e-08, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.07877675473109164;  // std dev = 4,08e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.07877675473109187;  // std dev = 0,000, 468,000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527764;  // std dev = 0,000, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.17709649774527764;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333717;  // std dev = 5,16e-08, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420264;  // std dev = 9,13e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06842697784420264;  // std dev = 1,18e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420262;  // std dev = 1,67e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.06842697784420339;  // std dev = 0,000, 419,000 (wgt'ed) examples reached here.  /* #neg=419 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.06419184008202618;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10500231731190779;  // std dev = 0,777, 123,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=105 */
%   | | | else return 0.10450766329693578;  // std dev = 1,034, 215,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=183 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.08996283665466925;  // std dev = 0,654, 63,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=49 */
%   | | | else return -0.06419184008202539;  // std dev = 2,46e-07, 546,000 (wgt'ed) examples reached here.  /* #neg=546 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064236
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.987 seconds
Total inference time: 1.476 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065105
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.739 seconds
Refined model CLL: -0.065105


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064236
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.068999999999999 seconds
Total inference time: 1.476 seconds
AUC ROC: 1.0
Total revision time: 13.068999999999999
Best scored revision CLL: -0.065105


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 15:52:38
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'parameter_1.0': {'AUC PR': 0.823063, 'AUC ROC': 0.971565, 'Precision': [0.945946, 0.5], 'Inference time': 1.265, 'CLL': -0.173159, 'Recall': 0.777778, 'F1': 0.853659, 'Learning time': 2.895}, 'Inference time': 1.476, 'CLL': -0.064236, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.068999999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.14185106490048893;  // std dev = 0,000, 677,000 (wgt'ed) examples reached here.  /* #neg=677 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1254446385283923;  // std dev = 0,000, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.11231637819360582;  // std dev = 0,000, 603,000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783624;  // std dev = 3,16e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.10159632948783552;  // std dev = 3,45e-07, 589,000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.09269127618926173;  // std dev = 0,000, 593,000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839678;  // std dev = 1,52e-07, 629,000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109232;  // std dev = 0,000, 582,000 (wgt'ed) examples reached here.  /* #neg=582 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.07324622576333681;  // std dev = 1,53e-07, 630,000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420271;  // std dev = 1,05e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.06842697784420369;  // std dev = 0,000, 664,000 (wgt'ed) examples reached here.  /* #neg=664 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.06419184008202544;  // std dev = 2,16e-07, 584,000 (wgt'ed) examples reached here.  /* #neg=584 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.499 seconds
Total inference time: 1.188 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 15:52:44
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.188, 'CLL': -0.063719, 'Recall': 1.0, 'Learning time': 4.499, 'F1': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.1418510649004883;  // std dev = 0,000, 587,000 (wgt'ed) examples reached here.  /* #neg=587 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.427 seconds
Total inference time: 0.781 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 15:52:46
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Precision': [nan, 0.5], 'Inference time': 0.781, 'CLL': -0.158221, 'Recall': 0.0, 'Learning time': 1.427, 'F1': nan}


