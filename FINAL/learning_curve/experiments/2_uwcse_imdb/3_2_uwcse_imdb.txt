Starting experiment #3 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.858148935099512;  // std dev = 1,46e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then if ( publication(E, G), professor(G) )
%   | | | then return 0.05814893509951233;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(H, B), ta(I, A, J) )
%   | | | then return 0.6968586125188665;  // std dev = 2,048, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.5312258581764351;  // std dev = 3,383, 52,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=35 */
%   else return -0.14185106490048802;  // std dev = 0,000, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.7281276940338212;  // std dev = 0,061, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.4554004213065484;  // std dev = 1,464, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.6759951513413892;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then if ( publication(K, A) )
%   | | | then return -0.14907796748644583;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.26940110966819925;  // std dev = 1,404, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( projectmember(L, B) )
%   | | | then return 0.6661234306723361;  // std dev = 0,940, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.435802857151548;  // std dev = 4,468, 91,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=60 */
%   else return -0.1254446385283914;  // std dev = 0,000, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.5820245172067862;  // std dev = 0,175, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.2327419229630953;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.47516616538733786;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), professor(H) )
%   | | | then return 0.07929849650483671;  // std dev = 2,535, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.6625093266971659;  // std dev = 0,037, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.16036192215364972;  // std dev = 1,487, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.4374419841392286;  // std dev = 3,476, 67,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=51 */
%   else return -0.11231637819360649;  // std dev = 2,98e-08, 208,000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | | then return 0.4352971415129845;  // std dev = 0,153, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.2988463114147969;  // std dev = 1,898, 27,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else if ( publication(C, G), ta(H, G, I) )
%   | | | then return 0.2000680368252533;  // std dev = 2,228, 24,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return -0.055044738988456805;  // std dev = 1,732, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | then if ( ta(M, A, N) )
%   | | | then return 0.5619931849854496;  // std dev = 0,119, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.438492298379398;  // std dev = 1,300, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( tempadvisedby(P, B) )
%   | | | then return 0.32499841414146263;  // std dev = 1,732, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.4635865661262538;  // std dev = 1,623, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else return -0.10159632948783642;  // std dev = 0,000, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.35872599433902597;  // std dev = 0,236, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return -0.010582759484761336;  // std dev = 1,287, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.26080692892001556;  // std dev = 3,531, 71,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=54 */
%   | else if ( projectmember(G, B) )
%   | | then if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.02125630174015483;  // std dev = 0,823, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3321295969771558;  // std dev = 0,980, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.03565784400122182;  // std dev = 1,302, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.10906904041819095;  // std dev = 1,574, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( ta(L, A, M) )
%   | then return -0.10171928631732739;  // std dev = 0,061, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.08892863877762097;  // std dev = 0,574, 153,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( student(A) )
%   | then if ( publication(C, A) )
%   | | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | | then return 0.124085810905494;  // std dev = 0,868, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2514757723005752;  // std dev = 0,991, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return -0.057096431952672805;  // std dev = 1,402, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.17705170340061702;  // std dev = 3,586, 75,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=54 */
%   | else return -0.0854784253809309;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( professor(B), publication(H, A) )
%   | then if ( student(A), projectmember(I, B) )
%   | | then return 0.2636558842060689;  // std dev = 0,811, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return -0.05819083451524465;  // std dev = 0,818, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.09137481789787215;  // std dev = 0,986, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.08956982112033005;  // std dev = 0,165, 185,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | | then return 0.2603813753327022;  // std dev = 0,103, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.19560107750052055;  // std dev = 0,977, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.004709262667210171;  // std dev = 2,349, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.149112684579212;  // std dev = 3,188, 60,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=47 */
%   | else if ( ta(G, A, H) )
%   | | then return 0.15049165730364128;  // std dev = 1,097, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.22041149881323904;  // std dev = 1,033, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.49404139758832055;  // std dev = 0,149, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07865585868931482;  // std dev = 0,015, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.13410595485352292;  // std dev = 1,623, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return -0.031529759670548205;  // std dev = 2,447, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( publication(C, E), inphase(E, F) )
%   | | | then return 0.12234665299591357;  // std dev = 2,828, 47,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | | | else return 0.313145057028002;  // std dev = 0,100, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | then return 0.5100896824362727;  // std dev = 0,150, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.09590851916563072;  // std dev = 1,036, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.16394638787125465;  // std dev = 1,953, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   else return -0.07306654223011934;  // std dev = 0,007, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.17939692093681542;  // std dev = 0,159, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( ta(G, H, E), publication(F, H) )
%   | | | then return 0.4003266702858669;  // std dev = 0,505, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.09667654919422161;  // std dev = 2,201, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | else if ( publication(I, B) )
%   | | | then return -0.04284363627320122;  // std dev = 3,054, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.10984853379256557;  // std dev = 2,020, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.06834295325133126;  // std dev = 0,014, 201,000 (wgt'ed) examples reached here.  /* #neg=201 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return -0.0725774840277297;  // std dev = 1,681, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.23181250051495766;  // std dev = 0,080, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.05632529790269121;  // std dev = 0,907, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.2538468101794937;  // std dev = 1,281, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( publication(J, B), publication(J, A) )
%   | | then return 0.15685345400840442;  // std dev = 0,089, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( ta(K, A, L), tempadvisedby(M, B) )
%   | | | then return 0.3631361968710518;  // std dev = 0,136, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.025762231453566844;  // std dev = 3,701, 70,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   else return -0.06417536525822692;  // std dev = 0,013, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */


Starting fold 1

Target train facts examples: 537
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 159
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048782;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8,02e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 2,11e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 8,56e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 2,58e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716014955;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0545760946038544;  // std dev = 0,120, 141,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.27068100273853224;  // std dev = 0,250, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.0865774883960086;  // std dev = 0,005, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08820234823822232;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08820234823822237;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.22087030276664252;  // std dev = 0,220, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.0796115945035485;  // std dev = 0,005, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08136177209924009;  // std dev = 3,94e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18534221114133886;  // std dev = 0,195, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return -0.07338680115475002;  // std dev = 0,002, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0754840710431275;  // std dev = 2,58e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15906175162977407;  // std dev = 0,174, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06901565757412167;  // std dev = 0,004, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07038222921744722;  // std dev = 3,65e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.1389830561083729;  // std dev = 0,156, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.06459495766449133;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0659141676365529;  // std dev = 2,98e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064872
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.544 seconds
Total inference time: 1.496 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06583
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.301 seconds
Parameter learned model CLL: -0.06583


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 65], 'false': [0.0, 130, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [5.27e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.19e-07, 0, 65], 'false': [8.02e-08, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [1.39e-08, 15, 0], 'true,true': [2.11e-08, 0, 65], 'false': [8.56e-08, 121, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false,true': [5.27e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false': [2.58e-08, 110, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 52], 'true,true,false,true': [0.0, 12, 0], 'true,false': [0.0, 0, 0], 'false': [0.12, 128, 13], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.25, 0, 65], 'false,false': [0.0, 115, 0], 'true,true,false,true': [0.005, 13, 0], 'true,false': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.22, 0, 65], 'true,true,false,true': [0.005, 12, 0], 'true,false': [0.0, 0, 0], 'false': [3.94e-08, 109, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.002, 9, 0], 'false': [2.58e-08, 121, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.195, 0, 65]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.004, 10, 0], 'true,true': [0.174, 0, 65], 'false': [3.65e-08, 116, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.156, 0, 65], 'true,false': [0.0, 0, 0], 'true,true,false': [0.002, 4, 0], 'false': [2.98e-08, 125, 0]}]]
[{'': [0.1523437499999991, -1.708035422500241e-17], 'true': [-8.745141363201234e-16, -1.4802973661668754e-17], 'true,false,true': [-1.4802973661668754e-17, nan], 'true,false': [-1.4802973661668754e-17, nan], 'true,true': [-8.745141363201234e-16, nan]}, {'': [0.0824935525515319, 5.3660779523549233e-17], 'true': [2.1862853408003084e-16, 2.7755575615628915e-18], 'true,false,true': [2.7755575615628915e-18, nan], 'true,false': [2.7755575615628915e-18, nan], 'true,true': [2.1862853408003084e-16, nan]}, {'': [0.06791489575498481, 6.055761952500853e-17], 'true': [4.372570681600617e-16, 1.295260195396016e-17], 'true,false,true': [1.295260195396016e-17, nan], 'true,false': [1.295260195396016e-17, nan]}, {'': [0.028787972047249664, 6.0557619525008536e-18], 'true': [0.028787972047249664, nan], 'true,true,false': [3.0839528461809902e-18, nan], 'true,true': [-3.006142343600424e-16, 3.0839528461809902e-18]}, {'': [0.0260358732554955, 0.014304168047148503], 'true': [0.0260358732554955, nan], 'true,true,false': [0.0, nan], 'true,true': [-5.124106267500723e-17, 0.0]}, {'': [0.021038523735565057, -2.9927751098591176e-17], 'true': [0.01852900895808219, 0.0], 'true,true,false': [2.2630024344332086e-06, nan], 'true,true': [0.0009620865679235744, 2.2630024344332086e-06], 'true,true,true': [0.0009620865679235744, nan], 'false': [nan, -2.9927751098591176e-17]}, {'': [0.012509596061704594, 1.4259745270414855e-17], 'true': [0.012509596061704594, nan], 'true,true,true': [0.000747665829322028, nan], 'true,true,false': [1.751640862026708e-06, nan], 'true,true': [0.000747665829322028, 1.751640862026708e-06]}, {'': [0.007665081672215039, 5.50523813863714e-18], 'true': [0.007665081672215039, nan], 'true,true,true': [0.0005848697520745393, 6.80442043346959e-07], 'true,true': [0.007665081672215039, nan]}, {'': [0.006413826047623802, 1.1485065771984378e-17], 'true': [0.0004644649382865334, 1.2759477096925541e-06], 'true,false,true': [1.2759477096925541e-06, nan], 'true,false': [1.2759477096925541e-06, nan]}, {'': [0.0026166957774484325, 7.105427357601002e-18], 'true': [0.0026166957774484325, nan], 'true,true': [0.00037510982561013493, 1.010973649756379e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.12544463852839127;  // std dev = 2,11e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360622;  // std dev = 8,16e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014955;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.18291080604367946;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.09269127618926083;  // std dev = 7,60e-08, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2560048741455464;  // std dev = 0,038, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.09771098118041335;  // std dev = 0,059, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.08518475138839691;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0851847513883968;  // std dev = 6,05e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21035029557119544;  // std dev = 0,033, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.08715105764494144;  // std dev = 0,042, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310916;  // std dev = 5,87e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1255614481368925;  // std dev = 0,105, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else return 0.14972435762998543;  // std dev = 0,080, 45,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0732462257633371;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15795218429760904;  // std dev = 0,028, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09037366880347056;  // std dev = 0,057, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06842697784420267;  // std dev = 4,34e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1380616594025491;  // std dev = 0,025, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.08358167953170316;  // std dev = 0,051, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063792
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.759 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065778
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.327 seconds
Refined model CLL: -0.065778


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063792
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.930999999999999 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0
Total revision time: 5.930999999999999
Best scored revision CLL: -0.065778


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:57:00
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064872, 'Learning time': 1.544, 'Inference time': 1.496}, 'CLL': -0.063792, 'Learning time': 5.930999999999999, 'Inference time': 1.431}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,19e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.12544463852839136;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360622;  // std dev = 8,16e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10159632948783631;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.0926912761892609;  // std dev = 6,32e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6,41e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07900485984021025;  // std dev = 0,028, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07402451264238602;  // std dev = 0,046, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,94e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06923681400143769;  // std dev = 0,049, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06454304643110072;  // std dev = 0,033, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063318
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.064 seconds
Total inference time: 1.466 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:57:04
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063318, 'Learning time': 2.064, 'Inference time': 1.466}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.804 seconds
Total inference time: 0.88 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:57:05
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 0.804, 'Inference time': 0.88}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839166;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,15e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360678;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830914;  // std dev = 3,37e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716015017;  // std dev = 1,40e-07, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06165076863401485;  // std dev = 0,109, 293,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.26856116278743636;  // std dev = 0,338, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08563025823069484;  // std dev = 0,004, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08763503902103574;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08763503902103553;  // std dev = 1,13e-07, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21936768490259176;  // std dev = 0,299, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07920071865068083;  // std dev = 0,005, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08087672151803656;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18423858791185174;  // std dev = 0,264, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return -0.07369522689664951;  // std dev = 0,004, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07506486944523381;  // std dev = 6,14e-08, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15822389631178446;  // std dev = 0,236, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06923324504317041;  // std dev = 0,004, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07001650688693001;  // std dev = 4,94e-08, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.1383285242915221;  // std dev = 0,212, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.06478301520738486;  // std dev = 0,004, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06559243636994651;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064597
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.259 seconds
Total inference time: 1.364 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065539
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.022 seconds
Parameter learned model CLL: -0.065539


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [1.49e-08, 23, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [7.63e-07, 0, 130], 'false': [0.0, 213, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 28, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 130], 'false': [0.0, 213, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [1.49e-08, 17, 0], 'true,true': [4.15e-08, 0, 130], 'false': [0.0, 243, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [3.37e-08, 0, 130], 'true,true,false,true': [0.0, 19, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 226, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.4e-07, 0, 108], 'true,true,false,true': [0.0, 16, 0], 'true,false': [0.0, 0, 0], 'false': [0.109, 271, 22], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.338, 0, 130], 'false,false': [1.13e-07, 222, 0], 'true,true,false,true': [0.004, 22, 0], 'true,false': [0.0, 10, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.299, 0, 130], 'true,true,false,true': [0.005, 30, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 229, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.004, 21, 0], 'false': [6.14e-08, 232, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.264, 0, 130]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.004, 18, 0], 'true,true': [0.236, 0, 130], 'false': [4.94e-08, 240, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.212, 0, 130], 'true,false': [0.0, 0, 0], 'true,true,false': [0.004, 21, 0], 'false': [0.0, 236, 0]}]]
[{'': [0.12772865137340791, -2.251719937267923e-16], 'true': [4.481884948640632e-15, 9.654113257610057e-18], 'true,false,true': [9.654113257610057e-18, nan], 'true,false': [9.654113257610057e-18, nan], 'true,true': [4.481884948640632e-15, nan]}, {'': [0.10409176836136798, -3.3358813885450714e-17], 'true': [-1.7490282726402467e-15, -5.9476233462061954e-18], 'true,false,true': [-5.9476233462061954e-18, nan], 'true,false': [-5.9476233462061954e-18, nan], 'true,true': [-1.7490282726402467e-15, nan]}, {'': [0.04559298229529514, -8.041121495227472e-17], 'true': [1.7490282726402467e-15, 1.3061447348531253e-17], 'true,false,true': [1.3061447348531253e-17, nan], 'true,false': [1.3061447348531253e-17, nan]}, {'': [0.029980789290613777, -7.663486364669222e-17], 'true': [0.029980789290613777, nan], 'true,true,false': [-5.843279076974508e-18, nan], 'true,true': [1.147799803920162e-15, -5.843279076974508e-18]}, {'': [0.0192064842650005, 0.011868729664402495], 'true': [0.0192064842650005, nan], 'true,true,false': [-5.204170427930421e-18, nan], 'true,true': [1.809252336426181e-16, -5.204170427930421e-18]}, {'': [0.02066252084377831, 5.801165353897214e-17], 'true': [0.016282186497228474, -2.7755575615628915e-18], 'true,true,false': [8.931435594111187e-07, nan], 'true,true': [0.0008800192698670273, 8.931435594111187e-07], 'true,true,true': [0.0008800192698670273, nan], 'false': [nan, 5.801165353897214e-17]}, {'': [0.01413787555515294, -8.726643861682453e-18], 'true': [0.01413787555515294, nan], 'true,true,true': [0.000685940362603152, nan], 'true,true,false': [8.327975845249617e-07, nan], 'true,true': [0.000685940362603152, 8.327975845249617e-07]}, {'': [0.00842904474012228, 1.6270509843644534e-17], 'true': [0.00842904474012228, nan], 'true,true,true': [0.0005380301726773677, 8.258047051516528e-07], 'true,true': [0.00842904474012228, nan]}, {'': [0.005903309551150953, 1.0177044392397268e-17], 'true': [0.00042824612502131006, 9.907147596034516e-07], 'true,false,true': [9.907147596034516e-07, nan], 'true,false': [9.907147596034516e-07, nan]}, {'': [0.005237889789466026, -1.4113004550319786e-17], 'true': [0.005237889789466026, nan], 'true,true': [0.00034652223212756797, 8.393437590336379e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048843;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.12544463852839166;  // std dev = 0,000, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.1123163781936067;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830914;  // std dev = 3,86e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783659;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.32071184716014994;  // std dev = 5,16e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.26592348141504757;  // std dev = 0,140, 83,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0926912761892605;  // std dev = 6,99e-08, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716015017;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.1553505978203857;  // std dev = 0,453, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.09269127618926089;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.26177047950936166;  // std dev = 0,075, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.0974830050237693;  // std dev = 0,085, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.08875543704092104;  // std dev = 0,020, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839678;  // std dev = 8,82e-08, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21441709675898166;  // std dev = 0,065, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.09073450747009923;  // std dev = 0,068, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07909307276928929;  // std dev = 0,039, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1253299787123439;  // std dev = 0,099, 69,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=55 */
%   | | else return 0.15754623619708474;  // std dev = 0,082, 83,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07349641514270826;  // std dev = 0,037, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16016456529848352;  // std dev = 0,033, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09708507337413665;  // std dev = 0,076, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.06860254312252013;  // std dev = 0,030, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.09259122921436137;  // std dev = 0,087, 70,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=55 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1411548964596474;  // std dev = 0,024, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | | else return -0.09598601588002262;  // std dev = 0,049, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06435030460106964;  // std dev = 0,028, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064499
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.445 seconds
Total inference time: 1.444 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066752
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.539 seconds
Refined model CLL: -0.066752


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064597
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.264999999999999 seconds
Total inference time: 1.364 seconds
AUC ROC: 1.0
Total revision time: 8.264999999999999
Best scored revision CLL: -0.065539


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:57:17
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064597, 'Learning time': 2.259, 'Inference time': 1.364}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064597, 'Learning time': 8.264999999999999, 'Inference time': 1.364}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.14185106490048846;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.12544463852839166;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.11231637819360676;  // std dev = 0,000, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 3,86e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1015963294878365;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2,53e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.0926912761892606;  // std dev = 5,58e-08, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5,96e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.08518475138839678;  // std dev = 7,88e-08, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2,11e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07877675473109146;  // std dev = 7,60e-08, 208,000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.07324622576333677;  // std dev = 9,88e-08, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.06842697784420261;  // std dev = 6,32e-08, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06419184008202626;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.472 seconds
Total inference time: 1.272 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:57:21
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 2.472, 'Inference time': 1.272}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,63e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.1418510649004883;  // std dev = 0,000, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.348 seconds
Total inference time: 0.885 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:57:24
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 1.348, 'Inference time': 0.885}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048757;  // std dev = 2,25e-07, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283921;  // std dev = 0,000, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 4,41e-08, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360663;  // std dev = 0,000, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830997;  // std dev = 2,11e-08, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783626;  // std dev = 1,21e-07, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716014933;  // std dev = 3,04e-07, 162,000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05957889009573997;  // std dev = 0,112, 412,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=33 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2684831614703236;  // std dev = 0,412, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08596957735741964;  // std dev = 0,007, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08780083795180625;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08780083795180646;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21931073695652675;  // std dev = 0,364, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07910031121852257;  // std dev = 0,005, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0810185244778516;  // std dev = 0,000, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18419567746728335;  // std dev = 0,322, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return -0.07402510985618584;  // std dev = 0,007, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07518745528193102;  // std dev = 1,81e-07, 355,000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15819058796900695;  // std dev = 0,287, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06912411509726571;  // std dev = 0,006, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07012347975170856;  // std dev = 0,000, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13830199377207672;  // std dev = 0,258, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.06468108919677634;  // std dev = 0,005, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06568656207272511;  // std dev = 8,94e-08, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064681
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.624 seconds
Total inference time: 1.494 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065617
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.837 seconds
Parameter learned model CLL: -0.065617


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [3.94e-08, 38, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.08e-06, 0, 195], 'false': [2.25e-07, 364, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 37, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 195], 'false': [0.0, 344, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 30, 0], 'true,true': [4.41e-08, 0, 195], 'false': [0.0, 344, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [2.11e-08, 0, 195], 'true,true,false,true': [0.0, 29, 0], 'true,false': [0.0, 0, 0], 'false': [1.21e-07, 365, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [3.04e-07, 0, 162], 'true,true,false,true': [9.13e-09, 17, 0], 'true,false': [0.0, 0, 0], 'false': [0.112, 379, 33], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.412, 0, 195], 'false,false': [0.0, 350, 0], 'true,true,false,true': [0.007, 30, 0], 'true,false': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.364, 0, 195], 'true,true,false,true': [0.005, 32, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 346, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.007, 40, 0], 'false': [1.81e-07, 355, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.322, 0, 195]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.006, 34, 0], 'true,true': [0.287, 0, 195], 'false': [0.0, 318, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.258, 0, 195], 'true,false': [0.0, 0, 0], 'true,true,false': [0.005, 25, 0], 'false': [8.94e-08, 389, 0]}]]
[{'': [0.13649173865792888, 1.3908288440359104e-16], 'true': [5.975846598187509e-15, 4.0902953538821554e-17], 'true,false,true': [4.0902953538821554e-17, nan], 'true,false': [4.0902953538821554e-17, nan], 'true,true': [5.975846598187509e-15, nan]}, {'': [0.09569506516490917, -1.0327656043024712e-16], 'true': [-3.643808901333847e-15, -2.100421938480026e-17], 'true,false,true': [-2.100421938480026e-17, nan], 'true,false': [-2.100421938480026e-17, nan], 'true,true': [-3.643808901333847e-15, nan]}, {'': [0.05151470611341343, -3.6146796150586495e-17], 'true': [1.9676568067202775e-15, -7.401486830834377e-18], 'true,false,true': [-7.401486830834377e-18, nan], 'true,false': [-7.401486830834377e-18, nan]}, {'': [0.030370729120107107, 4.015053130151251e-17], 'true': [0.030370729120107107, nan], 'true,true,false': [-1.1485065771984378e-17, nan], 'true,true': [4.372570681600617e-16, -1.1485065771984378e-17]}, {'': [0.014689444778751625, 0.012592333719806836], 'true': [0.014689444778751625, nan], 'true,true,false': [4.89804275569922e-18, nan], 'true,true': [5.701886151161297e-16, 4.89804275569922e-18]}, {'': [0.0179139179457237, -2.5376526277146435e-18], 'true': [0.015272038142407464, 0.0], 'true,true,false': [1.4372208705361785e-06, nan], 'true,true': [0.0008697954861070856, 1.4372208705361785e-06], 'true,true,true': [0.0008697954861070856, nan], 'false': [nan, -2.5376526277146435e-18]}, {'': [0.011365990803465283, -2.3102906870812507e-17], 'true': [0.011365990803465283, nan], 'true,true,true': [0.0006778660861174447, nan], 'true,true,false': [7.817856110224619e-07, nan], 'true,true': [0.0006778660861174447, 7.817856110224619e-07]}, {'': [0.009858983414194068, 9.257070853212573e-17], 'true': [0.009858983414194068, nan], 'true,true,true': [0.0005316470426039999, 1.2157739489329634e-06], 'true,true': [0.009858983414194068, nan]}, {'': [0.0068932498058695175, -3.0723152882708734e-17], 'true': [0.0004231401100814453, 1.0791559597649455e-06], 'true,false,true': [1.0791559597649455e-06, nan], 'true,false': [1.0791559597649455e-06, nan]}, {'': [0.004453578831399014, 2.0549115108743257e-17], 'true': [0.004453578831399014, nan], 'true,true': [0.00034237692289110694, 8.821975318551445e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.14185106490048763;  // std dev = 1,88e-07, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.1254446385283921;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.11231637819360656;  // std dev = 0,000, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 1,10e-07, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.3207118471601499;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.092691276189261;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601502;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926043;  // std dev = 1,94e-07, 330,000 (wgt'ed) examples reached here.  /* #neg=330 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716015005;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.2025966690603183;  // std dev = 0,494, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.09269127618926094;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2557642878324534;  // std dev = 0,051, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.09674401436287489;  // std dev = 0,039, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839678;  // std dev = 1,19e-07, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20965959541879195;  // std dev = 1,10e-07, 83,000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.21056328465318835;  // std dev = 0,044, 112,000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07919327204815742;  // std dev = 0,061, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17740684461916753;  // std dev = 0,039, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07332181751619947;  // std dev = 0,031, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15298042718981447;  // std dev = 0,035, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.06881617930788916;  // std dev = 0,057, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13419250704733715;  // std dev = 0,031, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06434592519646633;  // std dev = 0,038, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063374
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.923 seconds
Total inference time: 1.41 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064351
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.877 seconds
Refined model CLL: -0.064351


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063374
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.261000000000001 seconds
Total inference time: 1.41 seconds
AUC ROC: 1.0
Total revision time: 9.261000000000001
Best scored revision CLL: -0.064351


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:57:36
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064681, 'Learning time': 2.624, 'Inference time': 1.494}, 'CLL': -0.063374, 'Learning time': 9.261000000000001, 'Inference time': 1.41}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.1418510649004878;  // std dev = 1,30e-07, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.12544463852839205;  // std dev = 0,000, 347,000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.11231637819360671;  // std dev = 0,000, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1015963294878365;  // std dev = 0,000, 379,000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 4,00e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.09269127618926054;  // std dev = 1,63e-07, 356,000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.08518475138839678;  // std dev = 1,05e-07, 395,000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109148;  // std dev = 3,65e-08, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07324622576333717;  // std dev = 4,21e-08, 390,000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.0684269778442031;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06419184008202602;  // std dev = 1,05e-07, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.438 seconds
Total inference time: 1.29 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:57:41
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 3.438, 'Inference time': 1.29}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,08e-06, 195,000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048802;  // std dev = 0,000, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.048 seconds
Total inference time: 0.936 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:57:44
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 1.048, 'Inference time': 0.936}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 1,84e-07, 497,000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0,000, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 2,47e-08, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360595;  // std dev = 0,000, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783574;  // std dev = 2,68e-07, 448,000 (wgt'ed) examples reached here.  /* #neg=448 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.3207118471601493;  // std dev = 3,67e-07, 214,000 (wgt'ed) examples reached here.  /* #pos=214 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.056191192361865545;  // std dev = 0,117, 521,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=46 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.268954988207186;  // std dev = 0,479, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08622139492070972;  // std dev = 0,009, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08807254408555423;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08807254408555498;  // std dev = 0,000, 461,000 (wgt'ed) examples reached here.  /* #neg=461 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21964436850826247;  // std dev = 0,423, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.0795636060848303;  // std dev = 0,009, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08125082723986728;  // std dev = 0,000, 496,000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18444020911234912;  // std dev = 0,374, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return -0.07376532158348365;  // std dev = 0,007, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07538821637071416;  // std dev = 0,000, 512,000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15837589202151628;  // std dev = 0,334, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06898133149477804;  // std dev = 0,008, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07029862510924226;  // std dev = 1,95e-07, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13844651394000487;  // std dev = 0,300, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.06452307996558877;  // std dev = 0,006, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06584063701857434;  // std dev = 0,000, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064816
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.011 seconds
Total inference time: 1.331 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065756
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.022 seconds
Parameter learned model CLL: -0.065756


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [5.37e-08, 50, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.07e-06, 0, 260], 'false': [1.84e-07, 497, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 42, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 260], 'false': [0.0, 477, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 35, 0], 'true,true': [2.47e-08, 0, 260], 'false': [0.0, 485, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false,true': [0.0, 33, 0], 'true,false': [0.0, 0, 0], 'false': [2.68e-07, 448, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [3.67e-07, 0, 214], 'true,true,false,true': [5.27e-09, 27, 0], 'true,false': [0.0, 0, 0], 'false': [0.117, 475, 46], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.479, 0, 260], 'false,false': [0.0, 461, 0], 'true,true,false,true': [0.009, 39, 0], 'true,false': [0.0, 16, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.423, 0, 260], 'true,true,false,true': [0.009, 53, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 496, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.007, 43, 0], 'false': [0.0, 512, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.374, 0, 260]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.008, 57, 0], 'true,true': [0.334, 0, 260], 'false': [1.95e-07, 484, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.3, 0, 260], 'true,false': [0.0, 0, 0], 'true,true,false': [0.006, 44, 0], 'false': [0.0, 477, 0]}]]
[{'': [0.13527575442248072, 6.79090139810961e-17], 'true': [4.372570681600617e-15, 5.773159728050814e-17], 'true,false,true': [5.773159728050814e-17, nan], 'true,false': [5.773159728050814e-17, nan], 'true,true': [4.372570681600617e-15, nan]}, {'': [0.0854747677307963, -1.322026578589285e-16], 'true': [-4.481884948640632e-15, -2.6433881538694202e-17], 'true,false,true': [-2.6433881538694202e-17, nan], 'true,false': [-2.6433881538694202e-17, nan], 'true,true': [-4.481884948640632e-15, nan]}, {'': [0.04661629539133752, -7.325182842887631e-18], 'true': [6.012284687200848e-16, -1.2688263138573217e-17], 'true,false,true': [-1.2688263138573217e-17, nan], 'true,false': [-1.2688263138573217e-17, nan]}, {'': [0.026932129424735805, 1.6058583034756728e-16], 'true': [0.026932129424735805, nan], 'true,true,false': [-1.0092936587501423e-17, nan], 'true,true': [-4.099285014000578e-16, -1.0092936587501423e-17]}, {'': [0.017001645611449477, 0.013756992537353711], 'true': [0.017001645611449477, nan], 'true,true,false': [1.02798428206033e-18, nan], 'true,true': [6.308556999739207e-16, 1.02798428206033e-18]}, {'': [0.01896535946647981, -1.6280059970642208e-16], 'true': [0.015076883408515283, -6.071532165918825e-18], 'true,true,false': [1.918981809083789e-06, nan], 'true,true': [0.0008837459248935394, 1.918981809083789e-06], 'true,true,true': [0.0008837459248935394, nan], 'false': [nan, -1.6280059970642208e-16]}, {'': [0.013164235123392277, -1.101269613136244e-16], 'true': [0.013164235123392277, nan], 'true,true,true': [0.0006881379551441268, nan], 'true,true,false': [1.573682909407217e-06, nan], 'true,true': [0.0006881379551441268, 1.573682909407217e-06]}, {'': [0.008581656976458628, -4.7704895589362195e-17], 'true': [0.008581656976458628, nan], 'true,true,true': [0.0005392994551827453, 1.2019400233567282e-06], 'true,true': [0.008581656976458628, nan]}, {'': [0.007975414664684363, 7.890841332046567e-17], 'true': [0.00042896420857436383, 1.164600614092466e-06], 'true,false,true': [1.164600614092466e-06, nan], 'true,false': [1.164600614092466e-06, nan]}, {'': [0.005396481373727504, -5.306726407013327e-17], 'true': [0.005396481373727504, nan], 'true,true': [0.00034691140305878566, 8.672340254079934e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.14185106490048768;  // std dev = 0,000, 512,000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.12544463852839227;  // std dev = 0,000, 454,000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 3,95e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.11231637819360601;  // std dev = 0,000, 465,000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3506585195220638;  // std dev = 0,174, 132,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=115 */
%   | | else return 0.34379383310796924;  // std dev = 0,181, 169,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=145 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878357;  // std dev = 2,80e-07, 456,000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.33642136790058697;  // std dev = 0,011, 214,000 (wgt'ed) examples reached here.  /* #pos=214 */
%   | | else return -0.13798200874645297;  // std dev = 0,002, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926137;  // std dev = 0,000, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.3357474916382019;  // std dev = 0,004, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11788303016169353;  // std dev = 0,117, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2657841657755713;  // std dev = 0,010, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.12303861234033353;  // std dev = 0,007, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.08388958705081219;  // std dev = 0,004, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.08518475138839678;  // std dev = 1,30e-07, 425,000 (wgt'ed) examples reached here.  /* #neg=425 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21722661938321325;  // std dev = 0,009, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.11035631008289253;  // std dev = 0,007, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07873830136422057;  // std dev = 0,006, 474,000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.18199896334355115;  // std dev = 0,000503, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return -0.10039096897871634;  // std dev = 0,004, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.14143675219494342;  // std dev = 0,100, 170,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=145 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07320751227537858;  // std dev = 0,006, 445,000 (wgt'ed) examples reached here.  /* #neg=445 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15998732374016797;  // std dev = 0,051, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10373830062523312;  // std dev = 0,071, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.06840027647913252;  // std dev = 0,005, 501,000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13963815793661627;  // std dev = 0,045, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.09234865179066938;  // std dev = 0,078, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06415624377557046;  // std dev = 0,005, 468,000 (wgt'ed) examples reached here.  /* #neg=468 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064395
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.013 seconds
Total inference time: 1.483 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066679
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.165 seconds
Refined model CLL: -0.066679


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064816
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.210999999999999 seconds
Total inference time: 1.331 seconds
AUC ROC: 1.0
Total revision time: 10.210999999999999
Best scored revision CLL: -0.065756


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:57:57
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064816, 'Learning time': 3.011, 'Inference time': 1.331}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064816, 'Learning time': 10.210999999999999, 'Inference time': 1.331}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.1418510649004874;  // std dev = 2,19e-07, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.1254446385283923;  // std dev = 0,000, 480,000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,95e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360596;  // std dev = 0,000, 478,000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783628;  // std dev = 1,83e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.101596329487836;  // std dev = 2,13e-07, 466,000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,33e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.09269127618926135;  // std dev = 0,000, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.08518475138839678;  // std dev = 1,32e-07, 492,000 (wgt'ed) examples reached here.  /* #neg=492 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07877675473109177;  // std dev = 0,000, 474,000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.07324622576333718;  // std dev = 0,000, 468,000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06842697784420271;  // std dev = 1,05e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.06842697784420348;  // std dev = 0,000, 502,000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080112;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.06419184008202573;  // std dev = 1,79e-07, 467,000 (wgt'ed) examples reached here.  /* #neg=467 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.621 seconds
Total inference time: 1.425 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:58:03
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 3.621, 'Inference time': 1.425}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,07e-06, 260,000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1418510649004872;  // std dev = 2,92e-07, 472,000 (wgt'ed) examples reached here.  /* #neg=472 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.315 seconds
Total inference time: 0.893 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:58:05
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 1.315, 'Inference time': 0.893}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048852;  // std dev = 0,000, 622,000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0,000, 606,000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936057;  // std dev = 0,000, 578,000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783621;  // std dev = 3,65e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783515;  // std dev = 4,23e-07, 597,000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716015033;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926107;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.056395466252333194;  // std dev = 0,117, 672,000 (wgt'ed) examples reached here.  /* #neg=613 #pos=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2692793694236622;  // std dev = 0,542, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08619818232814214;  // std dev = 0,010, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08805613905100855;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08805613905100747;  // std dev = 3,56e-07, 584,000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2198753339392257;  // std dev = 0,478, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07959402198569485;  // std dev = 0,010, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08123680409639958;  // std dev = 3,59e-07, 594,000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1846105256721762;  // std dev = 0,423, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return -0.07380018774759962;  // std dev = 0,009, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07537609937879368;  // std dev = 2,00e-07, 624,000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15850565306300532;  // std dev = 0,377, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06916861147516651;  // std dev = 0,009, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0702880557837166;  // std dev = 9,42e-08, 589,000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13854820279807903;  // std dev = 0,339, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06465616582894855;  // std dev = 0,008, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06583134047222827;  // std dev = 0,000, 566,000 (wgt'ed) examples reached here.  /* #neg=566 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064805
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.346 seconds
Total inference time: 1.656 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065754
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.26 seconds
Parameter learned model CLL: -0.065754


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [5.37e-08, 50, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.05e-06, 0, 326], 'false': [0.0, 622, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 326], 'false': [0.0, 606, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [1.49e-08, 44, 0], 'true,true': [0.0, 0, 326], 'false': [0.0, 578, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false,true': [3.65e-08, 58, 0], 'true,false': [0.0, 0, 0], 'false': [4.23e-07, 597, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 267], 'true,true,false,true': [0.0, 41, 0], 'true,false': [0.0, 0, 0], 'false': [0.117, 613, 59], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.542, 0, 326], 'false,false': [3.56e-07, 584, 0], 'true,true,false,true': [0.01, 51, 0], 'true,false': [0.0, 26, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.478, 0, 326], 'true,true,false,true': [0.01, 60, 0], 'true,false': [0.0, 0, 0], 'false': [3.59e-07, 594, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.009, 70, 0], 'false': [2e-07, 624, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.423, 0, 326]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.009, 63, 0], 'true,true': [0.377, 0, 326], 'false': [9.42e-08, 589, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.339, 0, 326], 'true,false': [0.0, 0, 0], 'true,true,false': [0.008, 61, 0], 'false': [0.0, 566, 0]}]]
[{'': [0.1152953825260331, -3.398496203997264e-16], 'true': [3.400143152717044e-15, 5.773159728050814e-17], 'true,false,true': [5.773159728050814e-17, nan], 'true,false': [5.773159728050814e-17, nan], 'true,true': [3.400143152717044e-15, nan]}, {'': [0.07479903677721048, -2.4622768070894563e-16], 'true': [-5.056623150194578e-15, -2.7755575615628914e-17], 'true,false,true': [-2.7755575615628914e-17, nan], 'true,false': [-2.7755575615628914e-17, nan], 'true,true': [-5.056623150194578e-15, nan]}, {'': [0.04670971582581911, -1.5366408645330887e-18], 'true': [-4.795073676908651e-16, 5.046468293750712e-18], 'true,false,true': [5.046468293750712e-18, nan], 'true,false': [5.046468293750712e-18, nan]}, {'': [0.03455427542482883, 2.9903494532617283e-16], 'true': [0.03455427542482883, nan], 'true,true,false': [2.2970131543968756e-17, nan], 'true,true': [-9.372189459412364e-16, 2.2970131543968756e-17]}, {'': [0.019721556679020053, 0.013687415373444568], 'true': [0.019721556679020053, nan], 'true,true,false': [-6.769652589177784e-18, nan], 'true,true': [0.0, -6.769652589177784e-18]}, {'': [0.02032883231873683, 2.1748204454985944e-16], 'true': [0.015560902844361795, -1.0675221390626506e-18], 'true,true,false': [1.8829108276648158e-06, nan], 'true,true': [0.0009006092287681184, 1.8829108276648158e-06], 'true,true,true': [0.0009006092287681184, nan], 'false': [nan, 2.1748204454985944e-16]}, {'': [0.012365647212089924, 2.1755885533058623e-16], 'true': [0.012365647212089924, nan], 'true,true,true': [0.0007010501650844831, nan], 'true,true,false': [1.5869835059939553e-06, nan], 'true,true': [0.0007010501650844831, 1.5869835059939553e-06]}, {'': [0.010169694852691978, 6.405132834375903e-17], 'true': [0.010169694852691978, nan], 'true,true,true': [0.0005492511139153908, 1.2343799006918145e-06], 'true,true': [0.010169694852691978, nan]}, {'': [0.0074016047773563035, 1.5079429876063247e-17], 'true': [0.00043676165611205583, 1.2972677950654153e-06], 'true,false,true': [1.2972677950654153e-06, nan], 'true,false': [1.2972677950654153e-06, nan]}, {'': [0.005780296521153786, -5.963035326608615e-17], 'true': [0.005780296521153786, nan], 'true,true': [0.00035313522972445314, 1.0151226722097517e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.1418510649004885;  // std dev = 0,000, 613,000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.12544463852839227;  // std dev = 0,000, 580,000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360628;  // std dev = 4,59e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.11231637819360574;  // std dev = 0,000, 600,000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783617;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878352;  // std dev = 4,03e-07, 573,000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716015033;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.09269127618926164;  // std dev = 0,000, 575,000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.25517224256948756;  // std dev = 4,09e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.0851847513883968;  // std dev = 1,39e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.08518475138839678;  // std dev = 1,55e-07, 573,000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20975771563253523;  // std dev = 2,35e-07, 143,000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.16232739173714383;  // std dev = 0,107, 219,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=183 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310923;  // std dev = 0,000, 567,000 (wgt'ed) examples reached here.  /* #neg=567 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.14773531412389726;  // std dev = 0,081, 162,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=143 */
%   | | else return 0.13882606963391686;  // std dev = 0,102, 219,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=183 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333668;  // std dev = 2,12e-07, 564,000 (wgt'ed) examples reached here.  /* #neg=564 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16084039497903954;  // std dev = 0,068, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09329240668620194;  // std dev = 0,078, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06842697784420343;  // std dev = 0,000, 595,000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.14029851647930489;  // std dev = 0,061, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08802666124387439;  // std dev = 0,065, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202554;  // std dev = 2,32e-07, 557,000 (wgt'ed) examples reached here.  /* #neg=557 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064194
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.04 seconds
Total inference time: 1.577 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06622
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.19 seconds
Refined model CLL: -0.06622


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064805
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.836 seconds
Total inference time: 1.656 seconds
AUC ROC: 1.0
Total revision time: 10.836
Best scored revision CLL: -0.065754


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:58:20
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064805, 'Learning time': 3.346, 'Inference time': 1.656}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064805, 'Learning time': 10.836, 'Inference time': 1.656}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048854;  // std dev = 0,000, 609,000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.12544463852839227;  // std dev = 0,000, 528,000 (wgt'ed) examples reached here.  /* #neg=528 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360595;  // std dev = 0,000, 566,000 (wgt'ed) examples reached here.  /* #neg=566 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783619;  // std dev = 4,71e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.10159632948783544;  // std dev = 3,70e-07, 612,000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926166;  // std dev = 0,000, 579,000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.08518475138839678;  // std dev = 1,49e-07, 597,000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,46e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07877675473109247;  // std dev = 0,000, 615,000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452765;  // std dev = 2,76e-07, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333695;  // std dev = 1,40e-07, 581,000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.06842697784420361;  // std dev = 0,000, 578,000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06419184008202541;  // std dev = 2,48e-07, 624,000 (wgt'ed) examples reached here.  /* #neg=624 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.997 seconds
Total inference time: 1.347 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:58:25
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Learning time': 3.997, 'Inference time': 1.347}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,05e-06, 326,000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1418510649004884;  // std dev = 0,000, 603,000 (wgt'ed) examples reached here.  /* #neg=603 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.526 seconds
Total inference time: 0.846 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:58:28
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Learning time': 1.526, 'Inference time': 0.846}


Starting fold 2

Target train facts examples: 546
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 150
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 2,11e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8,16e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783637;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.060891035931614074;  // std dev = 0,110, 130,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2675077577763692;  // std dev = 0,229, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08560325992172209;  // std dev = 0,003, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0876958025883483;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08769580258834805;  // std dev = 5,87e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21861641184024547;  // std dev = 0,203, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07933090972619808;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08092869508596023;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18368373563835272;  // std dev = 0,179, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return -0.0741740177644317;  // std dev = 0,004, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07510980278669817;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15780058319620832;  // std dev = 0,160, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06885307138469468;  // std dev = 0,004, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07005571983462665;  // std dev = 3,65e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13799638857577382;  // std dev = 0,144, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.06457941709676666;  // std dev = 0,003, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0656269418767331;  // std dev = 3,25e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064613
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.574 seconds
Total inference time: 1.458 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065551
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.392 seconds
Parameter learned model CLL: -0.065551


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [0.0, 14, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 64], 'false': [8.43e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [5.27e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [8.43e-08, 0, 64], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 10, 0], 'true,true': [2.11e-08, 0, 64], 'false': [8.16e-08, 110, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false,true': [0.0, 14, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 124, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 54], 'true,true,false,true': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false': [0.11, 120, 10], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.229, 0, 64], 'false,false': [5.87e-08, 107, 0], 'true,true,false,true': [0.003, 12, 0], 'true,false': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.203, 0, 64], 'true,true,false,true': [0.002, 4, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 109, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.004, 11, 0], 'false': [0.0, 124, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.179, 0, 64]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.004, 15, 0], 'true,true': [0.16, 0, 64], 'false': [3.65e-08, 119, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.144, 0, 64], 'true,false': [0.0, 0, 0], 'true,true,false': [0.003, 11, 0], 'false': [3.25e-08, 116, 0]}]]
[{'': [0.1472715318869156, 6.45947941600091e-17], 'true': [-8.881784197001252e-16, -1.1895246692412391e-17], 'true,false,true': [-1.1895246692412391e-17, nan], 'true,false': [-1.1895246692412391e-17, nan], 'true,true': [-8.881784197001252e-16, nan]}, {'': [0.09492119833332027, -5.50523813863714e-18], 'true': [1.1102230246251565e-16, 2.3129646346357427e-18], 'true,false,true': [2.3129646346357427e-18, nan], 'true,false': [2.3129646346357427e-18, nan], 'true,true': [1.1102230246251565e-16, nan]}, {'': [0.05210230432327892, 6.055761952500853e-17], 'true': [4.440892098500626e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.03968601114256328, -2.3278869871172638e-17], 'true': [0.03968601114256328, nan], 'true,true,false': [-3.96508223080413e-18, nan], 'true,true': [-3.0531133177191805e-16, -3.96508223080413e-18]}, {'': [0.019206484265000084, 0.012135063365328777], 'true': [0.019206484265000084, nan], 'true,true,false': [0.0, nan], 'true,true': [-8.22387425648264e-17, 0.0]}, {'': [0.02208840575563898, 3.216533996577556e-17], 'true': [0.01727102114933644, -1.1564823173178713e-18], 'true,true,false': [8.757469623331404e-07, nan], 'true,true': [0.0008216906512634042, 8.757469623331404e-07], 'true,true,true': [0.0008216906512634042, nan], 'false': [nan, 3.216533996577556e-17]}, {'': [0.005518209405369329, -4.379778904484563e-17], 'true': [0.005518209405369329, nan], 'true,true,true': [0.0006411154057950896, nan], 'true,true,false': [1.024995152196402e-06, nan], 'true,true': [0.0006411154057950896, 1.024995152196402e-06]}, {'': [0.008751382782852216, -1.7906822977825105e-18], 'true': [0.008751382782852216, nan], 'true,true,true': [0.0005033652570607117, 1.1851427159868937e-06], 'true,true': [0.008751382782852216, nan]}, {'': [0.008227120440522269, 1.1195526298741075e-17], 'true': [0.00040100458061271757, 8.232407066664319e-07], 'true,false,true': [8.232407066664319e-07, nan], 'true,false': [8.232407066664319e-07, nan]}, {'': [0.005413209186293996, 9.092343736154299e-18], 'true': [0.005413209186293996, nan], 'true,true': [0.00032472342917944444, 7.411563049687779e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1418510649004877;  // std dev = 5,96e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.12544463852839108;  // std dev = 8,02e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360621;  // std dev = 8,56e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783666;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0926912761892608;  // std dev = 7,60e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.11401028548544434;  // std dev = 0,413, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2564605283024447;  // std dev = 0,057, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08713478172297662;  // std dev = 0,017, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0851847513883968;  // std dev = 5,37e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.18966004276679266;  // std dev = 0,073, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.2115056858221469;  // std dev = 0,050, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07904772961401638;  // std dev = 0,023, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1790073686507207;  // std dev = 0,045, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.08755482039691251;  // std dev = 0,030, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07348929996214446;  // std dev = 0,021, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1541965670494979;  // std dev = 0,040, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07385120357790308;  // std dev = 0,031, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06839076873688309;  // std dev = 0,000212, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.12807175046028835;  // std dev = 0,040, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.10707474714797664;  // std dev = 0,069, 43,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06416021680276314;  // std dev = 0,000200, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06423
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.752 seconds
Total inference time: 1.338 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066188
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.253 seconds
Refined model CLL: -0.066188


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064613
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.971 seconds
Total inference time: 1.458 seconds
AUC ROC: 1.0
Total revision time: 5.971
Best scored revision CLL: -0.065551


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:58:37
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064613, 'Learning time': 1.574, 'Inference time': 1.458}, 'CLL': -0.064613, 'Learning time': 5.971, 'Inference time': 1.458}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8,43e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283913;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,69e-07, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360625;  // std dev = 8,16e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.10159632948783635;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0926912761892609;  // std dev = 6,50e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08518475138839685;  // std dev = 5,05e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109162;  // std dev = 5,67e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333714;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06842697784420265;  // std dev = 5,16e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,47e-08, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202626;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.099 seconds
Total inference time: 1.251 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:58:41
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 2.099, 'Inference time': 1.251}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995126;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 8,43e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.808 seconds
Total inference time: 0.934 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:58:43
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 0.808, 'Inference time': 0.934}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360675;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583092;  // std dev = 3,37e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716015017;  // std dev = 1,40e-07, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.057256722759311277;  // std dev = 0,116, 245,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=21 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2678925790868129;  // std dev = 0,328, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.0860814718222203;  // std dev = 0,007, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.087987002744095;  // std dev = 5,89e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08798700274409514;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21888846423322342;  // std dev = 0,289, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07933271330665363;  // std dev = 0,005, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08117770192338135;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18388311338825802;  // std dev = 0,256, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.07375742604640516;  // std dev = 0,006, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07532502792100704;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15795165740332026;  // std dev = 0,229, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06892636772320618;  // std dev = 0,005, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07024350523824548;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13811420182717993;  // std dev = 0,206, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.06432539186616651;  // std dev = 0,003, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06579215300835937;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064757
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.106 seconds
Total inference time: 1.564 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065711
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.922 seconds
Parameter learned model CLL: -0.065711


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [1.49e-08, 23, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [7.54e-07, 0, 129], 'false': [0.0, 236, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 21, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 129], 'false': [0.0, 233, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [1.29e-08, 22, 0], 'true,true': [4.21e-08, 0, 129], 'false': [0.0, 248, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [3.37e-08, 0, 129], 'true,true,false,true': [0.0, 15, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 238, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.4e-07, 0, 108], 'true,true,false,true': [7.45e-09, 15, 0], 'true,false': [0.0, 0, 0], 'false': [0.116, 224, 21], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.328, 0, 129], 'false,false': [0.0, 218, 0], 'true,true,false,true': [0.007, 25, 0], 'true,false': [5.89e-09, 8, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.289, 0, 129], 'true,true,false,true': [0.005, 21, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 235, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.006, 28, 0], 'false': [0.0, 268, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.256, 0, 129]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.005, 22, 0], 'true,true': [0.229, 0, 129], 'false': [0.0, 227, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.206, 0, 129], 'true,false': [0.0, 0, 0], 'true,true,false': [0.003, 23, 0], 'false': [0.0, 250, 0]}]]
[{'': [0.12841932132964445, -2.1075420128477548e-16], 'true': [4.40646657835721e-15, 9.654113257610057e-18], 'true,false,true': [9.654113257610057e-18, nan], 'true,false': [9.654113257610057e-18, nan], 'true,true': [4.40646657835721e-15, nan]}, {'': [0.08595193610080533, -6.480271731717652e-17], 'true': [-1.7625866313428842e-15, -2.64338815386942e-18], 'true,false,true': [-2.64338815386942e-18, nan], 'true,false': [-2.64338815386942e-18, nan], 'true,true': [-1.7625866313428842e-15, nan]}, {'': [0.055487977228933866, -7.162729191130042e-17], 'true': [1.7625866313428842e-15, 7.569702440626067e-18], 'true,false,true': [7.569702440626067e-18, nan], 'true,false': [7.569702440626067e-18, nan]}, {'': [0.025146331174405026, -7.650276304139734e-17], 'true': [0.025146331174405026, nan], 'true,true,false': [-5.551115123125783e-18, nan], 'true,true': [1.1016166445893026e-15, -5.551115123125783e-18]}, {'': [0.01830005094057653, 0.013393147485652896], 'true': [0.01830005094057653, nan], 'true,true,false': [3.7007434154171884e-18, nan], 'true,true': [1.809252336426181e-16, 3.7007434154171884e-18]}, {'': [0.021040460954291417, -6.416885371686684e-17], 'true': [0.017735829179458443, 4.336808689942018e-18], 'true,true,false': [1.7087285149341991e-06, nan], 'true,true': [0.0008321500857288638, 1.7087285149341991e-06], 'true,true,true': [0.0008321500857288638, nan], 'false': [nan, -6.416885371686684e-17]}, {'': [0.011265977975989714, -3.0235861096174476e-17], 'true': [0.011265977975989714, nan], 'true,true,true': [0.000648751589580542, nan], 'true,true,false': [1.2340904618781574e-06, nan], 'true,true': [0.000648751589580542, 1.2340904618781574e-06]}, {'': [0.010145386410870793, -6.379639768368437e-17], 'true': [0.010145386410870793, nan], 'true,true,true': [0.0005090135506022972, 1.1153807600504186e-06], 'true,true': [0.010145386410870793, nan]}, {'': [0.006753213925872506, -1.9563401314980734e-18], 'true': [0.0004052770014502329, 1.0399033270262128e-06], 'true,false,true': [1.0399033270262128e-06, nan], 'true,false': [1.0399033270262128e-06, nan]}, {'': [0.005541329006837548, -3.019806626980426e-17], 'true': [0.005541329006837548, nan], 'true,true': [0.0003280320293945123, 5.277738990518929e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048846;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.12544463852839166;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1123163781936067;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716015017;  // std dev = 1,40e-07, 108,000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926055;  // std dev = 6,66e-08, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.08518475138839678;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839678;  // std dev = 8,30e-08, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109144;  // std dev = 5,77e-08, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527814;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333666;  // std dev = 1,29e-07, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936714;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420261;  // std dev = 6,32e-08, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801084;  // std dev = 8,16e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.392 seconds
Total inference time: 1.368 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.487 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.907 seconds
Total inference time: 1.368 seconds
AUC ROC: 1.0
Total revision time: 7.907
Best scored revision CLL: -0.064216


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:58:54
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064757, 'Learning time': 2.106, 'Inference time': 1.564}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 7.907, 'Inference time': 1.368}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048835;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.12544463852839183;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.11231637819360674;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.10159632948783653;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926094;  // std dev = 1,05e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.09269127618926053;  // std dev = 7,60e-08, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 6,83e-08, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07877675473109146;  // std dev = 6,83e-08, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07324622576333686;  // std dev = 1,11e-07, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06842697784420261;  // std dev = 6,32e-08, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5,58e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06419184008202619;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06419184008202623;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.723 seconds
Total inference time: 1.291 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:58:59
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 2.723, 'Inference time': 1.291}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048846;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.941 seconds
Total inference time: 0.888 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:59:01
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 0.941, 'Inference time': 0.888}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 1,66e-07, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.1254446385283913;  // std dev = 2,79e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839208;  // std dev = 0,000, 369,000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 4,41e-08, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360674;  // std dev = 0,000, 325,000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583099;  // std dev = 2,17e-08, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 6,66e-08, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716014933;  // std dev = 3,04e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926103;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05850004042352;  // std dev = 0,114, 399,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=33 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.26851097031956805;  // std dev = 0,410, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08605342240910004;  // std dev = 0,007, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08788728345280675;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08788728345280719;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2193298220918513;  // std dev = 0,362, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07942121189360542;  // std dev = 0,006, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08109244418688272;  // std dev = 0,000, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18420928814052998;  // std dev = 0,321, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.07371131413174806;  // std dev = 0,005, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0752513463825461;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15820064692698677;  // std dev = 0,286, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06883629859161443;  // std dev = 0,005, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07017922499371199;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13830966042897833;  // std dev = 0,257, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.06479752802166296;  // std dev = 0,005, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0657356058629734;  // std dev = 4,47e-08, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064703
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.448 seconds
Total inference time: 1.771 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065678
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.138 seconds
Parameter learned model CLL: -0.065678


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [2.79e-08, 30, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.09e-06, 0, 194], 'false': [1.66e-07, 336, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [2.79e-08, 39, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 194], 'false': [0.0, 369, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 37, 0], 'true,true': [4.41e-08, 0, 194], 'false': [0.0, 325, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [2.17e-08, 0, 194], 'true,true,false,true': [0.0, 24, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 358, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [3.04e-07, 0, 161], 'true,true,false,true': [0.0, 18, 0], 'true,false': [0.0, 0, 0], 'false': [0.114, 366, 33], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.41, 0, 194], 'false,false': [0.0, 313, 0], 'true,true,false,true': [0.007, 28, 0], 'true,false': [0.0, 15, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.362, 0, 194], 'true,true,false,true': [0.006, 32, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 360, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.005, 29, 0], 'false': [0.0, 337, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.321, 0, 194]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.005, 33, 0], 'true,true': [0.286, 0, 194], 'false': [0.0, 311, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.257, 0, 194], 'true,false': [0.0, 0, 0], 'true,true,false': [0.005, 25, 0], 'false': [4.47e-08, 357, 0]}]]
[{'': [0.1159917091836792, 8.194503276995204e-17], 'true': [6.15315358802561e-15, 2.590520390792032e-17], 'true,false,true': [2.590520390792032e-17, nan], 'true,false': [2.590520390792032e-17, nan], 'true,true': [6.15315358802561e-15, nan]}, {'': [0.09949097152851125, -9.627950349052849e-17], 'true': [-3.516087764586063e-15, 1.9927079929169476e-17], 'true,false,true': [1.9927079929169476e-17, nan], 'true,false': [1.9927079929169476e-17, nan], 'true,true': [-3.516087764586063e-15, nan]}, {'': [0.05996804502025241, -5.192427684400732e-17], 'true': [1.9777993675796604e-15, -9.00180830777154e-18], 'true,false,true': [-9.00180830777154e-18, nan], 'true,false': [-9.00180830777154e-18, nan]}, {'': [0.0264008938007582, 1.2404726532124653e-17], 'true': [0.0264008938007582, nan], 'true,true,false': [-2.3129646346357427e-18, nan], 'true,true': [4.76136884787696e-16, -2.3129646346357427e-18]}, {'': [0.015457520322738595, 0.01296572305354498], 'true': [0.015457520322738595, nan], 'true,true,false': [-7.709882115452476e-18, nan], 'true,true': [5.737301593093977e-16, -7.709882115452476e-18]}, {'': [0.019449144672688157, -8.796655274985266e-17], 'true': [0.014614957222815679, -5.551115123125783e-18], 'true,true,false': [1.5930219446733912e-06, nan], 'true,true': [0.0008680420283797998, 1.5930219446733912e-06], 'true,true,true': [0.0008680420283797998, nan], 'false': [nan, -8.796655274985266e-17]}, {'': [0.011428904874324762, -4.4408920985006264e-17], 'true': [0.011428904874324762, nan], 'true,true,true': [0.0006763972154173276, nan], 'true,true,false': [1.2791067546258361e-06, nan], 'true,true': [0.0006763972154173276, 1.2791067546258361e-06]}, {'': [0.007987547586703652, -4.2827594421741943e-17], 'true': [0.007987547586703652, nan], 'true,true,true': [0.0005304330862230324, 1.0130154083076714e-06], 'true,true': [0.007987547586703652, nan]}, {'': [0.006764982098515248, -2.6416882257961925e-17], 'true': [0.0004221355455374839, 8.955034152824393e-07], 'true,false,true': [8.955034152824393e-07, nan], 'true,false': [8.955034152824393e-07, nan]}, {'': [0.00447427865832974, 5.597763149370537e-18], 'true': [0.00447427865832974, nan], 'true,true': [0.00034153952801959205, 9.972316232587097e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1418510649004877;  // std dev = 1,60e-07, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.12544463852839205;  // std dev = 0,000, 350,000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.11231637819360672;  // std dev = 0,000, 328,000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783662;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014933;  // std dev = 3,04e-07, 161,000 (wgt'ed) examples reached here.  /* #pos=161 */
%   | | else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.32071184716014994;  // std dev = 4,21e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.09269127618926051;  // std dev = 1,66e-07, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.25517224256948856;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.0851847513883968;  // std dev = 2,24e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.08518475138839678;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1759930435687072;  // std dev = 0,093, 94,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=83 */
%   | | else return 0.16023314236116673;  // std dev = 0,109, 134,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=111 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109143;  // std dev = 4,71e-08, 345,000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1834204926061519;  // std dev = 0,016, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.091640786808081;  // std dev = 0,003, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333711;  // std dev = 6,83e-08, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15752472118941332;  // std dev = 0,014, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.08445799486744579;  // std dev = 0,004, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.06842697784420293;  // std dev = 0,000, 361,000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.10944664619050808;  // std dev = 0,072, 95,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=83 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13852862874867167;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return -0.07763303720310459;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202601;  // std dev = 1,11e-07, 361,000 (wgt'ed) examples reached here.  /* #neg=361 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064311
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.374 seconds
Total inference time: 1.438 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065989
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.977 seconds
Refined model CLL: -0.065989


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064703
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.937000000000001 seconds
Total inference time: 1.771 seconds
AUC ROC: 1.0
Total revision time: 8.937000000000001
Best scored revision CLL: -0.065678


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:59:13
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064703, 'Learning time': 2.448, 'Inference time': 1.771}, 'CLL': -0.064703, 'Learning time': 8.937000000000001, 'Inference time': 1.771}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.1418510649004878;  // std dev = 1,26e-07, 365,000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1254446385283913;  // std dev = 3,16e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.12544463852839202;  // std dev = 0,000, 349,000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,19e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360671;  // std dev = 0,000, 362,000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3,04e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.10159632948783653;  // std dev = 0,000, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.0926912761892606;  // std dev = 1,28e-07, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.08518475138839678;  // std dev = 1,03e-07, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2,92e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.07877675473109147;  // std dev = 2,11e-08, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.07324622576333707;  // std dev = 7,60e-08, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.06842697784420312;  // std dev = 0,000, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 1,05e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.06419184008202591;  // std dev = 1,36e-07, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.004 seconds
Total inference time: 1.316 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:59:18
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 3.004, 'Inference time': 1.316}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995093;  // std dev = 1,09e-06, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.14185106490048788;  // std dev = 7,30e-08, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.155 seconds
Total inference time: 0.878 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:59:20
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 1.155, 'Inference time': 0.878}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048724;  // std dev = 2,95e-07, 454,000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0,000, 453,000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 2,58e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.112316378193606;  // std dev = 0,000, 470,000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783621;  // std dev = 3,49e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783573;  // std dev = 2,73e-07, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716014933;  // std dev = 3,58e-07, 216,000 (wgt'ed) examples reached here.  /* #pos=216 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.061559342206730615;  // std dev = 0,109, 571,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=43 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.26830401108165125;  // std dev = 0,474, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.0857452561773825;  // std dev = 0,008, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08764234930933419;  // std dev = 9,13e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08764234930933414;  // std dev = 1,95e-07, 456,000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21918442570385865;  // std dev = 0,418, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07935447455952292;  // std dev = 0,006, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0808829745686594;  // std dev = 0,000, 482,000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18410333694221528;  // std dev = 0,370, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return -0.0737353316483832;  // std dev = 0,006, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07507027566882842;  // std dev = 0,000, 445,000 (wgt'ed) examples reached here.  /* #neg=445 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1581207741620567;  // std dev = 0,331, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06896239822050615;  // std dev = 0,006, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0700212250043915;  // std dev = 0,000, 471,000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13824765858292135;  // std dev = 0,297, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.06468128850890421;  // std dev = 0,007, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06559658820459165;  // std dev = 0,000, 484,000 (wgt'ed) examples reached here.  /* #neg=484 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064582
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.808 seconds
Total inference time: 1.327 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065558
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.528 seconds
Parameter learned model CLL: -0.065558


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [4.47e-08, 43, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.08e-06, 0, 259], 'false': [2.95e-07, 454, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 39, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 259], 'false': [0.0, 453, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 37, 0], 'true,true': [2.58e-08, 0, 259], 'false': [0.0, 470, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 259], 'true,true,false,true': [3.49e-08, 57, 0], 'true,false': [0.0, 0, 0], 'false': [2.73e-07, 452, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [3.58e-07, 0, 216], 'true,true,false,true': [0.0, 37, 0], 'true,false': [0.0, 0, 0], 'false': [0.109, 528, 43], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.474, 0, 259], 'false,false': [1.95e-07, 456, 0], 'true,true,false,true': [0.008, 57, 0], 'true,false': [9.13e-09, 20, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.418, 0, 259], 'true,true,false,true': [0.006, 37, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 482, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.006, 34, 0], 'false': [0.0, 445, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.37, 0, 259]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.006, 44, 0], 'true,true': [0.331, 0, 259], 'false': [0.0, 471, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.297, 0, 259], 'true,false': [0.0, 0, 0], 'true,true,false': [0.007, 55, 0], 'false': [0.0, 484, 0]}]]
[{'': [0.12211087233016515, 1.9172133288681118e-16], 'true': [4.499189523731908e-15, 4.6474452193611206e-17], 'true,false,true': [4.6474452193611206e-17, nan], 'true,false': [4.6474452193611206e-17, nan], 'true,true': [4.499189523731908e-15, nan]}, {'': [0.08120093309322286, -1.254821608406358e-16], 'true': [-4.499189523731908e-15, -2.2773805633336544e-17], 'true,false,true': [-2.2773805633336544e-17, nan], 'true,false': [-2.2773805633336544e-17, nan], 'true,true': [-4.499189523731908e-15, nan]}, {'': [0.048759412336912826, -9.448706592554524e-18], 'true': [6.584179790827183e-16, -9.00180830777154e-18], 'true,false,true': [-9.00180830777154e-18, nan], 'true,false': [-9.00180830777154e-18, nan]}, {'': [0.03983997894373858, 1.6505970631595249e-16], 'true': [0.03983997894373858, nan], 'true,true,false': [2.1425356615573195e-17, nan], 'true,true': [-4.1151123692669897e-16, 2.1425356615573195e-17]}, {'': [0.02133840431847437, 0.011900841430793048], 'true': [0.02133840431847437, nan], 'true,true,false': [-7.50150692314295e-18, nan], 'true,true': [5.921189464667501e-16, -7.50150692314295e-18]}, {'': [0.02287288094908389, 8.375366676996795e-17], 'true': [0.01924240639668527, 4.163336342344337e-18], 'true,true,false': [1.063329785617895e-06, nan], 'true,true': [0.0008662270316172227, 1.063329785617895e-06], 'true,true,true': [0.0008662270316172227, nan], 'false': [nan, 8.375366676996795e-17]}, {'': [0.010339169372056273, -3.5932529427702164e-17], 'true': [0.010339169372056273, nan], 'true,true,true': [0.0006753616988432188, nan], 'true,true,false': [1.0324853869190062e-06, nan], 'true,true': [0.0006753616988432188, 1.0324853869190062e-06]}, {'': [0.0072877772578102745, -1.29733926473052e-17], 'true': [0.0072877772578102745, nan], 'true,true,true': [0.0005298638023846761, 8.909234108805626e-07], 'true,true': [0.0072877772578102745, nan]}, {'': [0.006761550193924631, -6.694338407506251e-17], 'true': [0.0004218384349889344, 8.751962013606426e-07], 'true,false,true': [8.751962013606426e-07, nan], 'true,false': [8.751962013606426e-07, nan]}, {'': [0.006231386426758532, -2.9361270072731413e-17], 'true': [0.006231386426758532, nan], 'true,true': [0.0003414015050458053, 7.882327767570121e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048724;  // std dev = 2,95e-07, 456,000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.12544463852839227;  // std dev = 0,000, 456,000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.11231637819360592;  // std dev = 0,000, 495,000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.10159632948783628;  // std dev = 2,47e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783577;  // std dev = 2,65e-07, 458,000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014933;  // std dev = 3,58e-07, 216,000 (wgt'ed) examples reached here.  /* #pos=216 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926122;  // std dev = 4,21e-08, 468,000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.25517224256948795;  // std dev = 3,32e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.0851847513883968;  // std dev = 1,97e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.08518475138839694;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.08518475138839678;  // std dev = 1,43e-07, 458,000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20975771563253545;  // std dev = 1,86e-07, 118,000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.15775440992746304;  // std dev = 0,111, 172,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=141 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310917;  // std dev = 1,95e-07, 456,000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18129180982444162;  // std dev = 0,062, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.0814092778294073;  // std dev = 0,054, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0732462257633375;  // std dev = 0,000, 490,000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15592126294965986;  // std dev = 0,055, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07672187218026397;  // std dev = 0,047, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420336;  // std dev = 0,000, 502,000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13648425209426773;  // std dev = 0,049, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.07097983598713407;  // std dev = 0,052, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820257;  // std dev = 1,88e-07, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063919
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.807 seconds
Total inference time: 1.418 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064855
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.032 seconds
Refined model CLL: -0.064855


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063919
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.175 seconds
Total inference time: 1.418 seconds
AUC ROC: 1.0
Total revision time: 10.175
Best scored revision CLL: -0.064855


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:59:34
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064582, 'Learning time': 2.808, 'Inference time': 1.327}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063919, 'Learning time': 10.175, 'Inference time': 1.418}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.14185106490048752;  // std dev = 2,60e-07, 437,000 (wgt'ed) examples reached here.  /* #neg=437 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.12544463852839227;  // std dev = 0,000, 466,000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4,13e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.1123163781936059;  // std dev = 0,000, 499,000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.10159632948783603;  // std dev = 2,04e-07, 470,000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1,46e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.09269127618926092;  // std dev = 1,44e-07, 423,000 (wgt'ed) examples reached here.  /* #neg=423 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3,26e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.08518475138839678;  // std dev = 1,32e-07, 497,000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2,86e-07, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07877675473109194;  // std dev = 0,000, 490,000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4,21e-08, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.07324622576333722;  // std dev = 2,11e-08, 460,000 (wgt'ed) examples reached here.  /* #neg=460 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.0684269778442035;  // std dev = 0,000, 505,000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06419184008202564;  // std dev = 2,05e-07, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.956 seconds
Total inference time: 1.315 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:59:39
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 3.956, 'Inference time': 1.315}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995087;  // std dev = 1,08e-06, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048743;  // std dev = 2,92e-07, 463,000 (wgt'ed) examples reached here.  /* #neg=463 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.315 seconds
Total inference time: 0.916 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:59:42
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 1.315, 'Inference time': 0.916}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048838;  // std dev = 0,000, 593,000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0,000, 605,000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360578;  // std dev = 0,000, 604,000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783616;  // std dev = 5,05e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783523;  // std dev = 3,95e-07, 562,000 (wgt'ed) examples reached here.  /* #neg=562 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716015033;  // std dev = 5,96e-08, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05579145126094711;  // std dev = 0,118, 661,000 (wgt'ed) examples reached here.  /* #neg=602 #pos=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2693420184324783;  // std dev = 0,541, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08613933522460175;  // std dev = 0,010, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08810465488737657;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08810465488737583;  // std dev = 2,62e-07, 591,000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21991947418609312;  // std dev = 0,477, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07941208151785534;  // std dev = 0,009, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08127827474706524;  // std dev = 2,49e-07, 628,000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18464277254107012;  // std dev = 0,422, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return -0.0740005482300363;  // std dev = 0,009, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07541193218089845;  // std dev = 0,000, 615,000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15853001847345122;  // std dev = 0,376, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06889990677740425;  // std dev = 0,007, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07031931116866738;  // std dev = 1,46e-07, 559,000 (wgt'ed) examples reached here.  /* #neg=559 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.1385671562415883;  // std dev = 0,338, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.0648253444547666;  // std dev = 0,009, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0658588315520659;  // std dev = 1,25e-07, 628,000 (wgt'ed) examples reached here.  /* #neg=628 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064806
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.289 seconds
Total inference time: 1.723 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065795
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.466 seconds
Parameter learned model CLL: -0.065795


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [4.94e-08, 46, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.04e-06, 0, 324], 'false': [0.0, 593, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 52, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 324], 'false': [0.0, 605, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [3.49e-08, 53, 0], 'true,true': [0.0, 0, 324], 'false': [0.0, 604, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 324], 'true,true,false,true': [5.05e-08, 71, 0], 'true,false': [0.0, 0, 0], 'false': [3.95e-07, 562, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [5.96e-08, 0, 265], 'true,true,false,true': [0.0, 31, 0], 'true,false': [0.0, 0, 0], 'false': [0.118, 602, 59], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.541, 0, 324], 'false,false': [2.62e-07, 591, 0], 'true,true,false,true': [0.01, 52, 0], 'true,false': [1.29e-08, 21, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.477, 0, 324], 'true,true,false,true': [0.009, 54, 0], 'true,false': [0.0, 0, 0], 'false': [2.49e-07, 628, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.009, 56, 0], 'false': [0.0, 615, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.422, 0, 324]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.007, 46, 0], 'true,true': [0.376, 0, 324], 'false': [1.46e-07, 559, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.338, 0, 324], 'true,false': [0.0, 0, 0], 'true,true,false': [0.009, 70, 0], 'false': [1.25e-07, 628, 0]}]]
[{'': [0.10886778670562777, -2.8158101670088286e-16], 'true': [3.333410365294297e-15, 5.3097622916855314e-17], 'true,false,true': [5.3097622916855314e-17, nan], 'true,false': [5.3097622916855314e-17, nan], 'true,true': [3.333410365294297e-15, nan]}, {'': [0.08507497709662852, -2.4076241459639756e-16], 'true': [-5.000115547941446e-15, -3.416070845000482e-17], 'true,false,true': [-3.416070845000482e-17, nan], 'true,false': [-3.416070845000482e-17, nan], 'true,true': [-5.000115547941446e-15, nan]}, {'': [0.0538615163825668, -3.2350869591726415e-17], 'true': [-4.386066270124075e-16, 2.3042364662031552e-17], 'true,false,true': [2.3042364662031552e-17, nan], 'true,false': [2.3042364662031552e-17, nan]}, {'': [0.03973084606095963, 2.781484018989716e-16], 'true': [0.03973084606095963, nan], 'true,true,false': [3.596497122025155e-17, nan], 'true,true': [-9.430042480766762e-16, 3.596497122025155e-17]}, {'': [0.01602402643096348, 0.013892905796670817], 'true': [0.01602402643096348, nan], 'true,true,false': [-1.0744093786695063e-17, nan], 'true,true': [1.340646671245472e-17, -1.0744093786695063e-17]}, {'': [0.0197603414270687, 1.1571867735517707e-16], 'true': [0.015836712633293438, 7.93016446160826e-18], 'true,true,false': [1.876062383063473e-06, nan], 'true,true': [0.0009018199190164944, 1.876062383063473e-06], 'true,true,true': [0.0009018199190164944, nan], 'false': [nan, 1.1571867735517707e-16]}, {'': [0.011573182933173165, 9.900077926593753e-17], 'true': [0.011573182933173165, nan], 'true,true,true': [0.0007018988998479278, nan], 'true,true,false': [1.4183558558519312e-06, nan], 'true,true': [0.0007018988998479278, 1.4183558558519312e-06]}, {'': [0.008874629973855777, -1.4441925523579274e-17], 'true': [0.008874629973855777, nan], 'true,true,true': [0.0005498544045777203, 1.4475657624791829e-06], 'true,true': [0.008874629973855777, nan]}, {'': [0.006014100608423334, 3.8132883851168164e-17], 'true': [0.00043720120077836606, 1.0969128122176681e-06], 'true,false,true': [1.0969128122176681e-06, nan], 'true,false': [1.0969128122176681e-06, nan]}, {'': [0.006334816441557129, 2.4750194816484382e-17], 'true': [0.006334816441557129, nan], 'true,true': [0.0003534639976903066, 1.159289781113967e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048832;  // std dev = 0,000, 585,000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1254446385283923;  // std dev = 0,000, 625,000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360579;  // std dev = 0,000, 541,000 (wgt'ed) examples reached here.  /* #neg=541 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783534;  // std dev = 3,64e-07, 531,000 (wgt'ed) examples reached here.  /* #neg=531 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716015033;  // std dev = 5,96e-08, 265,000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.09269127618926101;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.09269127618926175;  // std dev = 0,000, 600,000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.25517224256948756;  // std dev = 4,09e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.08518475138839678;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839678;  // std dev = 1,52e-07, 553,000 (wgt'ed) examples reached here.  /* #neg=553 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253476;  // std dev = 2,76e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109254;  // std dev = 0,000, 629,000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452782;  // std dev = 0,000, 150,000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.14239552616982648;  // std dev = 0,087, 202,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=174 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0732462257633367;  // std dev = 2,08e-07, 560,000 (wgt'ed) examples reached here.  /* #neg=560 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15518473194995955;  // std dev = 0,041, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07572962542840278;  // std dev = 0,059, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420342;  // std dev = 0,000, 610,000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13591038709508715;  // std dev = 0,037, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07120075198695708;  // std dev = 0,053, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202553;  // std dev = 2,37e-07, 571,000 (wgt'ed) examples reached here.  /* #neg=571 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063885
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.057 seconds
Total inference time: 1.442 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064821
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.13 seconds
Refined model CLL: -0.064821


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063885
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.942 seconds
Total inference time: 1.442 seconds
AUC ROC: 1.0
Total revision time: 10.942
Best scored revision CLL: -0.064821


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:59:57
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064806, 'Learning time': 3.289, 'Inference time': 1.723}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063885, 'Learning time': 10.942, 'Inference time': 1.442}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1418510649004884;  // std dev = 0,000, 595,000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1254446385283923;  // std dev = 0,000, 582,000 (wgt'ed) examples reached here.  /* #neg=582 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.11231637819360588;  // std dev = 0,000, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783627;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783551;  // std dev = 3,50e-07, 586,000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926175;  // std dev = 0,000, 592,000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3,86e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839678;  // std dev = 1,46e-07, 584,000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.0787767547310923;  // std dev = 0,000, 566,000 (wgt'ed) examples reached here.  /* #neg=566 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527653;  // std dev = 2,73e-07, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07324622576333686;  // std dev = 1,67e-07, 609,000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 1,97e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06842697784420361;  // std dev = 0,000, 578,000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06419184008202553;  // std dev = 2,37e-07, 578,000 (wgt'ed) examples reached here.  /* #neg=578 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.339 seconds
Total inference time: 1.223 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 01:00:02
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063422, 'Learning time': 4.339, 'Inference time': 1.223}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1,04e-06, 324,000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1418510649004885;  // std dev = 0,000, 617,000 (wgt'ed) examples reached here.  /* #neg=617 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.428 seconds
Total inference time: 0.897 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 01:00:05
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152985, 'Learning time': 1.428, 'Inference time': 0.897}


Starting fold 3

Target train facts examples: 533
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 163
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283916;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462842;  // std dev = 2,11e-08, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360626;  // std dev = 5,05e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5,96e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.3207118471601495;  // std dev = 2,11e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08296414387515728;  // std dev = 0,063, 85,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.25936604506711364;  // std dev = 0,116, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08594583531047209;  // std dev = 2,58e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21278788920241504;  // std dev = 0,103, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07951562805834372;  // std dev = 0,006, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.17936271362566966;  // std dev = 0,091, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07380666092680162;  // std dev = 4,65e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.154492537313034;  // std dev = 0,082, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06898626965418968;  // std dev = 0,006, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.1353929200657807;  // std dev = 0,074, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06462011813865699;  // std dev = 1,97e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067592
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.351 seconds
Total inference time: 1.625 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064148
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.283 seconds
Parameter learned model CLL: -0.064148


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.46e-07, 0, 40], 'false': [6.66e-08, 66, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 40], 'false': [0.0, 63, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,true': [2.11e-08, 0, 40], 'false': [5.05e-08, 65, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'false': [5.96e-08, 80, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.11e-08, 0, 38], 'true,true,false,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.063, 83, 2], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.116, 0, 40], 'false,false': [2.58e-08, 85, 0], 'true,true,false,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.103, 0, 40], 'true,true,false,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false': [0.006, 76, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [4.65e-08, 83, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.091, 0, 40]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.0, 2, 0], 'true,true': [0.082, 0, 40], 'false': [0.006, 83, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.074, 0, 40], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 3, 0], 'false': [1.97e-08, 97, 0]}]]
[{'': [0.0826446280991747, 6.728624391667616e-17], 'true': [1.5099033134902129e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [1.5099033134902129e-15, nan]}, {'': [0.04633119604965933, -4.053195169266444e-17], 'true': [-8.881784197001252e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-8.881784197001252e-16, nan]}, {'': [0.03684300341868297, 3.928481471750554e-17], 'true': [4.884981308350689e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.030564283831271178, 4.4408920985006264e-17], 'true': [0.030564283831271178, nan], 'true,true,false': [0.0, nan], 'true,true': [-3.3306690738754696e-16, 0.0]}, {'': [0.004269744517430537, 0.003926609776827409], 'true': [0.004269744517430537, nan], 'true,true,false': [0.0, nan], 'true,true': [1.1686558153949016e-17, 0.0]}, {'': [0.01011497016780526, 7.836868409118752e-18], 'true': [0.01011497016780526, nan], 'true,true,false': [0.0, nan], 'true,true': [0.000334171608392464, 0.0], 'true,true,true': [0.000334171608392464, nan], 'false': [nan, 7.836868409118752e-18]}, {'': [0.00863032329671331, 5.513008707310576e-07], 'true': [0.00863032329671331, nan], 'true,true,true': [0.0002635646430166616, nan], 'true,true,false': [-1.3877787807814458e-18, nan], 'true,true': [0.0002635646430166616, -1.3877787807814458e-18]}, {'': [0.00020898872951166658, 2.608355298818139e-17], 'true': [0.00020898872951166658, nan], 'true,true,true': [0.00020898872951166658, nan], 'true,true': [0.00020898872951166658, nan]}, {'': [0.0025120681676893144, 3.8992207611382646e-07], 'true': [0.00016791232809494904, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.002823508697561216, 4.005959367204173e-18], 'true': [0.002823508697561216, nan], 'true,true': [0.00013695435331765037, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360624;  // std dev = 6,32e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5,05e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.29315163893685564;  // std dev = 0,103, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.32071184716014955;  // std dev = 2,98e-08, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0.04510976492720923;  // std dev = 0,477, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.26676048401814617;  // std dev = 0,067, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.2411031396302739;  // std dev = 0,069, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.12242974476906181;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08618803781685302;  // std dev = 0,027, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1987926915253255;  // std dev = 0,078, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0.19918465602717927;  // std dev = 0,063, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07954002503694041;  // std dev = 0,025, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.18602094806803038;  // std dev = 0,053, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.15666430245698756;  // std dev = 0,083, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   else return -0.07416070848359559;  // std dev = 0,026, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1590043694511683;  // std dev = 0,047, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.15096180057641553;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06875016719740135;  // std dev = 0,016, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13888316207439777;  // std dev = 0,042, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.1326950814587699;  // std dev = 0,000162, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06515046648554426;  // std dev = 0,026, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077303
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.549 seconds
Total inference time: 1.379 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066768
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.239 seconds
Refined model CLL: -0.066768


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067592
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.422 seconds
Total inference time: 1.625 seconds
AUC ROC: 1.0
Total revision time: 5.422
Best scored revision CLL: -0.064148


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:00:14
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067592, 'Learning time': 1.351, 'Inference time': 1.625}, 'CLL': -0.067592, 'Learning time': 5.422, 'Inference time': 1.625}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,74e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1272271896693185;  // std dev = 0,154, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11213877811294191;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1,40e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10144993199836709;  // std dev = 4,71e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( female(A) )
%   | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.3967491876124641;  // std dev = 0,102, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09256868526300832;  // std dev = 4,34e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3234360770829302;  // std dev = 0,014, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14423639877069303;  // std dev = 0,002, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08508069975649431;  // std dev = 4,34e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2570315664047722;  // std dev = 0,012, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12823257998486629;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07868740012279313;  // std dev = 3,57e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2110710472483682;  // std dev = 0,011, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1145678984850905;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0731687054516442;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return 0.1712170817247765;  // std dev = 0,277, 41,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06835911860700546;  // std dev = 2,58e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1543655409109442;  // std dev = 0,008, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11989120643812004;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.12930660090439827;  // std dev = 0,242, 41,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else return -0.06466948951038895;  // std dev = 0,043, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113103
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.831 seconds
Total inference time: 1.334 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:00:17
{'Precision': [0.626761, 0.5], 'F1': 0.770563, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.113103, 'Learning time': 1.831, 'Inference time': 1.334}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,15e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.193993
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.715 seconds
Total inference time: 0.888 seconds
AUC ROC: 0.985041


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:00:19
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 0.626761, 'AUC ROC': 0.985041, 'Recall': 0.0, 'CLL': -0.193993, 'Learning time': 0.715, 'Inference time': 0.888}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004882;  // std dev = 0,000, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 4,21e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462836;  // std dev = 3,80e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 9,77e-08, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583104;  // std dev = 9,13e-09, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783645;  // std dev = 0,000, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716015005;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0848912172581398;  // std dev = 0,056, 159,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2582947622155194;  // std dev = 0,143, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08579456681189418;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08579456681189386;  // std dev = 8,69e-08, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21201549059484795;  // std dev = 0,127, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07887140822522695;  // std dev = 0,000518, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07930014065479074;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.178786223522836;  // std dev = 0,113, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.07323980082857186;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07370006971764552;  // std dev = 2,79e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1540485194885329;  // std dev = 0,102, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06842135395295691;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06882408822111698;  // std dev = 5,05e-08, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13504159802554658;  // std dev = 0,092, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.06418687809517538;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06454209542345526;  // std dev = 0,000, 168,000 (wgt'ed) examples reached here.  /* #neg=168 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.67 seconds
Total inference time: 1.603 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063877
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.788 seconds
Parameter learned model CLL: -0.063877


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 81], 'false': [0.0, 169, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.53e-07, 0, 81], 'false': [4.21e-08, 155, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,true': [3.8e-08, 0, 81], 'false': [9.77e-08, 147, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [9.13e-09, 0, 81], 'true,true,false,true': [3.73e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 146, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 78], 'true,true,false,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [0.056, 156, 3], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.143, 0, 81], 'false,false': [8.69e-08, 160, 0], 'true,true,false,true': [0.0, 5, 0], 'true,false': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.127, 0, 81], 'true,true,false,true': [0.000518, 6, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 167, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 4, 0], 'false': [2.79e-08, 155, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.113, 0, 81]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [2.63e-09, 9, 0], 'true,true': [0.102, 0, 81], 'false': [5.05e-08, 162, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.092, 0, 81], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 9, 0], 'false': [0.0, 168, 0]}]]
[{'': [0.09000000000000025, -1.6554804864233104e-16], 'true': [-7.894919286223335e-16, -9.25185853854297e-18], 'true,false,true': [-9.25185853854297e-18, nan], 'true,false': [-9.25185853854297e-18, nan], 'true,true': [-7.894919286223335e-16, nan]}, {'': [0.03909194666690132, 1.1460366705808068e-17], 'true': [7.894919286223335e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [7.894919286223335e-16, nan]}, {'': [0.019991600083406356, 6.49518232093629e-17], 'true': [1.4474018691409447e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.022045179445122985, -5.627157796045314e-17], 'true': [0.022045179445122985, nan], 'true,true,false': [1.734723475976807e-18, nan], 'true,true': [8.77213254024815e-17, 1.734723475976807e-18]}, {'': [0.004165739720879002, 0.003163727805105916], 'true': [0.004165739720879002, nan], 'true,true,false': [0.0, nan], 'true,true': [-2.7328566760003855e-16, 0.0]}, {'': [0.007815800785565355, 4.718447854656915e-17], 'true': [0.006699170597705404, 0.0], 'true,true,false': [0.0, nan], 'true,true': [0.0002535033524358486, 0.0], 'true,true,true': [0.0002535033524358486, nan], 'false': [nan, 4.718447854656915e-17]}, {'': [0.005619476777988617, -4.387707761991637e-17], 'true': [0.005619476777988617, nan], 'true,true,true': [0.00020020079848967647, nan], 'true,true,false': [4.4796419758815396e-08, nan], 'true,true': [0.00020020079848967647, 4.4796419758815396e-08]}, {'': [0.0029998391221083055, 5.013910433791029e-18], 'true': [0.0029998391221083055, nan], 'true,true,true': [0.0001589385280044167, 0.0], 'true,true': [0.0029998391221083055, nan]}, {'': [0.004569407546200309, 1.5762425658258394e-17], 'true': [0.00012783503687088633, 7.709882115452476e-19], 'true,false,true': [7.709882115452476e-19, nan], 'true,false': [7.709882115452476e-19, nan]}, {'': [0.003666203530937643, -1.982541115402065e-18], 'true': [0.003666203530937643, nan], 'true,true': [0.00010436090908110893, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048802;  // std dev = 0,000, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1254446385283915;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360628;  // std dev = 8,43e-08, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.34092359689904295;  // std dev = 0,184, 61,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783652;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2911830526351917;  // std dev = 0,106, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.3376213475561581;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.13720647702094954;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926067;  // std dev = 7,88e-08, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else return 0.1553505978203855;  // std dev = 0,453, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.26558451129050337;  // std dev = 0,046, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.11967571914787968;  // std dev = 0,014, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.10660886530354245;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839678;  // std dev = 6,66e-08, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.21539071873758553;  // std dev = 0,039, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.10608715275251697;  // std dev = 0,011, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.18360371464127295;  // std dev = 0,101, 58,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07890509420627609;  // std dev = 0,018, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.17190745681930913;  // std dev = 0,051, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return 0.18835692899839102;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07335944253155963;  // std dev = 0,017, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15975558368101558;  // std dev = 0,035, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.13508026539254944;  // std dev = 0,055, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06841158151265055;  // std dev = 0,000, 158,000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13709358548496609;  // std dev = 0,027, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.10165576850739631;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1355783927471915;  // std dev = 0,038, 53,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06441129091249803;  // std dev = 0,021, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079503
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.715 seconds
Total inference time: 1.248 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067035
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.479 seconds
Refined model CLL: -0.067035


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.652 seconds
Total inference time: 1.603 seconds
AUC ROC: 1.0
Total revision time: 6.652
Best scored revision CLL: -0.063877


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:00:29
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066432, 'Learning time': 1.67, 'Inference time': 1.603}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066432, 'Learning time': 6.652, 'Inference time': 1.603}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048807;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2,53e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839133;  // std dev = 4,21e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3,42e-07, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360629;  // std dev = 8,82e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 8,43e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783646;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926068;  // std dev = 8,16e-08, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839678;  // std dev = 5,48e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109155;  // std dev = 7,67e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527716;  // std dev = 3,65e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07324622576333678;  // std dev = 9,42e-08, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5,96e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367116;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080109;  // std dev = 5,58e-08, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06428627392285963;  // std dev = 0,015, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065854
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.276 seconds
Total inference time: 1.383 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:00:33
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065854, 'Learning time': 2.276, 'Inference time': 1.383}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048816;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.879 seconds
Total inference time: 0.958 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:00:35
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.188432, 'Learning time': 0.879, 'Inference time': 0.958}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004885;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0,000, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,34e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360683;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583093;  // std dev = 3,20e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716014994;  // std dev = 2,06e-07, 119,000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08725176140834727;  // std dev = 0,047, 228,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.25725841167731517;  // std dev = 0,145, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08521509780070205;  // std dev = 0,000409, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08560960116066924;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08560960116066944;  // std dev = 0,000, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21126725562855866;  // std dev = 0,129, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07877455249043332;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07914144343867581;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.17822703448124125;  // std dev = 0,115, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return -0.07324431532568311;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07356249885067133;  // std dev = 0,000, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15361731477470622;  // std dev = 0,103, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06842530560093586;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06870374577900244;  // std dev = 0,000, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13470005283665049;  // std dev = 0,093, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.06421219979646334;  // std dev = 0,000316, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06443597655581344;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #neg=195 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066368
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.909 seconds
Total inference time: 1.889 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063782
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.826 seconds
Parameter learned model CLL: -0.063782


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [6.85e-07, 0, 122], 'false': [0.0, 218, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 122], 'false': [0.0, 258, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [1.05e-08, 13, 0], 'true,true': [4.34e-08, 0, 122], 'false': [0.0, 249, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [3.2e-08, 0, 122], 'true,true,false,true': [0.0, 13, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 225, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.06e-07, 0, 119], 'true,true,false,true': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.047, 225, 3], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.145, 0, 122], 'false,false': [0.0, 258, 0], 'true,true,false,true': [0.000409, 14, 0], 'true,false': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.129, 0, 122], 'true,true,false,true': [3.73e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 232, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [2.63e-09, 9, 0], 'false': [0.0, 224, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.115, 0, 122]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [2.63e-09, 7, 0], 'true,true': [0.103, 0, 122], 'false': [0.0, 275, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.093, 0, 122], 'true,false': [0.0, 0, 0], 'true,true,false': [0.000316, 15, 0], 'false': [0.0, 195, 0]}]]
[{'': [0.08153263533081274, -2.363043501954462e-16], 'true': [3.843919718046444e-15, -1.1564823173178714e-17], 'true,false,true': [-1.1564823173178714e-17, nan], 'true,false': [-1.1564823173178714e-17, nan], 'true,true': [3.843919718046444e-15, nan]}, {'': [0.045676090594181346, -8.26212483441977e-17], 'true': [-1.3395477805313363e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.3395477805313363e-15, nan]}, {'': [0.038795025591583335, -8.917454013053466e-17], 'true': [1.8054774433248448e-15, 8.540177112501205e-18], 'true,false,true': [8.540177112501205e-18, nan], 'true,false': [8.540177112501205e-18, nan]}, {'': [0.023450617968664322, -8.092292268378919e-17], 'true': [0.023450617968664322, nan], 'true,true,false': [-2.135044278125301e-18, nan], 'true,true': [1.0192211373607994e-15, -2.135044278125301e-18]}, {'': [0.012221233666853789, 0.0022191240788830766], 'true': [0.012221233666853789, nan], 'true,true,false': [0.0, nan], 'true,true': [3.582568415597144e-16, 0.0]}, {'': [0.011591221472406687, -3.700743415417188e-17], 'true': [0.010985750342955276, 0.0], 'true,true,false': [1.1971761619742973e-08, nan], 'true,true': [0.00017263336134226066, 1.1971761619742973e-08], 'true,true,true': [0.00017263336134226066, nan], 'false': [nan, -3.700743415417188e-17]}, {'': [0.005509596544772325, -1.3399243400648442e-17], 'true': [0.005509596544772325, nan], 'true,true,true': [0.00013651353417121022, nan], 'true,true,false': [1.5419764230904951e-18, nan], 'true,true': [0.00013651353417121022, 1.5419764230904951e-18]}, {'': [0.004147155948790584, -6.046750401976298e-17], 'true': [0.004147155948790584, nan], 'true,true,true': [0.00010850927078301694, 7.709882115452476e-19], 'true,true': [0.004147155948790584, nan]}, {'': [0.0026128044876292406, -2.260817795600319e-17], 'true': [8.736696554808994e-05, 9.912705577010326e-19], 'true,false,true': [9.912705577010326e-19, nan], 'true,false': [9.912705577010326e-19, nan]}, {'': [0.003921313617295969, -1.764969936583582e-17], 'true': [0.003921313617295969, nan], 'true,true': [7.138850025071072e-05, 6.674825542748083e-09]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048818;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839186;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,69e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360683;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583093;  // std dev = 3,53e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.32071184716014983;  // std dev = 8,43e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.2908272840264579;  // std dev = 0,107, 83,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08732240445745003;  // std dev = 0,711, 231,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.26086977048654164;  // std dev = 0,142, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.10983280423715824;  // std dev = 0,050, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.08560407134246799;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08560407134246834;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.2138360980284933;  // std dev = 0,126, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07707023523831241;  // std dev = 0,000349, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.1834072202731847;  // std dev = 0,094, 85,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07913669824176292;  // std dev = 0,000, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.18014514416238453;  // std dev = 0,112, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07170409229664237;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.18458206216224443;  // std dev = 5,16e-08, 77,000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | | else return -0.1282180828677657;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0735583848112181;  // std dev = 9,31e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15718040079206416;  // std dev = 0,102, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09625679910846598;  // std dev = 0,081, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06870014653655729;  // std dev = 1,01e-07, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13562553743918973;  // std dev = 0,091, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06129726554404699;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.11824359206364948;  // std dev = 0,067, 84,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06443280239051194;  // std dev = 4,08e-08, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069652
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.139 seconds
Total inference time: 1.577 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065506
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.652 seconds
Refined model CLL: -0.065506


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066368
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.526000000000001 seconds
Total inference time: 1.889 seconds
AUC ROC: 1.0
Total revision time: 7.526000000000001
Best scored revision CLL: -0.063782


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:00:47
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066368, 'Learning time': 1.909, 'Inference time': 1.889}, 'CLL': -0.066368, 'Learning time': 7.526000000000001, 'Inference time': 1.889}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1418510649004885;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839183;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,69e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.11278090206602241;  // std dev = 0,115, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583093;  // std dev = 3,53e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.1019861382308158;  // std dev = 0,107, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2,19e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09261945215253317;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08512379160811856;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325354;  // std dev = 1,93e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07872440714181163;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452781;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07443850942252571;  // std dev = 0,141, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936714;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06830841328535044;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080111;  // std dev = 5,16e-08, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06408722017786596;  // std dev = 6,32e-08, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067553
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.587 seconds
Total inference time: 1.433 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:00:51
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067553, 'Learning time': 2.587, 'Inference time': 1.433}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004883;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995105;  // std dev = 6,85e-07, 122,000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.193993
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.024 seconds
Total inference time: 0.882 seconds
AUC ROC: 0.985041


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:00:53
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 0.626761, 'AUC ROC': 0.985041, 'Recall': 0.0, 'CLL': -0.193993, 'Learning time': 1.024, 'Inference time': 0.882}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048793;  // std dev = 0,000, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839202;  // std dev = 0,000, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 4,41e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360693;  // std dev = 0,000, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830914;  // std dev = 3,37e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783662;  // std dev = 0,000, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716014933;  // std dev = 3,48e-07, 158,000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08664737087713457;  // std dev = 0,050, 342,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2577704612721871;  // std dev = 0,186, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08565692506348796;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08565692506348825;  // std dev = 2,98e-08, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21163716029009474;  // std dev = 0,166, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.0787998984289187;  // std dev = 0,000428, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07918205090162274;  // std dev = 1,05e-07, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1785036263131802;  // std dev = 0,148, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return -0.0733217771045594;  // std dev = 0,000642, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0735977038416887;  // std dev = 1,32e-07, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1538307025110757;  // std dev = 0,133, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06845039763742919;  // std dev = 0,000371, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06873454451733706;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.1348691423471318;  // std dev = 0,120, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.0642105037340025;  // std dev = 0,000351, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06446313713148621;  // std dev = 0,000, 325,000 (wgt'ed) examples reached here.  /* #neg=325 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066379
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.44 seconds
Total inference time: 1.596 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063811
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.754 seconds
Parameter learned model CLL: -0.063811


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.02e-06, 0, 163], 'false': [0.0, 289, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 163], 'false': [0.0, 306, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [1.39e-08, 16, 0], 'true,true': [4.41e-08, 0, 163], 'false': [0.0, 291, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [3.37e-08, 0, 163], 'true,true,false,true': [3.73e-09, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 301, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [3.48e-07, 0, 158], 'true,true,false,true': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.05, 337, 5], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.186, 0, 163], 'false,false': [2.98e-08, 312, 0], 'true,true,false,true': [8.33e-09, 14, 0], 'true,false': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.166, 0, 163], 'true,true,false,true': [0.000428, 19, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-07, 323, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.000642, 16, 0], 'false': [1.32e-07, 301, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.148, 0, 163]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.000371, 13, 0], 'true,true': [0.133, 0, 163], 'false': [0.0, 296, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.12, 0, 163], 'true,false': [0.0, 0, 0], 'true,true,false': [0.000351, 14, 0], 'false': [0.0, 325, 0]}]]
[{'': [0.049587614926993887, -6.146563458132355e-18], 'true': [6.3643705166242106e-15, -9.25185853854297e-18], 'true,false,true': [-9.25185853854297e-18, nan], 'true,false': [-9.25185853854297e-18, nan], 'true,true': [6.3643705166242106e-15, nan]}, {'': [0.01668951938496245, -8.707631565687502e-17], 'true': [-2.7898610483832155e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-2.7898610483832155e-15, nan]}, {'': [0.036286236081356615, -1.0682558312544462e-16], 'true': [1.8744378918824727e-15, 1.214306433183765e-17], 'true,false,true': [1.214306433183765e-17, nan], 'true,false': [1.214306433183765e-17, nan]}, {'': [0.014676214273331345, -5.458903908455919e-17], 'true': [0.014676214273331345, nan], 'true,true,false': [1.3877787807814458e-18, nan], 'true,true': [1.176972629786669e-15, 1.3877787807814458e-18]}, {'': [0.009567225941900414, 0.0024620405418391026], 'true': [0.009567225941900414, nan], 'true,true,false': [0.0, nan], 'true,true': [7.645080068304876e-16, 0.0]}, {'': [0.009273415117481911, 2.846725704167068e-18], 'true': [0.008763749353267614, 0.0], 'true,true,false': [4.956352788505163e-18, nan], 'true,true': [0.00021332339749427788, 4.956352788505163e-18], 'true,true,true': [0.00021332339749427788, nan], 'false': [nan, 2.846725704167068e-18]}, {'': [0.008037822407035254, 3.437222986455593e-17], 'true': [0.008037822407035254, nan], 'true,true,true': [0.00016859143080544294, nan], 'true,true,false': [9.641353480933411e-09, nan], 'true,true': [0.00016859143080544294, 9.641353480933411e-09]}, {'': [0.005283756378428105, 5.753979795399482e-17], 'true': [0.005283756378428105, nan], 'true,true,true': [0.0001339324857586227, 2.5774045141202517e-08], 'true,true': [0.005283756378428105, nan]}, {'': [0.0034797767658868513, -3.225647976951468e-17], 'true': [0.0001077840311923551, 1.0592789294221301e-08], 'true,false,true': [1.0592789294221301e-08, nan], 'true,false': [1.0592789294221301e-08, nan]}, {'': [0.0029679127951161527, -1.4347497549002023e-17], 'true': [0.0029679127951161527, nan], 'true,true': [8.803453153948688e-05, 8.787223925681748e-09]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1418510649004878;  // std dev = 1,15e-07, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.12544463852839205;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360658;  // std dev = 0,000, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878366;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.32071184716015005;  // std dev = 1,03e-07, 63,000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.2923410445773477;  // std dev = 0,105, 102,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08683570786986373;  // std dev = 0,918, 353,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.26093618163794097;  // std dev = 0,182, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.11397819755116893;  // std dev = 0,045, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.08564217569585113;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08564217569585163;  // std dev = 0,000, 347,000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21386541177861618;  // std dev = 0,162, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.09811782550960803;  // std dev = 0,059, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07916939516117805;  // std dev = 1,54e-07, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18013225094340446;  // std dev = 0,144, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.08677746442528537;  // std dev = 0,058, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0735867320846175;  // std dev = 0,000, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15506230704395765;  // std dev = 0,129, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.0794579551570443;  // std dev = 0,049, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06872494617430676;  // std dev = 8,43e-08, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13582798869853424;  // std dev = 0,117, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.07354698153782917;  // std dev = 0,056, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06445467276082574;  // std dev = 8,69e-08, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066662
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.483 seconds
Total inference time: 1.508 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064302
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.25 seconds
Refined model CLL: -0.064302


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066379
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.927 seconds
Total inference time: 1.596 seconds
AUC ROC: 1.0
Total revision time: 9.927
Best scored revision CLL: -0.063811


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:01:07
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066379, 'Learning time': 2.44, 'Inference time': 1.596}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066379, 'Learning time': 9.927, 'Inference time': 1.596}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048796;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.12544463852839205;  // std dev = 0,000, 321,000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,53e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.1123163781936069;  // std dev = 0,000, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4,38e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.10159632948783659;  // std dev = 0,000, 335,000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926042;  // std dev = 1,62e-07, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3,63e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08530094763950749;  // std dev = 0,038, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2,65e-07, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07888351423571721;  // std dev = 0,036, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07323109269541597;  // std dev = 1,53e-07, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367147;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06841373143192452;  // std dev = 1,13e-07, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 9,42e-08, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06419184008202618;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06418015263348076;  // std dev = 0,000, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066294
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.946 seconds
Total inference time: 1.218 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:01:11
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066294, 'Learning time': 2.946, 'Inference time': 1.218}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 1,93e-07, 334,000 (wgt'ed) examples reached here.  /* #neg=334 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995097;  // std dev = 1,02e-06, 163,000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.193993
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.08 seconds
Total inference time: 0.879 seconds
AUC ROC: 0.985041


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:01:14
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 0.626761, 'AUC ROC': 0.985041, 'Recall': 0.0, 'CLL': -0.193993, 'Learning time': 1.08, 'Inference time': 0.879}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048727;  // std dev = 2,98e-07, 420,000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0,000, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 4,41e-08, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 0,000, 403,000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 1,49e-07, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08280124931487272;  // std dev = 0,063, 418,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2592820242913888;  // std dev = 0,259, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08521992782672415;  // std dev = 0,000756, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08595863303159827;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08595863303159834;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21272728716000178;  // std dev = 0,230, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.0788192459917715;  // std dev = 0,000698, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07944086785308359;  // std dev = 0,000, 363,000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.17931746975143117;  // std dev = 0,204, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return -0.07327305577829127;  // std dev = 0,000658, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07382203345608121;  // std dev = 0,000, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1544576819121535;  // std dev = 0,183, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06845988429281473;  // std dev = 0,000613, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06893075543518658;  // std dev = 7,45e-08, 409,000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13536533559068437;  // std dev = 0,166, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.0641835865367851;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06463613766529884;  // std dev = 0,000, 402,000 (wgt'ed) examples reached here.  /* #neg=402 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066487
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.486 seconds
Total inference time: 1.711 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.688 seconds
Parameter learned model CLL: -0.063975


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.08e-06, 0, 204], 'false': [2.98e-07, 420, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 20, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 204], 'false': [0.0, 400, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [7.45e-09, 24, 0], 'true,true': [4.41e-08, 0, 204], 'false': [0.0, 403, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.83e-08, 0, 204], 'true,true,false,true': [0.0, 22, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-07, 368, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [3.95e-07, 0, 194], 'true,true,false,true': [7.45e-09, 15, 0], 'true,false': [0.0, 0, 0], 'false': [0.063, 408, 10], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.259, 0, 204], 'false,false': [0.0, 382, 0], 'true,true,false,true': [0.000756, 22, 0], 'true,false': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.23, 0, 204], 'true,true,false,true': [0.000698, 16, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 363, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.000658, 21, 0], 'false': [0.0, 391, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.204, 0, 204]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.000613, 16, 0], 'true,true': [0.183, 0, 204], 'false': [7.45e-08, 409, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.166, 0, 204], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 18, 0], 'false': [0.0, 402, 0]}]]
[{'': [0.052469135802474705, 2.1147105230955362e-16], 'true': [5.712206307091002e-15, -1.1564823173178714e-17], 'true,false,true': [-1.1564823173178714e-17, nan], 'true,false': [-1.1564823173178714e-17, nan], 'true,true': [5.712206307091002e-15, nan]}, {'': [0.05804880761435235, -1.2656542480726783e-16], 'true': [-3.692035783851501e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-3.692035783851501e-15, nan]}, {'': [0.041986735751930154, -1.983525006774473e-17], 'true': [1.9853399969767506e-15, 2.3129646346357427e-18], 'true,false,true': [2.3129646346357427e-18, nan], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.0236785233725497, 6.033820786006285e-17], 'true': [0.0236785233725497, nan], 'true,true,false': [-1.1354553660939102e-17, nan], 'true,true': [3.134747363647501e-16, -1.1354553660939102e-17]}, {'': [0.01138539031546036, 0.003990755368305561], 'true': [0.01138539031546036, nan], 'true,true,false': [3.7007434154171884e-18, nan], 'true,true': [8.057701127176394e-16, 3.7007434154171884e-18]}, {'': [0.011474950045713883, -4.766402514097531e-17], 'true': [0.010724217135154255, 0.0], 'true,true,false': [2.5985018093063497e-08, nan], 'true,true': [0.0003276719325531284, 2.5985018093063497e-08], 'true,true,true': [0.0003276719325531284, nan], 'false': [nan, -4.766402514097531e-17]}, {'': [0.0059718507441418175, -2.446772506060951e-18], 'true': [0.0059718507441418175, nan], 'true,true,true': [0.0002584556445335241, nan], 'true,true,false': [3.04344444116908e-08, nan], 'true,true': [0.0002584556445335241, 3.04344444116908e-08]}, {'': [0.0055848897626798516, -8.404757424272285e-17], 'true': [0.0055848897626798516, nan], 'true,true,true': [0.0002049518954539866, 2.0610791291929076e-08], 'true,true': [0.0055848897626798516, nan]}, {'': [0.0035038506212966983, 1.3572408613999468e-17], 'true': [0.00016467940577192134, 2.348359979132547e-08], 'true,false,true': [2.348359979132547e-08, nan], 'true,false': [2.348359979132547e-08, nan]}, {'': [0.0030902831436046595, -3.3140985809706165e-18], 'true': [0.0030902831436046595, nan], 'true,true': [0.00013432499739809815, -7.709882115452476e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048738;  // std dev = 2,89e-07, 390,000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.12544463852839224;  // std dev = 0,000, 384,000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.11231637819360639;  // std dev = 0,000, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783598;  // std dev = 2,06e-07, 392,000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.320711847160149;  // std dev = 3,95e-07, 194,000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.32071184716014983;  // std dev = 2,11e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926103;  // std dev = 1,17e-07, 426,000 (wgt'ed) examples reached here.  /* #neg=426 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.25517224256948845;  // std dev = 4,40e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.08518475138839683;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839678;  // std dev = 1,25e-07, 398,000 (wgt'ed) examples reached here.  /* #neg=398 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253498;  // std dev = 3,04e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109141;  // std dev = 1,21e-07, 403,000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527791;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0732462257633372;  // std dev = 4,21e-08, 392,000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.06842697784420321;  // std dev = 0,000, 388,000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 1,37e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202569;  // std dev = 1,81e-07, 410,000 (wgt'ed) examples reached here.  /* #neg=410 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.548 seconds
Total inference time: 1.417 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.048 seconds
Refined model CLL: -0.063555


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.77 seconds
Total inference time: 1.417 seconds
AUC ROC: 1.0
Total revision time: 9.77
Best scored revision CLL: -0.063555


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:01:27
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066487, 'Learning time': 2.486, 'Inference time': 1.711}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065435, 'Learning time': 9.77, 'Inference time': 1.417}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048743;  // std dev = 2,80e-07, 413,000 (wgt'ed) examples reached here.  /* #neg=413 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.12544463852839224;  // std dev = 0,000, 403,000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.11231637819360621;  // std dev = 0,000, 405,000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2,53e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.10159632948783627;  // std dev = 1,13e-07, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926912761892608;  // std dev = 1,59e-07, 390,000 (wgt'ed) examples reached here.  /* #neg=390 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.31869524655844467;  // std dev = 0,412, 205,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=204 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25555570560110225;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08528693034378468;  // std dev = 0,038, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787693398235492;  // std dev = 9,66e-08, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21002855188069486;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17729511779160206;  // std dev = 1,58e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07358335774754005;  // std dev = 0,090, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1528945146412648;  // std dev = 1,19e-07, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.0683994494640686;  // std dev = 6,58e-07, 391,000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134124634255375;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06419184008202619;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06416755234826499;  // std dev = 4,49e-07, 389,000 (wgt'ed) examples reached here.  /* #neg=389 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.523 seconds
Total inference time: 1.409 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:01:32
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067116, 'Learning time': 3.523, 'Inference time': 1.409}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 204,000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048746;  // std dev = 2,63e-07, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188432
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.136 seconds
Total inference time: 0.915 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:01:35
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.188432, 'Learning time': 1.136, 'Inference time': 0.915}


Starting fold 4

Target train facts examples: 590
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 106
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 2,98e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8,02e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 2,36e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 9,06e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716014955;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05651850289618763;  // std dev = 0,117, 160,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2714655651744066;  // std dev = 0,259, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.0866155054100784;  // std dev = 0,005, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08804625943175994;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08804625943175994;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.22142885489795675;  // std dev = 0,229, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.0796969146455815;  // std dev = 0,005, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0812283587521042;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18575396124553584;  // std dev = 0,202, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.07391636605171936;  // std dev = 0,004, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0753688018705621;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1593753531975701;  // std dev = 0,180, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06901333492667039;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07028169026344774;  // std dev = 1,05e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13922874417371345;  // std dev = 0,162, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.06495351811857426;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06582574142226368;  // std dev = 2,79e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.741 seconds
Total inference time: 1.969 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065608
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.315 seconds
Parameter learned model CLL: -0.065608


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [1.05e-08, 21, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 67], 'false': [2.98e-08, 121, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [7.45e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.46e-07, 0, 67], 'false': [8.02e-08, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 10, 0], 'true,true': [2.36e-08, 0, 67], 'false': [9.06e-08, 123, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 111, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 53], 'true,true,false,true': [2.63e-09, 6, 0], 'true,false': [0.0, 0, 0], 'false': [0.117, 146, 14], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.259, 0, 67], 'false,false': [0.0, 129, 0], 'true,true,false,true': [0.005, 12, 0], 'true,false': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.229, 0, 67], 'true,true,false,true': [0.005, 13, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 125, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.004, 12, 0], 'false': [0.0, 130, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.202, 0, 67]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.003, 9, 0], 'true,true': [0.18, 0, 67], 'false': [1.05e-08, 121, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.162, 0, 67], 'true,false': [0.0, 0, 0], 'true,true,false': [0.003, 9, 0], 'false': [2.79e-08, 116, 0]}]]
[{'': [0.18168904958677592, 7.340317518182853e-18], 'true': [-9.544603913195376e-16, 5.28677630773884e-18], 'true,false,true': [5.28677630773884e-18, nan], 'true,false': [5.28677630773884e-18, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.10206150719285763, 5.411171044391519e-17], 'true': [3.1815346377317917e-16, 3.96508223080413e-18], 'true,false,true': [3.96508223080413e-18, nan], 'true,false': [3.96508223080413e-18, nan], 'true,true': [3.1815346377317917e-16, nan]}, {'': [0.05037716793983092, 6.679390554655414e-17], 'true': [5.302557729552986e-16, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.02307958784642744, -8.001607384685813e-18], 'true': [0.02307958784642744, nan], 'true,true,false': [-1.982541115402065e-18, nan], 'true,true': [-2.9164067512541426e-16, -1.982541115402065e-18]}, {'': [0.01561243357702527, 0.013645467931854626], 'true': [0.01561243357702527, nan], 'true,true,false': [1.1564823173178713e-18, nan], 'true,true': [-6.70323335622736e-17, 1.1564823173178713e-18]}, {'': [0.020016820591243267, -2.0655312086049424e-17], 'true': [0.01737092607022144, -1.1564823173178713e-18], 'true,true,false': [2.047057070557005e-06, nan], 'true,true': [0.0010050025114227501, 2.047057070557005e-06], 'true,true,true': [0.0010050025114227501, nan], 'false': [nan, -2.0655312086049424e-17]}, {'': [0.01299452527178534, -2.4868995751603507e-17], 'true': [0.01299452527178534, nan], 'true,true,true': [0.0007805571121076898, nan], 'true,true,false': [1.6774875691988322e-06, nan], 'true,true': [0.0007805571121076898, 1.6774875691988322e-06]}, {'': [0.009204272629739793, 0.0], 'true': [0.009204272629739793, nan], 'true,true,true': [0.0006102215915100163, 1.3763501035349752e-06], 'true,true': [0.009204272629739793, nan]}, {'': [0.005872633131855175, 9.175396897728567e-19], 'true': [0.00048432435021741925, 1.2126927368690748e-06], 'true,false,true': [1.2126927368690748e-06, nan], 'true,false': [1.2126927368690748e-06, nan]}, {'': [0.004697173737512261, 6.699621700324221e-18], 'true': [0.004697173737512261, nan], 'true,true': [0.00039095615056142935, 1.1957012130538026e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048768;  // std dev = 6,32e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839136;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1123163781936062;  // std dev = 8,94e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783641;  // std dev = 0,000, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014955;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926096;  // std dev = 4,94e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08518475138839678;  // std dev = 5,87e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20975771563253545;  // std dev = 4,47e-08, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.1675331589939559;  // std dev = 0,102, 41,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109157;  // std dev = 6,41e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452775;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.18333414308843396;  // std dev = 4,21e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.09182510173211059;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0732462257633372;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15520723162978184;  // std dev = 0,019, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07697213412071484;  // std dev = 0,031, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06842697784420265;  // std dev = 4,83e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.11680125713786507;  // std dev = 0,055, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | else return 0.10184028859669404;  // std dev = 0,081, 42,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.88 seconds
Total inference time: 1.149 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065786
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.306 seconds
Refined model CLL: -0.065786


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.242 seconds
Total inference time: 1.969 seconds
AUC ROC: 1.0
Total revision time: 6.242
Best scored revision CLL: -0.065608


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:01:45
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065116, 'Learning time': 1.741, 'Inference time': 1.969}, 'CLL': -0.065116, 'Learning time': 6.242, 'Inference time': 1.969}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048782;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283911;  // std dev = 7,88e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360624;  // std dev = 9,19e-08, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783641;  // std dev = 0,000, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.09269127618926101;  // std dev = 3,49e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839679;  // std dev = 4,83e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109158;  // std dev = 6,41e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07324622576333718;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06842697784420265;  // std dev = 5,37e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06419184008202626;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.129 seconds
Total inference time: 1.125 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:01:48
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 2.129, 'Inference time': 1.125}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.1418510649004878;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.771 seconds
Total inference time: 0.787 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:01:50
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 0.771, 'Inference time': 0.787}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048832;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,15e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360694;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583091;  // std dev = 3,45e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.3207118471601508;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05176027387743785;  // std dev = 0,123, 303,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=30 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.27239290035772373;  // std dev = 0,371, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08613896182365849;  // std dev = 0,006, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08842906686828632;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08842906686828647;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.22208245880043956;  // std dev = 0,327, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.08002863805433053;  // std dev = 0,006, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0815554967258624;  // std dev = 1,18e-07, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18623150183838263;  // std dev = 0,289, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.07428488277009672;  // std dev = 0,006, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07565140547507136;  // std dev = 1,28e-07, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15973620494289567;  // std dev = 0,257, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06973372879729109;  // std dev = 0,005, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07052814650226406;  // std dev = 7,15e-08, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13950947670126904;  // std dev = 0,231, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.06501597181644385;  // std dev = 0,006, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06604247898174394;  // std dev = 0,000, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065293
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.239 seconds
Total inference time: 1.386 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065804
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.683 seconds
Parameter learned model CLL: -0.065804


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [8e-07, 0, 134], 'false': [0.0, 245, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [7.45e-09, 15, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 134], 'false': [0.0, 232, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [1.67e-08, 19, 0], 'true,true': [4.15e-08, 0, 134], 'false': [0.0, 280, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [3.45e-08, 0, 134], 'true,true,false,true': [0.0, 21, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 241, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 104], 'true,true,false,true': [5.27e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false': [0.123, 273, 30], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.371, 0, 134], 'false,false': [0.0, 227, 0], 'true,true,false,true': [0.006, 17, 0], 'true,false': [0.0, 9, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.327, 0, 134], 'true,true,false,true': [0.006, 16, 0], 'true,false': [0.0, 0, 0], 'false': [1.18e-07, 245, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.006, 19, 0], 'false': [1.28e-07, 262, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.289, 0, 134]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.005, 14, 0], 'true,true': [0.257, 0, 134], 'false': [7.15e-08, 260, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.231, 0, 134], 'true,false': [0.0, 0, 0], 'true,true,false': [0.006, 25, 0], 'false': [0.0, 224, 0]}]]
[{'': [0.09528888888889364, -1.595095937420633e-16], 'true': [4.772301956597688e-15, -6.938893903907228e-18], 'true,false,true': [-6.938893903907228e-18, nan], 'true,false': [-6.938893903907228e-18, nan], 'true,true': [4.772301956597688e-15, nan]}, {'': [0.06463275933764061, -4.976861834526564e-17], 'true': [-1.908920782639075e-15, 3.7007434154171884e-18], 'true,false,true': [3.7007434154171884e-18, nan], 'true,false': [3.7007434154171884e-18, nan], 'true,true': [-1.908920782639075e-15, nan]}, {'': [0.048485952800975375, -1.1102230246251565e-16], 'true': [1.8028696280480155e-15, 1.460819769243627e-17], 'true,false,true': [1.460819769243627e-17, nan], 'true,false': [1.460819769243627e-17, nan]}, {'': [0.03156307755597261, -7.186505885540433e-17], 'true': [0.03156307755597261, nan], 'true,true,false': [-1.1895246692412391e-17, nan], 'true,true': [1.193075489149422e-15, -1.1895246692412391e-17]}, {'': [0.015850614871360014, 0.015245657247279236], 'true': [0.015850614871360014, nan], 'true,true,false': [2.3129646346357427e-18, nan], 'true,true': [-1.5372318802502167e-16, 2.3129646346357427e-18]}, {'': [0.018433042062536386, -5.771203387919316e-17], 'true': [0.013755220121794604, -1.5419764230904951e-18], 'true,true,false': [2.185242131431871e-06, nan], 'true,true': [0.0010280436561528078, 2.185242131431871e-06], 'true,true,true': [0.0010280436561528078, nan], 'false': [nan, -5.771203387919316e-17]}, {'': [0.009409572942190293, 5.709718412357947e-17], 'true': [0.009409572942190293, nan], 'true,true,true': [0.0007972505191413615, nan], 'true,true,false': [2.243975663764053e-06, nan], 'true,true': [0.0007972505191413615, 2.243975663764053e-06]}, {'': [0.007926912140663845, 6.271488841394015e-17], 'true': [0.007926912140663845, nan], 'true,true,true': [0.0006224520350859662, 1.9414750285678378e-06], 'true,true': [0.007926912140663845, nan]}, {'': [0.004956807487856327, 1.964240735875277e-17], 'true': [0.000493487864395032, 1.7175515059582512e-06], 'true,false,true': [1.7175515059582512e-06, nan], 'true,false': [1.7175515059582512e-06, nan]}, {'': [0.005878658499786119, -8.921435019309294e-18], 'true': [0.005878658499786119, nan], 'true,true': [0.0003979897387021466, 1.5316237005669199e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048835;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.1254446385283918;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.11231637819360675;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.3207118471601506;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.2836906719348304;  // std dev = 0,118, 67,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.3207118471601504;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926057;  // std dev = 5,77e-08, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2584042234292607;  // std dev = 0,041, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.0937545110248524;  // std dev = 0,051, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.08518475138839678;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839678;  // std dev = 9,06e-08, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21204079368434228;  // std dev = 0,036, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.09038436084427465;  // std dev = 0,056, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109144;  // std dev = 5,96e-08, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17877088805311278;  // std dev = 0,031, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07709798887082808;  // std dev = 0,046, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333663;  // std dev = 1,30e-07, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15401396667044545;  // std dev = 0,028, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0779854174236634;  // std dev = 0,053, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06842697784420261;  // std dev = 6,83e-08, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13302834154272294;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | | else return -0.06220348487905768;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.13702848481349897;  // std dev = 0,009, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | | else return -0.07084416780265367;  // std dev = 0,037, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064981
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.959 seconds
Total inference time: 1.244 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064591
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.103 seconds
Refined model CLL: -0.064591


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064981
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.984 seconds
Total inference time: 1.244 seconds
AUC ROC: 1.0
Total revision time: 7.984
Best scored revision CLL: -0.064591


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:02:01
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065293, 'Learning time': 2.239, 'Inference time': 1.386}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064981, 'Learning time': 7.984, 'Inference time': 1.244}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048835;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.1254446385283918;  // std dev = 0,000, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.11231637819360668;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.10159632948783649;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.09269127618926054;  // std dev = 7,30e-08, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839678;  // std dev = 8,16e-08, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109144;  // std dev = 6,32e-08, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07324622576333674;  // std dev = 1,24e-07, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06842697784420261;  // std dev = 6,66e-08, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06419184008202626;  // std dev = 0,000, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.032 seconds
Total inference time: 1.121 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:02:06
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 3.032, 'Inference time': 1.121}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048835;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.044 seconds
Total inference time: 0.79 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:02:08
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 1.044, 'Inference time': 0.79}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 2,42e-07, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0,000, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 4,41e-08, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583101;  // std dev = 1,90e-08, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0,000, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716014933;  // std dev = 2,98e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0459114490734064;  // std dev = 0,131, 380,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=43 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.27127018801220965;  // std dev = 0,440, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08656138911388395;  // std dev = 0,009, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08890167324721197;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08890167324721175;  // std dev = 1,85e-07, 399,000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2212815796153193;  // std dev = 0,388, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.079750222609767;  // std dev = 0,009, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08195910505849897;  // std dev = 0,000, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18564013753038527;  // std dev = 0,343, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.07357182045536934;  // std dev = 0,005, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07599986607352377;  // std dev = 1,17e-07, 378,000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15928515735848395;  // std dev = 0,305, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06931256003013397;  // std dev = 0,007, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0708318803174133;  // std dev = 0,000, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.1391556582071375;  // std dev = 0,274, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.06483600387241778;  // std dev = 0,007, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06630946613210617;  // std dev = 0,000, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065538
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.322 seconds
Total inference time: 1.243 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066039
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.17 seconds
Parameter learned model CLL: -0.066039


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [2.11e-08, 26, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.08e-06, 0, 202], 'false': [2.42e-07, 367, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 27, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 202], 'false': [0.0, 358, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 32, 0], 'true,true': [4.41e-08, 0, 202], 'false': [0.0, 380, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.9e-08, 0, 202], 'true,true,false,true': [0.0, 34, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 331, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.98e-07, 0, 159], 'true,true,false,true': [1.18e-08, 20, 0], 'true,false': [0.0, 0, 0], 'false': [0.131, 337, 43], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.44, 0, 202], 'false,false': [1.85e-07, 399, 0], 'true,true,false,true': [0.009, 27, 0], 'true,false': [0.0, 11, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.388, 0, 202], 'true,true,false,true': [0.009, 29, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 377, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.005, 20, 0], 'false': [1.17e-07, 378, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.343, 0, 202]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.007, 23, 0], 'true,true': [0.305, 0, 202], 'false': [0.0, 358, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.274, 0, 202], 'true,false': [0.0, 0, 0], 'true,true,false': [0.007, 30, 0], 'false': [0.0, 359, 0]}]]
[{'': [0.10103108648815576, 1.5972690926487265e-16], 'true': [5.768762805181012e-15, 1.708035422500241e-17], 'true,false,true': [1.708035422500241e-17, nan], 'true,false': [1.708035422500241e-17, nan], 'true,true': [5.768762805181012e-15, nan]}, {'': [0.07424604868299411, -1.1412348409554682e-16], 'true': [-3.728590593592605e-15, -4.11193712824132e-18], 'true,false,true': [-4.11193712824132e-18, nan], 'true,false': [-4.11193712824132e-18, nan], 'true,true': [-3.728590593592605e-15, nan]}, {'': [0.052627171571888454, -2.804773956947764e-17], 'true': [2.0049968286299855e-15, -1.0408340855860843e-17], 'true,false,true': [-1.0408340855860843e-17, nan], 'true,false': [-1.0408340855860843e-17, nan]}, {'': [0.03322958567216917, -3.0858162617980184e-17], 'true': [0.03322958567216917, nan], 'true,true,false': [0.0, nan], 'true,true': [3.5175382958420803e-16, 0.0]}, {'': [0.016961668263046417, 0.017150574414450566], 'true': [0.016961668263046417, nan], 'true,true,false': [6.938893903907228e-18, nan], 'true,true': [5.586027796856133e-16, 6.938893903907228e-18]}, {'': [0.01793528815961276, 8.570142646229278e-17], 'true': [0.01416247997234763, -2.523234146875356e-18], 'true,true,false': [3.2217234263052394e-06, nan], 'true,true': [0.000958229575554469, 3.2217234263052394e-06], 'true,true,true': [0.000958229575554469, nan], 'false': [nan, 8.570142646229278e-17]}, {'': [0.010598791518154085, -2.355910927586539e-18], 'true': [0.010598791518154085, nan], 'true,true,true': [0.000743477556448344, nan], 'true,true,false': [2.5600061126832665e-06, nan], 'true,true': [0.000743477556448344, 2.5600061126832665e-06]}, {'': [0.006036521946708683, 3.642001456442312e-17], 'true': [0.006036521946708683, nan], 'true,true,true': [0.000580836679385955, 1.3327372662574887e-06], 'true,true': [0.006036521946708683, nan]}, {'': [0.005209657228658457, -3.1632052656917865e-17], 'true': [0.00046077985495317507, 2.0906706691438948e-06], 'true,false,true': [2.0906706691438948e-06, nan], 'true,false': [2.0906706691438948e-06, nan]}, {'': [0.005009089482722055, -1.7936750815671053e-17], 'true': [0.005009089482722055, nan], 'true,true': [0.00037181927590690937, 1.7167661170390074e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.14185106490048743;  // std dev = 2,70e-07, 384,000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.1254446385283921;  // std dev = 0,000, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1123163781936063;  // std dev = 0,000, 396,000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 8,94e-08, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.32071184716015;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.2961532457730567;  // std dev = 0,098, 101,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.3207118471601497;  // std dev = 7,88e-08, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else return -0.09269127618926097;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.09269127618926062;  // std dev = 1,87e-07, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.25738056418313116;  // std dev = 0,033, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.0930950255470589;  // std dev = 0,089, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839678;  // std dev = 1,17e-07, 348,000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.17830038577821986;  // std dev = 0,089, 111,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=99 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.21316848986473674;  // std dev = 0,011, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | | else return -0.10132848352860155;  // std dev = 0,068, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109143;  // std dev = 1,13e-07, 406,000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1433523571203615;  // std dev = 0,095, 115,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=99 */
%   | | else return 0.14203752127809144;  // std dev = 0,093, 120,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=103 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 8,16e-08, 347,000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1603280860072576;  // std dev = 0,014, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10196224378188047;  // std dev = 0,076, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.06842697784420307;  // std dev = 0,000, 380,000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13990057223088745;  // std dev = 0,012, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.09972978548187743;  // std dev = 0,054, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.064191840082026;  // std dev = 1,16e-07, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06615
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.577 seconds
Total inference time: 1.218 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066338
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.239 seconds
Refined model CLL: -0.066338


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065538
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.308 seconds
Total inference time: 1.243 seconds
AUC ROC: 1.0
Total revision time: 9.308
Best scored revision CLL: -0.066039


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:02:20
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065538, 'Learning time': 2.322, 'Inference time': 1.243}, 'CLL': -0.065538, 'Learning time': 9.308, 'Inference time': 1.243}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1418510649004877;  // std dev = 1,76e-07, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839208;  // std dev = 0,000, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.11231637819360629;  // std dev = 0,000, 394,000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2,67e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.10159632948783653;  // std dev = 0,000, 375,000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4,04e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.092691276189261;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.09269127618926053;  // std dev = 1,69e-07, 340,000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4,42e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839678;  // std dev = 1,12e-07, 360,000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3,01e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07877675473109147;  // std dev = 2,98e-08, 373,000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07324622576333713;  // std dev = 6,99e-08, 366,000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06842697784420328;  // std dev = 0,000, 388,000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.06419184008202593;  // std dev = 1,32e-07, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.575 seconds
Total inference time: 1.088 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:02:25
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 3.575, 'Inference time': 1.088}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048774;  // std dev = 1,52e-07, 356,000 (wgt'ed) examples reached here.  /* #neg=356 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.131 seconds
Total inference time: 0.802 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:02:27
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 1.131, 'Inference time': 0.802}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 527,000 (wgt'ed) examples reached here.  /* #neg=527 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0,000, 512,000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 2,11e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360601;  // std dev = 0,000, 462,000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783624;  // std dev = 2,79e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783551;  // std dev = 3,28e-07, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716014933;  // std dev = 3,53e-07, 217,000 (wgt'ed) examples reached here.  /* #pos=217 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.054166253941645315;  // std dev = 0,120, 558,000 (wgt'ed) examples reached here.  /* #neg=506 #pos=52 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.27014453411274847;  // std dev = 0,502, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.0858479172369313;  // std dev = 0,009, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08823531429165558;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08823531429165585;  // std dev = 0,000, 453,000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2204888708576165;  // std dev = 0,442, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.0801486301011945;  // std dev = 0,009, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08138994491872371;  // std dev = 1,84e-07, 468,000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18506132757147398;  // std dev = 0,391, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.0734768024126678;  // std dev = 0,006, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07550840922754526;  // std dev = 0,000, 496,000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15884801735127596;  // std dev = 0,349, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06919444492276322;  // std dev = 0,008, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07040345482225954;  // std dev = 2,17e-07, 493,000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.1388157434840924;  // std dev = 0,314, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.06453681782563785;  // std dev = 0,007, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06593283414480311;  // std dev = 1,38e-07, 512,000 (wgt'ed) examples reached here.  /* #neg=512 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.705 seconds
Total inference time: 1.413 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065696
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.15 seconds
Parameter learned model CLL: -0.065696


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [4.71e-08, 45, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.07e-06, 0, 269], 'false': [0.0, 527, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 39, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 269], 'false': [0.0, 512, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 35, 0], 'true,true': [2.11e-08, 0, 269], 'false': [0.0, 462, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [2.79e-08, 52, 0], 'true,false': [0.0, 0, 0], 'false': [3.28e-07, 494, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [3.53e-07, 0, 217], 'true,true,false,true': [0.0, 29, 0], 'true,false': [0.0, 0, 0], 'false': [0.12, 506, 52], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.502, 0, 269], 'false,false': [0.0, 453, 0], 'true,true,false,true': [0.009, 46, 0], 'true,false': [0.0, 17, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.442, 0, 269], 'true,true,false,true': [0.009, 36, 0], 'true,false': [0.0, 0, 0], 'false': [1.84e-07, 468, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.006, 36, 0], 'false': [0.0, 496, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.391, 0, 269]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.008, 41, 0], 'true,true': [0.349, 0, 269], 'false': [2.17e-07, 493, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.314, 0, 269], 'true,false': [0.0, 0, 0], 'true,true,false': [0.007, 49, 0], 'false': [1.38e-07, 512, 0]}]]
[{'': [0.12277374335673248, -6.067252961898389e-17], 'true': [4.226276495227362e-15, 4.9343245538895844e-17], 'true,false,true': [4.9343245538895844e-17, nan], 'true,false': [4.9343245538895844e-17, nan], 'true,true': [4.226276495227362e-15, nan]}, {'': [0.07894863596592969, -1.1796119636642288e-16], 'true': [-4.5432472323694135e-15, -2.2773805633336544e-17], 'true,false,true': [-2.2773805633336544e-17, nan], 'true,false': [-2.2773805633336544e-17, nan], 'true,true': [-4.5432472323694135e-15, nan]}, {'': [0.045416488637913824, -1.5379712895240264e-17], 'true': [4.754561057130781e-16, -1.2688263138573217e-17], 'true,false,true': [-1.2688263138573217e-17, nan], 'true,false': [-1.2688263138573217e-17, nan]}, {'': [0.036581727011680054, 2.1754977486582015e-16], 'true': [0.036581727011680054, nan], 'true,true,false': [1.4945309946877107e-17, nan], 'true,true': [-5.018703338082492e-16, 1.4945309946877107e-17]}, {'': [0.017771947618680086, 0.014442187185090357], 'true': [0.017771947618680086, nan], 'true,true,false': [0.0, nan], 'true,true': [5.730183352904034e-16, 0.0]}, {'': [0.020313881723630425, -1.4704940723512008e-17], 'true': [0.01660322813780243, -3.2653618371328133e-18], 'true,true,false': [1.5832401935927218e-06, nan], 'true,true': [0.0009354766259665885, 1.5832401935927218e-06], 'true,true,true': [0.0009354766259665885, nan], 'false': [nan, -1.4704940723512008e-17]}, {'': [0.010050697435359548, 7.211705117223239e-17], 'true': [0.010050697435359548, nan], 'true,true,true': [0.0007273559386822719, nan], 'true,true,false': [2.0163674035718183e-06, nan], 'true,true': [0.0007273559386822719, 2.0163674035718183e-06]}, {'': [0.007460492207732439, -9.132479718690804e-17], 'true': [0.007460492207732439, nan], 'true,true,true': [0.000569266290419059, 8.42358935556558e-07], 'true,true': [0.007460492207732439, nan]}, {'': [0.006360858887630294, 9.548368406512502e-17], 'true': [0.000452273860327539, 1.4408902503533595e-06], 'true,false,true': [1.4408902503533595e-06, nan], 'true,false': [1.4408902503533595e-06, nan]}, {'': [0.005699304272903497, 3.729655473350135e-17], 'true': [0.005699304272903497, nan], 'true,true': [0.00036540301479432477, 9.59202732633325e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.14185106490048727;  // std dev = 2,70e-07, 474,000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1254446385283913;  // std dev = 2,58e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.12544463852839233;  // std dev = 0,000, 517,000 (wgt'ed) examples reached here.  /* #neg=517 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11231637819360595;  // std dev = 0,000, 483,000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.3419469511591871;  // std dev = 0,183, 158,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=135 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878355;  // std dev = 3,31e-07, 496,000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3303205352236975;  // std dev = 0,121, 217,000 (wgt'ed) examples reached here.  /* #pos=217 */
%   | | else return -0.1102753091540486;  // std dev = 0,125, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.32391967071367317;  // std dev = 0,047, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else return -0.12058902079685657;  // std dev = 0,061, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.0926912761892615;  // std dev = 0,000, 526,000 (wgt'ed) examples reached here.  /* #neg=526 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2608929243240342;  // std dev = 0,117, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.1024929618543561;  // std dev = 0,150, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.0851847513883969;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839678;  // std dev = 1,43e-07, 452,000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.16600427593506384;  // std dev = 0,100, 157,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=134 */
%   | | else return 0.18266305199544117;  // std dev = 0,105, 152,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=135 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109184;  // std dev = 1,74e-07, 477,000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.14802781418375313;  // std dev = 0,089, 153,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.19025759860732464;  // std dev = 0,003, 135,000 (wgt'ed) examples reached here.  /* #pos=135 */
%   | | | else return -0.1335163927099408;  // std dev = 0,002, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333684;  // std dev = 1,78e-07, 539,000 (wgt'ed) examples reached here.  /* #neg=539 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16163414448660227;  // std dev = 0,018, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1092806687728457;  // std dev = 0,053, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06842697784420333;  // std dev = 0,000, 517,000 (wgt'ed) examples reached here.  /* #neg=517 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13999004567823492;  // std dev = 0,004, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.09174827817720181;  // std dev = 0,002, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.10962951946814804;  // std dev = 0,084, 155,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=135 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202561;  // std dev = 2,14e-07, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067405
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.354 seconds
Total inference time: 1.302 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067755
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.568 seconds
Refined model CLL: -0.067755


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.777 seconds
Total inference time: 1.413 seconds
AUC ROC: 1.0
Total revision time: 10.777
Best scored revision CLL: -0.065696


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:02:41
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065223, 'Learning time': 2.705, 'Inference time': 1.413}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065223, 'Learning time': 10.777, 'Inference time': 1.413}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.1418510649004878;  // std dev = 0,000, 518,000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839124;  // std dev = 4,34e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.12544463852839227;  // std dev = 0,000, 526,000 (wgt'ed) examples reached here.  /* #neg=526 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.1123163781936061;  // std dev = 0,000, 513,000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10159632948783577;  // std dev = 2,84e-07, 527,000 (wgt'ed) examples reached here.  /* #neg=527 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.09269127618926146;  // std dev = 0,000, 518,000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.08518475138839678;  // std dev = 1,37e-07, 514,000 (wgt'ed) examples reached here.  /* #neg=514 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109222;  // std dev = 0,000, 550,000 (wgt'ed) examples reached here.  /* #neg=550 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07324622576333721;  // std dev = 0,000, 486,000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.0684269778442035;  // std dev = 0,000, 494,000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.06419184008202573;  // std dev = 1,76e-07, 464,000 (wgt'ed) examples reached here.  /* #neg=464 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.808 seconds
Total inference time: 1.031 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:02:47
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 4.808, 'Inference time': 1.031}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.14185106490048766;  // std dev = 0,000, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.226 seconds
Total inference time: 0.792 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:02:50
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 1.226, 'Inference time': 0.792}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048863;  // std dev = 0,000, 617,000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0,000, 641,000 (wgt'ed) examples reached here.  /* #neg=641 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360614;  // std dev = 0,000, 652,000 (wgt'ed) examples reached here.  /* #neg=652 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783627;  // std dev = 2,36e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783513;  // std dev = 4,21e-07, 590,000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.3207118471601505;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926107;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.055510202595334936;  // std dev = 0,118, 656,000 (wgt'ed) examples reached here.  /* #neg=597 #pos=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2687844740051708;  // std dev = 0,542, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08592037695346348;  // std dev = 0,011, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08812725364866349;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08812725364866436;  // std dev = 0,000, 588,000 (wgt'ed) examples reached here.  /* #neg=588 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21952253615682887;  // std dev = 0,479, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07928527026587802;  // std dev = 0,007, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08129759077479536;  // std dev = 0,000, 651,000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18435009222487306;  // std dev = 0,424, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.07411054842738919;  // std dev = 0,009, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07542862142475515;  // std dev = 0,000, 576,000 (wgt'ed) examples reached here.  /* #neg=576 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15830704788772215;  // std dev = 0,378, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06898540322109972;  // std dev = 0,008, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07033386784398771;  // std dev = 1,12e-07, 623,000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.1383924343663244;  // std dev = 0,340, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06472512198973147;  // std dev = 0,007, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06587163458064539;  // std dev = 4,21e-08, 650,000 (wgt'ed) examples reached here.  /* #neg=650 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065181
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.61 seconds
Total inference time: 1.41 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.926 seconds
Parameter learned model CLL: -0.065637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [6.14e-08, 60, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.04e-06, 0, 337], 'false': [0.0, 617, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 337], 'false': [0.0, 641, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [1.83e-08, 45, 0], 'true,true': [0.0, 0, 337], 'false': [0.0, 652, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [2.36e-08, 49, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-07, 590, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 278], 'true,true,false,true': [0.0, 41, 0], 'true,false': [0.0, 0, 0], 'false': [0.118, 597, 59], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.542, 0, 337], 'false,false': [0.0, 588, 0], 'true,true,false,true': [0.011, 68, 0], 'true,false': [9.13e-09, 15, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.479, 0, 337], 'true,true,false,true': [0.007, 39, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 651, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.009, 54, 0], 'false': [0.0, 576, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.424, 0, 337]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.008, 59, 0], 'true,true': [0.378, 0, 337], 'false': [1.12e-07, 623, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.34, 0, 337], 'true,false': [0.0, 0, 0], 'true,true,false': [0.007, 49, 0], 'false': [4.21e-08, 650, 0]}]]
[{'': [0.12829216605650995, -3.8003096077930806e-16], 'true': [3.204821834882351e-15, 6.29126380620922e-17], 'true,false,true': [6.29126380620922e-17, nan], 'true,false': [6.29126380620922e-17, nan], 'true,true': [3.204821834882351e-15, nan]}, {'': [0.07292254260326961, -2.882076619307739e-16], 'true': [-5.144582419153248e-15, -2.7755575615628914e-17], 'true,false,true': [-2.7755575615628914e-17, nan], 'true,false': [-2.7755575615628914e-17, nan], 'true,true': [-5.144582419153248e-15, nan]}, {'': [0.04632933703034552, -1.3077473664296323e-16], 'true': [-5.90361916952012e-16, 7.401486830834377e-18], 'true,false,true': [7.401486830834377e-18, nan], 'true,false': [7.401486830834377e-18, nan]}, {'': [0.029865515629184998, 3.010774304068221e-16], 'true': [0.029865515629184998, nan], 'true,true,false': [1.1328806373726087e-17, nan], 'true,true': [-9.90964646312306e-16, 1.1328806373726087e-17]}, {'': [0.019142329763059684, 0.013988339719615986], 'true': [0.019142329763059684, nan], 'true,true,false': [-6.769652589177784e-18, nan], 'true,true': [-1.0223636485756838e-16, -6.769652589177784e-18]}, {'': [0.02069586839719029, -1.2839313890222898e-16], 'true': [0.018304496467504813, 5.551115123125783e-18], 'true,true,false': [1.6234349159378473e-06, nan], 'true,true': [0.0008730747595782607, 1.6234349159378473e-06], 'true,true,true': [0.0008730747595782607, nan], 'false': [nan, -1.2839313890222898e-16]}, {'': [0.008909971857316235, -1.1596799642781973e-16], 'true': [0.008909971857316235, nan], 'true,true,true': [0.0006798958356813294, nan], 'true,true,false': [1.2233905837259573e-06, nan], 'true,true': [0.0006798958356813294, 1.2233905837259573e-06]}, {'': [0.008411195729038095, -1.4648776019359704e-16], 'true': [0.008411195729038095, nan], 'true,true,true': [0.0005329003467913293, 1.530155957366978e-06], 'true,true': [0.008411195729038095, nan]}, {'': [0.006911242141514617, 1.995906561123877e-17], 'true': [0.00042391961610614064, 1.1854930139945699e-06], 'true,false,true': [1.1854930139945699e-06, nan], 'true,false': [1.1854930139945699e-06, nan]}, {'': [0.004871900353328181, 2.7328566760003853e-18], 'true': [0.004871900353328181, nan], 'true,true': [0.0003428643660351169, 1.0895045405420349e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.14185106490048843;  // std dev = 0,000, 601,000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.12544463852839233;  // std dev = 0,000, 607,000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.11231637819360601;  // std dev = 0,000, 639,000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783624;  // std dev = 2,98e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783508;  // std dev = 4,38e-07, 607,000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.32071184716015;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3,21e-07, 167,000 (wgt'ed) examples reached here.  /* #pos=167 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926186;  // std dev = 0,000, 606,000 (wgt'ed) examples reached here.  /* #neg=606 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.25517224256948756;  // std dev = 4,17e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.08518475138839678;  // std dev = 1,58e-07, 592,000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20975771563253517;  // std dev = 2,60e-07, 159,000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.20975771563253506;  // std dev = 2,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310926;  // std dev = 0,000, 645,000 (wgt'ed) examples reached here.  /* #neg=645 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1770964977452767;  // std dev = 2,46e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1,05e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0732462257633366;  // std dev = 2,35e-07, 591,000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367166;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.0684269778442034;  // std dev = 0,000, 615,000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.10080093658978516;  // std dev = 0,074, 191,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=159 */
%   | | else return 0.10624003854612198;  // std dev = 0,069, 207,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202546;  // std dev = 2,40e-07, 623,000 (wgt'ed) examples reached here.  /* #neg=623 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064587
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.721 seconds
Total inference time: 1.289 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064983
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.301 seconds
Refined model CLL: -0.064983


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064587
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.558 seconds
Total inference time: 1.289 seconds
AUC ROC: 1.0
Total revision time: 12.558
Best scored revision CLL: -0.064983


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:03:06
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065181, 'Learning time': 3.61, 'Inference time': 1.41}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064587, 'Learning time': 12.558, 'Inference time': 1.289}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.1418510649004887;  // std dev = 0,000, 637,000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1254446385283912;  // std dev = 5,58e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839233;  // std dev = 0,000, 655,000 (wgt'ed) examples reached here.  /* #neg=655 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360636;  // std dev = 2,79e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.11231637819360588;  // std dev = 0,000, 623,000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1015963294878362;  // std dev = 4,34e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783562;  // std dev = 3,20e-07, 567,000 (wgt'ed) examples reached here.  /* #neg=567 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926108;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926185;  // std dev = 0,000, 624,000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839686;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.08518475138839675;  // std dev = 1,55e-07, 615,000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07877675473109257;  // std dev = 0,000, 634,000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07324622576333675;  // std dev = 1,70e-07, 631,000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420272;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.06842697784420226;  // std dev = 2,09e-07, 617,000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06419184008202546;  // std dev = 2,41e-07, 648,000 (wgt'ed) examples reached here.  /* #neg=648 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.149 seconds
Total inference time: 1.088 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:03:11
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063847, 'Learning time': 4.149, 'Inference time': 1.088}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1418510649004888;  // std dev = 0,000, 665,000 (wgt'ed) examples reached here.  /* #neg=665 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.371 seconds
Total inference time: 0.756 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:03:13
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.160469, 'Learning time': 1.371, 'Inference time': 0.756}


Starting fold 5

Target train facts examples: 578
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 118
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 3,65e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283911;  // std dev = 7,30e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 2,36e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8,56e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 2,58e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.3207118471601496;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05288208653339188;  // std dev = 0,122, 135,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.27014510131463343;  // std dev = 0,250, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08665658474131227;  // std dev = 0,006, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.088338680001787;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08833868000178684;  // std dev = 6,66e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.22048830707990427;  // std dev = 0,220, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07908918559131209;  // std dev = 0,004, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08147827194127259;  // std dev = 3,65e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1850602877540965;  // std dev = 0,195, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.07381131470402158;  // std dev = 0,004, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0755847068615132;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15884680794387246;  // std dev = 0,174, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06879265550443688;  // std dev = 0,004, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07046998940606389;  // std dev = 4,71e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13881450665395922;  // std dev = 0,156, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.06564730114324384;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06599134264938053;  // std dev = 1,49e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065473
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.821 seconds
Total inference time: 1.224 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065759
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.564 seconds
Parameter learned model CLL: -0.065759


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [0.0, 14, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 67], 'false': [3.65e-08, 124, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [7.45e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.46e-07, 0, 67], 'false': [7.3e-08, 95, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [7.45e-09, 11, 0], 'true,true': [2.36e-08, 0, 67], 'false': [8.56e-08, 123, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false,true': [5.27e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false': [2.58e-08, 110, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 54], 'true,true,false,true': [5.27e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false': [0.122, 122, 13], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.25, 0, 67], 'false,false': [6.66e-08, 103, 0], 'true,true,false,true': [0.006, 15, 0], 'true,false': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.22, 0, 67], 'true,true,false,true': [0.004, 14, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 123, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.004, 12, 0], 'false': [0.0, 120, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.195, 0, 67]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.004, 15, 0], 'true,true': [0.174, 0, 67], 'false': [4.71e-08, 117, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.156, 0, 67], 'true,false': [0.0, 0, 0], 'true,true,false': [0.003, 6, 0], 'false': [1.49e-08, 125, 0]}]]
[{'': [0.1429660112787675, 1.0744093786695063e-17], 'true': [-9.544603913195376e-16, -1.1895246692412391e-17], 'true,false,true': [-1.1895246692412391e-17, nan], 'true,false': [-1.1895246692412391e-17, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.0971554925558081, 5.609547913895528e-17], 'true': [3.1815346377317917e-16, 4.270088556250602e-18], 'true,false,true': [4.270088556250602e-18, nan], 'true,false': [4.270088556250602e-18, nan], 'true,true': [3.1815346377317917e-16, nan]}, {'': [0.05400309855141071, 5.95729427847645e-17], 'true': [5.302557729552986e-16, 5.046468293750712e-18], 'true,false,true': [5.046468293750712e-18, nan], 'true,false': [5.046468293750712e-18, nan]}, {'': [0.028132528873746843, 6.0557619525008536e-18], 'true': [0.028132528873746843, nan], 'true,true,false': [3.0839528461809902e-18, nan], 'true,true': [-2.9164067512541426e-16, 3.0839528461809902e-18]}, {'': [0.02542345919926322, 0.01487247176068837], 'true': [0.02542345919926322, nan], 'true,true,false': [2.3129646346357427e-18, nan], 'true,true': [-8.22387425648264e-17, 2.3129646346357427e-18]}, {'': [0.02446307609039951, 4.311545726699637e-17], 'true': [0.01978929765123497, -2.9738116731030977e-18], 'true,true,false': [2.475763907145804e-06, nan], 'true,true': [0.0009312362266237433, 2.475763907145804e-06], 'true,true,true': [0.0009312362266237433, nan], 'false': [nan, 4.311545726699637e-17]}, {'': [0.013429731112259015, 1.0831444142684454e-17], 'true': [0.013429731112259015, nan], 'true,true,true': [0.0007239524563782904, nan], 'true,true,false': [1.0542563795022862e-06, nan], 'true,true': [0.0007239524563782904, 1.0542563795022862e-06]}, {'': [0.009113877493682686, -1.4802973661668754e-17], 'true': [0.009113877493682686, nan], 'true,true,true': [0.0005665421011757302, 1.4122604709021953e-06], 'true,true': [0.009113877493682686, nan]}, {'': [0.008113152194563444, 1.8978171361113787e-17], 'true': [0.00045007372771801215, 1.0620736036119163e-06], 'true,false,true': [1.0620736036119163e-06, nan], 'true,false': [1.0620736036119163e-06, nan]}, {'': [0.0034874120831519116, 1.7763568394002505e-18], 'true': [0.0034874120831519116, nan], 'true,true': [0.00036360331370896185, 1.3095502064032715e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1418510649004877;  // std dev = 5,96e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839108;  // std dev = 7,74e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.1123163781936062;  // std dev = 9,66e-08, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.36139359349386185;  // std dev = 0,161, 37,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | else return 0.3628704353534526;  // std dev = 0,159, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783665;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.3330589016442766;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.1396477776009988;  // std dev = 6,45e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.2944155598986323;  // std dev = 0,129, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A), director(B) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.3330589016442765;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.13964777760099883;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09314448804414714;  // std dev = 0,047, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2672734451129549;  // std dev = 0,030, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.13044443962158683;  // std dev = 0,052, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.08514943999380946;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0851494399938096;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21827336844189038;  // std dev = 0,026, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.1256932698916246;  // std dev = 0,083, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07874643262415283;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18331939127881902;  // std dev = 0,023, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.11601437632676409;  // std dev = 0,072, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07321992082452783;  // std dev = 6,14e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15744952894123823;  // std dev = 0,020, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10268969147695078;  // std dev = 0,069, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06840395215950325;  // std dev = 0,000, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.137670854344341;  // std dev = 0,018, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.09768058424973179;  // std dev = 0,056, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641715241138392;  // std dev = 1,29e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06496
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.636 seconds
Total inference time: 1.142 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066397
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.327 seconds
Refined model CLL: -0.066397


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065473
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.348 seconds
Total inference time: 1.224 seconds
AUC ROC: 1.0
Total revision time: 6.348
Best scored revision CLL: -0.065759


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:03:23
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.2': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065473, 'Learning time': 1.821, 'Inference time': 1.224}, 'CLL': -0.065473, 'Learning time': 6.348, 'Inference time': 1.224}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1,46e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.12544463852839136;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,88e-07, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1123163781936062;  // std dev = 9,77e-08, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783634;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926103;  // std dev = 2,79e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839683;  // std dev = 5,37e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109164;  // std dev = 5,48e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07324622576333704;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5,37e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420265;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06419184008202626;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.059 seconds
Total inference time: 1.138 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:03:26
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 2.059, 'Inference time': 1.138}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048802;  // std dev = 0,000, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.802 seconds
Total inference time: 0.745 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:03:28
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 0.802, 'Inference time': 0.745}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048824;  // std dev = 0,000, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,15e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360672;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583091;  // std dev = 3,45e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.3207118471601505;  // std dev = 4,21e-08, 113,000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.062229993416146226;  // std dev = 0,108, 285,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=21 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2675912757963533;  // std dev = 0,333, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.0857456816172448;  // std dev = 0,006, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08758873808345947;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08758873808345986;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21867680091131053;  // std dev = 0,295, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07952597739195097;  // std dev = 0,004, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08083711511048614;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18372887390231812;  // std dev = 0,261, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.07360572987136785;  // std dev = 0,003, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07503062552824916;  // std dev = 0,000, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.157835382457296;  // std dev = 0,233, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06913921912513345;  // std dev = 0,005, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06998662058383275;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.1380239442702457;  // std dev = 0,210, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.06500399254460727;  // std dev = 0,005, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06556613635978775;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.556 seconds
Total inference time: 1.295 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.969 seconds
Parameter learned model CLL: -0.065363


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [1.05e-08, 22, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [8e-07, 0, 134], 'false': [0.0, 253, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 134], 'false': [0.0, 260, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 26, 0], 'true,true': [4.15e-08, 0, 134], 'false': [0.0, 237, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [3.45e-08, 0, 134], 'true,true,false,true': [0.0, 24, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 269, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [4.21e-08, 0, 113], 'true,true,false,true': [5.27e-09, 13, 0], 'true,false': [0.0, 0, 0], 'false': [0.108, 264, 21], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.333, 0, 134], 'false,false': [0.0, 235, 0], 'true,true,false,true': [0.006, 30, 0], 'true,false': [0.0, 9, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.295, 0, 134], 'true,true,false,true': [0.004, 17, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 261, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.003, 14, 0], 'false': [0.0, 251, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.261, 0, 134]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.005, 24, 0], 'true,true': [0.233, 0, 134], 'false': [0.0, 242, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.21, 0, 134], 'true,false': [0.0, 0, 0], 'true,true,false': [0.005, 31, 0], 'false': [0.0, 226, 0]}]]
[{'': [0.12113740959895289, -1.2638111900871348e-16], 'true': [4.772301956597688e-15, 5.046468293750712e-18], 'true,false,true': [5.046468293750712e-18, nan], 'true,false': [5.046468293750712e-18, nan], 'true,true': [4.772301956597688e-15, nan]}, {'': [0.07764343033603698, -6.490534605500916e-17], 'true': [-1.908920782639075e-15, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.908920782639075e-15, nan]}, {'': [0.06067064020778916, -6.558279470359575e-17], 'true': [1.8028696280480155e-15, -2.135044278125301e-18], 'true,false,true': [-2.135044278125301e-18, nan], 'true,false': [-2.135044278125301e-18, nan]}, {'': [0.03471526716333184, -6.273379172603116e-17], 'true': [0.03471526716333184, nan], 'true,true,false': [-2.3129646346357427e-18, nan], 'true,true': [1.193075489149422e-15, -2.3129646346357427e-18]}, {'': [0.015813507632799696, 0.011664899691451649], 'true': [0.015813507632799696, nan], 'true,true,false': [2.135044278125301e-18, nan], 'true,true': [1.5719972030090712e-17, 2.135044278125301e-18]}, {'': [0.022495596622033466, -8.31486180144798e-17], 'true': [0.01933850041630667, 0.0], 'true,true,false': [1.0338260853827903e-06, nan], 'true,true': [0.0008299171262268914, 1.0338260853827903e-06], 'true,true,true': [0.0008299171262268914, nan], 'false': [nan, -8.31486180144798e-17]}, {'': [0.009459099069115169, -1.871640348027084e-17], 'true': [0.009459099069115169, nan], 'true,true,true': [0.0006475766536874686, nan], 'true,true,false': [1.1439524776882423e-06, nan], 'true,true': [0.0006475766536874686, 1.1439524776882423e-06]}, {'': [0.006132027680061648, -6.104015035787713e-17], 'true': [0.006132027680061648, nan], 'true,true,true': [0.0005084523209443275, 7.371937754249316e-07], 'true,true': [0.006132027680061648, nan]}, {'': [0.006980439617087232, -3.578404790114141e-17], 'true': [0.0004050611380075872, 9.381402018184224e-07], 'true,false,true': [9.381402018184224e-07, nan], 'true,false': [9.381402018184224e-07, nan]}, {'': [0.006555957825727412, -2.5544954548897407e-17], 'true': [0.006555957825727412, nan], 'true,true': [0.0003280086932239549, 8.551803440402033e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.1418510649004884;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1254446385283918;  // std dev = 0,000, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.11231637819360683;  // std dev = 0,000, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0,000, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2679369803495875;  // std dev = 0,138, 47,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=41 */
%   | | else return 0.2659234814150481;  // std dev = 0,140, 83,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926049;  // std dev = 7,30e-08, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601502;  // std dev = 3,33e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.11401028548544469;  // std dev = 0,413, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.09269127618926094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2645656761901832;  // std dev = 0,062, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.11049532197108637;  // std dev = 0,057, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.09316214821167744;  // std dev = 0,029, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839678;  // std dev = 8,82e-08, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.21424163129966922;  // std dev = 0,032, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | | else return -0.09785355654866293;  // std dev = 0,061, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.1771331948985889;  // std dev = 0,106, 85,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07876926141158327;  // std dev = 0,000993, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18536889078531865;  // std dev = 0,068, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.1074474102136109;  // std dev = 0,075, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07341087136450972;  // std dev = 0,025, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15899613650481806;  // std dev = 0,060, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0880361370489009;  // std dev = 0,045, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0685810715299948;  // std dev = 0,024, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.11079090317039593;  // std dev = 0,066, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   | | else return 0.10897471205954665;  // std dev = 0,082, 86,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06421827729721673;  // std dev = 0,013, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065291
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.437 seconds
Total inference time: 1.152 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067584
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.527 seconds
Refined model CLL: -0.067584


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.488999999999999 seconds
Total inference time: 1.295 seconds
AUC ROC: 1.0
Total revision time: 8.488999999999999
Best scored revision CLL: -0.065363


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:03:40
{'parameter_0.4': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065116, 'Learning time': 2.556, 'Inference time': 1.295}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065116, 'Learning time': 8.488999999999999, 'Inference time': 1.295}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.1418510649004884;  // std dev = 0,000, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.1254446385283918;  // std dev = 0,000, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4,92e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.11231637819360676;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.10159632948783646;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2,11e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.09269127618926057;  // std dev = 6,32e-08, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0851847513883968;  // std dev = 2,04e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.08518475138839678;  // std dev = 8,30e-08, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2,19e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109144;  // std dev = 5,77e-08, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07324622576333671;  // std dev = 1,16e-07, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06842697784420261;  // std dev = 6,14e-08, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0641918400820262;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.06419184008202626;  // std dev = 0,000, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.895 seconds
Total inference time: 1.108 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:03:44
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 2.895, 'Inference time': 1.108}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048846;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.996 seconds
Total inference time: 0.752 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:03:46
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 0.996, 'Inference time': 0.752}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 2,38e-07, 364,000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0,000, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 4,41e-08, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360663;  // std dev = 0,000, 342,000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583101;  // std dev = 1,90e-08, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 9,66e-08, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.3207118471601492;  // std dev = 3,32e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06119389536263896;  // std dev = 0,110, 420,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=32 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2676894199140304;  // std dev = 0,410, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08573063955745774;  // std dev = 0,007, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08767157526967431;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08767157526967402;  // std dev = 1,21e-07, 340,000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2187461368821925;  // std dev = 0,362, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.079093344190084;  // std dev = 0,004, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08090797306059104;  // std dev = 9,88e-08, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18377965633587987;  // std dev = 0,321, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.0735574103874508;  // std dev = 0,005, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07509188816940962;  // std dev = 0,000, 374,000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15787384018607137;  // std dev = 0,286, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06904778103825793;  // std dev = 0,006, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07004008624316044;  // std dev = 0,000, 370,000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13805391974499637;  // std dev = 0,258, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.0646935320924397;  // std dev = 0,006, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06561318533668029;  // std dev = 1,32e-07, 395,000 (wgt'ed) examples reached here.  /* #neg=395 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065159
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.597 seconds
Total inference time: 1.495 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065415
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.007 seconds
Parameter learned model CLL: -0.065415


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [4.08e-08, 40, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.08e-06, 0, 202], 'false': [2.38e-07, 364, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 42, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 202], 'false': [0.0, 376, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [2.98e-08, 50, 0], 'true,true': [4.41e-08, 0, 202], 'false': [0.0, 342, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.9e-08, 0, 202], 'true,true,false,true': [0.0, 32, 0], 'true,false': [0.0, 0, 0], 'false': [9.66e-08, 359, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [3.32e-07, 0, 170], 'true,true,false,true': [9.13e-09, 25, 0], 'true,false': [0.0, 0, 0], 'false': [0.11, 388, 32], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.41, 0, 202], 'false,false': [1.21e-07, 340, 0], 'true,true,false,true': [0.007, 41, 0], 'true,false': [0.0, 13, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.362, 0, 202], 'true,true,false,true': [0.004, 26, 0], 'true,false': [0.0, 0, 0], 'false': [9.88e-08, 337, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.005, 41, 0], 'false': [0.0, 374, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.321, 0, 202]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.006, 38, 0], 'true,true': [0.286, 0, 202], 'false': [0.0, 370, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.258, 0, 202], 'true,false': [0.0, 0, 0], 'true,true,false': [0.006, 44, 0], 'false': [1.32e-07, 395, 0]}]]
[{'': [0.13796871798374963, 1.5616323862859346e-16], 'true': [5.768762805181012e-15, 4.163336342344337e-17], 'true,false,true': [4.163336342344337e-17, nan], 'true,false': [4.163336342344337e-17, nan], 'true,true': [5.768762805181012e-15, nan]}, {'': [0.10173026692680659, -1.1810883240693154e-16], 'true': [-3.728590593592605e-15, -2.6433881538694202e-17], 'true,false,true': [-2.6433881538694202e-17, nan], 'true,false': [-2.6433881538694202e-17, nan], 'true,true': [-3.728590593592605e-15, nan]}, {'': [0.07090235965919216, -3.635818092339694e-17], 'true': [2.0049968286299855e-15, 1.7763568394002505e-17], 'true,false,true': [1.7763568394002505e-17, nan], 'true,false': [1.7763568394002505e-17, nan]}, {'': [0.03181180258253101, 2.5977363250282213e-17], 'true': [0.03181180258253101, nan], 'true,true,false': [-1.734723475976807e-18, nan], 'true,true': [3.5175382958420803e-16, -1.734723475976807e-18]}, {'': [0.019101488630610848, 0.012029030612114189], 'true': [0.019101488630610848, nan], 'true,true,false': [3.3306690738754695e-18, nan], 'true,true': [6.478477884871501e-16, 3.3306690738754695e-18]}, {'': [0.021501778608565315, 4.310277625015314e-17], 'true': [0.01821092917392635, -2.135044278125301e-18], 'true,true,false': [1.059533842216776e-06, nan], 'true,true': [0.0008323610585845408, 1.059533842216776e-06], 'true,true,true': [0.0008323610585845408, nan], 'false': [nan, 4.310277625015314e-17]}, {'': [0.009537675180197651, 2.8990986993179164e-17], 'true': [0.009537675180197651, nan], 'true,true,true': [0.0006493417069341572, nan], 'true,true,false': [6.978157040474006e-07, nan], 'true,true': [0.0006493417069341572, 6.978157040474006e-07]}, {'': [0.00971196103319159, -1.0567898309266196e-16], 'true': [0.00971196103319159, nan], 'true,true,true': [0.0005097449001995036, 6.638977261925046e-07], 'true,true': [0.00971196103319159, nan]}, {'': [0.007204102963723748, -3.0606148246423236e-17], 'true': [0.00040603004127331814, 9.304454996845209e-07], 'true,false,true': [9.304454996845209e-07, nan], 'true,false': [9.304454996845209e-07, nan]}, {'': [0.0063074201245640095, 4.4408920985006264e-17], 'true': [0.0063074201245640095, nan], 'true,true': [0.00032875293344671085, 7.957985489287752e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.1418510649004876;  // std dev = 2,06e-07, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.12544463852839213;  // std dev = 0,000, 339,000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6,36e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.11231637819360654;  // std dev = 0,000, 357,000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583102;  // std dev = 1,52e-07, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.3506585195220638;  // std dev = 0,174, 132,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=115 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 1,07e-07, 358,000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.25480700140879464;  // std dev = 0,151, 69,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=58 */
%   | | else return 0.2461790607473433;  // std dev = 0,185, 138,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=112 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601499;  // std dev = 4,21e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08980716556965421;  // std dev = 0,745, 382,000 (wgt'ed) examples reached here.  /* #neg=379 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2757272412684416;  // std dev = 0,202, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.13846890962103522;  // std dev = 0,180, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.08540977430883;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08540977430882965;  // std dev = 1,49e-07, 344,000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1531695120637577;  // std dev = 0,123, 108,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=87 */
%   | | else return 0.18734430749191577;  // std dev = 0,121, 131,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=115 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07896994359619823;  // std dev = 0,000, 361,000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.19558030162080495;  // std dev = 0,136, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.14079795531476247;  // std dev = 0,159, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0734137902236317;  // std dev = 0,000, 368,000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16664103975388084;  // std dev = 0,121, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.13032337620905002;  // std dev = 0,126, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.06857362993990139;  // std dev = 0,000, 376,000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1447753504882302;  // std dev = 0,108, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.10742503613298968;  // std dev = 0,173, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06432121558940547;  // std dev = 0,000, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065667
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.652 seconds
Total inference time: 1.17 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068181
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.678 seconds
Refined model CLL: -0.068181


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065159
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.934000000000001 seconds
Total inference time: 1.495 seconds
AUC ROC: 1.0
Total revision time: 8.934000000000001
Best scored revision CLL: -0.065415


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:03:58
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'parameter_0.6': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065159, 'Learning time': 2.597, 'Inference time': 1.495}, 'CLL': -0.065159, 'Learning time': 8.934000000000001, 'Inference time': 1.495}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048757;  // std dev = 2,21e-07, 347,000 (wgt'ed) examples reached here.  /* #neg=347 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.858148935099512;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else if ( actor(A) )
%   | | | then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109568;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.12544463852839222;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 6,08e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.11231637819360682;  // std dev = 0,000, 352,000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831;  // std dev = 2,23e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.10159632948783656;  // std dev = 0,000, 351,000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014894;  // std dev = 4,00e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.09269127618926051;  // std dev = 1,79e-07, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694884;  // std dev = 2,38e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.08518475138839678;  // std dev = 1,07e-07, 361,000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 2,89e-07, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07877675473109147;  // std dev = 3,65e-08, 367,000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527766;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.07324622576333711;  // std dev = 6,66e-08, 359,000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367153;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.06842697784420321;  // std dev = 0,000, 377,000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801087;  // std dev = 9,66e-08, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.06419184008202601;  // std dev = 1,04e-07, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.616 seconds
Total inference time: 1.165 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:04:03
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 3.616, 'Inference time': 1.165}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1,08e-06, 202,000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.1418510649004877;  // std dev = 1,66e-07, 372,000 (wgt'ed) examples reached here.  /* #neg=372 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.304 seconds
Total inference time: 0.782 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:04:05
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 1.304, 'Inference time': 0.782}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048724;  // std dev = 2,83e-07, 476,000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0,000, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 2,11e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360588;  // std dev = 0,000, 504,000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783587;  // std dev = 2,38e-07, 427,000 (wgt'ed) examples reached here.  /* #neg=427 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 3,04e-07, 230,000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06321646483528075;  // std dev = 0,106, 547,000 (wgt'ed) examples reached here.  /* #neg=508 #pos=39 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.26669317119934266;  // std dev = 0,459, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08570673123952631;  // std dev = 0,007, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08750993436161016;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0875099343616107;  // std dev = 0,000, 499,000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21803657433956825;  // std dev = 0,406, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07942250293027124;  // std dev = 0,006, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08076969880713142;  // std dev = 5,58e-08, 489,000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18325617954665716;  // std dev = 0,360, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.07374531593428524;  // std dev = 0,006, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07497233203434675;  // std dev = 1,40e-07, 515,000 (wgt'ed) examples reached here.  /* #neg=515 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1574748406424446;  // std dev = 0,321, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06893947386798768;  // std dev = 0,006, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0699357412330162;  // std dev = 0,000, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13774112399361993;  // std dev = 0,289, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.06443398770488751;  // std dev = 0,005, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06552135943423101;  // std dev = 0,000, 471,000 (wgt'ed) examples reached here.  /* #neg=471 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.027 seconds
Total inference time: 1.353 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065325
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.092 seconds
Parameter learned model CLL: -0.065325


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [5.58e-08, 53, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.07e-06, 0, 269], 'false': [2.83e-07, 476, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 269], 'false': [0.0, 487, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [0.0, 37, 0], 'true,true': [2.11e-08, 0, 269], 'false': [0.0, 504, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 39, 0], 'true,false': [0.0, 0, 0], 'false': [2.38e-07, 427, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [3.04e-07, 0, 230], 'true,true,false,true': [0.0, 36, 0], 'true,false': [0.0, 0, 0], 'false': [0.106, 508, 39], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.459, 0, 269], 'false,false': [0.0, 499, 0], 'true,true,false,true': [0.007, 49, 0], 'true,false': [0.0, 12, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.406, 0, 269], 'true,true,false,true': [0.006, 38, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 489, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.006, 42, 0], 'false': [1.4e-07, 515, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.36, 0, 269]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.006, 43, 0], 'true,true': [0.321, 0, 269], 'false': [0.0, 488, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.289, 0, 269], 'true,false': [0.0, 0, 0], 'true,true,false': [0.005, 48, 0], 'false': [0.0, 471, 0]}]]
[{'': [0.1375043401103392, 1.679328944811161e-16], 'true': [4.226276495227362e-15, 5.86532918669894e-17], 'true,false,true': [5.86532918669894e-17, nan], 'true,false': [5.86532918669894e-17, nan], 'true,true': [4.226276495227362e-15, nan]}, {'': [0.08624729007683692, -1.3131179921644562e-16], 'true': [-4.5432472323694135e-15, -2.7755575615628914e-17], 'true,false,true': [-2.7755575615628914e-17, nan], 'true,false': [-2.7755575615628914e-17, nan], 'true,true': [-4.5432472323694135e-15, nan]}, {'': [0.04738616341595517, -5.28677630773884e-18], 'true': [4.754561057130781e-16, -9.00180830777154e-18], 'true,false,true': [-9.00180830777154e-18, nan], 'true,false': [-9.00180830777154e-18, nan]}, {'': [0.029801223854759286, 1.3312276079814523e-16], 'true': [0.029801223854759286, nan], 'true,true,false': [-8.540177112501205e-18, nan], 'true,true': [-5.018703338082492e-16, -8.540177112501205e-18]}, {'': [0.019999289657852245, 0.01131621456951741], 'true': [0.019999289657852245, nan], 'true,true,false': [-9.25185853854297e-18, nan], 'true,true': [4.0161111151657836e-16, -9.25185853854297e-18]}, {'': [0.019388248199126067, -1.254841254285748e-16], 'true': [0.01684928004279447, 0.0], 'true,true,false': [9.412356972239775e-07, nan], 'true,true': [0.000782777261376323, 9.412356972239775e-07], 'true,true,true': [0.000782777261376323, nan], 'false': [nan, -1.254841254285748e-16]}, {'': [0.01013238625655778, 6.357105253477379e-18], 'true': [0.01013238625655778, nan], 'true,true,true': [0.0006114266960466617, nan], 'true,true,false': [1.0125633539247097e-06, nan], 'true,true': [0.0006114266960466617, 1.0125633539247097e-06]}, {'': [0.00813104033010623, 3.7941602394956805e-17], 'true': [0.00813104033010623, nan], 'true,true,true': [0.00048053579085244634, 8.361277710094719e-07], 'true,true': [0.00813104033010623, nan]}, {'': [0.006421880039063345, -5.3691113485970683e-17], 'true': [0.000383145341549908, 7.928458729402724e-07], 'true,false,true': [7.928458729402724e-07, nan], 'true,false': [7.928458729402724e-07, nan]}, {'': [0.005515620205032703, -7.637202971943752e-17], 'true': [0.005515620205032703, nan], 'true,true': [0.0003104852875550285, 5.285129765723179e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048777;  // std dev = 0,000, 521,000 (wgt'ed) examples reached here.  /* #neg=521 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.12544463852839224;  // std dev = 0,000, 485,000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.11231637819360599;  // std dev = 0,000, 457,000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878354;  // std dev = 3,55e-07, 521,000 (wgt'ed) examples reached here.  /* #neg=521 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 3,04e-07, 230,000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | | else return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0926912761892614;  // std dev = 0,000, 487,000 (wgt'ed) examples reached here.  /* #neg=487 */
%   | else if ( actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2,98e-08, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.08518475138839679;  // std dev = 2,24e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.08518475138839693;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.08518475138839678;  // std dev = 1,37e-07, 455,000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109212;  // std dev = 0,000, 527,000 (wgt'ed) examples reached here.  /* #neg=527 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 1,12e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07324622576333704;  // std dev = 1,29e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333717;  // std dev = 5,96e-08, 466,000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1527438580936717;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0684269778442027;  // std dev = 1,18e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06842697784420324;  // std dev = 0,000, 471,000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13400703000801112;  // std dev = 7,60e-08, 117,000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | | else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.10043235802554598;  // std dev = 0,074, 183,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=152 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202565;  // std dev = 2,03e-07, 478,000 (wgt'ed) examples reached here.  /* #neg=478 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063985
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.967 seconds
Total inference time: 1.18 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064634
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.12 seconds
Refined model CLL: -0.064634


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063985
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.206 seconds
Total inference time: 1.18 seconds
AUC ROC: 1.0
Total revision time: 10.206
Best scored revision CLL: -0.064634


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:04:19
{'parameter_0.8': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065085, 'Learning time': 3.027, 'Inference time': 1.353}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063985, 'Learning time': 10.206, 'Inference time': 1.18}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1418510649004875;  // std dev = 1,88e-07, 490,000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.1254446385283923;  // std dev = 0,000, 488,000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3,58e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360595;  // std dev = 0,000, 496,000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783621;  // std dev = 4,08e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1015963294878358;  // std dev = 2,68e-07, 495,000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.09269127618926126;  // std dev = 0,000, 474,000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3,37e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.08518475138839678;  // std dev = 1,37e-07, 526,000 (wgt'ed) examples reached here.  /* #neg=526 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2,86e-07, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109201;  // std dev = 0,000, 507,000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9,42e-08, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333721;  // std dev = 0,000, 467,000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06842697784420344;  // std dev = 0,000, 474,000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06419184008202562;  // std dev = 2,06e-07, 492,000 (wgt'ed) examples reached here.  /* #neg=492 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.669 seconds
Total inference time: 1.142 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:04:24
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 3.669, 'Inference time': 1.142}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995086;  // std dev = 1,07e-06, 269,000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.1418510649004873;  // std dev = 2,70e-07, 481,000 (wgt'ed) examples reached here.  /* #neg=481 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.269 seconds
Total inference time: 0.735 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:04:26
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 1.269, 'Inference time': 0.735}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,false;publication(H, B), ta(I, A, J).;false;false
0;true,false,true;publication(E, G), professor(G).;false;false
0;true,false;publication(E, A), publication(F, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;false;true
1;true,false,false;projectmember(L, B).;false;false
1;true,false,true;publication(K, A).;false;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,true;tempadvisedby(D, B).;false;true
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false;publication(G, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A).;true;true
3;true,true,false;publication(C, G), ta(H, G, I).;false;false
3;true,true;publication(C, B).;true;true
3;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
3;true,false,true;ta(M, A, N).;false;false
3;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
3;true,false,false;tempadvisedby(P, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;publication(D, B).;true;true
4;true,true,false;publication(E, A), tempadvisedby(F, B).;false;false
4;true,true;publication(D, A).;false;true
4;true,false,false;publication(K, A).;false;false
4;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,false;projectmember(G, B).;true;true
4;false;ta(L, A, M).;false;false
5;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
5;true;student(A).;true;false
5;false,true;student(A), projectmember(I, B).;false;true
5;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
5;true,true;publication(C, A).;true;true
5;true,true,true;publication(C, D), tempadvisedby(D, E).;false;false
5;false,true,false;tempadvisedby(J, B).;false;false
5;false;professor(B), publication(H, A).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B).;true;true
6;true,true,false;publication(F, A).;false;false
6;true,true;publication(C, A).;true;true
6;true,true,true;tempadvisedby(D, B), publication(E, D).;false;false
6;true,false;ta(G, A, H).;false;true
6;true,false,false;publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B).;true;true
7;true,true,false;publication(C, E), inphase(E, F).;false;false
7;true,true;publication(D, A).;true;true
7;true,true,true;publication(C, A).;false;false
7;true,false;tempadvisedby(G, B), ta(H, A, I).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, B), publication(C, A).;false;true
8;true,false,true;ta(G, H, E), publication(F, H).;false;false
8;true,false;ta(D, A, E), publication(F, B).;true;true
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true,false;publication(C, A).;false;false
9;true,true;ta(D, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;tempadvisedby(I, B).;false;false
9;true,false;publication(J, B), publication(J, A).;false;true
9;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0,000, 602,000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0,000, 627,000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360644;  // std dev = 0,000, 689,000 (wgt'ed) examples reached here.  /* #neg=689 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783519;  // std dev = 4,06e-07, 578,000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32071184716015066;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | else if ( movie(E, A) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06294567700552928;  // std dev = 0,107, 681,000 (wgt'ed) examples reached here.  /* #neg=632 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.2667177152053958;  // std dev = 0,514, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.08587725220521601;  // std dev = 0,008, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08753155971206186;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08753155971206185;  // std dev = 2,02e-07, 593,000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21805394011919554;  // std dev = 0,454, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.07931168070812988;  // std dev = 0,007, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08078820004572591;  // std dev = 2,56e-07, 641,000 (wgt'ed) examples reached here.  /* #neg=641 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18326891654645455;  // std dev = 0,403, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.07364580311254253;  // std dev = 0,006, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0749883303014636;  // std dev = 0,000, 603,000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15748449874202738;  // std dev = 0,359, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.06894960703176474;  // std dev = 0,006, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06994970521797465;  // std dev = 0,000, 601,000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.13774866041720188;  // std dev = 0,324, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06447581405586393;  // std dev = 0,006, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06553364896590087;  // std dev = 0,000, 612,000 (wgt'ed) examples reached here.  /* #neg=612 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065095
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.801 seconds
Total inference time: 1.283 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065343
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.706 seconds
Parameter learned model CLL: -0.065343


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,false,true,true': [6.32e-08, 63, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.04e-06, 0, 337], 'false': [0.0, 602, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)', 'true,false': 'movie(F, G)', 'true,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 48, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 337], 'false': [0.0, 627, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,true': [3.94e-08, 56, 0], 'true,true': [0.0, 0, 337], 'false': [0.0, 689, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,false': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [3.65e-08, 54, 0], 'true,false': [0.0, 0, 0], 'false': [4.06e-07, 578, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 288], 'true,true,false,true': [0.0, 35, 0], 'true,false': [0.0, 0, 0], 'false': [0.107, 632, 49], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(C, D)', 'false': 'director(B), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.514, 0, 337], 'false,false': [2.02e-07, 593, 0], 'true,true,false,true': [0.008, 61, 0], 'true,false': [1.05e-08, 21, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.454, 0, 337], 'true,true,false,true': [0.007, 56, 0], 'true,false': [0.0, 0, 0], 'false': [2.56e-07, 641, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.006, 55, 0], 'false': [0.0, 603, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.403, 0, 337]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,true': [0.006, 49, 0], 'true,true': [0.359, 0, 337], 'false': [0.0, 601, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.324, 0, 337], 'true,false': [0.0, 0, 0], 'true,true,false': [0.006, 70, 0], 'false': [0.0, 612, 0]}]]
[{'': [0.13269375000000302, -3.0982968129074137e-16], 'true': [3.204821834882351e-15, 6.344131569286608e-17], 'true,false,true': [6.344131569286608e-17, nan], 'true,false': [6.344131569286608e-17, nan], 'true,true': [3.204821834882351e-15, nan]}, {'': [0.07790742604578371, -2.748111856807405e-16], 'true': [-5.144582419153248e-15, -3.0068540250264654e-17], 'true,false,true': [-3.0068540250264654e-17, nan], 'true,false': [-3.0068540250264654e-17, nan], 'true,true': [-5.144582419153248e-15, nan]}, {'': [0.05447198779053345, -1.7273716725662812e-16], 'true': [-5.90361916952012e-16, 2.7755575615628914e-17], 'true,false,true': [2.7755575615628914e-17, nan], 'true,false': [2.7755575615628914e-17, nan]}, {'': [0.03207663420769805, 2.858152008031545e-16], 'true': [0.03207663420769805, nan], 'true,true,false': [2.4671622769447922e-17, nan], 'true,true': [-9.90964646312306e-16, 2.4671622769447922e-17]}, {'': [0.016512126018096974, 0.011412122937654935], 'true': [0.016512126018096974, nan], 'true,true,false': [-9.516197353929913e-18, nan], 'true,true': [-1.7270135938613546e-16, -9.516197353929913e-18]}, {'': [0.020246429862894138, 6.889748280979049e-17], 'true': [0.01679770174547963, 5.28677630773884e-18], 'true,true,false': [1.1456092997665886e-06, nan], 'true,true': [0.000783465433782166, 1.1456092997665886e-06], 'true,true,true': [0.000783465433782166, nan], 'false': [nan, 6.889748280979049e-17]}, {'': [0.011329607790316866, 1.0253541818690994e-16], 'true': [0.011329607790316866, nan], 'true,true,true': [0.0006119300420303325, nan], 'true,true,false': [9.359484423420479e-07, nan], 'true,true': [0.0006119300420303325, 9.359484423420479e-07]}, {'': [0.008375104892628627, -2.798572135041854e-17], 'true': [0.008375104892628627, nan], 'true,true,true': [0.00048090893110909797, 7.532440355319878e-07], 'true,true': [0.008375104892628627, nan]}, {'': [0.006017299924523448, -3.325127195216775e-17], 'true': [0.00038342820498075855, 8.089398661068116e-07], 'true,false,true': [8.089398661068116e-07, nan], 'true,false': [8.089398661068116e-07, nan]}, {'': [0.006081166972385947, -2.3945986805640632e-17], 'true': [0.006081166972385947, nan], 'true,true': [0.00031070478060031363, 5.756263855682953e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), movie(C, B).;true;true
5;true;actor(A).;true;true
5;true,true;movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6,50e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.14185106490048865;  // std dev = 0,000, 628,000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839233;  // std dev = 0,000, 639,000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.112316378193606;  // std dev = 0,000, 626,000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583089;  // std dev = 4,42e-07, 147,000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.35715196629247925;  // std dev = 0,166, 215,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=190 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783502;  // std dev = 4,55e-07, 631,000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32915648141443565;  // std dev = 0,109, 288,000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | else return -0.12077591036297745;  // std dev = 0,149, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), female(A) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.3207118471601506;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08871477108248668;  // std dev = 1,133, 646,000 (wgt'ed) examples reached here.  /* #neg=639 #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.2621523363125423;  // std dev = 0,266, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10618241649523656;  // std dev = 0,161, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.08549514529954988;  // std dev = 9,13e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08549514529954862;  // std dev = 3,37e-07, 624,000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2147220378357147;  // std dev = 0,236, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09782993662771869;  // std dev = 0,152, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07904321919434681;  // std dev = 2,95e-07, 602,000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18075875227006932;  // std dev = 0,210, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08887690265236019;  // std dev = 0,141, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0734773329886599;  // std dev = 2,13e-07, 597,000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1555364009615632;  // std dev = 0,188, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08239168671261093;  // std dev = 0,124, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06862923193302277;  // std dev = 0,000, 598,000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1361973556556097;  // std dev = 0,170, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07623978359390579;  // std dev = 0,123, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06437025906527494;  // std dev = 1,43e-07, 636,000 (wgt'ed) examples reached here.  /* #neg=636 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.88 seconds
Total inference time: 1.136 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065218
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.765 seconds
Refined model CLL: -0.065218


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.152000000000001 seconds
Total inference time: 1.136 seconds
AUC ROC: 1.0
Total revision time: 12.152000000000001
Best scored revision CLL: -0.065218


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:04:41
{'parameter_1.0': {'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065095, 'Learning time': 3.801, 'Inference time': 1.283}, 'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064432, 'Learning time': 12.152000000000001, 'Inference time': 1.136}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.14185106490048827;  // std dev = 0,000, 588,000 (wgt'ed) examples reached here.  /* #neg=588 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.12544463852839235;  // std dev = 0,000, 618,000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360626;  // std dev = 4,94e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.11231637819360607;  // std dev = 0,000, 634,000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783627;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.1015963294878353;  // std dev = 4,12e-07, 657,000 (wgt'ed) examples reached here.  /* #neg=657 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.09269127618926185;  // std dev = 0,000, 633,000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4,00e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.08518475138839678;  // std dev = 1,55e-07, 634,000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2,49e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.0787767547310924;  // std dev = 0,000, 594,000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2,92e-07, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07324622576333671;  // std dev = 2,15e-07, 654,000 (wgt'ed) examples reached here.  /* #neg=654 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06842697784420367;  // std dev = 0,000, 620,000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.06419184008202536;  // std dev = 2,49e-07, 670,000 (wgt'ed) examples reached here.  /* #neg=670 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.388 seconds
Total inference time: 1.039 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:04:47
{'Precision': [1.0, 0.5], 'F1': 1.0, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063719, 'Learning time': 4.388, 'Inference time': 1.039}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1,04e-06, 337,000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.14185106490048868;  // std dev = 0,000, 641,000 (wgt'ed) examples reached here.  /* #neg=641 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.422 seconds
Total inference time: 0.746 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:04:49
{'Precision': [nan, 0.5], 'F1': nan, 'AUC PR': 1.0, 'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.158221, 'Learning time': 1.422, 'Inference time': 0.746}


